{
 "flask_user": {
  "data": {},
  "type": "module"
 },
 "flask_user.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "flask_user.CryptContext": {
  "data": {
   "shadows": "passlib.context.CryptContext"
  },
  "type": "import"
 },
 "flask_user.DBAdapter": {
  "data": {
   "shadows": "flask_user.db_adapters.DBAdapter"
  },
  "type": "import"
 },
 "flask_user.LoginManager": {
  "data": {
   "shadows": "flask_login.LoginManager"
  },
  "type": "import"
 },
 "flask_user.LoginUserMixin": {
  "data": {
   "shadows": "flask_login.UserMixin"
  },
  "type": "import"
 },
 "flask_user.UserManager": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_user.UserManager.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "flask_user.UserManager.add_url_routes": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "flask_user.UserManager.email_is_available": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "flask_user.UserManager.find_user_by_email": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.find_user_by_id": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.find_user_by_username": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.find_user_email_by_id": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.generate_password_hash": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "flask_user.UserManager.generate_token": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "flask_user.UserManager.get_password": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.get_user_by_id": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "flask_user.UserManager.get_user_email_by_id": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "flask_user.UserManager.hash_password": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "flask_user.UserManager.init_app": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask.Blueprint",
    "flask.render_template",
    "flask_login.LoginManager",
    "flask_user._flask_user_context_processor",
    "get_translations",
    "hasattr",
    "passlib.context.CryptContext"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.send_reset_password_email": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask.url_for",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.setup_login_manager": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "flask_user.UserManager.setup_login_manager.load_user_by_id": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.update_password": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.username_is_available": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "flask_login.current_user",
    "flask_login.current_user.is_authenticated",
    "flask_login.current_user.user_auth.username",
    "flask_login.current_user.username",
    "flask_user._call_or_get",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.verify_password": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "legacy_check"
   ]
  },
  "type": "function"
 },
 "flask_user.UserManager.verify_token": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "flask_user.UserMixin": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "flask_login.UserMixin"
   ]
  },
  "type": "class"
 },
 "flask_user.UserMixin.get_auth_token": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "flask.current_app.user_manager.token_manager",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.UserMixin.has_confirmed_email": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "flask.current_app.user_manager.db_adapter"
   ]
  },
  "type": "function"
 },
 "flask_user.UserMixin.has_role": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserMixin.has_roles": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "flask_user.UserMixin.is_active": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.UserMixin.set_active": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.__version__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "flask_user._call_or_get": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "callable",
    "function_or_property"
   ]
  },
  "type": "function"
 },
 "flask_user._flask_user_context_processor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "flask.current_app.user_manager",
    "flask_user._call_or_get"
   ]
  },
  "type": "function"
 },
 "flask_user.access": {
  "data": {},
  "type": "module"
 },
 "flask_user.access._call_or_get": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "callable",
    "function_or_property"
   ]
  },
  "type": "function"
 },
 "flask_user.access.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.access.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.access.is_authenticated": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flask_login.current_user.is_authenticated",
    "flask_user.access._call_or_get"
   ]
  },
  "type": "function"
 },
 "flask_user.access.is_confirmed_email": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_login.current_user.has_confirmed_email"
   ]
  },
  "type": "function"
 },
 "flask_user.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.db_adapters": {
  "data": {},
  "type": "module"
 },
 "flask_user.db_adapters.DBAdapter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_user.db_adapters.DBAdapter.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "flask_user.db_adapters.DBAdapter"
   ]
  },
  "type": "class"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask_user.db_adapters.SQLAlchemyAdapter",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.add_object": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ObjectClass",
    "object"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.commit": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.delete_object": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.find_all_objects": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "KeyError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.find_first_object": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.get_object": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.ifind_first_object": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "KeyError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.SQLAlchemyAdapter.update_object": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "object",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "flask_user.db_adapters.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.db_adapters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "flask_user.db_adapters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.decorators": {
  "data": {},
  "type": "module"
 },
 "flask_user.decorators._call_or_get": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "callable",
    "function_or_property"
   ]
  },
  "type": "function"
 },
 "flask_user.decorators.confirm_email_required": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "flask_user.decorators.confirm_email_required.decorated_view": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.current_app.user_manager.unconfirmed_email_view_function",
    "func",
    "functools.wraps",
    "is_authenticated",
    "is_confirmed_email"
   ]
  },
  "type": "function"
 },
 "flask_user.decorators.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.decorators.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.decorators.login_required": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "flask_user.decorators.login_required.decorated_view": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "flask.current_app.user_manager.unauthenticated_view_function",
    "func",
    "functools.wraps",
    "is_authenticated"
   ]
  },
  "type": "function"
 },
 "flask_user.decorators.roles_accepted": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "flask_user.decorators.roles_accepted.wrapper": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "flask_user.decorators.roles_accepted.wrapper.decorated_view": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask.current_app.user_manager.unauthenticated_view_function",
    "flask.current_app.user_manager.unauthorized_view_function",
    "flask_login.current_user.has_role",
    "func",
    "functools.wraps",
    "is_authenticated"
   ]
  },
  "type": "function"
 },
 "flask_user.decorators.roles_required": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "flask_user.decorators.roles_required.wrapper": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "flask_user.decorators.roles_required.wrapper.decorated_view": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flask.current_app.user_manager.unauthenticated_view_function",
    "flask.current_app.user_manager.unauthorized_view_function",
    "flask_login.current_user.has_roles",
    "func",
    "functools.wraps",
    "is_authenticated"
   ]
  },
  "type": "function"
 },
 "flask_user.decorators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_user.emails": {
  "data": {},
  "type": "module"
 },
 "flask_user.emails.Message": {
  "data": {
   "shadows": "flask_mail.Message"
  },
  "type": "import"
 },
 "flask_user.emails._render_email": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "flask.render_template"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.emails.get_primary_user_email": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "flask_user.emails.send_confirm_email_email": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_email": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "SendEmailError",
    "flask.current_app.extensions.get",
    "flask.current_app.testing",
    "flask_mail.Message",
    "flask_user.emails.smtplib",
    "flask_user.emails.socket"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_email.SendEmailError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_user.emails.send_forgot_password_email": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_invite_email": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_password_changed_email": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email",
    "flask_user.emails.get_primary_user_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_registered_email": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.send_username_changed_email": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.emails._render_email",
    "flask_user.emails.get_primary_user_email"
   ]
  },
  "type": "function"
 },
 "flask_user.emails.smtplib": {
  "data": {
   "shadows": "smtplib"
  },
  "type": "import"
 },
 "flask_user.emails.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "flask_user.forms": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "flask_user.forms.AddEmailForm": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flask_user.forms.unique_email_validator",
    "flask_wtf.Form",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.BooleanField": {
  "data": {
   "shadows": "wtforms.BooleanField"
  },
  "type": "import"
 },
 "flask_user.forms.ChangePasswordForm": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "next",
    "wtforms.HiddenField",
    "wtforms.PasswordField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.EqualTo"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.ChangePasswordForm.validate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "delattr",
    "flask.current_app.user_manager",
    "flask_login.current_user",
    "flask_user.forms.ChangePasswordForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.ChangeUsernameForm": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "flask_user.forms.unique_username_validator",
    "flask_wtf.Form",
    "next",
    "wtforms.HiddenField",
    "wtforms.PasswordField",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.ChangeUsernameForm.validate": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_login.current_user",
    "flask_user.forms.ChangeUsernameForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.FlaskForm": {
  "data": {
   "shadows": "flask_wtf.Form"
  },
  "type": "import"
 },
 "flask_user.forms.ForgotPasswordForm": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.ForgotPasswordForm.validate_email": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.HiddenField": {
  "data": {
   "shadows": "wtforms.HiddenField"
  },
  "type": "import"
 },
 "flask_user.forms.InviteForm": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "next",
    "wtforms.HiddenField",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.LoginForm": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "next",
    "wtforms.BooleanField",
    "wtforms.HiddenField",
    "wtforms.PasswordField",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.LoginForm.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.forms.LoginForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.LoginForm.validate": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "delattr",
    "flask.current_app.user_manager",
    "flask_user.forms.LoginForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.PasswordField": {
  "data": {
   "shadows": "wtforms.PasswordField"
  },
  "type": "import"
 },
 "flask_user.forms.RegisterForm": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "flask_user.forms.unique_email_validator",
    "flask_user.forms.unique_username_validator",
    "flask_wtf.Form",
    "next",
    "wtforms.HiddenField",
    "wtforms.PasswordField",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email",
    "wtforms.validators.EqualTo"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.RegisterForm.validate": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "delattr",
    "flask.current_app.user_manager",
    "flask_user.forms.RegisterForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.ResendConfirmEmailForm": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Email"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.ResetPasswordForm": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "flask_wtf.Form",
    "next",
    "wtforms.HiddenField",
    "wtforms.PasswordField",
    "wtforms.SubmitField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.EqualTo"
   ]
  },
  "type": "class"
 },
 "flask_user.forms.ResetPasswordForm.validate": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "delattr",
    "flask.current_app.user_manager",
    "flask_user.forms.ResetPasswordForm",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "flask_user.forms.SubmitField": {
  "data": {
   "shadows": "wtforms.SubmitField"
  },
  "type": "import"
 },
 "flask_user.forms.ValidationError": {
  "data": {
   "shadows": "wtforms.ValidationError"
  },
  "type": "import"
 },
 "flask_user.forms._": {
  "data": {
   "shadows": "lazy_gettext"
  },
  "type": "import"
 },
 "flask_user.forms.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.forms.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.forms.password_validator": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "list",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "flask_user.forms.unique_email_validator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.unique_username_validator": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.username_validator": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "list",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_user.forms.validators": {
  "data": {
   "shadows": "wtforms.validators"
  },
  "type": "import"
 },
 "flask_user.passwords": {
  "data": {},
  "type": "module"
 },
 "flask_user.passwords.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "flask_user.passwords.generate_sha512_hmac": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "flask_user.passwords.base64",
    "flask_user.passwords.hashlib",
    "flask_user.passwords.hmac"
   ]
  },
  "type": "function"
 },
 "flask_user.passwords.hash_password": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "flask_user.passwords.generate_sha512_hmac"
   ]
  },
  "type": "function"
 },
 "flask_user.passwords.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "flask_user.passwords.hmac": {
  "data": {
   "shadows": "hmac"
  },
  "type": "import"
 },
 "flask_user.passwords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.passwords.verify_password": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask_user.passwords.generate_sha512_hmac"
   ]
  },
  "type": "function"
 },
 "flask_user.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "flask_user.settings": {
  "data": {},
  "type": "module"
 },
 "flask_user.settings.check_settings": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ConfigurationError"
   ]
  },
  "type": "function"
 },
 "flask_user.settings.check_settings.ConfigurationError": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_user.settings.set_default_settings": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sd"
   ]
  },
  "type": "function"
 },
 "flask_user.signals": {
  "data": {
   "symbols_in_volume": [
    "flask.signals.Namespace",
    "flask_user.signals._signals"
   ]
  },
  "type": "module"
 },
 "flask_user.signals.Namespace": {
  "data": {
   "shadows": "flask.signals.Namespace"
  },
  "type": "import"
 },
 "flask_user.signals._signals": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "flask_user.signals.user_changed_password": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "flask_user.signals.user_changed_username": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "flask_user.signals.user_confirmed_email": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "flask_user.signals.user_forgot_password": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "flask_user.signals.user_logged_in": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "flask_user.signals.user_logged_out": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "flask_user.signals.user_registered": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "flask_user.signals.user_reset_password": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "flask_user.signals.user_sent_invitation": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "flask_user.tests": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "flask_user.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.conftest.TstClient": {
  "data": {
   "shadows": "flask_user.tests.tst_utils.TstClient"
  },
  "type": "import"
 },
 "flask_user.tests.conftest.app": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict",
    "flask_user.tests.conftest.pytest",
    "flask_user.tests.tst_app.app",
    "flask_user.tests.tst_app.app.app_context",
    "flask_user.tests.tst_app.init_app"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.app.teardown": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "flask_user.tests.conftest.client": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flask_user.tests.conftest.db",
    "flask_user.tests.conftest.pytest",
    "flask_user.tests.tst_app.app.test_client",
    "flask_user.tests.tst_utils.TstClient"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.db": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask_user.tests.conftest.pytest",
    "flask_user.tests.tst_app.app.db",
    "flask_user.tests.tst_app.app.db.create_all"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.db.teardown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.app.db.drop_all"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.init_app": {
  "data": {
   "shadows": "flask_user.tests.tst_app.init_app"
  },
  "type": "import"
 },
 "flask_user.tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "flask_user.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "flask_user.tests.conftest.session": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dict",
    "flask_user.tests.conftest.db",
    "flask_user.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.session.teardown": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask_user.tests.conftest.session"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.conftest.the_app": {
  "data": {
   "shadows": "flask_user.tests.tst_app.app"
  },
  "type": "import"
 },
 "flask_user.tests.test_authorization": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.test_authorization.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.tests.test_authorization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_user.tests.test_authorization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.tests.test_authorization.test_authorization": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_authorization.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.tests.test_authorization.user1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.test_invalid_forms.INVALID_EMAIL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.SHORT_USERNAME": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.invalid_passwords": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.invalid_usernames": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.response_has_string": {
  "data": {
   "shadows": "flask_user.tests.tst_utils.response_has_string"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.test_cleanup": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "flask_user.tests.test_invalid_forms.user1",
    "flask_user.tests.test_invalid_forms.user2",
    "flask_user.tests.test_invalid_forms.user3",
    "flask_user.tests.test_invalid_forms.user4"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_init": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "User",
    "flask.current_app.user_manager",
    "flask_user.tests.test_invalid_forms.user1",
    "flask_user.tests.test_invalid_forms.user2",
    "flask_user.tests.test_invalid_forms.user3",
    "flask_user.tests.test_invalid_forms.user4"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_change_password_form": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.invalid_passwords",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_change_username_form": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.SHORT_USERNAME",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_confirm_email_page": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.time",
    "flask_user.tests.test_invalid_forms.user1",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_forgot_password_form": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.INVALID_EMAIL",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_login_with_email_form": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_login_with_username_form": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_register_with_email_form": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "User",
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.INVALID_EMAIL",
    "flask_user.tests.test_invalid_forms.invalid_passwords",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_register_with_username_form": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "User",
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.SHORT_USERNAME",
    "flask_user.tests.test_invalid_forms.invalid_passwords",
    "flask_user.tests.test_invalid_forms.invalid_usernames",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_reset_password": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.test_invalid_forms.time",
    "flask_user.tests.test_invalid_forms.user1",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_invalid_roles": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "User",
    "User.query.filter",
    "User.username",
    "flask.current_app.user_manager",
    "flask.url_for",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_login_without_confirm_email": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "User",
    "User.email",
    "User.query.filter",
    "datetime.datetime.utcnow",
    "flask.current_app.user_manager",
    "flask.url_for",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.test_valid_roles": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "User",
    "User.query.filter",
    "User.username",
    "flask.current_app.user_manager",
    "flask.url_for",
    "flask_user.tests.tst_utils.response_has_string",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_invalid_forms.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.tests.test_invalid_forms.user1": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.user2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.user3": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "flask_user.tests.test_invalid_forms.user4": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "flask_user.tests.test_multiple_emails": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.test_multiple_emails.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.tests.test_multiple_emails.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_user.tests.test_multiple_emails.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.tests.test_multiple_emails.test_multiple_emails": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.url_for",
    "str.encode"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_multiple_emails.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.tests.test_multiple_emails.user1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "flask_user.tests.test_roles": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.test_roles.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.tests.test_roles.test_roles": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Role",
    "User",
    "flask.current_app.user_manager"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.test_valid_forms.INVITE_USER_EMAIL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "flask_user.tests.test_valid_forms.VALID_EMAIL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "flask_user.tests.test_valid_forms.VALID_PASSWORD": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "flask_user.tests.test_valid_forms.VALID_USERNAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "flask_user.tests.test_valid_forms.check_all_valid_forms": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "check_valid_change_password_form",
    "check_valid_change_username_form",
    "check_valid_confirm_email_page",
    "check_valid_forgot_password_form",
    "check_valid_invite_email",
    "check_valid_login_form",
    "check_valid_logout_link",
    "check_valid_register_form",
    "check_valid_resend_confirm_email_form",
    "check_valid_reset_password_page",
    "delete_valid_user",
    "delete_valid_user_invite"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_change_password_form": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_PASSWORD",
    "flask_user.tests.test_valid_forms.valid_user",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_change_username_form": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_PASSWORD",
    "flask_user.tests.test_valid_forms.VALID_USERNAME",
    "flask_user.tests.test_valid_forms.valid_user",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_confirm_email_page": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.valid_user",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_forgot_password_form": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_EMAIL",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_invite_email": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.INVITE_USER_EMAIL",
    "flask_user.tests.test_valid_forms.valid_user_invite"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_login_form": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_EMAIL",
    "flask_user.tests.test_valid_forms.VALID_PASSWORD",
    "flask_user.tests.test_valid_forms.VALID_USERNAME",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_logout_link": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "flask.url_for",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_register_form": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "User",
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_EMAIL",
    "flask_user.tests.test_valid_forms.VALID_PASSWORD",
    "flask_user.tests.test_valid_forms.VALID_USERNAME",
    "flask_user.tests.test_valid_forms.datetime",
    "flask_user.tests.test_valid_forms.valid_user",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_resend_confirm_email_form": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.VALID_EMAIL",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.check_valid_reset_password_page": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_user.tests.test_valid_forms.valid_user",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.tests.test_valid_forms.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_user.tests.test_valid_forms.delete_valid_user": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "flask_user.tests.test_valid_forms.valid_user"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.delete_valid_user_invite": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "flask_user.tests.test_valid_forms.valid_user_invite"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.do_test_all_possible_config_combinations": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "check_all_valid_forms",
    "flask.current_app.user_manager",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.tests.test_valid_forms.test_with_email": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "check_all_valid_forms",
    "flask.current_app.user_manager",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.test_with_username": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "check_all_valid_forms",
    "flask.current_app.user_manager",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.test_valid_forms.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.tests.test_valid_forms.valid_user": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "flask_user.tests.test_valid_forms.valid_user_invite": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "flask_user.tests.tst_app": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "create_app",
    "flask.Flask",
    "flask_sqlalchemy.SQLAlchemy",
    "flask_user.tests.tst_app.app"
   ]
  },
  "type": "module"
 },
 "flask_user.tests.tst_app.Babel": {
  "data": {
   "shadows": "flask_babel.Babel"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.ConfigClass": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.os",
    "int",
    "object"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.Mail": {
  "data": {
   "shadows": "flask_mail.Mail"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.Role": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.db",
    "id"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.SQLAlchemyAdapter": {
  "data": {
   "shadows": "flask_user.SQLAlchemyAdapter"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.User": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "flask_user.UserMixin",
    "flask_user.tests.tst_app.db",
    "id"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.UserEmail": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.db",
    "id"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.UserInvitation": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.db",
    "id"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.UserManager": {
  "data": {
   "shadows": "flask_user.UserManager"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.UserMixin": {
  "data": {
   "shadows": "flask_user.UserMixin"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.UserRoles": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "flask_user.tests.tst_app.db",
    "id"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_app.app": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "flask_user.tests.tst_app.confirm_email_required": {
  "data": {
   "shadows": "flask_user.confirm_email_required"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.db": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "flask_user.tests.tst_app.init_app": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "__name__",
    "flask_babel.Babel",
    "flask_mail.Mail",
    "flask_user.SQLAlchemyAdapter",
    "flask_user.UserManager",
    "flask_user.tests.tst_app.Role",
    "flask_user.tests.tst_app.User",
    "flask_user.tests.tst_app.UserEmail",
    "flask_user.tests.tst_app.UserInvitation",
    "flask_user.tests.tst_app.app",
    "flask_user.tests.tst_app.datetime",
    "flask_user.tests.tst_app.db"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_app.init_app.home_page": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_user.tests.tst_app.app"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_app.init_app.special_page": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_user.roles_required",
    "flask_user.tests.tst_app.app"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_app.init_app.user_profile_page": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_user.confirm_email_required",
    "flask_user.login_required",
    "flask_user.tests.tst_app.app"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_app.login_required": {
  "data": {
   "shadows": "flask_user.login_required"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.render_template_string": {
  "data": {
   "shadows": "flask.render_template_string"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_user.tests.tst_app.roles_required": {
  "data": {
   "shadows": "flask_user.roles_required"
  },
  "type": "import"
 },
 "flask_user.tests.tst_utils": {
  "data": {},
  "type": "module"
 },
 "flask_user.tests.tst_utils.TstClient": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_user.tests.tst_utils.TstClient.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.get_invalid_page": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_string",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.get_valid_page": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_no_errors"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.login": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "flask.url_for"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.logout": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "flask.url_for"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.post_invalid_form": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_string",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.TstClient.post_valid_form": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_no_errors"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "flask_user.tests.tst_utils.response_has_errors": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_string"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.response_has_no_errors": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_user.tests.tst_utils.response_has_errors",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.response_has_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str.encode"
   ]
  },
  "type": "function"
 },
 "flask_user.tests.tst_utils.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.tokens": {
  "data": {},
  "type": "module"
 },
 "flask_user.tokens.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "flask_user.tokens.BadSignature": {
  "data": {
   "shadows": "itsdangerous.BadSignature"
  },
  "type": "import"
 },
 "flask_user.tokens.SignatureExpired": {
  "data": {
   "shadows": "itsdangerous.SignatureExpired"
  },
  "type": "import"
 },
 "flask_user.tokens.TimestampSigner": {
  "data": {
   "shadows": "itsdangerous.TimestampSigner"
  },
  "type": "import"
 },
 "flask_user.tokens.TokenManager": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_user.tokens.TokenManager.decrypt_id": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "flask_user.tokens.base64",
    "hasattr",
    "int",
    "print"
   ]
  },
  "type": "function"
 },
 "flask_user.tokens.TokenManager.encrypt_id": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_user.tokens.base64",
    "id"
   ]
  },
  "type": "function"
 },
 "flask_user.tokens.TokenManager.generate_token": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "flask_user.tokens.TokenManager.setup": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Crypto.Cipher.AES.MODE_ECB",
    "Crypto.Cipher.AES.new",
    "bytes",
    "isinstance",
    "itsdangerous.TimestampSigner"
   ]
  },
  "type": "function"
 },
 "flask_user.tokens.TokenManager.verify_token": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "itsdangerous.BadSignature",
    "itsdangerous.SignatureExpired"
   ]
  },
  "type": "function"
 },
 "flask_user.tokens.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "flask_user.translations": {
  "data": {
   "symbols_in_volume": [
    "flask_user.translations._",
    "flask_user.translations.lazy_gettext"
   ]
  },
  "type": "module"
 },
 "flask_user.translations._": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "flask_user.translations._home_page": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "flask_user.translations._profile_page": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "flask_user.translations._request_ctx_stack": {
  "data": {
   "shadows": "flask._request_ctx_stack"
  },
  "type": "import"
 },
 "flask_user.translations._special_page": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "flask_user.translations.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.translations.get_locale": {
  "data": {
   "shadows": "flask_babel.get_locale"
  },
  "type": "import"
 },
 "flask_user.translations.get_translations": {
  "data": {
   "shadows": "flask_babel.get_translations",
   "symbols_in_volume": [
    "flask.current_app.root_path",
    "flask_babel.get_locale",
    "flask_babel.get_translations",
    "flask_babel.support.Translations.load",
    "flask_user.translations.os",
    "gettext.find",
    "str"
   ]
  },
  "type": "import"
 },
 "flask_user.translations.gettext": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_babel.get_translations"
   ]
  },
  "type": "function"
 },
 "flask_user.translations.lazy_gettext": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ImportError",
    "flask_user.translations.gettext",
    "speaklater.make_lazy_string"
   ]
  },
  "type": "function"
 },
 "flask_user.translations.make_lazy_string": {
  "data": {
   "shadows": "speaklater.make_lazy_string"
  },
  "type": "import"
 },
 "flask_user.translations.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "flask_user.translations.python_gettext": {
  "data": {
   "shadows": "gettext"
  },
  "type": "import"
 },
 "flask_user.translations.support": {
  "data": {
   "shadows": "flask_babel.support"
  },
  "type": "import"
 },
 "flask_user.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.views": {
  "data": {
   "symbols_in_volume": [
    "flask_user.views.is_py2",
    "flask_user.views.is_py3",
    "sys.version_info"
   ]
  },
  "type": "module"
 },
 "flask_user.views._": {
  "data": {
   "shadows": "gettext"
  },
  "type": "import"
 },
 "flask_user.views._call_or_get": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "callable",
    "function_or_property"
   ]
  },
  "type": "function"
 },
 "flask_user.views._do_login_user": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.current_app.user_manager.enable_login_without_confirm_email",
    "flask.flash",
    "flask.redirect",
    "flask.url_for",
    "flask_login.login_user",
    "flask_user.views._call_or_get",
    "flask_user.views.unauthenticated"
   ]
  },
  "type": "function"
 },
 "flask_user.views._endpoint_url": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "flask.url_for"
   ]
  },
  "type": "function"
 },
 "flask_user.views._get_safe_next_param": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "_endpoint_url",
    "flask.current_app.user_manager.make_safe_url_function",
    "flask.request.args",
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "flask_user.views._send_confirm_email": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.url_for",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.views._send_registered_email": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.url_for",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.views.change_password": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "_get_safe_next_param",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask_login.current_user",
    "flask_user.views.render"
   ]
  },
  "type": "function"
 },
 "flask_user.views.change_username": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_get_safe_next_param",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask_login.current_user",
    "flask_login.current_user.user_auth",
    "flask_user.views.render",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.views.confirm_email": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_do_login_user",
    "_get_safe_next_param",
    "datetime.datetime.utcnow",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.url_for",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "flask_user.views.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_user.views.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_user.views.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "flask_user.views.email_action": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_send_confirm_email",
    "flask.current_app.user_manager",
    "flask.redirect",
    "flask.url_for",
    "flask_login.current_user.get_id",
    "id",
    "int",
    "unauthorized"
   ]
  },
  "type": "function"
 },
 "flask_user.views.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "flask_user.views.forgot_password": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_endpoint_url",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask_user.views.render"
   ]
  },
  "type": "function"
 },
 "flask_user.views.invite": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "Exception",
    "_get_safe_next_param",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask.url_for",
    "flask_login.current_user.id",
    "flask_user.views.render",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_user.views.is_py2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "flask_user.views.is_py3": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "flask_user.views.login": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_do_login_user",
    "_get_safe_next_param",
    "flask.current_app.user_manager",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask_login.current_user.is_authenticated",
    "flask_user.views._call_or_get",
    "flask_user.views.render",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.views.login_user": {
  "data": {
   "shadows": "flask_login.login_user"
  },
  "type": "import"
 },
 "flask_user.views.logout": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_get_safe_next_param",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask_login.current_user",
    "flask_login.logout_user"
   ]
  },
  "type": "function"
 },
 "flask_user.views.logout_user": {
  "data": {
   "shadows": "flask_login.logout_user"
  },
  "type": "import"
 },
 "flask_user.views.make_safe_url": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "flask_user.views.manage_emails": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask.redirect",
    "flask.request.method",
    "flask.url_for",
    "flask_login.current_user.get_id",
    "flask_user.views.render",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_user.views.py_version": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "flask_user.views.quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "flask_user.views.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "flask_user.views.register": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "Exception",
    "_do_login_user",
    "_endpoint_url",
    "_get_safe_next_param",
    "_send_registered_email",
    "datetime.datetime.utcnow",
    "flask.current_app._get_current_object",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.args",
    "flask.request.form",
    "flask.request.method",
    "flask.request.values.get",
    "flask.url_for",
    "flask_user.views.render",
    "hasattr",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "flask_user.views.render": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask.current_app.user_manager"
   ]
  },
  "type": "function"
 },
 "flask_user.views.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_user.views.resend_confirm_email": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_endpoint_url",
    "_send_confirm_email",
    "flask.current_app.user_manager",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask_user.views.render"
   ]
  },
  "type": "function"
 },
 "flask_user.views.reset_password": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_do_login_user",
    "_endpoint_url",
    "_get_safe_next_param",
    "datetime.datetime.utcnow",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.form",
    "flask.request.method",
    "flask.url_for",
    "flask_login.current_user.is_authenticated",
    "flask_login.logout_user",
    "flask_user.views._call_or_get",
    "flask_user.views.render",
    "hasattr",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "flask_user.views.unauthenticated": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "_endpoint_url",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.url",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "flask_user.views.unauthorized": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_endpoint_url",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.path",
    "flask.request.script_root"
   ]
  },
  "type": "function"
 },
 "flask_user.views.unconfirmed": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "_endpoint_url",
    "flask.current_app.user_manager",
    "flask.flash",
    "flask.redirect",
    "flask.request.path",
    "flask.request.script_root"
   ]
  },
  "type": "function"
 },
 "flask_user.views.unquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "flask_user.views.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_user.views.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "flask_user.views.urlunsplit": {
  "data": {
   "shadows": "urllib.parse.urlunsplit"
  },
  "type": "import"
 },
 "flask_user.views.user_profile": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "flask.current_app.user_manager",
    "flask_user.views.render"
   ]
  },
  "type": "function"
 }
}