{
 "*": {
  "data": {
   "imports": [
    "nose.tools"
   ]
  },
  "type": "star-import"
 },
 "py_stringmatching": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.Affine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.affine.Affine"
  },
  "type": "import"
 },
 "py_stringmatching.AlphabeticTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.AlphanumericTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.BagDistance": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.bag_distance.BagDistance"
  },
  "type": "import"
 },
 "py_stringmatching.Cosine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cosine.Cosine"
  },
  "type": "import"
 },
 "py_stringmatching.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.Dice": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.dice.Dice"
  },
  "type": "import"
 },
 "py_stringmatching.Editex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.editex.Editex"
  },
  "type": "import"
 },
 "py_stringmatching.GeneralizedJaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard"
  },
  "type": "import"
 },
 "py_stringmatching.HammingDistance": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.hamming_distance.HammingDistance"
  },
  "type": "import"
 },
 "py_stringmatching.Jaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaccard.Jaccard"
  },
  "type": "import"
 },
 "py_stringmatching.Jaro": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro.Jaro"
  },
  "type": "import"
 },
 "py_stringmatching.JaroWinkler": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler"
  },
  "type": "import"
 },
 "py_stringmatching.Levenshtein": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.levenshtein.Levenshtein"
  },
  "type": "import"
 },
 "py_stringmatching.MongeElkan": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.monge_elkan.MongeElkan"
  },
  "type": "import"
 },
 "py_stringmatching.NeedlemanWunsch": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
  },
  "type": "import"
 },
 "py_stringmatching.OverlapCoefficient": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient"
  },
  "type": "import"
 },
 "py_stringmatching.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.SmithWaterman": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman"
  },
  "type": "import"
 },
 "py_stringmatching.SoftTfIdf": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
  },
  "type": "import"
 },
 "py_stringmatching.Soundex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.soundex.Soundex"
  },
  "type": "import"
 },
 "py_stringmatching.TfIdf": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.tfidf.TfIdf"
  },
  "type": "import"
 },
 "py_stringmatching.TverskyIndex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.tversky_index.TverskyIndex"
  },
  "type": "import"
 },
 "py_stringmatching.WhitespaceTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "py_stringmatching.similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.affine": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.affine.Affine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.affine.Affine.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.affine.Affine",
    "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.get_gap_continuation": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.get_gap_start": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.get_raw_score": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_affine.affine",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.get_sim_func": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.set_gap_continuation": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.set_gap_start": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.Affine.set_sim_func": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.affine.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.affine.affine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_affine.affine"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.affine.cython_sim_ident": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.affine.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.affine.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.bag_distance": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.bag_distance.BagDistance": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.bag_distance.BagDistance.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.bag_distance.BagDistance",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.bag_distance.BagDistance.get_raw_score": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "max",
    "py_stringmatching.similarity_measure.bag_distance.collections",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.bag_distance.BagDistance.get_sim_score": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.bag_distance.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.bag_distance.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.bag_distance.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.bag_distance.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.cosine": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.cosine.Cosine": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.cosine.Cosine.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cosine.Cosine",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.cosine.Cosine.get_raw_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "py_stringmatching.similarity_measure.cosine.math",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.cosine.Cosine.get_sim_score": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.cosine.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.cosine.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.cosine.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.cython": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.dice": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.dice.Dice": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.dice.Dice.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.dice.Dice",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.dice.Dice.get_raw_score": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.dice.Dice.get_sim_score": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.dice.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.dice.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.editex.Editex": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.editex.Editex.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_group_cost": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_local": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_match_cost": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_mismatch_cost": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_raw_score": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.int",
    "numpy.zeros",
    "py_stringmatching.similarity_measure.editex.EditexHelper",
    "py_stringmatching.similarity_measure.editex.unicodedata",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs",
    "six.moves.xrange",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.get_sim_score": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.set_group_cost": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.set_local": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.set_match_cost": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.Editex.set_mismatch_cost": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.EditexHelper": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dict",
    "frozenset"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.editex.EditexHelper.__init__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.EditexHelper.d_cost": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.EditexHelper.r_cost": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.EditexHelper"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.editex.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.editex.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard",
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.get_raw_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.get_sim_func": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.get_sim_score": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.get_threshold": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.set_sim_func": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard.set_threshold": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.HybridSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.Jaro": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro.Jaro"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.generalized_jaccard.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.hamming_distance": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.hamming_distance.HammingDistance": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.hamming_distance.HammingDistance.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.hamming_distance.HammingDistance",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.hamming_distance.HammingDistance.get_raw_score": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "ord",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_same_len",
    "py_stringmatching.utils.tok_check_for_string_input",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.hamming_distance.HammingDistance.get_sim_score": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "py_stringmatching.utils.convert_to_unicode"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.hamming_distance.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.hamming_distance.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.hamming_distance.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.hybrid_similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.hybrid_similarity_measure.SimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaccard": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.jaccard.Jaccard": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.jaccard.Jaccard.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaccard.Jaccard",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaccard.Jaccard.get_raw_score": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaccard.Jaccard.get_sim_score": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaccard.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaccard.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.jaro.Jaro": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.jaro.Jaro.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro.Jaro.get_raw_score": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_jaro.jaro",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro.Jaro.get_sim_score": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro.jaro": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_jaro.jaro"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro_winkler": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler.get_prefix_weight": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler.get_raw_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_jaro_winkler.jaro_winkler",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler.get_sim_score": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler.set_prefix_weight": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.jaro_winkler": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_jaro_winkler.jaro_winkler"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.jaro_winkler.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.levenshtein": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.levenshtein.Levenshtein": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.levenshtein.Levenshtein.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.levenshtein.Levenshtein",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.levenshtein.Levenshtein.get_raw_score": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_levenshtein.levenshtein",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.levenshtein.Levenshtein.get_sim_score": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "max",
    "py_stringmatching.utils.convert_to_unicode"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.levenshtein.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.levenshtein.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.levenshtein.levenshtein": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_levenshtein.levenshtein"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.levenshtein.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.monge_elkan": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.monge_elkan.HybridSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.monge_elkan.JaroWinkler": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.monge_elkan.MongeElkan": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.monge_elkan.MongeElkan.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "py_stringmatching.similarity_measure.monge_elkan.MongeElkan",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.monge_elkan.MongeElkan.get_raw_score": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "float",
    "len",
    "max",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.monge_elkan.MongeElkan.get_sim_func": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.monge_elkan.MongeElkan.set_sim_func": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.monge_elkan.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident",
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.get_gap_cost": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.get_raw_score": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_needleman_wunsch.needleman_wunsch",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.get_sim_func": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.set_gap_cost": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch.set_sim_func": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.cython_sim_ident": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.needleman_wunsch": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_needleman_wunsch.needleman_wunsch"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.needleman_wunsch.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient.get_raw_score": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "min",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient.get_sim_score": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.overlap_coefficient.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_ratio": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.partial_ratio.PartialRatio": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.partial_ratio.PartialRatio.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_ratio.PartialRatio.get_raw_score": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "difflib.SequenceMatcher",
    "int",
    "len",
    "max",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_ratio.PartialRatio.get_sim_score": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_ratio.SequenceMatcher": {
  "data": {
   "shadows": "difflib.SequenceMatcher"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_ratio.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_ratio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_ratio.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_token_sort": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialRatio": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.partial_ratio.PartialRatio"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort._process_string_and_sort": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "py_stringmatching.utils.process_string",
    "sorted"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort.get_raw_score": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.partial_ratio.PartialRatio",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort.get_sim_score": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.SequenceMatcher": {
  "data": {
   "shadows": "difflib.SequenceMatcher"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.partial_token_sort.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.phonetic_similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.phonetic_similarity_measure.PhoneticSimilarityMeasure": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.phonetic_similarity_measure.SimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.ratio": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.ratio.Ratio": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.ratio.Ratio.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.ratio.Ratio.get_raw_score": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "difflib.SequenceMatcher",
    "int",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.ratio.Ratio.get_sim_score": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.ratio.SequenceMatcher": {
  "data": {
   "shadows": "difflib.SequenceMatcher"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.ratio.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.ratio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.ratio.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.sequence_similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.sequence_similarity_measure.SimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.smith_waterman": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident",
    "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.get_gap_cost": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.get_raw_score": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cython.cython_smith_waterman.smith_waterman",
    "py_stringmatching.utils.convert_to_unicode",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.get_sim_func": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.set_gap_cost": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman.set_sim_func": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.smith_waterman.cython_sim_ident": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.smith_waterman.smith_waterman": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cython.cython_smith_waterman.smith_waterman"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.smith_waterman.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.smith_waterman.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.HybridSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.Jaro": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro.Jaro"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.__compute_document_frequency": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.get_corpus_list": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.get_raw_score": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "math.sqrt",
    "py_stringmatching.similarity_measure.soft_tfidf.collections",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.get_sim_func": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.get_threshold": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.set_corpus_list": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.set_sim_func": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf.set_threshold": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soft_tfidf.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soundex": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.soundex.PhoneticSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.phonetic_similarity_measure.PhoneticSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soundex.Soundex": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.phonetic_similarity_measure.PhoneticSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.soundex.Soundex.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soundex.Soundex",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soundex.Soundex.get_raw_score": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soundex.re",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs",
    "py_stringmatching.utils.sim_check_for_zero_len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soundex.Soundex.get_sim_score": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.soundex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.soundex.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.__compute_document_frequency": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "py_stringmatching.similarity_measure.tfidf.TfIdf",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.get_corpus_list": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.get_dampen": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.get_raw_score": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "math.log",
    "math.sqrt",
    "py_stringmatching.similarity_measure.tfidf.collections",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.get_sim_score": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.set_corpus_list": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TfIdf.set_dampen": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tfidf.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tfidf.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.token_similarity_measure.SimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.token_sort": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.token_sort.Ratio": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.ratio.Ratio"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_sort.SequenceMatcher": {
  "data": {
   "shadows": "difflib.SequenceMatcher"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_sort.SequenceSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_sort.TokenSort": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.token_sort.TokenSort.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.token_sort.TokenSort._process_string_and_sort": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "py_stringmatching.utils.process_string",
    "sorted"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.token_sort.TokenSort.get_raw_score": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.ratio.Ratio",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_none",
    "py_stringmatching.utils.sim_check_for_string_inputs"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.token_sort.TokenSort.get_sim_score": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.token_sort.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.token_sort.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tversky_index": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.similarity_measure.tversky_index.TokenSimilarityMeasure": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
  },
  "type": "import"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex",
    "py_stringmatching.utils.sim_check_tversky_parameters",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.get_alpha": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.get_beta": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.get_raw_score": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "py_stringmatching.utils.sim_check_for_empty",
    "py_stringmatching.utils.sim_check_for_exact_match",
    "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
    "py_stringmatching.utils.sim_check_for_none",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.get_sim_score": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.set_alpha": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.TverskyIndex.set_beta": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "py_stringmatching.similarity_measure.tversky_index.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.tests": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tests.test_sim_Soundex": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tests.test_sim_Soundex.Soundex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.soundex.Soundex"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_sim_Soundex.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soundex.Soundex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input10_sim_score": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input11_sim_score": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input8_sim_score": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_invalid_input9_sim_score": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.SoundexTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_sim_Soundex.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_sim_Soundex.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_sim_Soundex.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tests.test_simfunctions.Affine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.affine.Affine"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.setUp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "py_stringmatching.similarity_measure.affine.Affine"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_get_gap_continuation": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_get_gap_start": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_get_sim_func": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_set_gap_continuation": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.affine.Affine"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_set_gap_start": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.affine.Affine"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_set_sim_func": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "int",
    "py_stringmatching.similarity_measure.affine.Affine"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_valid_input": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.AffineTestCases.test_valid_input_non_ascii": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistance": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.bag_distance.BagDistance"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.setUp": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.bag_distance.BagDistance"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Cosine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cosine.Cosine"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.setUp": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cosine.Cosine"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.math",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.CosineTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.math",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Dice": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.dice.Dice"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.setUp": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.dice.Dice"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.DiceTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Editex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.editex.Editex"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.setUp": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_get_group_cost": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_get_local": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_get_match_cost": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_get_mismatch_cost": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_set_group_cost": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_set_local": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_set_match_cost": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_set_mismatch_cost": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.editex.Editex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.EditexTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.setUp": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard",
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_get_sim_func": {
  "data": {
   "lineno": 1299
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_get_threshold": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_sim_measure": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_invalid_sim_measure_sim_score": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_set_sim_func": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard",
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_set_threshold": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard",
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_valid_input_non_ascii_raw_score": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_valid_input_non_ascii_sim_score": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistance": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.hamming_distance.HammingDistance"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.setUp": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.hamming_distance.HammingDistance"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input8_raw_score": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input8_sim_score": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input9_raw_score": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_invalid_input9_sim_score": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_compatibility_raw_score": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_compatibility_sim_score": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_non_ascii_raw_score": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_non_ascii_sim_score": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Jaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaccard.Jaccard"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.setUp": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaccard.Jaccard"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaccardTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Jaro": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro.Jaro"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.setUp": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro.Jaro"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_non_ascii_input_raw_score": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_non_ascii_input_sim_score": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinkler": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.setUp": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_get_prefix_weight": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_non_ascii_input_raw_score": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_non_ascii_input_sim_score": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_set_prefix_weight": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Levenshtein": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.levenshtein.Levenshtein"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.setUp": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.levenshtein.Levenshtein"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_valid_input_non_ascii_raw_score": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_valid_input_non_ascii_sim_score": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkan": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.monge_elkan.MongeElkan"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases": {
  "data": {
   "lineno": 1959,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.setUp": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.affine.Affine",
    "py_stringmatching.similarity_measure.monge_elkan.MongeElkan",
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_get_sim_func": {
  "data": {
   "lineno": 1966
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_set_sim_func": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "py_stringmatching.similarity_measure.monge_elkan.MongeElkan",
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch",
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_valid_input": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases.test_valid_input_non_ascii": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunsch": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.setUp": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_get_gap_cost": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_get_sim_func": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_set_gap_cost": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_set_sim_func": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "int",
    "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_valid_input": {
  "data": {
   "lineno": 841
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases.test_valid_input_non_ascii": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficient": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.setUp": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_valid_input_raw_score_set_inp": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatio": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.partial_ratio.PartialRatio"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.setUp": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.partial_ratio.PartialRatio"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 2148,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 2140,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 2168,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 2054
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 2089
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSort": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.setUp": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 2399,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 2427,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 2297
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 2344
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Ratio": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.ratio.Ratio"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.setUp": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.ratio.Ratio"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 2268,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 2264,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 2176
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.RatioTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 2210
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWaterman": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.setUp": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "int",
    "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_get_gap_cost": {
  "data": {
   "lineno": 887
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_get_sim_func": {
  "data": {
   "lineno": 890
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_set_gap_cost": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_set_sim_func": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "int",
    "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_valid_input": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases.test_valid_input_non_ascii": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoftTfIdf": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.setUp": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.affine.Affine",
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_get_corpus_list": {
  "data": {
   "lineno": 1870
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_get_sim_func": {
  "data": {
   "lineno": 1873
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_get_threshold": {
  "data": {
   "lineno": 1876
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_set_corpus_list": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_set_sim_func": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.jaro.Jaro",
    "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
    "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_set_threshold": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_valid_input_non_ascii_raw_score": {
  "data": {
   "lineno": 1923
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1909
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.Soundex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.soundex.Soundex"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.setUp": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.soundex.Soundex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "ValueError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.SoundexTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 965
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfIdf": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.tfidf.TfIdf"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.setUp": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tfidf.TfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_get_corpus_list": {
  "data": {
   "lineno": 1571
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_get_dampen": {
  "data": {
   "lineno": 1574
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_set_corpus_list": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tfidf.TfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_set_dampen": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tfidf.TfIdf"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1595
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TfidfTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1608
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSort": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.token_sort.TokenSort"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases": {
  "data": {
   "lineno": 2439,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.setUp": {
  "data": {
   "lineno": 2440,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.token_sort.TokenSort"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 2537,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 2561,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 2565,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 2545,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 2577,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 2581,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 2443
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TokenSortTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 2490
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndex": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.tversky_index.TverskyIndex"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_simfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.setUp": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_get_alpha": {
  "data": {
   "lineno": 1688
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_get_beta": {
  "data": {
   "lineno": 1691
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input10": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "ValueError",
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input1_raw_score": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input1_sim_score": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input2_raw_score": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input2_sim_score": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input3_raw_score": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input3_sim_score": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input4_raw_score": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input4_sim_score": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input5_raw_score": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input5_sim_score": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input6_raw_score": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input6_sim_score": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input7_raw_score": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input7_sim_score": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input8": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "ValueError",
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_invalid_input9": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "ValueError",
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_set_alpha": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_set_beta": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.tversky_index.TverskyIndex"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_valid_input_raw_score": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases.test_valid_input_sim_score": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_simfunctions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_simfunctions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_tokenizers.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.setUp": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.test_alphabetic_tok_invalid1": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.test_alphabetic_tok_invalid2": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.test_alphabetic_tok_valid": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.test_get_return_set": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases.test_set_return_set": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_tokenizers.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.setUp": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.test_alphanumeric_tok_invalid1": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.test_alphanumeric_tok_invalid2": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.test_alphanumeric_tok_valid": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.test_get_return_set": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases.test_set_return_set": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_tokenizers.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.setUp": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_delimiter_invalid1": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "TypeError",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "raises",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_delimiter_invalid2": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_delimiter_invalid3": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_delimiter_valid": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_get_delim_set": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_get_return_set": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_set_delim_set": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases.test_set_return_set": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_tokenizers.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_get_qval": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_get_return_set": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_padding_invalid": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_prefixpad_invalid1": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_prefixpad_invalid2": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_qgrams_invalid1": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_qgrams_invalid2": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_qgrams_none": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_qgrams_valid": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_padding": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_padding_invalid": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_prefix_pad": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_prefix_pad_invalid1": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_prefix_pad_invalid2": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_qval": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_qval_invalid": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_return_set": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_suffix_pad": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_suffix_pad_invalid1": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_set_suffix_pad_invalid2": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_suffixpad_invalid1": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases.test_suffixpad_invalid2": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "py_stringmatching.tests.test_tokenizers.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.setUp": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_get_delim_set": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_get_return_set": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_set_delim_set": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AttributeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_set_return_set": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_whitespace_tok_invalid1": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_whitespace_tok_invalid2": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "TypeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases.test_whitespace_tok_valid": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "py_stringmatching.tests.test_tokenizers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "py_stringmatching.tests.test_tokenizers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer",
    "py_stringmatching.tokenizer.alphabetic_tokenizer.re",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer.tokenize": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "filter",
    "list",
    "py_stringmatching.utils.convert_bag_to_set",
    "py_stringmatching.utils.tok_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.DefinitionTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.alphabetic_tokenizer.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer",
    "py_stringmatching.tokenizer.alphanumeric_tokenizer.re",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer.tokenize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "filter",
    "list",
    "py_stringmatching.utils.convert_bag_to_set",
    "py_stringmatching.utils.tok_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.DefinitionTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.alphanumeric_tokenizer.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.definition_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.tokenizer.Tokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.definition_tokenizer.Tokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.tokenizer.Tokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer._update_delim_set": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "map",
    "py_stringmatching.tokenizer.delimiter_tokenizer.re",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer.get_delim_set": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer.set_delim_set": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer.tokenize": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "filter",
    "list",
    "py_stringmatching.utils.convert_bag_to_set",
    "py_stringmatching.utils.tok_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.Tokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.delimiter_tokenizer.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.DefinitionTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "len",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "six.string_types",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.get_padding": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.get_prefix_pad": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.get_qval": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.get_suffix_pad": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.set_padding": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AssertionError",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.set_prefix_pad": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "len",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.set_qval": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.set_suffix_pad": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "len",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer.tokenize": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "filter",
    "len",
    "list",
    "py_stringmatching.utils.convert_bag_to_set",
    "py_stringmatching.utils.tok_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.qgram_tokenizer.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.tokenizer.Tokenizer": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.tokenizer.Tokenizer.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.tokenizer.Tokenizer.get_return_set": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.tokenizer.Tokenizer.set_return_set": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer": {
  "data": {},
  "type": "module"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "class"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer.set_delim_set": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer.tokenize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "filter",
    "list",
    "py_stringmatching.utils.convert_bag_to_set",
    "py_stringmatching.utils.tok_check_for_none",
    "py_stringmatching.utils.tok_check_for_string_input"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.tokenizer.whitespace_tokenizer.utils": {
  "data": {
   "shadows": "py_stringmatching.utils"
  },
  "type": "import"
 },
 "py_stringmatching.utils": {
  "data": {
   "symbols_in_volume": [
    "py_stringmatching.utils.PY3",
    "py_stringmatching.utils.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "py_stringmatching.utils.PY3": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "py_stringmatching.utils._remove_non_ascii_chars": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "chr",
    "dict",
    "ord",
    "py_stringmatching.utils.PY3",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.convert_bag_to_set": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "py_stringmatching.utils.convert_to_unicode": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "py_stringmatching.utils.process_string": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "py_stringmatching.utils.re",
    "py_stringmatching.utils.remove_non_ascii_chars",
    "py_stringmatching.utils.string"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "py_stringmatching.utils.remove_non_ascii_chars": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "py_stringmatching.utils._remove_non_ascii_chars",
    "py_stringmatching.utils.unicode",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_empty": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_exact_match": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_list_or_set_inputs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_none": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_same_len": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_string_inputs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "py_stringmatching.utils.six"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_for_zero_len": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.sim_check_tversky_parameters": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "py_stringmatching.utils.string": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "py_stringmatching.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "py_stringmatching.utils.tok_check_for_none": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.tok_check_for_string_input": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "py_stringmatching.utils.six",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringmatching.utils.unicode": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 }
}