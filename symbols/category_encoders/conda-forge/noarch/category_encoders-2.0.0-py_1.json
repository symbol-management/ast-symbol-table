{
 "category_encoders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.backward_difference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.backward_difference_coding": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit_backward_difference_coding": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Diff"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.get_feature_names": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.transform": {
  "lineno": 175,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.basen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.basen.BaseNEncoder": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.basen.BaseNEncoder.__init__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_encode": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_to_integer": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.calc_required_digits": {
  "lineno": 295,
  "symbols_in_volume": [
   "math.log",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.col_transform": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit": {
  "lineno": 95,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit_base_n_encoding": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.get_feature_names": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.inverse_transform": {
  "lineno": 247,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.number_to_base": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.transform": {
  "lineno": 193,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.binary.BinaryEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.binary.BinaryEncoder.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.fit": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.get_feature_names": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.inverse_transform": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.transform": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.cat_boost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.cat_boost.CatBoostEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.cat_boost.CatBoostEncoder.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit": {
  "lineno": 102,
  "symbols_in_volume": [
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_column_map": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_leave_one_out": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_transform": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.get_feature_names": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.transform": {
  "lineno": 163,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.transform_leave_one_out": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.hashing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.hashing.HashingEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.hashing.HashingEncoder.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.fit": {
  "lineno": 88,
  "symbols_in_volume": [
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.get_feature_names": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick": {
  "lineno": 176,
  "symbols_in_volume": [
   "hashlib.algorithms_available",
   "hashlib.new",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick.hash_fn": {
  "lineno": 233,
  "symbols_in_volume": [
   "hashlib.new",
   "pandas.Series",
   "sys.version_info"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.transform": {
  "lineno": 136,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.helmert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.helmert.HelmertEncoder": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.helmert.HelmertEncoder.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit": {
  "lineno": 101,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit_helmert_coding": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Helmert"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.get_feature_names": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.helmert_coding": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.transform": {
  "lineno": 172,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.james_stein": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.james_stein.JamesSteinEncoder": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.james_stein.JamesSteinEncoder.__init__": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._score": {
  "lineno": 575,
  "symbols_in_volume": [
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_beta": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_independent": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.inf",
   "numpy.log",
   "numpy.nan",
   "numpy.sqrt",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio.get_best_sigma": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_pooled": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.fit": {
  "lineno": 157,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.fit_transform": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.get_feature_names": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.transform": {
  "lineno": 245,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit": {
  "lineno": 94,
  "symbols_in_volume": [
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_column_map": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_leave_one_out": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_transform": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.get_feature_names": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform": {
  "lineno": 155,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform_leave_one_out": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.m_estimate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.m_estimate.MEstimateEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.m_estimate.MEstimateEncoder.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._score": {
  "lineno": 286,
  "symbols_in_volume": [
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._train": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.fit": {
  "lineno": 105,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.fit_transform": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.get_feature_names": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.transform": {
  "lineno": 173,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 },
 "category_encoders.one_hot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.one_hot.OneHotEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.one_hot.OneHotEncoder.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.category_mapping": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.fit": {
  "lineno": 110,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.generate_mapping": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.int",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_dummies": {
  "lineno": 326,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_feature_names": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.inverse_transform": {
  "lineno": 277,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.reverse_dummies": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.transform": {
  "lineno": 225,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.ordinal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.ordinal.OrdinalEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.ordinal.OrdinalEncoder.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.category_mapping": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.fit": {
  "lineno": 101,
  "symbols_in_volume": [
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.get_feature_names": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.inverse_transform": {
  "lineno": 217,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.ordinal_encoding": {
  "lineno": 271,
  "symbols_in_volume": [
   "category_encoders.utils.is_category",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.transform": {
  "lineno": 163,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.polynomial.PolynomialEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.polynomial.PolynomialEncoder.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit_polynomial_coding": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Poly"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.get_feature_names": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.polynomial_coding": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.transform": {
  "lineno": 173,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.sum_coding.SumEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.sum_coding.SumEncoder.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit_sum_coding": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Sum"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.get_feature_names": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.sum_coding": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.transform": {
  "lineno": 173,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.target_encoder.TargetEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.target_encoder.TargetEncoder.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit": {
  "lineno": 95,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_target_encoding": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_transform": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.get_feature_names": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.target_encode": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.transform": {
  "lineno": 188,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 },
 "category_encoders.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.helpers.create_array": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "random.choice",
   "random.random"
  ],
  "type": "function"
 },
 "category_encoders.tests.helpers.create_dataset": {
  "lineno": 35,
  "symbols_in_volume": [
   "math.pi",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "category_encoders.tests.helpers.deep_round": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.tests.helpers.verify_inverse_transform": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.tests.helpers.verify_numeric": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "lineno": 101,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "lineno": 90,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 111,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "lineno": 124,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "lineno": 137,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2cols": {
  "lineno": 63,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_1": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_2": {
  "lineno": 22,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_3": {
  "lineno": 35,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_4": {
  "lineno": 49,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectThirdColumn": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 50,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "lineno": 78,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleUnknown_HaveUnknown_ExpectIndicatorInTest": {
  "lineno": 64,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HaveIndicatorAndNanValue_ExpectNewColumn": {
  "lineno": 29,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_fit_transform_have_base_2_expect_Correct_Encoding": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "lineno": 106,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveData_ExpectResultReturned": {
  "lineno": 20,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "pandas.Series",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "lineno": 131,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "lineno": 120,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "lineno": 97,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "lineno": 88,
  "symbols_in_volume": [
   "category_encoders.BaseNEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_bin": {
  "lineno": 10,
  "symbols_in_volume": [
   "category_encoders.BinaryEncoder",
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_dist": {
  "lineno": 15,
  "symbols_in_volume": [
   "category_encoders.BinaryEncoder",
   "numpy.array",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_cat_boost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder.test_catBoost": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.CatBoostEncoder",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder.test_catBoost_missing": {
  "lineno": 20,
  "symbols_in_volume": [
   "category_encoders.CatBoostEncoder",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "numpy.seterr",
   "pandas.DataFrame",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_encoders.TestEncoders": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_classification": {
  "lineno": 49,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.helpers.verify_numeric",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_cols": {
  "lineno": 326,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_column_transformer": {
  "lineno": 424,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "numpy.testing.assert_array_equal",
   "sklearn.compose.ColumnTransformer"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_doc": {
  "lineno": 316,
  "symbols_in_volume": [
   "doctest.DocFileSuite",
   "os.listdir",
   "unittest2.TestSuite",
   "unittest2.TextTestRunner"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_duplicate_index_value": {
  "lineno": 347,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_error_handling": {
  "lineno": 100,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.helpers.create_dataset"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names": {
  "lineno": 369,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_after_transform": {
  "lineno": 403,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_drop_invariant": {
  "lineno": 382,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_not_set": {
  "lineno": 397,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_error": {
  "lineno": 140,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_return_nan_test": {
  "lineno": 187,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_return_nan_train": {
  "lineno": 173,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_error": {
  "lineno": 126,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.helpers.create_dataset"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_return_nan": {
  "lineno": 156,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_value": {
  "lineno": 202,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_impact_encoders": {
  "lineno": 81,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.tests.helpers.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_inverse_transform": {
  "lineno": 229,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.tests.helpers.create_dataset",
   "category_encoders.tests.helpers.verify_inverse_transform"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_noncontiguous_index": {
  "lineno": 339,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_np": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.helpers.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_column_order": {
  "lineno": 268,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_names": {
  "lineno": 294,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_sklearn_compliance": {
  "lineno": 215,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "sklearn.__version__",
   "sklearn.utils.estimator_checks.check_transformer_general",
   "sklearn.utils.estimator_checks.check_transformers_unfitted"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_string_index": {
  "lineno": 355,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame",
   "sklearn.datasets.load_boston"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_tmp_column_name": {
  "lineno": 283,
  "symbols_in_volume": [
   "category_encoders",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_truncated_index": {
  "lineno": 411,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_types": {
  "lineno": 244,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "datetime.timedelta",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_unique_column_is_not_predictive": {
  "lineno": 308,
  "symbols_in_volume": [
   "category_encoders"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "lineno": 101,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "lineno": 90,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 111,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "lineno": 124,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectExtraColumn": {
  "lineno": 137,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2StringCols_ExpectCorrectOrder": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2cols": {
  "lineno": 63,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_1": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_2": {
  "lineno": 22,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_3": {
  "lineno": 35,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_4": {
  "lineno": 49,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_helpers.TestHelpers": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_is_numeric_numpy": {
  "lineno": 23,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.verify_numeric",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_is_numeric_pandas": {
  "lineno": 10,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.verify_numeric",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_verify_raises_AssertionError_on_categories": {
  "lineno": 38,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.verify_numeric",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target": {
  "lineno": 35,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target_beta": {
  "lineno": 77,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target_pooled": {
  "lineno": 44,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_identifiers_large_binary": {
  "lineno": 132,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_identifiers_small_binary": {
  "lineno": 125,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_large_beta": {
  "lineno": 102,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_large_pooled": {
  "lineno": 69,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_small_beta": {
  "lineno": 95,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_small_pooled": {
  "lineno": 62,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples": {
  "lineno": 17,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_beta": {
  "lineno": 85,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_binary": {
  "lineno": 117,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_pooled": {
  "lineno": 52,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_small_samples_binary": {
  "lineno": 110,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.abs",
   "numpy.array",
   "numpy.log",
   "numpy.sum",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_small_samples_independent": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_zero_variance": {
  "lineno": 27,
  "symbols_in_volume": [
   "category_encoders.JamesSteinEncoder",
   "numpy.array"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTestAndNoTestTarget_ExpectMean": {
  "lineno": 93,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTest_ExpectMean": {
  "lineno": 77,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTrain_ExpectAtValueSet": {
  "lineno": 64,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleUnknownValue_HaveUnknownInTest_ExpectMean": {
  "lineno": 108,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "category_encoders.tests.helpers.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_fit_callTwiceOnDifferentData_ExpectRefit": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "numpy.testing.assert_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_unique": {
  "lineno": 53,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_values": {
  "lineno": 27,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "lineno": 158,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "lineno": 147,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 168,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "lineno": 181,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "lineno": 194,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveColumnAppearTwice_ExpectColumnsDeduped": {
  "lineno": 90,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownIndicatorAndMissingValue_ExpectValueSet": {
  "lineno": 134,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownIndicatorAndNoMissingValue_ExpectExtraColumn": {
  "lineno": 122,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownValueAndSeenValues_ExpectMappingUsed": {
  "lineno": 111,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownValueAndUnseenValues_ExpectAllZeroes": {
  "lineno": 99,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveMissingValuesAndUseCatNames_ExpectCorrectValue": {
  "lineno": 65,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "lineno": 222,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveDedupedColumns_ExpectCorrectInverseTransform": {
  "lineno": 72,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "lineno": 247,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "lineno": 236,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "lineno": 213,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "lineno": 204,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNoCatNames_ExpectCorrectInverseTransform": {
  "lineno": 81,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_one_hot": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "category_encoders.tests.helpers.create_dataset",
   "category_encoders.tests.helpers.verify_inverse_transform"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNaNInTrain_ExpectCodedAsOne": {
  "lineno": 113,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNegativeOneInTrain_ExpectCodedAsOne": {
  "lineno": 104,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNoneAndNan_ExpectCodesAsOne": {
  "lineno": 122,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_missing_have_nan_fit_time_expect_as_category": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_missing_have_nan_transform_time_expect_negative_2": {
  "lineno": 83,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_unknown_have_new_value_expect_negative_1": {
  "lineno": 93,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "lineno": 163,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "lineno": 188,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "lineno": 177,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "lineno": 154,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "lineno": 145,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveUnknown_ExpectWarning": {
  "lineno": 131,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal": {
  "lineno": 20,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal_dist": {
  "lineno": 44,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.array",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_pandas_categorical": {
  "lineno": 60,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "category_encoders.tests.helpers.verify_numeric",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "lineno": 106,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "lineno": 95,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 116,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "lineno": 129,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "lineno": 142,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 80,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2cols": {
  "lineno": 68,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_1": {
  "lineno": 14,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_2": {
  "lineno": 27,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_3": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_4": {
  "lineno": 54,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.helpers.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "lineno": 105,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "lineno": 94,
  "symbols_in_volume": [
   "category_encoders.SumEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "lineno": 115,
  "symbols_in_volume": [
   "category_encoders.SumEncoder",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "lineno": 128,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "lineno": 141,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 79,
  "symbols_in_volume": [
   "category_encoders.SumEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2cols": {
  "lineno": 67,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_1": {
  "lineno": 13,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_2": {
  "lineno": 26,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_3": {
  "lineno": 39,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_4": {
  "lineno": 53,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_HandleMissingIsValueAndNanInTest_ExpectMean": {
  "lineno": 91,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_HandleUnknownValue_HaveUnknownInTest_ExpectMean": {
  "lineno": 107,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "category_encoders.tests.helpers.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectUsedInFit": {
  "lineno": 28,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveCategoricalColumn_ExpectCorrectValueInResult": {
  "lineno": 57,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectCorrectValueInResult": {
  "lineno": 43,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveNanValue_ExpectCorrectValueInResult": {
  "lineno": 72,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_noncontiguous_index": {
  "lineno": 86,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "numpy.allclose",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_utils.TestUtils": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_utils.TestUtils.test_convert_input_vector": {
  "lineno": 8,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input_vector",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.helpers.create_array",
   "category_encoders.tests.helpers.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleMissingValue_HaveMissingInTest_ExpectEncodedWithZero": {
  "lineno": 132,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleMissingValue_HaveMissingInTrain_ExpectEncoded": {
  "lineno": 122,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleUnknownValue_HaveUnknown_ExpectEncodedWithZero": {
  "lineno": 144,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HaveArrays_ExpectCalculatedProperly": {
  "lineno": 112,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_woe": {
  "lineno": 19,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "category_encoders.tests.helpers.verify_numeric",
   "numpy.isfinite",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.utils.convert_cols_to_list": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.ndarray",
   "pandas.Series",
   "pandas.api.types.is_categorical"
  ],
  "type": "function"
 },
 "category_encoders.utils.convert_input": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.generic",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "category_encoders.utils.convert_input_vector": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.ndarray",
   "numpy.shape",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.utils.get_generated_cols": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.utils.get_obj_cols": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.utils.is_category": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.api.types.is_categorical_dtype"
  ],
  "type": "function"
 },
 "category_encoders.woe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.woe.WOEEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.woe.WOEEncoder.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._score": {
  "lineno": 288,
  "symbols_in_volume": [
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._train": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.nan"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_cols_to_list",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit_transform": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.get_feature_names": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.transform": {
  "lineno": 175,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.convert_input_vector"
  ],
  "type": "function"
 }
}