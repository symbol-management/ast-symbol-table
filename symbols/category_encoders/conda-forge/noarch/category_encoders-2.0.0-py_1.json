{
 "category_encoders": {
  "data": {},
  "type": "module"
 },
 "category_encoders.BackwardDifferenceEncoder": {
  "data": {
   "shadows": "category_encoders.backward_difference.BackwardDifferenceEncoder"
  },
  "type": "import"
 },
 "category_encoders.BaseNEncoder": {
  "data": {
   "shadows": "category_encoders.basen.BaseNEncoder"
  },
  "type": "import"
 },
 "category_encoders.BinaryEncoder": {
  "data": {
   "shadows": "category_encoders.binary.BinaryEncoder"
  },
  "type": "import"
 },
 "category_encoders.CatBoostEncoder": {
  "data": {
   "shadows": "category_encoders.cat_boost.CatBoostEncoder"
  },
  "type": "import"
 },
 "category_encoders.HashingEncoder": {
  "data": {
   "shadows": "category_encoders.hashing.HashingEncoder"
  },
  "type": "import"
 },
 "category_encoders.HelmertEncoder": {
  "data": {
   "shadows": "category_encoders.helmert.HelmertEncoder"
  },
  "type": "import"
 },
 "category_encoders.JamesSteinEncoder": {
  "data": {
   "shadows": "category_encoders.james_stein.JamesSteinEncoder"
  },
  "type": "import"
 },
 "category_encoders.LeaveOneOutEncoder": {
  "data": {
   "shadows": "category_encoders.leave_one_out.LeaveOneOutEncoder"
  },
  "type": "import"
 },
 "category_encoders.MEstimateEncoder": {
  "data": {
   "shadows": "category_encoders.m_estimate.MEstimateEncoder"
  },
  "type": "import"
 },
 "category_encoders.OneHotEncoder": {
  "data": {
   "shadows": "category_encoders.one_hot.OneHotEncoder"
  },
  "type": "import"
 },
 "category_encoders.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.PolynomialEncoder": {
  "data": {
   "shadows": "category_encoders.polynomial.PolynomialEncoder"
  },
  "type": "import"
 },
 "category_encoders.SumEncoder": {
  "data": {
   "shadows": "category_encoders.sum_coding.SumEncoder"
  },
  "type": "import"
 },
 "category_encoders.TargetEncoder": {
  "data": {
   "shadows": "category_encoders.target_encoder.TargetEncoder"
  },
  "type": "import"
 },
 "category_encoders.WOEEncoder": {
  "data": {
   "shadows": "category_encoders.woe.WOEEncoder"
  },
  "type": "import"
 },
 "category_encoders.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "category_encoders.__author__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "category_encoders.__version__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "category_encoders.backward_difference": {
  "data": {},
  "type": "module"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.backward_difference_coding": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit_backward_difference_coding": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Diff",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.get_feature_names": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.transform": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.Diff": {
  "data": {
   "shadows": "patsy.contrasts.Diff"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.backward_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.basen": {
  "data": {},
  "type": "module"
 },
 "category_encoders.basen.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.basen.BaseNEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.basen.BaseNEncoder.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_encode": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_to_integer": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.dot",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.calc_required_digits": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "category_encoders.basen.math",
    "int",
    "len",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.col_transform": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit_base_n_encoding": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.get_feature_names": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.inverse_transform": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.basen.warnings",
    "category_encoders.utils.convert_input",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.number_to_base": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "divmod",
    "int",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.transform": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.basen.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.basen.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.basen.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "category_encoders.basen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.basen.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.basen.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.basen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.binary": {
  "data": {},
  "type": "module"
 },
 "category_encoders.binary.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.binary.BinaryEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.binary.BinaryEncoder.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.fit": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.get_feature_names": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.inverse_transform": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.transform": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "category_encoders.binary.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.binary.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.binary.ce": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.binary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.cat_boost": {
  "data": {},
  "type": "module"
 },
 "category_encoders.cat_boost.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.CatBoostEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.cat_boost.CatBoostEncoder.__init__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_column_map": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "numpy.append",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_leave_one_out": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit_transform": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.get_feature_names": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.transform": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.transform_leave_one_out": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.cat_boost.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.hashing": {
  "data": {},
  "type": "module"
 },
 "category_encoders.hashing.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.hashing.HashingEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.hashing.HashingEncoder.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.fit": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "KeyError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.get_feature_names": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "category_encoders.hashing.hashlib",
    "pandas.concat",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick.hash_fn": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bytes",
    "category_encoders.hashing.hashlib",
    "category_encoders.hashing.sys",
    "int",
    "pandas.Series",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.transform": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.hashing.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.hashing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "category_encoders.hashing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.hashing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "category_encoders.hashing.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.helmert": {
  "data": {},
  "type": "module"
 },
 "category_encoders.helmert.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.helmert.Helmert": {
  "data": {
   "shadows": "patsy.contrasts.Helmert"
  },
  "type": "import"
 },
 "category_encoders.helmert.HelmertEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.helmert.HelmertEncoder.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit_helmert_coding": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Helmert",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.helmert_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.transform": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.helmert.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.helmert.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.helmert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.helmert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.helmert.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.james_stein": {
  "data": {},
  "type": "module"
 },
 "category_encoders.james_stein.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.james_stein.JamesSteinEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.james_stein.JamesSteinEncoder.__init__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._score": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_beta": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_independent": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "category_encoders.james_stein.scipy",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.log",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio.get_best_sigma": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "abs",
    "sum"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_pooled": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.fit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "len",
    "numpy.max",
    "numpy.min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.fit_transform": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.get_feature_names": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.transform": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.james_stein.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.james_stein.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.james_stein.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.james_stein.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.james_stein.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "category_encoders.james_stein.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.james_stein.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "category_encoders.james_stein.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out": {
  "data": {},
  "type": "module"
 },
 "category_encoders.leave_one_out.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_column_map": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "numpy.append",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_leave_one_out": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_transform": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.get_feature_names": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform_leave_one_out": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.leave_one_out.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.m_estimate": {
  "data": {},
  "type": "module"
 },
 "category_encoders.m_estimate.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.MEstimateEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.m_estimate.MEstimateEncoder.__init__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._score": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._train": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.fit": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.fit_transform": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.get_feature_names": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.m_estimate.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.one_hot": {
  "data": {},
  "type": "module"
 },
 "category_encoders.one_hot.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.one_hot.OneHotEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.one_hot.OneHotEncoder.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.category_mapping": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.generate_mapping": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.int",
    "numpy.nan",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_dummies": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_feature_names": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.inverse_transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.one_hot.warnings",
    "category_encoders.utils.convert_input",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.reverse_dummies": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.transform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.one_hot.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.one_hot.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.one_hot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.one_hot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.one_hot.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.one_hot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.ordinal": {
  "data": {},
  "type": "module"
 },
 "category_encoders.ordinal.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.ordinal.OrdinalEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.ordinal.OrdinalEncoder.__init__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.category_mapping": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.get_feature_names": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.inverse_transform": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "category_encoders.ordinal.warnings",
    "category_encoders.utils.convert_input",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.ordinal_encoding": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "category_encoders.utils.is_category",
    "float",
    "int",
    "len",
    "numpy.nan",
    "pandas.Series",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.transform": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.ordinal.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.ordinal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.ordinal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.ordinal.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.ordinal.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.polynomial": {
  "data": {},
  "type": "module"
 },
 "category_encoders.polynomial.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.polynomial.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.polynomial.Poly": {
  "data": {
   "shadows": "patsy.contrasts.Poly"
  },
  "type": "import"
 },
 "category_encoders.polynomial.PolynomialEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.polynomial.PolynomialEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit_polynomial_coding": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Poly",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.polynomial_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.polynomial.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.polynomial.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.polynomial.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.sum_coding": {
  "data": {},
  "type": "module"
 },
 "category_encoders.sum_coding.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.Sum": {
  "data": {
   "shadows": "patsy.contrasts.Sum"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.SumEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.sum_coding.SumEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit_sum_coding": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Sum",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.sum_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.sum_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.target_encoder": {
  "data": {},
  "type": "module"
 },
 "category_encoders.target_encoder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.TargetEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.target_encoder.TargetEncoder.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_target_encoding": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_transform": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.get_feature_names": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.target_encode": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.transform": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.target_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.tests": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "category_encoders.tests.helpers": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.helpers.create_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "category_encoders.tests.helpers.random",
    "numpy.array",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.helpers.create_dataset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "category_encoders.tests.helpers.math",
    "category_encoders.tests.helpers.random",
    "float",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.helpers.deep_round": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.helpers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "category_encoders.tests.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.helpers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.helpers.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "category_encoders.tests.helpers.verify_inverse_transform": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "category_encoders.tests.helpers.verify_numeric": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2StringCols_ExpectCorrectOrder": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2cols": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_1": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_3": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_4": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_backward_difference.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_backward_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_backward_difference.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_basen": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectThirdColumn": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HandleUnknown_HaveUnknown_ExpectIndicatorInTest": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_HaveIndicatorAndNanValue_ExpectNewColumn": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_fit_transform_have_base_2_expect_Correct_Encoding": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "UserWarning",
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveData_ExpectResultReturned": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "list",
    "pandas.Series",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestBaseNEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_basen.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_basen.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_basen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_basen.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_binary": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_bin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder",
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_dist": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder",
    "numpy.array",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_binary.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_binary.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_binary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_binary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_cat_boost": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder.test_catBoost": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.CatBoostEncoder",
    "list",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_cat_boost.TestBinaryEncoder.test_catBoost_missing": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "category_encoders.CatBoostEncoder",
    "list",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_cat_boost.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_cat_boost.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_cat_boost.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_encoders.np_X",
    "category_encoders.tests.test_encoders.np_X_t",
    "category_encoders.tests.test_encoders.np_y",
    "category_encoders.tests.test_encoders.np_y_t",
    "category_encoders.tests.test_encoders.warnings",
    "numpy.random.randn",
    "numpy.seterr",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_encoders.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.TestEncoders": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_classification": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.np_y",
    "getattr",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_cols": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_column_transformer": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "numpy.testing.assert_array_equal",
    "set",
    "sklearn.compose.ColumnTransformer"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_doc": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "category_encoders.tests.test_encoders.doctest",
    "category_encoders.tests.test_encoders.os",
    "unittest2.TestSuite",
    "unittest2.TextTestRunner"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_duplicate_index_value": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "getattr",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_error_handling": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.y",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_after_transform": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_drop_invariant": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_get_feature_names_not_set": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders",
    "category_encoders.__all__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_error": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_return_nan_test": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_missing_return_nan_train": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_error": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_return_nan": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_value": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_impact_encoders": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "category_encoders.tests.test_encoders.np_X",
    "category_encoders.tests.test_encoders.np_X_t",
    "category_encoders.tests.test_encoders.np_y",
    "category_encoders.tests.test_encoders.np_y_t",
    "category_encoders.tests.test_encoders.y",
    "category_encoders.tests.test_encoders.y_t",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_inverse_transform": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.helpers.verify_inverse_transform",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.X_t",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_noncontiguous_index": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "getattr",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_np": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_encoders.np_X",
    "category_encoders.tests.test_encoders.np_X_t",
    "category_encoders.tests.test_encoders.np_y",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_column_order": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "getattr",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_names": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "getattr",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_sklearn_compliance": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.sklearn",
    "getattr",
    "sklearn.utils.estimator_checks.check_transformer_general",
    "sklearn.utils.estimator_checks.check_transformers_unfitted"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_string_index": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.sklearn",
    "category_encoders.tests.test_encoders.y",
    "getattr",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_tmp_column_name": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "category_encoders",
    "getattr",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_truncated_index": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "getattr",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_types": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "category_encoders",
    "category_encoders.__all__",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "datetime.timedelta",
    "getattr",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_unique_column_is_not_predictive": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "all",
    "category_encoders",
    "category_encoders.tests.test_encoders.X",
    "category_encoders.tests.test_encoders.y",
    "getattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestSuite": {
  "data": {
   "shadows": "unittest2.TestSuite"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.TextTestRunner": {
  "data": {
   "shadows": "unittest2.TextTestRunner"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.X": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.X_t": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.__author__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.check_transformer_general": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformer_general"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.check_transformers_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformers_unfitted"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.np_X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.np_X_t": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.np_y": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.np_y_t": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.y_t": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "category_encoders.tests.test_helmert": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_helmert.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectExtraColumn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2StringCols_ExpectCorrectOrder": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2cols": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_1": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_3": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_4": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helmert.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helmert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helmert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_helpers.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helpers.TestHelpers": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_is_numeric_numpy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "category_encoders.tests.helpers.verify_numeric",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_is_numeric_pandas": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception",
    "category_encoders.tests.helpers.verify_numeric",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helpers.TestHelpers.test_verify_raises_AssertionError_on_categories": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "category_encoders.tests.helpers.verify_numeric",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helpers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_helpers.verify_numeric": {
  "data": {
   "shadows": "category_encoders.tests.helpers.verify_numeric"
  },
  "type": "import"
 },
 "category_encoders.tests.test_james_stein": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_james_stein.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target_beta": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_continuous_target_pooled": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_identifiers_large_binary": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_identifiers_small_binary": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_large_beta": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_large_pooled": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_small_beta": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_ids_small_pooled": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "all",
    "category_encoders.JamesSteinEncoder",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_beta": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_binary": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_large_samples_pooled": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_small_samples_binary": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "numpy.abs",
    "numpy.array",
    "numpy.log",
    "numpy.sum",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_small_samples_independent": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.TestJamesSteinEncoder.test_zero_variance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "category_encoders.JamesSteinEncoder",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_james_stein.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_james_stein.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_leave_one_out.np_X",
    "category_encoders.tests.test_leave_one_out.np_X_t",
    "category_encoders.tests.test_leave_one_out.np_y",
    "category_encoders.tests.test_leave_one_out.np_y_t",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_leave_one_out.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTestAndNoTestTarget_ExpectMean": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTest_ExpectMean": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleMissingIsValueAndNanInTrain_ExpectAtValueSet": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "category_encoders.tests.test_leave_one_out.X",
    "category_encoders.tests.test_leave_one_out.y",
    "list",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_HandleUnknownValue_HaveUnknownInTest_ExpectMean": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_leave_one_out.X",
    "category_encoders.tests.test_leave_one_out.X_t",
    "category_encoders.tests.test_leave_one_out.y",
    "category_encoders.tests.test_leave_one_out.y_t"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_fit_callTwiceOnDifferentData_ExpectRefit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "len",
    "numpy.testing.assert_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_unique": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "category_encoders.tests.test_leave_one_out.X",
    "category_encoders.tests.test_leave_one_out.y",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_values": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "category_encoders.tests.test_leave_one_out.X",
    "category_encoders.tests.test_leave_one_out.y",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.X_t": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out.np_X": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.np_X_t": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.np_y": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.np_y_t": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_leave_one_out.y": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "category_encoders.tests.test_leave_one_out.y_t": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_one_hot.np_X",
    "category_encoders.tests.test_one_hot.np_X_t",
    "category_encoders.tests.test_one_hot.np_y",
    "category_encoders.tests.test_one_hot.np_y_t",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_one_hot.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveColumnAppearTwice_ExpectColumnsDeduped": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownIndicatorAndMissingValue_ExpectValueSet": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownIndicatorAndNoMissingValue_ExpectExtraColumn": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownValueAndSeenValues_ExpectMappingUsed": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveHandleUnknownValueAndUnseenValues_ExpectAllZeroes": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_fit_transform_HaveMissingValuesAndUseCatNames_ExpectCorrectValue": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "UserWarning",
    "category_encoders.OneHotEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveDedupedColumns_ExpectCorrectInverseTransform": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_inverse_transform_HaveNoCatNames_ExpectCorrectInverseTransform": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_one_hot": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.OneHotEncoder",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.helpers.verify_inverse_transform",
    "category_encoders.tests.test_one_hot.X",
    "category_encoders.tests.test_one_hot.X_t",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_one_hot.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.X_t": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_one_hot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_one_hot.np_X": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.np_X_t": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.np_y": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.np_y_t": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_one_hot.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_one_hot.y": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "category_encoders.tests.test_one_hot.y_t": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_ordinal.np_X",
    "category_encoders.tests.test_ordinal.np_X_t",
    "category_encoders.tests.test_ordinal.np_y",
    "category_encoders.tests.test_ordinal.np_y_t",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_ordinal.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNaNInTrain_ExpectCodedAsOne": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNegativeOneInTrain_ExpectCodedAsOne": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_HaveNoneAndNan_ExpectCodesAsOne": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_missing_have_nan_fit_time_expect_as_category": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_missing_have_nan_transform_time_expect_negative_2": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_handle_unknown_have_new_value_expect_negative_1": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "UserWarning",
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_inverse_transform_HaveUnknown_ExpectWarning": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "UserWarning",
    "category_encoders.OrdinalEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "category_encoders.tests.test_ordinal.X",
    "category_encoders.tests.test_ordinal.X_t",
    "len",
    "numpy.isfinite",
    "set"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal_dist": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "len",
    "numpy.array",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_pandas_categorical": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_ordinal.X",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.X_t": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_ordinal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_ordinal.np_X": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.np_X_t": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.np_y": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.np_y_t": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_ordinal.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_ordinal.y": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "category_encoders.tests.test_ordinal.y_t": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "category_encoders.tests.test_polynomial": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_polynomial.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2StringCols_ExpectCorrectOrder": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2cols": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_2": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_3": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.a_encoding",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_4": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "category_encoders.tests.helpers.deep_round",
    "category_encoders.tests.test_polynomial.b_encoding",
    "category_encoders.tests.test_polynomial.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.a_encoding": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "category_encoders.tests.test_polynomial.b_encoding": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.tests.test_polynomial.c_encoding": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_polynomial.deep_round": {
  "data": {
   "shadows": "category_encoders.tests.helpers.deep_round"
  },
  "type": "import"
 },
 "category_encoders.tests.test_polynomial.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_polynomial.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_sum_coding": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_sum_coding.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_NanInTrain_ExpectAsColumn": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2StringCols_ExpectCorrectOrder": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2cols": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.b_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_3": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.a_encoding",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_4": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "category_encoders.tests.test_sum_coding.b_encoding",
    "category_encoders.tests.test_sum_coding.c_encoding"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.a_encoding": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "category_encoders.tests.test_sum_coding.b_encoding": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "category_encoders.tests.test_sum_coding.c_encoding": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.tests.test_sum_coding.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_sum_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_sum_coding.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_target_encoder.np_X",
    "category_encoders.tests.test_target_encoder.np_X_t",
    "category_encoders.tests.test_target_encoder.np_y",
    "category_encoders.tests.test_target_encoder.np_y_t",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_target_encoder.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_HandleMissingIsValueAndNanInTest_ExpectMean": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_HandleUnknownValue_HaveUnknownInTest_ExpectMean": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_target_encoder.X",
    "category_encoders.tests.test_target_encoder.X_t",
    "category_encoders.tests.test_target_encoder.y",
    "category_encoders.tests.test_target_encoder.y_t"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectUsedInFit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveCategoricalColumn_ExpectCorrectValueInResult": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectCorrectValueInResult": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveNanValue_ExpectCorrectValueInResult": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_noncontiguous_index": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "numpy.allclose",
    "numpy.nan",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.X_t": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder.np_X": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.np_X_t": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.np_y": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.np_y_t": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_target_encoder.y": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "category_encoders.tests.test_target_encoder.y_t": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "category_encoders.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_utils.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_utils.TestUtils.test_convert_input_vector": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input_vector",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_utils.convert_input_vector": {
  "data": {
   "shadows": "category_encoders.utils.convert_input_vector"
  },
  "type": "import"
 },
 "category_encoders.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.tests.helpers.create_array",
    "category_encoders.tests.helpers.create_dataset",
    "category_encoders.tests.test_woe.np_X",
    "category_encoders.tests.test_woe.np_X_t",
    "category_encoders.tests.test_woe.np_y",
    "category_encoders.tests.test_woe.np_y_t",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "category_encoders.tests.test_woe.TestCase": {
  "data": {
   "shadows": "unittest2.TestCase"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleMissingValue_HaveMissingInTest_ExpectEncodedWithZero": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "category_encoders.WOEEncoder",
    "category_encoders.tests.test_woe.X",
    "category_encoders.tests.test_woe.y",
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleMissingValue_HaveMissingInTrain_ExpectEncoded": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "category_encoders.WOEEncoder",
    "category_encoders.tests.test_woe.X",
    "category_encoders.tests.test_woe.y",
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HandleUnknownValue_HaveUnknown_ExpectEncodedWithZero": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "category_encoders.WOEEncoder",
    "category_encoders.tests.test_woe.X",
    "category_encoders.tests.test_woe.y",
    "pandas.Series",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_HaveArrays_ExpectCalculatedProperly": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "category_encoders.WOEEncoder",
    "category_encoders.tests.test_woe.X",
    "category_encoders.tests.test_woe.y",
    "pandas.Series",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_woe": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "category_encoders.WOEEncoder",
    "category_encoders.tests.helpers.verify_numeric",
    "category_encoders.tests.test_woe.X",
    "category_encoders.tests.test_woe.X_t",
    "category_encoders.tests.test_woe.np_y",
    "category_encoders.tests.test_woe.np_y_t",
    "len",
    "list",
    "numpy.isfinite",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_woe.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.X_t": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe.np_X": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.np_X_t": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.np_y": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.np_y_t": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe.th": {
  "data": {
   "shadows": "category_encoders.tests.helpers"
  },
  "type": "import"
 },
 "category_encoders.tests.test_woe.y": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "category_encoders.tests.test_woe.y_t": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "category_encoders.utils": {
  "data": {},
  "type": "module"
 },
 "category_encoders.utils.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "category_encoders.utils.convert_cols_to_list": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.isscalar",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.api.types.is_categorical",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.convert_input": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.generic",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.to_numeric",
    "scipy.sparse.csr.csr_matrix",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.convert_input_vector": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "flatten",
    "isinstance",
    "len",
    "list",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr.csr_matrix"
  },
  "type": "import"
 },
 "category_encoders.utils.get_generated_cols": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.get_obj_cols": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "enumerate",
    "is_category"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.is_category": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.api.types.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.woe": {
  "data": {},
  "type": "module"
 },
 "category_encoders.woe.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.woe.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.woe.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.woe.WOEEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.woe.WOEEncoder.__init__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._score": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._train": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "len",
    "numpy.max",
    "numpy.min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit_transform": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.get_feature_names": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.transform": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.woe.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.woe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.woe.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.woe.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 }
}