{
 "category_encoders": {
  "data": {},
  "type": "module"
 },
 "category_encoders.BackwardDifferenceEncoder": {
  "data": {
   "shadows": "category_encoders.backward_difference.BackwardDifferenceEncoder"
  },
  "type": "import"
 },
 "category_encoders.BaseNEncoder": {
  "data": {
   "shadows": "category_encoders.basen.BaseNEncoder"
  },
  "type": "import"
 },
 "category_encoders.BinaryEncoder": {
  "data": {
   "shadows": "category_encoders.binary.BinaryEncoder"
  },
  "type": "import"
 },
 "category_encoders.CatBoostEncoder": {
  "data": {
   "shadows": "category_encoders.cat_boost.CatBoostEncoder"
  },
  "type": "import"
 },
 "category_encoders.CountEncoder": {
  "data": {
   "shadows": "category_encoders.count.CountEncoder"
  },
  "type": "import"
 },
 "category_encoders.GLMMEncoder": {
  "data": {
   "shadows": "category_encoders.glmm.GLMMEncoder"
  },
  "type": "import"
 },
 "category_encoders.HashingEncoder": {
  "data": {
   "shadows": "category_encoders.hashing.HashingEncoder"
  },
  "type": "import"
 },
 "category_encoders.HelmertEncoder": {
  "data": {
   "shadows": "category_encoders.helmert.HelmertEncoder"
  },
  "type": "import"
 },
 "category_encoders.JamesSteinEncoder": {
  "data": {
   "shadows": "category_encoders.james_stein.JamesSteinEncoder"
  },
  "type": "import"
 },
 "category_encoders.LeaveOneOutEncoder": {
  "data": {
   "shadows": "category_encoders.leave_one_out.LeaveOneOutEncoder"
  },
  "type": "import"
 },
 "category_encoders.MEstimateEncoder": {
  "data": {
   "shadows": "category_encoders.m_estimate.MEstimateEncoder"
  },
  "type": "import"
 },
 "category_encoders.OneHotEncoder": {
  "data": {
   "shadows": "category_encoders.one_hot.OneHotEncoder"
  },
  "type": "import"
 },
 "category_encoders.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.PolynomialEncoder": {
  "data": {
   "shadows": "category_encoders.polynomial.PolynomialEncoder"
  },
  "type": "import"
 },
 "category_encoders.SumEncoder": {
  "data": {
   "shadows": "category_encoders.sum_coding.SumEncoder"
  },
  "type": "import"
 },
 "category_encoders.TargetEncoder": {
  "data": {
   "shadows": "category_encoders.target_encoder.TargetEncoder"
  },
  "type": "import"
 },
 "category_encoders.WOEEncoder": {
  "data": {
   "shadows": "category_encoders.woe.WOEEncoder"
  },
  "type": "import"
 },
 "category_encoders.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "category_encoders.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "category_encoders.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "category_encoders.backward_difference": {
  "data": {},
  "type": "module"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.backward_difference_coding": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit_backward_difference_coding": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Diff",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.get_feature_names": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.transform": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.Diff": {
  "data": {
   "shadows": "patsy.contrasts.Diff"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.backward_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.basen": {
  "data": {},
  "type": "module"
 },
 "category_encoders.basen.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.basen.BaseNEncoder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.basen.BaseNEncoder.__init__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_encode": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_to_integer": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "category_encoders.basen.re",
    "int",
    "len",
    "numpy.array",
    "numpy.dot",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.calc_required_digits": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "category_encoders.basen.math",
    "int",
    "len",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.col_transform": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit_base_n_encoding": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.get_feature_names": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.inverse_transform": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.basen.warnings",
    "category_encoders.utils.convert_input",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.number_to_base": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "divmod",
    "int",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.transform": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.basen.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.basen.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.basen.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.basen.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "category_encoders.basen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.basen.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.basen.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "category_encoders.basen.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.basen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.binary": {
  "data": {},
  "type": "module"
 },
 "category_encoders.binary.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.binary.BinaryEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.binary.BinaryEncoder.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "category_encoders.BaseNEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.fit": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.get_feature_names": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.inverse_transform": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.transform": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "category_encoders.binary.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.binary.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.binary.ce": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.binary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.cat_boost": {
  "data": {},
  "type": "module"
 },
 "category_encoders.cat_boost.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.CatBoostEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.cat_boost.CatBoostEncoder.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder._fit": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder._fit_column_map": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "numpy.append",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder._transform": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.nan",
    "object",
    "pandas.Series",
    "sklearn.utils.random.check_random_state",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.get_feature_names": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.CatBoostEncoder.transform": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.cat_boost.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.cat_boost.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.cat_boost.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.count": {
  "data": {},
  "type": "module"
 },
 "category_encoders.count.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.count.CountEncoder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.count.CountEncoder.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder._check_set_create_attrs": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder._check_set_create_dict_attrs": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "copy.copy",
    "dict",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder._fit_count_encode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "numpy.NaN",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder._transform_count_encode": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder.combine_min_categories": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder.fit": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.CountEncoder.transform": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.count.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.count.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.count.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "category_encoders.count.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "category_encoders.count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.count.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.glmm": {
  "data": {},
  "type": "module"
 },
 "category_encoders.glmm.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.glmm.GLMMEncoder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.glmm.GLMMEncoder.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder._rename_and_merge": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder._score": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder._train": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "category_encoders.glmm.re",
    "category_encoders.glmm.warnings",
    "dict",
    "float",
    "int",
    "len",
    "numpy.linalg.LinAlgError",
    "numpy.nan",
    "numpy.random.seed",
    "numpy.zeros",
    "pandas.Series",
    "statsmodels.formula.api.mixedlm",
    "statsmodels.genmod.bayes_mixed_glm.BinomialBayesMixedGLM.from_formula"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder.fit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder.get_feature_names": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.GLMMEncoder.transform": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.glmm.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.glmm.__author__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "category_encoders.glmm.bgmm": {
  "data": {
   "shadows": "statsmodels.genmod.bayes_mixed_glm.BinomialBayesMixedGLM"
  },
  "type": "import"
 },
 "category_encoders.glmm.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.glmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.glmm.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.glmm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "category_encoders.glmm.smf": {
  "data": {
   "shadows": "statsmodels.formula.api"
  },
  "type": "import"
 },
 "category_encoders.glmm.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.glmm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.hashing": {
  "data": {},
  "type": "module"
 },
 "category_encoders.hashing.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.hashing.HashingEncoder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.hashing.HashingEncoder.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "category_encoders.hashing.math",
    "category_encoders.hashing.multiprocessing",
    "category_encoders.hashing.platform",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder._transform": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.fit": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.get_feature_names": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "category_encoders.hashing.hashlib",
    "pandas.concat",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick.hash_fn": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "bytes",
    "category_encoders.hashing.hashlib",
    "category_encoders.hashing.sys",
    "int",
    "pandas.Series",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.require_data": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "all",
    "category_encoders.hashing.math",
    "int",
    "print",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.transform": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.hashing.multiprocessing",
    "category_encoders.utils.convert_input",
    "int",
    "len",
    "list",
    "pandas.concat",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.hashing.__author__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "category_encoders.hashing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "category_encoders.hashing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "category_encoders.hashing.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "category_encoders.hashing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.hashing.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "category_encoders.hashing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "category_encoders.hashing.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.helmert": {
  "data": {},
  "type": "module"
 },
 "category_encoders.helmert.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.helmert.Helmert": {
  "data": {
   "shadows": "patsy.contrasts.Helmert"
  },
  "type": "import"
 },
 "category_encoders.helmert.HelmertEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.helmert.HelmertEncoder.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit_helmert_coding": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Helmert",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.helmert_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.transform": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.helmert.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.helmert.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.helmert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.helmert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.helmert.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.james_stein": {
  "data": {},
  "type": "module"
 },
 "category_encoders.james_stein.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.james_stein.JamesSteinEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.james_stein.JamesSteinEncoder.__init__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._score": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_beta": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_independent": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "category_encoders.james_stein.scipy",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.log",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_log_odds_ratio.get_best_sigma": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "abs",
    "sum"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder._train_pooled": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.fit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "len",
    "numpy.max",
    "numpy.min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.get_feature_names": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.JamesSteinEncoder.transform": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.james_stein.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.james_stein.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.james_stein.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.james_stein.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.james_stein.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "category_encoders.james_stein.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.james_stein.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "category_encoders.james_stein.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out": {
  "data": {},
  "type": "module"
 },
 "category_encoders.leave_one_out.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_column_map": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "numpy.append",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_leave_one_out": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.get_feature_names": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform_leave_one_out": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "object",
    "pandas.Series",
    "sklearn.utils.random.check_random_state",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.leave_one_out.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.leave_one_out.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.leave_one_out.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.m_estimate": {
  "data": {},
  "type": "module"
 },
 "category_encoders.m_estimate.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.MEstimateEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.m_estimate.MEstimateEncoder.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._score": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder._train": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.get_feature_names": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.MEstimateEncoder.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.m_estimate.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.m_estimate.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.m_estimate.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.one_hot": {
  "data": {},
  "type": "module"
 },
 "category_encoders.one_hot.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.one_hot.OneHotEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.one_hot.OneHotEncoder.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.category_mapping": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.generate_mapping": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.int",
    "numpy.nan",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_dummies": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_feature_names": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.inverse_transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.one_hot.warnings",
    "category_encoders.utils.convert_input",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.reverse_dummies": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.transform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.one_hot.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.one_hot.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.one_hot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.one_hot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.one_hot.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.one_hot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.ordinal": {
  "data": {},
  "type": "module"
 },
 "category_encoders.ordinal.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.ordinal.OrdinalEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.ordinal.OrdinalEncoder.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.category_mapping": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.fit": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.get_feature_names": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.inverse_transform": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "category_encoders.ordinal.warnings",
    "category_encoders.utils.convert_input",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.ordinal_encoding": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "category_encoders.utils.is_category",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.Series",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.transform": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.ordinal.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.ordinal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.ordinal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.ordinal.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.ordinal.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "category_encoders.polynomial": {
  "data": {},
  "type": "module"
 },
 "category_encoders.polynomial.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.polynomial.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.polynomial.Poly": {
  "data": {
   "shadows": "patsy.contrasts.Poly"
  },
  "type": "import"
 },
 "category_encoders.polynomial.PolynomialEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.polynomial.PolynomialEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit_polynomial_coding": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Poly",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.polynomial_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.polynomial.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.polynomial.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.polynomial.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.sum_coding": {
  "data": {},
  "type": "module"
 },
 "category_encoders.sum_coding.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.Sum": {
  "data": {
   "shadows": "patsy.contrasts.Sum"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.SumEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.sum_coding.SumEncoder.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "print"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit_sum_coding": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DataFrame",
    "patsy.contrasts.Sum",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.get_feature_names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.sum_coding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.sum_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.target_encoder": {
  "data": {},
  "type": "module"
 },
 "category_encoders.target_encoder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.TargetEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.target_encoder.TargetEncoder.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "list",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_target_encoding": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.get_feature_names": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.target_encode": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.transform": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.target_encoder.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.target_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.target_encoder.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.utils": {
  "data": {},
  "type": "module"
 },
 "category_encoders.utils.TransformerWithTargetMixin": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "category_encoders.utils.TransformerWithTargetMixin.fit_transform": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "category_encoders.utils.convert_cols_to_list": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.isscalar",
    "numpy.ndarray",
    "object",
    "pandas.Series",
    "pandas.api.types.is_categorical",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.convert_input": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.generic",
    "numpy.ndarray",
    "numpy.size",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.sparse.csr.csr_matrix",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.convert_input_vector": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "flatten",
    "float",
    "isinstance",
    "len",
    "list",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr.csr_matrix"
  },
  "type": "import"
 },
 "category_encoders.utils.get_generated_cols": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.get_obj_cols": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "category_encoders.utils.is_category",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.is_category": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.api.types.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.woe": {
  "data": {},
  "type": "module"
 },
 "category_encoders.woe.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.woe.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.woe.WOEEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "category_encoders.utils.TransformerWithTargetMixin",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "category_encoders.woe.WOEEncoder.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._score": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "sklearn.utils.random.check_random_state"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._train": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_cols_to_list",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "category_encoders.utils.get_generated_cols",
    "category_encoders.utils.get_obj_cols",
    "float",
    "len",
    "numpy.max",
    "numpy.min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.get_feature_names": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.convert_input_vector",
    "float",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.woe.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.woe.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.random.check_random_state"
  },
  "type": "import"
 },
 "category_encoders.woe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.woe.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.woe.util": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "category_encoders.wrapper": {
  "data": {},
  "type": "module"
 },
 "category_encoders.wrapper.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.wrapper.NestedCVWrapper": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.wrapper.NestedCVWrapper.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "sklearn.model_selection.StratifiedKFold",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.wrapper.NestedCVWrapper.fit": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "category_encoders.wrapper.NestedCVWrapper.fit_transform": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "category_encoders.utils.convert_input",
    "category_encoders.wrapper.copy",
    "numpy.zeros",
    "pandas.DataFrame",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.wrapper.NestedCVWrapper.transform": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "category_encoders.wrapper.PolynomialWrapper": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.wrapper.PolynomialWrapper.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "category_encoders.wrapper.PolynomialWrapper.fit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.wrapper.copy"
   ]
  },
  "type": "function"
 },
 "category_encoders.wrapper.PolynomialWrapper.fit_transform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.wrapper.copy",
    "pandas.DataFrame",
    "pandas.concat",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.wrapper.PolynomialWrapper.transform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "category_encoders.utils.convert_input",
    "pandas.DataFrame",
    "pandas.concat",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.wrapper.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "category_encoders.wrapper.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.wrapper.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "category_encoders.wrapper.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.wrapper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.wrapper.utils": {
  "data": {
   "shadows": "category_encoders.utils"
  },
  "type": "import"
 },
 "examples": {
  "data": {},
  "type": "module"
 },
 "examples.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.benchmarking": {
  "data": {},
  "type": "module"
 },
 "examples.benchmarking.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.benchmarking.benchmarking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.benchmarking.benchmarking.gc",
    "examples.benchmarking.benchmarking.leaveoneout"
   ]
  },
  "type": "module"
 },
 "examples.benchmarking.benchmarking.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "examples.benchmarking.benchmarking.backward_difference": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.binary": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.ce": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.control": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_cars_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_cars_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_mushroom_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_mushroom_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_splice_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_splice_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.hashing": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.HashingEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.helmert": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.leaveoneout": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "category_encoders.LeaveOneOutEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.onehot": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.ordinal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.polynomial": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.profile": {
  "data": {
   "shadows": "memory_profiler.profile"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.sum_coding": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.reporting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.benchmarking.reporting.control_mib",
    "examples.benchmarking.reporting.df",
    "pandas.read_csv",
    "print"
   ]
  },
  "type": "module"
 },
 "examples.benchmarking.reporting.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.control_mib": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.df": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.column_transformer_example": {
  "data": {
   "symbols_in_volume": [
    "category_encoders.TargetEncoder",
    "examples.column_transformer_example.ct",
    "examples.column_transformer_example.encoded",
    "examples.source_data.loaders.get_mushroom_data",
    "print",
    "sklearn.compose.ColumnTransformer"
   ]
  },
  "type": "module"
 },
 "examples.column_transformer_example.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "examples.column_transformer_example.TargetEncoder": {
  "data": {
   "shadows": "category_encoders.TargetEncoder"
  },
  "type": "import"
 },
 "examples.column_transformer_example.ct": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "examples.column_transformer_example.encoded": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "examples.column_transformer_example.get_mushroom_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_mushroom_data"
  },
  "type": "import"
 },
 "examples.encoding_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.encoding_examples.main",
    "examples.encoding_examples.warnings",
    "examples.source_data.loaders.get_cars_data",
    "matplotlib.pyplot.style.use",
    "print",
    "sklearn.exceptions.DataConversionWarning"
   ]
  },
  "type": "module"
 },
 "examples.encoding_examples.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "examples.encoding_examples.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "examples.encoding_examples.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "examples.encoding_examples.category_encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "examples.encoding_examples.cross_validate": {
  "data": {
   "shadows": "sklearn.model_selection.cross_validate"
  },
  "type": "import"
 },
 "examples.encoding_examples.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "examples.encoding_examples.get_cars_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_cars_data"
  },
  "type": "import"
 },
 "examples.encoding_examples.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "examples.encoding_examples.main": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "encoder",
    "examples.encoding_examples.category_encoders",
    "examples.encoding_examples.gc",
    "examples.encoding_examples.score_models",
    "examples.encoding_examples.time",
    "getattr",
    "loader",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.tight_layout",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.ylabel",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "set",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "examples.encoding_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.encoding_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.encoding_examples.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "examples.encoding_examples.score_models": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "encoder",
    "examples.encoding_examples.gc",
    "float",
    "numpy.mean",
    "numpy.std",
    "range",
    "sklearn.model_selection.cross_validate",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "examples.encoding_examples.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "examples.encoding_examples.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "examples.grid_search_example": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "category_encoders.basen.BaseNEncoder",
    "examples.grid_search_example.X",
    "examples.grid_search_example.clf",
    "examples.grid_search_example.means",
    "examples.grid_search_example.ppl",
    "examples.grid_search_example.scores",
    "examples.grid_search_example.stds",
    "examples.grid_search_example.tuned_parameters",
    "examples.grid_search_example.warnings",
    "examples.source_data.loaders.get_mushroom_data",
    "print",
    "sklearn.exceptions.DataConversionWarning",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.classification_report",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "zip"
   ]
  },
  "type": "module"
 },
 "examples.grid_search_example.BaseNEncoder": {
  "data": {
   "shadows": "category_encoders.basen.BaseNEncoder"
  },
  "type": "import"
 },
 "examples.grid_search_example.DataConversionWarning": {
  "data": {
   "shadows": "sklearn.exceptions.DataConversionWarning"
  },
  "type": "import"
 },
 "examples.grid_search_example.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "examples.grid_search_example.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "examples.grid_search_example.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "examples.grid_search_example.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "examples.grid_search_example.X": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "examples.grid_search_example.classification_report": {
  "data": {
   "shadows": "sklearn.metrics.classification_report"
  },
  "type": "import"
 },
 "examples.grid_search_example.clf": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "examples.grid_search_example.get_mushroom_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_mushroom_data"
  },
  "type": "import"
 },
 "examples.grid_search_example.means": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "examples.grid_search_example.n_samples": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "examples.grid_search_example.ppl": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "examples.grid_search_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "examples.grid_search_example.scores": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "examples.grid_search_example.stds": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "examples.grid_search_example.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "examples.grid_search_example.tuned_parameters": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "examples.grid_search_example.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "examples.source_data": {
  "data": {},
  "type": "module"
 },
 "examples.source_data.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.source_data.loaders": {
  "data": {},
  "type": "module"
 },
 "examples.source_data.loaders.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "examples.source_data.loaders.get_cars_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.read_csv",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.get_mushroom_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.read_csv",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.get_splice_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list",
    "pandas.read_csv",
    "range",
    "sklearn.preprocessing.LabelEncoder",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.source_data.loaders.preprocessing": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 }
}