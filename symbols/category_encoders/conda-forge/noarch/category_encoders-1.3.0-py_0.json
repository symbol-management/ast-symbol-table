{
 "category_encoders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.backward_difference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.backward_difference_coding": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit": {
  "lineno": 97,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit_backward_difference_coding": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Diff"
  ],
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.transform": {
  "lineno": 156,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.basen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.basen.BaseNEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.basen.BaseNEncoder.__init__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_encode": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.basen_to_integer": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.calc_required_digits": {
  "lineno": 239,
  "symbols_in_volume": [
   "math.log",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.col_transform": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.fit": {
  "lineno": 91,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.inverse_transform": {
  "lineno": 191,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "warnings.warn"
  ],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.numberToBase": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.basen.BaseNEncoder.transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols"
  ],
  "type": "function"
 },
 "category_encoders.binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.binary.BinaryEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.binary.BinaryEncoder.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.binary": {
  "lineno": 225,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.binary_to_integer": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.calc_required_digits": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log2"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.col_transform": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.fit": {
  "lineno": 85,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.inverse_transform": {
  "lineno": 179,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.transform": {
  "lineno": 137,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.hashing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.hashing.HashingEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.hashing.HashingEncoder.__init__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.fit": {
  "lineno": 86,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick": {
  "lineno": 164,
  "symbols_in_volume": [
   "hashlib.algorithms_available",
   "hashlib.new",
   "pandas.merge"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick.hash_fn": {
  "lineno": 221,
  "symbols_in_volume": [
   "hashlib.new",
   "pandas.Series",
   "sys.version_info"
  ],
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.transform": {
  "lineno": 124,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.helmert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.helmert.HelmertEncoder": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.helmert.HelmertEncoder.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit": {
  "lineno": 97,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit_helmert_coding": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Helmert"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.helmert_coding": {
  "lineno": 206,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.transform": {
  "lineno": 153,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit": {
  "lineno": 94,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_leave_one_out": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.fit_transform": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform": {
  "lineno": 143,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.leave_one_out.LeaveOneOutEncoder.transform_leave_one_out": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.one_hot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.one_hot.OneHotEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.one_hot.OneHotEncoder.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.category_mapping": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.fit": {
  "lineno": 105,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_dummies": {
  "lineno": 238,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.inverse_transform": {
  "lineno": 192,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.reverse_dummies": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.transform": {
  "lineno": 150,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.ordinal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.ordinal.OrdinalEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.ordinal.OrdinalEncoder.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.category_mapping": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.fit": {
  "lineno": 99,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.inverse_transform": {
  "lineno": 192,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.ordinal_encoding": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.unique"
  ],
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.polynomial.PolynomialEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.polynomial.PolynomialEncoder.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit_polynomial_coding": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Poly"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.polynomial_coding": {
  "lineno": 207,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.transform": {
  "lineno": 154,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.sum_coding.SumEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.sum_coding.SumEncoder.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "category_encoders.ordinal.OrdinalEncoder",
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit_sum_coding": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "patsy.contrasts.Sum"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.sum_coding": {
  "lineno": 207,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.transform": {
  "lineno": 154,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.target_encoder.TargetEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.target_encoder.TargetEncoder.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit": {
  "lineno": 95,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.fit_transform": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.target_encode": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.target_encoder.TargetEncoder.transform": {
  "lineno": 143,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_backward_difference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_2cols": {
  "lineno": 63,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_1": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_2": {
  "lineno": 22,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_3": {
  "lineno": 35,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_backward_difference.TestBackwardsEncoder.test_backwards_difference_encoder_preserve_dimension_4": {
  "lineno": 49,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_bin": {
  "lineno": 10,
  "symbols_in_volume": [
   "category_encoders.BinaryEncoder",
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_binary.TestBinaryEncoder.test_binary_dist": {
  "lineno": 15,
  "symbols_in_volume": [
   "category_encoders.BinaryEncoder",
   "numpy.array",
   "pandas.concat"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_encoders.TestEncoders": {
  "lineno": 29,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_classification": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.test_utils.verify_numeric",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_doc": {
  "lineno": 236,
  "symbols_in_volume": [
   "doctest.DocFileSuite",
   "os.listdir",
   "unittest2.TestSuite",
   "unittest2.TextTestRunner"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_error_handling": {
  "lineno": 91,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.test_utils.create_dataset"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_handle_unknown_error": {
  "lineno": 117,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.test_utils.create_dataset"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_impact_encoders": {
  "lineno": 72,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.tests.test_utils.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_inverse_transform": {
  "lineno": 145,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.tests.test_utils.create_dataset",
   "category_encoders.tests.test_utils.verify_inverse_transform"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_np": {
  "lineno": 31,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "category_encoders.tests.test_utils.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_column_order": {
  "lineno": 189,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_preserve_names": {
  "lineno": 214,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_sklearn_compliance": {
  "lineno": 131,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "sklearn.__version__",
   "sklearn.utils.estimator_checks.check_transformer_general",
   "sklearn.utils.estimator_checks.check_transformers_unfitted"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_tmp_column_name": {
  "lineno": 203,
  "symbols_in_volume": [
   "category_encoders",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_types": {
  "lineno": 165,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_unique_column_is_not_predictive": {
  "lineno": 228,
  "symbols_in_volume": [
   "category_encoders"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2StringCols_ExpectCorrectOrder": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_2cols": {
  "lineno": 63,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_1": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_2": {
  "lineno": 22,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_3": {
  "lineno": 35,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_helmert.TestHelmertEncoder.test_helmert_preserve_dimension_4": {
  "lineno": 49,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "category_encoders.tests.test_utils.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_fit_callTwiceOnDifferentData_ExpectRefit": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_leave_one_out.TestLeaveOneOutEncoder.test_leave_one_out_values": {
  "lineno": 27,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_one_hot": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_one_hot.TestOneHotEncoderTestCase.test_one_hot": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "category_encoders.tests.test_utils.create_dataset",
   "category_encoders.tests.test_utils.verify_inverse_transform"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_ordinal.TestOrdinalEncoder.test_ordinal_dist": {
  "lineno": 45,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "numpy.array",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 81,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_2cols": {
  "lineno": 69,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.test_utils.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_1": {
  "lineno": 15,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.test_utils.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_2": {
  "lineno": 28,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.test_utils.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_3": {
  "lineno": 41,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.test_utils.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_polynomial.TestPolynomialEncoder.test_polynomial_encoder_preserve_dimension_4": {
  "lineno": 55,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "category_encoders.tests.test_utils.deep_round"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2StringCols_ExpectCorrectOrder": {
  "lineno": 79,
  "symbols_in_volume": [
   "category_encoders.SumEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_2cols": {
  "lineno": 67,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_1": {
  "lineno": 13,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_2": {
  "lineno": 26,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_3": {
  "lineno": 39,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_sum_coding.TestSumEncoder.test_sum_encoder_preserve_dimension_4": {
  "lineno": 53,
  "symbols_in_volume": [
   "category_encoders.SumEncoder"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder": {
  "lineno": 21,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "category_encoders.tests.test_utils.verify_numeric"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectUsedInFit": {
  "lineno": 28,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_target_encoder.TestTargetEncoder.test_target_encoder_fit_transform_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectCorrectValueInResult": {
  "lineno": 41,
  "symbols_in_volume": [
   "category_encoders.TargetEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.tests.test_utils.create_array": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "random.choice",
   "random.random"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_utils.create_dataset": {
  "lineno": 34,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "random.choice",
   "random.random"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_utils.deep_round": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.tests.test_utils.verify_inverse_transform": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.tests.test_utils.verify_numeric": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "category_encoders.tests.test_woe": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.tests.test_utils.create_array",
   "category_encoders.tests.test_utils.create_dataset",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "module"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest2.TestCase"
  ],
  "type": "class"
 },
 "category_encoders.tests.test_woe.TestWeightOfEvidenceEncoder.test_woe": {
  "lineno": 19,
  "symbols_in_volume": [
   "category_encoders.WOEEncoder",
   "category_encoders.tests.test_utils.verify_numeric",
   "numpy.isfinite",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "category_encoders.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.utils.convert_input": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.generic",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "category_encoders.utils.get_generated_cols": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.utils.get_obj_cols": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "category_encoders.woe.WOEEncoder": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "category_encoders.woe.WOEEncoder.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._score": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "sklearn.utils.random.check_random_state"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder._train": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "category_encoders.utils.get_generated_cols",
   "category_encoders.utils.get_obj_cols",
   "numpy.max",
   "numpy.min",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.fit_transform": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "category_encoders.woe.WOEEncoder.transform": {
  "lineno": 156,
  "symbols_in_volume": [
   "category_encoders.utils.convert_input",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "examples.benchmarking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "examples.benchmarking.benchmarking": {
  "lineno": null,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "module"
 },
 "examples.benchmarking.benchmarking.backward_difference": {
  "lineno": 53,
  "symbols_in_volume": [
   "category_encoders.BackwardDifferenceEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.binary": {
  "lineno": 64,
  "symbols_in_volume": [
   "category_encoders.BinaryEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.control": {
  "lineno": 108,
  "symbols_in_volume": [
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.hashing": {
  "lineno": 9,
  "symbols_in_volume": [
   "category_encoders.HashingEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.helmert": {
  "lineno": 75,
  "symbols_in_volume": [
   "category_encoders.HelmertEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.leaveoneout": {
  "lineno": 20,
  "symbols_in_volume": [
   "category_encoders.LeaveOneOutEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.onehot": {
  "lineno": 31,
  "symbols_in_volume": [
   "category_encoders.OneHotEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.ordinal": {
  "lineno": 42,
  "symbols_in_volume": [
   "category_encoders.OrdinalEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.polynomial": {
  "lineno": 86,
  "symbols_in_volume": [
   "category_encoders.PolynomialEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.benchmarking.sum_coding": {
  "lineno": 97,
  "symbols_in_volume": [
   "category_encoders.SumEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "memory_profiler.profile"
  ],
  "type": "function"
 },
 "examples.benchmarking.reporting": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "module"
 },
 "examples.encoding_examples": {
  "lineno": null,
  "symbols_in_volume": [
   "examples.source_data.loaders.get_cars_data",
   "matplotlib.pyplot.style.use"
  ],
  "type": "module"
 },
 "examples.encoding_examples.main": {
  "lineno": 40,
  "symbols_in_volume": [
   "category_encoders",
   "category_encoders.__all__",
   "gc.collect",
   "matplotlib.pyplot.grid",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.ylabel",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "sklearn.linear_model.LogisticRegression",
   "time.time"
  ],
  "type": "function"
 },
 "examples.encoding_examples.score_models": {
  "lineno": 17,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.mean",
   "numpy.std",
   "sklearn.cross_validation.cross_val_score"
  ],
  "type": "function"
 },
 "examples.grid_search_example": {
  "lineno": null,
  "symbols_in_volume": [
   "category_encoders.basen.BaseNEncoder",
   "examples.source_data.loaders.get_mushroom_data",
   "sklearn.cross_validation.train_test_split",
   "sklearn.grid_search.GridSearchCV",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.classification_report",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "module"
 },
 "examples.source_data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "examples.source_data.loaders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "examples.source_data.loaders.get_cars_data": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.read_csv",
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "examples.source_data.loaders.get_mushroom_data": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.read_csv",
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "examples.source_data.loaders.get_splice_data": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.read_csv",
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 }
}