{
 "*": {
  "data": {
   "imports": [
    "category_encoders"
   ]
  },
  "type": "star-import"
 },
 "category_encoders": {
  "data": {},
  "type": "module"
 },
 "category_encoders.BackwardDifferenceEncoder": {
  "data": {
   "shadows": "category_encoders.backward_difference.BackwardDifferenceEncoder"
  },
  "type": "import"
 },
 "category_encoders.BinaryEncoder": {
  "data": {
   "shadows": "category_encoders.binary.BinaryEncoder"
  },
  "type": "import"
 },
 "category_encoders.HashingEncoder": {
  "data": {
   "shadows": "category_encoders.hashing.HashingEncoder"
  },
  "type": "import"
 },
 "category_encoders.HelmertEncoder": {
  "data": {
   "shadows": "category_encoders.helmert.HelmertEncoder"
  },
  "type": "import"
 },
 "category_encoders.OneHotEncoder": {
  "data": {
   "shadows": "category_encoders.one_hot.OneHotEncoder"
  },
  "type": "import"
 },
 "category_encoders.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.PolynomialEncoder": {
  "data": {
   "shadows": "category_encoders.polynomial.PolynomialEncoder"
  },
  "type": "import"
 },
 "category_encoders.SumEncoder": {
  "data": {
   "shadows": "category_encoders.sum_coding.SumEncoder"
  },
  "type": "import"
 },
 "category_encoders.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "category_encoders.__author__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "category_encoders.backward_difference": {
  "data": {},
  "type": "module"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.backward_difference_coding": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "len",
    "patsy.highlevel.dmatrix",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.fit": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BackwardDifferenceEncoder.transform": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.backward_difference.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.backward_difference.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.dmatrix": {
  "data": {
   "shadows": "patsy.highlevel.dmatrix"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.backward_difference.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.binary": {
  "data": {},
  "type": "module"
 },
 "category_encoders.binary.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.binary.BinaryEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.binary.BinaryEncoder.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.binary": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.ceil",
    "numpy.log2",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.col_transform": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "list",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.fit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.BinaryEncoder.transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.binary.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.binary.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.binary.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.binary.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.binary.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "category_encoders.binary.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.binary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.binary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.hashing": {
  "data": {},
  "type": "module"
 },
 "category_encoders.hashing.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.hashing.HashingEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.hashing.HashingEncoder.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.fit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "category_encoders.hashing.hashlib",
    "pandas.merge",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.hashing_trick.hash_fn": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "bytes",
    "category_encoders.hashing.hashlib",
    "category_encoders.hashing.sys",
    "int",
    "pandas.Series",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.HashingEncoder.transform": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.hashing.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.hashing.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.hashing.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.hashing.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.hashing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "category_encoders.hashing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.hashing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "category_encoders.helmert": {
  "data": {},
  "type": "module"
 },
 "category_encoders.helmert.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.helmert.HelmertEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.helmert.HelmertEncoder.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.fit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.helmert_coding": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "patsy.highlevel.dmatrix",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.HelmertEncoder.transform": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.helmert.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.helmert.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.helmert.__author__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "category_encoders.helmert.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.helmert.dmatrix": {
  "data": {
   "shadows": "patsy.highlevel.dmatrix"
  },
  "type": "import"
 },
 "category_encoders.helmert.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.helmert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.helmert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.one_hot": {
  "data": {},
  "type": "module"
 },
 "category_encoders.one_hot.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.one_hot.OneHotEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.one_hot.OneHotEncoder.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.fit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.get_dummies": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OneHotEncoder.transform": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.one_hot.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.one_hot.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.one_hot.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "category_encoders.one_hot.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.one_hot.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.one_hot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.one_hot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.ordinal": {
  "data": {},
  "type": "module"
 },
 "category_encoders.ordinal.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.ordinal.OrdinalEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.ordinal.OrdinalEncoder.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.fit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.ordinal_encoding": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "category_encoders.ordinal.random",
    "enumerate",
    "int",
    "list",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.OrdinalEncoder.transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.ordinal.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.ordinal.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.ordinal.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.ordinal.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "category_encoders.ordinal.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.ordinal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.ordinal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.ordinal.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "category_encoders.polynomial": {
  "data": {},
  "type": "module"
 },
 "category_encoders.polynomial.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.polynomial.PolynomialEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.polynomial.PolynomialEncoder.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.fit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.polynomial_coding": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "patsy.highlevel.dmatrix",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.PolynomialEncoder.transform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.polynomial.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.polynomial.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "category_encoders.polynomial.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.polynomial.dmatrix": {
  "data": {
   "shadows": "patsy.highlevel.dmatrix"
  },
  "type": "import"
 },
 "category_encoders.polynomial.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.polynomial.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.sum_coding": {
  "data": {},
  "type": "module"
 },
 "category_encoders.sum_coding.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.OrdinalEncoder": {
  "data": {
   "shadows": "category_encoders.ordinal.OrdinalEncoder"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.SumEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "category_encoders.sum_coding.SumEncoder.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.fit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "category_encoders.ordinal.OrdinalEncoder",
    "category_encoders.utils.convert_input",
    "category_encoders.utils.get_obj_cols"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.sum_coding": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "patsy.highlevel.dmatrix",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.SumEncoder.transform": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "category_encoders.utils.convert_input"
   ]
  },
  "type": "function"
 },
 "category_encoders.sum_coding.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "category_encoders.sum_coding.convert_input": {
  "data": {
   "shadows": "category_encoders.utils.convert_input"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.dmatrix": {
  "data": {
   "shadows": "patsy.highlevel.dmatrix"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.get_obj_cols": {
  "data": {
   "shadows": "category_encoders.utils.get_obj_cols"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.sum_coding.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_encoders.TestEncoders": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "category_encoders.tests.test_encoders.unittest"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_encoders.TestEncoders.create_array": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "category_encoders.tests.test_encoders.random",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.create_dataset": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "category_encoders.tests.test_encoders.random",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_backward_difference": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_backward_difference_np": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_binary": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_binary_np": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_hashing": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "category_encoders.HashingEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_hashing_np": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "category_encoders.HashingEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_helmert": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_helmert_np": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_onehot": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_onehot_np": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_ordinal": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_ordinal_np": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_polynomial": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_polynomial_np": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_sum": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.test_sum_np": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "category_encoders.SumEncoder"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.TestEncoders.verify_numeric": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_encoders.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "category_encoders.tests.test_encoders.encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "category_encoders.tests.test_encoders.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "category_encoders.tests.test_estimators": {
  "data": {},
  "type": "module"
 },
 "category_encoders.tests.test_estimators.TestEncoders": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "category_encoders.tests.test_estimators.unittest"
   ]
  },
  "type": "class"
 },
 "category_encoders.tests.test_estimators.TestEncoders.test_general_transformers": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_transformer_general"
   ]
  },
  "type": "function"
 },
 "category_encoders.tests.test_estimators.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "category_encoders.tests.test_estimators.check_transformer_general": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformer_general"
  },
  "type": "import"
 },
 "category_encoders.tests.test_estimators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "category_encoders.utils": {
  "data": {},
  "type": "module"
 },
 "category_encoders.utils.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "category_encoders.utils.convert_input": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.generic",
    "numpy.ndarray",
    "pandas.DataFrame",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.get_obj_cols": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "category_encoders.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "category_encoders.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples": {
  "data": {},
  "type": "module"
 },
 "examples.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.benchmarking": {
  "data": {},
  "type": "module"
 },
 "examples.benchmarking.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.benchmarking.benchmarking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.benchmarking.benchmarking.gc",
    "examples.benchmarking.benchmarking.onehot"
   ]
  },
  "type": "module"
 },
 "examples.benchmarking.benchmarking.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "examples.benchmarking.benchmarking.backward_difference": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "category_encoders.BackwardDifferenceEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.binary": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "category_encoders.BinaryEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.ce": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.control": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_cars_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_cars_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_mushroom_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_mushroom_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.get_splice_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_splice_data"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.hashing": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "category_encoders.HashingEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.helmert": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "category_encoders.HelmertEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.onehot": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "category_encoders.OneHotEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.ordinal": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "category_encoders.OrdinalEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.polynomial": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "category_encoders.PolynomialEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.benchmarking.profile": {
  "data": {
   "shadows": "memory_profiler.profile"
  },
  "type": "import"
 },
 "examples.benchmarking.benchmarking.sum_coding": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "category_encoders.SumEncoder",
    "examples.source_data.loaders.get_mushroom_data",
    "memory_profiler.profile",
    "print"
   ]
  },
  "type": "function"
 },
 "examples.benchmarking.reporting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.benchmarking.reporting.control_mib",
    "examples.benchmarking.reporting.df",
    "pandas.read_csv",
    "print"
   ]
  },
  "type": "module"
 },
 "examples.benchmarking.reporting.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.control_mib": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.df": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "examples.benchmarking.reporting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.encoding_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "examples.encoding_examples.main",
    "examples.source_data.loaders.get_cars_data",
    "examples.source_data.loaders.get_mushroom_data",
    "examples.source_data.loaders.get_splice_data",
    "matplotlib.pyplot.style.use",
    "print"
   ]
  },
  "type": "module"
 },
 "examples.encoding_examples.__author__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "examples.encoding_examples.category_encoders": {
  "data": {
   "shadows": "category_encoders"
  },
  "type": "import"
 },
 "examples.encoding_examples.cross_validation": {
  "data": {
   "shadows": "sklearn.cross_validation"
  },
  "type": "import"
 },
 "examples.encoding_examples.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "examples.encoding_examples.get_cars_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_cars_data"
  },
  "type": "import"
 },
 "examples.encoding_examples.get_mushroom_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_mushroom_data"
  },
  "type": "import"
 },
 "examples.encoding_examples.get_splice_data": {
  "data": {
   "shadows": "examples.source_data.loaders.get_splice_data"
  },
  "type": "import"
 },
 "examples.encoding_examples.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "examples.encoding_examples.main": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "encoder",
    "examples.encoding_examples.category_encoders",
    "examples.encoding_examples.gc",
    "examples.encoding_examples.score_models",
    "examples.encoding_examples.time",
    "loader",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.tight_layout",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.ylabel",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "examples.encoding_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.encoding_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.encoding_examples.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "examples.encoding_examples.score_models": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "encoder",
    "examples.encoding_examples.gc",
    "float",
    "numpy.mean",
    "numpy.std",
    "range",
    "sklearn.cross_validation.cross_val_score"
   ]
  },
  "type": "function"
 },
 "examples.encoding_examples.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "examples.source_data": {
  "data": {},
  "type": "module"
 },
 "examples.source_data.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "examples.source_data.loaders": {
  "data": {},
  "type": "module"
 },
 "examples.source_data.loaders.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "examples.source_data.loaders.get_cars_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.read_csv",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.get_mushroom_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.read_csv",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.get_splice_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list",
    "pandas.read_csv",
    "range",
    "sklearn.preprocessing.LabelEncoder",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.source_data.loaders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "examples.source_data.loaders.preprocessing": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 }
}