{
 "ensureconda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.api.ensureconda": {
  "lineno": 14,
  "symbols_in_volume": [
   "ensureconda.installer.install_conda_exe",
   "ensureconda.installer.install_micromamba",
   "ensureconda.resolve.conda_executables",
   "ensureconda.resolve.conda_standalone_executables",
   "ensureconda.resolve.mamba_executables",
   "ensureconda.resolve.micromamba_executables",
   "ensureconda.resolve.safe_next",
   "os.PathLike",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.cli.ensureconda_cli": {
  "lineno": 9,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "ensureconda.api.ensureconda",
   "sys.exit",
   "sys.stderr",
   "time.sleep"
  ],
  "type": "function"
 },
 "ensureconda.installer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.installer.install_conda_exe": {
  "lineno": 17,
  "symbols_in_volume": [
   "ensureconda.resolve.is_windows",
   "ensureconda.resolve.platform_subdir",
   "ensureconda.resolve.site_path",
   "pathlib.Path",
   "requests.get",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.installer.install_micromamba": {
  "lineno": 33,
  "symbols_in_volume": [
   "ensureconda.resolve.is_windows",
   "ensureconda.resolve.platform_subdir",
   "ensureconda.resolve.site_path",
   "io.BytesIO",
   "math.e",
   "pathlib.Path",
   "requests.exceptions.HTTPError",
   "requests.get",
   "tarfile.open",
   "time.sleep",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.installer.new_executable": {
  "lineno": 68,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "filelock.FileLock",
   "os.chmod",
   "os.stat",
   "stat.S_IXUSR",
   "typing.IO",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "module"
 },
 "ensureconda.resolve.conda_executables": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.PathLike",
   "os.environ.get",
   "pathlib.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.conda_standalone_executables": {
  "lineno": 73,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.ext_candidates": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.environ.get",
   "os.pathsep",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.is_exe": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.X_OK",
   "os.access",
   "os.path.exists",
   "os.path.isfile",
   "pathlib.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.resolve.mamba_executables": {
  "lineno": 77,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.micromamba_executables": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.platform_subdir": {
  "lineno": 92,
  "symbols_in_volume": [
   "platform",
   "platform.machine",
   "struct.calcsize",
   "sys.platform"
  ],
  "type": "function"
 },
 "ensureconda.resolve.resolve_executable": {
  "lineno": 49,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.safe_next": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ensureconda.resolve.site_path": {
  "lineno": 45,
  "symbols_in_volume": [
   "appdirs.user_data_dir",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "ensureconda.resolve.which_no_shims": {
  "lineno": 28,
  "symbols_in_volume": [
   "os.environ.split",
   "os.path.join",
   "os.pathsep",
   "os.pathsep.join",
   "shutil.which",
   "typing.Optional"
  ],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_library": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_library._run_container_test": {
  "lineno": 42,
  "symbols_in_volume": [
   "docker.models.containers.Container",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "test.test_library.docker_client": {
  "lineno": 13,
  "symbols_in_volume": [
   "docker.from_env",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.test_container": {
  "lineno": 18,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.test_container_full": {
  "lineno": 30,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.test_ensure_full": {
  "lineno": 78,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pytest.mark.parametrize",
   "typing.List"
  ],
  "type": "function"
 },
 "test.test_library.test_ensure_simple": {
  "lineno": 58,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "typing.List"
  ],
  "type": "function"
 },
 "test.test_library.test_locally_install": {
  "lineno": 100,
  "symbols_in_volume": [
   "appdirs",
   "ensureconda.api.ensureconda",
   "ensureconda.resolve.is_windows",
   "os.environ.split",
   "os.path.dirname",
   "os.pathsep",
   "os.pathsep.join",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "test.test_library.test_locally_install.user_data_dir": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 }
}