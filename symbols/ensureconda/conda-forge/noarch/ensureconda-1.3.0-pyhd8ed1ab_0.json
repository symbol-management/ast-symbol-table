{
 "ensureconda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.api.determine_conda_version": {
  "lineno": 31,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "os.PathLike",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "ensureconda.api.determine_mamba_version": {
  "lineno": 16,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "os.PathLike",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "ensureconda.api.determine_micromamba_version": {
  "lineno": 24,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "os.PathLike",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "ensureconda.api.ensureconda": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "ensureconda.installer.install_conda_exe",
   "ensureconda.installer.install_micromamba",
   "ensureconda.resolve.conda_executables",
   "ensureconda.resolve.conda_standalone_executables",
   "ensureconda.resolve.mamba_executables",
   "ensureconda.resolve.micromamba_executables",
   "functools.partial",
   "os.PathLike",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.api.ensureconda.version_constraint_met": {
  "lineno": 70,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "os.PathLike",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.cli.VersionNumber": {
  "lineno": 24,
  "symbols_in_volume": [
   "click.ParamType"
  ],
  "type": "class"
 },
 "ensureconda.cli.VersionNumber.convert": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ensureconda.cli._as_loose_version": {
  "lineno": 11,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "typing.Union"
  ],
  "type": "function"
 },
 "ensureconda.cli.ensureconda_cli": {
  "lineno": 31,
  "symbols_in_volume": [
   "click.command",
   "click.option",
   "distutils.version.LooseVersion",
   "ensureconda.api.ensureconda",
   "sys.exit",
   "sys.stderr",
   "time.sleep"
  ],
  "type": "function"
 },
 "ensureconda.installer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ensureconda.installer.exe_suffix": {
  "lineno": 99,
  "symbols_in_volume": [
   "ensureconda.resolve.is_windows"
  ],
  "type": "function"
 },
 "ensureconda.installer.extract_files_from_conda_package": {
  "lineno": 37,
  "symbols_in_volume": [
   "ensureconda.resolve.site_path",
   "io.BytesIO",
   "tarfile.open"
  ],
  "type": "function"
 },
 "ensureconda.installer.install_conda_exe": {
  "lineno": 52,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "ensureconda.resolve.platform_subdir",
   "io.BytesIO",
   "pathlib.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.installer.install_micromamba": {
  "lineno": 82,
  "symbols_in_volume": [
   "ensureconda.resolve.is_windows",
   "ensureconda.resolve.platform_subdir",
   "io.BytesIO",
   "pathlib.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.installer.new_executable": {
  "lineno": 103,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "filelock.FileLock",
   "os.chmod",
   "os.stat",
   "stat.S_IXUSR",
   "typing.IO",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.installer.request_url_with_retry": {
  "lineno": 19,
  "symbols_in_volume": [
   "math.e",
   "requests.Response",
   "requests.exceptions.HTTPError",
   "requests.get",
   "time.sleep"
  ],
  "type": "function"
 },
 "ensureconda.resolve": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "module"
 },
 "ensureconda.resolve.conda_executables": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.PathLike",
   "os.environ.get",
   "pathlib.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.conda_standalone_executables": {
  "lineno": 73,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.ext_candidates": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.environ.get",
   "os.pathsep",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.is_exe": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.X_OK",
   "os.access",
   "os.path.exists",
   "os.path.isfile",
   "pathlib.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "ensureconda.resolve.mamba_executables": {
  "lineno": 77,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.micromamba_executables": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.PathLike",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.platform_subdir": {
  "lineno": 92,
  "symbols_in_volume": [
   "platform",
   "platform.machine",
   "struct.calcsize",
   "sys.platform"
  ],
  "type": "function"
 },
 "ensureconda.resolve.resolve_executable": {
  "lineno": 49,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "ensureconda.resolve.safe_next": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ensureconda.resolve.site_path": {
  "lineno": 45,
  "symbols_in_volume": [
   "appdirs.user_data_dir",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "ensureconda.resolve.which_no_shims": {
  "lineno": 28,
  "symbols_in_volume": [
   "os.environ.split",
   "os.path.join",
   "os.pathsep",
   "os.pathsep.join",
   "shutil.which",
   "typing.Optional"
  ],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_library": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_library._run_container_test": {
  "lineno": 69,
  "symbols_in_volume": [
   "docker.models.containers.Container",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "test.test_library.can_i_docker": {
  "lineno": 24,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.docker_client": {
  "lineno": 33,
  "symbols_in_volume": [
   "docker.from_env",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.ensureconda_container": {
  "lineno": 39,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.ensureconda_container_full": {
  "lineno": 54,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.in_github_actions": {
  "lineno": 12,
  "symbols_in_volume": [
   "os.environ.get",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "test.test_library.platform": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.fixture",
   "sys.platform.lower"
  ],
  "type": "function"
 },
 "test.test_library.test_ensure_full": {
  "lineno": 118,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pytest.mark.parametrize",
   "pytest.skip",
   "typing.List"
  ],
  "type": "function"
 },
 "test.test_library.test_ensure_simple": {
  "lineno": 85,
  "symbols_in_volume": [
   "docker.client.DockerClient",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "pytest.skip",
   "typing.List"
  ],
  "type": "function"
 },
 "test.test_library.test_locally_install": {
  "lineno": 144,
  "symbols_in_volume": [
   "appdirs",
   "ensureconda.api.ensureconda",
   "ensureconda.resolve.is_windows",
   "os.environ.split",
   "os.path.dirname",
   "os.path.sep",
   "os.pathsep",
   "os.pathsep.join",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "test.test_library.test_locally_install.user_data_dir": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 }
}