{
 "graypy": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "graypy.ExcludeFilter": {
  "data": {
   "shadows": "graypy.rabbitmq.ExcludeFilter"
  },
  "type": "import"
 },
 "graypy.GELFHTTPHandler": {
  "data": {
   "shadows": "graypy.handler.GELFHTTPHandler"
  },
  "type": "import"
 },
 "graypy.GELFRabbitHandler": {
  "data": {
   "shadows": "graypy.rabbitmq.GELFRabbitHandler"
  },
  "type": "import"
 },
 "graypy.GELFTCPHandler": {
  "data": {
   "shadows": "graypy.handler.GELFTCPHandler"
  },
  "type": "import"
 },
 "graypy.GELFTLSHandler": {
  "data": {
   "shadows": "graypy.handler.GELFTLSHandler"
  },
  "type": "import"
 },
 "graypy.GELFUDPHandler": {
  "data": {
   "shadows": "graypy.handler.GELFUDPHandler"
  },
  "type": "import"
 },
 "graypy.LAN_CHUNK": {
  "data": {
   "shadows": "graypy.handler.LAN_CHUNK"
  },
  "type": "import"
 },
 "graypy.WAN_CHUNK": {
  "data": {
   "shadows": "graypy.handler.WAN_CHUNK"
  },
  "type": "import"
 },
 "graypy.__version__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "graypy.handler": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "graypy.handler.abc",
    "graypy.handler.logging",
    "graypy.handler.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "graypy.handler.ABC": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "graypy.handler.BaseGELFHandler": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "graypy.handler.ABC",
    "graypy.handler.logging"
   ]
  },
  "type": "class"
 },
 "graypy.handler.BaseGELFHandler.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "graypy.handler.WAN_CHUNK",
    "graypy.handler.logging"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._add_debugging_fields": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._add_extra_fields": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._add_full_message": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "graypy.handler.traceback",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._add_level_names": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "graypy.handler.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._make_gelf_dict": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "graypy.handler.SYSLOG_LEVELS"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._object_to_json": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "graypy.handler.datetime",
    "isinstance",
    "repr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._pack_gelf_dict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "graypy.handler.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._resolve_host": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "graypy.handler.socket",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._sanitize_to_unicode": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "graypy.handler.BaseGELFHandler",
    "isinstance",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler._set_custom_facility": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graypy.handler.BaseGELFHandler.makePickle": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "graypy.handler.zlib"
   ]
  },
  "type": "function"
 },
 "graypy.handler.ChunkedGELF": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "graypy.handler.ChunkedGELF.__init__": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "graypy.handler.math",
    "graypy.handler.random",
    "graypy.handler.struct",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "graypy.handler.ChunkedGELF.__iter__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "graypy.handler.ChunkedGELF.encode": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "graypy.handler.struct"
   ]
  },
  "type": "function"
 },
 "graypy.handler.ChunkedGELF.message_chunks": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "graypy.handler.DatagramHandler": {
  "data": {
   "shadows": "logging.handlers.DatagramHandler"
  },
  "type": "import"
 },
 "graypy.handler.GELFHTTPHandler": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler"
   ]
  },
  "type": "class"
 },
 "graypy.handler.GELFHTTPHandler.__init__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFHTTPHandler.emit": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "http.client.HTTPConnection"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFTCPHandler": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "logging.handlers.SocketHandler"
   ]
  },
  "type": "class"
 },
 "graypy.handler.GELFTCPHandler.__init__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "logging.handlers.SocketHandler.__init__"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFTCPHandler.makePickle": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFTLSHandler": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "graypy.handler.GELFTCPHandler"
   ]
  },
  "type": "class"
 },
 "graypy.handler.GELFTLSHandler.__init__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "graypy.handler.GELFTCPHandler",
    "graypy.handler.ssl"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFTLSHandler.makeSocket": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "graypy.handler.socket",
    "graypy.handler.ssl",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFUDPHandler": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "logging.handlers.DatagramHandler"
   ]
  },
  "type": "class"
 },
 "graypy.handler.GELFUDPHandler.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "logging.handlers.DatagramHandler.__init__"
   ]
  },
  "type": "function"
 },
 "graypy.handler.GELFUDPHandler.send": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ChunkedGELF",
    "len",
    "logging.handlers.DatagramHandler.send"
   ]
  },
  "type": "function"
 },
 "graypy.handler.LAN_CHUNK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "graypy.handler.SYSLOG_LEVELS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "graypy.handler.SocketHandler": {
  "data": {
   "shadows": "logging.handlers.SocketHandler"
  },
  "type": "import"
 },
 "graypy.handler.WAN_CHUNK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "graypy.handler.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "graypy.handler.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "graypy.handler.httplib": {
  "data": {
   "shadows": "http.client"
  },
  "type": "import"
 },
 "graypy.handler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "graypy.handler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "graypy.handler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "graypy.handler.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "graypy.handler.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "graypy.handler.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "graypy.handler.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "graypy.handler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "graypy.handler.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "graypy.handler.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "graypy.rabbitmq": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "graypy.rabbitmq.BaseGELFHandler": {
  "data": {
   "shadows": "graypy.handler.BaseGELFHandler"
  },
  "type": "import"
 },
 "graypy.rabbitmq.ExcludeFilter": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "logging.Filter"
   ]
  },
  "type": "class"
 },
 "graypy.rabbitmq.ExcludeFilter.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "logging.Filter.__init__"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.ExcludeFilter.filter": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.Filter": {
  "data": {
   "shadows": "logging.Filter"
  },
  "type": "import"
 },
 "graypy.rabbitmq.GELFRabbitHandler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler",
    "logging.handlers.SocketHandler"
   ]
  },
  "type": "class"
 },
 "graypy.rabbitmq.GELFRabbitHandler.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ExcludeFilter",
    "ValueError",
    "graypy.handler.BaseGELFHandler.__init__",
    "graypy.rabbitmq._ifnone",
    "logging.handlers.SocketHandler.__init__",
    "urllib.unquote",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.GELFRabbitHandler.makePickle": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "graypy.rabbitmq.json"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.GELFRabbitHandler.makeSocket": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RabbitSocket"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.RabbitSocket": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "graypy.rabbitmq.RabbitSocket.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "amqplib.client_0_8.Connection"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.RabbitSocket.close": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.RabbitSocket.sendall": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "amqplib.client_0_8.Message"
   ]
  },
  "type": "function"
 },
 "graypy.rabbitmq.SocketHandler": {
  "data": {
   "shadows": "logging.handlers.SocketHandler"
  },
  "type": "import"
 },
 "graypy.rabbitmq._ifnone": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "graypy.rabbitmq.amqp": {
  "data": {
   "shadows": "amqplib.client_0_8"
  },
  "type": "import"
 },
 "graypy.rabbitmq.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "graypy.rabbitmq.unquote": {
  "data": {
   "shadows": "urllib.unquote"
  },
  "type": "import"
 },
 "graypy.rabbitmq.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.helper": {
  "data": {},
  "type": "module"
 },
 "tests.helper.GELFHTTPHandler": {
  "data": {
   "shadows": "graypy.GELFHTTPHandler"
  },
  "type": "import"
 },
 "tests.helper.GELFTCPHandler": {
  "data": {
   "shadows": "graypy.GELFTCPHandler"
  },
  "type": "import"
 },
 "tests.helper.GELFTLSHandler": {
  "data": {
   "shadows": "graypy.GELFTLSHandler"
  },
  "type": "import"
 },
 "tests.helper.GELFUDPHandler": {
  "data": {
   "shadows": "graypy.GELFUDPHandler"
  },
  "type": "import"
 },
 "tests.helper.KEY_PASS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.helper.TEST_CERT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "tests.helper.TEST_HTTP_PORT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tests.helper.TEST_TCP_PORT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.helper.TEST_TLS_PORT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.helper.TEST_UDP_PORT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tests.helper.formatted_logger": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tests.helper.handler",
    "tests.helper.logging",
    "tests.helper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.helper.handler": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "graypy.GELFHTTPHandler",
    "graypy.GELFTCPHandler",
    "graypy.GELFTLSHandler",
    "graypy.GELFUDPHandler",
    "tests.helper.TEST_CERT",
    "tests.helper.TEST_HTTP_PORT",
    "tests.helper.TEST_TCP_PORT",
    "tests.helper.TEST_TLS_PORT",
    "tests.helper.TEST_UDP_PORT",
    "tests.helper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.helper.logger": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tests.helper.handler",
    "tests.helper.logging",
    "tests.helper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.helper.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.helper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration": {
  "data": {
   "symbols_in_volume": [
    "tests.integration.validate_local_graylog_up"
   ]
  },
  "type": "module"
 },
 "tests.integration.LOCAL_GRAYLOG_UP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tests.integration.helper": {
  "data": {},
  "type": "module"
 },
 "tests.integration.helper.BASE_API_URL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.integration.helper.DEFAULT_FIELDS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.integration.helper._build_api_string": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "set",
    "tests.integration.helper.BASE_API_URL",
    "tests.integration.helper.DEFAULT_FIELDS"
   ]
  },
  "type": "function"
 },
 "tests.integration.helper._get_api_response": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tests.integration.helper._build_api_string",
    "tests.integration.helper.requests",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "tests.integration.helper._parse_api_response": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "tests.integration.helper.get_graylog_response": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_get_api_response",
    "_parse_api_response"
   ]
  },
  "type": "function"
 },
 "tests.integration.helper.get_unique_message": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "tests.integration.helper.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "tests.integration.helper.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "tests.integration.helper.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "tests.integration.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging": {
  "data": {},
  "type": "module"
 },
 "tests.integration.test_chunked_logging.GELFUDPHandler": {
  "data": {
   "shadows": "graypy.handler.GELFUDPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.LOCAL_GRAYLOG_UP": {
  "data": {
   "shadows": "tests.integration.LOCAL_GRAYLOG_UP"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.SYSLOG_LEVELS": {
  "data": {
   "shadows": "graypy.handler.SYSLOG_LEVELS"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.TEST_UDP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_UDP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.get_graylog_response": {
  "data": {
   "shadows": "tests.integration.helper.get_graylog_response"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.get_unique_message": {
  "data": {
   "shadows": "tests.integration.helper.get_unique_message"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration.test_chunked_logging.test_chunked_logging": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "graypy.handler.GELFUDPHandler",
    "graypy.handler.SYSLOG_LEVELS",
    "tests.helper.TEST_UDP_PORT",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_chunked_logging.logging",
    "tests.integration.test_chunked_logging.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_common_logging": {
  "data": {},
  "type": "module"
 },
 "tests.integration.test_common_logging.LOCAL_GRAYLOG_UP": {
  "data": {
   "shadows": "tests.integration.LOCAL_GRAYLOG_UP"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.SYSLOG_LEVELS": {
  "data": {
   "shadows": "graypy.handler.SYSLOG_LEVELS"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.get_graylog_response": {
  "data": {
   "shadows": "tests.integration.helper.get_graylog_response"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.get_unique_message": {
  "data": {
   "shadows": "tests.integration.helper.get_unique_message"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.handler": {
  "data": {
   "shadows": "tests.helper.handler"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.logger": {
  "data": {
   "shadows": "tests.helper.logger"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration.test_common_logging.test_common_logging": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "graypy.handler.SYSLOG_LEVELS",
    "tests.helper.logger.error",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_common_logging.logging",
    "tests.integration.test_common_logging.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_debugging_fields": {
  "data": {},
  "type": "module"
 },
 "tests.integration.test_debugging_fields.GELFHTTPHandler": {
  "data": {
   "shadows": "graypy.GELFHTTPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.GELFTCPHandler": {
  "data": {
   "shadows": "graypy.GELFTCPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.GELFTLSHandler": {
  "data": {
   "shadows": "graypy.GELFTLSHandler"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.GELFUDPHandler": {
  "data": {
   "shadows": "graypy.GELFUDPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.LOCAL_GRAYLOG_UP": {
  "data": {
   "shadows": "tests.integration.LOCAL_GRAYLOG_UP"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.TEST_CERT": {
  "data": {
   "shadows": "tests.helper.TEST_CERT"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.TEST_HTTP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_HTTP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.TEST_TCP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_TCP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.TEST_TLS_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_TLS_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.TEST_UDP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_UDP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.get_graylog_response": {
  "data": {
   "shadows": "tests.integration.helper.get_graylog_response"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.get_unique_message": {
  "data": {
   "shadows": "tests.integration.helper.get_unique_message"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.handler": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "graypy.GELFHTTPHandler",
    "graypy.GELFTCPHandler",
    "graypy.GELFTLSHandler",
    "graypy.GELFUDPHandler",
    "tests.helper.TEST_CERT",
    "tests.helper.TEST_HTTP_PORT",
    "tests.helper.TEST_TCP_PORT",
    "tests.helper.TEST_TLS_PORT",
    "tests.helper.TEST_UDP_PORT",
    "tests.integration.test_debugging_fields.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_debugging_fields.logger": {
  "data": {
   "shadows": "tests.helper.logger"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration.test_debugging_fields.test_debug_mode": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_debugging_fields.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_extra_fields": {
  "data": {},
  "type": "module"
 },
 "tests.integration.test_extra_fields.DummyFilter": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "tests.integration.test_extra_fields.logging"
   ]
  },
  "type": "class"
 },
 "tests.integration.test_extra_fields.DummyFilter.filter": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "tests.integration.test_extra_fields.GELFHTTPHandler": {
  "data": {
   "shadows": "graypy.GELFHTTPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.GELFTCPHandler": {
  "data": {
   "shadows": "graypy.GELFTCPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.GELFTLSHandler": {
  "data": {
   "shadows": "graypy.GELFTLSHandler"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.GELFUDPHandler": {
  "data": {
   "shadows": "graypy.GELFUDPHandler"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.LOCAL_GRAYLOG_UP": {
  "data": {
   "shadows": "tests.integration.LOCAL_GRAYLOG_UP"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.TEST_CERT": {
  "data": {
   "shadows": "tests.helper.TEST_CERT"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.TEST_HTTP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_HTTP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.TEST_TCP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_TCP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.TEST_TLS_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_TLS_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.TEST_UDP_PORT": {
  "data": {
   "shadows": "tests.helper.TEST_UDP_PORT"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.get_graylog_response": {
  "data": {
   "shadows": "tests.integration.helper.get_graylog_response"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.get_unique_message": {
  "data": {
   "shadows": "tests.integration.helper.get_unique_message"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.handler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "graypy.GELFHTTPHandler",
    "graypy.GELFTCPHandler",
    "graypy.GELFTLSHandler",
    "graypy.GELFUDPHandler",
    "tests.helper.TEST_CERT",
    "tests.helper.TEST_HTTP_PORT",
    "tests.helper.TEST_TCP_PORT",
    "tests.helper.TEST_TLS_PORT",
    "tests.helper.TEST_UDP_PORT",
    "tests.integration.test_extra_fields.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_extra_fields.logger": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tests.integration.test_extra_fields.DummyFilter",
    "tests.integration.test_extra_fields.handler",
    "tests.integration.test_extra_fields.logging",
    "tests.integration.test_extra_fields.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_extra_fields.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration.test_extra_fields.test_dynamic_fields": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_extra_fields.logger",
    "tests.integration.test_extra_fields.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_status_issue": {
  "data": {},
  "type": "module"
 },
 "tests.integration.test_status_issue.LOCAL_GRAYLOG_UP": {
  "data": {
   "shadows": "tests.integration.LOCAL_GRAYLOG_UP"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.get_graylog_response": {
  "data": {
   "shadows": "tests.integration.helper.get_graylog_response"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.get_unique_message": {
  "data": {
   "shadows": "tests.integration.helper.get_unique_message"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.handler": {
  "data": {
   "shadows": "tests.helper.handler"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.logger": {
  "data": {
   "shadows": "tests.helper.logger"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.integration.test_status_issue.test_non_status_field_log": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_status_issue.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_status_issue.test_status_field_issue": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_status_issue.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.test_status_issue.test_status_field_issue_multi": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.integration.LOCAL_GRAYLOG_UP",
    "tests.integration.helper.get_graylog_response",
    "tests.integration.helper.get_unique_message",
    "tests.integration.test_status_issue.pytest"
   ]
  },
  "type": "function"
 },
 "tests.integration.validate_local_graylog_up": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "tests.integration.requests"
   ]
  },
  "type": "function"
 },
 "tests.unit": {
  "data": {},
  "type": "module"
 },
 "tests.unit.helper": {
  "data": {
   "symbols_in_volume": [
    "tests.unit.helper.MOCK_LOG_RECORD_NAME",
    "tests.unit.helper.logging"
   ]
  },
  "type": "module"
 },
 "tests.unit.helper.MOCK_LOG_RECORD": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "tests.unit.helper.MOCK_LOG_RECORD_NAME": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.unit.helper.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.unit.test_ExcludeFilter": {
  "data": {},
  "type": "module"
 },
 "tests.unit.test_ExcludeFilter.ExcludeFilter": {
  "data": {
   "shadows": "graypy.ExcludeFilter"
  },
  "type": "import"
 },
 "tests.unit.test_ExcludeFilter.MOCK_LOG_RECORD": {
  "data": {
   "shadows": "tests.unit.helper.MOCK_LOG_RECORD"
  },
  "type": "import"
 },
 "tests.unit.test_ExcludeFilter.MOCK_LOG_RECORD_NAME": {
  "data": {
   "shadows": "tests.unit.helper.MOCK_LOG_RECORD_NAME"
  },
  "type": "import"
 },
 "tests.unit.test_ExcludeFilter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_ExcludeFilter.test_filtering_record": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "graypy.ExcludeFilter",
    "tests.unit.helper.MOCK_LOG_RECORD",
    "tests.unit.helper.MOCK_LOG_RECORD.name",
    "tests.unit.helper.MOCK_LOG_RECORD_NAME"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_ExcludeFilter.test_invalid_name": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "graypy.ExcludeFilter",
    "tests.unit.test_ExcludeFilter.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_ExcludeFilter.test_non_filtering_record": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "graypy.ExcludeFilter",
    "tests.unit.helper.MOCK_LOG_RECORD",
    "tests.unit.helper.MOCK_LOG_RECORD.name",
    "tests.unit.helper.MOCK_LOG_RECORD_NAME"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_ExcludeFilter.test_valid_name": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "graypy.ExcludeFilter",
    "len",
    "tests.unit.test_ExcludeFilter.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_GELFRabbitHandler": {
  "data": {},
  "type": "module"
 },
 "tests.unit.test_GELFRabbitHandler.GELFRabbitHandler": {
  "data": {
   "shadows": "graypy.rabbitmq.GELFRabbitHandler"
  },
  "type": "import"
 },
 "tests.unit.test_GELFRabbitHandler.MOCK_LOG_RECORD": {
  "data": {
   "shadows": "tests.unit.helper.MOCK_LOG_RECORD"
  },
  "type": "import"
 },
 "tests.unit.test_GELFRabbitHandler.SYSLOG_LEVELS": {
  "data": {
   "shadows": "graypy.handler.SYSLOG_LEVELS"
  },
  "type": "import"
 },
 "tests.unit.test_GELFRabbitHandler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.unit.test_GELFRabbitHandler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_GELFRabbitHandler.test_invalid_url": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "graypy.rabbitmq.GELFRabbitHandler",
    "tests.unit.test_GELFRabbitHandler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_GELFRabbitHandler.test_make_pickle": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "graypy.handler.SYSLOG_LEVELS",
    "graypy.rabbitmq.GELFRabbitHandler",
    "tests.unit.helper.MOCK_LOG_RECORD",
    "tests.unit.helper.MOCK_LOG_RECORD.levelno",
    "tests.unit.test_GELFRabbitHandler.json"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_GELFRabbitHandler.test_socket_creation_failure": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "graypy.rabbitmq.GELFRabbitHandler",
    "tests.unit.test_GELFRabbitHandler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_GELFRabbitHandler.test_valid_url": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "graypy.rabbitmq.GELFRabbitHandler"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler": {
  "data": {},
  "type": "module"
 },
 "tests.unit.test_handler.BaseGELFHandler": {
  "data": {
   "shadows": "graypy.handler.BaseGELFHandler"
  },
  "type": "import"
 },
 "tests.unit.test_handler.ChunkedGELF": {
  "data": {
   "shadows": "graypy.handler.ChunkedGELF"
  },
  "type": "import"
 },
 "tests.unit.test_handler.GELFHTTPHandler": {
  "data": {
   "shadows": "graypy.handler.GELFHTTPHandler"
  },
  "type": "import"
 },
 "tests.unit.test_handler.GELFTLSHandler": {
  "data": {
   "shadows": "graypy.handler.GELFTLSHandler"
  },
  "type": "import"
 },
 "tests.unit.test_handler.MOCK_LOG_RECORD": {
  "data": {
   "shadows": "tests.unit.helper.MOCK_LOG_RECORD"
  },
  "type": "import"
 },
 "tests.unit.test_handler.MOCK_LOG_RECORD_NAME": {
  "data": {
   "shadows": "tests.unit.helper.MOCK_LOG_RECORD_NAME"
  },
  "type": "import"
 },
 "tests.unit.test_handler.TestClass": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.unit.test_handler.TestClass.__repr__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "tests.unit.test_handler.UNICODE_REPLACEMENT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tests.unit.test_handler.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "tests.unit.test_handler.formatted_logger": {
  "data": {
   "shadows": "tests.helper.formatted_logger"
  },
  "type": "import"
 },
 "tests.unit.test_handler.get_mock_send_arg": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "graypy.handler.BaseGELFHandler",
    "isinstance",
    "tests.unit.test_handler.json",
    "tests.unit.test_handler.logging",
    "tests.unit.test_handler.mock_send",
    "tests.unit.test_handler.zlib"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.handler": {
  "data": {
   "shadows": "tests.helper.handler"
  },
  "type": "import"
 },
 "tests.unit.test_handler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.unit.test_handler.logger": {
  "data": {
   "shadows": "tests.helper.logger"
  },
  "type": "import"
 },
 "tests.unit.test_handler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.unit.test_handler.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "tests.unit.test_handler.mock_send": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "tests.helper.handler",
    "tests.unit.test_handler.mock",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_handler.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "tests.unit.test_handler.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "tests.unit.test_handler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.unit.test_handler.test_add_level_name": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "graypy.handler.BaseGELFHandler._add_level_names",
    "tests.unit.helper.MOCK_LOG_RECORD"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_arbitrary_object": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.TestClass",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_broken_unicode_python2": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.UNICODE_REPLACEMENT",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send",
    "tests.unit.test_handler.pytest",
    "tests.unit.test_handler.sys"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_broken_unicode_python3": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send",
    "tests.unit.test_handler.pytest",
    "tests.unit.test_handler.sys"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_extra_field": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_formatted_logger": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "graypy.handler.GELFHTTPHandler",
    "isinstance",
    "tests.helper.formatted_logger.error",
    "tests.helper.formatted_logger.handlers",
    "tests.helper.handler",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_gelf_chunking": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "enumerate",
    "graypy.handler.ChunkedGELF",
    "len",
    "list",
    "tests.unit.test_handler.struct"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_invalid_ca_certs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "graypy.handler.GELFTLSHandler",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_invalid_client_certs": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "graypy.handler.GELFTLSHandler",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_invalid_fqdn_localhost": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "graypy.handler.BaseGELFHandler",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_list": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_manual_exc_info_handler": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "SyntaxError",
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_message_to_pickle_serializes_datetime_objects_instead_of_blindly_repring_them": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.datetime",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_normal_exception_handler": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "SyntaxError",
    "tests.helper.logger.exception",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_pack": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler._pack_gelf_dict",
    "tests.unit.test_handler.UNICODE_REPLACEMENT",
    "tests.unit.test_handler.json",
    "tests.unit.test_handler.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_resolve_host": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "graypy.handler.BaseGELFHandler._resolve_host",
    "tests.unit.test_handler.socket"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_set_custom_facility": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict",
    "graypy.handler.BaseGELFHandler._set_custom_facility",
    "tests.unit.helper.MOCK_LOG_RECORD",
    "tests.unit.helper.MOCK_LOG_RECORD_NAME"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_status_field_issue": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.test_unicode": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tests.helper.logger.error",
    "tests.unit.test_handler.get_mock_send_arg",
    "tests.unit.test_handler.mock_send"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_handler.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 }
}