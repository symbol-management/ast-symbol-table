{
 "pybigquery": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pybigquery.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pybigquery.api.ApiClient": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pybigquery.api.ApiClient.__init__": {
  "lineno": 10,
  "symbols_in_volume": [
   "google.cloud.bigquery.Client",
   "google.cloud.bigquery.Client.from_service_account_json"
  ],
  "type": "function"
 },
 "pybigquery.api.ApiClient.dry_run_query": {
  "lineno": 19,
  "symbols_in_volume": [
   "google.cloud.bigquery.QueryJobConfig"
  ],
  "type": "function"
 },
 "pybigquery.parse_url": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "pybigquery.parse_url.parse_boolean": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.parse_url.parse_url": {
  "lineno": 22,
  "symbols_in_volume": [
   "google.cloud.bigquery.QueryJobConfig",
   "google.cloud.bigquery.dataset.DatasetReference",
   "google.cloud.bigquery.job.CreateDisposition",
   "google.cloud.bigquery.job.QueryPriority",
   "google.cloud.bigquery.job.SchemaUpdateOption",
   "google.cloud.bigquery.job.WriteDisposition",
   "google.cloud.bigquery.table.EncryptionConfiguration",
   "google.cloud.bigquery.table.TableReference"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "sqlalchemy.types.BINARY",
   "sqlalchemy.types.Boolean",
   "sqlalchemy.types.DATE",
   "sqlalchemy.types.DATETIME",
   "sqlalchemy.types.DECIMAL",
   "sqlalchemy.types.Float",
   "sqlalchemy.types.Integer",
   "sqlalchemy.types.JSON",
   "sqlalchemy.types.String",
   "sqlalchemy.types.TIME",
   "sqlalchemy.types.TIMESTAMP"
  ],
  "type": "module"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler": {
  "lineno": 132,
  "symbols_in_volume": [
   "sqlalchemy.sql.compiler.SQLCompiler"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler.__init__": {
  "lineno": 133,
  "symbols_in_volume": [
   "sqlalchemy.sql.schema.Column",
   "sqlalchemy.util.immutabledict"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler.group_by_clause": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler.visit_column": {
  "lineno": 148,
  "symbols_in_volume": [
   "sqlalchemy.sql.elements._truncated_label"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler.visit_label": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryCompiler.visit_select": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDDLCompiler": {
  "lineno": 231,
  "symbols_in_volume": [
   "sqlalchemy.sql.compiler.DDLCompiler"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDDLCompiler.get_column_specification": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDDLCompiler.post_create_table": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDDLCompiler.visit_foreign_key_constraint": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDDLCompiler.visit_primary_key_constraint": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect": {
  "lineno": 259,
  "symbols_in_volume": [
   "sqlalchemy.engine.default.DefaultDialect"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.__init__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._add_default_dataset_to_job_config": {
  "lineno": 304,
  "symbols_in_volume": [
   "google.auth.default"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._build_formatted_table_id": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._check_unicode_description": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._check_unicode_returns": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._create_client_from_credentials": {
  "lineno": 314,
  "symbols_in_volume": [
   "google.cloud.bigquery.Client"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._get_columns_helper": {
  "lineno": 471,
  "symbols_in_volume": [
   "google.cloud.bigquery.schema.SchemaField"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._get_table": {
  "lineno": 451,
  "symbols_in_volume": [
   "google.api_core.exceptions.NotFound",
   "sqlalchemy.engine.base.Engine",
   "sqlalchemy.exc.NoSuchTableError"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._get_table_or_view_names": {
  "lineno": 369,
  "symbols_in_volume": [
   "operator.attrgetter"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._json_deserializer": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._split_table_name": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect._table_reference": {
  "lineno": 408,
  "symbols_in_volume": [
   "google.cloud.bigquery.table.TableReference.from_string"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.create_connect_args": {
  "lineno": 334,
  "symbols_in_volume": [
   "google.cloud.bigquery.Client",
   "google.oauth2.service_account.Credentials.from_service_account_file",
   "google.oauth2.service_account.Credentials.from_service_account_info"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.dbapi": {
  "lineno": 295,
  "symbols_in_volume": [
   "google.cloud.bigquery.dbapi"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.do_rollback": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_columns": {
  "lineno": 489,
  "symbols_in_volume": [
   "sqlalchemy.types.ARRAY",
   "sqlalchemy.util.warn"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_foreign_keys": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_indexes": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_pk_constraint": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_schema_names": {
  "lineno": 529,
  "symbols_in_volume": [
   "sqlalchemy.engine.base.Engine"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_table_names": {
  "lineno": 539,
  "symbols_in_volume": [
   "sqlalchemy.engine.base.Engine"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.get_view_names": {
  "lineno": 545,
  "symbols_in_volume": [
   "sqlalchemy.engine.base.Engine"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryDialect.has_table": {
  "lineno": 464,
  "symbols_in_volume": [
   "sqlalchemy.exc.NoSuchTableError"
  ],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryExecutionContext": {
  "lineno": 123,
  "symbols_in_volume": [
   "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryExecutionContext.create_cursor": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryIdentifierPreparer": {
  "lineno": 39,
  "symbols_in_volume": [
   "sqlalchemy.sql.compiler.IdentifierPreparer"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryIdentifierPreparer.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryIdentifierPreparer.format_label": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryIdentifierPreparer.quote": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryIdentifierPreparer.quote_column": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler": {
  "lineno": 204,
  "symbols_in_volume": [
   "sqlalchemy.sql.compiler.GenericTypeCompiler"
  ],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_ARRAY": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_BINARY": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_DECIMAL": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_NUMERIC": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_float": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_integer": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_string": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.BigQueryTypeCompiler.visit_text": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybigquery.sqlalchemy_bigquery.UniversalSet": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pybigquery.sqlalchemy_bigquery.UniversalSet.__contains__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 }
}