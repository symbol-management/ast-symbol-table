{
 "*": {
  "data": {
   "imports": [
    "ray.new_dashboard.tests.conftest"
   ]
  },
  "type": "star-import"
 },
 "ray": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ctypes.CDLL",
    "int",
    "os.path.dirname",
    "ray.__all__",
    "ray._raylet.Config",
    "ray.ctypes",
    "ray.logger",
    "ray.logging",
    "ray.os",
    "ray.pkg_resources",
    "ray.platform",
    "ray.python_shared_lib_suffix",
    "ray.so_path",
    "ray.sys",
    "ray.thirdparty_files",
    "ray.version",
    "ray.version_info",
    "tuple"
   ]
  },
  "type": "module"
 },
 "ray.ActorCheckpointID": {
  "data": {
   "shadows": "ray._raylet.ActorCheckpointID"
  },
  "type": "import"
 },
 "ray.ActorClassID": {
  "data": {
   "shadows": "ray._raylet.ActorClassID"
  },
  "type": "import"
 },
 "ray.ActorID": {
  "data": {
   "shadows": "ray._raylet.ActorID"
  },
  "type": "import"
 },
 "ray.CDLL": {
  "data": {
   "shadows": "ctypes.CDLL"
  },
  "type": "import"
 },
 "ray.FunctionID": {
  "data": {
   "shadows": "ray._raylet.FunctionID"
  },
  "type": "import"
 },
 "ray.IO_WORKER_MODE": {
  "data": {
   "shadows": "ray.worker.IO_WORKER_MODE"
  },
  "type": "import"
 },
 "ray.JobID": {
  "data": {
   "shadows": "ray._raylet.JobID"
  },
  "type": "import"
 },
 "ray.LOCAL_MODE": {
  "data": {
   "shadows": "ray.worker.LOCAL_MODE"
  },
  "type": "import"
 },
 "ray.Language": {
  "data": {
   "shadows": "ray._raylet.Language"
  },
  "type": "import"
 },
 "ray.NodeID": {
  "data": {
   "shadows": "ray._raylet.NodeID"
  },
  "type": "import"
 },
 "ray.ObjectID": {
  "data": {
   "shadows": "ray._raylet.ObjectID"
  },
  "type": "import"
 },
 "ray.ObjectRef": {
  "data": {
   "shadows": "ray._raylet.ObjectRef"
  },
  "type": "import"
 },
 "ray.PlacementGroupID": {
  "data": {
   "shadows": "ray._raylet.PlacementGroupID"
  },
  "type": "import"
 },
 "ray.SCRIPT_MODE": {
  "data": {
   "shadows": "ray.worker.SCRIPT_MODE"
  },
  "type": "import"
 },
 "ray.TaskID": {
  "data": {
   "shadows": "ray._raylet.TaskID"
  },
  "type": "import"
 },
 "ray.UniqueID": {
  "data": {
   "shadows": "ray._raylet.UniqueID"
  },
  "type": "import"
 },
 "ray.WORKER_MODE": {
  "data": {
   "shadows": "ray.worker.WORKER_MODE"
  },
  "type": "import"
 },
 "ray.WorkerID": {
  "data": {
   "shadows": "ray._raylet.WorkerID"
  },
  "type": "import"
 },
 "ray._Config": {
  "data": {
   "shadows": "ray._raylet.Config"
  },
  "type": "import"
 },
 "ray.__all__": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.__commit__": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "ray.__version__": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ray._config": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ray._private": {
  "data": {},
  "type": "module"
 },
 "ray.actor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.actor.logging"
   ]
  },
  "type": "module"
 },
 "ray.actor.ActorClass": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "ray.actor.ActorClass.__call__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.actor.ActorClass"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass._ray_from_function_descriptor": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "classmethod",
    "ray.actor.ActorClass",
    "ray.actor.ActorClassMetadata"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass._ray_from_modified_class": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "ray.Language.PYTHON",
    "ray._raylet.PythonFunctionDescriptor.from_class",
    "ray.actor.ActorClassMetadata",
    "ray.actor.logger"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass._ray_from_modified_class.DerivedActorClass": {
  "data": {
   "lineno": 355
  },
  "type": "class"
 },
 "ray.actor.ActorClass._remote": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "ray.actor.ActorHandle",
    "ray.actor.inspect",
    "ray.cross_language.format_args",
    "ray.ray_constants.DEFAULT_ACTOR_CREATION_CPU_SIMPLE",
    "ray.ray_constants.DEFAULT_ACTOR_CREATION_CPU_SPECIFIED",
    "ray.ray_constants.DEFAULT_ACTOR_METHOD_CPU_SIMPLE",
    "ray.ray_constants.DEFAULT_ACTOR_METHOD_CPU_SPECIFIED",
    "ray.signature.flatten_args",
    "ray.util.placement_group.PlacementGroup.empty",
    "ray.util.placement_group.check_placement_group_index",
    "ray.util.placement_group.get_current_placement_group",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass.options": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ActorOptionWrapper"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClass.options.ActorOptionWrapper": {
  "data": {
   "lineno": 442
  },
  "type": "class"
 },
 "ray.actor.ActorClass.options.ActorOptionWrapper.remote": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "ray.actor.ActorClass.remote": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "ray.actor.ActorClassID": {
  "data": {
   "shadows": "ray.ActorClassID"
  },
  "type": "import"
 },
 "ray.actor.ActorClassMetadata": {
  "data": {
   "lineno": 237
  },
  "type": "class"
 },
 "ray.actor.ActorClassMetadata.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ray.Language.PYTHON",
    "ray.actor.ActorClassMethodMetadata"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClassMethodMetadata": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.actor.ActorClassMethodMetadata.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClassMethodMetadata.create": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "hasattr",
    "ray.actor.inspect",
    "ray.actor.method",
    "ray.ray_constants.DEFAULT_ACTOR_METHOD_NUM_RETURN_VALS",
    "ray.signature.extract_signature"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorClassMethodMetadata.reset_cache": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle": {
  "data": {
   "lineno": 680
  },
  "type": "class"
 },
 "ray.actor.ActorHandle.__del__": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__dir__": {
  "data": {
   "lineno": 847
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__getattr__": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "AttributeError",
    "FakeActorMethod",
    "ray.actor.ActorMethod",
    "ray.ray_constants.DEFAULT_ACTOR_METHOD_NUM_RETURN_VALS",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__getattr__.FakeActorMethod": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.actor.ActorHandle.__getattr__.FakeActorMethod.__call__": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__getattr__.FakeActorMethod.remote": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "ray.actor.logger"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__init__": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "isinstance",
    "ray.Language.PYTHON",
    "ray._raylet.PythonFunctionDescriptor",
    "ray.actor.ActorMethod",
    "ray.actor.method",
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__reduce__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "ray.actor.ActorHandle"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle.__repr__": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "ray.actor.ActorHandle._actor_id": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle._actor_method_call": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "len",
    "ray.cross_language.format_args",
    "ray.cross_language.get_function_descriptor_for_actor_method",
    "ray.signature.flatten_args"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle._deserialization_helper": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorHandle._serialization_helper": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "ray.actor.ActorMethod.__call__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.__getstate__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.actor.weakref"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.__setstate__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.actor.ActorMethod._remote": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "invocation"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod._remote.invocation": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.options": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "FuncWrapper"
   ]
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.options.FuncWrapper": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "ray.actor.ActorMethod.options.FuncWrapper.remote": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "ray.actor.ActorMethod.remote": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "ray.actor.Language": {
  "data": {
   "shadows": "ray.Language"
  },
  "type": "import"
 },
 "ray.actor.PlacementGroup": {
  "data": {
   "shadows": "ray.util.placement_group.PlacementGroup"
  },
  "type": "import"
 },
 "ray.actor.PythonFunctionDescriptor": {
  "data": {
   "shadows": "ray._raylet.PythonFunctionDescriptor"
  },
  "type": "import"
 },
 "ray.actor.check_placement_group_index": {
  "data": {
   "shadows": "ray.util.placement_group.check_placement_group_index"
  },
  "type": "import"
 },
 "ray.actor.cross_language": {
  "data": {
   "shadows": "ray.cross_language"
  },
  "type": "import"
 },
 "ray.actor.exit_actor": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "SystemExit",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "ray.actor.get_current_placement_group": {
  "data": {
   "shadows": "ray.util.placement_group.get_current_placement_group"
  },
  "type": "import"
 },
 "ray.actor.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.actor.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.actor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.actor.make_actor": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "min",
    "ray.ActorClassID.from_random",
    "ray.actor.ActorClass",
    "ray.actor.modify_class",
    "ray.ray_constants.MAX_INT64_VALUE"
   ]
  },
  "type": "function"
 },
 "ray.actor.method": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.actor.method.annotate_method": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.actor.method"
   ]
  },
  "type": "function"
 },
 "ray.actor.modify_class": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "cls.__module__",
    "cls.__name__",
    "getattr",
    "hasattr",
    "issubclass",
    "object"
   ]
  },
  "type": "function"
 },
 "ray.actor.modify_class.Class": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "cls"
   ]
  },
  "type": "class"
 },
 "ray.actor.modify_class.Class.__ray_terminate__": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "ray.actor.modify_class.__init__": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "ray.actor.ray._raylet": {
  "data": {
   "shadows": "ray._raylet"
  },
  "type": "import"
 },
 "ray.actor.ray.worker": {
  "data": {
   "shadows": "ray.worker"
  },
  "type": "import"
 },
 "ray.actor.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.actor.signature": {
  "data": {
   "shadows": "ray.signature"
  },
  "type": "import"
 },
 "ray.actor.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "ray.actors": {
  "data": {
   "shadows": "ray.state.actors"
  },
  "type": "import"
 },
 "ray.async_compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "ray.async_compat.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.async_compat.get_new_event_loop": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.async_compat.asyncio",
    "ray.async_compat.uvloop"
   ]
  },
  "type": "function"
 },
 "ray.async_compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.async_compat.sync_to_async": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "func",
    "ray.async_compat.inspect"
   ]
  },
  "type": "function"
 },
 "ray.async_compat.uvloop": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.autoscaler": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.autoscaler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.autoscaler._private.autoscaler.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.autoscaler.AUTOSCALER_HEARTBEAT_TIMEOUT_S": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.AUTOSCALER_HEARTBEAT_TIMEOUT_S"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.AUTOSCALER_MAX_CONCURRENT_LAUNCHES": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.AUTOSCALER_MAX_CONCURRENT_LAUNCHES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.AUTOSCALER_MAX_LAUNCH_BATCH": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.AUTOSCALER_MAX_LAUNCH_BATCH"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.AUTOSCALER_MAX_NUM_FAILURES": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.AUTOSCALER_MAX_NUM_FAILURES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.AUTOSCALER_UPDATE_INTERVAL_S": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.AUTOSCALER_UPDATE_INTERVAL_S"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.ConcurrentCounter": {
  "data": {
   "shadows": "ray.autoscaler._private.util.ConcurrentCounter"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.DEBUG_AUTOSCALING_ERROR": {
  "data": {
   "shadows": "ray.autoscaler._private.util.DEBUG_AUTOSCALING_ERROR"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.DEBUG_AUTOSCALING_STATUS": {
  "data": {
   "shadows": "ray.autoscaler._private.util.DEBUG_AUTOSCALING_STATUS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NODE_KIND_UNMANAGED": {
  "data": {
   "shadows": "ray.autoscaler.tags.NODE_KIND_UNMANAGED"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NODE_KIND_WORKER": {
  "data": {
   "shadows": "ray.autoscaler.tags.NODE_KIND_WORKER"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NodeID": {
  "data": {
   "shadows": "ray.autoscaler._private.resource_demand_scheduler.NodeID"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NodeLauncher": {
  "data": {
   "shadows": "ray.autoscaler._private.node_launcher.NodeLauncher"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NodeType": {
  "data": {
   "shadows": "ray.autoscaler._private.resource_demand_scheduler.NodeType"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.NodeUpdaterThread": {
  "data": {
   "shadows": "ray.autoscaler._private.updater.NodeUpdaterThread"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.ResourceDemandScheduler": {
  "data": {
   "shadows": "ray.autoscaler._private.resource_demand_scheduler.ResourceDemandScheduler"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.STATUS_UP_TO_DATE": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_UP_TO_DATE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.defaultdict",
    "float",
    "int",
    "range",
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.autoscaler.math",
    "ray.autoscaler._private.autoscaler.os",
    "ray.autoscaler._private.autoscaler.subprocess",
    "ray.autoscaler._private.constants.AUTOSCALER_MAX_CONCURRENT_LAUNCHES",
    "ray.autoscaler._private.constants.AUTOSCALER_MAX_LAUNCH_BATCH",
    "ray.autoscaler._private.constants.AUTOSCALER_MAX_NUM_FAILURES",
    "ray.autoscaler._private.constants.AUTOSCALER_UPDATE_INTERVAL_S",
    "ray.autoscaler._private.node_launcher.NodeLauncher",
    "ray.autoscaler._private.util.ConcurrentCounter",
    "six.moves.queue.Queue"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler._get_node_specific_docker_config": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.copy"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler._get_node_type_specific_fields": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler._keep_min_worker_of_node_type": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.resource_demand_scheduler.NodeID",
    "ray.autoscaler._private.resource_demand_scheduler.NodeType",
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler._node_resources": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler._update": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "ray.autoscaler._private.autoscaler.collections",
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.autoscaler.threading",
    "ray.autoscaler._private.autoscaler.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.all_workers": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.can_update": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.files_up_to_date": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS",
    "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.info_string": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.kill_workers": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.autoscaler.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.launch_config_ok": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.copy",
    "ray.autoscaler._private.util.hash_launch_conf",
    "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG",
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.launch_new_node": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.autoscaler.copy",
    "ray.autoscaler._private.autoscaler.logger",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.log_info_string": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.util.DEBUG_AUTOSCALING_STATUS",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "ray.experimental.internal_kv._internal_kv_put"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.recover_if_needed": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.constants.AUTOSCALER_HEARTBEAT_TIMEOUT_S",
    "ray.autoscaler._private.updater.NodeUpdaterThread",
    "ray.autoscaler._private.util.with_head_node_ip"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.request_resources": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "max",
    "ray.autoscaler._private.autoscaler.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.reset": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "hasattr",
    "open",
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.autoscaler.yaml",
    "ray.autoscaler._private.providers._get_node_provider",
    "ray.autoscaler._private.resource_demand_scheduler.ResourceDemandScheduler",
    "ray.autoscaler._private.util.hash_runtime_conf",
    "ray.autoscaler._private.util.validate_config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.should_update": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.UpdateInstructions",
    "ray.autoscaler.tags.STATUS_UP_TO_DATE",
    "ray.autoscaler.tags.TAG_RAY_NODE_STATUS"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.spawn_updater": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.updater.NodeUpdaterThread",
    "ray.autoscaler._private.util.with_head_node_ip"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.target_num_workers": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "int",
    "max",
    "min",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.unmanaged_workers": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ray.autoscaler.tags.NODE_KIND_UNMANAGED",
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.update": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.autoscaler.logger",
    "ray.autoscaler._private.util.DEBUG_AUTOSCALING_ERROR",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "ray.experimental.internal_kv._internal_kv_put",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.StandardAutoscaler.workers": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ray.autoscaler.tags.NODE_KIND_WORKER",
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_FILE_MOUNTS_CONTENTS": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_LAUNCH_CONFIG": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_NODE_KIND": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_NODE_STATUS": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_STATUS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_RUNTIME_CONFIG": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.TAG_RAY_USER_NODE_TYPE": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.UpdateInstructions": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.autoscaler._private.autoscaler._get_node_provider": {
  "data": {
   "shadows": "ray.autoscaler._private.providers._get_node_provider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler._internal_kv_initialized": {
  "data": {
   "shadows": "ray.experimental.internal_kv._internal_kv_initialized"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler._internal_kv_put": {
  "data": {
   "shadows": "ray.experimental.internal_kv._internal_kv_put"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.hash_launch_conf": {
  "data": {
   "shadows": "ray.autoscaler._private.util.hash_launch_conf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.hash_runtime_conf": {
  "data": {
   "shadows": "ray.autoscaler._private.util.hash_runtime_conf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.autoscaler._private.autoscaler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.validate_config": {
  "data": {
   "shadows": "ray.autoscaler._private.util.validate_config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.with_head_node_ip": {
  "data": {
   "shadows": "ray.autoscaler._private.util.with_head_node_ip"
  },
  "type": "import"
 },
 "ray.autoscaler._private.autoscaler.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.aws.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.aws.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "ray.autoscaler._private.aws.node_provider.make_ec2_client",
    "ray.autoscaler._private.aws.node_provider.random",
    "ray.autoscaler._private.aws.node_provider.threading",
    "ray.autoscaler._private.constants.BOTO_MAX_RETRIES",
    "ray.autoscaler.node_provider.NodeProvider.__init__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider._create_node": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "len",
    "range",
    "ray.autoscaler._private.aws.node_provider.botocore",
    "ray.autoscaler._private.aws.node_provider.logger",
    "ray.autoscaler._private.aws.node_provider.to_aws_format",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.old_error",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.constants.BOTO_CREATE_MAX_RETRIES",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider._create_tags": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ray.autoscaler._private.log_timer.LogTimer",
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider._get_cached_node": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider._get_node": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider._update_node_tags": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.config.bootstrap_aws",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.create_node": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "list",
    "ray.autoscaler._private.aws.node_provider.copy",
    "ray.autoscaler._private.aws.node_provider.from_aws_format",
    "ray.autoscaler._private.aws.node_provider.logger",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.render_list",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME",
    "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG",
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND",
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.external_ip": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.fillout_available_node_types_resources": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.aws.node_provider.boto3",
    "ray.autoscaler._private.aws.node_provider.copy",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.internal_ip": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.is_running": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.is_terminated": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.node_tags": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "ray.autoscaler._private.aws.node_provider.from_aws_format",
    "ray.autoscaler._private.aws.node_provider.to_aws_format",
    "ray.autoscaler._private.aws.utils.boto_exception_handler",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.set_node_tags": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.node_provider.TAG_BATCH_DELAY",
    "ray.autoscaler._private.aws.node_provider.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.terminate_node": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.node_provider.logger",
    "ray.autoscaler._private.cli_logger.cf.dimmed",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.AWSNodeProvider.terminate_nodes": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.node_provider.logger",
    "ray.autoscaler._private.cli_logger.cf.dimmed",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.render_list"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.BOTO_CREATE_MAX_RETRIES": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.BOTO_CREATE_MAX_RETRIES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.BOTO_MAX_RETRIES": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.BOTO_MAX_RETRIES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.Config": {
  "data": {
   "shadows": "botocore.config.Config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.LogTimer": {
  "data": {
   "shadows": "ray.autoscaler._private.log_timer.LogTimer"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_BATCH_DELAY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_RAY_LAUNCH_CONFIG": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_RAY_NODE_KIND": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_RAY_NODE_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.TAG_RAY_USER_NODE_TYPE": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.bootstrap_aws": {
  "data": {
   "shadows": "ray.autoscaler._private.aws.config.bootstrap_aws"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.boto_exception_handler": {
  "data": {
   "shadows": "ray.autoscaler._private.aws.utils.boto_exception_handler"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.from_aws_format": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.autoscaler._private.aws.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.make_ec2_client": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botocore.config.Config",
    "ray.autoscaler._private.aws.node_provider.boto3"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.node_provider.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.node_provider.to_aws_format": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.utils": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.aws.utils.LazyDefaultDict": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.aws.utils.LazyDefaultDict.__missing__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.utils.boto_exception_handler": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ExceptionHandlerContextManager"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.utils.boto_exception_handler.ExceptionHandlerContextManager": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "ray.autoscaler._private.aws.utils.boto_exception_handler.ExceptionHandlerContextManager.__enter__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.utils.boto_exception_handler.ExceptionHandlerContextManager.__exit__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.utils.botocore",
    "ray.autoscaler._private.aws.utils.handle_boto_error",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.aws.utils.botocore": {
  "data": {
   "shadows": "botocore"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.utils.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.utils.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.aws.utils.handle_boto_error": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cf.underlined",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.newline",
    "ray.autoscaler._private.cli_logger.cli_logger.old_style",
    "ray.autoscaler._private.cli_logger.cli_logger.panic",
    "ray.autoscaler._private.cli_logger.cli_logger.verbatim_error_ctx",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose_error",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.azure.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.azure.config.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.azure.config.DeploymentMode": {
  "data": {
   "shadows": "azure.mgmt.resource.resources.models.DeploymentMode"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.MSI_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config.NSG_NAME": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config.RETRIES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config.ResourceManagementClient": {
  "data": {
   "shadows": "azure.mgmt.resource.ResourceManagementClient"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.SUBNET_NAME": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config.VNET_NAME": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config._configure_key_pair": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "TypeError",
    "open",
    "ray.autoscaler._private.azure.config.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.config._configure_resource_group": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "azure.mgmt.resource.ResourceManagementClient",
    "azure.mgmt.resource.resources.models.DeploymentMode.incremental",
    "open",
    "ray.autoscaler._private.azure.config._get_client",
    "ray.autoscaler._private.azure.config.json",
    "ray.autoscaler._private.azure.config.logger",
    "ray.autoscaler._private.azure.config.os",
    "ray.autoscaler._private.azure.config.random"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.config._get_client": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "azure.common.client_factory.get_client_from_cli_profile"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.config.bootstrap_azure": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.autoscaler._private.azure.config._configure_key_pair",
    "ray.autoscaler._private.azure.config._configure_resource_group"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.config.get_client_from_cli_profile": {
  "data": {
   "shadows": "azure.common.client_factory.get_client_from_cli_profile"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.config.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.azure.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "azure.common.client_factory.get_client_from_cli_profile",
    "azure.mgmt.compute.ComputeManagementClient",
    "azure.mgmt.network.NetworkManagementClient",
    "azure.mgmt.resource.ResourceManagementClient",
    "knack.util.CLIError",
    "msrestazure.azure_active_directory.MSIAuthentication",
    "ray.autoscaler._private.azure.node_provider.logger",
    "ray.autoscaler.node_provider.NodeProvider.__init__",
    "str",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider._extract_metadata": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider._get_cached_node": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider._get_filtered_nodes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "filter",
    "ray.autoscaler._private.azure.node_provider.synchronized"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider._get_filtered_nodes.match_tags": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider._get_node": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ray.autoscaler._private.azure.config.bootstrap_azure",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.create_node": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "azure.mgmt.resource.resources.models.DeploymentMode.incremental",
    "open",
    "ray.autoscaler._private.azure.node_provider.VM_NAME_UUID_LEN",
    "ray.autoscaler._private.azure.node_provider.json",
    "ray.autoscaler._private.azure.node_provider.os",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME",
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.external_ip": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.internal_ip": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.is_running": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.is_terminated": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.node_tags": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.set_node_tags": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.autoscaler._private.azure.node_provider.synchronized"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.AzureNodeProvider.terminate_node": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ray.autoscaler._private.azure.node_provider.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.CLIError": {
  "data": {
   "shadows": "knack.util.CLIError"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.ComputeManagementClient": {
  "data": {
   "shadows": "azure.mgmt.compute.ComputeManagementClient"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.DeploymentMode": {
  "data": {
   "shadows": "azure.mgmt.resource.resources.models.DeploymentMode"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.MSIAuthentication": {
  "data": {
   "shadows": "msrestazure.azure_active_directory.MSIAuthentication"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.NetworkManagementClient": {
  "data": {
   "shadows": "azure.mgmt.network.NetworkManagementClient"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.ResourceManagementClient": {
  "data": {
   "shadows": "azure.mgmt.resource.ResourceManagementClient"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.TAG_RAY_NODE_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.VM_NAME_MAX_LEN": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.node_provider.VM_NAME_UUID_LEN": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.node_provider.bootstrap_azure": {
  "data": {
   "shadows": "ray.autoscaler._private.azure.config.bootstrap_azure"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.get_client_from_cli_profile": {
  "data": {
   "shadows": "azure.common.client_factory.get_client_from_cli_profile"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.autoscaler._private.azure.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.azure.node_provider.synchronized": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.synchronized.wrapper": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.azure.node_provider.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "colorful",
    "ray.autoscaler._private.cli_logger._CliLogger",
    "ray.autoscaler._private.cli_logger._ColorfulMock",
    "ray.autoscaler._private.cli_logger._ColorfulProxy",
    "ray.autoscaler._private.cli_logger._patched_makeRecord",
    "ray.autoscaler._private.cli_logger.colorama",
    "ray.autoscaler._private.cli_logger.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.cli_logger.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.ColorfulString": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.LOGGER_FORMAT": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.LOGGER_FORMAT"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.SilentClickException": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.click"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger.SilentClickException.__init__": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.SilentClickException",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger.SilentClickException.show": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger._CliLogger": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf",
    "ray.autoscaler._private.cli_logger.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._error": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._print": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "bool",
    "print",
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger.logging",
    "ray.autoscaler._private.cli_logger.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._set_color_mode": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._set_log_style": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._isatty"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._set_verbosity": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger._warning": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.abort": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "exc_cls",
    "ray.autoscaler._private.cli_logger.click",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.color_mode": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.configure": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.confirm": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "ValueError",
    "bool",
    "len",
    "ray.autoscaler._private.cli_logger.SilentClickException",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.cf",
    "ray.autoscaler._private.cli_logger.sys",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.detect_colors": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler._private.cli_logger.cf"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.doassert": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "AssertionError",
    "bool",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.error": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.group": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.indented": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "IndentedContextManager"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.indented.IndentedContextManager": {
  "data": {
   "lineno": 432
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.indented.IndentedContextManager.__enter__": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.indented.IndentedContextManager.__exit__": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.labeled_value": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.log_style": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.newline": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_confirm": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler._private.cli_logger.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_debug": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.logging",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_error": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.logging",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_exception": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.logging",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_info": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.logging",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.old_warning": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._external_caller_info",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.logging",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.panic": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.print": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger._format_msg",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.prompt": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "ray.autoscaler._private.cli_logger._format_msg",
    "ray.autoscaler._private.cli_logger.cf",
    "ray.autoscaler._private.cli_logger.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.render_list": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.set_format": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.logging",
    "ray.autoscaler._private.constants.LOGGER_FORMAT"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.success": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbatim_error_ctx": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "VerbatimErorContextManager",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbatim_error_ctx.VerbatimErorContextManager": {
  "data": {
   "lineno": 462
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbatim_error_ctx.VerbatimErorContextManager.__enter__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbatim_error_ctx.VerbatimErorContextManager.__exit__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbose": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbose_error": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbose_warning": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.verbosity": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.very_verbose": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._CliLogger.warning": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._ColorfulMock": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger._ColorfulMock.__getattr__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._ColorfulMock.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._ColorfulMock.disable": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._ColorfulProxy": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "ray.autoscaler._private.cli_logger._ColorfulProxy.__getattr__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "colorful",
    "getattr",
    "ray.autoscaler._private.cli_logger._ColorfulProxy"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._cf": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.autoscaler._private.cli_logger._external_caller_info": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.inspect",
    "ray.autoscaler._private.cli_logger.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._format_msg": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "colorful.core.ColorfulString",
    "int",
    "isinstance",
    "ray.autoscaler._private.cli_logger.cf",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._isatty": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.cli_logger.sys"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger._patched_makeRecord": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.logging"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.cli_logger.cf": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "ray.autoscaler._private.cli_logger.cli_logger": {
  "data": {
   "lineno": 872
  },
  "type": "constant"
 },
 "ray.autoscaler._private.cli_logger.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger_demoall": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cf.italic",
    "ray.autoscaler._private.cli_logger.cf.underlined",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.cli_logger.cli_logger.confirm",
    "ray.autoscaler._private.cli_logger.cli_logger.doassert",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.indented",
    "ray.autoscaler._private.cli_logger.cli_logger.labeled_value",
    "ray.autoscaler._private.cli_logger.cli_logger.newline",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.render_list",
    "ray.autoscaler._private.cli_logger.cli_logger.success",
    "ray.autoscaler._private.cli_logger.cli_logger.verbatim_error_ctx",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose_error",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose_warning",
    "ray.autoscaler._private.cli_logger.cli_logger.very_verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.warning"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.cli_logger_demoall.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.cli_logger_demoall.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.command_runner.logging",
    "ray.autoscaler._private.command_runner.os"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.command_runner.CommandRunnerInterface": {
  "data": {
   "shadows": "ray.autoscaler.command_runner.CommandRunnerInterface"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.DOCKER_MOUNT_PREFIX": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.DOCKER_MOUNT_PREFIX"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ray.autoscaler.command_runner.CommandRunnerInterface"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.__init__": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.SSHCommandRunner"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner._check_container_status": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "ray.autoscaler._private.docker.check_docker_running_cmd"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner._check_docker_installed": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner._configure_runtime": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.command_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner._docker_expand_user": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.remote_shell_command_str": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.run": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "object",
    "ray.autoscaler._private.command_runner._with_environment_variables",
    "ray.autoscaler._private.command_runner._with_interactive",
    "ray.autoscaler._private.docker.with_docker_exec",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.run_init": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.command_runner.json",
    "ray.autoscaler._private.command_runner.logger",
    "ray.autoscaler._private.command_runner.os",
    "ray.autoscaler._private.docker.DOCKER_MOUNT_PREFIX",
    "ray.autoscaler._private.docker.check_bind_mounts_cmd",
    "ray.autoscaler._private.docker.check_docker_image",
    "ray.autoscaler._private.docker.docker_start_cmds"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.run_rsync_down": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.os",
    "ray.autoscaler._private.docker.DOCKER_MOUNT_PREFIX"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.DockerCommandRunner.run_rsync_up": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.os",
    "ray.autoscaler._private.docker.DOCKER_MOUNT_PREFIX"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.HASH_MAX_LENGTH": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.autoscaler._private.command_runner.KUBECTL_RSYNC": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ray.autoscaler.command_runner.CommandRunnerInterface"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner.remote_shell_command_str": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner.run": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "object",
    "ray.autoscaler._private.command_runner._with_environment_variables",
    "ray.autoscaler._private.command_runner._with_interactive",
    "ray.autoscaler._private.command_runner.logger",
    "ray.autoscaler._private.command_runner.subprocess",
    "ray.autoscaler._private.command_runner.sys",
    "shlex.quote",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner.run_rsync_down": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "UserWarning",
    "ray.autoscaler._private.command_runner.KUBECTL_RSYNC",
    "ray.autoscaler._private.command_runner.warnings"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.KubernetesCommandRunner.run_rsync_up": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception",
    "UserWarning",
    "ray.autoscaler._private.command_runner.KUBECTL_RSYNC",
    "ray.autoscaler._private.command_runner.logger",
    "ray.autoscaler._private.command_runner.warnings",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.LogTimer": {
  "data": {
   "shadows": "ray.autoscaler._private.log_timer.LogTimer"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.NODE_START_WAIT_S": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.autoscaler._private.command_runner.ProcessRunnerError": {
  "data": {
   "shadows": "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ray.autoscaler.command_runner.CommandRunnerInterface"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "getpass.getuser",
    "ray.autoscaler._private.command_runner.HASH_MAX_LENGTH",
    "ray.autoscaler._private.command_runner.SSHOptions",
    "ray.autoscaler._private.command_runner.hashlib"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner._create_rsync_filter_args": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner._get_node_ip": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner._run_helper": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.old_style",
    "ray.autoscaler._private.command_runner.click",
    "ray.autoscaler._private.command_runner.is_using_login_shells",
    "ray.autoscaler._private.command_runner.subprocess",
    "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError",
    "ray.autoscaler._private.subprocess_output_util.is_output_redirected",
    "ray.autoscaler._private.subprocess_output_util.run_cmd_redirected",
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner._set_ssh_ip_if_required": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "OSError",
    "ray.autoscaler._private.cli_logger.cli_logger.doassert",
    "ray.autoscaler._private.cli_logger.cli_logger.old_warning",
    "ray.autoscaler._private.cli_logger.cli_logger.warning",
    "ray.autoscaler._private.command_runner.NODE_START_WAIT_S",
    "ray.autoscaler._private.command_runner.logger",
    "ray.autoscaler._private.command_runner.os",
    "ray.autoscaler._private.command_runner.time",
    "ray.autoscaler._private.log_timer.LogTimer",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner._wait_for_ip": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.labeled_value",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.command_runner.logger",
    "ray.autoscaler._private.command_runner.time",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner.remote_shell_command_str": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner.run": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "object",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.indented",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.verbosity",
    "ray.autoscaler._private.cli_logger.cli_logger.very_verbose",
    "ray.autoscaler._private.command_runner.SSHOptions",
    "ray.autoscaler._private.command_runner._with_environment_variables",
    "ray.autoscaler._private.command_runner._with_interactive",
    "ray.autoscaler._private.command_runner.is_using_login_shells",
    "ray.autoscaler._private.command_runner.logger",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner.run_rsync_down": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.command_runner.is_rsync_silent",
    "ray.autoscaler._private.command_runner.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHCommandRunner.run_rsync_up": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.command_runner.is_rsync_silent",
    "ray.autoscaler._private.command_runner.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHOptions": {
  "data": {
   "lineno": 245
  },
  "type": "class"
 },
 "ray.autoscaler._private.command_runner.SSHOptions.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.SSHOptions.to_ssh_options_list": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner._config": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.autoscaler._private.command_runner._with_environment_variables": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object",
    "ray.autoscaler._private.command_runner.json",
    "shlex.quote",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner._with_interactive": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.check_bind_mounts_cmd": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.check_bind_mounts_cmd"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.check_docker_image": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.check_docker_image"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.check_docker_running_cmd": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.check_docker_running_cmd"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.docker_start_cmds": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.docker_start_cmds"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.getuser": {
  "data": {
   "shadows": "getpass.getuser"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.is_output_redirected": {
  "data": {
   "shadows": "ray.autoscaler._private.subprocess_output_util.is_output_redirected"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.is_rsync_silent": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner._config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.is_using_login_shells": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner._config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.autoscaler._private.command_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.quote": {
  "data": {
   "shadows": "shlex.quote"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.run_cmd_redirected": {
  "data": {
   "shadows": "ray.autoscaler._private.subprocess_output_util.run_cmd_redirected"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.set_rsync_silent": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner._config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.set_using_login_shells": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner._config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.command_runner.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ray.autoscaler._private.command_runner.with_docker_exec": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.with_docker_exec"
  },
  "type": "import"
 },
 "ray.autoscaler._private.constants": {
  "data": {
   "symbols_in_volume": [
    "ray.autoscaler._private.constants.env_integer"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_HEARTBEAT_TIMEOUT_S": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_MAX_CONCURRENT_LAUNCHES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_MAX_LAUNCH_BATCH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_MAX_NUM_FAILURES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_RESOURCE_REQUEST_CHANNEL": {
  "data": {
   "shadows": "ray.ray_constants.AUTOSCALER_RESOURCE_REQUEST_CHANNEL"
  },
  "type": "import"
 },
 "ray.autoscaler._private.constants.AUTOSCALER_UPDATE_INTERVAL_S": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.BOTO_CREATE_MAX_RETRIES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.BOTO_MAX_RETRIES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.DOCKER_MOUNT_PREFIX": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.autoscaler._private.constants.LOGGER_FORMAT": {
  "data": {
   "shadows": "ray.ray_constants.LOGGER_FORMAT"
  },
  "type": "import"
 },
 "ray.autoscaler._private.constants.MEMORY_RESOURCE_UNIT_BYTES": {
  "data": {
   "shadows": "ray.ray_constants.MEMORY_RESOURCE_UNIT_BYTES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.constants.RESOURCES_ENVIRONMENT_VARIABLE": {
  "data": {
   "shadows": "ray.ray_constants.RESOURCES_ENVIRONMENT_VARIABLE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.constants.env_integer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.constants.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.docker": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.autoscaler._private.docker.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.docker.DOCKER_MOUNT_PREFIX": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.DOCKER_MOUNT_PREFIX"
  },
  "type": "import"
 },
 "ray.autoscaler._private.docker._check_helper": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.check_bind_mounts_cmd": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.autoscaler._private.docker._check_helper"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.check_docker_image": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.autoscaler._private.docker._check_helper"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.check_docker_running_cmd": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.autoscaler._private.docker._check_helper"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.docker_start_cmds": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.autoscaler._private.constants.DOCKER_MOUNT_PREFIX"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.autoscaler._private.docker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.docker.quote": {
  "data": {
   "shadows": "pipes.quote"
  },
  "type": "import"
 },
 "ray.autoscaler._private.docker.validate_docker_config": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "ray.autoscaler._private.docker.with_docker_exec": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pipes.quote"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.gcp.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.gcp.config.RAY",
    "ray.autoscaler._private.gcp.config.VERSION",
    "ray.autoscaler._private.gcp.config.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_CONFIG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_ID": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_ROLES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.MAX_POLLS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.OAuthCredentials": {
  "data": {
   "shadows": "google.oauth2.credentials.Credentials"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.POLL_INTERVAL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.RAY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.SERVICE_ACCOUNT_EMAIL_TEMPLATE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.VERSION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config._add_iam_policy_binding": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "google.oauth2.service_account"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._configure_iam_role": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "google.oauth2.service_account",
    "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_CONFIG",
    "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_ID",
    "ray.autoscaler._private.gcp.config.DEFAULT_SERVICE_ACCOUNT_ROLES",
    "ray.autoscaler._private.gcp.config.SERVICE_ACCOUNT_EMAIL_TEMPLATE",
    "ray.autoscaler._private.gcp.config._add_iam_policy_binding",
    "ray.autoscaler._private.gcp.config._create_service_account",
    "ray.autoscaler._private.gcp.config._get_service_account",
    "ray.autoscaler._private.gcp.config.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._configure_key_pair": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "functools.partial",
    "len",
    "next",
    "open",
    "range",
    "ray.autoscaler._private.gcp.config._create_project_ssh_key_pair",
    "ray.autoscaler._private.gcp.config.generate_rsa_key_pair",
    "ray.autoscaler._private.gcp.config.key_pair_name",
    "ray.autoscaler._private.gcp.config.key_pair_paths",
    "ray.autoscaler._private.gcp.config.logger",
    "ray.autoscaler._private.gcp.config.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._configure_project": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config._create_project",
    "ray.autoscaler._private.gcp.config._get_project"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._configure_subnet": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.autoscaler._private.gcp.config._list_subnets"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_compute": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "googleapiclient.discovery.build"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_crm": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "googleapiclient.discovery.build"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_iam": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "googleapiclient.discovery.build"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_project": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config.wait_for_crm_operation"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_project_ssh_key_pair": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "next",
    "ray.autoscaler._private.gcp.config.wait_for_compute_global_operation"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._create_service_account": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "google.oauth2.service_account"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._get_project": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "googleapiclient.errors.HttpError"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._get_service_account": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "google.oauth2.service_account",
    "googleapiclient.errors.HttpError"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._get_subnet": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config._list_subnets": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.bootstrap_gcp": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config._configure_iam_role",
    "ray.autoscaler._private.gcp.config._configure_key_pair",
    "ray.autoscaler._private.gcp.config._configure_project",
    "ray.autoscaler._private.gcp.config._configure_subnet",
    "ray.autoscaler._private.gcp.config.construct_clients_from_provider_config"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.construct_clients_from_provider_config": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeError",
    "google.oauth2.credentials.Credentials",
    "google.oauth2.service_account.Credentials.from_service_account_info",
    "ray.autoscaler._private.gcp.config._create_compute",
    "ray.autoscaler._private.gcp.config._create_crm",
    "ray.autoscaler._private.gcp.config._create_iam",
    "ray.autoscaler._private.gcp.config.json",
    "ray.autoscaler._private.gcp.config.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.discovery": {
  "data": {
   "shadows": "googleapiclient.discovery"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.errors": {
  "data": {
   "shadows": "googleapiclient.errors"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.generate_rsa_key_pair": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key",
    "cryptography.hazmat.primitives.serialization.Encoding.OpenSSH",
    "cryptography.hazmat.primitives.serialization.Encoding.PEM",
    "cryptography.hazmat.primitives.serialization.NoEncryption",
    "cryptography.hazmat.primitives.serialization.PrivateFormat.TraditionalOpenSSL",
    "cryptography.hazmat.primitives.serialization.PublicFormat.OpenSSH"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.key_pair_name": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config.RAY"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.key_pair_paths": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.rsa": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.rsa"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.serialization": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.service_account": {
  "data": {
   "shadows": "google.oauth2.service_account"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.config.wait_for_compute_global_operation": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "range",
    "ray.autoscaler._private.gcp.config.MAX_POLLS",
    "ray.autoscaler._private.gcp.config.POLL_INTERVAL",
    "ray.autoscaler._private.gcp.config.logger",
    "ray.autoscaler._private.gcp.config.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.config.wait_for_crm_operation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "range",
    "ray.autoscaler._private.gcp.config.MAX_POLLS",
    "ray.autoscaler._private.gcp.config.POLL_INTERVAL",
    "ray.autoscaler._private.gcp.config.logger",
    "ray.autoscaler._private.gcp.config.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.gcp.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config.construct_clients_from_provider_config",
    "ray.autoscaler.node_provider.NodeProvider.__init__",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider._get_cached_node": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider._get_node": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.config.bootstrap_gcp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.create_node": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "ray.autoscaler._private.gcp.node_provider.INSTANCE_NAME_MAX_LEN",
    "ray.autoscaler._private.gcp.node_provider.INSTANCE_NAME_UUID_LEN",
    "ray.autoscaler._private.gcp.node_provider.wait_for_compute_zone_operation",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME",
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.external_ip": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "get_external_ip"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.external_ip.get_external_ip": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.internal_ip": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "get_internal_ip"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.internal_ip.get_internal_ip": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.is_running": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.is_terminated": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.node_tags": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.set_node_tags": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "ray.autoscaler._private.gcp.node_provider.wait_for_compute_zone_operation"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider.terminate_node": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.node_provider.wait_for_compute_zone_operation"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.gcp.node_provider.INSTANCE_NAME_MAX_LEN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.node_provider.INSTANCE_NAME_UUID_LEN": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.node_provider.MAX_POLLS": {
  "data": {
   "shadows": "ray.autoscaler._private.gcp.config.MAX_POLLS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.POLL_INTERVAL": {
  "data": {
   "shadows": "ray.autoscaler._private.gcp.config.POLL_INTERVAL"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.TAG_RAY_NODE_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.bootstrap_gcp": {
  "data": {
   "shadows": "ray.autoscaler._private.gcp.config.bootstrap_gcp"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.construct_clients_from_provider_config": {
  "data": {
   "shadows": "ray.autoscaler._private.gcp.config.construct_clients_from_provider_config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.gcp.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "ray.autoscaler._private.gcp.node_provider.wait_for_compute_zone_operation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "range",
    "ray.autoscaler._private.gcp.config.MAX_POLLS",
    "ray.autoscaler._private.gcp.config.POLL_INTERVAL",
    "ray.autoscaler._private.gcp.node_provider.logger",
    "ray.autoscaler._private.gcp.node_provider.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.kubernetes.ConfigException": {
  "data": {
   "shadows": "kubernetes.config.config_exception.ConfigException"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes._auth_api": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes._configured": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes._core_api": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes._extensions_beta_api": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes._load_config": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "kubernetes.config.config_exception.ConfigException",
    "ray.autoscaler._private.kubernetes._configured",
    "ray.autoscaler._private.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.auth_api": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes._auth_api",
    "ray.autoscaler._private.kubernetes._load_config",
    "ray.autoscaler._private.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.kubernetes.config.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.kubernetes.config.ApiException": {
  "data": {
   "shadows": "kubernetes.client.rest.ApiException"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError.__str__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config._configure_autoscaler_role": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.kubernetes.auth_api",
    "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError",
    "ray.autoscaler._private.kubernetes.config.created_msg",
    "ray.autoscaler._private.kubernetes.config.logger",
    "ray.autoscaler._private.kubernetes.config.not_found_msg",
    "ray.autoscaler._private.kubernetes.config.not_provided_msg",
    "ray.autoscaler._private.kubernetes.config.using_existing_msg",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config._configure_autoscaler_role_binding": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.kubernetes.auth_api",
    "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError",
    "ray.autoscaler._private.kubernetes.config.created_msg",
    "ray.autoscaler._private.kubernetes.config.logger",
    "ray.autoscaler._private.kubernetes.config.not_found_msg",
    "ray.autoscaler._private.kubernetes.config.not_provided_msg",
    "ray.autoscaler._private.kubernetes.config.using_existing_msg",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config._configure_autoscaler_service_account": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError",
    "ray.autoscaler._private.kubernetes.config.created_msg",
    "ray.autoscaler._private.kubernetes.config.logger",
    "ray.autoscaler._private.kubernetes.config.not_found_msg",
    "ray.autoscaler._private.kubernetes.config.not_provided_msg",
    "ray.autoscaler._private.kubernetes.config.using_existing_msg",
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config._configure_namespace": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "kubernetes.client.V1Namespace",
    "kubernetes.client.V1ObjectMeta",
    "kubernetes.client.rest.ApiException",
    "len",
    "ray.autoscaler._private.kubernetes.config.created_msg",
    "ray.autoscaler._private.kubernetes.config.logger",
    "ray.autoscaler._private.kubernetes.config.not_checking_msg",
    "ray.autoscaler._private.kubernetes.config.not_found_msg",
    "ray.autoscaler._private.kubernetes.config.using_existing_msg",
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config._configure_services": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.kubernetes.config.InvalidNamespaceError",
    "ray.autoscaler._private.kubernetes.config.created_msg",
    "ray.autoscaler._private.kubernetes.config.logger",
    "ray.autoscaler._private.kubernetes.config.not_found_msg",
    "ray.autoscaler._private.kubernetes.config.not_provided_msg",
    "ray.autoscaler._private.kubernetes.config.updating_existing_msg",
    "ray.autoscaler._private.kubernetes.config.using_existing_msg",
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.auth_api": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.auth_api"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.bootstrap_kubernetes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler._private.kubernetes.config._configure_autoscaler_role",
    "ray.autoscaler._private.kubernetes.config._configure_autoscaler_role_binding",
    "ray.autoscaler._private.kubernetes.config._configure_autoscaler_service_account",
    "ray.autoscaler._private.kubernetes.config._configure_namespace",
    "ray.autoscaler._private.kubernetes.config._configure_services"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.client": {
  "data": {
   "shadows": "kubernetes.client"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.core_api": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.core_api"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.created_msg": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.log_prefix": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.log_prefix"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.config.not_checking_msg": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.not_found_msg": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.not_provided_msg": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.updating_existing_msg": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.config.using_existing_msg": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.core_api": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes._core_api",
    "ray.autoscaler._private.kubernetes._load_config",
    "ray.autoscaler._private.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.extensions_beta_api": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes._extensions_beta_api",
    "ray.autoscaler._private.kubernetes._load_config",
    "ray.autoscaler._private.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.kubernetes": {
  "data": {
   "shadows": "kubernetes"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.log_prefix": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.kubernetes.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.kubernetes.node_provider.ApiException": {
  "data": {
   "shadows": "kubernetes.client.rest.ApiException"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.KubernetesCommandRunner"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider.__init__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.config.bootstrap_kubernetes",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.create_node": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "range",
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.extensions_beta_api",
    "ray.autoscaler._private.kubernetes.log_prefix",
    "ray.autoscaler._private.kubernetes.node_provider._add_service_name_to_service_port",
    "ray.autoscaler._private.kubernetes.node_provider.logger",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME",
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.external_ip": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.get_command_runner": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.KubernetesCommandRunner",
    "ray.autoscaler._private.kubernetes.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.get_node_id": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.internal_ip": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.is_running": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.is_terminated": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.node_tags": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.node_provider.to_label_selector",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.set_node_tags": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.core_api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.terminate_node": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "kubernetes.client.rest.ApiException",
    "ray.autoscaler._private.kubernetes.core_api",
    "ray.autoscaler._private.kubernetes.extensions_beta_api",
    "ray.autoscaler._private.kubernetes.log_prefix",
    "ray.autoscaler._private.kubernetes.node_provider.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider.terminate_nodes": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider._add_service_name_to_service_port": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.bootstrap_kubernetes": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.config.bootstrap_kubernetes"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.core_api": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.core_api"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.extensions_beta_api": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.extensions_beta_api"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.log_prefix": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.log_prefix"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.kubernetes.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.kubernetes.node_provider.to_label_selector": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "ray.autoscaler._private.kubernetes.node_provider.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.load_metrics.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.load_metrics.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray._private.services.get_node_ip_address"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics._get_resource_usage": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "any",
    "float",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics._info": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "format_resource",
    "int",
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "ray.autoscaler._private.load_metrics.time",
    "round",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics._info.format_resource": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ray.autoscaler._private.constants.MEMORY_RESOURCE_UNIT_BYTES",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.approx_workers_used": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.get_node_resources": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.get_pending_placement_groups": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.get_resource_demand_vector": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.get_resource_utilization": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.info_string": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.mark_active": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.autoscaler._private.load_metrics.logger",
    "ray.autoscaler._private.load_metrics.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.num_workers_connected": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.prune_active_ips": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "prune",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.prune_active_ips.prune": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "ray.autoscaler._private.load_metrics.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.LoadMetrics.update": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "float",
    "len",
    "ray.autoscaler._private.load_metrics.time",
    "ray.gcs_utils.PlacementGroupTableData",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.load_metrics.MEMORY_RESOURCE_UNIT_BYTES": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.MEMORY_RESOURCE_UNIT_BYTES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.PlacementGroupTableData": {
  "data": {
   "shadows": "ray.gcs_utils.PlacementGroupTableData"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.autoscaler._private.load_metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.autoscaler._private.load_metrics.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.local.config": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.local.config.bootstrap_local": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.local.coordinator_node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.ConnectionError": {
  "data": {
   "shadows": "requests.exceptions.ConnectionError"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider.__init__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider._get_http_response": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ImportError",
    "http.client.RemoteDisconnected",
    "ray.autoscaler._private.local.coordinator_node_provider.json",
    "ray.autoscaler._private.local.coordinator_node_provider.logger",
    "ray.autoscaler._private.local.coordinator_node_provider.requests",
    "requests.exceptions.ConnectionError"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.create_node": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.external_ip": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.internal_ip": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.is_running": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.is_terminated": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.node_tags": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.set_node_tags": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.terminate_node": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider.terminate_nodes": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.RemoteDisconnected": {
  "data": {
   "shadows": "http.client.RemoteDisconnected"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.coordinator_node_provider.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.local.node_provider.filelock_logger",
    "ray.autoscaler._private.local.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.local.node_provider.ClusterState": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "ray.autoscaler._private.local.node_provider.ClusterState.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "filelock.FileLock",
    "len",
    "list",
    "open",
    "ray.autoscaler._private.local.node_provider.json",
    "ray.autoscaler._private.local.node_provider.logger",
    "ray.autoscaler._private.local.node_provider.os",
    "ray.autoscaler.tags.NODE_KIND_HEAD",
    "ray.autoscaler.tags.NODE_KIND_WORKER",
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.ClusterState.get": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "open",
    "ray.autoscaler._private.local.node_provider.json"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.ClusterState.put": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "list",
    "open",
    "ray.autoscaler._private.local.node_provider.json",
    "ray.autoscaler._private.local.node_provider.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.node_provider.ClusterState",
    "ray.autoscaler._private.local.node_provider.OnPremCoordinatorState",
    "ray.autoscaler.node_provider.NodeProvider.__init__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.config.bootstrap_local",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.create_node": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.external_ip": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.node_provider.socket"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.internal_ip": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.node_provider.socket"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.is_running": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.is_terminated": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.node_tags": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.set_node_tags": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.LocalNodeProvider.terminate_node": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.NODE_KIND_HEAD": {
  "data": {
   "shadows": "ray.autoscaler.tags.NODE_KIND_HEAD"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.NODE_KIND_WORKER": {
  "data": {
   "shadows": "ray.autoscaler.tags.NODE_KIND_WORKER"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.OnPremCoordinatorState": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.node_provider.ClusterState"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.local.node_provider.OnPremCoordinatorState.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "filelock.FileLock",
    "len",
    "list",
    "open",
    "ray.autoscaler._private.local.node_provider.json",
    "ray.autoscaler._private.local.node_provider.logger",
    "ray.autoscaler._private.local.node_provider.os",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.local.node_provider.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.TAG_RAY_NODE_KIND": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.bootstrap_local": {
  "data": {
   "shadows": "ray.autoscaler._private.local.config.bootstrap_local"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.filelock_logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.autoscaler._private.local.node_provider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.autoscaler._private.local.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.local.node_provider.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.autoscaler._private.log_timer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.log_timer.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.log_timer.LogTimer": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "ray.autoscaler._private.log_timer.LogTimer.__enter__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.autoscaler._private.log_timer.datetime"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.log_timer.LogTimer.__exit__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "any",
    "ray.autoscaler._private.cli_logger.cli_logger.old_style",
    "ray.autoscaler._private.log_timer.datetime",
    "ray.autoscaler._private.log_timer.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.log_timer.LogTimer.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "ray.autoscaler._private.log_timer.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.log_timer.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.autoscaler._private.log_timer.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.autoscaler._private.log_timer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.node_launcher.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.node_launcher.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.NODE_KIND_WORKER": {
  "data": {
   "shadows": "ray.autoscaler.tags.NODE_KIND_WORKER"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.NodeLauncher": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.autoscaler._private.node_launcher.threading"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.node_launcher.NodeLauncher.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.autoscaler._private.node_launcher.NodeLauncher",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.node_launcher.NodeLauncher._launch_node": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.node_launcher.copy",
    "ray.autoscaler._private.util.hash_launch_conf",
    "ray.autoscaler.tags.NODE_KIND_WORKER",
    "ray.autoscaler.tags.STATUS_UNINITIALIZED",
    "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG",
    "ray.autoscaler.tags.TAG_RAY_NODE_KIND",
    "ray.autoscaler.tags.TAG_RAY_NODE_NAME",
    "ray.autoscaler.tags.TAG_RAY_NODE_STATUS",
    "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.node_launcher.NodeLauncher.log": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.autoscaler._private.node_launcher.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.node_launcher.NodeLauncher.run": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.node_launcher.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.node_launcher.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.STATUS_UNINITIALIZED": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_UNINITIALIZED"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.TAG_RAY_LAUNCH_CONFIG": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.TAG_RAY_NODE_KIND": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_KIND"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.TAG_RAY_NODE_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.TAG_RAY_NODE_STATUS": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_STATUS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.TAG_RAY_USER_NODE_TYPE": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.hash_launch_conf": {
  "data": {
   "shadows": "ray.autoscaler._private.util.hash_launch_conf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.node_launcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.node_launcher.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.providers._import_aws",
    "ray.autoscaler._private.providers._import_azure",
    "ray.autoscaler._private.providers._import_external",
    "ray.autoscaler._private.providers._import_gcp",
    "ray.autoscaler._private.providers._import_kubernetes",
    "ray.autoscaler._private.providers._import_local",
    "ray.autoscaler._private.providers._import_staroid",
    "ray.autoscaler._private.providers._load_aws_defaults_config",
    "ray.autoscaler._private.providers._load_azure_defaults_config",
    "ray.autoscaler._private.providers._load_gcp_defaults_config",
    "ray.autoscaler._private.providers._load_kubernetes_defaults_config",
    "ray.autoscaler._private.providers._load_local_defaults_config",
    "ray.autoscaler._private.providers._load_staroid_defaults_config",
    "ray.autoscaler._private.providers.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.providers.AWSNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.aws.node_provider.AWSNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.AzureNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.azure.node_provider.AzureNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.CoordinatorSenderNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.GCPNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.KubernetesNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.LocalNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.local.node_provider.LocalNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.StaroidNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers._DEFAULT_CONFIGS": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "ray.autoscaler._private.providers._NODE_PROVIDERS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "ray.autoscaler._private.providers._PROVIDER_PRETTY_NAMES": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ray.autoscaler._private.providers._clear_provider_cache": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers._provider_instances"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._get_default_config": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "NotImplementedError",
    "load_config",
    "open",
    "ray.autoscaler._private.providers._DEFAULT_CONFIGS",
    "ray.autoscaler._private.providers.yaml"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._get_node_provider": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "importer",
    "provider_cls",
    "ray.autoscaler._private.providers._NODE_PROVIDERS",
    "ray.autoscaler._private.providers._provider_instances",
    "ray.autoscaler._private.providers.json",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_aws": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.autoscaler._private.aws.node_provider.AWSNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_azure": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.autoscaler._private.azure.node_provider.AzureNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_external": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers._load_class"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_gcp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.autoscaler._private.gcp.node_provider.GCPNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_kubernetes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.autoscaler._private.kubernetes.node_provider.KubernetesNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_local": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.autoscaler._private.local.coordinator_node_provider.CoordinatorSenderNodeProvider",
    "ray.autoscaler._private.local.node_provider.LocalNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._import_staroid": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_aws_defaults_config": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.aws.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_azure_defaults_config": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.azure.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_class": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "ray.autoscaler._private.providers.importlib"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_gcp_defaults_config": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.gcp.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_kubernetes_defaults_config": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.kubernetes.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_local_defaults_config": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.local.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._load_staroid_defaults_config": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ray.autoscaler._private.providers.os",
    "ray.autoscaler.staroid.__file__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.providers._provider_instances": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.providers.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.autoscaler._private.providers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_aws": {
  "data": {
   "shadows": "ray.autoscaler.aws"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_azure": {
  "data": {
   "shadows": "ray.autoscaler.azure"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_gcp": {
  "data": {
   "shadows": "ray.autoscaler.gcp"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_kubernetes": {
  "data": {
   "shadows": "ray.autoscaler.kubernetes"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_local": {
  "data": {
   "shadows": "ray.autoscaler.local"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.ray_staroid": {
  "data": {
   "shadows": "ray.autoscaler.staroid"
  },
  "type": "import"
 },
 "ray.autoscaler._private.providers.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.staroid.command_runner": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler._private.staroid.command_runner.KubernetesCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.KubernetesCommandRunner"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.KubernetesCommandRunner"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner",
    "ray.autoscaler._private.staroid.command_runner.os",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner._rewrite_target_home_dir": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner.run_rsync_down": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner.run_rsync_up": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.command_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.log_prefix": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.autoscaler._private.staroid.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.staroid.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.staroid.node_provider.ApiException": {
  "data": {
   "shadows": "kubernetes.client.rest.ApiException"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.NodeProvider": {
  "data": {
   "shadows": "ray.autoscaler.node_provider.NodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.Staroid": {
  "data": {
   "shadows": "staroid.Staroid"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.NodeProvider.__init__",
    "staroid.Staroid"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider._connect_kubeapi": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "kubernetes.client.ApiClient",
    "kubernetes.client.Configuration",
    "ray.autoscaler._private.staroid.log_prefix",
    "ray.autoscaler._private.staroid.node_provider.find_free_port",
    "ray.autoscaler._private.staroid.node_provider.logger",
    "ray.autoscaler._private.staroid.node_provider.requests",
    "ray.autoscaler._private.staroid.node_provider.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider._connect_kubeapi_incluster": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "kubernetes.client.ApiClient",
    "kubernetes.config.load_incluster_config",
    "open",
    "ray.autoscaler._private.staroid.node_provider.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider._get_config_or_env": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "kubernetes.config",
    "ray.autoscaler._private.staroid.node_provider.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.bootstrap_config": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.create_node": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Exception",
    "kubernetes.client.AppsV1Api",
    "kubernetes.client.CoreV1Api",
    "range",
    "ray.autoscaler._private.staroid.log_prefix",
    "ray.autoscaler._private.staroid.node_provider.logger",
    "ray.autoscaler._private.staroid.node_provider.os",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME",
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.external_ip": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.get_command_runner": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ray.autoscaler._private.staroid.command_runner.StaroidCommandRunner",
    "ray.autoscaler._private.staroid.log_prefix"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.get_node_id": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.internal_ip": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.is_running": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.is_terminated": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.node_tags": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api",
    "ray.autoscaler._private.staroid.node_provider.to_label_selector",
    "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.set_node_tags": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api",
    "kubernetes.client.rest.ApiException",
    "range",
    "ray.autoscaler._private.staroid.node_provider.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.terminate_node": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "kubernetes.client.CoreV1Api",
    "kubernetes.client.rest.ApiException",
    "ray.autoscaler._private.staroid.log_prefix",
    "ray.autoscaler._private.staroid.node_provider.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.StaroidNodeProvider.terminate_nodes": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.client": {
  "data": {
   "shadows": "kubernetes.client"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.config": {
  "data": {
   "shadows": "kubernetes.config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.find_free_port": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "contextlib.closing",
    "ray.autoscaler._private.staroid.node_provider.socket"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.log_prefix": {
  "data": {
   "shadows": "ray.autoscaler._private.staroid.log_prefix"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.autoscaler._private.staroid.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.staroid.node_provider.to_label_selector": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.autoscaler._private.staroid.node_provider.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util": {
  "data": {
   "symbols_in_volume": [
    "ray.autoscaler._private.subprocess_output_util.re"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.subprocess_output_util.CONN_REFUSED_PATIENCE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.ThreadPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ThreadPoolExecutor"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util._allow_interactive": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.autoscaler._private.subprocess_output_util._read_subprocess_stream": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.subprocess_output_util._ssh_output_regexes"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util._redirect_output": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.autoscaler._private.subprocess_output_util._run_and_process_output": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "concurrent.futures.ThreadPoolExecutor",
    "ray.autoscaler._private.subprocess_output_util.ProcessRunnerError",
    "ray.autoscaler._private.subprocess_output_util._read_subprocess_stream",
    "ray.autoscaler._private.subprocess_output_util.does_allow_interactive",
    "ray.autoscaler._private.subprocess_output_util.is_output_redirected",
    "ray.autoscaler._private.subprocess_output_util.subprocess",
    "ray.autoscaler._private.subprocess_output_util.sys"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util._ssh_output_regexes": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.autoscaler._private.subprocess_output_util.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.does_allow_interactive": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.autoscaler._private.subprocess_output_util._allow_interactive"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.handle_ssh_fails": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.warning",
    "ray.autoscaler._private.subprocess_output_util.CONN_REFUSED_PATIENCE",
    "ray.autoscaler._private.subprocess_output_util.time",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.is_output_redirected": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.autoscaler._private.subprocess_output_util._redirect_output"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.run_cmd_redirected": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "open",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.verbosity",
    "ray.autoscaler._private.subprocess_output_util._run_and_process_output",
    "ray.autoscaler._private.subprocess_output_util.is_output_redirected",
    "ray.autoscaler._private.subprocess_output_util.os",
    "ray.autoscaler._private.subprocess_output_util.subprocess",
    "ray.autoscaler._private.subprocess_output_util.sys",
    "ray.autoscaler._private.subprocess_output_util.tempfile",
    "ray.autoscaler._private.subprocess_output_util.time"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.set_allow_interactive": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler._private.subprocess_output_util._allow_interactive"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.set_output_redirected": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler._private.subprocess_output_util._redirect_output"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.subprocess_output_util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.autoscaler._private.subprocess_output_util.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.updater.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.updater.LogTimer": {
  "data": {
   "shadows": "ray.autoscaler._private.log_timer.LogTimer"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.NODE_START_WAIT_S": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.NODE_START_WAIT_S"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.NodeUpdater": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "ray.autoscaler._private.updater.NodeUpdater.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.autoscaler._private.updater.os",
    "ray.autoscaler._private.updater.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.do_update": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.labeled_value",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.verbosity",
    "ray.autoscaler._private.command_runner.NODE_START_WAIT_S",
    "ray.autoscaler._private.command_runner.ProcessRunnerError",
    "ray.autoscaler._private.constants.RESOURCES_ENVIRONMENT_VARIABLE",
    "ray.autoscaler._private.log_timer.LogTimer",
    "ray.autoscaler._private.subprocess_output_util.is_output_redirected",
    "ray.autoscaler._private.subprocess_output_util.set_output_redirected",
    "ray.autoscaler._private.updater.click",
    "ray.autoscaler._private.updater.logger",
    "ray.autoscaler._private.updater.time",
    "ray.autoscaler.tags.STATUS_SETTING_UP",
    "ray.autoscaler.tags.STATUS_SYNCING_FILES",
    "ray.autoscaler.tags.STATUS_WAITING_FOR_SSH",
    "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS",
    "ray.autoscaler.tags.TAG_RAY_NODE_STATUS",
    "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.rsync_down": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.updater.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.rsync_up": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.updater.logger"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.run": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "isinstance",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.labeled_value",
    "ray.autoscaler._private.cli_logger.cli_logger.newline",
    "ray.autoscaler._private.cli_logger.cli_logger.old_error",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose_error",
    "ray.autoscaler._private.log_timer.LogTimer",
    "ray.autoscaler._private.subprocess_output_util.does_allow_interactive",
    "ray.autoscaler._private.subprocess_output_util.is_output_redirected",
    "ray.autoscaler._private.updater.click",
    "ray.autoscaler._private.updater.logger",
    "ray.autoscaler.tags.STATUS_UPDATE_FAILED",
    "ray.autoscaler.tags.STATUS_UP_TO_DATE",
    "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS",
    "ray.autoscaler.tags.TAG_RAY_NODE_STATUS",
    "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.sync_file_mounts": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "do_sync",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.verbosity",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.sync_file_mounts.do_sync": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.log_timer.LogTimer",
    "ray.autoscaler._private.updater.os",
    "sync_cmd"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdater.wait_ready": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cf.dimmed",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.old_debug",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.success",
    "ray.autoscaler._private.command_runner.ProcessRunnerError",
    "ray.autoscaler._private.log_timer.LogTimer",
    "ray.autoscaler._private.subprocess_output_util.handle_ssh_fails",
    "ray.autoscaler._private.updater.READY_CHECK_INTERVAL",
    "ray.autoscaler._private.updater.logger",
    "ray.autoscaler._private.updater.time",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.NodeUpdaterThread": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ray.autoscaler._private.updater.NodeUpdater",
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler._private.updater.NodeUpdaterThread.__init__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ray.autoscaler._private.updater.NodeUpdater",
    "threading.Thread.__init__"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.updater.ProcessRunnerError": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.ProcessRunnerError"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.READY_CHECK_INTERVAL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.autoscaler._private.updater.RESOURCES_ENVIRONMENT_VARIABLE": {
  "data": {
   "shadows": "ray.autoscaler._private.constants.RESOURCES_ENVIRONMENT_VARIABLE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.STATUS_SETTING_UP": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_SETTING_UP"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.STATUS_SYNCING_FILES": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_SYNCING_FILES"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.STATUS_UPDATE_FAILED": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_UPDATE_FAILED"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.STATUS_UP_TO_DATE": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_UP_TO_DATE"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.STATUS_WAITING_FOR_SSH": {
  "data": {
   "shadows": "ray.autoscaler.tags.STATUS_WAITING_FOR_SSH"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.TAG_RAY_FILE_MOUNTS_CONTENTS": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.TAG_RAY_NODE_STATUS": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_NODE_STATUS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.TAG_RAY_RUNTIME_CONFIG": {
  "data": {
   "shadows": "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.cmd_output_util": {
  "data": {
   "shadows": "ray.autoscaler._private.subprocess_output_util"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.autoscaler._private.updater.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.autoscaler._private.updater.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler._private.util.logging",
    "ray.autoscaler._private.util.os",
    "ray.autoscaler._private.util.ray"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler._private.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.ConcurrentCounter": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "ray.autoscaler._private.util.ConcurrentCounter.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.util.collections",
    "ray.autoscaler._private.util.threading"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.ConcurrentCounter.breakdown": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.ConcurrentCounter.dec": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.ConcurrentCounter.inc": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.ConcurrentCounter.value": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.DEBUG_AUTOSCALING_ERROR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.autoscaler._private.util.DEBUG_AUTOSCALING_STATUS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.autoscaler._private.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.RAY_SCHEMA_PATH": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.autoscaler._private.util._NODE_PROVIDERS": {
  "data": {
   "shadows": "ray.autoscaler._private.providers._NODE_PROVIDERS"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util._fillout_available_node_types_resources": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "importer",
    "ray.autoscaler._private.providers._NODE_PROVIDERS.get",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util._get_default_config": {
  "data": {
   "shadows": "ray.autoscaler._private.providers._get_default_config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util._hash_cache": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "ray.autoscaler._private.util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.fillout_defaults": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.providers._get_default_config",
    "ray.autoscaler._private.util._fillout_available_node_types_resources",
    "ray.autoscaler._private.util.logger",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.hash_launch_conf": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "open",
    "ray.autoscaler._private.util.hashlib",
    "ray.autoscaler._private.util.json",
    "ray.autoscaler._private.util.os"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.hash_runtime_conf": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "add_content_hashes",
    "ray.autoscaler._private.util._hash_cache",
    "ray.autoscaler._private.util.hashlib",
    "ray.autoscaler._private.util.json",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.hash_runtime_conf.add_content_hashes": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "add_hash_of_file",
    "bool",
    "ray.autoscaler._private.util.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.hash_runtime_conf.add_content_hashes.add_hash_of_file": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "iter",
    "open"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.autoscaler._private.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.merge_setup_commands": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.prepare_config": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.autoscaler._private.docker.validate_docker_config",
    "ray.autoscaler._private.util.fillout_defaults",
    "ray.autoscaler._private.util.merge_setup_commands"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.validate_config": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "isinstance",
    "open",
    "ray.autoscaler._private.util.RAY_SCHEMA_PATH",
    "ray.autoscaler._private.util.json",
    "ray.autoscaler._private.util.jsonschema",
    "ray.autoscaler._private.util.ray",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler._private.util.validate_docker_config": {
  "data": {
   "shadows": "ray.autoscaler._private.docker.validate_docker_config"
  },
  "type": "import"
 },
 "ray.autoscaler._private.util.with_head_node_ip": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ray._private.services.get_node_ip_address"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.aws": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.azure": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.command_runner": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.command_runner.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface.remote_shell_command_str": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "object",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface.run_init": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface.run_rsync_down": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.command_runner.CommandRunnerInterface.run_rsync_up": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.command_runner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler.command_runner.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.autoscaler.command_runner.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.autoscaler.command_runner.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.autoscaler.gcp": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.kubernetes": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.local": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.local.coordinator_server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler.local.coordinator_server.logging",
    "ray.autoscaler.local.coordinator_server.main"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler.local.coordinator_server.HTTPServer": {
  "data": {
   "shadows": "http.server.HTTPServer"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.LocalNodeProvider": {
  "data": {
   "shadows": "ray.autoscaler._private.local.node_provider.LocalNodeProvider"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.OnPremCoordinatorServer": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.autoscaler.local.coordinator_server.threading"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler.local.coordinator_server.OnPremCoordinatorServer.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "http.server.HTTPServer",
    "ray.autoscaler._private.local.node_provider.LocalNodeProvider",
    "ray.autoscaler.local.coordinator_server.logger",
    "ray.autoscaler.local.coordinator_server.runner_handler",
    "ray.autoscaler.local.coordinator_server.threading",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.OnPremCoordinatorServer.run": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.OnPremCoordinatorServer.shutdown": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.SimpleHTTPRequestHandler": {
  "data": {
   "shadows": "http.server.SimpleHTTPRequestHandler"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.autoscaler.local.coordinator_server.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.main": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler.local.coordinator_server.OnPremCoordinatorServer",
    "ray.autoscaler.local.coordinator_server.argparse",
    "ray.autoscaler.local.coordinator_server.socket"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.runner_handler": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.runner_handler.Handler": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "http.server.SimpleHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "ray.autoscaler.local.coordinator_server.runner_handler.Handler._do_header": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.runner_handler.Handler.do_GET": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "getattr",
    "int",
    "ray.autoscaler.local.coordinator_server.json",
    "ray.autoscaler.local.coordinator_server.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.runner_handler.Handler.do_HEAD": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ray.autoscaler.local.coordinator_server.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.autoscaler.local.coordinator_server.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.autoscaler.node_provider.logging"
   ]
  },
  "type": "module"
 },
 "ray.autoscaler.node_provider.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.CommandRunnerInterface": {
  "data": {
   "shadows": "ray.autoscaler.command_runner.CommandRunnerInterface"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.DockerCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.DockerCommandRunner"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.NodeProvider": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.autoscaler.node_provider.NodeProvider.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.bootstrap_config": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.cleanup": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.create_node": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.external_ip": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.fillout_available_node_types_resources": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.get_command_runner": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler._private.command_runner.DockerCommandRunner",
    "ray.autoscaler._private.command_runner.SSHCommandRunner",
    "ray.autoscaler.command_runner.CommandRunnerInterface",
    "str",
    "types.ModuleType",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.get_node_id": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "find_node_id",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.get_node_id.find_node_id": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.internal_ip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.is_running": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.is_terminated": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.node_tags": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.non_terminated_nodes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.prepare_for_head_node": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.set_node_tags": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.terminate_node": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.NodeProvider.terminate_nodes": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.autoscaler.node_provider.logger",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.autoscaler.node_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.SSHCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.SSHCommandRunner"
  },
  "type": "import"
 },
 "ray.autoscaler.node_provider.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.autoscaler.node_provider.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.autoscaler.staroid": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.tags": {
  "data": {},
  "type": "module"
 },
 "ray.autoscaler.tags.NODE_KIND_HEAD": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.NODE_KIND_UNMANAGED": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.NODE_KIND_WORKER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_SETTING_UP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_SYNCING_FILES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_UNINITIALIZED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_UPDATE_FAILED": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_UP_TO_DATE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.STATUS_WAITING_FOR_SSH": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_CLUSTER_NAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_FILE_MOUNTS_CONTENTS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_LAUNCH_CONFIG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_NODE_KIND": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_NODE_NAME": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_NODE_STATUS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_RUNTIME_CONFIG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.autoscaler.tags.TAG_RAY_USER_NODE_TYPE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.available_resources": {
  "data": {
   "shadows": "ray.state.available_resources"
  },
  "type": "import"
 },
 "ray.cancel": {
  "data": {
   "shadows": "ray.worker.cancel"
  },
  "type": "import"
 },
 "ray.cloudpickle": {
  "data": {},
  "type": "module"
 },
 "ray.cloudpickle.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.cluster_resources": {
  "data": {
   "shadows": "ray.state.cluster_resources"
  },
  "type": "import"
 },
 "ray.cluster_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.cluster_utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.cluster_utils.Cluster": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.cluster_utils.Cluster.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RuntimeError",
    "ray.cluster_utils.ray",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster._wait_for_node": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TimeoutError",
    "ray.cluster_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.add_node": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.cluster_utils.ray",
    "ray.ray_constants.REDIS_DEFAULT_PASSWORD"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.address": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.connect": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.cluster_utils.logger",
    "ray.cluster_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.list_all_nodes": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.remaining_processes_alive": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.remove_node": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "ray.cluster_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.shutdown": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.Cluster.wait_for_nodes": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TimeoutError",
    "len",
    "ray.cluster_utils.logger",
    "ray.cluster_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.cluster_utils.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.cluster_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.cluster_utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.cluster_utils.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.cluster_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.compat": {
  "data": {},
  "type": "module"
 },
 "ray.compat.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.compat.patch_psutil": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ray.compat.platform"
   ]
  },
  "type": "function"
 },
 "ray.compat.patch_psutil.psutil_open_binary_patched": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "psutil_open_binary",
    "ray.compat.io"
   ]
  },
  "type": "function"
 },
 "ray.compat.patch_redis_empty_recv": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.compat.redis",
    "ray.compat.sys"
   ]
  },
  "type": "function"
 },
 "ray.compat.patch_redis_empty_recv.redis_recv": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.compat.errno",
    "ray.compat.redis",
    "ray.compat.socket"
   ]
  },
  "type": "function"
 },
 "ray.compat.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.compat.psutil._pslinux": {
  "data": {
   "shadows": "psutil._pslinux"
  },
  "type": "import"
 },
 "ray.compat.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "ray.compat.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.connect": {
  "data": {
   "shadows": "ray.worker.connect"
  },
  "type": "import"
 },
 "ray.core": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.agent_manager_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.agent_manager_pb2.DESCRIPTOR",
    "ray.core.generated.agent_manager_pb2.RegisterAgentReply",
    "ray.core.generated.agent_manager_pb2.RegisterAgentRequest",
    "ray.core.generated.agent_manager_pb2._AGENTMANAGERSERVICE",
    "ray.core.generated.agent_manager_pb2._AGENTRPCSTATUS",
    "ray.core.generated.agent_manager_pb2._REGISTERAGENTREPLY",
    "ray.core.generated.agent_manager_pb2._REGISTERAGENTREQUEST",
    "ray.core.generated.agent_manager_pb2._b",
    "ray.core.generated.agent_manager_pb2._sym_db",
    "ray.core.generated.agent_manager_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.agent_manager_pb2.AGENT_RPC_STATUS_FAILED": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2.AGENT_RPC_STATUS_OK": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2.AgentRpcStatus": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2.RegisterAgentReply": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2.RegisterAgentRequest": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._AGENTMANAGERSERVICE": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._AGENTRPCSTATUS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._REGISTERAGENTREPLY": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._REGISTERAGENTREQUEST": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.core.generated.agent_manager_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.agent_manager_pb2_grpc.AgentManagerServiceServicer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.agent_manager_pb2_grpc.AgentManagerServiceServicer.RegisterAgent": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.agent_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.agent_manager_pb2_grpc.AgentManagerServiceStub": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.agent_manager_pb2_grpc.AgentManagerServiceStub.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.core.generated.agent_manager_pb2_grpc.add_AgentManagerServiceServicer_to_server": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.core.generated.agent_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.agent_manager_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.agent_manager_pb2_grpc.src_dot_ray_dot_protobuf_dot_agent__manager__pb2": {
  "data": {
   "shadows": "agent_manager_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2": {
  "data": {
   "symbols_in_volume": [
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.common_pb2.ActorCreationTaskSpec",
    "ray.core.generated.common_pb2.ActorTaskSpec",
    "ray.core.generated.common_pb2.Address",
    "ray.core.generated.common_pb2.Bundle",
    "ray.core.generated.common_pb2.CoreWorkerStats",
    "ray.core.generated.common_pb2.CppFunctionDescriptor",
    "ray.core.generated.common_pb2.DESCRIPTOR",
    "ray.core.generated.common_pb2.FunctionDescriptor",
    "ray.core.generated.common_pb2.JavaFunctionDescriptor",
    "ray.core.generated.common_pb2.MetricPoint",
    "ray.core.generated.common_pb2.ObjectRefInfo",
    "ray.core.generated.common_pb2.ObjectReference",
    "ray.core.generated.common_pb2.PlacementGroupSpec",
    "ray.core.generated.common_pb2.PythonFunctionDescriptor",
    "ray.core.generated.common_pb2.RayException",
    "ray.core.generated.common_pb2.ResourceAllocations",
    "ray.core.generated.common_pb2.ResourceId",
    "ray.core.generated.common_pb2.ResourceMapEntry",
    "ray.core.generated.common_pb2.Task",
    "ray.core.generated.common_pb2.TaskArg",
    "ray.core.generated.common_pb2.TaskExecutionSpec",
    "ray.core.generated.common_pb2.TaskSpec",
    "ray.core.generated.common_pb2.ViewData",
    "ray.core.generated.common_pb2._ACTORCREATIONTASKSPEC",
    "ray.core.generated.common_pb2._ACTORTASKSPEC",
    "ray.core.generated.common_pb2._ADDRESS",
    "ray.core.generated.common_pb2._BUNDLE",
    "ray.core.generated.common_pb2._BUNDLE_BUNDLEIDENTIFIER",
    "ray.core.generated.common_pb2._BUNDLE_UNITRESOURCESENTRY",
    "ray.core.generated.common_pb2._COREWORKERSTATS",
    "ray.core.generated.common_pb2._COREWORKERSTATS_USEDRESOURCESENTRY",
    "ray.core.generated.common_pb2._COREWORKERSTATS_WEBUIDISPLAYENTRY",
    "ray.core.generated.common_pb2._CPPFUNCTIONDESCRIPTOR",
    "ray.core.generated.common_pb2._ERRORTYPE",
    "ray.core.generated.common_pb2._FUNCTIONDESCRIPTOR",
    "ray.core.generated.common_pb2._JAVAFUNCTIONDESCRIPTOR",
    "ray.core.generated.common_pb2._LANGUAGE",
    "ray.core.generated.common_pb2._METRICPOINT",
    "ray.core.generated.common_pb2._METRICPOINT_TAGSENTRY",
    "ray.core.generated.common_pb2._OBJECTREFERENCE",
    "ray.core.generated.common_pb2._OBJECTREFINFO",
    "ray.core.generated.common_pb2._PLACEMENTGROUPSPEC",
    "ray.core.generated.common_pb2._PLACEMENTSTRATEGY",
    "ray.core.generated.common_pb2._PYTHONFUNCTIONDESCRIPTOR",
    "ray.core.generated.common_pb2._RAYEXCEPTION",
    "ray.core.generated.common_pb2._RESOURCEALLOCATIONS",
    "ray.core.generated.common_pb2._RESOURCEALLOCATIONS_RESOURCESLOT",
    "ray.core.generated.common_pb2._RESOURCEID",
    "ray.core.generated.common_pb2._RESOURCEMAPENTRY",
    "ray.core.generated.common_pb2._TASK",
    "ray.core.generated.common_pb2._TASKARG",
    "ray.core.generated.common_pb2._TASKEXECUTIONSPEC",
    "ray.core.generated.common_pb2._TASKSPEC",
    "ray.core.generated.common_pb2._TASKSPEC_REQUIREDPLACEMENTRESOURCESENTRY",
    "ray.core.generated.common_pb2._TASKSPEC_REQUIREDRESOURCESENTRY",
    "ray.core.generated.common_pb2._TASKTYPE",
    "ray.core.generated.common_pb2._VIEWDATA",
    "ray.core.generated.common_pb2._VIEWDATA_MEASURE",
    "ray.core.generated.common_pb2._WORKERTYPE",
    "ray.core.generated.common_pb2._b",
    "ray.core.generated.common_pb2._sym_db",
    "ray.core.generated.common_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.common_pb2.ACTOR_CREATION_FAILED": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ACTOR_CREATION_TASK": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ACTOR_DIED": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ACTOR_TASK": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ActorCreationTaskSpec": {
  "data": {
   "lineno": 2077
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ActorTaskSpec": {
  "data": {
   "lineno": 2084
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.Address": {
  "data": {
   "lineno": 1968
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.Bundle": {
  "data": {
   "lineno": 2033
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.CPP": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.CoreWorkerStats": {
  "data": {
   "lineno": 2156
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.CppFunctionDescriptor": {
  "data": {
   "lineno": 1989
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.DRIVER": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.DRIVER_TASK": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ErrorType": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.FunctionDescriptor": {
  "data": {
   "lineno": 1996
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.IO_WORKER": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.JAVA": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.JavaFunctionDescriptor": {
  "data": {
   "lineno": 1975
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.Language": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.MetricPoint": {
  "data": {
   "lineno": 2179
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.NORMAL_TASK": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.OBJECT_IN_PLASMA": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.OBJECT_UNRECONSTRUCTABLE": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ObjectRefInfo": {
  "data": {
   "lineno": 2134
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ObjectReference": {
  "data": {
   "lineno": 2063
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.PACK": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.PYTHON": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.PlacementGroupSpec": {
  "data": {
   "lineno": 2056
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.PlacementStrategy": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.PythonFunctionDescriptor": {
  "data": {
   "lineno": 1982
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.RayException": {
  "data": {
   "lineno": 2003
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ResourceAllocations": {
  "data": {
   "lineno": 2141
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ResourceId": {
  "data": {
   "lineno": 2105
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ResourceMapEntry": {
  "data": {
   "lineno": 2112
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.SPREAD": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.STRICT_PACK": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.STRICT_SPREAD": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TASK_CANCELLED": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TASK_EXECUTION_EXCEPTION": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.Task": {
  "data": {
   "lineno": 2098
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TaskArg": {
  "data": {
   "lineno": 2070
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TaskExecutionSpec": {
  "data": {
   "lineno": 2091
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TaskSpec": {
  "data": {
   "lineno": 2010
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.TaskType": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.ViewData": {
  "data": {
   "lineno": 2119
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.WORKER": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.WORKER_DIED": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2.WorkerType": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._ACTORCREATIONTASKSPEC": {
  "data": {
   "lineno": 1017
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._ACTORTASKSPEC": {
  "data": {
   "lineno": 1097
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._ADDRESS": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._BUNDLE": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._BUNDLE_BUNDLEIDENTIFIER": {
  "data": {
   "lineno": 728
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._BUNDLE_UNITRESOURCESENTRY": {
  "data": {
   "lineno": 765
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._COREWORKERSTATS": {
  "data": {
   "lineno": 1640
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._COREWORKERSTATS_USEDRESOURCESENTRY": {
  "data": {
   "lineno": 1566
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._COREWORKERSTATS_WEBUIDISPLAYENTRY": {
  "data": {
   "lineno": 1603
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._CPPFUNCTIONDESCRIPTOR": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._ERRORTYPE": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._FUNCTIONDESCRIPTOR": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._JAVAFUNCTIONDESCRIPTOR": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._LANGUAGE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._METRICPOINT": {
  "data": {
   "lineno": 1827
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._METRICPOINT_TAGSENTRY": {
  "data": {
   "lineno": 1790
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._OBJECTREFERENCE": {
  "data": {
   "lineno": 927
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._OBJECTREFINFO": {
  "data": {
   "lineno": 1425
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._PLACEMENTGROUPSPEC": {
  "data": {
   "lineno": 847
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._PLACEMENTSTRATEGY": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._PYTHONFUNCTIONDESCRIPTOR": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._RAYEXCEPTION": {
  "data": {
   "lineno": 452
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._RESOURCEALLOCATIONS": {
  "data": {
   "lineno": 1535
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._RESOURCEALLOCATIONS_RESOURCESLOT": {
  "data": {
   "lineno": 1498
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._RESOURCEID": {
  "data": {
   "lineno": 1225
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._RESOURCEMAPENTRY": {
  "data": {
   "lineno": 1263
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASK": {
  "data": {
   "lineno": 1187
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKARG": {
  "data": {
   "lineno": 965
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKEXECUTIONSPEC": {
  "data": {
   "lineno": 1149
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKSPEC": {
  "data": {
   "lineno": 571
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKSPEC_REQUIREDPLACEMENTRESOURCESENTRY": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKSPEC_REQUIREDRESOURCESENTRY": {
  "data": {
   "lineno": 497
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._TASKTYPE": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._VIEWDATA": {
  "data": {
   "lineno": 1387
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._VIEWDATA_MEASURE": {
  "data": {
   "lineno": 1301
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._WORKERTYPE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.core.generated.common_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.common_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.common_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.core_worker_pb2.ActiveObjectIDs",
    "ray.core.generated.core_worker_pb2.ActorHandle",
    "ray.core.generated.core_worker_pb2.AddObjectLocationOwnerReply",
    "ray.core.generated.core_worker_pb2.AddObjectLocationOwnerRequest",
    "ray.core.generated.core_worker_pb2.CancelTaskReply",
    "ray.core.generated.core_worker_pb2.CancelTaskRequest",
    "ray.core.generated.core_worker_pb2.DESCRIPTOR",
    "ray.core.generated.core_worker_pb2.DirectActorCallArgWaitCompleteReply",
    "ray.core.generated.core_worker_pb2.DirectActorCallArgWaitCompleteRequest",
    "ray.core.generated.core_worker_pb2.ExitReply",
    "ray.core.generated.core_worker_pb2.ExitRequest",
    "ray.core.generated.core_worker_pb2.GetCoreWorkerStatsReply",
    "ray.core.generated.core_worker_pb2.GetCoreWorkerStatsRequest",
    "ray.core.generated.core_worker_pb2.GetObjectLocationsOwnerReply",
    "ray.core.generated.core_worker_pb2.GetObjectLocationsOwnerRequest",
    "ray.core.generated.core_worker_pb2.GetObjectStatusReply",
    "ray.core.generated.core_worker_pb2.GetObjectStatusRequest",
    "ray.core.generated.core_worker_pb2.KillActorReply",
    "ray.core.generated.core_worker_pb2.KillActorRequest",
    "ray.core.generated.core_worker_pb2.LocalGCReply",
    "ray.core.generated.core_worker_pb2.LocalGCRequest",
    "ray.core.generated.core_worker_pb2.ObjectReferenceCount",
    "ray.core.generated.core_worker_pb2.PlasmaObjectReadyReply",
    "ray.core.generated.core_worker_pb2.PlasmaObjectReadyRequest",
    "ray.core.generated.core_worker_pb2.PushTaskReply",
    "ray.core.generated.core_worker_pb2.PushTaskRequest",
    "ray.core.generated.core_worker_pb2.RemoteCancelTaskReply",
    "ray.core.generated.core_worker_pb2.RemoteCancelTaskRequest",
    "ray.core.generated.core_worker_pb2.RemoveObjectLocationOwnerReply",
    "ray.core.generated.core_worker_pb2.RemoveObjectLocationOwnerRequest",
    "ray.core.generated.core_worker_pb2.RestoreSpilledObjectsReply",
    "ray.core.generated.core_worker_pb2.RestoreSpilledObjectsRequest",
    "ray.core.generated.core_worker_pb2.ReturnObject",
    "ray.core.generated.core_worker_pb2.SpillObjectsReply",
    "ray.core.generated.core_worker_pb2.SpillObjectsRequest",
    "ray.core.generated.core_worker_pb2.WaitForActorOutOfScopeReply",
    "ray.core.generated.core_worker_pb2.WaitForActorOutOfScopeRequest",
    "ray.core.generated.core_worker_pb2.WaitForObjectEvictionReply",
    "ray.core.generated.core_worker_pb2.WaitForObjectEvictionRequest",
    "ray.core.generated.core_worker_pb2.WaitForRefRemovedReply",
    "ray.core.generated.core_worker_pb2.WaitForRefRemovedRequest",
    "ray.core.generated.core_worker_pb2._ACTIVEOBJECTIDS",
    "ray.core.generated.core_worker_pb2._ACTORHANDLE",
    "ray.core.generated.core_worker_pb2._ADDOBJECTLOCATIONOWNERREPLY",
    "ray.core.generated.core_worker_pb2._ADDOBJECTLOCATIONOWNERREQUEST",
    "ray.core.generated.core_worker_pb2._CANCELTASKREPLY",
    "ray.core.generated.core_worker_pb2._CANCELTASKREQUEST",
    "ray.core.generated.core_worker_pb2._COREWORKERSERVICE",
    "ray.core.generated.core_worker_pb2._DIRECTACTORCALLARGWAITCOMPLETEREPLY",
    "ray.core.generated.core_worker_pb2._DIRECTACTORCALLARGWAITCOMPLETEREQUEST",
    "ray.core.generated.core_worker_pb2._EXITREPLY",
    "ray.core.generated.core_worker_pb2._EXITREQUEST",
    "ray.core.generated.core_worker_pb2._GETCOREWORKERSTATSREPLY",
    "ray.core.generated.core_worker_pb2._GETCOREWORKERSTATSREQUEST",
    "ray.core.generated.core_worker_pb2._GETOBJECTLOCATIONSOWNERREPLY",
    "ray.core.generated.core_worker_pb2._GETOBJECTLOCATIONSOWNERREQUEST",
    "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREPLY",
    "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREPLY_OBJECTSTATUS",
    "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREQUEST",
    "ray.core.generated.core_worker_pb2._KILLACTORREPLY",
    "ray.core.generated.core_worker_pb2._KILLACTORREQUEST",
    "ray.core.generated.core_worker_pb2._LOCALGCREPLY",
    "ray.core.generated.core_worker_pb2._LOCALGCREQUEST",
    "ray.core.generated.core_worker_pb2._OBJECTREFERENCECOUNT",
    "ray.core.generated.core_worker_pb2._PLASMAOBJECTREADYREPLY",
    "ray.core.generated.core_worker_pb2._PLASMAOBJECTREADYREQUEST",
    "ray.core.generated.core_worker_pb2._PUSHTASKREPLY",
    "ray.core.generated.core_worker_pb2._PUSHTASKREQUEST",
    "ray.core.generated.core_worker_pb2._REMOTECANCELTASKREPLY",
    "ray.core.generated.core_worker_pb2._REMOTECANCELTASKREQUEST",
    "ray.core.generated.core_worker_pb2._REMOVEOBJECTLOCATIONOWNERREPLY",
    "ray.core.generated.core_worker_pb2._REMOVEOBJECTLOCATIONOWNERREQUEST",
    "ray.core.generated.core_worker_pb2._RESTORESPILLEDOBJECTSREPLY",
    "ray.core.generated.core_worker_pb2._RESTORESPILLEDOBJECTSREQUEST",
    "ray.core.generated.core_worker_pb2._RETURNOBJECT",
    "ray.core.generated.core_worker_pb2._SPILLOBJECTSREPLY",
    "ray.core.generated.core_worker_pb2._SPILLOBJECTSREQUEST",
    "ray.core.generated.core_worker_pb2._WAITFORACTOROUTOFSCOPEREPLY",
    "ray.core.generated.core_worker_pb2._WAITFORACTOROUTOFSCOPEREQUEST",
    "ray.core.generated.core_worker_pb2._WAITFOROBJECTEVICTIONREPLY",
    "ray.core.generated.core_worker_pb2._WAITFOROBJECTEVICTIONREQUEST",
    "ray.core.generated.core_worker_pb2._WAITFORREFREMOVEDREPLY",
    "ray.core.generated.core_worker_pb2._WAITFORREFREMOVEDREQUEST",
    "ray.core.generated.core_worker_pb2._b",
    "ray.core.generated.core_worker_pb2._sym_db",
    "ray.core.generated.core_worker_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.core_worker_pb2.ActiveObjectIDs": {
  "data": {
   "lineno": 1543
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.ActorHandle": {
  "data": {
   "lineno": 1550
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.AddObjectLocationOwnerReply": {
  "data": {
   "lineno": 1641
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.AddObjectLocationOwnerRequest": {
  "data": {
   "lineno": 1634
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.CancelTaskReply": {
  "data": {
   "lineno": 1697
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.CancelTaskRequest": {
  "data": {
   "lineno": 1690
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.DirectActorCallArgWaitCompleteReply": {
  "data": {
   "lineno": 1585
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.DirectActorCallArgWaitCompleteRequest": {
  "data": {
   "lineno": 1578
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.ExitReply": {
  "data": {
   "lineno": 1816
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.ExitRequest": {
  "data": {
   "lineno": 1809
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetCoreWorkerStatsReply": {
  "data": {
   "lineno": 1725
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetCoreWorkerStatsRequest": {
  "data": {
   "lineno": 1718
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetObjectLocationsOwnerReply": {
  "data": {
   "lineno": 1669
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetObjectLocationsOwnerRequest": {
  "data": {
   "lineno": 1662
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetObjectStatusReply": {
  "data": {
   "lineno": 1599
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.GetObjectStatusRequest": {
  "data": {
   "lineno": 1592
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.KillActorReply": {
  "data": {
   "lineno": 1683
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.KillActorRequest": {
  "data": {
   "lineno": 1676
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.LocalGCReply": {
  "data": {
   "lineno": 1760
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.LocalGCRequest": {
  "data": {
   "lineno": 1753
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.ObjectReferenceCount": {
  "data": {
   "lineno": 1739
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.PlasmaObjectReadyReply": {
  "data": {
   "lineno": 1774
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.PlasmaObjectReadyRequest": {
  "data": {
   "lineno": 1767
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.PushTaskReply": {
  "data": {
   "lineno": 1571
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.PushTaskRequest": {
  "data": {
   "lineno": 1564
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RemoteCancelTaskReply": {
  "data": {
   "lineno": 1711
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RemoteCancelTaskRequest": {
  "data": {
   "lineno": 1704
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RemoveObjectLocationOwnerReply": {
  "data": {
   "lineno": 1655
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RemoveObjectLocationOwnerRequest": {
  "data": {
   "lineno": 1648
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RestoreSpilledObjectsReply": {
  "data": {
   "lineno": 1802
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.RestoreSpilledObjectsRequest": {
  "data": {
   "lineno": 1795
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.ReturnObject": {
  "data": {
   "lineno": 1557
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.SpillObjectsReply": {
  "data": {
   "lineno": 1788
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.SpillObjectsRequest": {
  "data": {
   "lineno": 1781
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForActorOutOfScopeReply": {
  "data": {
   "lineno": 1613
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForActorOutOfScopeRequest": {
  "data": {
   "lineno": 1606
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForObjectEvictionReply": {
  "data": {
   "lineno": 1627
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForObjectEvictionRequest": {
  "data": {
   "lineno": 1620
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForRefRemovedReply": {
  "data": {
   "lineno": 1746
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2.WaitForRefRemovedRequest": {
  "data": {
   "lineno": 1732
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._ACTIVEOBJECTIDS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._ACTORHANDLE": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._ADDOBJECTLOCATIONOWNERREPLY": {
  "data": {
   "lineno": 646
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._ADDOBJECTLOCATIONOWNERREQUEST": {
  "data": {
   "lineno": 601
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._CANCELTASKREPLY": {
  "data": {
   "lineno": 915
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._CANCELTASKREQUEST": {
  "data": {
   "lineno": 877
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._COREWORKERSERVICE": {
  "data": {
   "lineno": 1825
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._DIRECTACTORCALLARGWAITCOMPLETEREPLY": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._DIRECTACTORCALLARGWAITCOMPLETEREQUEST": {
  "data": {
   "lineno": 345
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._EXITREPLY": {
  "data": {
   "lineno": 1463
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._EXITREQUEST": {
  "data": {
   "lineno": 1439
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETCOREWORKERSTATSREPLY": {
  "data": {
   "lineno": 1046
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETCOREWORKERSTATSREQUEST": {
  "data": {
   "lineno": 1008
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETOBJECTLOCATIONSOWNERREPLY": {
  "data": {
   "lineno": 777
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETOBJECTLOCATIONSOWNERREQUEST": {
  "data": {
   "lineno": 739
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREPLY": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREPLY_OBJECTSTATUS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._GETOBJECTSTATUSREQUEST": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._KILLACTORREPLY": {
  "data": {
   "lineno": 853
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._KILLACTORREQUEST": {
  "data": {
   "lineno": 808
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._LOCALGCREPLY": {
  "data": {
   "lineno": 1243
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._LOCALGCREQUEST": {
  "data": {
   "lineno": 1219
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._OBJECTREFERENCECOUNT": {
  "data": {
   "lineno": 1122
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._PLASMAOBJECTREADYREPLY": {
  "data": {
   "lineno": 1298
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._PLASMAOBJECTREADYREQUEST": {
  "data": {
   "lineno": 1267
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._PUSHTASKREPLY": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._PUSHTASKREQUEST": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._REMOTECANCELTASKREPLY": {
  "data": {
   "lineno": 984
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._REMOTECANCELTASKREQUEST": {
  "data": {
   "lineno": 946
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._REMOVEOBJECTLOCATIONOWNERREPLY": {
  "data": {
   "lineno": 715
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._REMOVEOBJECTLOCATIONOWNERREQUEST": {
  "data": {
   "lineno": 670
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._RESTORESPILLEDOBJECTSREPLY": {
  "data": {
   "lineno": 1415
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._RESTORESPILLEDOBJECTSREQUEST": {
  "data": {
   "lineno": 1384
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._RETURNOBJECT": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._SPILLOBJECTSREPLY": {
  "data": {
   "lineno": 1353
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._SPILLOBJECTSREQUEST": {
  "data": {
   "lineno": 1322
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFORACTOROUTOFSCOPEREPLY": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFORACTOROUTOFSCOPEREQUEST": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFOROBJECTEVICTIONREPLY": {
  "data": {
   "lineno": 577
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFOROBJECTEVICTIONREQUEST": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFORREFREMOVEDREPLY": {
  "data": {
   "lineno": 1188
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._WAITFORREFREMOVEDREQUEST": {
  "data": {
   "lineno": 1077
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.core.generated.core_worker_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2.src_dot_ray_dot_protobuf_dot_common__pb2": {
  "data": {
   "shadows": "common_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.AddObjectLocationOwner": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.CancelTask": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.DirectActorCallArgWaitComplete": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.Exit": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.GetCoreWorkerStats": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.GetObjectLocationsOwner": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.GetObjectStatus": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.KillActor": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.LocalGC": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.PlasmaObjectReady": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.PushTask": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.RemoteCancelTask": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.RemoveObjectLocationOwner": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.RestoreSpilledObjects": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.SpillObjects": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.WaitForActorOutOfScope": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.WaitForObjectEviction": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceServicer.WaitForRefRemoved": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceStub": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceStub.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.add_CoreWorkerServiceServicer_to_server": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ray.core.generated.core_worker_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.core_worker_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.core_worker_pb2_grpc.src_dot_ray_dot_protobuf_dot_core__worker__pb2": {
  "data": {
   "shadows": "core_worker_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2": {
  "data": {
   "symbols_in_volume": [
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.gcs_pb2.ActorCheckpointData",
    "ray.core.generated.gcs_pb2.ActorCheckpointIdData",
    "ray.core.generated.gcs_pb2.ActorTableData",
    "ray.core.generated.gcs_pb2.AvailableResources",
    "ray.core.generated.gcs_pb2.DESCRIPTOR",
    "ray.core.generated.gcs_pb2.ErrorTableData",
    "ray.core.generated.gcs_pb2.GcsEntry",
    "ray.core.generated.gcs_pb2.GcsNodeInfo",
    "ray.core.generated.gcs_pb2.HeartbeatBatchTableData",
    "ray.core.generated.gcs_pb2.HeartbeatTableData",
    "ray.core.generated.gcs_pb2.JobConfig",
    "ray.core.generated.gcs_pb2.JobTableData",
    "ray.core.generated.gcs_pb2.NodeResourceChange",
    "ray.core.generated.gcs_pb2.ObjectLocationChange",
    "ray.core.generated.gcs_pb2.ObjectLocationInfo",
    "ray.core.generated.gcs_pb2.ObjectTableData",
    "ray.core.generated.gcs_pb2.PlacementGroupLoad",
    "ray.core.generated.gcs_pb2.PlacementGroupTableData",
    "ray.core.generated.gcs_pb2.ProfileTableData",
    "ray.core.generated.gcs_pb2.PubSubMessage",
    "ray.core.generated.gcs_pb2.ResourceDemand",
    "ray.core.generated.gcs_pb2.ResourceLoad",
    "ray.core.generated.gcs_pb2.ResourceMap",
    "ray.core.generated.gcs_pb2.ResourceTableData",
    "ray.core.generated.gcs_pb2.ScheduleData",
    "ray.core.generated.gcs_pb2.StoredConfig",
    "ray.core.generated.gcs_pb2.TaskLeaseData",
    "ray.core.generated.gcs_pb2.TaskReconstructionData",
    "ray.core.generated.gcs_pb2.TaskTableData",
    "ray.core.generated.gcs_pb2.WorkerTableData",
    "ray.core.generated.gcs_pb2._ACTORCHECKPOINTDATA",
    "ray.core.generated.gcs_pb2._ACTORCHECKPOINTIDDATA",
    "ray.core.generated.gcs_pb2._ACTORTABLEDATA",
    "ray.core.generated.gcs_pb2._ACTORTABLEDATA_ACTORSTATE",
    "ray.core.generated.gcs_pb2._AVAILABLERESOURCES",
    "ray.core.generated.gcs_pb2._AVAILABLERESOURCES_RESOURCESAVAILABLEENTRY",
    "ray.core.generated.gcs_pb2._ERRORTABLEDATA",
    "ray.core.generated.gcs_pb2._GCSCHANGEMODE",
    "ray.core.generated.gcs_pb2._GCSENTRY",
    "ray.core.generated.gcs_pb2._GCSNODEINFO",
    "ray.core.generated.gcs_pb2._GCSNODEINFO_GCSNODESTATE",
    "ray.core.generated.gcs_pb2._HEARTBEATBATCHTABLEDATA",
    "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA",
    "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCELOADENTRY",
    "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCESAVAILABLEENTRY",
    "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCESTOTALENTRY",
    "ray.core.generated.gcs_pb2._JOBCONFIG",
    "ray.core.generated.gcs_pb2._JOBCONFIG_WORKERENVENTRY",
    "ray.core.generated.gcs_pb2._JOBTABLEDATA",
    "ray.core.generated.gcs_pb2._NODERESOURCECHANGE",
    "ray.core.generated.gcs_pb2._NODERESOURCECHANGE_UPDATEDRESOURCESENTRY",
    "ray.core.generated.gcs_pb2._OBJECTLOCATIONCHANGE",
    "ray.core.generated.gcs_pb2._OBJECTLOCATIONINFO",
    "ray.core.generated.gcs_pb2._OBJECTTABLEDATA",
    "ray.core.generated.gcs_pb2._PLACEMENTGROUPLOAD",
    "ray.core.generated.gcs_pb2._PLACEMENTGROUPTABLEDATA",
    "ray.core.generated.gcs_pb2._PLACEMENTGROUPTABLEDATA_PLACEMENTGROUPSTATE",
    "ray.core.generated.gcs_pb2._PROFILETABLEDATA",
    "ray.core.generated.gcs_pb2._PROFILETABLEDATA_PROFILEEVENT",
    "ray.core.generated.gcs_pb2._PUBSUBMESSAGE",
    "ray.core.generated.gcs_pb2._RESOURCEDEMAND",
    "ray.core.generated.gcs_pb2._RESOURCEDEMAND_SHAPEENTRY",
    "ray.core.generated.gcs_pb2._RESOURCELOAD",
    "ray.core.generated.gcs_pb2._RESOURCEMAP",
    "ray.core.generated.gcs_pb2._RESOURCEMAP_ITEMSENTRY",
    "ray.core.generated.gcs_pb2._RESOURCETABLEDATA",
    "ray.core.generated.gcs_pb2._SCHEDULEDATA",
    "ray.core.generated.gcs_pb2._SCHEDULEDATA_SCHEDULEPLANENTRY",
    "ray.core.generated.gcs_pb2._STOREDCONFIG",
    "ray.core.generated.gcs_pb2._STOREDCONFIG_CONFIGENTRY",
    "ray.core.generated.gcs_pb2._TABLEPREFIX",
    "ray.core.generated.gcs_pb2._TABLEPUBSUB",
    "ray.core.generated.gcs_pb2._TASKLEASEDATA",
    "ray.core.generated.gcs_pb2._TASKRECONSTRUCTIONDATA",
    "ray.core.generated.gcs_pb2._TASKTABLEDATA",
    "ray.core.generated.gcs_pb2._WORKERTABLEDATA",
    "ray.core.generated.gcs_pb2._WORKERTABLEDATA_WORKERINFOENTRY",
    "ray.core.generated.gcs_pb2._b",
    "ray.core.generated.gcs_pb2._sym_db",
    "ray.core.generated.gcs_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.gcs_pb2.ACTOR": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ACTOR_CHECKPOINT": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ACTOR_CHECKPOINT_ID": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ACTOR_PUBSUB": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.APPEND_OR_ADD": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ActorCheckpointData": {
  "data": {
   "lineno": 2611
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ActorCheckpointIdData": {
  "data": {
   "lineno": 2618
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ActorTableData": {
  "data": {
   "lineno": 2435
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.AvailableResources": {
  "data": {
   "lineno": 2493
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.CLIENT": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.CLIENT_PUBSUB": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.DIRECT_ACTOR": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.DIRECT_ACTOR_PUBSUB": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ErrorTableData": {
  "data": {
   "lineno": 2442
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.FUNCTION": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.GcsChangeMode": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.GcsEntry": {
  "data": {
   "lineno": 2407
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.GcsNodeInfo": {
  "data": {
   "lineno": 2508
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HEARTBEAT": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HEARTBEAT_BATCH": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HEARTBEAT_BATCH_PUBSUB": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HEARTBEAT_PUBSUB": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HeartbeatBatchTableData": {
  "data": {
   "lineno": 2575
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.HeartbeatTableData": {
  "data": {
   "lineno": 2544
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.INTERNAL_CONFIG": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.JOB": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.JOB_PUBSUB": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.JobConfig": {
  "data": {
   "lineno": 2589
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.JobTableData": {
  "data": {
   "lineno": 2604
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.NODE_RESOURCE": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.NODE_RESOURCE_PUBSUB": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.NO_PUBLISH": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.NodeResourceChange": {
  "data": {
   "lineno": 2684
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.OBJECT": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.OBJECT_PUBSUB": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ObjectLocationChange": {
  "data": {
   "lineno": 2677
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ObjectLocationInfo": {
  "data": {
   "lineno": 2670
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ObjectTableData": {
  "data": {
   "lineno": 2414
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PLACEMENT_GROUP": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PLACEMENT_GROUP_SCHEDULE": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PROFILE": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PlacementGroupLoad": {
  "data": {
   "lineno": 2537
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PlacementGroupTableData": {
  "data": {
   "lineno": 2449
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ProfileTableData": {
  "data": {
   "lineno": 2471
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.PubSubMessage": {
  "data": {
   "lineno": 2699
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.RAYLET_TASK": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.RAYLET_TASK_PUBSUB": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.REMOVE": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ResourceDemand": {
  "data": {
   "lineno": 2515
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ResourceLoad": {
  "data": {
   "lineno": 2530
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ResourceMap": {
  "data": {
   "lineno": 2640
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ResourceTableData": {
  "data": {
   "lineno": 2486
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.ScheduleData": {
  "data": {
   "lineno": 2456
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.StoredConfig": {
  "data": {
   "lineno": 2655
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TABLE_PREFIX_MAX": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TABLE_PREFIX_MIN": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TABLE_PUBSUB_MAX": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TABLE_PUBSUB_MIN": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TASK": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TASK_LEASE": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TASK_LEASE_PUBSUB": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TASK_PUBSUB": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TASK_RECONSTRUCTION": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TablePrefix": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TablePubsub": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TaskLeaseData": {
  "data": {
   "lineno": 2582
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TaskReconstructionData": {
  "data": {
   "lineno": 2421
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.TaskTableData": {
  "data": {
   "lineno": 2428
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.UNUSED": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.WORKERS": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.WORKER_FAILURE_PUBSUB": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2.WorkerTableData": {
  "data": {
   "lineno": 2625
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._ACTORCHECKPOINTDATA": {
  "data": {
   "lineno": 1751
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._ACTORCHECKPOINTIDDATA": {
  "data": {
   "lineno": 1831
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._ACTORTABLEDATA": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._ACTORTABLEDATA_ACTORSTATE": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._AVAILABLERESOURCES": {
  "data": {
   "lineno": 1017
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._AVAILABLERESOURCES_RESOURCESAVAILABLEENTRY": {
  "data": {
   "lineno": 980
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._ERRORTABLEDATA": {
  "data": {
   "lineno": 638
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._GCSCHANGEMODE": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._GCSENTRY": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._GCSNODEINFO": {
  "data": {
   "lineno": 1055
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._GCSNODEINFO_GCSNODESTATE": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._HEARTBEATBATCHTABLEDATA": {
  "data": {
   "lineno": 1499
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA": {
  "data": {
   "lineno": 1412
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCELOADENTRY": {
  "data": {
   "lineno": 1375
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCESAVAILABLEENTRY": {
  "data": {
   "lineno": 1301
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._HEARTBEATTABLEDATA_RESOURCESTOTALENTRY": {
  "data": {
   "lineno": 1338
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._JOBCONFIG": {
  "data": {
   "lineno": 1633
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._JOBCONFIG_WORKERENVENTRY": {
  "data": {
   "lineno": 1596
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._JOBTABLEDATA": {
  "data": {
   "lineno": 1685
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._NODERESOURCECHANGE": {
  "data": {
   "lineno": 2242
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._NODERESOURCECHANGE_UPDATEDRESOURCESENTRY": {
  "data": {
   "lineno": 2205
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._OBJECTLOCATIONCHANGE": {
  "data": {
   "lineno": 2160
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._OBJECTLOCATIONINFO": {
  "data": {
   "lineno": 2115
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._OBJECTTABLEDATA": {
  "data": {
   "lineno": 408
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PLACEMENTGROUPLOAD": {
  "data": {
   "lineno": 1270
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PLACEMENTGROUPTABLEDATA": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PLACEMENTGROUPTABLEDATA_PLACEMENTGROUPSTATE": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PROFILETABLEDATA": {
  "data": {
   "lineno": 897
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PROFILETABLEDATA_PROFILEEVENT": {
  "data": {
   "lineno": 846
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._PUBSUBMESSAGE": {
  "data": {
   "lineno": 2287
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCEDEMAND": {
  "data": {
   "lineno": 1187
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCEDEMAND_SHAPEENTRY": {
  "data": {
   "lineno": 1150
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCELOAD": {
  "data": {
   "lineno": 1239
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCEMAP": {
  "data": {
   "lineno": 2016
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCEMAP_ITEMSENTRY": {
  "data": {
   "lineno": 1979
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._RESOURCETABLEDATA": {
  "data": {
   "lineno": 949
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._SCHEDULEDATA": {
  "data": {
   "lineno": 815
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._SCHEDULEDATA_SCHEDULEPLANENTRY": {
  "data": {
   "lineno": 778
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._STOREDCONFIG": {
  "data": {
   "lineno": 2084
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._STOREDCONFIG_CONFIGENTRY": {
  "data": {
   "lineno": 2047
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._TABLEPREFIX": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._TABLEPUBSUB": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._TASKLEASEDATA": {
  "data": {
   "lineno": 1544
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._TASKRECONSTRUCTIONDATA": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._TASKTABLEDATA": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._WORKERTABLEDATA": {
  "data": {
   "lineno": 1913
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._WORKERTABLEDATA_WORKERINFOENTRY": {
  "data": {
   "lineno": 1876
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2.src_dot_ray_dot_protobuf_dot_common__pb2": {
  "data": {
   "shadows": "common_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.gcs_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.gcs_service_pb2.AddActorCheckpointReply",
    "ray.core.generated.gcs_service_pb2.AddActorCheckpointRequest",
    "ray.core.generated.gcs_service_pb2.AddJobReply",
    "ray.core.generated.gcs_service_pb2.AddJobRequest",
    "ray.core.generated.gcs_service_pb2.AddObjectLocationReply",
    "ray.core.generated.gcs_service_pb2.AddObjectLocationRequest",
    "ray.core.generated.gcs_service_pb2.AddObjectSpilledUrlReply",
    "ray.core.generated.gcs_service_pb2.AddProfileDataReply",
    "ray.core.generated.gcs_service_pb2.AddProfileDataRequest",
    "ray.core.generated.gcs_service_pb2.AddTaskLeaseReply",
    "ray.core.generated.gcs_service_pb2.AddTaskLeaseRequest",
    "ray.core.generated.gcs_service_pb2.AddTaskReply",
    "ray.core.generated.gcs_service_pb2.AddTaskRequest",
    "ray.core.generated.gcs_service_pb2.AddWorkerInfoReply",
    "ray.core.generated.gcs_service_pb2.AddWorkerInfoRequest",
    "ray.core.generated.gcs_service_pb2.AttemptTaskReconstructionReply",
    "ray.core.generated.gcs_service_pb2.AttemptTaskReconstructionRequest",
    "ray.core.generated.gcs_service_pb2.CreateActorReply",
    "ray.core.generated.gcs_service_pb2.CreateActorRequest",
    "ray.core.generated.gcs_service_pb2.CreatePlacementGroupReply",
    "ray.core.generated.gcs_service_pb2.CreatePlacementGroupRequest",
    "ray.core.generated.gcs_service_pb2.DESCRIPTOR",
    "ray.core.generated.gcs_service_pb2.DeleteResourcesReply",
    "ray.core.generated.gcs_service_pb2.DeleteResourcesRequest",
    "ray.core.generated.gcs_service_pb2.DeleteTasksReply",
    "ray.core.generated.gcs_service_pb2.DeleteTasksRequest",
    "ray.core.generated.gcs_service_pb2.GcsStatus",
    "ray.core.generated.gcs_service_pb2.GetActorCheckpointIDReply",
    "ray.core.generated.gcs_service_pb2.GetActorCheckpointIDRequest",
    "ray.core.generated.gcs_service_pb2.GetActorCheckpointReply",
    "ray.core.generated.gcs_service_pb2.GetActorCheckpointRequest",
    "ray.core.generated.gcs_service_pb2.GetActorInfoReply",
    "ray.core.generated.gcs_service_pb2.GetActorInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetAllActorInfoReply",
    "ray.core.generated.gcs_service_pb2.GetAllActorInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetAllAvailableResourcesReply",
    "ray.core.generated.gcs_service_pb2.GetAllAvailableResourcesRequest",
    "ray.core.generated.gcs_service_pb2.GetAllJobInfoReply",
    "ray.core.generated.gcs_service_pb2.GetAllJobInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetAllNodeInfoReply",
    "ray.core.generated.gcs_service_pb2.GetAllNodeInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetAllObjectLocationsReply",
    "ray.core.generated.gcs_service_pb2.GetAllObjectLocationsRequest",
    "ray.core.generated.gcs_service_pb2.GetAllProfileInfoReply",
    "ray.core.generated.gcs_service_pb2.GetAllProfileInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetAllWorkerInfoReply",
    "ray.core.generated.gcs_service_pb2.GetAllWorkerInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetInternalConfigReply",
    "ray.core.generated.gcs_service_pb2.GetInternalConfigRequest",
    "ray.core.generated.gcs_service_pb2.GetNamedActorInfoReply",
    "ray.core.generated.gcs_service_pb2.GetNamedActorInfoRequest",
    "ray.core.generated.gcs_service_pb2.GetObjectLocationsReply",
    "ray.core.generated.gcs_service_pb2.GetObjectLocationsRequest",
    "ray.core.generated.gcs_service_pb2.GetPlacementGroupReply",
    "ray.core.generated.gcs_service_pb2.GetPlacementGroupRequest",
    "ray.core.generated.gcs_service_pb2.GetResourcesReply",
    "ray.core.generated.gcs_service_pb2.GetResourcesRequest",
    "ray.core.generated.gcs_service_pb2.GetTaskLeaseReply",
    "ray.core.generated.gcs_service_pb2.GetTaskLeaseRequest",
    "ray.core.generated.gcs_service_pb2.GetTaskReply",
    "ray.core.generated.gcs_service_pb2.GetTaskRequest",
    "ray.core.generated.gcs_service_pb2.GetWorkerInfoReply",
    "ray.core.generated.gcs_service_pb2.GetWorkerInfoRequest",
    "ray.core.generated.gcs_service_pb2.MarkJobFinishedReply",
    "ray.core.generated.gcs_service_pb2.MarkJobFinishedRequest",
    "ray.core.generated.gcs_service_pb2.RegisterActorInfoReply",
    "ray.core.generated.gcs_service_pb2.RegisterActorInfoRequest",
    "ray.core.generated.gcs_service_pb2.RegisterActorReply",
    "ray.core.generated.gcs_service_pb2.RegisterActorRequest",
    "ray.core.generated.gcs_service_pb2.RegisterNodeReply",
    "ray.core.generated.gcs_service_pb2.RegisterNodeRequest",
    "ray.core.generated.gcs_service_pb2.RemoveObjectLocationReply",
    "ray.core.generated.gcs_service_pb2.RemoveObjectLocationRequest",
    "ray.core.generated.gcs_service_pb2.RemovePlacementGroupReply",
    "ray.core.generated.gcs_service_pb2.RemovePlacementGroupRequest",
    "ray.core.generated.gcs_service_pb2.ReportBatchHeartbeatReply",
    "ray.core.generated.gcs_service_pb2.ReportBatchHeartbeatRequest",
    "ray.core.generated.gcs_service_pb2.ReportHeartbeatReply",
    "ray.core.generated.gcs_service_pb2.ReportHeartbeatRequest",
    "ray.core.generated.gcs_service_pb2.ReportWorkerFailureReply",
    "ray.core.generated.gcs_service_pb2.ReportWorkerFailureRequest",
    "ray.core.generated.gcs_service_pb2.SetInternalConfigReply",
    "ray.core.generated.gcs_service_pb2.SetInternalConfigRequest",
    "ray.core.generated.gcs_service_pb2.UnregisterNodeReply",
    "ray.core.generated.gcs_service_pb2.UnregisterNodeRequest",
    "ray.core.generated.gcs_service_pb2.UpdateActorInfoReply",
    "ray.core.generated.gcs_service_pb2.UpdateActorInfoRequest",
    "ray.core.generated.gcs_service_pb2.UpdateResourcesReply",
    "ray.core.generated.gcs_service_pb2.UpdateResourcesRequest",
    "ray.core.generated.gcs_service_pb2._ACTORINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._ADDACTORCHECKPOINTREPLY",
    "ray.core.generated.gcs_service_pb2._ADDACTORCHECKPOINTREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDJOBREPLY",
    "ray.core.generated.gcs_service_pb2._ADDJOBREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDOBJECTLOCATIONREPLY",
    "ray.core.generated.gcs_service_pb2._ADDOBJECTLOCATIONREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDOBJECTSPILLEDURLREPLY",
    "ray.core.generated.gcs_service_pb2._ADDPROFILEDATAREPLY",
    "ray.core.generated.gcs_service_pb2._ADDPROFILEDATAREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDTASKLEASEREPLY",
    "ray.core.generated.gcs_service_pb2._ADDTASKLEASEREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDTASKREPLY",
    "ray.core.generated.gcs_service_pb2._ADDTASKREQUEST",
    "ray.core.generated.gcs_service_pb2._ADDWORKERINFOREPLY",
    "ray.core.generated.gcs_service_pb2._ADDWORKERINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._ATTEMPTTASKRECONSTRUCTIONREPLY",
    "ray.core.generated.gcs_service_pb2._ATTEMPTTASKRECONSTRUCTIONREQUEST",
    "ray.core.generated.gcs_service_pb2._CREATEACTORREPLY",
    "ray.core.generated.gcs_service_pb2._CREATEACTORREQUEST",
    "ray.core.generated.gcs_service_pb2._CREATEPLACEMENTGROUPREPLY",
    "ray.core.generated.gcs_service_pb2._CREATEPLACEMENTGROUPREQUEST",
    "ray.core.generated.gcs_service_pb2._DELETERESOURCESREPLY",
    "ray.core.generated.gcs_service_pb2._DELETERESOURCESREQUEST",
    "ray.core.generated.gcs_service_pb2._DELETETASKSREPLY",
    "ray.core.generated.gcs_service_pb2._DELETETASKSREQUEST",
    "ray.core.generated.gcs_service_pb2._GCSSERVICEFAILURETYPE",
    "ray.core.generated.gcs_service_pb2._GCSSTATUS",
    "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTIDREPLY",
    "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTIDREQUEST",
    "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTREPLY",
    "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTREQUEST",
    "ray.core.generated.gcs_service_pb2._GETACTORINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETACTORINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLACTORINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLACTORINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLAVAILABLERESOURCESREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLAVAILABLERESOURCESREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLJOBINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLJOBINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLNODEINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLNODEINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLOBJECTLOCATIONSREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLOBJECTLOCATIONSREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLPROFILEINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLPROFILEINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETALLWORKERINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETALLWORKERINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETINTERNALCONFIGREPLY",
    "ray.core.generated.gcs_service_pb2._GETINTERNALCONFIGREQUEST",
    "ray.core.generated.gcs_service_pb2._GETNAMEDACTORINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETNAMEDACTORINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._GETOBJECTLOCATIONSREPLY",
    "ray.core.generated.gcs_service_pb2._GETOBJECTLOCATIONSREQUEST",
    "ray.core.generated.gcs_service_pb2._GETPLACEMENTGROUPREPLY",
    "ray.core.generated.gcs_service_pb2._GETPLACEMENTGROUPREQUEST",
    "ray.core.generated.gcs_service_pb2._GETRESOURCESREPLY",
    "ray.core.generated.gcs_service_pb2._GETRESOURCESREPLY_RESOURCESENTRY",
    "ray.core.generated.gcs_service_pb2._GETRESOURCESREQUEST",
    "ray.core.generated.gcs_service_pb2._GETTASKLEASEREPLY",
    "ray.core.generated.gcs_service_pb2._GETTASKLEASEREQUEST",
    "ray.core.generated.gcs_service_pb2._GETTASKREPLY",
    "ray.core.generated.gcs_service_pb2._GETTASKREQUEST",
    "ray.core.generated.gcs_service_pb2._GETWORKERINFOREPLY",
    "ray.core.generated.gcs_service_pb2._GETWORKERINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._JOBINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._MARKJOBFINISHEDREPLY",
    "ray.core.generated.gcs_service_pb2._MARKJOBFINISHEDREQUEST",
    "ray.core.generated.gcs_service_pb2._NODEINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._OBJECTINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._PLACEMENTGROUPINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._REGISTERACTORINFOREPLY",
    "ray.core.generated.gcs_service_pb2._REGISTERACTORINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._REGISTERACTORREPLY",
    "ray.core.generated.gcs_service_pb2._REGISTERACTORREQUEST",
    "ray.core.generated.gcs_service_pb2._REGISTERNODEREPLY",
    "ray.core.generated.gcs_service_pb2._REGISTERNODEREQUEST",
    "ray.core.generated.gcs_service_pb2._REMOVEOBJECTLOCATIONREPLY",
    "ray.core.generated.gcs_service_pb2._REMOVEOBJECTLOCATIONREQUEST",
    "ray.core.generated.gcs_service_pb2._REMOVEPLACEMENTGROUPREPLY",
    "ray.core.generated.gcs_service_pb2._REMOVEPLACEMENTGROUPREQUEST",
    "ray.core.generated.gcs_service_pb2._REPORTBATCHHEARTBEATREPLY",
    "ray.core.generated.gcs_service_pb2._REPORTBATCHHEARTBEATREQUEST",
    "ray.core.generated.gcs_service_pb2._REPORTHEARTBEATREPLY",
    "ray.core.generated.gcs_service_pb2._REPORTHEARTBEATREQUEST",
    "ray.core.generated.gcs_service_pb2._REPORTWORKERFAILUREREPLY",
    "ray.core.generated.gcs_service_pb2._REPORTWORKERFAILUREREQUEST",
    "ray.core.generated.gcs_service_pb2._SETINTERNALCONFIGREPLY",
    "ray.core.generated.gcs_service_pb2._SETINTERNALCONFIGREQUEST",
    "ray.core.generated.gcs_service_pb2._STATSGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._TASKINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._UNREGISTERNODEREPLY",
    "ray.core.generated.gcs_service_pb2._UNREGISTERNODEREQUEST",
    "ray.core.generated.gcs_service_pb2._UPDATEACTORINFOREPLY",
    "ray.core.generated.gcs_service_pb2._UPDATEACTORINFOREQUEST",
    "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREPLY",
    "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREQUEST",
    "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREQUEST_RESOURCESENTRY",
    "ray.core.generated.gcs_service_pb2._WORKERINFOGCSSERVICE",
    "ray.core.generated.gcs_service_pb2._b",
    "ray.core.generated.gcs_service_pb2._sym_db",
    "ray.core.generated.gcs_service_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.gcs_service_pb2.AddActorCheckpointReply": {
  "data": {
   "lineno": 3293
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddActorCheckpointRequest": {
  "data": {
   "lineno": 3286
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddJobReply": {
  "data": {
   "lineno": 3181
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddJobRequest": {
  "data": {
   "lineno": 3174
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddObjectLocationReply": {
  "data": {
   "lineno": 3533
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddObjectLocationRequest": {
  "data": {
   "lineno": 3526
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddObjectSpilledUrlReply": {
  "data": {
   "lineno": 3540
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddProfileDataReply": {
  "data": {
   "lineno": 3652
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddProfileDataRequest": {
  "data": {
   "lineno": 3645
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddTaskLeaseReply": {
  "data": {
   "lineno": 3610
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddTaskLeaseRequest": {
  "data": {
   "lineno": 3603
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddTaskReply": {
  "data": {
   "lineno": 3568
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddTaskRequest": {
  "data": {
   "lineno": 3561
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddWorkerInfoReply": {
  "data": {
   "lineno": 3722
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AddWorkerInfoRequest": {
  "data": {
   "lineno": 3715
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AttemptTaskReconstructionReply": {
  "data": {
   "lineno": 3638
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.AttemptTaskReconstructionRequest": {
  "data": {
   "lineno": 3631
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.CreateActorReply": {
  "data": {
   "lineno": 3736
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.CreateActorRequest": {
  "data": {
   "lineno": 3729
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.CreatePlacementGroupReply": {
  "data": {
   "lineno": 3764
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.CreatePlacementGroupRequest": {
  "data": {
   "lineno": 3757
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.DeleteResourcesReply": {
  "data": {
   "lineno": 3449
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.DeleteResourcesRequest": {
  "data": {
   "lineno": 3442
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.DeleteTasksReply": {
  "data": {
   "lineno": 3596
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.DeleteTasksRequest": {
  "data": {
   "lineno": 3589
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GCS_SERVER_RESTART": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GcsServiceFailureType": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GcsStatus": {
  "data": {
   "lineno": 3167
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorCheckpointIDReply": {
  "data": {
   "lineno": 3321
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorCheckpointIDRequest": {
  "data": {
   "lineno": 3314
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorCheckpointReply": {
  "data": {
   "lineno": 3307
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorCheckpointRequest": {
  "data": {
   "lineno": 3300
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorInfoReply": {
  "data": {
   "lineno": 3223
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetActorInfoRequest": {
  "data": {
   "lineno": 3216
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllActorInfoReply": {
  "data": {
   "lineno": 3251
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllActorInfoRequest": {
  "data": {
   "lineno": 3244
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllAvailableResourcesReply": {
  "data": {
   "lineno": 3491
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllAvailableResourcesRequest": {
  "data": {
   "lineno": 3484
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllJobInfoReply": {
  "data": {
   "lineno": 3209
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllJobInfoRequest": {
  "data": {
   "lineno": 3202
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllNodeInfoReply": {
  "data": {
   "lineno": 3363
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllNodeInfoRequest": {
  "data": {
   "lineno": 3356
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllObjectLocationsReply": {
  "data": {
   "lineno": 3519
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllObjectLocationsRequest": {
  "data": {
   "lineno": 3512
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllProfileInfoReply": {
  "data": {
   "lineno": 3666
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllProfileInfoRequest": {
  "data": {
   "lineno": 3659
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllWorkerInfoReply": {
  "data": {
   "lineno": 3708
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetAllWorkerInfoRequest": {
  "data": {
   "lineno": 3701
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetInternalConfigReply": {
  "data": {
   "lineno": 3477
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetInternalConfigRequest": {
  "data": {
   "lineno": 3470
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetNamedActorInfoReply": {
  "data": {
   "lineno": 3237
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetNamedActorInfoRequest": {
  "data": {
   "lineno": 3230
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetObjectLocationsReply": {
  "data": {
   "lineno": 3505
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetObjectLocationsRequest": {
  "data": {
   "lineno": 3498
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetPlacementGroupReply": {
  "data": {
   "lineno": 3792
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetPlacementGroupRequest": {
  "data": {
   "lineno": 3785
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetResourcesReply": {
  "data": {
   "lineno": 3405
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetResourcesRequest": {
  "data": {
   "lineno": 3398
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetTaskLeaseReply": {
  "data": {
   "lineno": 3624
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetTaskLeaseRequest": {
  "data": {
   "lineno": 3617
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetTaskReply": {
  "data": {
   "lineno": 3582
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetTaskRequest": {
  "data": {
   "lineno": 3575
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetWorkerInfoReply": {
  "data": {
   "lineno": 3694
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.GetWorkerInfoRequest": {
  "data": {
   "lineno": 3687
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.MarkJobFinishedReply": {
  "data": {
   "lineno": 3195
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.MarkJobFinishedRequest": {
  "data": {
   "lineno": 3188
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RPC_DISCONNECT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterActorInfoReply": {
  "data": {
   "lineno": 3265
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterActorInfoRequest": {
  "data": {
   "lineno": 3258
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterActorReply": {
  "data": {
   "lineno": 3750
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterActorRequest": {
  "data": {
   "lineno": 3743
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterNodeReply": {
  "data": {
   "lineno": 3335
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RegisterNodeRequest": {
  "data": {
   "lineno": 3328
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RemoveObjectLocationReply": {
  "data": {
   "lineno": 3554
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RemoveObjectLocationRequest": {
  "data": {
   "lineno": 3547
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RemovePlacementGroupReply": {
  "data": {
   "lineno": 3778
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.RemovePlacementGroupRequest": {
  "data": {
   "lineno": 3771
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportBatchHeartbeatReply": {
  "data": {
   "lineno": 3391
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportBatchHeartbeatRequest": {
  "data": {
   "lineno": 3384
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportHeartbeatReply": {
  "data": {
   "lineno": 3377
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportHeartbeatRequest": {
  "data": {
   "lineno": 3370
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportWorkerFailureReply": {
  "data": {
   "lineno": 3680
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.ReportWorkerFailureRequest": {
  "data": {
   "lineno": 3673
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.SetInternalConfigReply": {
  "data": {
   "lineno": 3463
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.SetInternalConfigRequest": {
  "data": {
   "lineno": 3456
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UnregisterNodeReply": {
  "data": {
   "lineno": 3349
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UnregisterNodeRequest": {
  "data": {
   "lineno": 3342
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UpdateActorInfoReply": {
  "data": {
   "lineno": 3279
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UpdateActorInfoRequest": {
  "data": {
   "lineno": 3272
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UpdateResourcesReply": {
  "data": {
   "lineno": 3435
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2.UpdateResourcesRequest": {
  "data": {
   "lineno": 3420
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ACTORINFOGCSSERVICE": {
  "data": {
   "lineno": 3845
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDACTORCHECKPOINTREPLY": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDACTORCHECKPOINTREQUEST": {
  "data": {
   "lineno": 620
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDJOBREPLY": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDJOBREQUEST": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDOBJECTLOCATIONREPLY": {
  "data": {
   "lineno": 1780
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDOBJECTLOCATIONREQUEST": {
  "data": {
   "lineno": 1735
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDOBJECTSPILLEDURLREPLY": {
  "data": {
   "lineno": 1811
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDPROFILEDATAREPLY": {
  "data": {
   "lineno": 2328
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDPROFILEDATAREQUEST": {
  "data": {
   "lineno": 2297
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDTASKLEASEREPLY": {
  "data": {
   "lineno": 2135
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDTASKLEASEREQUEST": {
  "data": {
   "lineno": 2104
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDTASKREPLY": {
  "data": {
   "lineno": 1942
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDTASKREQUEST": {
  "data": {
   "lineno": 1911
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDWORKERINFOREPLY": {
  "data": {
   "lineno": 2645
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ADDWORKERINFOREQUEST": {
  "data": {
   "lineno": 2614
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ATTEMPTTASKRECONSTRUCTIONREPLY": {
  "data": {
   "lineno": 2266
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._ATTEMPTTASKRECONSTRUCTIONREQUEST": {
  "data": {
   "lineno": 2235
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._CREATEACTORREPLY": {
  "data": {
   "lineno": 2707
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._CREATEACTORREQUEST": {
  "data": {
   "lineno": 2676
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._CREATEPLACEMENTGROUPREPLY": {
  "data": {
   "lineno": 2831
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._CREATEPLACEMENTGROUPREQUEST": {
  "data": {
   "lineno": 2800
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._DELETERESOURCESREPLY": {
  "data": {
   "lineno": 1387
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._DELETERESOURCESREQUEST": {
  "data": {
   "lineno": 1349
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._DELETETASKSREPLY": {
  "data": {
   "lineno": 2073
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._DELETETASKSREQUEST": {
  "data": {
   "lineno": 2042
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GCSSERVICEFAILURETYPE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GCSSTATUS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTIDREPLY": {
  "data": {
   "lineno": 789
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTIDREQUEST": {
  "data": {
   "lineno": 758
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTREPLY": {
  "data": {
   "lineno": 720
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORCHECKPOINTREQUEST": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORINFOREPLY": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETACTORINFOREQUEST": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLACTORINFOREPLY": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLACTORINFOREQUEST": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLAVAILABLERESOURCESREPLY": {
  "data": {
   "lineno": 1566
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLAVAILABLERESOURCESREQUEST": {
  "data": {
   "lineno": 1542
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLJOBINFOREPLY": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLJOBINFOREQUEST": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLNODEINFOREPLY": {
  "data": {
   "lineno": 975
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLNODEINFOREQUEST": {
  "data": {
   "lineno": 951
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLOBJECTLOCATIONSREPLY": {
  "data": {
   "lineno": 1697
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLOBJECTLOCATIONSREQUEST": {
  "data": {
   "lineno": 1673
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLPROFILEINFOREPLY": {
  "data": {
   "lineno": 2383
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLPROFILEINFOREQUEST": {
  "data": {
   "lineno": 2359
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLWORKERINFOREPLY": {
  "data": {
   "lineno": 2576
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETALLWORKERINFOREQUEST": {
  "data": {
   "lineno": 2552
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETINTERNALCONFIGREPLY": {
  "data": {
   "lineno": 1504
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETINTERNALCONFIGREQUEST": {
  "data": {
   "lineno": 1480
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETNAMEDACTORINFOREPLY": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETNAMEDACTORINFOREQUEST": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETOBJECTLOCATIONSREPLY": {
  "data": {
   "lineno": 1635
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETOBJECTLOCATIONSREQUEST": {
  "data": {
   "lineno": 1604
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETPLACEMENTGROUPREPLY": {
  "data": {
   "lineno": 2955
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETPLACEMENTGROUPREQUEST": {
  "data": {
   "lineno": 2924
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETRESOURCESREPLY": {
  "data": {
   "lineno": 1205
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETRESOURCESREPLY_RESOURCESENTRY": {
  "data": {
   "lineno": 1168
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETRESOURCESREQUEST": {
  "data": {
   "lineno": 1137
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETTASKLEASEREPLY": {
  "data": {
   "lineno": 2197
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETTASKLEASEREQUEST": {
  "data": {
   "lineno": 2166
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETTASKREPLY": {
  "data": {
   "lineno": 2004
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETTASKREQUEST": {
  "data": {
   "lineno": 1973
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETWORKERINFOREPLY": {
  "data": {
   "lineno": 2514
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._GETWORKERINFOREQUEST": {
  "data": {
   "lineno": 2483
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._JOBINFOGCSSERVICE": {
  "data": {
   "lineno": 3803
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._MARKJOBFINISHEDREPLY": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._MARKJOBFINISHEDREQUEST": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._NODEINFOGCSSERVICE": {
  "data": {
   "lineno": 3992
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._OBJECTINFOGCSSERVICE": {
  "data": {
   "lineno": 4097
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._PLACEMENTGROUPINFOGCSSERVICE": {
  "data": {
   "lineno": 3950
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERACTORINFOREPLY": {
  "data": {
   "lineno": 520
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERACTORINFOREQUEST": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERACTORREPLY": {
  "data": {
   "lineno": 2769
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERACTORREQUEST": {
  "data": {
   "lineno": 2738
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERNODEREPLY": {
  "data": {
   "lineno": 858
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REGISTERNODEREQUEST": {
  "data": {
   "lineno": 827
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REMOVEOBJECTLOCATIONREPLY": {
  "data": {
   "lineno": 1880
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REMOVEOBJECTLOCATIONREQUEST": {
  "data": {
   "lineno": 1842
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REMOVEPLACEMENTGROUPREPLY": {
  "data": {
   "lineno": 2893
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REMOVEPLACEMENTGROUPREQUEST": {
  "data": {
   "lineno": 2862
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTBATCHHEARTBEATREPLY": {
  "data": {
   "lineno": 1106
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTBATCHHEARTBEATREQUEST": {
  "data": {
   "lineno": 1075
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTHEARTBEATREPLY": {
  "data": {
   "lineno": 1044
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTHEARTBEATREQUEST": {
  "data": {
   "lineno": 1013
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTWORKERFAILUREREPLY": {
  "data": {
   "lineno": 2452
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._REPORTWORKERFAILUREREQUEST": {
  "data": {
   "lineno": 2421
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._SETINTERNALCONFIGREPLY": {
  "data": {
   "lineno": 1449
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._SETINTERNALCONFIGREQUEST": {
  "data": {
   "lineno": 1418
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._STATSGCSSERVICE": {
  "data": {
   "lineno": 4217
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._TASKINFOGCSSERVICE": {
  "data": {
   "lineno": 4148
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UNREGISTERNODEREPLY": {
  "data": {
   "lineno": 920
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UNREGISTERNODEREQUEST": {
  "data": {
   "lineno": 889
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UPDATEACTORINFOREPLY": {
  "data": {
   "lineno": 589
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UPDATEACTORINFOREQUEST": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREPLY": {
  "data": {
   "lineno": 1318
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREQUEST": {
  "data": {
   "lineno": 1280
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._UPDATERESOURCESREQUEST_RESOURCESENTRY": {
  "data": {
   "lineno": 1243
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._WORKERINFOGCSSERVICE": {
  "data": {
   "lineno": 4250
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.core.generated.gcs_service_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2.src_dot_ray_dot_protobuf_dot_common__pb2": {
  "data": {
   "shadows": "common_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2.src_dot_ray_dot_protobuf_dot_gcs__pb2": {
  "data": {
   "shadows": "gcs_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.AddActorCheckpoint": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.CreateActor": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.GetActorCheckpoint": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.GetActorCheckpointID": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.GetActorInfo": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.GetAllActorInfo": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.GetNamedActorInfo": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.RegisterActor": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.RegisterActorInfo": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceServicer.UpdateActorInfo": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceStub": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceServicer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceServicer.AddJob": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceServicer.GetAllJobInfo": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceServicer.MarkJobFinished": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceStub": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.DeleteResources": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.GetAllAvailableResources": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.GetAllNodeInfo": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.GetInternalConfig": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.GetResources": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.RegisterNode": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.ReportHeartbeat": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.SetInternalConfig": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.UnregisterNode": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceServicer.UpdateResources": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceStub": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceServicer": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceServicer.AddObjectLocation": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceServicer.GetAllObjectLocations": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceServicer.GetObjectLocations": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceServicer.RemoveObjectLocation": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceStub": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.ObjectInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceServicer": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceServicer.CreatePlacementGroup": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceServicer.GetPlacementGroup": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceServicer.RemovePlacementGroup": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceStub": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.PlacementGroupInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.StatsGcsServiceServicer": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.StatsGcsServiceServicer.AddProfileData": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.StatsGcsServiceServicer.GetAllProfileInfo": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.StatsGcsServiceStub": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.StatsGcsServiceStub.__init__": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.AddTask": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.AddTaskLease": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.AttemptTaskReconstruction": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.DeleteTasks": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.GetTask": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceServicer.GetTaskLease": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceStub": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.TaskInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceServicer": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceServicer.AddWorkerInfo": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceServicer.GetAllWorkerInfo": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceServicer.GetWorkerInfo": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceServicer.ReportWorkerFailure": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceStub": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.gcs_service_pb2_grpc.WorkerInfoGcsServiceStub.__init__": {
  "data": {
   "lineno": 832
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_ActorInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_JobInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_NodeInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_ObjectInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_PlacementGroupInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_StatsGcsServiceServicer_to_server": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_TaskInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.add_WorkerInfoGcsServiceServicer_to_server": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "ray.core.generated.gcs_service_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.gcs_service_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.gcs_service_pb2_grpc.src_dot_ray_dot_protobuf_dot_gcs__service__pb2": {
  "data": {
   "shadows": "gcs_service_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2": {
  "data": {
   "symbols_in_volume": [
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "google.protobuf.timestamp_pb2.DESCRIPTOR",
    "google.protobuf.timestamp_pb2._TIMESTAMP",
    "google.protobuf.wrappers_pb2.DESCRIPTOR",
    "google.protobuf.wrappers_pb2._DOUBLEVALUE",
    "google.protobuf.wrappers_pb2._INT64VALUE",
    "ray.core.generated.metrics_pb2.DESCRIPTOR",
    "ray.core.generated.metrics_pb2.DistributionValue",
    "ray.core.generated.metrics_pb2.LabelKey",
    "ray.core.generated.metrics_pb2.LabelValue",
    "ray.core.generated.metrics_pb2.Metric",
    "ray.core.generated.metrics_pb2.MetricDescriptor",
    "ray.core.generated.metrics_pb2.Point",
    "ray.core.generated.metrics_pb2.SummaryValue",
    "ray.core.generated.metrics_pb2.TimeSeries",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKET",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKETOPTIONS",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKETOPTIONS_EXPLICIT",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_EXEMPLAR",
    "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_EXEMPLAR_ATTACHMENTSENTRY",
    "ray.core.generated.metrics_pb2._LABELKEY",
    "ray.core.generated.metrics_pb2._LABELVALUE",
    "ray.core.generated.metrics_pb2._METRIC",
    "ray.core.generated.metrics_pb2._METRICDESCRIPTOR",
    "ray.core.generated.metrics_pb2._METRICDESCRIPTOR_TYPE",
    "ray.core.generated.metrics_pb2._POINT",
    "ray.core.generated.metrics_pb2._SUMMARYVALUE",
    "ray.core.generated.metrics_pb2._SUMMARYVALUE_SNAPSHOT",
    "ray.core.generated.metrics_pb2._SUMMARYVALUE_SNAPSHOT_VALUEATPERCENTILE",
    "ray.core.generated.metrics_pb2._TIMESERIES",
    "ray.core.generated.metrics_pb2._b",
    "ray.core.generated.metrics_pb2._sym_db",
    "ray.core.generated.metrics_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.metrics_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.DistributionValue": {
  "data": {
   "lineno": 830
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.LabelKey": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.LabelValue": {
  "data": {
   "lineno": 816
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.Metric": {
  "data": {
   "lineno": 788
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.MetricDescriptor": {
  "data": {
   "lineno": 795
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.Point": {
  "data": {
   "lineno": 823
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.SummaryValue": {
  "data": {
   "lineno": 877
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2.TimeSeries": {
  "data": {
   "lineno": 809
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE": {
  "data": {
   "lineno": 548
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKET": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKETOPTIONS": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_BUCKETOPTIONS_EXPLICIT": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_EXEMPLAR": {
  "data": {
   "lineno": 504
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._DISTRIBUTIONVALUE_EXEMPLAR_ATTACHMENTSENTRY": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._LABELKEY": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._LABELVALUE": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._METRIC": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._METRICDESCRIPTOR": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._METRICDESCRIPTOR_TYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._POINT": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._SUMMARYVALUE": {
  "data": {
   "lineno": 688
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._SUMMARYVALUE_SNAPSHOT": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._SUMMARYVALUE_SNAPSHOT_VALUEATPERCENTILE": {
  "data": {
   "lineno": 607
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._TIMESERIES": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.core.generated.metrics_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2.google_dot_protobuf_dot_timestamp__pb2": {
  "data": {
   "shadows": "google.protobuf.timestamp_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2.google_dot_protobuf_dot_wrappers__pb2": {
  "data": {
   "shadows": "google.protobuf.wrappers_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2.opencensus_dot_proto_dot_resource_dot_v1_dot_resource__pb2": {
  "data": {
   "shadows": "resource_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.metrics_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.metrics_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.node_manager_pb2.CancelResourceReserveReply",
    "ray.core.generated.node_manager_pb2.CancelResourceReserveRequest",
    "ray.core.generated.node_manager_pb2.CancelWorkerLeaseReply",
    "ray.core.generated.node_manager_pb2.CancelWorkerLeaseRequest",
    "ray.core.generated.node_manager_pb2.CommitBundleResourcesReply",
    "ray.core.generated.node_manager_pb2.CommitBundleResourcesRequest",
    "ray.core.generated.node_manager_pb2.DESCRIPTOR",
    "ray.core.generated.node_manager_pb2.FormatGlobalMemoryInfoReply",
    "ray.core.generated.node_manager_pb2.FormatGlobalMemoryInfoRequest",
    "ray.core.generated.node_manager_pb2.GetNodeStatsReply",
    "ray.core.generated.node_manager_pb2.GetNodeStatsRequest",
    "ray.core.generated.node_manager_pb2.GlobalGCReply",
    "ray.core.generated.node_manager_pb2.GlobalGCRequest",
    "ray.core.generated.node_manager_pb2.PinObjectIDsReply",
    "ray.core.generated.node_manager_pb2.PinObjectIDsRequest",
    "ray.core.generated.node_manager_pb2.PrepareBundleResourcesReply",
    "ray.core.generated.node_manager_pb2.PrepareBundleResourcesRequest",
    "ray.core.generated.node_manager_pb2.ReleaseUnusedWorkersReply",
    "ray.core.generated.node_manager_pb2.ReleaseUnusedWorkersRequest",
    "ray.core.generated.node_manager_pb2.RequestObjectSpillageReply",
    "ray.core.generated.node_manager_pb2.RequestObjectSpillageRequest",
    "ray.core.generated.node_manager_pb2.RequestWorkerLeaseReply",
    "ray.core.generated.node_manager_pb2.RequestWorkerLeaseRequest",
    "ray.core.generated.node_manager_pb2.ReturnWorkerReply",
    "ray.core.generated.node_manager_pb2.ReturnWorkerRequest",
    "ray.core.generated.node_manager_pb2.WorkerStats",
    "ray.core.generated.node_manager_pb2._CANCELRESOURCERESERVEREPLY",
    "ray.core.generated.node_manager_pb2._CANCELRESOURCERESERVEREQUEST",
    "ray.core.generated.node_manager_pb2._CANCELWORKERLEASEREPLY",
    "ray.core.generated.node_manager_pb2._CANCELWORKERLEASEREQUEST",
    "ray.core.generated.node_manager_pb2._COMMITBUNDLERESOURCESREPLY",
    "ray.core.generated.node_manager_pb2._COMMITBUNDLERESOURCESREQUEST",
    "ray.core.generated.node_manager_pb2._FORMATGLOBALMEMORYINFOREPLY",
    "ray.core.generated.node_manager_pb2._FORMATGLOBALMEMORYINFOREQUEST",
    "ray.core.generated.node_manager_pb2._GETNODESTATSREPLY",
    "ray.core.generated.node_manager_pb2._GETNODESTATSREQUEST",
    "ray.core.generated.node_manager_pb2._GLOBALGCREPLY",
    "ray.core.generated.node_manager_pb2._GLOBALGCREQUEST",
    "ray.core.generated.node_manager_pb2._NODEMANAGERSERVICE",
    "ray.core.generated.node_manager_pb2._PINOBJECTIDSREPLY",
    "ray.core.generated.node_manager_pb2._PINOBJECTIDSREQUEST",
    "ray.core.generated.node_manager_pb2._PREPAREBUNDLERESOURCESREPLY",
    "ray.core.generated.node_manager_pb2._PREPAREBUNDLERESOURCESREQUEST",
    "ray.core.generated.node_manager_pb2._RELEASEUNUSEDWORKERSREPLY",
    "ray.core.generated.node_manager_pb2._RELEASEUNUSEDWORKERSREQUEST",
    "ray.core.generated.node_manager_pb2._REQUESTOBJECTSPILLAGEREPLY",
    "ray.core.generated.node_manager_pb2._REQUESTOBJECTSPILLAGEREQUEST",
    "ray.core.generated.node_manager_pb2._REQUESTWORKERLEASEREPLY",
    "ray.core.generated.node_manager_pb2._REQUESTWORKERLEASEREQUEST",
    "ray.core.generated.node_manager_pb2._RETURNWORKERREPLY",
    "ray.core.generated.node_manager_pb2._RETURNWORKERREQUEST",
    "ray.core.generated.node_manager_pb2._WORKERSTATS",
    "ray.core.generated.node_manager_pb2._b",
    "ray.core.generated.node_manager_pb2._sym_db",
    "ray.core.generated.node_manager_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.node_manager_pb2.CancelResourceReserveReply": {
  "data": {
   "lineno": 958
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.CancelResourceReserveRequest": {
  "data": {
   "lineno": 951
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.CancelWorkerLeaseReply": {
  "data": {
   "lineno": 1000
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.CancelWorkerLeaseRequest": {
  "data": {
   "lineno": 993
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.CommitBundleResourcesReply": {
  "data": {
   "lineno": 944
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.CommitBundleResourcesRequest": {
  "data": {
   "lineno": 937
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.FormatGlobalMemoryInfoReply": {
  "data": {
   "lineno": 1063
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.FormatGlobalMemoryInfoRequest": {
  "data": {
   "lineno": 1056
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.GetNodeStatsReply": {
  "data": {
   "lineno": 1035
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.GetNodeStatsRequest": {
  "data": {
   "lineno": 1021
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.GlobalGCReply": {
  "data": {
   "lineno": 1049
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.GlobalGCRequest": {
  "data": {
   "lineno": 1042
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.PinObjectIDsReply": {
  "data": {
   "lineno": 1014
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.PinObjectIDsRequest": {
  "data": {
   "lineno": 1007
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.PrepareBundleResourcesReply": {
  "data": {
   "lineno": 930
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.PrepareBundleResourcesRequest": {
  "data": {
   "lineno": 923
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.ReleaseUnusedWorkersReply": {
  "data": {
   "lineno": 986
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.ReleaseUnusedWorkersRequest": {
  "data": {
   "lineno": 979
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.RequestObjectSpillageReply": {
  "data": {
   "lineno": 1077
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.RequestObjectSpillageRequest": {
  "data": {
   "lineno": 1070
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.RequestWorkerLeaseReply": {
  "data": {
   "lineno": 916
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.RequestWorkerLeaseRequest": {
  "data": {
   "lineno": 909
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.ReturnWorkerReply": {
  "data": {
   "lineno": 972
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.ReturnWorkerRequest": {
  "data": {
   "lineno": 965
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2.WorkerStats": {
  "data": {
   "lineno": 1028
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._CANCELRESOURCERESERVEREPLY": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._CANCELRESOURCERESERVEREQUEST": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._CANCELWORKERLEASEREPLY": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._CANCELWORKERLEASEREQUEST": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._COMMITBUNDLERESOURCESREPLY": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._COMMITBUNDLERESOURCESREQUEST": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._FORMATGLOBALMEMORYINFOREPLY": {
  "data": {
   "lineno": 776
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._FORMATGLOBALMEMORYINFOREQUEST": {
  "data": {
   "lineno": 752
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._GETNODESTATSREPLY": {
  "data": {
   "lineno": 638
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._GETNODESTATSREQUEST": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._GLOBALGCREPLY": {
  "data": {
   "lineno": 728
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._GLOBALGCREQUEST": {
  "data": {
   "lineno": 704
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._NODEMANAGERSERVICE": {
  "data": {
   "lineno": 1086
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._PINOBJECTIDSREPLY": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._PINOBJECTIDSREQUEST": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._PREPAREBUNDLERESOURCESREPLY": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._PREPAREBUNDLERESOURCESREQUEST": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._RELEASEUNUSEDWORKERSREPLY": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._RELEASEUNUSEDWORKERSREQUEST": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._REQUESTOBJECTSPILLAGEREPLY": {
  "data": {
   "lineno": 838
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._REQUESTOBJECTSPILLAGEREQUEST": {
  "data": {
   "lineno": 807
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._REQUESTWORKERLEASEREPLY": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._REQUESTWORKERLEASEREQUEST": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._RETURNWORKERREPLY": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._RETURNWORKERREQUEST": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._WORKERSTATS": {
  "data": {
   "lineno": 572
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.core.generated.node_manager_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2.src_dot_ray_dot_protobuf_dot_common__pb2": {
  "data": {
   "shadows": "common_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.CancelResourceReserve": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.CancelWorkerLease": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.CommitBundleResources": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.FormatGlobalMemoryInfo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.GetNodeStats": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.GlobalGC": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.PinObjectIDs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.PrepareBundleResources": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.ReleaseUnusedWorkers": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.RequestObjectSpillage": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.RequestWorkerLease": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceServicer.ReturnWorker": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceStub": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceStub.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.add_NodeManagerServiceServicer_to_server": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.core.generated.node_manager_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.node_manager_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.node_manager_pb2_grpc.src_dot_ray_dot_protobuf_dot_node__manager__pb2": {
  "data": {
   "shadows": "node_manager_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.reporter_pb2.DESCRIPTOR",
    "ray.core.generated.reporter_pb2.GetProfilingStatsReply",
    "ray.core.generated.reporter_pb2.GetProfilingStatsRequest",
    "ray.core.generated.reporter_pb2.ReportMetricsReply",
    "ray.core.generated.reporter_pb2.ReportMetricsRequest",
    "ray.core.generated.reporter_pb2.ReportOCMetricsReply",
    "ray.core.generated.reporter_pb2.ReportOCMetricsRequest",
    "ray.core.generated.reporter_pb2._GETPROFILINGSTATSREPLY",
    "ray.core.generated.reporter_pb2._GETPROFILINGSTATSREQUEST",
    "ray.core.generated.reporter_pb2._REPORTERSERVICE",
    "ray.core.generated.reporter_pb2._REPORTMETRICSREPLY",
    "ray.core.generated.reporter_pb2._REPORTMETRICSREQUEST",
    "ray.core.generated.reporter_pb2._REPORTOCMETRICSREPLY",
    "ray.core.generated.reporter_pb2._REPORTOCMETRICSREQUEST",
    "ray.core.generated.reporter_pb2._b",
    "ray.core.generated.reporter_pb2._sym_db",
    "ray.core.generated.reporter_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.reporter_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.GetProfilingStatsReply": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.GetProfilingStatsRequest": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.ReportMetricsReply": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.ReportMetricsRequest": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.ReportOCMetricsReply": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2.ReportOCMetricsRequest": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._GETPROFILINGSTATSREPLY": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._GETPROFILINGSTATSREQUEST": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._REPORTERSERVICE": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._REPORTMETRICSREPLY": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._REPORTMETRICSREQUEST": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._REPORTOCMETRICSREPLY": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._REPORTOCMETRICSREQUEST": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.core.generated.reporter_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2.opencensus_dot_proto_dot_metrics_dot_v1_dot_metrics__pb2": {
  "data": {
   "shadows": "metrics_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2.src_dot_ray_dot_protobuf_dot_common__pb2": {
  "data": {
   "shadows": "common_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer.GetProfilingStats": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.reporter_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer.ReportMetrics": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.reporter_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer.ReportOCMetrics": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.core.generated.reporter_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceStub": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.core.generated.reporter_pb2_grpc.ReporterServiceStub.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.core.generated.reporter_pb2_grpc.add_ReporterServiceServicer_to_server": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.core.generated.reporter_pb2_grpc.grpc"
   ]
  },
  "type": "function"
 },
 "ray.core.generated.reporter_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.generated.reporter_pb2_grpc.src_dot_ray_dot_protobuf_dot_reporter__pb2": {
  "data": {
   "shadows": "reporter_pb2"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.core.generated.resource_pb2.DESCRIPTOR",
    "ray.core.generated.resource_pb2.Resource",
    "ray.core.generated.resource_pb2._RESOURCE",
    "ray.core.generated.resource_pb2._RESOURCE_LABELSENTRY",
    "ray.core.generated.resource_pb2._b",
    "ray.core.generated.resource_pb2._sym_db",
    "ray.core.generated.resource_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.core.generated.resource_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2.Resource": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2._RESOURCE": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2._RESOURCE_LABELSENTRY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.core.generated.resource_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.core.generated.resource_pb2_grpc": {
  "data": {},
  "type": "module"
 },
 "ray.core.generated.resource_pb2_grpc.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.core.src": {
  "data": {},
  "type": "module"
 },
 "ray.core.src.plasma": {
  "data": {},
  "type": "module"
 },
 "ray.core.src.ray": {
  "data": {},
  "type": "module"
 },
 "ray.core.src.ray.raylet": {
  "data": {},
  "type": "module"
 },
 "ray.cross_language": {
  "data": {},
  "type": "module"
 },
 "ray.cross_language.ActorClass": {
  "data": {
   "shadows": "ray.actor.ActorClass"
  },
  "type": "import"
 },
 "ray.cross_language.JavaFunctionDescriptor": {
  "data": {
   "shadows": "ray._raylet.JavaFunctionDescriptor"
  },
  "type": "import"
 },
 "ray.cross_language.Language": {
  "data": {
   "shadows": "ray.Language"
  },
  "type": "import"
 },
 "ray.cross_language.RemoteFunction": {
  "data": {
   "shadows": "ray.remote_function.RemoteFunction"
  },
  "type": "import"
 },
 "ray.cross_language.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.cross_language.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ray.cross_language.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ray.cross_language.format_args": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.cross_language.get_function_descriptor_for_actor_method": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.Language.JAVA",
    "ray._raylet.JavaFunctionDescriptor"
   ]
  },
  "type": "function"
 },
 "ray.cross_language.java_actor_class": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ray.Language.JAVA",
    "ray._raylet.JavaFunctionDescriptor",
    "ray.actor.ActorClass._ray_from_function_descriptor"
   ]
  },
  "type": "function"
 },
 "ray.cross_language.java_function": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.Language.JAVA",
    "ray._raylet.JavaFunctionDescriptor",
    "ray.remote_function.RemoteFunction"
   ]
  },
  "type": "function"
 },
 "ray.cross_language.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "ray.dashboard": {
  "data": {},
  "type": "module"
 },
 "ray.dashboard.dashboard": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "OSError",
    "__name__",
    "int",
    "isinstance",
    "print",
    "ray.dashboard.dashboard.Dashboard",
    "ray.dashboard.dashboard.argparse",
    "ray.dashboard.dashboard.args",
    "ray.dashboard.dashboard.dashboard",
    "ray.dashboard.dashboard.datetime",
    "ray.dashboard.dashboard.errno",
    "ray.dashboard.dashboard.headers",
    "ray.dashboard.dashboard.logger",
    "ray.dashboard.dashboard.logging",
    "ray.dashboard.dashboard.message",
    "ray.dashboard.dashboard.metrics_export_address",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.dashboard.parser",
    "ray.dashboard.dashboard.platform",
    "ray.dashboard.dashboard.ray",
    "ray.dashboard.dashboard.redis_client",
    "ray.dashboard.dashboard.sys",
    "ray.dashboard.dashboard.traceback",
    "ray.dashboard.dashboard.traceback_str",
    "ray.dashboard.dashboard.ts",
    "ray.dashboard.util.to_unix_time",
    "ray.ray_constants.DASHBOARD_DIED_ERROR",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.tune.Analysis",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.dashboard.Analysis": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.BaseDashboardController": {
  "data": {
   "shadows": "ray.dashboard.interface.BaseDashboardController"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.BaseDashboardRouteHandler": {
  "data": {
   "shadows": "ray.dashboard.interface.BaseDashboardRouteHandler"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.Dashboard": {
  "data": {
   "lineno": 461
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.Dashboard.__init__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.DashboardController",
    "ray.dashboard.dashboard.DashboardRouteHandler",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.dashboard.ray",
    "ray.dashboard.dashboard.setup_dashboard_route",
    "ray.dashboard.dashboard.setup_speedscope_dir",
    "ray.dashboard.dashboard.setup_static_dir",
    "ray.dashboard.dashboard.uuid",
    "ray.metrics_agent.PrometheusServiceDiscoveryWriter",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.Dashboard._setup_metrics_export": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.MetricsExportHandler",
    "ray.dashboard.dashboard.setup_metrics_export_routes",
    "ray.dashboard.metrics_exporter.client.Exporter",
    "ray.dashboard.metrics_exporter.client.MetricsExportClient"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.Dashboard._start_exporting_metrics": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.ray"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.Dashboard.log_dashboard_url": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "ray.dashboard.dashboard.logger",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.dashboard.ray"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.Dashboard.run": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.dashboard.interface.BaseDashboardController"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.DashboardController.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.RayletStats",
    "ray.dashboard.dashboard.TuneCollector",
    "ray.dashboard.memory.MemoryTable",
    "ray.dashboard.node_stats.NodeStats",
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController._construct_raylet_info": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.check_profiling_status": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.enable_tune_tensorboard": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_errors": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_logs": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_memory_table_info": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ray.dashboard.memory.GroupByType.NODE_ADDRESS",
    "ray.dashboard.memory.MemoryTable",
    "ray.dashboard.memory.SortingType.OBJECT_SIZE",
    "ray.dashboard.memory.construct_memory_table"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_node_info": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_profiling_info": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_ray_config": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "open",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.dashboard.yaml"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.get_raylet_info": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.kill_actor": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.launch_profiling": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.set_tune_experiment": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.start_collecting_metrics": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.stop_collecting_memory_table_info": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.tune_availability": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardController.tune_info": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ray.tune.Analysis"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardRouteHandler": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "json_response",
    "ray.dashboard.dashboard.datetime",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.interface.BaseDashboardRouteHandler",
    "ray.dashboard.memory.GroupByType",
    "ray.dashboard.memory.SortingType",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.DashboardRouteHandler.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.DashboardController"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.DashboardRouteHandler.forbidden": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.Exporter": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.client.Exporter"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.GroupByType": {
  "data": {
   "shadows": "ray.dashboard.memory.GroupByType"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.MemoryTable": {
  "data": {
   "shadows": "ray.dashboard.memory.MemoryTable"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.MessageToDict": {
  "data": {
   "shadows": "google.protobuf.json_format.MessageToDict"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.MetricsExportClient": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.client.MetricsExportClient"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.MetricsExportHandler": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "json_response"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.MetricsExportHandler.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.DashboardController",
    "ray.dashboard.metrics_exporter.client.MetricsExportClient"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.NodeStats": {
  "data": {
   "shadows": "ray.dashboard.node_stats.NodeStats"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.PrometheusServiceDiscoveryWriter": {
  "data": {
   "shadows": "ray.metrics_agent.PrometheusServiceDiscoveryWriter"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.RayletStats": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.threading"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.RayletStats.__init__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.ray",
    "ray.dashboard.dashboard.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats._update_nodes": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceStub",
    "ray.core.generated.reporter_pb2_grpc.ReporterServiceStub",
    "ray.dashboard.dashboard.grpc",
    "ray.dashboard.dashboard.ray"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.check_profiling_status": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.get_profiling_info": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.json"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.get_raylet_stats": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.copy"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.kill_actor": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "int",
    "ray.core.generated.core_worker_pb2.KillActorRequest",
    "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceStub",
    "ray.dashboard.dashboard.grpc",
    "ray.dashboard.dashboard.ray"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.kill_actor._callback": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.launch_profiling": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ray.core.generated.reporter_pb2.GetProfilingStatsRequest",
    "ray.dashboard.dashboard.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.launch_profiling._callback": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.RayletStats.run": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "Exception",
    "google.protobuf.json_format.MessageToDict",
    "ray.core.generated.node_manager_pb2.GetNodeStatsRequest",
    "ray.dashboard.dashboard.logger",
    "ray.dashboard.dashboard.time",
    "ray.dashboard.dashboard.traceback"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.SortingType": {
  "data": {
   "shadows": "ray.dashboard.memory.SortingType"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.TuneCollector": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.threading"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.dashboard.TuneCollector.__init__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.clean_trials": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "ray.dashboard.dashboard.datetime",
    "ray.dashboard.dashboard.os",
    "ray.dashboard.dashboard.ts",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.collect": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.tune.Analysis",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.collect_errors": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "filter",
    "len",
    "open",
    "ray.dashboard.dashboard.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.enable_tensorboard": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "str",
    "tensorboard.program.TensorBoard"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.get_availability": {
  "data": {
   "lineno": 764
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.get_stats": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.copy"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.run": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.time"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.TuneCollector.set_experiment": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.os"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.args": {
  "data": {
   "lineno": 948
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.construct_memory_table": {
  "data": {
   "shadows": "ray.dashboard.memory.construct_memory_table"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.core_worker_pb2": {
  "data": {
   "shadows": "ray.core.generated.core_worker_pb2"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.core_worker_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.core_worker_pb2_grpc"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.dashboard": {
  "data": {
   "lineno": 955
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.headers": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.message": {
  "data": {
   "lineno": 968
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.metrics_export_address": {
  "data": {
   "lineno": 952
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.node_manager_pb2": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.node_manager_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2_grpc"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.parser": {
  "data": {
   "lineno": 905
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.program": {
  "data": {
   "shadows": "tensorboard.program"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.redis_client": {
  "data": {
   "lineno": 965
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.reporter_pb2": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.reporter_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2_grpc"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.setup_dashboard_route": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "add_get_route",
    "ray.dashboard.interface.BaseDashboardRouteHandler"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.setup_dashboard_route.add_get_route": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.setup_metrics_export_routes": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.MetricsExportHandler"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.setup_speedscope_dir": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ray.dashboard.dashboard.os"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.setup_static_dir": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "OSError",
    "ray.dashboard.dashboard.errno",
    "ray.dashboard.dashboard.os"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.dashboard.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.to_unix_time": {
  "data": {
   "shadows": "ray.dashboard.util.to_unix_time"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.traceback_str": {
  "data": {
   "lineno": 967
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.ts": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.dashboard.dashboard.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.dashboard.dashboard.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.dashboard.interface": {
  "data": {},
  "type": "module"
 },
 "ray.dashboard.interface.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.dashboard.interface.BaseDashboardController": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.interface.BaseDashboardController.check_profiling_status": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_errors": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_logs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_node_info": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_profiling_info": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_ray_config": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.get_raylet_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.kill_actor": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.launch_profiling": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.start_collecting_metrics": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.tune_availability": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardController.tune_info": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.BaseDashboardRouteHandler": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.ABC",
    "abc.abstractmethod",
    "ray.dashboard.interface.aiohttp"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.interface.BaseDashboardRouteHandler.get_forbidden": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.dashboard.interface.aiohttp"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.interface.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.dashboard.interface.aiohttp": {
  "data": {
   "shadows": "aiohttp"
  },
  "type": "import"
 },
 "ray.dashboard.memory": {
  "data": {
   "symbols_in_volume": [
    "ray._raylet.ActorID.size",
    "ray._raylet.JobID.size",
    "ray._raylet.TaskID.size",
    "ray.dashboard.memory.ACTORID_BYTES_SIZE",
    "ray.dashboard.memory.JOBID_BYTES_SIZE",
    "ray.dashboard.memory.TASKID_BYTES_SIZE"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.memory.ACTORID_BYTES_SIZE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.dashboard.memory.ACTORID_RANDOM_BITS_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.dashboard.memory.ActorID": {
  "data": {
   "shadows": "ray._raylet.ActorID"
  },
  "type": "import"
 },
 "ray.dashboard.memory.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "ray.dashboard.memory.GroupByType": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.memory.JOBID_BYTES_SIZE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.dashboard.memory.JobID": {
  "data": {
   "shadows": "ray._raylet.JobID"
  },
  "type": "import"
 },
 "ray.dashboard.memory.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.dashboard.memory.MemoryTable": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "ray.dashboard.memory.MemoryTable.__dict__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "ray.dashboard.memory.GroupByType",
    "ray.dashboard.memory.MemoryTableEntry",
    "ray.dashboard.memory.SortingType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.__repr__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.__str__": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable._group_by": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "ray.dashboard.memory.GroupByType",
    "ray.dashboard.memory.MemoryTable"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable._sort_by": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "ray.dashboard.memory.SortingType"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.get_entries": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.insert_entry": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ray.dashboard.memory.MemoryTableEntry"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.setup": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.dashboard.memory.GroupByType",
    "ray.dashboard.memory.SortingType"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTable.summarize": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ray.dashboard.memory.ReferenceType"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "ray.dashboard.memory.MemoryTableEntry.__dict__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "ray.dashboard.memory.decode_object_ref_if_needed",
    "ray.dashboard.memory.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry.__repr__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry.__str__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry._get_reference_type": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "ray.dashboard.memory.ReferenceType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry._is_object_ref_actor_handle": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "ray.dashboard.memory.ACTORID_RANDOM_BITS_SIZE",
    "ray.dashboard.memory.TASKID_RANDOM_BITS_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry.group_key": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "ray.dashboard.memory.GroupByType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.MemoryTableEntry.is_valid": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.ReferenceType": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "ray.dashboard.memory.SortingType": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.memory.TASKID_BYTES_SIZE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.dashboard.memory.TASKID_RANDOM_BITS_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.dashboard.memory.TaskID": {
  "data": {
   "shadows": "ray._raylet.TaskID"
  },
  "type": "import"
 },
 "ray.dashboard.memory.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "ray.dashboard.memory.construct_memory_table": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "dict",
    "ray.dashboard.memory.GroupByType",
    "ray.dashboard.memory.MemoryTable",
    "ray.dashboard.memory.MemoryTableEntry",
    "ray.dashboard.memory.SortingType"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.decode_object_ref_if_needed": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bytes",
    "ray.dashboard.memory.base64",
    "ray.dashboard.memory.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.memory.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.dashboard.memory.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter": {
  "data": {},
  "type": "module"
 },
 "ray.dashboard.metrics_exporter.actions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.dashboard.metrics_exporter.actions.logging"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.metrics_exporter.actions.ActionHandler": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.actions.ActionHandler.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.actions.ActionHandler.handle_actions": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict",
    "ray.dashboard.metrics_exporter.actions.logger",
    "ray.dashboard.metrics_exporter.actions.typing",
    "ray.dashboard.metrics_exporter.schema.ActionType.KILL_ACTOR"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.actions.ActionHandler.handle_kill_action": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "ray.dashboard.metrics_exporter.schema.KillAction.parse_obj"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.actions.ActionType": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.ActionType"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.actions.KillAction": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.KillAction"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.actions.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.dashboard.metrics_exporter.actions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.actions.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "print"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.metrics_exporter.api.AuthRequest": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.AuthRequest"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api.AuthResponse": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.AuthResponse"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api.IngestRequest": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.IngestRequest"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api.IngestResponse": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.schema.IngestResponse"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api.authentication_request": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.api.json",
    "ray.dashboard.metrics_exporter.api.requests",
    "ray.dashboard.metrics_exporter.schema.AuthRequest",
    "ray.dashboard.metrics_exporter.schema.AuthResponse",
    "ray.dashboard.metrics_exporter.schema.AuthResponse.parse_obj"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.api.ingest_request": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.api.json",
    "ray.dashboard.metrics_exporter.api.requests",
    "ray.dashboard.metrics_exporter.schema.IngestRequest",
    "ray.dashboard.metrics_exporter.schema.IngestResponse",
    "ray.dashboard.metrics_exporter.schema.IngestResponse.parse_obj"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.api.requests": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.dashboard.metrics_exporter.client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.dashboard.metrics_exporter.client.logging"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.metrics_exporter.client.ActionHandler": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.actions.ActionHandler"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.client.Exporter": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.client.threading"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.client.Exporter.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.actions.ActionHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.Exporter.access_token": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.Exporter.export": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.api.ingest_request"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.Exporter.run": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "ray.dashboard.metrics_exporter.client.logger",
    "ray.dashboard.metrics_exporter.client.time",
    "ray.dashboard.metrics_exporter.client.traceback"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient._authenticate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.api.authentication_request"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient.dashboard_url": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient.enabled": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.MetricsExportClient.start_exporting_metrics": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "ray.dashboard.metrics_exporter.client.logger",
    "ray.dashboard.metrics_exporter.client.traceback"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.client.api": {
  "data": {
   "shadows": "ray.dashboard.metrics_exporter.api"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.client.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.dashboard.metrics_exporter.client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.client.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.schema": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.metrics_exporter.schema.ActionType": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.AuthRequest": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.schema.BaseModel",
    "ray.dashboard.metrics_exporter.schema.Field",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.AuthResponse": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.schema.BaseModel",
    "ray.dashboard.metrics_exporter.schema.Field",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.BaseModel": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.BaseModel.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.schema.BaseModel.__str__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.schema.BaseModel.json": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.dashboard.metrics_exporter.schema.json"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.schema.BaseModel.parse_obj": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict",
    "ray.dashboard.metrics_exporter.schema.ValidationError",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.metrics_exporter.schema.Field": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.dashboard.metrics_exporter.schema.IngestRequest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "ray.dashboard.metrics_exporter.schema.BaseModel",
    "ray.dashboard.metrics_exporter.schema.Field",
    "tuple"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.IngestResponse": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "list",
    "ray.dashboard.metrics_exporter.schema.BaseModel",
    "ray.dashboard.metrics_exporter.schema.Field"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.KillAction": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int",
    "ray.dashboard.metrics_exporter.schema.ActionType",
    "ray.dashboard.metrics_exporter.schema.BaseModel",
    "ray.dashboard.metrics_exporter.schema.Field",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.ValidationError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.metrics_exporter.schema.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.dashboard.metrics_exporter.schema.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.dashboard.node_stats.logging",
    "ray.dashboard.node_stats.re"
   ]
  },
  "type": "module"
 },
 "ray.dashboard.node_stats.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.NodeStats": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.dashboard.node_stats.threading"
   ]
  },
  "type": "class"
 },
 "ray.dashboard.node_stats.NodeStats.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "ray.dashboard.node_stats.ray",
    "ray.dashboard.node_stats.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats._insert_error_counts": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats._insert_log_counts": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats._purge_outdated_stats": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "current",
    "datetime.datetime.utcnow",
    "ray.dashboard.util.to_unix_time"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats._purge_outdated_stats.current": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.get_actors": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_update_from_actor_tasks",
    "any",
    "ray.dashboard.node_stats._get_actor_group_stats",
    "ray.dashboard.node_stats._group_actors_by_python_class",
    "ray.dashboard.node_stats.copy",
    "ray.dashboard.node_stats.time",
    "ray.dashboard.util.format_reply_id",
    "round",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.get_actors._update_from_actor_tasks": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "base64.b64decode",
    "ray.dashboard.node_stats.ray",
    "ray.dashboard.util.format_reply_id"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.get_errors": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.get_logs": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.get_node_stats": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.NodeStats.run": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "ray.dashboard.node_stats.json",
    "ray.dashboard.node_stats.logger",
    "ray.dashboard.node_stats.ray",
    "ray.dashboard.node_stats.re",
    "ray.dashboard.node_stats.traceback",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.PYCLASSNAME_RE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.dashboard.node_stats._get_actor_group_stats": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "ray.dashboard.node_stats.time"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats._group_actors_by_python_class": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "ray.dashboard.node_stats.PYCLASSNAME_RE"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.node_stats.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.format_reply_id": {
  "data": {
   "shadows": "ray.dashboard.util.format_reply_id"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.dashboard.node_stats.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.to_unix_time": {
  "data": {
   "shadows": "ray.dashboard.util.to_unix_time"
  },
  "type": "import"
 },
 "ray.dashboard.node_stats.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.dashboard.util": {
  "data": {},
  "type": "module"
 },
 "ray.dashboard.util.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "ray.dashboard.util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.dashboard.util.format_reply_id": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "base64.b64decode",
    "dict",
    "isinstance",
    "list",
    "ray.dashboard.util.ray"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.util.format_resource": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.dashboard.util.round_resource_value"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.util.get_unused_port": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "OSError",
    "print",
    "range",
    "ray.dashboard.util.random",
    "ray.dashboard.util.socket"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.util.measures_to_dict": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ray.dashboard.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.dashboard.util.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.dashboard.util.round_resource_value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.dashboard.util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.dashboard.util.to_unix_time": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.dashboard.util.datetime"
   ]
  },
  "type": "function"
 },
 "ray.dataframe": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "module"
 },
 "ray.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "ray.disconnect": {
  "data": {
   "shadows": "ray.worker.disconnect"
  },
  "type": "import"
 },
 "ray.exceptions": {
  "data": {
   "symbols_in_volume": [
    "ray.exceptions.GetTimeoutError",
    "ray.exceptions.ObjectLostError",
    "ray.exceptions.ObjectStoreFullError",
    "ray.exceptions.PlasmaObjectNotAvailable",
    "ray.exceptions.RayActorError",
    "ray.exceptions.RayError",
    "ray.exceptions.RayTaskError",
    "ray.exceptions.WorkerCrashedError"
   ]
  },
  "type": "module"
 },
 "ray.exceptions.CrossLanguageError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.CrossLanguageError.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.core.generated.common_pb2.Language.Name",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.GetTimeoutError": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.Language": {
  "data": {
   "shadows": "ray.core.generated.common_pb2.Language"
  },
  "type": "import"
 },
 "ray.exceptions.ObjectLostError": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.ObjectLostError.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "ray.exceptions.ObjectLostError.__str__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "ray.exceptions.ObjectStoreFullError": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.ObjectStoreFullError.__str__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.exceptions.ObjectStoreFullError",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.PlasmaObjectNotAvailable": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RAY_EXCEPTION_TYPES": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "ray.exceptions.RayActorError": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RayActorError.__str__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.exceptions.RayError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RayError.from_bytes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.cloudpickle.loads",
    "ray.core.generated.common_pb2.RayException",
    "ray.exceptions.CrossLanguageError",
    "ray.exceptions.ray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.RayError.to_bytes": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.core.generated.common_pb2.RayException",
    "ray.exceptions.ray",
    "traceback.format_exception",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.RayException": {
  "data": {
   "shadows": "ray.core.generated.common_pb2.RayException"
  },
  "type": "import"
 },
 "ray.exceptions.RaySystemError": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RaySystemError.__init__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "ray.exceptions.RaySystemError.__str__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "ray.exceptions.RayTaskError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RayTaskError.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.exceptions.os",
    "ray.exceptions.ray",
    "ray.exceptions.setproctitle"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.RayTaskError.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.exceptions.colorama"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.RayTaskError.as_instanceof_cause": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "cls",
    "issubclass",
    "ray.exceptions.RayError",
    "ray.exceptions.RayTaskError"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.RayTaskError.as_instanceof_cause.cls": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ray.exceptions.RayTaskError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.RayTaskError.as_instanceof_cause.cls.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.exceptions.RayTaskError"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.TaskCancelledError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.TaskCancelledError.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.exceptions.TaskCancelledError.__str__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.exceptions.WorkerCrashedError": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ray.exceptions.RayError"
   ]
  },
  "type": "class"
 },
 "ray.exceptions.WorkerCrashedError.__str__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "ray.exceptions.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "ray.exceptions.format_exception": {
  "data": {
   "shadows": "traceback.format_exception"
  },
  "type": "import"
 },
 "ray.exceptions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.exceptions.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.exceptions.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.exceptions.setproctitle": {
  "data": {
   "shadows": "setproctitle"
  },
  "type": "import"
 },
 "ray.experimental": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.experimental.array": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.distributed": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.distributed.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.experimental.array.distributed.core": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.distributed.core.BLOCK_SIZE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.experimental.array.distributed.core.DistArray": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.experimental.array.distributed.core.DistArray.__getitem__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "list",
    "numpy.ceil",
    "numpy.empty",
    "object",
    "ray.experimental.array.distributed.core.BLOCK_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.assemble": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.ndindex",
    "numpy.zeros",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.compute_block_lower": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.experimental.array.distributed.core.BLOCK_SIZE",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.compute_block_shape": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.experimental.array.distributed.core.DistArray",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.compute_block_upper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "len",
    "min",
    "range",
    "ray.experimental.array.distributed.core.BLOCK_SIZE",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.DistArray.compute_num_blocks": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "ray.experimental.array.distributed.core.BLOCK_SIZE",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.add": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.add.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.assemble": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.experimental.array.distributed.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.blockwise_dot": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range",
    "ray.experimental.array.distributed.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.copy": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.dot": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "list",
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.blockwise_dot",
    "ray.experimental.array.distributed.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.eye": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.eye.remote",
    "ray.experimental.array.remote.zeros.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.core.numpy_to_dist": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.ones": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.ones.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.ra": {
  "data": {
   "shadows": "ray.experimental.array.remote"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.core.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.core.subblocks": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.alltrue",
    "numpy.ndindex",
    "numpy.sort",
    "range",
    "ray.experimental.array.distributed.core.BLOCK_SIZE",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.subtract": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.subtract.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.transpose": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Exception",
    "range",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.transpose.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.tril": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.copy.remote",
    "ray.experimental.array.remote.tril.remote",
    "ray.experimental.array.remote.zeros_like.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.triu": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.copy.remote",
    "ray.experimental.array.remote.triu.remote",
    "ray.experimental.array.remote.zeros_like.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.core.zeros": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.ndindex",
    "ray.experimental.array.distributed.core.DistArray",
    "ray.experimental.array.distributed.core.ray",
    "ray.experimental.array.remote.zeros.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.distributed.linalg.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.experimental.array.distributed.linalg.modified_lu": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.outer",
    "numpy.sign",
    "numpy.tril",
    "numpy.triu",
    "numpy.zeros",
    "range",
    "ray.experimental.array.distributed.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.linalg.qr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "numpy.copy",
    "numpy.linalg.qr",
    "range",
    "ray.experimental.array.distributed.linalg.qr_helper1",
    "ray.experimental.array.distributed.linalg.qr_helper2",
    "ray.experimental.array.distributed.linalg.ray",
    "ray.experimental.array.distributed.linalg.tsqr_hr",
    "ray.experimental.array.remote.dot.remote",
    "ray.experimental.array.remote.eye.remote",
    "ray.experimental.array.remote.shape.remote",
    "ray.experimental.array.remote.sum_list.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.qr_helper1": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.dot",
    "ray.experimental.array.distributed.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.qr_helper2": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.dot",
    "ray.experimental.array.distributed.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.ra": {
  "data": {
   "shadows": "ray.experimental.array.remote"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.linalg.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.linalg.tsqr": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "numpy.ceil",
    "numpy.empty",
    "numpy.log2",
    "numpy.mod",
    "object",
    "range",
    "ray.experimental.array.distributed.linalg.ray",
    "ray.experimental.array.remote.dot.remote",
    "ray.experimental.array.remote.linalg.qr.remote",
    "ray.experimental.array.remote.subarray.remote",
    "ray.experimental.array.remote.vstack.remote",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.tsqr_hr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ray.experimental.array.distributed.linalg.modified_lu",
    "ray.experimental.array.distributed.linalg.ray",
    "ray.experimental.array.distributed.linalg.tsqr",
    "ray.experimental.array.distributed.linalg.tsqr_hr_helper1",
    "ray.experimental.array.distributed.linalg.tsqr_hr_helper2"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.tsqr_hr_helper1": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "ray.experimental.array.distributed.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.linalg.tsqr_hr_helper2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "ray.experimental.array.distributed.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.random": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.distributed.random.normal": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DistArray",
    "numpy.empty",
    "numpy.ndindex",
    "object",
    "ray.experimental.array.distributed.random.ray",
    "ray.experimental.array.remote.random.normal.remote"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.distributed.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.random.ra": {
  "data": {
   "shadows": "ray.experimental.array.remote"
  },
  "type": "import"
 },
 "ray.experimental.array.distributed.random.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.array.remote": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.remote.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.experimental.array.remote.core": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.remote.core.add": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.add",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.copy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.copy",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.diag": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.diag",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.dot": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.dot",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.eye": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.eye",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.hstack": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.hstack",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.remote.core.ones": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.ones",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.array.remote.core.shape": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.shape",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.subarray": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.experimental.array.remote.core.ray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.subtract": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.subtract",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.sum": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.sum_list": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.transpose": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.transpose",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.tril": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.tril",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.triu": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.triu",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.vstack": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.vstack",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.zeros": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.zeros",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.core.zeros_like": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.zeros_like",
    "ray.experimental.array.remote.core.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.remote.linalg.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.experimental.array.remote.linalg.cholesky": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.linalg.cholesky",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.cond": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.linalg.cond",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.det": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.linalg.det",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.eig": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.linalg.eig",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.eigh": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.linalg.eigh",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.eigvals": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.linalg.eigvals",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.eigvalsh": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.inv": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.linalg.inv",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.lstsq": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.linalg.lstsq",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.matrix_power": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.linalg.matrix_power",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.matrix_rank": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.linalg.matrix_rank",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.multi_dot": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.norm": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.remote.linalg.pinv": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.linalg.pinv",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.qr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.linalg.qr",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.array.remote.linalg.slogdet": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.solve": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.linalg.solve",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.svd": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.tensorinv": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.linalg.tensorsolve": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.experimental.array.remote.linalg.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.random": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.array.remote.random.normal": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.random.normal",
    "ray.experimental.array.remote.random.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.array.remote.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.array.remote.random.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.dynamic_resources": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.dynamic_resources.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.dynamic_resources.set_resource": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "ray.experimental.dynamic_resources.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.internal_kv": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.internal_kv._internal_kv_del": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.experimental.internal_kv.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.internal_kv._internal_kv_get": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.experimental.internal_kv.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.internal_kv._internal_kv_initialized": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "hasattr",
    "ray.experimental.internal_kv.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.internal_kv._internal_kv_put": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.experimental.internal_kv.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.internal_kv.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.multiprocessing": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.multiprocessing.TimeoutError": {
  "data": {
   "shadows": "multiprocessing.TimeoutError"
  },
  "type": "import"
 },
 "ray.experimental.multiprocessing.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.experimental.multiprocessing.pool": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.multiprocessing.pool.Pool": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ray.util.multiprocessing.Pool"
   ]
  },
  "type": "class"
 },
 "ray.experimental.multiprocessing.pool.multiprocessing": {
  "data": {
   "shadows": "ray.util.multiprocessing"
  },
  "type": "import"
 },
 "ray.experimental.object_spilling": {
  "data": {},
  "type": "module"
 },
 "ray.experimental.object_spilling.force_spill_objects": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.experimental.object_spilling.ray"
   ]
  },
  "type": "function"
 },
 "ray.experimental.object_spilling.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.experimental.queue": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "ray.experimental.queue.warnings"
   ]
  },
  "type": "module"
 },
 "ray.experimental.queue.Empty": {
  "data": {
   "shadows": "ray.util.queue.Empty"
  },
  "type": "import"
 },
 "ray.experimental.queue.Full": {
  "data": {
   "shadows": "ray.util.queue.Full"
  },
  "type": "import"
 },
 "ray.experimental.queue.Queue": {
  "data": {
   "shadows": "ray.util.queue.Queue"
  },
  "type": "import"
 },
 "ray.experimental.queue.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.experimental.queue.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.experimental.tf_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils.TensorFlowVariables": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "collections.deque",
    "hasattr",
    "len",
    "ray.rllib.utils.force_list",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.get_flat": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.get_flat_size": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.prod",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.get_weights": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.set_flat": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dict",
    "list",
    "ray.experimental.tf_utils.unflatten",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.TensorFlowVariables.set_weights": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "ray.experimental.tf_utils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils.force_list": {
  "data": {
   "shadows": "ray.rllib.utils.force_list"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.experimental.tf_utils.unflatten": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.int",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "ray.external_storage": {
  "data": {
   "symbols_in_volume": [
    "ray.external_storage.NullStorage"
   ]
  },
  "type": "module"
 },
 "ray.external_storage.ExternalStorage": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.external_storage.abc"
   ]
  },
  "type": "class"
 },
 "ray.external_storage.ExternalStorage._get_objects_from_store": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.external_storage.ray"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.ExternalStorage._put_object_to_store": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.external_storage.ray"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.ExternalStorage.restore_spilled_objects": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bytes",
    "ray.external_storage.abc",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.ExternalStorage.spill_objects": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.external_storage.abc"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.FileSystemStorage": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.external_storage.ExternalStorage"
   ]
  },
  "type": "class"
 },
 "ray.external_storage.FileSystemStorage.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.external_storage.FileSystemStorage.restore_spilled_objects": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bytes.fromhex",
    "int.from_bytes",
    "len",
    "open",
    "ray.external_storage.os",
    "ray.external_storage.ray"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.FileSystemStorage.spill_objects": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "memoryview",
    "open",
    "ray.external_storage.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.external_storage.NullStorage": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.external_storage.ExternalStorage"
   ]
  },
  "type": "class"
 },
 "ray.external_storage.NullStorage.restore_spilled_objects": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.NullStorage.spill_objects": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.external_storage._external_storage": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "ray.external_storage.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "ray.external_storage.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.external_storage.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.external_storage.restore_spilled_objects": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bytes",
    "ray.external_storage._external_storage",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.setup_external_storage": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "ray.external_storage.FileSystemStorage",
    "ray.external_storage.NullStorage",
    "ray.external_storage._external_storage"
   ]
  },
  "type": "function"
 },
 "ray.external_storage.spill_objects": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.external_storage._external_storage"
   ]
  },
  "type": "function"
 },
 "ray.function_manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.function_manager.logging"
   ]
  },
  "type": "module"
 },
 "ray.function_manager.FunctionActorManager": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "ray.function_manager.FunctionActorManager.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "collections.defaultdict",
    "ray.function_manager.threading",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._create_fake_actor_class": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._create_fake_actor_class.TemporaryActor": {
  "data": {
   "lineno": 454
  },
  "type": "class"
 },
 "ray.function_manager.FunctionActorManager._create_fake_actor_class.temporary_actor_method": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._load_actor_class_from_gcs": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "Exception",
    "ray.cloudpickle.loads",
    "ray.function_manager.json",
    "ray.function_manager.logger",
    "ray.function_manager.ray",
    "ray.function_manager.time",
    "ray.function_manager.traceback",
    "ray.ray_constants.REGISTER_ACTOR_PUSH_ERROR",
    "ray.utils.ensure_str",
    "ray.utils.push_error_to_driver"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._load_actor_class_from_local": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "getattr",
    "isinstance",
    "ray.function_manager.importlib",
    "ray.function_manager.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._load_function_from_local": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "getattr",
    "ray.function_manager.FunctionExecutionInfo",
    "ray.function_manager.importlib",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._make_actor_method_executor": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._make_actor_method_executor.actor_method_executor": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "method",
    "ray.utils.is_class_method",
    "ray.utils.is_static_method",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._publish_actor_class_to_key": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager._wait_for_function": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ray.function_manager.ray",
    "ray.function_manager.time",
    "ray.ray_constants.WAIT_FOR_FUNCTION_PUSH_ERROR"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.compute_collision_identifier": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.function_manager.dis",
    "ray.function_manager.hashlib",
    "ray.function_manager.io",
    "ray.function_manager.sys"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.export": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.utils.check_oversized_pickle"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.export_actor_class": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "list",
    "ray.cloudpickle.dumps",
    "ray.function_manager.json",
    "ray.utils.check_oversized_pickle"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.fetch_and_register_remote_function": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "Exception",
    "int",
    "ray.cloudpickle.loads",
    "ray.function_manager.FunctionExecutionInfo",
    "ray.function_manager.ray",
    "ray.function_manager.traceback",
    "ray.ray_constants.REGISTER_REMOTE_FUNCTION_PUSH_ERROR",
    "ray.utils.decode",
    "ray.utils.format_error_message",
    "ray.utils.push_error_to_driver"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.fetch_and_register_remote_function.f": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.get_execution_info": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "KeyError",
    "ray.function_manager.ray",
    "ray.profiling.profile"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.get_task_counter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.function_manager.ray"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.increase_task_counter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.function_manager.ray"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionActorManager.load_actor_class": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ray._raylet.PythonFunctionDescriptor",
    "ray.function_manager.FunctionExecutionInfo",
    "ray.function_manager.inspect",
    "ray.function_manager.ray",
    "ray.utils.is_function_or_method"
   ]
  },
  "type": "function"
 },
 "ray.function_manager.FunctionExecutionInfo": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.function_manager.PythonFunctionDescriptor": {
  "data": {
   "shadows": "ray._raylet.PythonFunctionDescriptor"
  },
  "type": "import"
 },
 "ray.function_manager.check_oversized_pickle": {
  "data": {
   "shadows": "ray.utils.check_oversized_pickle"
  },
  "type": "import"
 },
 "ray.function_manager.decode": {
  "data": {
   "shadows": "ray.utils.decode"
  },
  "type": "import"
 },
 "ray.function_manager.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.function_manager.dis": {
  "data": {
   "shadows": "dis"
  },
  "type": "import"
 },
 "ray.function_manager.ensure_str": {
  "data": {
   "shadows": "ray.utils.ensure_str"
  },
  "type": "import"
 },
 "ray.function_manager.format_error_message": {
  "data": {
   "shadows": "ray.utils.format_error_message"
  },
  "type": "import"
 },
 "ray.function_manager.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "ray.function_manager.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.function_manager.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.function_manager.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.function_manager.is_class_method": {
  "data": {
   "shadows": "ray.utils.is_class_method"
  },
  "type": "import"
 },
 "ray.function_manager.is_function_or_method": {
  "data": {
   "shadows": "ray.utils.is_function_or_method"
  },
  "type": "import"
 },
 "ray.function_manager.is_static_method": {
  "data": {
   "shadows": "ray.utils.is_static_method"
  },
  "type": "import"
 },
 "ray.function_manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.function_manager.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.function_manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.function_manager.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.function_manager.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.function_manager.profiling": {
  "data": {
   "shadows": "ray.profiling"
  },
  "type": "import"
 },
 "ray.function_manager.push_error_to_driver": {
  "data": {
   "shadows": "ray.utils.push_error_to_driver"
  },
  "type": "import"
 },
 "ray.function_manager.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.function_manager.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.function_manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.function_manager.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.function_manager.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.function_manager.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.gcs_utils": {
  "data": {},
  "type": "module"
 },
 "ray.gcs_utils.ActorCheckpointIdData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ActorCheckpointIdData"
  },
  "type": "import"
 },
 "ray.gcs_utils.ActorTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ActorTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.AvailableResources": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.AvailableResources"
  },
  "type": "import"
 },
 "ray.gcs_utils.DRIVER": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "ray.gcs_utils.ErrorTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ErrorTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.ErrorType": {
  "data": {
   "shadows": "ray.core.generated.common_pb2.ErrorType"
  },
  "type": "import"
 },
 "ray.gcs_utils.FUNCTION_PREFIX": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.gcs_utils.GcsEntry": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.GcsEntry"
  },
  "type": "import"
 },
 "ray.gcs_utils.GcsNodeInfo": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.GcsNodeInfo"
  },
  "type": "import"
 },
 "ray.gcs_utils.HeartbeatBatchTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.HeartbeatBatchTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.HeartbeatTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.HeartbeatTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.JobConfig": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.JobConfig"
  },
  "type": "import"
 },
 "ray.gcs_utils.JobTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.JobTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.LOG_FILE_CHANNEL": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.gcs_utils.ObjectLocationInfo": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ObjectLocationInfo"
  },
  "type": "import"
 },
 "ray.gcs_utils.ObjectTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ObjectTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.PlacementGroupTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.PlacementGroupTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.ProfileTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ProfileTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.PubSubMessage": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.PubSubMessage"
  },
  "type": "import"
 },
 "ray.gcs_utils.RAY_ACTOR_PUBSUB_PATTERN": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.gcs_utils.RAY_ERROR_PUBSUB_PATTERN": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.gcs_utils.RAY_REPORTER_PUBSUB_PATTERN": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "ray.gcs_utils.REPORTER_CHANNEL": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.gcs_utils.ResourceDemand": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ResourceDemand"
  },
  "type": "import"
 },
 "ray.gcs_utils.ResourceLoad": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ResourceLoad"
  },
  "type": "import"
 },
 "ray.gcs_utils.ResourceMap": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ResourceMap"
  },
  "type": "import"
 },
 "ray.gcs_utils.ResourceTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.ResourceTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.TablePrefix": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.TablePrefix"
  },
  "type": "import"
 },
 "ray.gcs_utils.TablePrefix_ACTOR_string": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "ray.gcs_utils.TablePrefix_JOB_string": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "ray.gcs_utils.TablePrefix_OBJECT_string": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.gcs_utils.TablePrefix_PROFILE_string": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "ray.gcs_utils.TablePrefix_RAYLET_TASK_string": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.gcs_utils.TablePubsub": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.TablePubsub"
  },
  "type": "import"
 },
 "ray.gcs_utils.TaskTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.TaskTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.WORKER": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "ray.gcs_utils.WorkerTableData": {
  "data": {
   "shadows": "ray.core.generated.gcs_pb2.WorkerTableData"
  },
  "type": "import"
 },
 "ray.gcs_utils.XRAY_HEARTBEAT_BATCH_PATTERN": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.gcs_utils.XRAY_JOB_PATTERN": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.gcs_utils.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.gcs_utils.construct_error_message": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.core.generated.gcs_pb2.ErrorTableData"
   ]
  },
  "type": "function"
 },
 "ray.get": {
  "data": {
   "shadows": "ray.worker.get"
  },
  "type": "import"
 },
 "ray.get_actor": {
  "data": {
   "shadows": "ray.worker.get_actor"
  },
  "type": "import"
 },
 "ray.get_dashboard_url": {
  "data": {
   "shadows": "ray.worker.get_dashboard_url"
  },
  "type": "import"
 },
 "ray.get_gpu_ids": {
  "data": {
   "shadows": "ray.worker.get_gpu_ids"
  },
  "type": "import"
 },
 "ray.get_resource_ids": {
  "data": {
   "shadows": "ray.worker.get_resource_ids"
  },
  "type": "import"
 },
 "ray.get_runtime_context": {
  "data": {
   "shadows": "ray.runtime_context.get_runtime_context"
  },
  "type": "import"
 },
 "ray.import_thread": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.import_thread.logging"
   ]
  },
  "type": "module"
 },
 "ray.import_thread.ImportThread": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "ray.import_thread.ImportThread.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread._get_import_info_for_collision_detection": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.import_thread.ray"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread._process_key": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ray.import_thread.logger",
    "ray.import_thread.ray",
    "ray.profiling.profile",
    "ray.ray_constants.DUPLICATE_REMOTE_FUNCTION_THRESHOLD"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread._run": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "OSError",
    "range",
    "ray.import_thread.logger",
    "ray.import_thread.redis"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread.fetch_and_execute_function_to_run": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Exception",
    "function",
    "ray.cloudpickle.loads",
    "ray.import_thread.ray",
    "ray.import_thread.traceback",
    "ray.ray_constants.FUNCTION_TO_RUN_PUSH_ERROR",
    "ray.utils.decode",
    "ray.utils.push_error_to_driver"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread.join_import_thread": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "ray.import_thread.ImportThread.start": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.import_thread.threading"
   ]
  },
  "type": "function"
 },
 "ray.import_thread.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.import_thread.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.import_thread.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.import_thread.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.import_thread.profiling": {
  "data": {
   "shadows": "ray.profiling"
  },
  "type": "import"
 },
 "ray.import_thread.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.import_thread.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.import_thread.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "ray.import_thread.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.import_thread.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.import_thread.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.init": {
  "data": {
   "shadows": "ray.worker.init"
  },
  "type": "import"
 },
 "ray.internal": {
  "data": {},
  "type": "module"
 },
 "ray.internal.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.internal.free": {
  "data": {
   "shadows": "ray.internal.internal_api.free"
  },
  "type": "import"
 },
 "ray.internal.internal_api": {
  "data": {},
  "type": "module"
 },
 "ray.internal.internal_api.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.internal.internal_api.free": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "ray.profiling.profile",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.internal.internal_api.global_gc": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "ray.internal.internal_api.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.internal.internal_api.memory_summary": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.core.generated.node_manager_pb2.FormatGlobalMemoryInfoRequest",
    "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceStub",
    "ray.internal.internal_api.grpc"
   ]
  },
  "type": "function"
 },
 "ray.internal.internal_api.node_manager_pb2": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2"
  },
  "type": "import"
 },
 "ray.internal.internal_api.node_manager_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2_grpc"
  },
  "type": "import"
 },
 "ray.internal.internal_api.profiling": {
  "data": {
   "shadows": "ray.profiling"
  },
  "type": "import"
 },
 "ray.internal.internal_api.ray.worker": {
  "data": {
   "shadows": "ray.worker"
  },
  "type": "import"
 },
 "ray.is_initialized": {
  "data": {
   "shadows": "ray.worker.is_initialized"
  },
  "type": "import"
 },
 "ray.java_actor_class": {
  "data": {
   "shadows": "ray.cross_language.java_actor_class"
  },
  "type": "import"
 },
 "ray.java_function": {
  "data": {
   "shadows": "ray.cross_language.java_function"
  },
  "type": "import"
 },
 "ray.job_config": {
  "data": {},
  "type": "module"
 },
 "ray.job_config.JobConfig": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.job_config.JobConfig.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.job_config.JobConfig.serialize": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.job_config.ray"
   ]
  },
  "type": "function"
 },
 "ray.job_config.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.jobs": {
  "data": {
   "shadows": "ray.state.jobs"
  },
  "type": "import"
 },
 "ray.kill": {
  "data": {
   "shadows": "ray.worker.kill"
  },
  "type": "import"
 },
 "ray.log_monitor": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "ray.log_monitor.LogMonitor",
    "ray.log_monitor.argparse",
    "ray.log_monitor.args",
    "ray.log_monitor.log_monitor",
    "ray.log_monitor.logging",
    "ray.log_monitor.message",
    "ray.log_monitor.parser",
    "ray.log_monitor.platform",
    "ray.log_monitor.re",
    "ray.log_monitor.redis_client",
    "ray.log_monitor.traceback",
    "ray.log_monitor.traceback_str",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.ray_constants.LOG_MONITOR_DIED_ERROR",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.log_monitor.JOB_LOG_PATTERN": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.log_monitor.LogFileInfo": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "ray.log_monitor.LogFileInfo.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "ray.log_monitor.LogMonitor.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray._private.services.get_node_ip_address",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor.check_log_files_and_publish_updates": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "range",
    "ray.log_monitor.json",
    "ray.log_monitor.logger"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor.close_all_files": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "len",
    "ray.log_monitor.errno",
    "ray.log_monitor.logger",
    "ray.log_monitor.os",
    "ray.log_monitor.shutil"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor.open_closed_files": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "len",
    "open",
    "ray.log_monitor.errno",
    "ray.log_monitor.logger",
    "ray.log_monitor.os",
    "ray.ray_constants.LOG_MONITOR_MAX_OPEN_FILES"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor.run": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ray.log_monitor.time"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.LogMonitor.update_log_filenames": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.log_monitor.JOB_LOG_PATTERN",
    "ray.log_monitor.LogFileInfo",
    "ray.log_monitor.glob",
    "ray.log_monitor.logger",
    "ray.log_monitor.os"
   ]
  },
  "type": "function"
 },
 "ray.log_monitor.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.log_monitor.args": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "ray.log_monitor.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.log_monitor.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.log_monitor.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.log_monitor.log_monitor": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "ray.log_monitor.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.log_monitor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.log_monitor.message": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "ray.log_monitor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.log_monitor.parser": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "ray.log_monitor.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.log_monitor.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.log_monitor.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.log_monitor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.log_monitor.redis_client": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "ray.log_monitor.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.log_monitor.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.log_monitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.log_monitor.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.log_monitor.traceback_str": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "ray.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.memory_monitor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.memory_monitor.logging"
   ]
  },
  "type": "module"
 },
 "ray.memory_monitor.MemoryMonitor": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "ray.memory_monitor.MemoryMonitor.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "open",
    "ray.memory_monitor.logger",
    "ray.memory_monitor.os",
    "ray.memory_monitor.psutil",
    "ray.memory_monitor.sys"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.MemoryMonitor.get_memory_usage": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "open",
    "ray.memory_monitor.psutil"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.MemoryMonitor.raise_if_low_memory": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.memory_monitor.RayOutOfMemoryError",
    "ray.memory_monitor.get_rss",
    "ray.memory_monitor.logger",
    "ray.memory_monitor.os",
    "ray.memory_monitor.psutil",
    "ray.memory_monitor.time",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.MemoryMonitor.set_heap_limit": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "ray.memory_monitor.RayOutOfMemoryError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.memory_monitor.RayOutOfMemoryError.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.RayOutOfMemoryError.get_message": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "ray.memory_monitor.get_rss",
    "ray.memory_monitor.get_shared",
    "ray.memory_monitor.platform",
    "ray.memory_monitor.psutil",
    "round",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.get_rss": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.get_shared": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.memory_monitor.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.memory_monitor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.memory_monitor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.memory_monitor.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.memory_monitor.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.memory_monitor.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.memory_monitor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.memory_monitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.method": {
  "data": {
   "shadows": "ray.actor.method"
  },
  "type": "import"
 },
 "ray.metrics_agent": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.metrics_agent.logging"
   ]
  },
  "type": "module"
 },
 "ray.metrics_agent.CountAggregationData": {
  "data": {
   "shadows": "opencensus.stats.aggregation_data.CountAggregationData"
  },
  "type": "import"
 },
 "ray.metrics_agent.DistributionAggregationData": {
  "data": {
   "shadows": "opencensus.stats.aggregation_data.DistributionAggregationData"
  },
  "type": "import"
 },
 "ray.metrics_agent.LastValueAggregationData": {
  "data": {
   "shadows": "opencensus.stats.aggregation_data.LastValueAggregationData"
  },
  "type": "import"
 },
 "ray.metrics_agent.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.metrics_agent.Metric": {
  "data": {
   "shadows": "ray.core.generated.metrics_pb2.Metric"
  },
  "type": "import"
 },
 "ray.metrics_agent.MetricsAgent": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "ray.metrics_agent.MetricsAgent.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "opencensus.stats.stats.stats.view_manager",
    "ray.metrics_agent.threading",
    "ray.prometheus_exporter.Options",
    "ray.prometheus_exporter.new_stats_exporter"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.MetricsAgent._record_metrics": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "opencensus.metrics.export.value.ValueDouble",
    "opencensus.stats.aggregation_data.CountAggregationData",
    "opencensus.stats.aggregation_data.DistributionAggregationData",
    "opencensus.stats.aggregation_data.LastValueAggregationData",
    "opencensus.stats.measure",
    "opencensus.stats.measure.BaseMeasure",
    "opencensus.stats.measure.name",
    "opencensus.stats.view.View",
    "opencensus.stats.view_data.ViewData",
    "tuple",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.MetricsAgent.record_metric_points_from_protobuf": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.core.generated.metrics_pb2.Metric",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.metrics_agent.threading"
   ]
  },
  "type": "class"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ray.metrics_agent.ray",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.get_file_discovery_content": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.metrics_agent.json",
    "ray.metrics_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.get_target_file_name": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ray.metrics_agent.os",
    "ray.metrics_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.get_temp_file_name": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ray.metrics_agent.os",
    "ray.metrics_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.run": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "ray.metrics_agent.logger",
    "ray.metrics_agent.time",
    "ray.metrics_agent.traceback"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.PrometheusServiceDiscoveryWriter.write": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "open",
    "ray.metrics_agent.os"
   ]
  },
  "type": "function"
 },
 "ray.metrics_agent.ValueDouble": {
  "data": {
   "shadows": "opencensus.metrics.export.value.ValueDouble"
  },
  "type": "import"
 },
 "ray.metrics_agent.View": {
  "data": {
   "shadows": "opencensus.stats.view.View"
  },
  "type": "import"
 },
 "ray.metrics_agent.ViewData": {
  "data": {
   "shadows": "opencensus.stats.view_data.ViewData"
  },
  "type": "import"
 },
 "ray.metrics_agent.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.metrics_agent.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.metrics_agent.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.metrics_agent.measure_module": {
  "data": {
   "shadows": "opencensus.stats.measure"
  },
  "type": "import"
 },
 "ray.metrics_agent.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.metrics_agent.prometheus_exporter": {
  "data": {
   "shadows": "ray.prometheus_exporter"
  },
  "type": "import"
 },
 "ray.metrics_agent.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.metrics_agent.stats_module": {
  "data": {
   "shadows": "opencensus.stats.stats"
  },
  "type": "import"
 },
 "ray.metrics_agent.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.metrics_agent.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.metrics_agent.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.monitor": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "ray.monitor.Monitor",
    "ray.monitor.argparse",
    "ray.monitor.args",
    "ray.monitor.autoscaling_config",
    "ray.monitor.logging",
    "ray.monitor.message",
    "ray.monitor.monitor",
    "ray.monitor.os",
    "ray.monitor.parser",
    "ray.monitor.ray",
    "ray.monitor.redis_client",
    "ray.monitor.traceback",
    "ray.monitor.traceback_str",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.ray_constants.MONITOR_DIED_ERROR",
    "ray.utils.setup_logger",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.monitor.LoadMetrics": {
  "data": {
   "shadows": "ray.autoscaler._private.load_metrics.LoadMetrics"
  },
  "type": "import"
 },
 "ray.monitor.Monitor": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "ray.monitor.Monitor.__del__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.autoscaler._private.autoscaler.StandardAutoscaler",
    "ray.autoscaler._private.load_metrics.LoadMetrics",
    "ray.monitor.ray"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor._run": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ray.monitor.ray",
    "ray.monitor.time"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.autoscaler_resource_request_handler": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "ray.monitor.json",
    "ray.monitor.traceback"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.destroy_autoscaler_workers": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Exception",
    "ray.autoscaler._private.commands.teardown_cluster",
    "ray.monitor.logger",
    "ray.monitor.time"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.process_messages": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "message_handler",
    "range",
    "ray.monitor.ray",
    "ray.monitor.redis"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.psubscribe": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "ray.monitor.Monitor.run": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "Exception",
    "ray.monitor.logger"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.subscribe": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "ray.monitor.Monitor.update_raylet_map": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ray.monitor.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.xray_heartbeat_batch_handler": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "list",
    "ray.monitor.logger",
    "ray.monitor.parse_resource_demands",
    "ray.monitor.ray"
   ]
  },
  "type": "function"
 },
 "ray.monitor.Monitor.xray_job_notification_handler": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ray.monitor.logger",
    "ray.monitor.ray",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.monitor.StandardAutoscaler": {
  "data": {
   "shadows": "ray.autoscaler._private.autoscaler.StandardAutoscaler"
  },
  "type": "import"
 },
 "ray.monitor.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.monitor.args": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "ray.monitor.autoscaling_config": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "ray.monitor.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.monitor.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.monitor.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.monitor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.monitor.message": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "ray.monitor.monitor": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "ray.monitor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.monitor.parse_resource_demands": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "list",
    "range",
    "ray.monitor.logger"
   ]
  },
  "type": "function"
 },
 "ray.monitor.parser": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "ray.monitor.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.monitor.ray.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.monitor.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.monitor.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.monitor.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "ray.monitor.redis_client": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "ray.monitor.setup_logger": {
  "data": {
   "shadows": "ray.utils.setup_logger"
  },
  "type": "import"
 },
 "ray.monitor.teardown_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.teardown_cluster"
  },
  "type": "import"
 },
 "ray.monitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.monitor.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.monitor.traceback_str": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "ray.new_dashboard": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.actor_utils": {
  "data": {
   "symbols_in_volume": [
    "ray.new_dashboard.actor_utils.re"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.actor_utils.PYCLASSNAME_RE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.new_dashboard.actor_utils._get_actor_group_stats": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "ray.new_dashboard.actor_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.actor_utils._group_actors_by_python_class": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.actor_utils.actor_classname_from_task_spec": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.new_dashboard.actor_utils.construct_actor_groups": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.new_dashboard.actor_utils._get_actor_group_stats",
    "ray.new_dashboard.actor_utils._group_actors_by_python_class"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.actor_utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.new_dashboard.actor_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.new_dashboard.actor_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "__name__",
    "grpc.experimental.aio.init_grpc_aio",
    "int",
    "ray.new_dashboard.agent.DashboardAgent",
    "ray.new_dashboard.agent.agent",
    "ray.new_dashboard.agent.argparse",
    "ray.new_dashboard.agent.args",
    "ray.new_dashboard.agent.asyncio",
    "ray.new_dashboard.agent.log_dir",
    "ray.new_dashboard.agent.logging",
    "ray.new_dashboard.agent.logging_handlers",
    "ray.new_dashboard.agent.loop",
    "ray.new_dashboard.agent.message",
    "ray.new_dashboard.agent.os",
    "ray.new_dashboard.agent.parser",
    "ray.new_dashboard.agent.ray",
    "ray.new_dashboard.agent.redis_client",
    "ray.new_dashboard.agent.temp_dir",
    "ray.new_dashboard.agent.traceback",
    "ray.new_dashboard.agent.traceback_str",
    "ray.new_dashboard.consts.DASHBOARD_AGENT_LOG_FILENAME",
    "ray.new_dashboard.consts.LOGGING_ROTATE_BACKUP_COUNT",
    "ray.new_dashboard.consts.LOGGING_ROTATE_BYTES",
    "ray.new_dashboard.utils.ClassMethodRouteTable",
    "ray.ray_constants.DASHBOARD_AGENT_DIED_ERROR",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.agent.DashboardAgent": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ConnectionRefusedError",
    "_check_parent",
    "aiohttp.hdrs.METH_HEAD",
    "len",
    "list",
    "object",
    "ray.core.generated.agent_manager_pb2.RegisterAgentRequest",
    "ray.core.generated.agent_manager_pb2_grpc.AgentManagerServiceStub",
    "ray.new_dashboard.agent.aiohttp",
    "ray.new_dashboard.agent.aiohttp_cors",
    "ray.new_dashboard.agent.asyncio",
    "ray.new_dashboard.agent.create_task",
    "ray.new_dashboard.agent.json",
    "ray.new_dashboard.agent.logger",
    "ray.new_dashboard.agent.os",
    "ray.new_dashboard.agent.psutil",
    "ray.new_dashboard.agent.routes",
    "ray.new_dashboard.agent.socket",
    "ray.new_dashboard.agent.sys",
    "ray.new_dashboard.consts.CONNECT_REDIS_INTERNAL_SECONDS",
    "ray.new_dashboard.consts.DASHBOARD_AGENT_CHECK_PARENT_INTERVAL_SECONDS",
    "ray.new_dashboard.consts.DASHBOARD_AGENT_PORT_PREFIX",
    "ray.new_dashboard.consts.RETRY_REDIS_CONNECTION_TIMES",
    "ray.new_dashboard.utils.get_aioredis_client"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.agent.DashboardAgent.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "grpc.experimental.aio.insecure_channel",
    "grpc.experimental.aio.server",
    "ray.new_dashboard.agent.logger",
    "ray.new_dashboard.agent.os",
    "ray.new_dashboard.agent.ray",
    "ray.new_dashboard.utils.address_tuple"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.agent.DashboardAgent._load_modules": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cls",
    "len",
    "ray.new_dashboard.agent.logger",
    "ray.new_dashboard.utils.ClassMethodRouteTable.bind",
    "ray.new_dashboard.utils.DashboardAgentModule",
    "ray.new_dashboard.utils.DashboardAgentModule.__name__",
    "ray.new_dashboard.utils.get_all_modules"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.agent.agent": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.agent_manager_pb2": {
  "data": {
   "shadows": "ray.core.generated.agent_manager_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.agent_manager_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.agent_manager_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.aiogrpc": {
  "data": {
   "shadows": "grpc.experimental.aio"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.aiohttp": {
  "data": {
   "shadows": "aiohttp"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.aiohttp_cors": {
  "data": {
   "shadows": "aiohttp_cors"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.args": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.create_task": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.dashboard_consts": {
  "data": {
   "shadows": "ray.new_dashboard.consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.hdrs": {
  "data": {
   "shadows": "aiohttp.hdrs"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.log_dir": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.logging_handlers": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.loop": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.message": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.parser": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.redis_client": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.routes": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.temp_dir": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "ray.new_dashboard.agent.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.agent.traceback_str": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.consts.AIOHTTP_CACHE_DISABLE_ENVIRONMENT_KEY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.AIOHTTP_CACHE_MAX_SIZE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.AIOHTTP_CACHE_TTL_SECONDS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.CONNECT_GCS_INTERVAL_SECONDS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.CONNECT_REDIS_INTERNAL_SECONDS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.DASHBOARD_AGENT_CHECK_PARENT_INTERVAL_SECONDS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.DASHBOARD_AGENT_LOG_FILENAME": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.DASHBOARD_AGENT_PORT_PREFIX": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.DASHBOARD_LOG_FILENAME": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.LOGGING_ROTATE_BACKUP_COUNT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.LOGGING_ROTATE_BYTES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.MAX_COUNT_OF_GCS_RPC_ERROR": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.PURGE_DATA_INTERVAL_SECONDS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.REDIS_KEY_DASHBOARD": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.REDIS_KEY_DASHBOARD_RPC": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.REDIS_KEY_GCS_SERVER_ADDRESS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.REPORT_METRICS_INTERVAL_SECONDS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.REPORT_METRICS_TIMEOUT_SECONDS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.RETRY_REDIS_CONNECTION_TIMES": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.SIGNAL_NODE_INFO_FETCHED": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.new_dashboard.consts.UPDATE_NODES_INTERVAL_SECONDS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "OSError",
    "__name__",
    "int",
    "isinstance",
    "print",
    "ray.new_dashboard.consts.DASHBOARD_LOG_FILENAME",
    "ray.new_dashboard.consts.LOGGING_ROTATE_BACKUP_COUNT",
    "ray.new_dashboard.consts.LOGGING_ROTATE_BYTES",
    "ray.new_dashboard.dashboard.Dashboard",
    "ray.new_dashboard.dashboard.argparse",
    "ray.new_dashboard.dashboard.args",
    "ray.new_dashboard.dashboard.asyncio",
    "ray.new_dashboard.dashboard.dashboard",
    "ray.new_dashboard.dashboard.errno",
    "ray.new_dashboard.dashboard.log_dir",
    "ray.new_dashboard.dashboard.logger",
    "ray.new_dashboard.dashboard.logging",
    "ray.new_dashboard.dashboard.logging_handlers",
    "ray.new_dashboard.dashboard.loop",
    "ray.new_dashboard.dashboard.message",
    "ray.new_dashboard.dashboard.os",
    "ray.new_dashboard.dashboard.parser",
    "ray.new_dashboard.dashboard.redis_client",
    "ray.new_dashboard.dashboard.sys",
    "ray.new_dashboard.dashboard.temp_dir",
    "ray.new_dashboard.dashboard.traceback",
    "ray.new_dashboard.dashboard.traceback_str",
    "ray.new_dashboard.utils.ClassMethodRouteTable",
    "ray.ray_constants.DASHBOARD_DIED_ERROR",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.dashboard.Dashboard": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.new_dashboard.dashboard.os",
    "ray.new_dashboard.dashboard.routes"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.dashboard.Dashboard.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.new_dashboard.dashboard.logger",
    "ray.new_dashboard.dashboard.setup_static_dir",
    "ray.new_dashboard.head.DashboardHead",
    "ray.new_dashboard.utils.ClassMethodRouteTable.bind"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.dashboard.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.args": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.dashboard": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.dashboard_consts": {
  "data": {
   "shadows": "ray.new_dashboard.consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.dashboard_head": {
  "data": {
   "shadows": "ray.new_dashboard.head"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.log_dir": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.logging_handlers": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.loop": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.message": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.parser": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.redis_client": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.routes": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.setup_static_dir": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "OSError",
    "ray.new_dashboard.dashboard.errno",
    "ray.new_dashboard.dashboard.os",
    "ray.new_dashboard.dashboard.routes"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.dashboard.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.temp_dir": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "ray.new_dashboard.dashboard.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.dashboard.traceback_str": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "ray.new_dashboard.datacenter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.datacenter.logging"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.datacenter.DataOrganizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "collections.defaultdict",
    "len",
    "list",
    "ray.new_dashboard.actor_utils.actor_classname_from_task_spec",
    "ray.new_dashboard.datacenter.DataSource",
    "ray.new_dashboard.datacenter.GlobalSignals",
    "ray.new_dashboard.datacenter._extract_view_data",
    "ray.new_dashboard.datacenter.logger",
    "ray.new_dashboard.memory_utils.GroupByType.STACK_TRACE",
    "ray.new_dashboard.memory_utils.SortingType.OBJECT_SIZE",
    "ray.new_dashboard.memory_utils.construct_memory_table",
    "staticmethod",
    "str",
    "sum"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.datacenter.DataSource": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.Dict"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.datacenter.Dict": {
  "data": {
   "shadows": "ray.new_dashboard.utils.Dict"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter.GlobalSignals": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.new_dashboard.consts.SIGNAL_NODE_INFO_FETCHED",
    "ray.new_dashboard.utils.Signal"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.datacenter.Signal": {
  "data": {
   "shadows": "ray.new_dashboard.utils.Signal"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter._extract_view_data": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "ray.new_dashboard.datacenter.actor_classname_from_task_spec": {
  "data": {
   "shadows": "ray.new_dashboard.actor_utils.actor_classname_from_task_spec"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter.dashboard_consts": {
  "data": {
   "shadows": "ray.new_dashboard.consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.new_dashboard.datacenter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.datacenter.memory_utils": {
  "data": {
   "shadows": "ray.new_dashboard.memory_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "grpc.experimental.aio.init_grpc_aio",
    "ray.new_dashboard.head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.head.DashboardHead": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ConnectionError",
    "Exception",
    "_async_notify",
    "_purge_data",
    "aiohttp.hdrs.METH_HEAD",
    "dict",
    "grpc.experimental.aio.AioRpcError",
    "grpc.experimental.aio.insecure_channel",
    "len",
    "ray.core.generated.gcs_service_pb2.GetAllNodeInfoRequest",
    "ray.core.generated.gcs_service_pb2_grpc.NodeInfoGcsServiceStub",
    "ray.new_dashboard.consts.CONNECT_GCS_INTERVAL_SECONDS",
    "ray.new_dashboard.consts.CONNECT_REDIS_INTERNAL_SECONDS",
    "ray.new_dashboard.consts.DASHBOARD_AGENT_PORT_PREFIX",
    "ray.new_dashboard.consts.MAX_COUNT_OF_GCS_RPC_ERROR",
    "ray.new_dashboard.consts.PURGE_DATA_INTERVAL_SECONDS",
    "ray.new_dashboard.consts.REDIS_KEY_DASHBOARD",
    "ray.new_dashboard.consts.REDIS_KEY_DASHBOARD_RPC",
    "ray.new_dashboard.consts.REDIS_KEY_GCS_SERVER_ADDRESS",
    "ray.new_dashboard.consts.RETRY_REDIS_CONNECTION_TIMES",
    "ray.new_dashboard.consts.UPDATE_NODES_INTERVAL_SECONDS",
    "ray.new_dashboard.datacenter.DataOrganizer.purge",
    "ray.new_dashboard.datacenter.DataSource.agents",
    "ray.new_dashboard.datacenter.DataSource.agents.reset",
    "ray.new_dashboard.datacenter.DataSource.node_id_to_hostname.reset",
    "ray.new_dashboard.datacenter.DataSource.node_id_to_ip.reset",
    "ray.new_dashboard.datacenter.DataSource.nodes.reset",
    "ray.new_dashboard.head.aiohttp",
    "ray.new_dashboard.head.asyncio",
    "ray.new_dashboard.head.gcs_node_info_to_dict",
    "ray.new_dashboard.head.json",
    "ray.new_dashboard.head.logger",
    "ray.new_dashboard.head.routes",
    "ray.new_dashboard.head.socket",
    "ray.new_dashboard.head.sys",
    "ray.new_dashboard.utils.NotifyQueue.get",
    "ray.new_dashboard.utils.SignalManager.freeze",
    "ray.new_dashboard.utils.get_aioredis_client",
    "set",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.head.DashboardHead.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "grpc.experimental.aio.server",
    "ray.new_dashboard.head.logger",
    "ray.new_dashboard.utils.address_tuple"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.head.DashboardHead._load_modules": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "cls",
    "len",
    "ray.new_dashboard.head.logger",
    "ray.new_dashboard.utils.ClassMethodRouteTable.bind",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.DashboardHeadModule.__name__",
    "ray.new_dashboard.utils.get_all_modules"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.head.DataOrganizer": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataOrganizer"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.DataSource": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataSource"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.aiogrpc": {
  "data": {
   "shadows": "grpc.experimental.aio"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.aiohttp": {
  "data": {
   "shadows": "aiohttp"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.dashboard_consts": {
  "data": {
   "shadows": "ray.new_dashboard.consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.gcs_node_info_to_dict": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.message_to_dict"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.head.gcs_service_pb2": {
  "data": {
   "shadows": "ray.core.generated.gcs_service_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.gcs_service_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.gcs_service_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.hdrs": {
  "data": {
   "shadows": "aiohttp.hdrs"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.routes": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.new_dashboard.head.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.new_dashboard.head.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray._raylet.ActorID.size",
    "ray._raylet.JobID.size",
    "ray._raylet.TaskID.size",
    "ray.new_dashboard.memory_utils.ACTORID_BYTES_SIZE",
    "ray.new_dashboard.memory_utils.JOBID_BYTES_SIZE",
    "ray.new_dashboard.memory_utils.TASKID_BYTES_SIZE",
    "ray.new_dashboard.memory_utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.memory_utils.ACTORID_BYTES_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.ACTORID_RANDOM_BITS_SIZE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.ActorID": {
  "data": {
   "shadows": "ray._raylet.ActorID"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.GroupByType": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.memory_utils.JOBID_BYTES_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.JobID": {
  "data": {
   "shadows": "ray._raylet.JobID"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.MemoryTable": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "ray.new_dashboard.memory_utils.GroupByType",
    "ray.new_dashboard.memory_utils.MemoryTableEntry",
    "ray.new_dashboard.memory_utils.SortingType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.__repr__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.__str__": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable._group_by": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "ray.new_dashboard.memory_utils.GroupByType",
    "ray.new_dashboard.memory_utils.MemoryTable"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable._sort_by": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "ray.new_dashboard.memory_utils.SortingType"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.as_dict": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.get_entries": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.insert_entry": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ray.new_dashboard.memory_utils.MemoryTableEntry"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.setup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.new_dashboard.memory_utils.GroupByType",
    "ray.new_dashboard.memory_utils.SortingType"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTable.summarize": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ray.new_dashboard.memory_utils.ReferenceType"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "ray.new_dashboard.memory_utils.decode_object_ref_if_needed",
    "ray.new_dashboard.memory_utils.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.__repr__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.__str__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry._get_reference_type": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "ray.new_dashboard.memory_utils.ReferenceType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry._is_object_ref_actor_handle": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "ray.new_dashboard.memory_utils.ACTORID_RANDOM_BITS_SIZE",
    "ray.new_dashboard.memory_utils.TASKID_RANDOM_BITS_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.as_dict": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.group_key": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "ray.new_dashboard.memory_utils.GroupByType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.MemoryTableEntry.is_valid": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.ReferenceType": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "ray.new_dashboard.memory_utils.SortingType": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.memory_utils.TASKID_BYTES_SIZE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.TASKID_RANDOM_BITS_SIZE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.TaskID": {
  "data": {
   "shadows": "ray._raylet.TaskID"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.construct_memory_table": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ray.new_dashboard.memory_utils.GroupByType",
    "ray.new_dashboard.memory_utils.MemoryTable",
    "ray.new_dashboard.memory_utils.MemoryTableEntry",
    "ray.new_dashboard.memory_utils.SortingType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.decode_object_ref_if_needed": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bytes",
    "ray.new_dashboard.memory_utils.base64",
    "ray.new_dashboard.memory_utils.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.memory_utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.new_dashboard.memory_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.memory_utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.log": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.log.log_agent": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.log.log_agent.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.log.log_agent.LogAgent": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.DashboardAgentModule"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.log.log_agent.LogAgent.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.log.log_agent.mimetypes",
    "ray.new_dashboard.modules.log.log_agent.routes",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.log_agent.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_agent.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.log.log_agent.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_agent.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_agent.routes": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.log.log_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.log.log_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.log.log_head.DataSource": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataSource"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.GlobalSignals": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.GlobalSignals"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.LogHead": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.new_dashboard.datacenter.DataSource.agents.get",
    "ray.new_dashboard.datacenter.DataSource.agents.items",
    "ray.new_dashboard.datacenter.DataSource.node_id_to_ip",
    "ray.new_dashboard.modules.log.log_head.routes",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.log.log_head.LogHead.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.new_dashboard.datacenter.GlobalSignals.node_info_fetched.append",
    "ray.new_dashboard.modules.log.log_head.mimetypes",
    "ray.new_dashboard.modules.log.log_head.routes",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.log_head.LogHead._directory_as_html": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.log_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.log.log_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.log_head.routes": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.log.test_log": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.log.test_log.logging",
    "ray.new_dashboard.modules.log.test_log.os",
    "ray.new_dashboard.modules.log.test_log.pytest",
    "ray.new_dashboard.modules.log.test_log.sys"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.log.test_log.LogUrlParser": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.log.test_log.LogUrlParser.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.LogUrlParser.error": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.log.test_log.logger"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.LogUrlParser.get_urls": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.LogUrlParser.handle_starttag": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.format_web_url": {
  "data": {
   "shadows": "ray.test_utils.format_web_url"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.html.parser": {
  "data": {
   "shadows": "html.parser"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.log.test_log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.test_log": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.new_dashboard.modules.log.test_log.LogUrlParser",
    "ray.new_dashboard.modules.log.test_log.ray",
    "ray.new_dashboard.modules.log.test_log.requests",
    "ray.new_dashboard.modules.log.test_log.time",
    "ray.new_dashboard.modules.log.test_log.traceback",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_until_server_available",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.test_log.write_log": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "print",
    "ray.new_dashboard.modules.log.test_log.ray"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.log.test_log.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.log.test_log.wait_until_server_available": {
  "data": {
   "shadows": "ray.test_utils.wait_until_server_available"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.logical_view.logical_view_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.DataOrganizer": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataOrganizer"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.LogicalViewHead": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "KeyError",
    "grpc.experimental.aio.AioRpcError",
    "grpc.experimental.aio.insecure_channel",
    "ray.core.generated.core_worker_pb2.KillActorRequest",
    "ray.core.generated.core_worker_pb2_grpc.CoreWorkerServiceStub",
    "ray.new_dashboard.actor_utils.construct_actor_groups",
    "ray.new_dashboard.datacenter.DataOrganizer.get_actor_creation_tasks",
    "ray.new_dashboard.datacenter.DataOrganizer.get_all_actors",
    "ray.new_dashboard.modules.logical_view.logical_view_head.routes",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.rest_response"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.actor_utils": {
  "data": {
   "shadows": "ray.new_dashboard.actor_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.aiogrpc": {
  "data": {
   "shadows": "grpc.experimental.aio"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.core_worker_pb2": {
  "data": {
   "shadows": "ray.core.generated.core_worker_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.core_worker_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.core_worker_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.rest_response": {
  "data": {
   "shadows": "ray.new_dashboard.utils.rest_response"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.logical_view_head.routes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.logging",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.os",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.pytest",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.sys"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.format_web_url": {
  "data": {
   "shadows": "ray.test_utils.format_web_url"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.test_actor_groups": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.requests",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.time",
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.traceback",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_until_server_available",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.test_actor_groups.Foo": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.test_actor_groups.Foo.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.test_actor_groups.Foo.do_task": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.test_actor_groups.InfeasibleActor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.logical_view.test_logical_view_head.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.logical_view.test_logical_view_head.wait_until_server_available": {
  "data": {
   "shadows": "ray.test_utils.wait_until_server_available"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "gpustat.core",
    "ray.new_dashboard.modules.reporter.reporter_agent.logger",
    "ray.new_dashboard.modules.reporter.reporter_agent.logging"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.MetricsAgent": {
  "data": {
   "shadows": "ray.metrics_agent.MetricsAgent"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "open",
    "ray.core.generated.reporter_pb2.GetProfilingStatsReply",
    "ray.core.generated.reporter_pb2.ReportMetricsReply",
    "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer",
    "ray.core.generated.reporter_pb2_grpc.add_ReporterServiceServicer_to_server",
    "ray.new_dashboard.modules.reporter.reporter_agent.aioredis",
    "ray.new_dashboard.modules.reporter.reporter_agent.asyncio",
    "ray.new_dashboard.modules.reporter.reporter_agent.jsonify_asdict",
    "ray.new_dashboard.modules.reporter.reporter_agent.logger",
    "ray.new_dashboard.modules.reporter.reporter_agent.os",
    "ray.new_dashboard.modules.reporter.reporter_agent.ray",
    "ray.new_dashboard.modules.reporter.reporter_agent.subprocess",
    "ray.new_dashboard.modules.reporter.reporter_agent.traceback",
    "ray.new_dashboard.modules.reporter.reporter_consts.REPORTER_UPDATE_INTERVAL_MS",
    "ray.new_dashboard.utils.DashboardAgentModule"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.metrics_agent.MetricsAgent",
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "ray.new_dashboard.modules.reporter.reporter_agent.ray",
    "ray.new_dashboard.modules.reporter.reporter_agent.socket",
    "ray.new_dashboard.modules.reporter.reporter_consts.REPORTER_PREFIX",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_all_stats": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.datetime",
    "ray.new_dashboard.utils.to_posix_time"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_boot_time": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_cpu_percent": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_disk_usage": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.os",
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "ray.new_dashboard.modules.reporter.reporter_agent.ray",
    "ray.new_dashboard.modules.reporter.reporter_agent.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_gpu_usage": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "gpustat.core",
    "gpustat.core.new_query",
    "ray.new_dashboard.modules.reporter.reporter_agent.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_load_avg": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.os",
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "ray.new_dashboard.modules.reporter.reporter_agent.sys",
    "round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_mem_usage": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_network_stats": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_raylet_cmdline": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ProcessLookupError",
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent._get_workers": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.psutil",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.aioredis": {
  "data": {
   "shadows": "aioredis"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.gpustat": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.jsonify_asdict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.reporter_agent.json",
    "ray.new_dashboard.modules.reporter.reporter_agent.recursive_asdict",
    "ray.new_dashboard.utils.to_google_style"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ray.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.recursive_asdict": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.reporter_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.reporter.reporter_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.reporter_pb2": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.reporter_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_agent.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_consts": {
  "data": {
   "symbols_in_volume": [
    "ray.ray_constants.env_integer"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.reporter.reporter_consts.REPORTER_PREFIX": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_consts.REPORTER_UPDATE_INTERVAL_MS": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_consts.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.reporter.reporter_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.DEBUG_AUTOSCALING_ERROR": {
  "data": {
   "shadows": "ray.autoscaler._private.util.DEBUG_AUTOSCALING_ERROR"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.DEBUG_AUTOSCALING_STATUS": {
  "data": {
   "shadows": "ray.autoscaler._private.util.DEBUG_AUTOSCALING_STATUS"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.DataSource": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataSource"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.Receiver": {
  "data": {
   "shadows": "aioredis.pubsub.Receiver"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ReportHead": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "FileNotFoundError",
    "KeyError",
    "aioredis.pubsub.Receiver",
    "grpc.experimental.aio.insecure_channel",
    "int",
    "open",
    "ray.autoscaler._private.util.DEBUG_AUTOSCALING_ERROR",
    "ray.autoscaler._private.util.DEBUG_AUTOSCALING_STATUS",
    "ray.core.generated.reporter_pb2.GetProfilingStatsRequest",
    "ray.core.generated.reporter_pb2_grpc.ReporterServiceStub",
    "ray.new_dashboard.datacenter.DataSource.node_id_to_ip",
    "ray.new_dashboard.datacenter.DataSource.node_physical_stats",
    "ray.new_dashboard.modules.reporter.reporter_consts.REPORTER_PREFIX",
    "ray.new_dashboard.modules.reporter.reporter_head.json",
    "ray.new_dashboard.modules.reporter.reporter_head.logger",
    "ray.new_dashboard.modules.reporter.reporter_head.os",
    "ray.new_dashboard.modules.reporter.reporter_head.ray",
    "ray.new_dashboard.modules.reporter.reporter_head.routes",
    "ray.new_dashboard.modules.reporter.reporter_head.yaml",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.rest_response"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ReportHead.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.new_dashboard.datacenter.DataSource.agents.signal.append",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.aiogrpc": {
  "data": {
   "shadows": "grpc.experimental.aio"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ray.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.reporter_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.reporter.reporter_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.reporter_pb2": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.reporter_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.routes": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.reporter_head.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.reporter.test_reporter.logging",
    "ray.new_dashboard.modules.reporter.test_reporter.os",
    "ray.new_dashboard.modules.reporter.test_reporter.pytest",
    "ray.new_dashboard.modules.reporter.test_reporter.sys"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.RayTestTimeoutException": {
  "data": {
   "shadows": "ray.test_utils.RayTestTimeoutException"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.format_web_url": {
  "data": {
   "shadows": "ray.test_utils.format_web_url"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_node_physical_stats": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "range",
    "ray.new_dashboard.modules.reporter.test_reporter.ray",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_for_condition",
    "ray.test_utils.wait_until_server_available",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_node_physical_stats.Actor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.test_reporter.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_node_physical_stats.Actor.getpid": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.test_reporter.os"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_node_physical_stats._check_workers": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.new_dashboard.modules.reporter.test_reporter.logger",
    "ray.new_dashboard.modules.reporter.test_reporter.requests",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_profiling": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.test_reporter.logger",
    "ray.new_dashboard.modules.reporter.test_reporter.ray",
    "ray.new_dashboard.modules.reporter.test_reporter.requests",
    "ray.new_dashboard.modules.reporter.test_reporter.time",
    "ray.test_utils.RayTestTimeoutException",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_until_server_available"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_profiling.Actor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.test_reporter.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.test_profiling.Actor.getpid": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.reporter.test_reporter.os"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.wait_for_condition": {
  "data": {
   "shadows": "ray.test_utils.wait_for_condition"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.reporter.test_reporter.wait_until_server_available": {
  "data": {
   "shadows": "ray.test_utils.wait_until_server_available"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts.ACTOR_CHANNEL": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts.ERROR_INFO_UPDATE_INTERVAL_SECONDS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts.LOG_INFO_UPDATE_INTERVAL_SECONDS": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts.NODE_STATS_UPDATE_INTERVAL_SECONDS": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_consts.RETRY_GET_ALL_ACTOR_INFO_INTERVAL_SECONDS": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.DataOrganizer": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataOrganizer"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.DataSource": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataSource"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.GroupByType": {
  "data": {
   "shadows": "ray.new_dashboard.memory_utils.GroupByType"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.Receiver": {
  "data": {
   "shadows": "aioredis.pubsub.Receiver"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.SortingType": {
  "data": {
   "shadows": "ray.new_dashboard.memory_utils.SortingType"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.StatsCollector": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "aioredis.pubsub.Receiver",
    "grpc.experimental.aio.insecure_channel",
    "int",
    "len",
    "list",
    "ray.core.generated.gcs_service_pb2.GetAllActorInfoRequest",
    "ray.core.generated.gcs_service_pb2_grpc.ActorInfoGcsServiceStub",
    "ray.core.generated.gcs_service_pb2_grpc.JobInfoGcsServiceStub",
    "ray.core.generated.node_manager_pb2.GetNodeStatsRequest",
    "ray.core.generated.node_manager_pb2_grpc.NodeManagerServiceStub",
    "ray.new_dashboard.datacenter.DataOrganizer.get_all_node_details",
    "ray.new_dashboard.datacenter.DataOrganizer.get_all_node_summary",
    "ray.new_dashboard.datacenter.DataOrganizer.get_memory_table",
    "ray.new_dashboard.datacenter.DataOrganizer.get_node_info",
    "ray.new_dashboard.datacenter.DataSource.actors",
    "ray.new_dashboard.datacenter.DataSource.actors.reset",
    "ray.new_dashboard.datacenter.DataSource.ip_and_pid_to_errors",
    "ray.new_dashboard.datacenter.DataSource.ip_and_pid_to_errors.get",
    "ray.new_dashboard.datacenter.DataSource.ip_and_pid_to_logs",
    "ray.new_dashboard.datacenter.DataSource.ip_and_pid_to_logs.get",
    "ray.new_dashboard.datacenter.DataSource.node_stats",
    "ray.new_dashboard.datacenter.DataSource.nodes.get",
    "ray.new_dashboard.datacenter.DataSource.nodes.values",
    "ray.new_dashboard.memory_utils.GroupByType",
    "ray.new_dashboard.memory_utils.SortingType",
    "ray.new_dashboard.modules.stats_collector.stats_collector_consts.ACTOR_CHANNEL",
    "ray.new_dashboard.modules.stats_collector.stats_collector_consts.NODE_STATS_UPDATE_INTERVAL_SECONDS",
    "ray.new_dashboard.modules.stats_collector.stats_collector_consts.RETRY_GET_ALL_ACTOR_INFO_INTERVAL_SECONDS",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.actor_table_data_to_dict",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.asyncio",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.json",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.logger",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.node_stats_to_dict",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.re",
    "ray.new_dashboard.modules.stats_collector.stats_collector_head.routes",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.aiohttp_cache",
    "ray.new_dashboard.utils.async_loop_forever",
    "ray.new_dashboard.utils.rest_response",
    "ray.utils.binary_to_hex",
    "set",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.StatsCollector.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.new_dashboard.datacenter.DataSource.nodes.signal.append",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.actor_table_data_to_dict": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.message_to_dict"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.aiogrpc": {
  "data": {
   "shadows": "grpc.experimental.aio"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.async_loop_forever": {
  "data": {
   "shadows": "ray.new_dashboard.utils.async_loop_forever"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.gcs_service_pb2": {
  "data": {
   "shadows": "ray.core.generated.gcs_service_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.gcs_service_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.gcs_service_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.node_manager_pb2": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.node_manager_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.node_manager_pb2_grpc"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.node_stats_to_dict": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.message_to_dict"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.ray.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.routes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.stats_collector_head.stats_collector_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.stats_collector.stats_collector_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.logging",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.os",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.pytest",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.sys"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.format_web_url": {
  "data": {
   "shadows": "ray.test_utils.format_web_url"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_get_all_node_details": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "range",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_for_condition",
    "ray.test_utils.wait_until_server_available"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_get_all_node_details.ActorWithObjs": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_get_all_node_details.ActorWithObjs.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_get_all_node_details.ActorWithObjs.get_obj": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_get_all_node_details.check_node_details": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AssertionError",
    "IndexError",
    "KeyError",
    "len",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_memory_table": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "range",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_for_condition",
    "ray.test_utils.wait_until_server_available"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_memory_table.ActorWithObjs": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_memory_table.ActorWithObjs.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_memory_table.ActorWithObjs.get_obj": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_memory_table.check_mem_table": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_multi_nodes_info": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.pytest",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_for_condition",
    "ray.test_utils.wait_until_server_available"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_multi_nodes_info._check_nodes": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.logger",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_node_info": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.requests",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.time",
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.traceback",
    "ray.test_utils.format_web_url",
    "ray.test_utils.wait_until_server_available",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_node_info.Actor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.ray"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.test_node_info.Actor.getpid": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.stats_collector.test_stats_collector.os"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.wait_for_condition": {
  "data": {
   "shadows": "ray.test_utils.wait_for_condition"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.stats_collector.test_stats_collector.wait_until_server_available": {
  "data": {
   "shadows": "ray.test_utils.wait_until_server_available"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.test.test_agent": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.test.test_agent.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.test.test_agent.TestAgent": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.test.test_agent.routes",
    "ray.new_dashboard.modules.test.test_consts.TEST_MODULE_ENVIRONMENT_KEY",
    "ray.new_dashboard.modules.test.test_utils.http_get",
    "ray.new_dashboard.utils.DashboardAgentModule",
    "ray.new_dashboard.utils.dashboard_module",
    "ray.ray_constants.env_bool"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.test.test_agent.TestAgent.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.test.test_agent.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_agent.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_agent.env_bool": {
  "data": {
   "shadows": "ray.ray_constants.env_bool"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_agent.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_agent.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_agent.routes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_agent.test_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.test.test_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_agent.test_utils": {
  "data": {
   "shadows": "ray.new_dashboard.modules.test.test_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_consts": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.test.test_consts.TEST_MODULE_ENVIRONMENT_KEY": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_head": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.test.test_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.test.test_head.DataSource": {
  "data": {
   "shadows": "ray.new_dashboard.datacenter.DataSource"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.TestHead": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "ray.new_dashboard.datacenter.DataSource.__dict__.get",
    "ray.new_dashboard.datacenter.DataSource.__dict__.items",
    "ray.new_dashboard.modules.test.test_consts.TEST_MODULE_ENVIRONMENT_KEY",
    "ray.new_dashboard.modules.test.test_head.routes",
    "ray.new_dashboard.modules.test.test_head.time",
    "ray.new_dashboard.modules.test.test_utils.http_get",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.aiohttp_cache",
    "ray.new_dashboard.utils.dashboard_module",
    "ray.new_dashboard.utils.rest_response",
    "ray.ray_constants.env_bool"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.test.test_head.TestHead.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.new_dashboard.datacenter.DataSource.agents.signal.append",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.test.test_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.env_bool": {
  "data": {
   "shadows": "ray.ray_constants.env_bool"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.routes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_head.test_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.test.test_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.test_utils": {
  "data": {
   "shadows": "ray.new_dashboard.modules.test.test_utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_head.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.new_dashboard.modules.test.test_utils.async_timeout",
    "ray.new_dashboard.modules.test.test_utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.test.test_utils.async_timeout": {
  "data": {
   "shadows": "async_timeout"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.test.test_utils.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.test.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.tune.tune_consts": {
  "data": {},
  "type": "module"
 },
 "ray.new_dashboard.modules.tune.tune_consts.TUNE_STATS_UPDATE_INTERVAL_SECONDS": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.tune.tune_head": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.new_dashboard.modules.tune.tune_head.logging",
    "ray.new_dashboard.utils.ClassMethodRouteTable",
    "ray.tune.Analysis"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.modules.tune.tune_head.Analysis": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.new_dashboard.modules.tune.tune_consts.TUNE_STATS_UPDATE_INTERVAL_SECONDS",
    "ray.new_dashboard.modules.tune.tune_head.routes",
    "ray.new_dashboard.utils.DashboardHeadModule",
    "ray.new_dashboard.utils.async_loop_forever",
    "ray.new_dashboard.utils.rest_response",
    "ray.tune.Analysis",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController._enable_tensorboard": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "str",
    "tensorboard.program.TensorBoard"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController.clean_trials": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "ray.new_dashboard.modules.tune.tune_head.datetime",
    "ray.new_dashboard.modules.tune.tune_head.os",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController.collect_errors": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "filter",
    "len",
    "open",
    "ray.new_dashboard.modules.tune.tune_head.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController.get_stats": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.tune.tune_head.copy"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.TuneController.set_experiment": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.new_dashboard.modules.tune.tune_head.os"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.modules.tune.tune_head.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.async_loop_forever": {
  "data": {
   "shadows": "ray.new_dashboard.utils.async_loop_forever"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.dashboard_utils": {
  "data": {
   "shadows": "ray.new_dashboard.utils"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.tune.tune_head.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.program": {
  "data": {
   "shadows": "tensorboard.program"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.rest_response": {
  "data": {
   "shadows": "ray.new_dashboard.utils.rest_response"
  },
  "type": "import"
 },
 "ray.new_dashboard.modules.tune.tune_head.routes": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.new_dashboard.modules.tune.tune_head.tune_consts": {
  "data": {
   "shadows": "ray.new_dashboard.modules.tune.tune_consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ConnectionError",
    "__name__",
    "aiohttp.hdrs.METH_DELETE",
    "aiohttp.hdrs.METH_GET",
    "collections.namedtuple",
    "range",
    "ray.new_dashboard.utils.aioredis",
    "ray.new_dashboard.utils.asyncio",
    "ray.new_dashboard.utils.logger",
    "ray.new_dashboard.utils.logging",
    "ray.new_dashboard.utils.socket"
   ]
  },
  "type": "module"
 },
 "ray.new_dashboard.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.Bunch": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.Bunch.__getattr__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Bunch.__setattr__": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Change": {
  "data": {
   "lineno": 421
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.Change.__init__": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Change.__str__": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "ray.new_dashboard.utils.collections"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable._BindInfo": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable._BindInfo.__init__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable._register_route": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable._register_route._wrapper": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "handler",
    "ray.new_dashboard.utils.functools",
    "ray.new_dashboard.utils.rest_response",
    "ray.new_dashboard.utils.traceback"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.bind": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "classmethod",
    "ray.new_dashboard.utils.inspect"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.bind.predicate": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "hasattr",
    "ray.new_dashboard.utils.inspect"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.bound_routes": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "aiohttp.web.RouteDef",
    "classmethod",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.delete": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_DELETE",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.get": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_GET",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.head": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_HEAD",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.patch": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_PATCH",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.post": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_POST",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.put": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_PUT",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.routes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.static": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "aiohttp.typedefs.PathLike",
    "classmethod",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.ClassMethodRouteTable.view": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "aiohttp.hdrs.METH_ANY",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.CustomEncoder": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.json"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.CustomEncoder.default": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "ray.new_dashboard.utils.json",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.DashboardAgentModule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.abc"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.DashboardAgentModule.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.DashboardHeadModule": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.abc"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.DashboardHeadModule.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "collections.abc.MutableMapping",
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.Dict.__delitem__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "len",
    "ray.new_dashboard.utils.Change",
    "ray.new_dashboard.utils.Dict",
    "ray.new_dashboard.utils.NotifyQueue"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__getitem__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.copy"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict",
    "ray.new_dashboard.utils.Signal"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__iter__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "iter",
    "ray.new_dashboard.utils.copy"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__len__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__setitem__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "len",
    "ray.new_dashboard.utils.Change",
    "ray.new_dashboard.utils.Dict",
    "ray.new_dashboard.utils.NotifyQueue"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.__str__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.Dict.reset": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "collections.abc.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.FrozenList": {
  "data": {
   "shadows": "aiohttp.frozenlist.FrozenList"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.MessageToDict": {
  "data": {
   "shadows": "google.protobuf.json_format.MessageToDict"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.MutableMapping": {
  "data": {
   "shadows": "collections.abc.MutableMapping"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.NotifyQueue": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "classmethod",
    "ray.new_dashboard.utils.asyncio"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.NotifyQueue.put": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.PathLike": {
  "data": {
   "shadows": "aiohttp.typedefs.PathLike"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.RouteDef": {
  "data": {
   "shadows": "aiohttp.web.RouteDef"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.Signal": {
  "data": {
   "lineno": 400
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.Signal.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.SignalManager",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.SignalManager": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "aiohttp.frozenlist.FrozenList"
   ]
  },
  "type": "class"
 },
 "ray.new_dashboard.utils.SignalManager.freeze": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.SignalManager.register": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils._AIOHTTP_CACHE_NOBODY_METHODS": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "ray.new_dashboard.utils._AiohttpCacheValue": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "ray.new_dashboard.utils.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.address_tuple": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.aiohttp.signals": {
  "data": {
   "shadows": "aiohttp.signals"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.aiohttp.web": {
  "data": {
   "shadows": "aiohttp.web"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.aiohttp_cache": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "_wrapper",
    "ray.new_dashboard.consts.AIOHTTP_CACHE_DISABLE_ENVIRONMENT_KEY",
    "ray.new_dashboard.consts.AIOHTTP_CACHE_MAX_SIZE",
    "ray.new_dashboard.consts.AIOHTTP_CACHE_TTL_SECONDS",
    "ray.new_dashboard.utils.collections",
    "ray.new_dashboard.utils.inspect",
    "ray.ray_constants.env_bool"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.aiohttp_cache._wrapper": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "handler",
    "ray.new_dashboard.utils._AIOHTTP_CACHE_NOBODY_METHODS",
    "ray.new_dashboard.utils.create_task",
    "ray.new_dashboard.utils.functools",
    "ray.new_dashboard.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.aiohttp_cache._wrapper._update_cache": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "len",
    "ray.new_dashboard.utils._AiohttpCacheValue",
    "ray.new_dashboard.utils.rest_response",
    "ray.new_dashboard.utils.time",
    "ray.new_dashboard.utils.traceback"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.aioredis": {
  "data": {
   "shadows": "aioredis"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.async_loop_forever": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "_wrapper"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.async_loop_forever._wrapper": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Exception",
    "coro",
    "ray.new_dashboard.utils.asyncio",
    "ray.new_dashboard.utils.functools",
    "ray.new_dashboard.utils.logger"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.create_task": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.new_dashboard.utils.dashboard_consts": {
  "data": {
   "shadows": "ray.new_dashboard.consts"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.dashboard_module": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.dashboard_module._cls_wrapper": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.env_bool": {
  "data": {
   "shadows": "ray.ray_constants.env_bool"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.get_all_modules": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "getattr",
    "ray.new_dashboard.utils.importlib",
    "ray.new_dashboard.utils.logger",
    "ray.new_dashboard.utils.pkgutil"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.hdrs": {
  "data": {
   "shadows": "aiohttp.hdrs"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.new_dashboard.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.message_to_dict": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "_decode_keys",
    "google.protobuf.json_format.MessageToDict"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.message_to_dict._decode_keys": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "_decode_keys",
    "base64.b64decode",
    "dict",
    "isinstance",
    "list",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.ray.new_dashboard.modules": {
  "data": {
   "shadows": "ray.new_dashboard.modules"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.rest_response": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.CustomEncoder",
    "ray.new_dashboard.utils.functools",
    "ray.new_dashboard.utils.json",
    "ray.new_dashboard.utils.os",
    "ray.new_dashboard.utils.to_google_style"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.new_dashboard.utils.to_camel_case": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.to_google_style": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "ray.new_dashboard.utils.to_camel_case"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.to_posix_time": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ray.new_dashboard.utils.datetime"
   ]
  },
  "type": "function"
 },
 "ray.new_dashboard.utils.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.node": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.node.logging"
   ]
  },
  "type": "module"
 },
 "ray.node.NUMBER_OF_PORT_RETRIES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.node.Node": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ray.node.Node.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "ray.node.datetime",
    "ray.node.os",
    "ray.node.ray",
    "ray.node.socket"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._get_log_file_names": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ray.node.os"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._get_unused_port": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "OSError",
    "range",
    "ray.node.NUMBER_OF_PORT_RETRIES",
    "ray.node.logger",
    "ray.node.random",
    "ray.node.socket"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._init_temp": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ray.node.SESSION_LATEST",
    "ray.node.collections",
    "ray.node.os",
    "ray.node.ray",
    "ray.utils.try_to_create_directory",
    "ray.utils.try_to_symlink"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._kill_process_type": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "open",
    "ray.node.os",
    "ray.node.signal",
    "ray.node.subprocess",
    "ray.node.time",
    "ray.ray_constants.PROCESS_TYPE_REDIS_SERVER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._make_inc_temp": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "FileExistsError",
    "ray.node.errno",
    "ray.node.os",
    "ray.node.ray",
    "ray.node.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._prepare_socket_file": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "OSError",
    "len",
    "ray.node.os",
    "ray.node.sys",
    "ray.utils.try_to_create_directory"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._register_shutdown_hooks": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ray.node.atexit",
    "ray.node.ray"
   ]
  },
  "type": "function"
 },
 "ray.node.Node._register_shutdown_hooks.atexit_handler": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.node.Node._register_shutdown_hooks.sigterm_handler": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ray.node.sys"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.address": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.address_info": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.any_processes_alive": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.create_redis_client": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ray.node.ray"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.dead_processes": {
  "data": {
   "lineno": 1069
  },
  "type": "function"
 },
 "ray.node.Node.get_job_redirected_log_file": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "bytes",
    "ray.node.os",
    "ray.node.ray"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.get_log_file_handles": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ray.node.os",
    "ray.utils.open_log"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.get_logs_dir_path": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "ray.node.Node.get_resource_spec": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "merge_resources",
    "ray.node.json",
    "ray.node.logger",
    "ray.node.os",
    "ray.ray_constants.RESOURCES_ENVIRONMENT_VARIABLE",
    "ray.resource_spec.ResourceSpec"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.get_resource_spec.merge_resources": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ray.node.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.get_session_dir_path": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "ray.node.Node.get_sockets_dir_path": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "ray.node.Node.get_temp_dir_path": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "ray.node.Node.kill_all_processes": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "list",
    "ray.ray_constants.PROCESS_TYPE_GCS_SERVER",
    "ray.ray_constants.PROCESS_TYPE_RAYLET",
    "ray.ray_constants.PROCESS_TYPE_REAPER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_dashboard": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_DASHBOARD"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_gcs_server": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_GCS_SERVER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_log_monitor": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_LOG_MONITOR"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_monitor": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_MONITOR"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_plasma_store": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_PLASMA_STORE"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_raylet": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_RAYLET"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_reaper": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_REAPER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_redis": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_REDIS_SERVER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.kill_reporter": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "ray.ray_constants.PROCESS_TYPE_REPORTER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.live_processes": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "ray.node.Node.load_code_from_local": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.metrics_export_port": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.node_ip_address": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.node_manager_port": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.object_ref_seed": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.plasma_store_socket_name": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.raylet_ip_address": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.raylet_socket_name": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.redis_address": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.redis_password": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.remaining_processes_alive": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.socket": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_dashboard": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ray.node.os",
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_DASHBOARD"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_gcs_server": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_GCS_SERVER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_head_processes": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "ray.node.logger"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_log_monitor": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_LOG_MONITOR"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_monitor": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_MONITOR"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_plasma_store": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "bool",
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_PLASMA_STORE"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_ray_processes": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "ray.node.logger",
    "ray.node.os",
    "ray.node.ray"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_raylet": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_RAYLET"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_reaper_process": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_REAPER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_redis": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "range",
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_REDIS_SERVER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_reporter": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ray.node.ray",
    "ray.ray_constants.PROCESS_TYPE_REPORTER"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.start_worker": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.unique_id": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.Node.webui_url": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.node.ResourceSpec": {
  "data": {
   "shadows": "ray.resource_spec.ResourceSpec"
  },
  "type": "import"
 },
 "ray.node.SESSION_LATEST": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.node.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.node.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.node.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.node.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.node.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.node.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.node.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.node.open_log": {
  "data": {
   "shadows": "ray.utils.open_log"
  },
  "type": "import"
 },
 "ray.node.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.node.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.node.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.node.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.node.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.node.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.node.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "ray.node.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.node.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.node.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.node.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.node.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.node.try_to_create_directory": {
  "data": {
   "shadows": "ray.utils.try_to_create_directory"
  },
  "type": "import"
 },
 "ray.node.try_to_symlink": {
  "data": {
   "shadows": "ray.utils.try_to_symlink"
  },
  "type": "import"
 },
 "ray.nodes": {
  "data": {
   "shadows": "ray.state.nodes"
  },
  "type": "import"
 },
 "ray.object_transfer_timeline": {
  "data": {
   "shadows": "ray.state.object_transfer_timeline"
  },
  "type": "import"
 },
 "ray.objects": {
  "data": {
   "shadows": "ray.state.objects"
  },
  "type": "import"
 },
 "ray.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.parameter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.parameter.logging"
   ]
  },
  "type": "module"
 },
 "ray.parameter.RayParams": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "ray.parameter.RayParams.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "print",
    "ray.parameter.logging",
    "ray.ray_constants.DEFAULT_DASHBOARD_IP",
    "ray.ray_constants.DEFAULT_DASHBOARD_PORT",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.REDIS_DEFAULT_PASSWORD"
   ]
  },
  "type": "function"
 },
 "ray.parameter.RayParams._check_usage": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "int",
    "numpy.__version__.split",
    "ray.parameter.logger",
    "ray.parameter.os"
   ]
  },
  "type": "function"
 },
 "ray.parameter.RayParams.update": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.parameter.RayParams.update_if_absent": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.parameter.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.parameter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.parameter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.parameter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.parameter.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "ray.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.profile": {
  "data": {
   "shadows": "ray.profiling.profile"
  },
  "type": "import"
 },
 "ray.profiling": {
  "data": {
   "symbols_in_volume": [
    "ray.profiling._NullLogSpan"
   ]
  },
  "type": "module"
 },
 "ray.profiling.NULL_LOG_SPAN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.profiling._NullLogSpan": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.profiling._NullLogSpan.__enter__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "ray.profiling._NullLogSpan.__exit__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "ray.profiling.profile": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.profiling.NULL_LOG_SPAN",
    "ray.profiling.ray"
   ]
  },
  "type": "function"
 },
 "ray.profiling.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.put": {
  "data": {
   "shadows": "ray.worker.put"
  },
  "type": "import"
 },
 "ray.python_shared_lib_suffix": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.ray._raylet": {
  "data": {
   "shadows": "ray._raylet"
  },
  "type": "import"
 },
 "ray.ray.actor": {
  "data": {
   "shadows": "ray.actor"
  },
  "type": "import"
 },
 "ray.ray.compat": {
  "data": {
   "shadows": "ray.compat"
  },
  "type": "import"
 },
 "ray.ray.internal": {
  "data": {
   "shadows": "ray.internal"
  },
  "type": "import"
 },
 "ray.ray_cluster_perf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.ray_cluster_perf.main"
   ]
  },
  "type": "module"
 },
 "ray.ray_cluster_perf.Cluster": {
  "data": {
   "shadows": "ray.cluster_utils.Cluster"
  },
  "type": "import"
 },
 "ray.ray_cluster_perf.main": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.random.rand",
    "print",
    "range",
    "ray.cluster_utils.Cluster",
    "ray.ray_cluster_perf.ray",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.ray_cluster_perf.main.f": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "ray.ray_cluster_perf.ray",
    "ray.ray_cluster_perf.time"
   ]
  },
  "type": "function"
 },
 "ray.ray_cluster_perf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.ray_cluster_perf.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.ray_cluster_perf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.ray_constants": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.env_integer",
    "ray.ray_constants.logging"
   ]
  },
  "type": "module"
 },
 "ray.ray_constants.AUTOSCALER_RESOURCE_REQUEST_CHANNEL": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "ray.ray_constants.CHECKPOINT_PUSH_ERROR": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "ray.ray_constants.DASHBOARD_AGENT_DIED_ERROR": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ray.ray_constants.DASHBOARD_DIED_ERROR": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_ACTOR_CREATION_CPU_SIMPLE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_ACTOR_CREATION_CPU_SPECIFIED": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_ACTOR_METHOD_CPU_SIMPLE": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_ACTOR_METHOD_CPU_SPECIFIED": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_ACTOR_METHOD_NUM_RETURN_VALS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_DASHBOARD_IP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_DASHBOARD_PORT": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_OBJECT_STORE_MAX_MEMORY_BYTES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_PORT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.ray_constants.DEFAULT_REDIS_MAX_MEMORY_BYTES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.ray_constants.DUPLICATE_REMOTE_FUNCTION_THRESHOLD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.ray_constants.FUNCTION_TO_RUN_PUSH_ERROR": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "ray.ray_constants.ID_SIZE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.ray_constants.INFEASIBLE_TASK_ERROR": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "ray.ray_constants.LOGGER_FORMAT": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "ray.ray_constants.LOGGER_FORMAT_HELP": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.ray_constants.LOGGER_LEVEL": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "ray.ray_constants.LOGGER_LEVEL_CHOICES": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.ray_constants.LOGGER_LEVEL_HELP": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "ray.ray_constants.LOG_MONITOR_DIED_ERROR": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ray.ray_constants.LOG_MONITOR_MAX_OPEN_FILES": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "ray.ray_constants.MACH_PAGE_SIZE_BYTES": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "ray.ray_constants.MAX_INT64_VALUE": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "ray.ray_constants.MAX_RESOURCE_QUANTITY": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.ray_constants.MEMORY_RESOURCE_UNIT_BYTES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.ray_constants.MIN_RESOURCE_GRANULARITY": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "ray.ray_constants.MONITOR_DIED_ERROR": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "ray.ray_constants.NODE_DEFAULT_IP": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "ray.ray_constants.OBJECT_METADATA_TYPE_ACTOR_HANDLE": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "ray.ray_constants.OBJECT_METADATA_TYPE_CROSS_LANGUAGE": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "ray.ray_constants.OBJECT_METADATA_TYPE_PYTHON": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "ray.ray_constants.OBJECT_METADATA_TYPE_RAW": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "ray.ray_constants.OBJECT_STORE_MINIMUM_MEMORY_BYTES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.ray_constants.PICKLE_OBJECT_WARNING_SIZE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ray.ray_constants.PICKLING_LARGE_OBJECT_PUSH_ERROR": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "ray.ray_constants.PLASMA_RESERVABLE_MEMORY_FRACTION": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_DASHBOARD": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_GCS_SERVER": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_LOG_MONITOR": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_MONITOR": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_PLASMA_STORE": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_RAYLET": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_REAPER": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_REDIS_SERVER": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_REPORTER": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_WEB_UI": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "ray.ray_constants.PROCESS_TYPE_WORKER": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "ray.ray_constants.PROMETHEUS_SERVICE_DISCOVERY_FILE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.ray_constants.PUT_RECONSTRUCTION_PUSH_ERROR": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "ray.ray_constants.RAYLET_CONNECTION_ERROR": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "ray.ray_constants.REDIS_DEFAULT_PASSWORD": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "ray.ray_constants.REDIS_MINIMUM_MEMORY_BYTES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.ray_constants.REGISTER_ACTOR_PUSH_ERROR": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "ray.ray_constants.REGISTER_REMOTE_FUNCTION_PUSH_ERROR": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "ray.ray_constants.REMOVED_NODE_ERROR": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "ray.ray_constants.REPORTER_DIED_ERROR": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "ray.ray_constants.REPORTER_UPDATE_INTERVAL_MS": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "ray.ray_constants.RESOURCES_ENVIRONMENT_VARIABLE": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.ray_constants.RESOURCE_CONSTRAINT_PREFIX": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "ray.ray_constants.RESOURCE_DEADLOCK_ERROR": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ray.ray_constants.TASK_PUSH_ERROR": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "ray.ray_constants.VERSION_MISMATCH_PUSH_ERROR": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "ray.ray_constants.WAIT_FOR_CLASS_PUSH_ERROR": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "ray.ray_constants.WAIT_FOR_FUNCTION_PUSH_ERROR": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.ray_constants.WORKER_CRASH_PUSH_ERROR": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.ray_constants.WORKER_DIED_PUSH_ERROR": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "ray.ray_constants.WORKER_POOL_LARGE_ERROR": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "ray.ray_constants.WORKER_PROCESS_TYPE_IDLE_WORKER": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "ray.ray_constants.WORKER_PROCESS_TYPE_IO_WORKER": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "ray.ray_constants.env_bool": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.ray_constants.os"
   ]
  },
  "type": "function"
 },
 "ray.ray_constants.env_integer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "int",
    "ray.ray_constants.os"
   ]
  },
  "type": "function"
 },
 "ray.ray_constants.from_memory_units": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.ray_constants.MEMORY_RESOURCE_UNIT_BYTES"
   ]
  },
  "type": "function"
 },
 "ray.ray_constants.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.ray_constants.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.ray_constants.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.ray_constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.ray_constants.round_to_memory_units": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.ray_constants.from_memory_units",
    "ray.ray_constants.to_memory_units"
   ]
  },
  "type": "function"
 },
 "ray.ray_constants.to_memory_units": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "ray.ray_constants.MEMORY_RESOURCE_UNIT_BYTES",
    "ray.ray_constants.math"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.ray_perf.logging",
    "ray.ray_perf.main",
    "ray.ray_perf.os"
   ]
  },
  "type": "module"
 },
 "ray.ray_perf.Actor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "class"
 },
 "ray.ray_perf.Actor.small_value": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.ray_perf.Actor.small_value_arg": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ray.ray_perf.Actor.small_value_batch": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.AsyncActor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.asyncio",
    "ray.ray_perf.ray"
   ]
  },
  "type": "class"
 },
 "ray.ray_perf.Client": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "class"
 },
 "ray.ray_perf.Client.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.Client.small_value_batch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.Client.small_value_batch_arg": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.ray_perf.check_optimized_build": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.ray_perf.logger",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.filter_pattern": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.ray_perf.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.ray_perf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.ray_perf.main": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "numpy.zeros",
    "print",
    "range",
    "ray.ray_perf.Actor",
    "ray.ray_perf.AsyncActor",
    "ray.ray_perf.Client",
    "ray.ray_perf.check_optimized_build",
    "ray.ray_perf.multiprocessing",
    "ray.ray_perf.ray",
    "ray.ray_perf.timeit"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_async": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_async_direct": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_concurrent": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_multi2": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_multi2_direct_arg": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.actor_sync": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.async_actor": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.async_actor_async": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.async_actor_multi": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.async_actor_work": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.do_put": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.do_put_small": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.get_small": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.multi_task": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.put_large": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.put_multi": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.put_multi_small": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.put_small": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.small_task": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ray.ray_perf.ray",
    "ray.ray_perf.small_value"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.small_task_async": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray",
    "ray.ray_perf.small_value"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.main.work": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "ray.ray_perf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.ray_perf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.ray_perf.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.ray_perf.small_value": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.ray_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.small_value_batch": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "range",
    "ray.ray_perf.ray",
    "ray.ray_perf.small_value"
   ]
  },
  "type": "function"
 },
 "ray.ray_perf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.ray_perf.timeit": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "fn",
    "numpy.mean",
    "numpy.std",
    "print",
    "range",
    "ray.ray_perf.filter_pattern",
    "ray.ray_perf.time",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.ray_process_reaper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.ray_process_reaper.main"
   ]
  },
  "type": "module"
 },
 "ray.ray_process_reaper.SIGTERM_GRACE_PERIOD_SECONDS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.ray_process_reaper.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.ray_process_reaper.main": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "ray.ray_process_reaper.reap_process_group",
    "ray.ray_process_reaper.sys"
   ]
  },
  "type": "function"
 },
 "ray.ray_process_reaper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.ray_process_reaper.reap_process_group": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.ray_process_reaper.atexit",
    "ray.ray_process_reaper.os",
    "ray.ray_process_reaper.signal",
    "ray.ray_process_reaper.sys"
   ]
  },
  "type": "function"
 },
 "ray.ray_process_reaper.reap_process_group.sigterm_handler": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.ray_process_reaper.SIGTERM_GRACE_PERIOD_SECONDS",
    "ray.ray_process_reaper.atexit",
    "ray.ray_process_reaper.os",
    "ray.ray_process_reaper.signal",
    "ray.ray_process_reaper.sys",
    "ray.ray_process_reaper.time"
   ]
  },
  "type": "function"
 },
 "ray.ray_process_reaper.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "ray.ray_process_reaper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.ray_process_reaper.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.remote": {
  "data": {
   "shadows": "ray.worker.remote"
  },
  "type": "import"
 },
 "ray.remote_function": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.remote_function.logging"
   ]
  },
  "type": "module"
 },
 "ray.remote_function.DEFAULT_REMOTE_FUNCTION_CPUS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.remote_function.DEFAULT_REMOTE_FUNCTION_MAX_CALLS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.remote_function.DEFAULT_REMOTE_FUNCTION_NUM_RETURN_VALS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.remote_function.DEFAULT_REMOTE_FUNCTION_NUM_TASK_RETRIES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.remote_function.Language": {
  "data": {
   "shadows": "ray.Language"
  },
  "type": "import"
 },
 "ray.remote_function.PlacementGroup": {
  "data": {
   "shadows": "ray.util.placement_group.PlacementGroup"
  },
  "type": "import"
 },
 "ray.remote_function.PythonFunctionDescriptor": {
  "data": {
   "shadows": "ray._raylet.PythonFunctionDescriptor"
  },
  "type": "import"
 },
 "ray.remote_function.RemoteFunction": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "ray.remote_function.RemoteFunction.__call__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "ray.Language.PYTHON",
    "ray.remote_function.DEFAULT_REMOTE_FUNCTION_CPUS",
    "ray.remote_function.DEFAULT_REMOTE_FUNCTION_MAX_CALLS",
    "ray.remote_function.DEFAULT_REMOTE_FUNCTION_NUM_RETURN_VALS",
    "ray.remote_function.DEFAULT_REMOTE_FUNCTION_NUM_TASK_RETRIES"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction.__init__._remote_proxy": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction._remote": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "invocation",
    "ray._raylet.PythonFunctionDescriptor.from_function",
    "ray.cloudpickle.dumps",
    "ray.util.placement_group.PlacementGroup.empty",
    "ray.util.placement_group.check_placement_group_index",
    "ray.util.placement_group.get_current_placement_group"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction._remote.invocation": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "ray.cross_language.format_args"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction._submit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.remote_function.logger"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction.options": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "FuncWrapper"
   ]
  },
  "type": "function"
 },
 "ray.remote_function.RemoteFunction.options.FuncWrapper": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "ray.remote_function.RemoteFunction.options.FuncWrapper.remote": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "ray.remote_function.check_placement_group_index": {
  "data": {
   "shadows": "ray.util.placement_group.check_placement_group_index"
  },
  "type": "import"
 },
 "ray.remote_function.cross_language": {
  "data": {
   "shadows": "ray.cross_language"
  },
  "type": "import"
 },
 "ray.remote_function.get_current_placement_group": {
  "data": {
   "shadows": "ray.util.placement_group.get_current_placement_group"
  },
  "type": "import"
 },
 "ray.remote_function.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.remote_function.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.remote_function.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.remote_function.ray.signature": {
  "data": {
   "shadows": "ray.signature"
  },
  "type": "import"
 },
 "ray.remote_function.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "ray.reporter": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "__name__",
    "gpustat.core",
    "int",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.ray_constants.REPORTER_DIED_ERROR",
    "ray.reporter.Reporter",
    "ray.reporter.argparse",
    "ray.reporter.args",
    "ray.reporter.logger",
    "ray.reporter.logging",
    "ray.reporter.message",
    "ray.reporter.parser",
    "ray.reporter.platform",
    "ray.reporter.ray",
    "ray.reporter.redis_client",
    "ray.reporter.reporter",
    "ray.reporter.traceback",
    "ray.reporter.traceback_str",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.reporter.MetricsAgent": {
  "data": {
   "shadows": "ray.metrics_agent.MetricsAgent"
  },
  "type": "import"
 },
 "ray.reporter.Reporter": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "ray.reporter.Reporter.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.metrics_agent.MetricsAgent",
    "ray.reporter.ReporterServer",
    "ray.reporter.platform",
    "ray.reporter.psutil",
    "ray.reporter.ray"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_all_stats": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ray.reporter.datetime",
    "ray.reporter.to_posix_time"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_boot_time": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.reporter.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_cpu_percent": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.reporter.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_disk_usage": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.reporter.os",
    "ray.reporter.psutil",
    "ray.reporter.ray",
    "ray.reporter.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_gpu_usage": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "gpustat.core",
    "gpustat.core.new_query",
    "ray.reporter.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_load_avg": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ray.reporter.os",
    "ray.reporter.psutil",
    "ray.reporter.sys",
    "round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_mem_usage": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ray.reporter.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_network_stats": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.reporter.psutil",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.get_workers": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ray.reporter.is_worker",
    "ray.reporter.psutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.perform_iteration": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.reporter.jsonify_asdict"
   ]
  },
  "type": "function"
 },
 "ray.reporter.Reporter.run": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "concurrent.futures.ThreadPoolExecutor",
    "ray.core.generated.reporter_pb2_grpc.add_ReporterServiceServicer_to_server",
    "ray.ray_constants.REPORTER_UPDATE_INTERVAL_MS",
    "ray.reporter.grpc",
    "ray.reporter.time",
    "ray.reporter.traceback"
   ]
  },
  "type": "function"
 },
 "ray.reporter.ReporterServer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.core.generated.reporter_pb2_grpc.ReporterServiceServicer"
   ]
  },
  "type": "class"
 },
 "ray.reporter.ReporterServer.GetProfilingStats": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "open",
    "ray.core.generated.reporter_pb2.GetProfilingStatsReply",
    "ray.reporter.os",
    "ray.reporter.ray",
    "ray.reporter.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.reporter.ReporterServer.ReportOCMetrics": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "ray.core.generated.reporter_pb2.ReportOCMetricsReply",
    "ray.reporter.logger",
    "ray.reporter.traceback"
   ]
  },
  "type": "function"
 },
 "ray.reporter.ReporterServer.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.reporter.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.reporter.args": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "ray.reporter.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.reporter.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "ray.reporter.gpustat": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.reporter.grpc": {
  "data": {
   "shadows": "grpc"
  },
  "type": "import"
 },
 "ray.reporter.is_worker": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.reporter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.reporter.jsonify_asdict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.reporter.json",
    "ray.reporter.recursive_asdict"
   ]
  },
  "type": "function"
 },
 "ray.reporter.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.reporter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.reporter.message": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "ray.reporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.reporter.parser": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "ray.reporter.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.reporter.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.reporter.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.reporter.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.reporter.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.reporter.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.reporter.recursive_asdict": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.reporter.redis_client": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "ray.reporter.reporter": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "ray.reporter.reporter_pb2": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2"
  },
  "type": "import"
 },
 "ray.reporter.reporter_pb2_grpc": {
  "data": {
   "shadows": "ray.core.generated.reporter_pb2_grpc"
  },
  "type": "import"
 },
 "ray.reporter.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.reporter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.reporter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.reporter.to_posix_time": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.reporter.datetime"
   ]
  },
  "type": "function"
 },
 "ray.reporter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.reporter.traceback_str": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "ray.resource_spec": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.resource_spec.logging",
    "ray.resource_spec.re"
   ]
  },
  "type": "module"
 },
 "ray.resource_spec.GPU_NAME_PATTERN": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "ray.resource_spec.NODE_ID_PREFIX": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.resource_spec.ResourceSpec": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "ray.resource_spec.ResourceSpec.__new__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.resource_spec.ResourceSpec",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec.ResourceSpec.resolve": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "int",
    "len",
    "max",
    "min",
    "ray.ray_constants.DEFAULT_OBJECT_STORE_MAX_MEMORY_BYTES",
    "ray.ray_constants.DEFAULT_REDIS_MAX_MEMORY_BYTES",
    "ray.ray_constants.REDIS_MINIMUM_MEMORY_BYTES",
    "ray.resource_spec.NODE_ID_PREFIX",
    "ray.resource_spec.ResourceSpec",
    "ray.resource_spec._autodetect_num_gpus",
    "ray.resource_spec._constraints_from_gpu_info",
    "ray.resource_spec._get_gpu_info_string",
    "ray.resource_spec.logger",
    "ray.resource_spec.ray",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec.ResourceSpec.resolved": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.resource_spec.ResourceSpec.to_resource_dict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "ray.ray_constants.MAX_RESOURCE_QUANTITY",
    "ray.ray_constants.MEMORY_RESOURCE_UNIT_BYTES",
    "ray.ray_constants.PLASMA_RESERVABLE_MEMORY_FRACTION",
    "ray.ray_constants.to_memory_units",
    "ray.resource_spec.math",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec._autodetect_num_gpus": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "ray.resource_spec.os",
    "ray.resource_spec.subprocess",
    "ray.resource_spec.sys"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec._constraints_from_gpu_info": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "ray.ray_constants.RESOURCE_CONSTRAINT_PREFIX",
    "ray.resource_spec._pretty_gpu_name"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec._get_gpu_info_string": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "open",
    "ray.resource_spec.os",
    "ray.resource_spec.sys"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec._pretty_gpu_name": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ray.resource_spec.GPU_NAME_PATTERN"
   ]
  },
  "type": "function"
 },
 "ray.resource_spec.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.resource_spec.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.resource_spec.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.resource_spec.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.resource_spec.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.resource_spec.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.resource_spec.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.resource_spec.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.resource_spec.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.resource_spec.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib._register_all",
    "ray.rllib._setup_logger"
   ]
  },
  "type": "module"
 },
 "ray.rllib.ALGORITHMS": {
  "data": {
   "shadows": "ray.rllib.agents.registry.ALGORITHMS"
  },
  "type": "import"
 },
 "ray.rllib.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.CONTRIBUTED_ALGORITHMS": {
  "data": {
   "shadows": "ray.rllib.contrib.registry.CONTRIBUTED_ALGORITHMS"
  },
  "type": "import"
 },
 "ray.rllib.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.__all__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "ray.rllib._register_all": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_see_contrib",
    "list",
    "ray.rllib.agents.registry.ALGORITHMS.keys",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.contrib.registry.CONTRIBUTED_ALGORITHMS.keys",
    "ray.tune.registry.register_trainable"
   ]
  },
  "type": "function"
 },
 "ray.rllib._register_all._see_contrib": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.rllib._register_all._see_contrib._SeeContrib": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "class"
 },
 "ray.rllib._register_all._see_contrib._SeeContrib.setup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "function"
 },
 "ray.rllib._setup_logger": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.rllib.logging"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.a3c.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a2c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.A3CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c.A3CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a2c": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a2c.A2C_DEFAULT_CONFIG",
    "ray.rllib.agents.a3c.a2c.execution_plan",
    "ray.rllib.agents.a3c.a3c.DEFAULT_CONFIG",
    "ray.rllib.agents.a3c.a3c.get_policy_class",
    "ray.rllib.agents.a3c.a3c.validate_config",
    "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.utils.merge_dicts"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.a3c.a2c.A2CTrainer": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a2c.A2C_DEFAULT_CONFIG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a2c.A3CTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.A3C_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.ApplyGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ApplyGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.AverageGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.AverageGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.ComputeGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ComputeGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.execution_plan": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a2c.math",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.ApplyGradients",
    "ray.rllib.execution.train_ops.AverageGradients",
    "ray.rllib.execution.train_ops.ComputeGradients",
    "ray.rllib.execution.train_ops.TrainOneStep"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a2c.get_policy_class": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c.get_policy_class"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a2c.validate_config": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c.validate_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c.DEFAULT_CONFIG",
    "ray.rllib.agents.a3c.a3c.execution_plan",
    "ray.rllib.agents.a3c.a3c.get_policy_class",
    "ray.rllib.agents.a3c.a3c.logging",
    "ray.rllib.agents.a3c.a3c.validate_config",
    "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.a3c.a3c.A3CTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.A3CTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.A3CTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.A3CTrainer": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a3c.ApplyGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ApplyGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.AsyncGradients": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.AsyncGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.DEFAULT_CONFIG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a3c.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.execution_plan": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.rollout_ops.AsyncGradients",
    "ray.rllib.execution.train_ops.ApplyGradients"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c.get_policy_class": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy",
    "ray.rllib.agents.a3c.a3c_torch_policy.A3CTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a3c.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c.validate_config": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ray.rllib.agents.a3c.a3c.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_tf_policy.ValueNetworkMixin",
    "ray.rllib.agents.a3c.a3c_tf_policy.actor_critic_loss",
    "ray.rllib.agents.a3c.a3c_tf_policy.add_value_function_fetch",
    "ray.rllib.agents.a3c.a3c_tf_policy.clip_gradients",
    "ray.rllib.agents.a3c.a3c_tf_policy.grad_stats",
    "ray.rllib.agents.a3c.a3c_tf_policy.postprocess_advantages",
    "ray.rllib.agents.a3c.a3c_tf_policy.ray",
    "ray.rllib.agents.a3c.a3c_tf_policy.setup_mixins",
    "ray.rllib.agents.a3c.a3c_tf_policy.stats",
    "ray.rllib.policy.tf_policy.LearningRateSchedule",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.A3CLoss": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.A3CLoss.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.ValueNetworkMixin.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.ValueNetworkMixin.__init__.value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.tf_ops.make_tf_callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.actor_critic_loss": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.agents.a3c.a3c_tf_policy.A3CLoss",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.add_value_function_fetch": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.clip_gradients": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.grad_stats": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.utils.tf_ops.explained_variance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.postprocess_advantages": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.setup_mixins": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_tf_policy.ValueNetworkMixin",
    "ray.rllib.policy.tf_policy.LearningRateSchedule.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.stats": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_torch_policy.ValueNetworkMixin",
    "ray.rllib.agents.a3c.a3c_torch_policy.actor_critic_loss",
    "ray.rllib.agents.a3c.a3c_torch_policy.add_advantages",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.a3c.a3c_torch_policy.loss_and_entropy_stats",
    "ray.rllib.agents.a3c.a3c_torch_policy.model_value_predictions",
    "ray.rllib.agents.a3c.a3c_torch_policy.ray",
    "ray.rllib.agents.a3c.a3c_torch_policy.torch_optimizer",
    "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.A3CTorchPolicy": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.ValueNetworkMixin._value": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.actor_critic_loss": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES.dot",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.add_advantages": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "filter",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.loss_and_entropy_stats": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.model_value_predictions": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.torch_optimizer": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.agents.a3c.a3c_torch_policy.gym",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.ars.ARSTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ARSTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars_torch_policy.ARSTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ARSTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars.ARSTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.agents.ars.ars": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.rllib.agents.ars.ars.logging",
    "ray.rllib.agents.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ars.ars.ARSTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.ARSTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ars.ars_torch_policy.ARSTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.ars.ars.DEFAULT_CONFIG"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.__getstate__": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.__setstate__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.FilterManager.synchronize"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer._collect_results": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "len",
    "ray.rllib.agents.ars.ars.logger",
    "ray.rllib.agents.ars.ars.ray",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer._init": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "env_creator",
    "range",
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.ars.ars.SharedNoiseTable",
    "ray.rllib.agents.ars.ars.Worker",
    "ray.rllib.agents.ars.ars.create_shared_noise",
    "ray.rllib.agents.ars.ars.get_policy_class",
    "ray.rllib.agents.ars.ars.logger",
    "ray.rllib.agents.ars.ars.ray",
    "ray.rllib.agents.ars.ars.time",
    "ray.rllib.agents.es.es.validate_config",
    "ray.rllib.agents.es.optimizers.SGD",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer._sync_weights_to_workers": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.ars.ars.logger",
    "ray.rllib.agents.ars.ars.ray",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.cleanup": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.compute_action": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.get_policy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.Trainer",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.ARSTrainer.step": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "dict",
    "len",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.isclose",
    "numpy.max",
    "numpy.mean",
    "numpy.percentile",
    "numpy.square",
    "numpy.std",
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.ars.ars.ray",
    "ray.rllib.agents.es.utils.batched_weighted_sum",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.FilterManager.synchronize",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.DEFAULT_CONFIG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.agents.ars.ars.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.FilterManager": {
  "data": {
   "shadows": "ray.rllib.utils.FilterManager"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.Result": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.agents.ars.ars.SharedNoiseTable": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "ray.rllib.agents.ars.ars.SharedNoiseTable.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.SharedNoiseTable.get": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.SharedNoiseTable.get_delta": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.SharedNoiseTable.sample_index": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.Worker": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ray.rllib.agents.ars.ars.ray"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ars.ars.Worker.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "env_creator",
    "policy_cls",
    "ray.rllib.agents.ars.ars.SharedNoiseTable",
    "ray.rllib.agents.ars.ars.get_policy_class",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.models.ModelCatalog.get_preprocessor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Worker.do_rollouts": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "numpy.random.uniform",
    "numpy.sign",
    "ray.rllib.agents.ars.ars.Result"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Worker.filters": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Worker.get_filters": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Worker.rollout": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.agents.es.es_tf_policy.rollout"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.Worker.sync_filters": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.create_shared_noise": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "ray.rllib.agents.ars.ars.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.get_policy_class": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "policy_cls",
    "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy",
    "ray.rllib.agents.ars.ars_torch_policy.ARSTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.ars.ars.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.models": {
  "data": {
   "shadows": "ray.rllib.models"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.optimizers": {
  "data": {
   "shadows": "ray.rllib.agents.es.optimizers"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.rollout": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_tf_policy.rollout"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.utils": {
  "data": {
   "shadows": "ray.rllib.agents.es.utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.validate_config": {
  "data": {
   "shadows": "ray.rllib.agents.es.es.validate_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "list",
    "numpy.prod",
    "ray.rllib.agents.ars.ars_tf_policy.ray",
    "ray.rllib.agents.es.es_tf_policy.make_session",
    "ray.rllib.models.ModelCatalog.get_action_dist",
    "ray.rllib.models.ModelCatalog.get_model_v2",
    "ray.rllib.models.ModelCatalog.get_preprocessor_for_space",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.filter.get_filter",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.compute_actions": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.random.randn",
    "ray.rllib.agents.ars.ars_tf_policy.gym",
    "ray.rllib.agents.ars.ars_tf_policy.tree",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.spaces.space_utils.unbatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.compute_single_action": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.get_flat_weights": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.get_state": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.set_flat_weights": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ARSTFPolicy.set_state": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.get_filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.get_filter"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.make_session": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_tf_policy.make_session"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_tf_policy.unbatch": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.unbatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.ars.ars_torch_policy.ray",
    "ray.rllib.agents.es.es_torch_policy.after_init",
    "ray.rllib.agents.es.es_torch_policy.before_init",
    "ray.rllib.agents.es.es_torch_policy.make_model_and_action_dist",
    "ray.rllib.policy.torch_policy_template.build_torch_policy"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ars.ars_torch_policy.ARSTorchPolicy": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.agents.ars.ars_torch_policy.after_init": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_torch_policy.after_init"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_torch_policy.before_init": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_torch_policy.before_init"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_torch_policy.make_model_and_action_dist": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_torch_policy.make_model_and_action_dist"
  },
  "type": "import"
 },
 "ray.rllib.agents.ars.ars_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.callbacks.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "callable",
    "ray.rllib.utils.deprecation.deprecation_warning",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_episode_end": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_episode_start": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_episode_step": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_postprocess_trajectory": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_sample_end": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.DefaultCallbacks.on_train_result": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.callbacks.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.agents.callbacks.deprecation_warning": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.deprecation_warning"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ApexDDPGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.apex.ApexDDPGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.DDPGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DDPGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.TD3Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.td3.TD3Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.apex": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.apex.APEX_DDPG_DEFAULT_CONFIG",
    "ray.rllib.agents.ddpg.ddpg.DDPGTrainer.merge_trainer_configs",
    "ray.rllib.agents.ddpg.ddpg.DDPGTrainer.with_updates",
    "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.apex.apex_execution_plan"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.apex.APEX_DDPG_DEFAULT_CONFIG": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.apex.ApexDDPGTrainer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.apex.DDPGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DDPGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.apex.DDPG_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.apex.apex_execution_plan": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.apex.apex_execution_plan"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG",
    "ray.rllib.agents.ddpg.ddpg.get_policy_class",
    "ray.rllib.agents.ddpg.ddpg.logging",
    "ray.rllib.agents.ddpg.ddpg.validate_config",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTFPolicy",
    "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer.with_updates",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ddpg.DDPGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg.DDPGTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_torch_policy.DDPGTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg.DDPGTrainer": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg.GenericOffPolicyTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg.get_policy_class": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTFPolicy",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.DDPGTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg.validate_config": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.ddpg.ddpg.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "build_q_net",
    "enumerate",
    "getattr",
    "numpy.logical_and",
    "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.__init__.build_q_net": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "enumerate",
    "q_net"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.__init__.lambda_": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.get_policy_output": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.get_q_values": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.get_twin_q_values": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.policy_variables": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel.q_variables": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.before_init_fn",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.build_apply_op",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_models",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_stats",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ddpg_actor_critic_loss",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.get_distribution_inputs_and_class",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.gradients_fn",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.logging",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.make_ddpg_optimizers",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ray",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.setup_late_mixins",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.setup_mid_mixins",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.validate_spaces",
    "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin": {
  "data": {
   "lineno": 329
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin.__init__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin.__init__.compute_td_error": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "loss_fn",
    "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.tf_ops.make_tf_callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTFModel": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTFPolicy": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.DDPGTorchModel": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.Deterministic": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Deterministic"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.NoopModel": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.noop_model.NoopModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.PRIO_WEIGHTS": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 355
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin.__init__.update_target_fn": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "len",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.logger",
    "ray.rllib.utils.tf_ops.make_tf_callable",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin.update_target": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin.variables": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TorchDeterministic": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.TorchNoopModel": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.noop_model.TorchNoopModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.before_init_fn": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.get_variable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.build_apply_op": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.build_apply_op.make_apply_op": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_models": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.product",
    "ray.rllib.agents.ddpg.ddpg_tf_model.DDPGTFModel",
    "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel",
    "ray.rllib.agents.ddpg.noop_model.NoopModel",
    "ray.rllib.agents.ddpg.noop_model.TorchNoopModel",
    "ray.rllib.models.ModelCatalog.get_model_v2"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_stats": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ddpg_actor_critic_loss": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "model",
    "model.custom_loss",
    "model.get_policy_output",
    "model.get_q_values",
    "model.get_twin_q_values",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.logger",
    "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.tf_ops.huber_loss",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.get_distribution_inputs_and_class": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "model",
    "model.get_policy_output",
    "ray.rllib.models.tf.tf_action_dist.Deterministic",
    "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.gradients_fn": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "clip_func",
    "functools.partial",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.huber_loss": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.huber_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.make_ddpg_optimizers": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.postprocess_nstep_and_prio": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.setup_late_mixins": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.setup_mid_mixins": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ddpg_actor_critic_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_tf_policy.validate_spaces": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "isinstance",
    "len",
    "ray.rllib.utils.error.UnsupportedSpaceException"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_Lambda",
    "build_q_net",
    "enumerate",
    "numpy.logical_and",
    "numpy.product",
    "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.get_activation_fn",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.__init__._Lambda": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.__init__._Lambda.forward": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.__init__.build_q_net": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.get_activation_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.get_policy_output": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.get_q_values": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.get_twin_q_values": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.policy_variables": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.DDPGTorchModel.q_variables": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.get_distribution_inputs_and_class",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.validate_spaces",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.apply_gradients_fn",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.before_init_fn",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.build_ddpg_models_and_action_dist",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.build_ddpg_stats",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.ddpg_actor_critic_loss",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.logging",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.make_ddpg_optimizers",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.ray",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.setup_late_mixins",
    "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.ComputeTDErrorMixin": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.ComputeTDErrorMixin.__init__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.ComputeTDErrorMixin.__init__.compute_td_error": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "loss_fn",
    "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.DDPGTorchPolicy": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.PRIO_WEIGHTS": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 239
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.TargetNetworkMixin.update_target": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.TorchDeterministic": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.apply_gradients_fn": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.before_init_fn": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.build_ddpg_models": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_models"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.build_ddpg_models_and_action_dist": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.build_ddpg_models",
    "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.build_ddpg_stats": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.ddpg_actor_critic_loss": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "model",
    "model.custom_loss",
    "model.get_policy_output",
    "model.get_q_values",
    "model.get_twin_q_values",
    "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES.float",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS.detach",
    "ray.rllib.utils.torch_ops.huber_loss",
    "ray.rllib.utils.torch_ops.l2_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.get_distribution_inputs_and_class": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.get_distribution_inputs_and_class"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.huber_loss": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.huber_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.l2_loss": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.l2_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.make_ddpg_optimizers": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.postprocess_nstep_and_prio": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.setup_late_mixins": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_torch_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.ddpg.ddpg_torch_policy.ddpg_actor_critic_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.ddpg_torch_policy.validate_spaces": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.validate_spaces"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.noop_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.noop_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.noop_model.NoopModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.noop_model.NoopModel.forward": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.noop_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.noop_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.noop_model.TorchNoopModel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.ddpg.noop_model.TorchNoopModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ddpg.noop_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.noop_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.td3": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg.DDPGTrainer.merge_trainer_configs",
    "ray.rllib.agents.ddpg.ddpg.DDPGTrainer.with_updates",
    "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG",
    "ray.rllib.agents.ddpg.td3.TD3_DEFAULT_CONFIG"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ddpg.td3.DDPGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DDPGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.td3.DDPG_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.ddpg.td3.TD3Trainer": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "ray.rllib.agents.ddpg.td3.TD3_DEFAULT_CONFIG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.dqn.ApexTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.apex.ApexTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.DQNTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.DQNTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.DQNTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_torch_policy.DQNTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.SIMPLE_Q_DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.SimpleQTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_tf_policy.SimpleQTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.SimpleQTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_torch_policy.SimpleQTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.SimpleQTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q.SimpleQTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.apex": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.apex.APEX_DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.apex.apex_execution_plan",
    "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.dqn.DQNTrainer.with_updates",
    "ray.rllib.utils.merge_dicts"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.apex.APEX_DEFAULT_CONFIG": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.apex.ApexTrainer": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.apex.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.DQN_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.Dequeue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Dequeue"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.Enqueue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Enqueue"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.LearnerThread": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.learner_thread.LearnerThread"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.ReplayActor": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.ReplayActor"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.UpdateWorkerWeights": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "ray.rllib.agents.dqn.apex.UpdateWorkerWeights.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.apex.ray",
    "ray.rllib.execution.common._get_global_vars",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.apex.UpdateWorkerWeights.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "ray.rllib.agents.dqn.apex.collections",
    "ray.rllib.agents.dqn.learner_thread.LearnerThread",
    "ray.rllib.evaluation.worker_set.WorkerSet"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.apex.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex._get_global_vars": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_global_vars"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.apex_execution_plan": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dict",
    "len",
    "post_fn",
    "ray.rllib.agents.dqn.apex.UpdateWorkerWeights",
    "ray.rllib.agents.dqn.dqn.calculate_rr_weights",
    "ray.rllib.agents.dqn.learner_thread.LearnerThread",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.concurrency_ops.Dequeue",
    "ray.rllib.execution.concurrency_ops.Enqueue",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_buffer.ReplayActor",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.UpdateTargetNetwork",
    "ray.rllib.utils.actors.create_colocated",
    "ray.util.iter.LocalIterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.apex.apex_execution_plan.add_apex_metrics": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.agents.dqn.apex.copy",
    "ray.rllib.agents.dqn.apex.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.apex.apex_execution_plan.update_prio_and_stats": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.apex.calculate_rr_weights": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.calculate_rr_weights"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.create_colocated": {
  "data": {
   "shadows": "ray.rllib.utils.actors.create_colocated"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.apex.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "build_action_value",
    "build_state_score",
    "float",
    "int",
    "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel",
    "ray.rllib.agents.dqn.distributional_q_tf_model.gym",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.__init__.build_action_value": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "float",
    "len",
    "range",
    "ray.rllib.models.tf.layers.NoisyLayer",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.__init__.build_action_value._layer": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.__init__.build_state_score": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.models.tf.layers.NoisyLayer",
    "ray.rllib.utils.typing.TensorType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.get_q_value_distributions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel.get_state_value": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.NoisyLayer": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.NoisyLayer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.distributional_q_tf_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer",
    "ray.rllib.agents.dqn.dqn.execution_plan",
    "ray.rllib.agents.dqn.dqn.get_policy_class",
    "ray.rllib.agents.dqn.dqn.logging",
    "ray.rllib.agents.dqn.dqn.validate_config",
    "ray.rllib.agents.dqn.dqn_tf_policy.DQNTFPolicy",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.dqn.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.dqn.DQNTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.DQNTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.DQNTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_torch_policy.DQNTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.DQNTrainer": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.dqn.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.LocalReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.LocalReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.calculate_rr_weights": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn.execution_plan": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "post_fn",
    "ray.rllib.agents.dqn.dqn.calculate_rr_weights",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.execution.train_ops.UpdateTargetNetwork",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.iter.LocalIterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn.execution_plan.update_prio": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.LEARNER_STATS_KEY.get"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn.get_policy_class": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_torch_policy.DQNTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.dqn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn.validate_config": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "ray.rllib.agents.dqn.dqn.logger",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "float",
    "int",
    "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel",
    "ray.rllib.agents.dqn.dqn_torch_model.gym",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel.get_q_value_distributions": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel.get_state_value": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.NoisyLayer": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.dqn_torch_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.learner_thread.LEARNER_QUEUE_MAX_SIZE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.learner_thread.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.LearnerThread": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.learner_thread.threading"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.dqn.learner_thread.LearnerThread.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.learner_thread.LEARNER_QUEUE_MAX_SIZE",
    "ray.rllib.agents.dqn.learner_thread.queue",
    "ray.rllib.agents.dqn.learner_thread.threading",
    "ray.rllib.utils.timer.TimerStat",
    "ray.rllib.utils.window_stat.WindowStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.learner_thread.LearnerThread.run": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.learner_thread.LearnerThread.step": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY.get"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.learner_thread.TimerStat": {
  "data": {
   "shadows": "ray.rllib.utils.timer.TimerStat"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.WindowStat": {
  "data": {
   "shadows": "ray.rllib.utils.window_stat.WindowStat"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.learner_thread.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.dqn.dqn.DQNTrainer.with_updates",
    "ray.rllib.agents.dqn.simple_q.DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.simple_q.execution_plan",
    "ray.rllib.agents.dqn.simple_q.get_policy_class",
    "ray.rllib.agents.dqn.simple_q.logging",
    "ray.rllib.agents.dqn.simple_q_tf_policy.SimpleQTFPolicy",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.simple_q.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.DEFAULT_CONFIG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.LocalReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.LocalReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.SimpleQTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_tf_policy.SimpleQTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.SimpleQTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_torch_policy.SimpleQTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.SimpleQTrainer": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.execution_plan": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.execution.train_ops.UpdateTargetNetwork",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.iter.LocalIterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q.get_policy_class": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.simple_q_torch_policy.SimpleQTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.dqn.simple_q_tf_policy.get_distribution_inputs_and_class",
    "ray.rllib.agents.dqn.simple_q_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.dqn.simple_q_torch_policy.build_q_losses",
    "ray.rllib.agents.dqn.simple_q_torch_policy.build_q_model_and_distribution",
    "ray.rllib.agents.dqn.simple_q_torch_policy.extra_action_out_fn",
    "ray.rllib.agents.dqn.simple_q_torch_policy.logging",
    "ray.rllib.agents.dqn.simple_q_torch_policy.ray",
    "ray.rllib.agents.dqn.simple_q_torch_policy.setup_late_mixins",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.F": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.SimpleQTorchPolicy": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.simple_q_torch_policy.gym",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TargetNetworkMixin.__init__.do_update": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.build_q_losses": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.simple_q_tf_policy.compute_q_values",
    "ray.rllib.agents.dqn.simple_q_torch_policy.F",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS.long",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES.float",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.torch_ops.huber_loss",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.build_q_model_and_distribution": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.simple_q_tf_policy.build_q_models",
    "ray.rllib.agents.dqn.simple_q_torch_policy.gym",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.build_q_models": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_tf_policy.build_q_models"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.compute_q_values": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_tf_policy.compute_q_values"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.extra_action_out_fn": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.get_distribution_inputs_and_class": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.simple_q_tf_policy.get_distribution_inputs_and_class"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.huber_loss": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.huber_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.setup_late_mixins": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.simple_q_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.dqn.simple_q_torch_policy.gym",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dqn.simple_q_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.dreamer.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.dreamer.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.DREAMERTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.dreamer.DREAMERTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.dreamer.dreamer.DEFAULT_CONFIG",
    "ray.rllib.agents.dreamer.dreamer.execution_plan",
    "ray.rllib.agents.dreamer.dreamer.get_policy_class",
    "ray.rllib.agents.dreamer.dreamer.logging",
    "ray.rllib.agents.dreamer.dreamer.validate_config",
    "ray.rllib.agents.dreamer.dreamer_model.DreamerModel",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.DreamerTorchPolicy",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.agents.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dreamer.dreamer.DEFAULT_CONFIG": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.DREAMERTrainer": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerIteration": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerIteration.__call__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerIteration.__init__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerIteration.policy_stats": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerIteration.postprocess_gif": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.ndarray",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerModel": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.dreamer_model.DreamerModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.DreamerTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.dreamer_torch_policy.DreamerTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer.add": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer.preprocess_episode": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer.sample": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.stack",
    "ray.rllib.agents.dreamer.dreamer.random",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.execution_plan": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.rllib.agents.dreamer.dreamer.DreamerIteration",
    "ray.rllib.agents.dreamer.dreamer.EpisodicBuffer",
    "ray.rllib.agents.dreamer.dreamer.total_sampled_timesteps",
    "ray.rllib.execution.rollout_ops.ParallelRollouts"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.get_policy_class": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ray.rllib.agents.dreamer.dreamer_torch_policy.DreamerTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer.total_sampled_timesteps": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID.global_timestep"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.validate_config": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch",
    "typing.Any"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ActFunc": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ActionDecoder": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ActionDecoder.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "float",
    "int",
    "range",
    "ray.rllib.agents.dreamer.dreamer_model.ActFunc",
    "ray.rllib.agents.dreamer.utils.Linear",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ActionDecoder.forward": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.exp",
    "numpy.log",
    "ray.rllib.agents.dreamer.utils.TanhBijector",
    "torch.distributions.Independent",
    "torch.distributions.Normal",
    "torch.distributions.OneHotCategorical",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.Conv2d": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.Conv2d"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvDecoder": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvDecoder.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "ray.rllib.agents.dreamer.dreamer_model.ActFunc",
    "ray.rllib.agents.dreamer.utils.ConvTranspose2d",
    "ray.rllib.agents.dreamer.utils.Linear",
    "ray.rllib.models.torch.modules.reshape.Reshape",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvDecoder.forward": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len",
    "list",
    "torch.distributions.Independent",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvEncoder": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvEncoder.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "ray.rllib.agents.dreamer.dreamer_model.ActFunc",
    "ray.rllib.agents.dreamer.utils.Conv2d",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvEncoder.forward": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.ConvTranspose2d": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.ConvTranspose2d"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DenseDecoder": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DenseDecoder.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int",
    "range",
    "ray.rllib.agents.dreamer.dreamer_model.ActFunc",
    "ray.rllib.agents.dreamer.utils.Linear",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DenseDecoder.forward": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "torch.distributions.Bernoulli",
    "torch.distributions.Independent",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ray.rllib.agents.dreamer.dreamer_model.ActionDecoder",
    "ray.rllib.agents.dreamer.dreamer_model.ConvDecoder",
    "ray.rllib.agents.dreamer.dreamer_model.ConvEncoder",
    "ray.rllib.agents.dreamer.dreamer_model.DenseDecoder",
    "ray.rllib.agents.dreamer.dreamer_model.RSSM",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.get_initial_state": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.imagine_ahead": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "next_state",
    "range",
    "ray.rllib.utils.framework.TensorType",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.imagine_ahead.next_state": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.policy": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.framework.TensorType",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.DreamerModel.value_function": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.GRUCell": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.GRUCell"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.Linear": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.Linear"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM": {
  "data": {
   "lineno": 253
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "int",
    "ray.rllib.agents.dreamer.dreamer_model.ActFunc",
    "ray.rllib.agents.dreamer.utils.GRUCell",
    "ray.rllib.agents.dreamer.utils.Linear",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.get_dist": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.get_feature": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.get_initial_state": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.imagine": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.utils.framework.TensorType",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.img_step": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.obs_step": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.TensorType",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.RSSM.observe": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.utils.framework.TensorType",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_model.Reshape": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.reshape.Reshape"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.TanhBijector": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.TanhBijector"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.td": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.action_sampler_fn",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.build_dreamer_model",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_loss",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_optimizer_fn",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_stats",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.logging",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.ray",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.DreamerTorchPolicy": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.FreezeParameters": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer.utils.FreezeParameters"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.action_sampler_fn": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.build_dreamer_model": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.compute_dreamer_loss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.lambda_return",
    "ray.rllib.agents.dreamer.dreamer_torch_policy.log_summary",
    "ray.rllib.agents.dreamer.utils.FreezeParameters"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_loss": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.rllib.agents.dreamer.dreamer_torch_policy.compute_dreamer_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_optimizer_fn": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.dreamer_stats": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.lambda_return": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "agg_fn",
    "len",
    "list",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.lambda_return.agg_fn": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.log_summary": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.td": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.dreamer_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.utils": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.dreamer.utils.Conv2d": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.Conv2d.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.Conv2d.reset_parameters": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.ConvTranspose2d": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.ConvTranspose2d.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.ConvTranspose2d.reset_parameters": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.FreezeParameters": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.FreezeParameters.__enter__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.FreezeParameters.__exit__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.FreezeParameters.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.GRUCell": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.GRUCell.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.GRUCell.reset_parameters": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.Linear": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.Linear.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.Linear.reset_parameters": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector._call": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector._inverse": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector.atanh": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector.log_abs_det_jacobian": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.TanhBijector.sign": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.rllib.agents.dreamer.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.dreamer.utils.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.es.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.es.es.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.ESTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_tf_policy.ESTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.ESTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_torch_policy.ESTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.ESTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.es.es.ESTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.agents.es.es": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.rllib.agents.es.es.logging",
    "ray.rllib.agents.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.es.es.DEFAULT_CONFIG": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.agents.es.es.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.ESTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_tf_policy.ESTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.ESTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_torch_policy.ESTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.ESTrainer": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.es.es.DEFAULT_CONFIG"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.es.es.ESTrainer.__getstate__": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer.__setstate__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.FilterManager.synchronize"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer._collect_results": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len",
    "ray.rllib.agents.es.es.logger",
    "ray.rllib.agents.es.es.ray",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer._init": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "env_creator",
    "range",
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.es.es.SharedNoiseTable",
    "ray.rllib.agents.es.es.Worker",
    "ray.rllib.agents.es.es.create_shared_noise",
    "ray.rllib.agents.es.es.get_policy_class",
    "ray.rllib.agents.es.es.logger",
    "ray.rllib.agents.es.es.ray",
    "ray.rllib.agents.es.es.time",
    "ray.rllib.agents.es.es.validate_config",
    "ray.rllib.agents.es.optimizers.Adam",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer._sync_weights_to_workers": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.es.es.logger",
    "ray.rllib.agents.es.es.ray",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer.cleanup": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer.compute_action": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ray.rllib.agents.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer.get_policy": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.Trainer",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.ESTrainer.step": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.mean",
    "numpy.square",
    "ray.rllib.agents.Trainer",
    "ray.rllib.agents.es.es.ray",
    "ray.rllib.agents.es.utils.batched_weighted_sum",
    "ray.rllib.agents.es.utils.compute_centered_ranks",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.FilterManager.synchronize",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.FilterManager": {
  "data": {
   "shadows": "ray.rllib.utils.FilterManager"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.Result": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.agents.es.es.SharedNoiseTable": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "ray.rllib.agents.es.es.SharedNoiseTable.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.SharedNoiseTable.get": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.SharedNoiseTable.sample_index": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.Worker": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.rllib.agents.es.es.ray"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.es.es.Worker.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "_policy_class",
    "env_creator",
    "ray.rllib.agents.es.es.SharedNoiseTable",
    "ray.rllib.agents.es.es.get_policy_class",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.models.ModelCatalog.get_preprocessor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Worker.do_rollouts": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.random.uniform",
    "numpy.sign",
    "ray.rllib.agents.es.es.Result",
    "ray.rllib.agents.es.es.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Worker.filters": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Worker.get_filters": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Worker.rollout": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ray.rllib.agents.es.es_tf_policy.rollout"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.Worker.sync_filters": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.create_shared_noise": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.RandomState",
    "ray.rllib.agents.es.es.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.get_policy_class": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.rllib.agents.es.es_tf_policy.ESTFPolicy",
    "ray.rllib.agents.es.es_torch_policy.ESTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.agents.es.es.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.models": {
  "data": {
   "shadows": "ray.rllib.models"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.optimizers": {
  "data": {
   "shadows": "ray.rllib.agents.es.optimizers"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.rollout": {
  "data": {
   "shadows": "ray.rllib.agents.es.es_tf_policy.rollout"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.utils": {
  "data": {
   "shadows": "ray.rllib.agents.es.utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es.validate_config": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "list",
    "numpy.prod",
    "ray.rllib.agents.es.es_tf_policy.make_session",
    "ray.rllib.agents.es.es_tf_policy.ray",
    "ray.rllib.models.ModelCatalog.get_action_dist",
    "ray.rllib.models.ModelCatalog.get_model_v2",
    "ray.rllib.models.ModelCatalog.get_preprocessor_for_space",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.filter.get_filter",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy._add_noise": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "ray.rllib.agents.es.es_tf_policy.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.compute_actions": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "ray.rllib.agents.es.es_tf_policy.tree",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.spaces.space_utils.unbatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.compute_single_action": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.get_flat_weights": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.get_state": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.set_flat_weights": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ESTFPolicy.set_state": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.get_filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.get_filter"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.make_session": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.rollout": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "hasattr",
    "min",
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_tf_policy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_tf_policy.unbatch": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.unbatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.es.es_torch_policy.after_init",
    "ray.rllib.agents.es.es_torch_policy.before_init",
    "ray.rllib.agents.es.es_torch_policy.make_model_and_action_dist",
    "ray.rllib.agents.es.es_torch_policy.ray",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.es.es_torch_policy.ESTorchPolicy": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "ray.rllib.agents.es.es_torch_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.after_init": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.prod",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.models.ModelCatalog.get_preprocessor_for_space",
    "ray.rllib.utils.filter.get_filter",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init._compute_actions": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "ray.rllib.agents.es.es_torch_policy.tree",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.spaces.space_utils.unbatch",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init._compute_actions._add_noise": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "ray.rllib.agents.es.es_torch_policy.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init._compute_single_action": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init._get_flat_weights": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.before_init._set_flat_weights": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "numpy.reshape",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.get_filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.get_filter"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.make_model_and_action_dist": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.rllib.models.ModelCatalog.get_action_dist",
    "ray.rllib.models.ModelCatalog.get_model_v2"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.es_torch_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.es_torch_policy.unbatch": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.unbatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.optimizers": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.es.optimizers.Adam": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.rllib.agents.es.optimizers.Optimizer"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.es.optimizers.Adam.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.agents.es.optimizers.Optimizer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.Adam._compute_step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.Optimizer": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.rllib.agents.es.optimizers.Optimizer.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.Optimizer._compute_step": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.Optimizer.update": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.SGD": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.agents.es.optimizers.Optimizer"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.es.optimizers.SGD.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.agents.es.optimizers.Optimizer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.SGD._compute_step": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "ray.rllib.agents.es.optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.es.utils": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.es.utils.batched_weighted_sum": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float32",
    "ray.rllib.agents.es.utils.itergroups",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.utils.compute_centered_ranks": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.float32",
    "ray.rllib.agents.es.utils.compute_ranks"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.utils.compute_ranks": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.utils.itergroups": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.es.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.impala.impala.ImpalaTrainer",
    "ray.rllib.utils.renamed_agent"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.impala.impala.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.ImpalaAgent": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.ImpalaTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.impala.impala.ImpalaTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.impala": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.impala.impala.DEFAULT_CONFIG",
    "ray.rllib.agents.impala.impala.OverrideDefaultResourceRequest",
    "ray.rllib.agents.impala.impala.execution_plan",
    "ray.rllib.agents.impala.impala.get_policy_class",
    "ray.rllib.agents.impala.impala.logging",
    "ray.rllib.agents.impala.impala.validate_config",
    "ray.rllib.agents.impala.vtrace_tf_policy.VTraceTFPolicy",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.impala.A3CTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.A3CTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.A3CTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.BroadcastUpdateLearnerWeights": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "ray.rllib.agents.impala.impala.BroadcastUpdateLearnerWeights.__call__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.impala.ray",
    "ray.rllib.execution.common._get_global_vars",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.BroadcastUpdateLearnerWeights.__init__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.DEFAULT_CONFIG": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.impala.Dequeue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Dequeue"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.Enqueue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Enqueue"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.ImpalaTrainer": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.impala.LearnerThread": {
  "data": {
   "shadows": "ray.rllib.execution.learner_thread.LearnerThread"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.MixInReplay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.MixInReplay"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.OverrideDefaultResourceRequest": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "ray.rllib.agents.impala.impala.OverrideDefaultResourceRequest.default_resource_request": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "ray.rllib.agents.trainer.Trainer._validate_config",
    "ray.rllib.utils.annotations.override",
    "ray.tune.resources.Resources",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.TFMultiGPULearner": {
  "data": {
   "shadows": "ray.rllib.execution.multi_gpu_learner.TFMultiGPULearner"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.VTraceTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf_policy.VTraceTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.VTraceTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_torch_policy.VTraceTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala._get_global_vars": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_global_vars"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.execution_plan": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.impala.BroadcastUpdateLearnerWeights",
    "ray.rllib.agents.impala.impala.gather_experiences_directly",
    "ray.rllib.agents.impala.impala.make_learner_thread",
    "ray.rllib.agents.impala.impala.record_steps_trained",
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.concurrency_ops.Dequeue",
    "ray.rllib.execution.concurrency_ops.Enqueue",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.tree_agg.gather_experiences_tree_aggregation"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.gather_experiences_directly": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_ops.MixInReplay",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.gather_experiences_tree_aggregation": {
  "data": {
   "shadows": "ray.rllib.execution.tree_agg.gather_experiences_tree_aggregation"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.get_policy_class": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_tf_policy.A3CTFPolicy",
    "ray.rllib.agents.a3c.a3c_torch_policy.A3CTorchPolicy",
    "ray.rllib.agents.impala.vtrace_tf_policy.VTraceTFPolicy",
    "ray.rllib.agents.impala.vtrace_torch_policy.VTraceTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.impala.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.make_learner_thread": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.impala.impala.logger",
    "ray.rllib.execution.learner_thread.LearnerThread",
    "ray.rllib.execution.multi_gpu_learner.TFMultiGPULearner"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.impala.record_steps_trained": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.validate_config": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.impala.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.renamed_agent": {
  "data": {
   "shadows": "ray.rllib.utils.renamed_agent"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf.collections",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.vtrace_tf.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_tf.VTraceReturns": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_tf.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf.from_importance_weights": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf.VTraceReturns"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.from_importance_weights.scanfunc": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.from_logits": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns",
    "ray.rllib.agents.impala.vtrace_tf.multi_from_logits",
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.get_log_rhos": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.log_probs_from_logits_and_actions": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf.multi_log_probs_from_logits_and_actions",
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.multi_from_logits": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "dist_class",
    "len",
    "range",
    "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns",
    "ray.rllib.agents.impala.vtrace_tf.from_importance_weights",
    "ray.rllib.agents.impala.vtrace_tf.get_log_rhos",
    "ray.rllib.agents.impala.vtrace_tf.multi_log_probs_from_logits_and_actions"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.multi_log_probs_from_logits_and_actions": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dist_class",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.impala.vtrace_tf_policy.build_vtrace_loss",
    "ray.rllib.agents.impala.vtrace_tf_policy.choose_optimizer",
    "ray.rllib.agents.impala.vtrace_tf_policy.clip_gradients",
    "ray.rllib.agents.impala.vtrace_tf_policy.grad_stats",
    "ray.rllib.agents.impala.vtrace_tf_policy.logging",
    "ray.rllib.agents.impala.vtrace_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.impala.vtrace_tf_policy.ray",
    "ray.rllib.agents.impala.vtrace_tf_policy.setup_mixins",
    "ray.rllib.agents.impala.vtrace_tf_policy.stats",
    "ray.rllib.policy.tf_policy.EntropyCoeffSchedule",
    "ray.rllib.policy.tf_policy.LearningRateSchedule",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.EntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.VTraceLoss": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.VTraceLoss.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf.multi_from_logits"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.VTraceTFPolicy": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.build_vtrace_loss": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dist_class",
    "isinstance",
    "make_time_major",
    "numpy.int32",
    "ray.rllib.agents.impala.vtrace_tf_policy.VTraceLoss",
    "ray.rllib.agents.impala.vtrace_tf_policy.gym",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.build_vtrace_loss.make_time_major": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.choose_optimizer": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.clip_gradients": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.grad_stats": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.postprocess_trajectory": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.setup_mixins": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.tf_policy.LearningRateSchedule.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.stats": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major",
    "ray.rllib.utils.tf_ops.explained_variance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_tf_policy.vtrace": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.vtrace_torch.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch.VTraceFromLogitsReturns": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch.VTraceReturns": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf.VTraceReturns"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch.force_list": {
  "data": {
   "shadows": "ray.rllib.utils.force_list"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch.from_importance_weights": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.agents.impala.vtrace_tf.VTraceReturns",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor",
    "reversed"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.from_logits": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dist_class",
    "len",
    "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns",
    "ray.rllib.agents.impala.vtrace_torch.multi_from_logits",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.get_log_rhos": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.log_probs_from_logits_and_actions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch.multi_log_probs_from_logits_and_actions",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.multi_from_logits": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dist_class",
    "len",
    "range",
    "ray.rllib.agents.impala.vtrace_tf.VTraceFromLogitsReturns",
    "ray.rllib.agents.impala.vtrace_torch.from_importance_weights",
    "ray.rllib.agents.impala.vtrace_torch.get_log_rhos",
    "ray.rllib.agents.impala.vtrace_torch.multi_log_probs_from_logits_and_actions",
    "ray.rllib.utils.force_list",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.multi_log_probs_from_logits_and_actions": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dist_class",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.impala.vtrace_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.impala.vtrace_torch_policy.build_vtrace_loss",
    "ray.rllib.agents.impala.vtrace_torch_policy.choose_optimizer",
    "ray.rllib.agents.impala.vtrace_torch_policy.logging",
    "ray.rllib.agents.impala.vtrace_torch_policy.ray",
    "ray.rllib.agents.impala.vtrace_torch_policy.setup_mixins",
    "ray.rllib.agents.impala.vtrace_torch_policy.stats",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule",
    "ray.rllib.policy.torch_policy.LearningRateSchedule",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.EntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.VTraceLoss": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.VTraceLoss.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch.multi_from_logits"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.VTraceTorchPolicy": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.build_vtrace_loss": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_make_time_major",
    "dist_class",
    "isinstance",
    "list",
    "numpy.int32",
    "numpy.ndarray",
    "ray.rllib.agents.impala.vtrace_torch_policy.VTraceLoss",
    "ray.rllib.agents.impala.vtrace_torch_policy.gym",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.torch_ops.sequence_mask",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.build_vtrace_loss._make_time_major": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.choose_optimizer": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.global_norm": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.global_norm"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.postprocess_trajectory": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf_policy.postprocess_trajectory"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.sequence_mask": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.sequence_mask"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.setup_mixins": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.stats": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major",
    "ray.rllib.utils.torch_ops.explained_variance",
    "ray.rllib.utils.torch_ops.global_norm"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.impala.vtrace_torch_policy.vtrace": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.maml.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.MAMLTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml.MAMLTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.maml.maml.DEFAULT_CONFIG",
    "ray.rllib.agents.maml.maml.execution_plan",
    "ray.rllib.agents.maml.maml.get_policy_class",
    "ray.rllib.agents.maml.maml.logging",
    "ray.rllib.agents.maml.maml.validate_config",
    "ray.rllib.agents.maml.maml_tf_policy.MAMLTFPolicy",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.agents.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.maml.maml.CollectMetrics": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.CollectMetrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.DEFAULT_CONFIG": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.MAMLTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_tf_policy.MAMLTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.MAMLTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.MAMLTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.MAMLTrainer": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml.MetaUpdate": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml.MetaUpdate.__call__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.maml.maml.set_worker_tasks",
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.MetaUpdate.__call__.update": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.maml.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.MetaUpdate.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.execution_plan": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.maml.MetaUpdate",
    "ray.rllib.agents.maml.maml.set_worker_tasks",
    "ray.rllib.execution.metric_ops.CollectMetrics",
    "ray.util.iter.from_actors"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.execution_plan.inner_adaptation_steps": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "ray.rllib.agents.maml.maml.inner_adaptation",
    "ray.rllib.agents.maml.maml.post_process_metrics",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "ray.rllib.utils.sgd.standardized",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.from_actors": {
  "data": {
   "shadows": "ray.util.iter.from_actors"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.get_policy_class": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.maml_tf_policy.MAMLTFPolicy",
    "ray.rllib.agents.maml.maml_torch_policy.MAMLTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.inner_adaptation": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.post_process_metrics": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.collect_metrics",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.set_worker_tasks": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.standardized": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.standardized"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml.validate_config": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.maml.maml_tf_policy.KLCoeffMixin",
    "ray.rllib.agents.maml.maml_tf_policy.logging",
    "ray.rllib.agents.maml.maml_tf_policy.maml_loss",
    "ray.rllib.agents.maml.maml_tf_policy.maml_optimizer_fn",
    "ray.rllib.agents.maml.maml_tf_policy.maml_stats",
    "ray.rllib.agents.maml.maml_tf_policy.ray",
    "ray.rllib.agents.maml.maml_tf_policy.setup_mixins",
    "ray.rllib.agents.ppo.ppo_tf_policy.compute_and_clip_gradients",
    "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_config",
    "ray.rllib.agents.ppo.ppo_tf_policy.vf_preds_fetches",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.maml.maml_tf_policy.KLCoeffMixin": {
  "data": {
   "lineno": 379
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_tf_policy.KLCoeffMixin.__init__": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.KLCoeffMixin.update_kls": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "enumerate",
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dist_class",
    "entropy_loss",
    "kl_loss",
    "range",
    "ray.rllib.agents.maml.maml_tf_policy.PPOLoss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss.compute_updated_variables": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "enumerate",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss.feed_forward": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "fc_network",
    "hidden_nonlinearity",
    "output_nonlinearity",
    "ray.rllib.utils.framework.get_activation_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss.feed_forward.fc_network": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NameError",
    "hidden_nonlinearity",
    "output_nonlinearity"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss.split_placeholders": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.MAMLTFPolicy": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml_tf_policy.PPOLoss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dist_class",
    "entropy_loss",
    "kl_loss",
    "surrogate_loss",
    "vf_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.PPOLoss.entropy_loss": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.PPOLoss.kl_loss": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.PPOLoss.surrogate_loss": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.PPOLoss.vf_loss": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.ValueNetworkMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.WorkerLoss": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_tf_policy.WorkerLoss.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dist_class",
    "kl_loss",
    "ray.rllib.agents.maml.maml_tf_policy.PPOLoss",
    "vf_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.compute_and_clip_gradients": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.compute_and_clip_gradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.maml_loss": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.agents.maml.maml_tf_policy.MAMLLoss",
    "ray.rllib.agents.maml.maml_tf_policy.WorkerLoss",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.maml_optimizer_fn": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.maml_stats": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.postprocess_ppo_gae": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.setup_config": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.setup_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.setup_mixins": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.maml_tf_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_tf_policy.vf_preds_fetches": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.vf_preds_fetches"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.maml.maml_torch_policy.logging",
    "ray.rllib.agents.maml.maml_torch_policy.maml_loss",
    "ray.rllib.agents.maml.maml_torch_policy.maml_optimizer_fn",
    "ray.rllib.agents.maml.maml_torch_policy.maml_stats",
    "ray.rllib.agents.maml.maml_torch_policy.ray",
    "ray.rllib.agents.maml.maml_torch_policy.setup_mixins",
    "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_config",
    "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin": {
  "data": {
   "lineno": 388
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin.__init__": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin.update_kls": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dist_class",
    "entropy_loss",
    "kl_loss",
    "range",
    "ray.rllib.agents.maml.maml_torch_policy.PPOLoss",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss.compute_updated_variables": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss.feed_forward": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "fc_network",
    "hidden_nonlinearity",
    "len",
    "output_nonlinearity",
    "ray.rllib.utils.framework.get_activation_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss.feed_forward.fc_network": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NameError",
    "hidden_nonlinearity",
    "len",
    "output_nonlinearity"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss.split_placeholders": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.MAMLTorchPolicy": {
  "data": {
   "lineno": 419
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml_torch_policy.PPOLoss": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dist_class",
    "entropy_loss",
    "kl_loss",
    "surrogate_loss",
    "vf_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.PPOLoss.entropy_loss": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.PPOLoss.kl_loss": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.PPOLoss.surrogate_loss": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.PPOLoss.vf_loss": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.ValueNetworkMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.WorkerLoss": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.maml.maml_torch_policy.WorkerLoss.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dist_class",
    "kl_loss",
    "ray.rllib.agents.maml.maml_torch_policy.PPOLoss",
    "vf_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.agents.maml.maml_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.maml_loss": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.agents.maml.maml_torch_policy.MAMLLoss",
    "ray.rllib.agents.maml.maml_torch_policy.WorkerLoss",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.maml_optimizer_fn": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.maml_stats": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.postprocess_ppo_gae": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.setup_config": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.setup_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.setup_mixins": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.maml.maml_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.maml.maml_torch_policy.vf_preds_fetches": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.marwil.BCTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.bc.BCTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.BC_DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.bc.BC_DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.MARWILTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil_tf_policy.MARWILTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.MARWILTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil_torch_policy.MARWILTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.MARWILTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil.MARWILTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.bc": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.bc.BC_DEFAULT_CONFIG",
    "ray.rllib.agents.marwil.bc.validate_config",
    "ray.rllib.agents.marwil.marwil.DEFAULT_CONFIG",
    "ray.rllib.agents.marwil.marwil.MARWILTrainer.merge_trainer_configs",
    "ray.rllib.agents.marwil.marwil.MARWILTrainer.with_updates"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.marwil.bc.BCTrainer": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.bc.BC_DEFAULT_CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.bc.MARWILTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil.MARWILTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.bc.MARWIL_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.bc.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.bc.validate_config": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil.DEFAULT_CONFIG",
    "ray.rllib.agents.marwil.marwil.execution_plan",
    "ray.rllib.agents.marwil.marwil.get_policy_class",
    "ray.rllib.agents.marwil.marwil_tf_policy.MARWILTFPolicy",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.marwil.marwil.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.DEFAULT_CONFIG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.marwil.MARWILTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil_tf_policy.MARWILTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.MARWILTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil_torch_policy.MARWILTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.MARWILTrainer": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.marwil.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.SimpleReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.SimpleReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil.execution_plan": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.SimpleReplayBuffer",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil.get_policy_class": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_torch_policy.MARWILTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_tf_policy.ValueNetworkMixin",
    "ray.rllib.agents.marwil.marwil_tf_policy.marwil_loss",
    "ray.rllib.agents.marwil.marwil_tf_policy.postprocess_advantages",
    "ray.rllib.agents.marwil.marwil_tf_policy.ray",
    "ray.rllib.agents.marwil.marwil_tf_policy.setup_mixins",
    "ray.rllib.agents.marwil.marwil_tf_policy.stats",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.MARWILLoss": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.MARWILLoss.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.rllib.utils.tf_ops.explained_variance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.MARWILLoss._build_policy_loss": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_tf_policy.ReweightedImitationLoss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.MARWILLoss._build_value_loss": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_tf_policy.ValueLoss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.MARWILTFPolicy": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ReweightedImitationLoss": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ReweightedImitationLoss.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ValueLoss": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ValueLoss.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ValueNetworkMixin.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ValueNetworkMixin.__init__.value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.tf_ops.make_tf_callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.marwil_loss": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.agents.marwil.marwil_tf_policy.MARWILLoss",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.postprocess_advantages": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.setup_mixins": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_tf_policy.ValueNetworkMixin",
    "ray.rllib.utils.framework.get_variable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.stats": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_tf_policy.postprocess_advantages",
    "ray.rllib.agents.marwil.marwil_torch_policy.ValueNetworkMixin",
    "ray.rllib.agents.marwil.marwil_torch_policy.marwil_loss",
    "ray.rllib.agents.marwil.marwil_torch_policy.ray",
    "ray.rllib.agents.marwil.marwil_torch_policy.setup_mixins",
    "ray.rllib.agents.marwil.marwil_torch_policy.stats",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.MARWILTorchPolicy": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.ValueNetworkMixin.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.ValueNetworkMixin.__init__.value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.marwil_loss": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.utils.torch_ops.explained_variance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.postprocess_advantages": {
  "data": {
   "shadows": "ray.rllib.agents.marwil.marwil_tf_policy.postprocess_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.setup_mixins": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.marwil_torch_policy.ValueNetworkMixin"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.stats": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.rllib.agents.marwil.marwil_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.mbmpo.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.mbmpo.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.MBMPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.mbmpo.MBMPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.mbmpo.mbmpo.DEFAULT_CONFIG",
    "ray.rllib.agents.mbmpo.mbmpo.execution_plan",
    "ray.rllib.agents.mbmpo.mbmpo.logging",
    "ray.rllib.agents.mbmpo.mbmpo.validate_config",
    "ray.rllib.agents.mbmpo.mbmpo.validate_env",
    "ray.rllib.agents.mbmpo.mbmpo_torch_policy.MBMPOTorchPolicy",
    "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel",
    "ray.rllib.agents.mbmpo.utils.MBMPOExploration",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.agents.with_common_config",
    "ray.rllib.env.model_vector_env.model_vector_env"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.mbmpo.mbmpo.CollectMetrics": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.CollectMetrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.DEFAULT_CONFIG": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.DynamicsEnsembleCustomModel": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MBMPOExploration": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.utils.MBMPOExploration"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MBMPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.mbmpo_torch_policy.MBMPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MBMPOTrainer": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo.METRICS_KEYS": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate.__call__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble",
    "ray.rllib.agents.mbmpo.mbmpo.sync_stats",
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate.__call__.update": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ray.rllib.agents.mbmpo.mbmpo.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate.__init__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate.postprocess_metrics": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.calculate_gae_advantages": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo.utils.calculate_gae_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.collect_episodes": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_episodes"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.execution_plan": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.agents.mbmpo.mbmpo.MetaUpdate",
    "ray.rllib.agents.mbmpo.mbmpo.fit_dynamics",
    "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble",
    "ray.rllib.agents.mbmpo.mbmpo.sync_stats",
    "ray.rllib.evaluation.metrics.collect_episodes",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.metric_ops.CollectMetrics",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.iter.LocalIterator",
    "ray.util.iter.from_actors"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.execution_plan.inner_adaptation_steps": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "print",
    "ray.rllib.agents.mbmpo.mbmpo.inner_adaptation",
    "ray.rllib.agents.mbmpo.mbmpo.post_process_metrics",
    "ray.rllib.agents.mbmpo.mbmpo.post_process_samples",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.fit_dynamics": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.from_actors": {
  "data": {
   "shadows": "ray.util.iter.from_actors"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.inner_adaptation": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.model_vector_env": {
  "data": {
   "shadows": "ray.rllib.env.model_vector_env.model_vector_env"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.post_process_metrics": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ray.rllib.agents.mbmpo.mbmpo.METRICS_KEYS",
    "ray.rllib.evaluation.metrics.collect_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.post_process_samples": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.split",
    "range",
    "ray.rllib.agents.mbmpo.utils.calculate_gae_advantages",
    "ray.rllib.utils.sgd.standardized",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.standardized": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.standardized"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "get_ensemble_weights",
    "ray.rllib.agents.mbmpo.mbmpo.ray",
    "ray.rllib.evaluation.worker_set.WorkerSet"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble.get_ensemble_weights": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "policy_ensemble_weights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble.get_ensemble_weights.policy_ensemble_weights": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_ensemble.set_ensemble_weights": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_stats": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "get_normalizations",
    "ray.rllib.agents.mbmpo.mbmpo.ray",
    "ray.rllib.evaluation.worker_set.WorkerSet"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_stats.get_normalizations": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.sync_stats.set_normalizations": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.validate_config": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.mbmpo.mbmpo.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.validate_env": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "hasattr",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.utils.typing.EnvType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.maml.maml_torch_policy.maml_loss",
    "ray.rllib.agents.maml.maml_torch_policy.maml_optimizer_fn",
    "ray.rllib.agents.maml.maml_torch_policy.maml_stats",
    "ray.rllib.agents.maml.maml_torch_policy.setup_mixins",
    "ray.rllib.agents.mbmpo.mbmpo_torch_policy.logging",
    "ray.rllib.agents.mbmpo.mbmpo_torch_policy.make_model_and_action_dist",
    "ray.rllib.agents.mbmpo.mbmpo_torch_policy.ray",
    "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_config",
    "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.KLCoeffMixin": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.KLCoeffMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.MBMPOTorchPolicy": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.make_model_and_action_dist": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.agents.mbmpo.mbmpo_torch_policy.gym",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.maml_loss": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.maml_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.maml_optimizer_fn": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.maml_optimizer_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.maml_stats": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.maml_stats"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.postprocess_ppo_gae": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.setup_config": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.setup_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.setup_mixins": {
  "data": {
   "shadows": "ray.rllib.agents.maml.maml_torch_policy.setup_mixins"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.mbmpo_torch_policy.vf_preds_fetches": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "range",
    "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel",
    "ray.rllib.agents.mbmpo.model_ensemble.TDModel",
    "ray.rllib.agents.mbmpo.model_ensemble.gym",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.fit": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "convert_to_str",
    "len",
    "list",
    "numpy.array",
    "numpy.mean",
    "print",
    "range",
    "ray.rllib.agents.mbmpo.model_ensemble.TDDataset",
    "ray.rllib.agents.mbmpo.model_ensemble.mean_std_stats",
    "ray.rllib.agents.mbmpo.model_ensemble.process_samples",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.fit.convert_to_str": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.forward": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.loss": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.predict_model_batches": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.concatenate",
    "ray.rllib.agents.mbmpo.model_ensemble.denormalize",
    "ray.rllib.agents.mbmpo.model_ensemble.normalize",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.set_norms": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.DynamicsEnsembleCustomModel.split_train_val": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.random.shuffle",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDDataset": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDDataset.__getitem__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDDataset.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.concatenate",
    "ray.rllib.agents.mbmpo.model_ensemble.normalize",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDDataset.__len__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDModel": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hidden_nonlinearity",
    "len",
    "output_nonlinearity",
    "super",
    "weight_norm"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TDModel.forward": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.denormalize": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.mean_std_stats": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.normalize": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.process_samples": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.model_ensemble.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline._features": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.clip",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.concatenate",
    "numpy.identity",
    "numpy.isnan",
    "numpy.linalg.lstsq",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline.get_param_values": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline.predict": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline.set_param_values": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.MBMPOExploration": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mbmpo.utils.MBMPOExploration.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "ray.rllib.models.modelv2.ModelV2",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils.StochasticSampling": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils.calculate_gae_advantages": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "enumerate",
    "numpy.append",
    "ray.rllib.agents.mbmpo.utils.LinearFeatureBaseline",
    "ray.rllib.evaluation.postprocessing.discount_cumsum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mbmpo.utils.discount_cumsum": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.discount_cumsum"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.mbmpo.utils.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.mock.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock._MockTrainer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mock._MockTrainer._init": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer._register_if_needed": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.default_resource_request": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.get_info": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.load_checkpoint": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "open",
    "ray.rllib.agents.mock.pickle"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.save_checkpoint": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "open",
    "ray.rllib.agents.mock.os",
    "ray.rllib.agents.mock.pickle"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.set_info": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._MockTrainer.step": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "ray.tune.result",
    "ray.tune.result.SHOULD_CHECKPOINT",
    "ray.tune.result.update"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._ParameterTuningTrainer": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.agents.mock._MockTrainer",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mock._ParameterTuningTrainer.step": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._SigmoidFakeData": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.rllib.agents.mock._MockTrainer",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mock._SigmoidFakeData.step": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dict",
    "float",
    "max",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._agent_import_failed": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.rllib.agents.mock._agent_import_failed._AgentImportFailed": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.mock._agent_import_failed._AgentImportFailed.setup": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.mock.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock.tune_result": {
  "data": {
   "shadows": "ray.tune.result"
  },
  "type": "import"
 },
 "ray.rllib.agents.mock.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.pg.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.PGTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_torch_policy.PGTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.pg.pg.DEFAULT_CONFIG",
    "ray.rllib.agents.pg.pg.get_policy_class",
    "ray.rllib.agents.pg.pg.logging",
    "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.pg.pg.DEFAULT_CONFIG": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.PGTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_torch_policy.PGTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.PGTrainer": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.get_policy_class": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.pg_torch_policy.PGTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.pg.pg.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_loss": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.pg_tf_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.pg.pg_tf_policy.pg_tf_loss",
    "ray.rllib.agents.pg.pg_tf_policy.ray",
    "ray.rllib.agents.pg.utils.post_process_advantages",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.pg.pg_tf_policy.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.pg_tf_loss": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.pg.pg_tf_policy.post_process_advantages": {
  "data": {
   "shadows": "ray.rllib.agents.pg.utils.post_process_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_loss": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_torch_policy.pg_torch_loss"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn",
    "ray.rllib.agents.pg.pg_torch_policy.pg_loss_stats",
    "ray.rllib.agents.pg.pg_torch_policy.pg_torch_loss",
    "ray.rllib.agents.pg.pg_torch_policy.ray",
    "ray.rllib.agents.pg.utils.post_process_advantages",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.pg.pg_torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.PGTorchPolicy": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ray.rllib.agents.pg.pg_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.pg_loss_stats": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.pg.pg_torch_policy.pg_torch_loss": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.pg.pg_torch_policy.post_process_advantages": {
  "data": {
   "shadows": "ray.rllib.agents.pg.utils.post_process_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.pg_torch_policy.view_requirements_fn": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.post_process_advantages": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.post_process_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.pg.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.pg.utils.post_process_advantages": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.ppo.APPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.appo.APPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.DDPPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ddppo.DDPPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.PPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.PPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo.PPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.impala.DEFAULT_CONFIG",
    "ray.rllib.agents.impala.ImpalaTrainer.merge_trainer_configs",
    "ray.rllib.agents.impala.ImpalaTrainer.with_updates",
    "ray.rllib.agents.ppo.appo.DEFAULT_CONFIG",
    "ray.rllib.agents.ppo.appo.add_target_callback",
    "ray.rllib.agents.ppo.appo.get_policy_class",
    "ray.rllib.agents.ppo.appo.initialize_target",
    "ray.rllib.agents.ppo.appo_tf_policy.AsyncPPOTFPolicy"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.appo.APPOTrainer": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo.AsyncPPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.appo_tf_policy.AsyncPPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.AsyncPPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.appo_torch_policy.AsyncPPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.DEFAULT_CONFIG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo.LAST_TARGET_UPDATE_TS": {
  "data": {
   "shadows": "ray.rllib.execution.common.LAST_TARGET_UPDATE_TS"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.NUM_TARGET_UPDATES": {
  "data": {
   "shadows": "ray.rllib.execution.common.NUM_TARGET_UPDATES"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.UpdateKL": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo.UpdateKL"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.UpdateTargetAndKL": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.appo.UpdateTargetAndKL.__call__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.rllib.execution.common.LAST_TARGET_UPDATE_TS",
    "ray.rllib.execution.common.NUM_TARGET_UPDATES",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo.UpdateTargetAndKL.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo.UpdateKL"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.add_target_callback": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.impala.validate_config",
    "ray.rllib.agents.ppo.appo.UpdateTargetAndKL",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo.get_policy_class": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_torch_policy.AsyncPPOTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo.impala": {
  "data": {
   "shadows": "ray.rllib.agents.impala"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo.initialize_target": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo.validate_config": {
  "data": {
   "shadows": "ray.rllib.agents.impala.impala.validate_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.impala.vtrace_tf_policy.choose_optimizer",
    "ray.rllib.agents.impala.vtrace_tf_policy.clip_gradients",
    "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin",
    "ray.rllib.agents.ppo.appo_tf_policy.add_values",
    "ray.rllib.agents.ppo.appo_tf_policy.appo_surrogate_loss",
    "ray.rllib.agents.ppo.appo_tf_policy.logging",
    "ray.rllib.agents.ppo.appo_tf_policy.make_appo_model",
    "ray.rllib.agents.ppo.appo_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.ppo.appo_tf_policy.setup_late_mixins",
    "ray.rllib.agents.ppo.appo_tf_policy.setup_mixins",
    "ray.rllib.agents.ppo.appo_tf_policy.stats",
    "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin",
    "ray.rllib.policy.tf_policy.LearningRateSchedule",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.AsyncPPOTFPolicy": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.KLCoeffMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.POLICY_SCOPE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TARGET_POLICY_SCOPE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TFActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 374
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin.__init__.do_update": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len",
    "ray.rllib.utils.tf_ops.make_tf_callable",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin.variables": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.ValueNetworkMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy._make_time_major": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.add_values": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.appo_surrogate_loss": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dist_class",
    "isinstance",
    "make_time_major",
    "numpy.int32",
    "ray.rllib.agents.impala.vtrace_tf.multi_from_logits",
    "ray.rllib.agents.ppo.appo_tf_policy.gym",
    "ray.rllib.agents.ppo.appo_tf_policy.logger",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.typing.TensorType",
    "reduce_mean_valid",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.appo_surrogate_loss.make_time_major": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.appo_surrogate_loss.reduce_mean_valid": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.choose_optimizer": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf_policy.choose_optimizer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.clip_gradients": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf_policy.clip_gradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.make_appo_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_tf_policy.POLICY_SCOPE",
    "ray.rllib.agents.ppo.appo_tf_policy.TARGET_POLICY_SCOPE",
    "ray.rllib.agents.ppo.appo_tf_policy.gym",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.postprocess_trajectory": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.typing.AgentID",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.setup_late_mixins": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_tf_policy.TargetNetworkMixin",
    "ray.rllib.agents.ppo.appo_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.setup_mixins": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_tf_policy.gym",
    "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin.__init__",
    "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin.__init__",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.LearningRateSchedule.__init__",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.stats": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_tf_policy._make_time_major",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.tf_ops.explained_variance",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_tf_policy.vtrace": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.impala.vtrace_torch_policy.choose_optimizer",
    "ray.rllib.agents.ppo.appo_tf_policy.make_appo_model",
    "ray.rllib.agents.ppo.appo_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.ppo.appo_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.ppo.appo_torch_policy.add_values",
    "ray.rllib.agents.ppo.appo_torch_policy.appo_surrogate_loss",
    "ray.rllib.agents.ppo.appo_torch_policy.logging",
    "ray.rllib.agents.ppo.appo_torch_policy.setup_early_mixins",
    "ray.rllib.agents.ppo.appo_torch_policy.setup_late_mixins",
    "ray.rllib.agents.ppo.appo_torch_policy.stats",
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin",
    "ray.rllib.policy.torch_policy.LearningRateSchedule",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.AsyncPPOTorchPolicy": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.KLCoeffMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 263
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TargetNetworkMixin.__init__.do_update": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.ValueNetworkMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.add_values": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.appo_surrogate_loss": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_make_time_major",
    "dist_class",
    "isinstance",
    "list",
    "numpy.int32",
    "numpy.ndarray",
    "ray.rllib.agents.impala.vtrace_torch.multi_from_logits",
    "ray.rllib.agents.ppo.appo_torch_policy.gym",
    "ray.rllib.agents.ppo.appo_torch_policy.logger",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.torch_ops.sequence_mask",
    "ray.rllib.utils.typing.TensorType",
    "reduce_mean_valid",
    "tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.appo_surrogate_loss._make_time_major": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.appo_surrogate_loss.reduce_mean_valid": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.choose_optimizer": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_torch_policy.choose_optimizer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.global_norm": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.global_norm"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.make_appo_model": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.appo_tf_policy.make_appo_model"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.make_time_major": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.postprocess_trajectory": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.appo_tf_policy.postprocess_trajectory"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.sequence_mask": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.sequence_mask"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.setup_early_mixins": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_torch_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.setup_late_mixins": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.appo_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.ppo.appo_torch_policy.gym",
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin.__init__",
    "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin.__init__",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.stats": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.vtrace_torch_policy.make_time_major",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.torch_ops.explained_variance",
    "ray.rllib.utils.torch_ops.global_norm"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.appo_torch_policy.vtrace": {
  "data": {
   "shadows": "ray.rllib.agents.impala.vtrace_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ppo.ddppo.DEFAULT_CONFIG",
    "ray.rllib.agents.ppo.ddppo.execution_plan",
    "ray.rllib.agents.ppo.ddppo.logging",
    "ray.rllib.agents.ppo.ddppo.validate_config",
    "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG",
    "ray.rllib.agents.ppo.ppo.PPOTrainer.merge_trainer_configs",
    "ray.rllib.agents.ppo.ppo.PPOTrainer.with_updates"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.ddppo.DDPPOTrainer": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ddppo.DEFAULT_CONFIG": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ddppo.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.LEARN_ON_BATCH_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo._get_global_vars": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_global_vars"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.do_minibatch_sgd": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.do_minibatch_sgd"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RecordStats",
    "ValueError",
    "dict",
    "enumerate",
    "len",
    "ray.rllib.agents.ppo.ddppo.logger",
    "ray.rllib.agents.ppo.ddppo.logging",
    "ray.rllib.agents.ppo.ddppo.ray",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.iter.LocalIterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.RecordStats": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.RecordStats.__call__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ddppo.time",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER.push",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.RecordStats._on_fetch_start": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ddppo.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.check_sync": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "float",
    "len",
    "ray.rllib.agents.ppo.ddppo.logger",
    "ray.rllib.agents.ppo.ddppo.ray",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.download_weights": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ddppo.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.train_torch_distributed_allreduce": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ddppo.logger",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.utils.sgd.do_minibatch_sgd"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.execution_plan.update_worker_global_vars": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ray.rllib.execution.common._get_global_vars"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ddppo.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ddppo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.ppo": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ddppo.validate_config": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.ppo.ppo.validate_config"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG",
    "ray.rllib.agents.ppo.ppo.execution_plan",
    "ray.rllib.agents.ppo.ppo.get_policy_class",
    "ray.rllib.agents.ppo.ppo.logging",
    "ray.rllib.agents.ppo.ppo.validate_config",
    "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.agents.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.ppo.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.PPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.PPOTrainer": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.SelectExperiences": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.SelectExperiences"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.StandardizeFields": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.StandardizeFields"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.TrainTFMultiGPU": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainTFMultiGPU"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.UpdateKL": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ppo.UpdateKL.__call__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.UpdateKL.__call__.update": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.UpdateKL.__init__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.execution_plan": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.agents.ppo.ppo.UpdateKL",
    "ray.rllib.agents.ppo.ppo.warn_about_bad_reward_scales",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.rollout_ops.SelectExperiences",
    "ray.rllib.execution.rollout_ops.StandardizeFields",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.execution.train_ops.TrainTFMultiGPU",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.iter.LocalIterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.get_policy_class": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo.validate_config": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "ray.rllib.agents.ppo.ppo.logger",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.warn_about_bad_reward_scales": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "abs",
    "float",
    "ray.rllib.agents.ppo.ppo.logger",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.compute_and_clip_gradients",
    "ray.rllib.agents.ppo.ppo_tf_policy.kl_and_loss_stats",
    "ray.rllib.agents.ppo.ppo_tf_policy.logging",
    "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae",
    "ray.rllib.agents.ppo.ppo_tf_policy.ppo_surrogate_loss",
    "ray.rllib.agents.ppo.ppo_tf_policy.ray",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_config",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_mixins",
    "ray.rllib.agents.ppo.ppo_tf_policy.vf_preds_fetches",
    "ray.rllib.policy.tf_policy.EntropyCoeffSchedule",
    "ray.rllib.policy.tf_policy.LearningRateSchedule",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.EntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin": {
  "data": {
   "lineno": 241
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.framework.get_variable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin.update_kl": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.LocalOptimizer": {
  "data": {
   "shadows": "ray.rllib.utils.typing.LocalOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.TFActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 274
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin.__init__": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin.__init__.value": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ray.rllib.utils.tf_ops.make_tf_callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.compute_and_clip_gradients": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "list",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.LocalOptimizer",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.kl_and_loss_stats": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.tf_ops.explained_variance",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.typing.AgentID",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ppo_surrogate_loss": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.utils.typing.TensorType",
    "reduce_mean_valid",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ppo_surrogate_loss.reduce_mean_valid": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.setup_config": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.setup_mixins": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.ValueNetworkMixin",
    "ray.rllib.agents.ppo.ppo_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.tf_policy.LearningRateSchedule.__init__",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_tf_policy.vf_preds_fetches": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn",
    "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae",
    "ray.rllib.agents.ppo.ppo_tf_policy.setup_config",
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.kl_and_loss_stats",
    "ray.rllib.agents.ppo.ppo_torch_policy.logging",
    "ray.rllib.agents.ppo.ppo_torch_policy.ppo_surrogate_loss",
    "ray.rllib.agents.ppo.ppo_torch_policy.ray",
    "ray.rllib.agents.ppo.ppo_torch_policy.setup_mixins",
    "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule",
    "ray.rllib.policy.torch_policy.LearningRateSchedule",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.EntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin.update_kl": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin": {
  "data": {
   "lineno": 199
  },
  "type": "class"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin.__init__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin.__init__.value": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.kl_and_loss_stats": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.torch_ops.explained_variance",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.postprocess_ppo_gae": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.postprocess_ppo_gae"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ppo_surrogate_loss": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.evaluation.postprocessing.Postprocessing.ADVANTAGES",
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.utils.torch_ops.sequence_mask",
    "ray.rllib.utils.typing.TensorType",
    "reduce_mean_valid",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ppo_surrogate_loss.reduce_mean_valid": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.sequence_mask": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.sequence_mask"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.setup_config": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.setup_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.setup_mixins": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.ValueNetworkMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.vf_preds_fetches": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.ppo.ppo_torch_policy.view_requirements_fn": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.view_requirements_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.qmix.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.qmix.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.QMixTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.qmix.QMixTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.agents.qmix.mixers": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.qmix.mixers.QMixer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ray.rllib.agents.qmix.mixers.QMixer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "ray.rllib.agents.qmix.mixers.QMixer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.mixers.QMixer.forward": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.mixers.VDNMixer": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.rllib.agents.qmix.mixers.VDNMixer.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.agents.qmix.mixers.VDNMixer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.mixers.VDNMixer.forward": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.mixers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.mixers.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.qmix.model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.model.RNNModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.qmix.model.RNNModel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.agents.qmix.model._get_size",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.model.RNNModel.forward": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.model.RNNModel.get_initial_state": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.model._get_size": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.models.preprocessors.get_preprocessor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.model.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer.with_updates",
    "ray.rllib.agents.qmix.qmix.DEFAULT_CONFIG",
    "ray.rllib.agents.qmix.qmix.execution_plan",
    "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.qmix.qmix.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.DEFAULT_CONFIG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.agents.qmix.qmix.GenericOffPolicyTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.QMixTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.QMixTrainer": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ray.rllib.agents.qmix.qmix.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.SimpleReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.SimpleReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix.execution_plan": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.SimpleReplayBuffer",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.execution.train_ops.UpdateTargetNetwork"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.qmix.qmix_policy.logging",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.qmix.qmix_policy.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.ENV_STATE": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.ENV_STATE"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.GROUP_REWARDS": {
  "data": {
   "shadows": "ray.rllib.env.constants.GROUP_REWARDS"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixLoss": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixLoss.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixLoss.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "ray.rllib.agents.qmix.qmix_policy._unroll_mac"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "gym.spaces.Dict",
    "isinstance",
    "len",
    "list",
    "ray.rllib.agents.qmix.mixers.QMixer",
    "ray.rllib.agents.qmix.mixers.VDNMixer",
    "ray.rllib.agents.qmix.model.RNNModel",
    "ray.rllib.agents.qmix.model._get_size",
    "ray.rllib.agents.qmix.qmix_policy.QMixLoss",
    "ray.rllib.agents.qmix.qmix_policy._validate",
    "ray.rllib.agents.qmix.qmix_policy.ray",
    "ray.rllib.env.multi_agent_env.ENV_STATE",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "set",
    "super",
    "torch.optim.RMSprop",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy._cpu_dict": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy._device_dict": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy._get_group_rewards": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.array",
    "ray.rllib.env.constants.GROUP_REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy._unpack_observation": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.ones",
    "ray.rllib.agents.qmix.qmix_policy.tree",
    "ray.rllib.env.multi_agent_env.ENV_STATE",
    "ray.rllib.models.modelv2._unpack_obs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.compute_actions": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.array",
    "ray.rllib.agents.qmix.qmix_policy._mac",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.compute_log_likelihoods": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.zeros",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.get_initial_state": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.get_state": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.get_weights": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.learn_on_batch": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "max",
    "numpy.arange",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.reshape",
    "numpy.tile",
    "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.INFOS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.UNROLL_ID",
    "ray.rllib.utils.annotations.override",
    "to_batches"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.learn_on_batch.to_batches": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "list",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.set_epsilon": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.set_state": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.set_weights": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixTorchPolicy.update_target": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "ray.rllib.agents.qmix.qmix_policy.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.QMixer": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.mixers.QMixer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.RMSprop": {
  "data": {
   "shadows": "torch.optim.RMSprop"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.RNNModel": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.model.RNNModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.VDNMixer": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.mixers.VDNMixer"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy._add_agent_dim": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy._drop_agent_dim": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy._get_size": {
  "data": {
   "shadows": "ray.rllib.agents.qmix.model._get_size"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy._mac": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "model",
    "ray.rllib.agents.qmix.qmix_policy._drop_agent_dim"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy._unpack_obs": {
  "data": {
   "shadows": "ray.rllib.models.modelv2._unpack_obs"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy._unroll_mac": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "model",
    "model.get_initial_state",
    "range",
    "ray.rllib.agents.qmix.qmix_policy._mac"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy._validate": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "hasattr",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.qmix.qmix_policy.chop_into_sequences": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.agents.qmix.qmix_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.agents.qmix.qmix_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.agents.registry._import_a2c",
    "ray.rllib.agents.registry._import_a3c",
    "ray.rllib.agents.registry._import_apex",
    "ray.rllib.agents.registry._import_apex_ddpg",
    "ray.rllib.agents.registry._import_appo",
    "ray.rllib.agents.registry._import_ars",
    "ray.rllib.agents.registry._import_bc",
    "ray.rllib.agents.registry._import_ddpg",
    "ray.rllib.agents.registry._import_ddppo",
    "ray.rllib.agents.registry._import_dqn",
    "ray.rllib.agents.registry._import_dreamer",
    "ray.rllib.agents.registry._import_es",
    "ray.rllib.agents.registry._import_impala",
    "ray.rllib.agents.registry._import_maml",
    "ray.rllib.agents.registry._import_marwil",
    "ray.rllib.agents.registry._import_mbmpo",
    "ray.rllib.agents.registry._import_pg",
    "ray.rllib.agents.registry._import_ppo",
    "ray.rllib.agents.registry._import_qmix",
    "ray.rllib.agents.registry._import_sac",
    "ray.rllib.agents.registry._import_simple_q",
    "ray.rllib.agents.registry._import_td3"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.registry.ALGORITHMS": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.rllib.agents.registry.CONTRIBUTED_ALGORITHMS": {
  "data": {
   "shadows": "ray.rllib.contrib.registry.CONTRIBUTED_ALGORITHMS"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry._MockTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.mock._MockTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry._ParameterTuningTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.mock._ParameterTuningTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry._SigmoidFakeData": {
  "data": {
   "shadows": "ray.rllib.agents.mock._SigmoidFakeData"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry._agent_import_failed": {
  "data": {
   "shadows": "ray.rllib.agents.mock._agent_import_failed"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry._get_agent_class": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.agents.mock._MockTrainer",
    "ray.rllib.agents.mock._ParameterTuningTrainer",
    "ray.rllib.agents.mock._SigmoidFakeData",
    "ray.rllib.agents.registry.ALGORITHMS",
    "ray.rllib.contrib.registry.CONTRIBUTED_ALGORITHMS",
    "ray.tune.script_runner.ScriptRunner",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_a2c": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.A2CTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_a3c": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.agents.a3c.A3CTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_apex": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.ApexTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_apex_ddpg": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ApexDDPGTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_appo": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.APPOTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_ars": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib.agents.ars.ARSTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_bc": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.BCTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_ddpg": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.DDPGTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_ddppo": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.DDPPOTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_dqn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.DQNTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_dreamer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.rllib.agents.dreamer.DREAMERTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_es": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.rllib.agents.es.ESTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_impala": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.agents.impala.ImpalaTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_maml": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.rllib.agents.maml.MAMLTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_marwil": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ray.rllib.agents.marwil.MARWILTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_mbmpo": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ray.rllib.agents.mbmpo.MBMPOTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_pg": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.PGTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_ppo": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.PPOTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_qmix": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.agents.qmix.QMixTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_sac": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.SACTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_simple_q": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.SimpleQTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry._import_td3": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.TD3Trainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry.a3c": {
  "data": {
   "shadows": "ray.rllib.agents.a3c"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.ars": {
  "data": {
   "shadows": "ray.rllib.agents.ars"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.ddpg": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.dqn": {
  "data": {
   "shadows": "ray.rllib.agents.dqn"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.dreamer": {
  "data": {
   "shadows": "ray.rllib.agents.dreamer"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.es": {
  "data": {
   "shadows": "ray.rllib.agents.es"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.get_agent_class": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ImportError",
    "ray.rllib.agents.mock._agent_import_failed",
    "ray.rllib.agents.registry._get_agent_class",
    "ray.rllib.agents.registry.traceback",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.registry.impala": {
  "data": {
   "shadows": "ray.rllib.agents.impala"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.maml": {
  "data": {
   "shadows": "ray.rllib.agents.maml"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.marwil": {
  "data": {
   "shadows": "ray.rllib.agents.marwil"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.mbmpo": {
  "data": {
   "shadows": "ray.rllib.agents.mbmpo"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.pg": {
  "data": {
   "shadows": "ray.rllib.agents.pg"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.ppo": {
  "data": {
   "shadows": "ray.rllib.agents.ppo"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.qmix": {
  "data": {
   "shadows": "ray.rllib.agents.qmix"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.sac": {
  "data": {
   "shadows": "ray.rllib.agents.sac"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.script_runner": {
  "data": {
   "shadows": "ray.tune.script_runner"
  },
  "type": "import"
 },
 "ray.rllib.agents.registry.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.agents.sac.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.SACTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_policy.SACTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.SACTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_torch_policy.SACTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.SACTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac.SACTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer.with_updates",
    "ray.rllib.agents.sac.sac.DEFAULT_CONFIG",
    "ray.rllib.agents.sac.sac.get_policy_class",
    "ray.rllib.agents.sac.sac.logging",
    "ray.rllib.agents.sac.sac.validate_config",
    "ray.rllib.agents.sac.sac_tf_policy.SACTFPolicy",
    "ray.rllib.agents.trainer.with_common_config"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.sac.sac.DEFAULT_CONFIG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac.GenericOffPolicyTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.OPTIMIZER_SHARED_CONFIGS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.SACTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_policy.SACTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.SACTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_torch_policy.SACTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.SACTrainer": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.get_policy_class": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.sac_torch_policy.SACTorchPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac.validate_config": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.sac.sac.logger",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.sac.sac_tf_model.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "build_q_net",
    "enumerate",
    "float",
    "getattr",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.float32",
    "numpy.log",
    "numpy.prod",
    "numpy.product",
    "ray.rllib.agents.sac.sac_tf_model.SACTFModel",
    "ray.rllib.agents.sac.sac_tf_model.gym",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.__init__.build_q_net": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "q_net"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.get_policy_output": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.get_q_values": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.get_twin_q_values": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.policy_variables": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.SACTFModel.q_variables": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin",
    "ray.rllib.agents.sac.sac_tf_policy.ActorCriticOptimizerMixin",
    "ray.rllib.agents.sac.sac_tf_policy.apply_gradients",
    "ray.rllib.agents.sac.sac_tf_policy.build_sac_model",
    "ray.rllib.agents.sac.sac_tf_policy.compute_and_clip_gradients",
    "ray.rllib.agents.sac.sac_tf_policy.get_distribution_inputs_and_class",
    "ray.rllib.agents.sac.sac_tf_policy.logging",
    "ray.rllib.agents.sac.sac_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.sac.sac_tf_policy.ray",
    "ray.rllib.agents.sac.sac_tf_policy.sac_actor_critic_loss",
    "ray.rllib.agents.sac.sac_tf_policy.setup_early_mixins",
    "ray.rllib.agents.sac.sac_tf_policy.setup_late_mixins",
    "ray.rllib.agents.sac.sac_tf_policy.setup_mid_mixins",
    "ray.rllib.agents.sac.sac_tf_policy.stats",
    "ray.rllib.agents.sac.sac_tf_policy.validate_spaces",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_tfp"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ActorCriticOptimizerMixin": {
  "data": {
   "lineno": 548
  },
  "type": "class"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ActorCriticOptimizerMixin.__init__": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.get_variable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Beta": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Beta"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ComputeTDErrorMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.DiagGaussian": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.DiagGaussian"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.LocalOptimizer": {
  "data": {
   "shadows": "ray.rllib.utils.typing.LocalOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.SACTFModel": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_model.SACTFModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.SACTFPolicy": {
  "data": {
   "lineno": 673
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_tf_policy.SACTorchModel": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_torch_model.SACTorchModel"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.SquashedGaussian": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.SquashedGaussian"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.TFActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.TargetNetworkMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy._get_dist_class": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "isinstance",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.models.tf.tf_action_dist.Beta",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.tf.tf_action_dist.DiagGaussian",
    "ray.rllib.models.tf.tf_action_dist.SquashedGaussian",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.apply_gradients": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.LocalOptimizer",
    "ray.rllib.utils.typing.ModelGradients",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.build_sac_model": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.sac_tf_model.SACTFModel",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.agents.sac.sac_tf_policy.logger",
    "ray.rllib.agents.sac.sac_torch_model.SACTorchModel",
    "ray.rllib.models.ModelCatalog.get_model_v2",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.compute_and_clip_gradients": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "clip_func",
    "functools.partial",
    "len",
    "list",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.LocalOptimizer",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.get_distribution_inputs_and_class": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool",
    "model",
    "model.get_policy_output",
    "ray.rllib.agents.sac.sac_tf_policy._get_dist_class",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.postprocess_nstep_and_prio": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.postprocess_trajectory": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_tf_policy.postprocess_nstep_and_prio",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.AgentID",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.sac_actor_critic_loss": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "action_dist_class",
    "len",
    "model",
    "model.alpha",
    "model.discrete",
    "model.get_policy_output",
    "model.get_q_values",
    "model.get_twin_q_values",
    "model.log_alpha",
    "model.target_entropy",
    "ray.rllib.agents.sac.sac_tf_policy._get_dist_class",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.setup_early_mixins": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.sac_tf_policy.ActorCriticOptimizerMixin",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.setup_late_mixins": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.TargetNetworkMixin.__init__",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.setup_mid_mixins": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ray.rllib.agents.ddpg.ddpg_tf_policy.ComputeTDErrorMixin.__init__",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.agents.sac.sac_tf_policy.sac_actor_critic_loss",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.stats": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_tf_policy.tfp": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.try_import_tfp": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tfp"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_tf_policy.validate_spaces": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "isinstance",
    "len",
    "ray.rllib.agents.sac.sac_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.error.UnsupportedSpaceException",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.sac.sac_torch_model.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "bool",
    "build_q_net",
    "enumerate",
    "float",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.float32",
    "numpy.log",
    "numpy.prod",
    "numpy.product",
    "ray.rllib.agents.sac.sac_torch_model.SACTorchModel",
    "ray.rllib.agents.sac.sac_torch_model.gym",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.get_activation_fn",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.__init__.build_q_net": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.get_activation_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.get_policy_output": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.get_q_values": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.get_twin_q_values": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.policy_variables": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SACTorchModel.q_variables": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping",
    "ray.rllib.agents.sac.sac_tf_policy.postprocess_trajectory",
    "ray.rllib.agents.sac.sac_tf_policy.validate_spaces",
    "ray.rllib.agents.sac.sac_torch_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.sac.sac_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.sac.sac_torch_policy.action_distribution_fn",
    "ray.rllib.agents.sac.sac_torch_policy.actor_critic_loss",
    "ray.rllib.agents.sac.sac_torch_policy.build_sac_model_and_action_dist",
    "ray.rllib.agents.sac.sac_torch_policy.logging",
    "ray.rllib.agents.sac.sac_torch_policy.optimizer_fn",
    "ray.rllib.agents.sac.sac_torch_policy.ray",
    "ray.rllib.agents.sac.sac_torch_policy.setup_late_mixins",
    "ray.rllib.agents.sac.sac_torch_policy.stats",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ComputeTDErrorMixin": {
  "data": {
   "lineno": 390
  },
  "type": "class"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ComputeTDErrorMixin.__init__": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ComputeTDErrorMixin.__init__.compute_td_error": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS",
    "ray.rllib.agents.sac.sac_torch_policy.actor_critic_loss",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.F": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_torch_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.LocalOptimizer": {
  "data": {
   "shadows": "ray.rllib.utils.typing.LocalOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.PRIO_WEIGHTS": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.PRIO_WEIGHTS"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.SACTorchPolicy": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TargetNetworkMixin": {
  "data": {
   "lineno": 420
  },
  "type": "class"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TargetNetworkMixin.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TargetNetworkMixin.update_target": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TorchBeta": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchBeta"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TorchDiagGaussian": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TorchSquashedGaussian": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy._get_dist_class": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "isinstance",
    "ray.rllib.agents.sac.sac_torch_policy.gym",
    "ray.rllib.models.torch.torch_action_dist.TorchBeta",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.action_distribution_fn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "int",
    "model",
    "model.get_policy_output",
    "ray.rllib.agents.sac.sac_torch_policy._get_dist_class",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.actor_critic_loss": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "action_dist_class",
    "model",
    "model.discrete",
    "model.get_policy_output",
    "model.get_q_values",
    "model.get_twin_q_values",
    "model.log_alpha",
    "model.target_entropy",
    "model.target_entropy.detach",
    "ray.rllib.agents.sac.sac_torch_policy.F",
    "ray.rllib.agents.sac.sac_torch_policy._get_dist_class",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS.long",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES.float",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS.detach",
    "ray.rllib.utils.typing.TensorType",
    "tuple",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.apply_grad_clipping": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.a3c_torch_policy.apply_grad_clipping"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.build_sac_model": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_policy.build_sac_model"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.build_sac_model_and_action_dist": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.sac_tf_policy.build_sac_model",
    "ray.rllib.agents.sac.sac_torch_policy._get_dist_class",
    "ray.rllib.agents.sac.sac_torch_policy.gym",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.agents.sac.sac_torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.optimizer_fn": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.LocalOptimizer",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.postprocess_trajectory": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_policy.postprocess_trajectory"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.setup_late_mixins": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ray.rllib.agents.sac.sac_torch_policy.ComputeTDErrorMixin",
    "ray.rllib.agents.sac.sac_torch_policy.TargetNetworkMixin",
    "ray.rllib.agents.sac.sac_torch_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.stats": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.sac.sac_torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.agents.sac.sac_torch_policy.validate_spaces": {
  "data": {
   "shadows": "ray.rllib.agents.sac.sac_tf_policy.validate_spaces"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.callbacks.DefaultCallbacks",
    "ray.rllib.agents.trainer.logging",
    "ray.rllib.models.MODEL_DEFAULTS",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.trainer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.ENV_CREATOR": {
  "data": {
   "shadows": "ray.tune.registry.ENV_CREATOR"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.EnvInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.ExportFormat": {
  "data": {
   "shadows": "ray.tune.trial.ExportFormat"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.FilterManager": {
  "data": {
   "shadows": "ray.rllib.utils.FilterManager"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Logger": {
  "data": {
   "shadows": "ray.tune.logger.Logger"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.MAX_WORKER_FAILURE_RETRIES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.agents.trainer.MODEL_DEFAULTS": {
  "data": {
   "shadows": "ray.rllib.models.MODEL_DEFAULTS"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.NormalizeActionWrapper": {
  "data": {
   "shadows": "ray.rllib.env.normalize_actions.NormalizeActionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.PartialTrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PartialTrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.RayError": {
  "data": {
   "shadows": "ray.exceptions.RayError"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.ResultDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ResultDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.TensorStructType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorStructType"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Trainer": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.trainer.Trainer.__getstate__": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.tune.logger.Logger",
    "str",
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.__init__.default_logger_creator": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.os",
    "ray.rllib.agents.trainer.tempfile",
    "ray.tune.logger.UnifiedLogger",
    "ray.tune.result.DEFAULT_RESULTS_DIR"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.__setstate__": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.agents.trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._before_evaluate": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._default_config": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._evaluate": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "isinstance",
    "len",
    "range",
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.agents.trainer.math",
    "ray.rllib.agents.trainer.ray",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._export_model": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.os",
    "ray.rllib.utils.annotations.override",
    "ray.tune.trainable.Trainable",
    "ray.tune.trial.ExportFormat.CHECKPOINT",
    "ray.tune.trial.ExportFormat.MODEL",
    "ray.tune.trial.ExportFormat.validate",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._init": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._make_workers": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Callable",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._name": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._register_if_needed": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "ValueError",
    "env_object",
    "isinstance",
    "ray.rllib.utils.typing.EnvType",
    "ray.tune.registry.register_env",
    "str",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._sync_filters_if_needed": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.utils.FilterManager.synchronize"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._sync_weights_to_workers": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.agents.trainer.ray",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._try_recover": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "enumerate",
    "hasattr",
    "len",
    "ray.exceptions.RayError",
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.agents.trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer._validate_config": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.cleanup": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.utils.annotations.override",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.collect_metrics": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.compute_action": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "bool",
    "float",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorStructType",
    "ray.rllib.utils.typing.EnvInfoDict",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.compute_actions": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.stack",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.spaces.space_utils.unbatch",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.default_resource_request": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.tune.resources.Resources",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.export_policy_checkpoint": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.export_policy_model": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.get_policy": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.PolicyID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.get_weights": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.import_model": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "FileNotFoundError",
    "NotImplementedError",
    "ray.rllib.agents.trainer.os",
    "ray.tune.trial.ExportFormat.H5",
    "ray.tune.trial.ExportFormat.validate",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.import_policy_model_from_h5": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.load_checkpoint": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "open",
    "ray.rllib.agents.trainer.pickle",
    "ray.rllib.utils.annotations.override",
    "ray.tune.trainable.Trainable",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.log_result": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.ResultDict",
    "ray.tune.trainable.Trainable",
    "ray.tune.trainable.Trainable.log_result"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.merge_trainer_configs": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "dict",
    "ray.rllib.agents.trainer.copy",
    "ray.rllib.utils.deep_update",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.merge_trainer_configs.make_callbacks": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "ray.rllib.agents.callbacks.DefaultCallbacks"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.resource_help": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.save_checkpoint": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "open",
    "ray.rllib.agents.trainer.os",
    "ray.rllib.agents.trainer.pickle",
    "ray.rllib.utils.annotations.override",
    "ray.tune.trainable.Trainable",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.set_weights": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.setup": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "get_scope",
    "inner",
    "normalize",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.copy",
    "ray.rllib.agents.trainer.gym",
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.agents.trainer.logging",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.from_config.from_config",
    "ray.rllib.utils.merge_dicts",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.tune.registry.ENV_CREATOR",
    "ray.tune.registry._global_registry.contains",
    "ray.tune.registry._global_registry.get",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.setup.get_scope": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "open",
    "ray.rllib.agents.trainer.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.setup.normalize": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.agents.trainer.gym",
    "ray.rllib.env.normalize_actions.NormalizeActionWrapper",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.train": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "dict",
    "hasattr",
    "isinstance",
    "range",
    "ray.exceptions.RayError",
    "ray.rllib.agents.trainer.MAX_WORKER_FAILURE_RETRIES",
    "ray.rllib.agents.trainer.logger",
    "ray.rllib.agents.trainer.time",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.ResultDict",
    "ray.tune.trainable.Trainable",
    "ray.tune.trainable.Trainable.train"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.Trainer.with_updates": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.UnifiedLogger": {
  "data": {
   "shadows": "ray.tune.logger.UnifiedLogger"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer._global_registry": {
  "data": {
   "shadows": "ray.tune.registry._global_registry"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.deep_update": {
  "data": {
   "shadows": "ray.rllib.utils.deep_update"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.rllib.agents.trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.space_utils": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer.with_common_config": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.trainer_template.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.agents.trainer_template.COMMON_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.COMMON_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.EnvConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.ResultDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ResultDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.Trainer"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.add_mixins": {
  "data": {
   "shadows": "ray.rllib.utils.add_mixins"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.build_trainer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "locals",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer_template.default_execution_plan",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.add_mixins",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.ResultDict",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str",
    "type",
    "typing.Callable",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.COMMON_CONFIG"
   ]
  },
  "type": "class"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls.__getstate__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.Trainer.__getstate__",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls.__setstate__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer.Trainer.__setstate__",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls._before_evaluate": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "before_evaluate_fn",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls._init": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "after_init",
    "before_init",
    "execution_plan",
    "get_policy_class",
    "ray.rllib.utils.typing.EnvConfigDict",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "typing.Callable",
    "validate_config"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls.step": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "next",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.build_trainer.trainer_cls.with_updates": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.agents.trainer.Trainer",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.utils.annotations.override",
    "staticmethod",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.default_execution_plan": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.agents.trainer_template.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.agents.trainer_template.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.agents.trainer_template.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.agents.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.policy.torch_policy.TorchPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mcts_creator",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy.compute_actions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "ray.rllib.contrib.alpha_zero.core.mcts.Node",
    "ray.rllib.contrib.alpha_zero.core.mcts.RootParentNode",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy.learn_on_batch": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy.postprocess_trajectory": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones_like",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.Node": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.mcts.Node"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.RootParentNode": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.mcts.RootParentNode"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.agents.with_common_config",
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroDefaultCallbacks",
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicyWrapperClass",
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.DEFAULT_CONFIG",
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.execution_plan",
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.logging",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroDefaultCallbacks": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.agents.callbacks.DefaultCallbacks"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroDefaultCallbacks.on_episode_start": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicy": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicyWrapperClass": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_policy.AlphaZeroPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicyWrapperClass.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.alpha_zero_loss",
    "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.tune.registry.ENV_CREATOR",
    "ray.tune.registry._global_registry.get",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicyWrapperClass.__init__._env_creator": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "env_creator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroPolicyWrapperClass.__init__.mcts_creator": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.mcts.MCTS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroTrainer": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.DEFAULT_CONFIG": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.ENV_CREATOR": {
  "data": {
   "shadows": "ray.tune.registry.ENV_CREATOR"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.MCTS": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.mcts.MCTS"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.SimpleReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.SimpleReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.WaitUntilTimestepsElapsed": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.WaitUntilTimestepsElapsed"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer._global_registry": {
  "data": {
   "shadows": "ray.tune.registry._global_registry"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.alpha_zero_loss": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.restore_original_dimensions"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.execution_plan": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.SimpleReplayBuffer",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.replay_ops.WaitUntilTimestepsElapsed",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.get_r2_env_wrapper": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.restore_original_dimensions": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.restore_original_dimensions"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.MCTS": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.MCTS.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.MCTS.compute_action": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argmax",
    "numpy.max",
    "numpy.power",
    "numpy.random.choice",
    "numpy.random.dirichlet",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.backup": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.best_action": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.child_Q": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.child_U": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.mcts.math"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.expand": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.get_child": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.mcts.Node"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.number_visits": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.select": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.Node.total_value": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.RootParentNode": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.RootParentNode.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "ray.rllib.contrib.alpha_zero.core.mcts.collections"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.mcts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer.add_reward": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer.get_state": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer.normalize": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer.set_state": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "env_creator",
    "ray.rllib.contrib.alpha_zero.core.ranked_rewards.RankedRewardsBuffer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper._initialize_buffer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.choice",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper.get_state": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper.reset": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper.set_state": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.get_r2_env_wrapper.RankedRewardsEnvWrapper.step": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.core.ranked_rewards.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "ray.rllib.contrib.alpha_zero.environments.cartpole.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole.get_state": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole.reset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole.set_state": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "copy.deepcopy",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.CartPole.step": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.environments.cartpole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.models.preprocessors.get_preprocessor",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel.compute_priors_and_value": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.convert_to_tensor",
    "ray.rllib.models.modelv2.restore_original_dimensions"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel.forward": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel.value_function": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ConvNetModel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ConvNetModel.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel",
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.Flatten"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.DenseModel": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.DenseModel.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.models.custom_torch_models.ActorCriticModel"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.Flatten": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.Flatten.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "input.size",
    "input.view"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.convert_to_tensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.restore_original_dimensions": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.restore_original_dimensions"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.models.custom_torch_models.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.alpha_zero.optimizer": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.agents": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.agents.LinTSTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.lin_ts.LinTSTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.LinUCBTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.lin_ucb.LinUCBTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.contrib.bandits.agents.lin_ts.TS_CONFIG",
    "ray.rllib.contrib.bandits.agents.lin_ts.logging",
    "ray.rllib.contrib.bandits.agents.policy.BanditPolicy"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.BanditPolicy": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.policy.BanditPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.LinTSTrainer": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.TS_CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ts.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.contrib.bandits.agents.lin_ucb.UCB_CONFIG",
    "ray.rllib.contrib.bandits.agents.lin_ucb.logging",
    "ray.rllib.contrib.bandits.agents.policy.BanditPolicy"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.BanditPolicy": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.policy.BanditPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.LinUCBTrainer": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.UCB_CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.lin_ucb.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.contrib.bandits.agents.policy.BanditPolicyOverrides",
    "ray.rllib.contrib.bandits.agents.policy.DEFAULT_CONFIG",
    "ray.rllib.contrib.bandits.agents.policy.init_cum_regret",
    "ray.rllib.contrib.bandits.agents.policy.logging",
    "ray.rllib.contrib.bandits.agents.policy.make_model_and_action_dist",
    "ray.rllib.policy.torch_policy_template.build_torch_policy"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.bandits.agents.policy.BanditPolicy": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.policy.BanditPolicyOverrides": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.agents.policy.BanditPolicyOverrides.learn_on_batch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.agents.policy.logger",
    "ray.rllib.contrib.bandits.agents.policy.time",
    "ray.rllib.models.modelv2.restore_original_dimensions",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.utils.annotations.override",
    "ray.util.debug.log_once",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.agents.policy.DEFAULT_CONFIG": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.policy.DiscreteLinearModel": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.DiscreteLinearModelThompsonSampling": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelThompsonSampling"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.DiscreteLinearModelUCB": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelUCB"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.ParametricLinearModelThompsonSampling": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelThompsonSampling"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.ParametricLinearModelUCB": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelUCB"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.TS_PATH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.policy.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.UCB_PATH": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.init_cum_regret": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.agents.policy.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.agents.policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.make_model_and_action_dist": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gym.spaces.Dict",
    "hasattr",
    "isinstance",
    "model_cls",
    "ray.rllib.contrib.bandits.agents.policy.TS_PATH",
    "ray.rllib.contrib.bandits.agents.policy.UCB_PATH",
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel",
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelThompsonSampling",
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelUCB",
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelThompsonSampling",
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelUCB",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.agents.policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.restore_original_dimensions": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.restore_original_dimensions"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.agents.policy.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.envs.LinearDiscreteEnv": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.ParametricItemRecoEnv": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.WheelBanditEnv": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.envs.discrete": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.envs.discrete.DEFAULT_CONFIG_LINEAR": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.envs.discrete.DEFAULT_CONFIG_WHEEL": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.envs.discrete.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.linalg.norm",
    "numpy.random.uniform",
    "ray.rllib.contrib.bandits.envs.discrete.DEFAULT_CONFIG_LINEAR",
    "ray.rllib.contrib.bandits.envs.discrete.copy",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv._sample_context": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv.render": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv.reset": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.LinearDiscreteEnv.step": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.envs.discrete.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dict",
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "ray.rllib.contrib.bandits.envs.discrete.DEFAULT_CONFIG_WHEEL",
    "ray.rllib.contrib.bandits.envs.discrete.copy",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv._sample_context": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv.render": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv.reset": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.WheelBanditEnv.step": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "numpy.linalg.norm",
    "numpy.random.normal",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.discrete.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.discrete.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.discrete.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.discrete.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.parametric": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.envs.parametric.DEFAULT_RECO_CONFIG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.envs.parametric.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.contrib.bandits.envs.parametric.DEFAULT_RECO_CONFIG",
    "ray.rllib.contrib.bandits.envs.parametric.copy",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._def_action_space": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._def_observation_space": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._gen_item_pool": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._gen_normalized_embeddings": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.rand",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._init_embeddings": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv._sample_user": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv.render": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv.reset": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.ParametricItemRecoEnv.step": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.envs.parametric.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.parametric.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.envs.parametric.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.exploration": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.exploration.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.exploration.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.exploration.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.exploration.ThompsonSampling": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.exploration.ThompsonSampling._get_torch_exploration_action": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.exploration.ThompsonSampling.get_exploration_action": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.exploration.UCB": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.exploration.UCB._get_torch_exploration_action": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.exploration.UCB.get_exploration_action": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.exploration.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.exploration.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.models": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.bandits.models.linear_regression": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "range",
    "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.current_obs": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.forward": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.partial_fit": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.predict": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel.value_function": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelThompsonSampling": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelThompsonSampling.forward": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelThompsonSampling",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelUCB": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelUCB.forward": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.DiscreteLinearModelUCB",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression._check_inputs": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression._init_params": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression.forward": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression.get_ucbs": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression.partial_fit": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression.sample_theta": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.contrib.bandits.models.linear_regression.OnlineLinearRegression",
    "ray.rllib.contrib.bandits.models.linear_regression.gym",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel._check_inputs": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.current_obs": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.forward": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.partial_fit": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.predict": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel.value_function": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelThompsonSampling": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelThompsonSampling.forward": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelThompsonSampling",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelUCB": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelUCB.forward": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.models.linear_regression.ParametricLinearModelUCB",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.contrib.bandits.models.linear_regression.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.contrib.maddpg.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.contrib.maddpg.maddpg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.MADDPGTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.maddpg.maddpg.MADDPGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer.with_updates",
    "ray.rllib.agents.trainer.COMMON_CONFIG",
    "ray.rllib.agents.trainer.with_common_config",
    "ray.rllib.contrib.maddpg.maddpg.DEFAULT_CONFIG",
    "ray.rllib.contrib.maddpg.maddpg.add_maddpg_postprocessing",
    "ray.rllib.contrib.maddpg.maddpg.logger",
    "ray.rllib.contrib.maddpg.maddpg.logging",
    "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy",
    "ray.rllib.utils.merge_dicts"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.maddpg.maddpg.COMMON_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.COMMON_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.DEFAULT_CONFIG": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg.GenericOffPolicyTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.GenericOffPolicyTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.MADDPGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.MADDPGTrainer": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.add_maddpg_postprocessing": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg.add_maddpg_postprocessing.f": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.contrib.maddpg.maddpg.before_learn_on_batch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg.before_learn_on_batch": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "list",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.contrib.maddpg.maddpg_policy.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_tfp"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGPostprocessing": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGPostprocessing.postprocess_trajectory": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_tf_policy._adjust_nstep",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGPostprocessing",
    "ray.rllib.policy.tf_policy.TFPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "_make_continuous_space",
    "_make_loss_inputs",
    "_make_ph_n",
    "_make_set_weight_op",
    "_make_target_update_op",
    "dict",
    "getattr",
    "int",
    "numpy.vectorize",
    "ray.rllib.contrib.maddpg.maddpg_policy.ray",
    "ray.rllib.policy.tf_policy.TFPolicy.__init__",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__._make_continuous_space": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "isinstance",
    "numpy.ones",
    "numpy.zeros",
    "ray.rllib.utils.error.UnsupportedSpaceException"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__._make_loss_inputs": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__._make_ph_n": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__._make_set_weight_op": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.__init__._make_target_update_op": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy._build_actor_network": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ray.rllib.contrib.maddpg.maddpg_policy.tfp",
    "ray.rllib.models.ModelCatalog.get_model"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy._build_critic_network": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "ray.rllib.models.ModelCatalog.get_model",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.build_apply_op": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.extra_compute_action_feed_dict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.extra_compute_grad_fetches": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.get_state": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.TFPolicy.get_state",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.get_weights": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.gradients": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_tf_policy.minimize_and_clip",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.optimizer": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.set_state": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.TFPolicy.set_state",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.set_weights": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.MADDPGTFPolicy.update_target": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy._adjust_nstep": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy._adjust_nstep"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.minimize_and_clip": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.minimize_and_clip"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.tfp": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.contrib.maddpg.maddpg_policy.try_import_tfp": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tfp"
  },
  "type": "import"
 },
 "ray.rllib.contrib.registry": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.contrib.registry._import_alphazero",
    "ray.rllib.contrib.registry._import_bandit_lints",
    "ray.rllib.contrib.registry._import_bandit_linucb",
    "ray.rllib.contrib.registry._import_maddpg",
    "ray.rllib.contrib.registry._import_random_agent"
   ]
  },
  "type": "module"
 },
 "ray.rllib.contrib.registry.AlphaZeroTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.registry.CONTRIBUTED_ALGORITHMS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.contrib.registry.LinTSTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.lin_ts.LinTSTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.registry.LinUCBTrainer": {
  "data": {
   "shadows": "ray.rllib.contrib.bandits.agents.lin_ucb.LinUCBTrainer"
  },
  "type": "import"
 },
 "ray.rllib.contrib.registry.RandomAgent": {
  "data": {
   "shadows": "ray.rllib.contrib.random_agent.random_agent.RandomAgent"
  },
  "type": "import"
 },
 "ray.rllib.contrib.registry._import_alphazero": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.contrib.alpha_zero.core.alpha_zero_trainer.AlphaZeroTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.registry._import_bandit_lints": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.agents.lin_ts.LinTSTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.registry._import_bandit_linucb": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.contrib.bandits.agents.lin_ucb.LinUCBTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.registry._import_maddpg": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.contrib.maddpg.MADDPGTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.registry._import_random_agent": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ray.rllib.contrib.random_agent.random_agent.RandomAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.contrib.registry.maddpg": {
  "data": {
   "shadows": "ray.rllib.contrib.maddpg"
  },
  "type": "import"
 },
 "ray.rllib.env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.DMCEnv": {
  "data": {
   "shadows": "ray.rllib.env.dm_control_wrapper.DMCEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.DMEnv": {
  "data": {
   "shadows": "ray.rllib.env.dm_env_wrapper.DMEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.env.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.ExternalMultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.PettingZooEnv": {
  "data": {
   "shadows": "ray.rllib.env.pettingzoo_env.PettingZooEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.PolicyClient": {
  "data": {
   "shadows": "ray.rllib.env.policy_client.PolicyClient"
  },
  "type": "import"
 },
 "ray.rllib.env.PolicyServerInput": {
  "data": {
   "shadows": "ray.rllib.env.policy_server_input.PolicyServerInput"
  },
  "type": "import"
 },
 "ray.rllib.env.Unity3DEnv": {
  "data": {
   "shadows": "ray.rllib.env.unity3d_env.Unity3DEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.env.atari_wrappers": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.cv2"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.atari_wrappers.ClipRewardEnv": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.ClipRewardEnv.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.ClipRewardEnv.reward": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.EpisodicLifeEnv": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.EpisodicLifeEnv.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.EpisodicLifeEnv.reset": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.EpisodicLifeEnv.step": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FireResetEnv": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.FireResetEnv.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FireResetEnv.reset": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FireResetEnv.step": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FrameStack": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.FrameStack.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "collections.deque",
    "gym.spaces.Box",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FrameStack._get_ob": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FrameStack.reset": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.FrameStack.step": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MaxAndSkipEnv": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.MaxAndSkipEnv.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.uint8",
    "numpy.zeros",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MaxAndSkipEnv.reset": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MaxAndSkipEnv.step": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.get_episode_lengths": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.get_episode_rewards": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.get_total_steps": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.next_episode_results": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.reset": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.MonitorEnv.step": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.NoopResetEnv": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.NoopResetEnv.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.NoopResetEnv.reset": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.NoopResetEnv.step": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.ScaledFloatFrame": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.ScaledFloatFrame.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.float32",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.ScaledFloatFrame.observation": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.WarpFrame": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.atari_wrappers.WarpFrame.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "numpy.uint8",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.WarpFrame.observation": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.cv2"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.cv2": {
  "data": {
   "shadows": "cv2"
  },
  "type": "import"
 },
 "ray.rllib.env.atari_wrappers.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.rllib.env.atari_wrappers.get_wrapper_by_cls": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.env.atari_wrappers.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.atari_wrappers.is_atari": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.atari_wrappers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.atari_wrappers.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.env.atari_wrappers.wrap_deepmind": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ray.rllib.env.atari_wrappers.EpisodicLifeEnv",
    "ray.rllib.env.atari_wrappers.FireResetEnv",
    "ray.rllib.env.atari_wrappers.FrameStack",
    "ray.rllib.env.atari_wrappers.MaxAndSkipEnv",
    "ray.rllib.env.atari_wrappers.MonitorEnv",
    "ray.rllib.env.atari_wrappers.NoopResetEnv",
    "ray.rllib.env.atari_wrappers.WarpFrame"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.base_env.ASYNC_RESET_RETURN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.env.base_env.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.BaseEnv": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.base_env.BaseEnv.get_unwrapped": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.BaseEnv.poll": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.BaseEnv.send_actions": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.MultiEnvDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.BaseEnv.stop": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.BaseEnv.to_base_env": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env._ExternalEnvToBaseEnv",
    "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv",
    "ray.rllib.env.base_env._VectorEnvToBaseEnv",
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.env.remote_vector_env.RemoteVectorEnv",
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.env.vector_env.VectorEnv.wrap",
    "ray.rllib.utils.typing.EnvType",
    "staticmethod",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.BaseEnv.try_reset": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.EnvID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvID"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.ExternalMultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.MultiEnvDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiEnvDict"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.Preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.Preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.RemoteVectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.remote_vector_env.RemoteVectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.base_env._DUMMY_AGENT_ID": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "issubclass",
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv._poll": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "fix",
    "ray.rllib.env.base_env._with_dummy_agent_id",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv._poll.fix": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv.poll": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._ExternalEnvToBaseEnv.send_actions": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvState": {
  "data": {
   "lineno": 433
  },
  "type": "class"
 },
 "ray.rllib.env.base_env._MultiAgentEnvState.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvState.observe": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvState.poll": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvState.reset": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "ray.rllib.env.base_env._MultiAgentEnvState",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.utils.typing.EnvType",
    "set",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv.get_unwrapped": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.EnvType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv.poll": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv.send_actions": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv.try_reset": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv.__init__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "range",
    "ray.rllib.env.vector_env.VectorEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv.get_unwrapped": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.EnvType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv.poll": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env._with_dummy_agent_id",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv.send_actions": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "range",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._VectorEnvToBaseEnv.try_reset": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env._with_dummy_agent_id": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiEnvDict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.base_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.constants": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.constants.GROUP_INFO": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.env.constants.GROUP_REWARDS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.env.dm_control_wrapper": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dm_control.suite",
    "dm_env.specs"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gym.core.Env"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.__getattr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "dm_control.suite",
    "dm_control.suite.load",
    "dm_env.specs",
    "gym.spaces.Box",
    "numpy.float32",
    "numpy.uint8",
    "ray.rllib.env.dm_control_wrapper._spec_to_box"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv._convert_action": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv._get_obs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper._flatten_obs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.action_space": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.observation_space": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.render": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.reset": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper._flatten_obs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.state_space": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.DMCEnv.step": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "range",
    "ray.rllib.env.dm_control_wrapper._flatten_obs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper._flatten_obs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper._spec_to_box": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "extract_min_max",
    "gym.spaces.Box",
    "numpy.concatenate",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper._spec_to_box.extract_min_max": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dm_env.specs.Array",
    "dm_env.specs.BoundedArray",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.int",
    "numpy.ones",
    "numpy.prod",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_control_wrapper.core": {
  "data": {
   "shadows": "gym.core"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_control_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_control_wrapper.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_control_wrapper.specs": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.env.dm_control_wrapper.suite": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.env.dm_env_wrapper": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dm_env.specs"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.rllib.env.dm_env_wrapper.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "dm_env.specs",
    "ray.rllib.env.dm_env_wrapper.DMEnv",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.action_space": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property",
    "ray.rllib.env.dm_env_wrapper._convert_spec_to_space"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.observation_space": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property",
    "ray.rllib.env.dm_env_wrapper._convert_spec_to_space"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.render": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.reset": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.reward_range": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dm_env.specs.BoundedArray",
    "float",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.DMEnv.step": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper._convert_spec_to_space": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "dm_env.specs.Array",
    "dm_env.specs.BoundedArray",
    "dm_env.specs.DiscreteArray",
    "float",
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "isinstance",
    "numpy.asscalar",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.dm_env_wrapper.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_env_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_env_wrapper.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.env.dm_env_wrapper.specs": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.env.env_context": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.env_context.EnvConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.env.env_context.EnvContext": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.env_context.EnvContext.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "dict.__init__",
    "int",
    "ray.rllib.utils.typing.EnvConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.env_context.EnvContext.copy_with_overrides": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.utils.typing.EnvConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.env_context.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.external_env.EnvActionType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvActionType"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.EnvInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.EnvObsType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvObsType"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.ExternalEnv": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.threading",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.external_env.ExternalEnv.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.external_env.gym",
    "ray.rllib.env.external_env.threading",
    "ray.rllib.utils.annotations.PublicAPI",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv._get": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.end_episode": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvObsType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.get_action": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvObsType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.log_action": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvObsType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.log_returns": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvInfoDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.run": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.ExternalEnv.start_episode": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "ray.rllib.env.external_env._ExternalEnvEpisode",
    "ray.rllib.env.external_env.uuid",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.env.external_env.threading",
    "six.moves.queue.Queue",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode._send": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode.done": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode.get_data": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode.log_action": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "ray.rllib.env.external_env._ExternalEnvEpisode.wait_for_action": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "ray.rllib.env.external_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.env.external_env.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "isinstance",
    "ray.rllib.env.external_env.ExternalEnv.__init__",
    "ray.rllib.env.external_multi_agent_env.gym",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.end_episode": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.get_action": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.log_action": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.log_returns": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.run": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv.start_episode": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.env.external_env._ExternalEnvEpisode",
    "ray.rllib.env.external_multi_agent_env.uuid",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.annotations.override",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.external_multi_agent_env.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env._ExternalEnvEpisode": {
  "data": {
   "shadows": "ray.rllib.env.external_env._ExternalEnvEpisode"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.external_multi_agent_env.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.rllib.env.group_agents_wrapper": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.group_agents_wrapper.GROUP_INFO": {
  "data": {
   "shadows": "ray.rllib.env.constants.GROUP_INFO"
  },
  "type": "import"
 },
 "ray.rllib.env.group_agents_wrapper.GROUP_REWARDS": {
  "data": {
   "shadows": "ray.rllib.env.constants.GROUP_REWARDS"
  },
  "type": "import"
 },
 "ray.rllib.env.group_agents_wrapper.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.group_agents_wrapper.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper._group_items": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "agg_fn",
    "collections.OrderedDict",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper._ungroup_items": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper.reset": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper.step": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "ray.rllib.env.constants.GROUP_INFO",
    "ray.rllib.env.constants.GROUP_REWARDS",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.meta_env": {
  "data": {
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.meta_env.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.env.meta_env.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.env.meta_env.MetaEnv": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.env.meta_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.meta_env.MetaEnv.get_task": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.env.meta_env.TaskType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.meta_env.MetaEnv.sample_tasks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "ray.rllib.env.meta_env.TaskType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.meta_env.MetaEnv.set_task": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.env.meta_env.TaskType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.meta_env.TaskType": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.rllib.env.meta_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.model_vector_env.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.model_vector_env.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv.get_unwrapped": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv.reset_at": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv.vector_reset": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env._VectorizedModelGymEnv.vector_step": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "list",
    "numpy.asarray",
    "numpy.clip",
    "numpy.stack",
    "range",
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.env.model_vector_env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env.model_vector_env": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env.BaseEnv.to_base_env",
    "ray.rllib.env.model_vector_env._VectorizedModelGymEnv",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.utils.typing.EnvType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.model_vector_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.model_vector_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.multi_agent_env.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.ENV_STATE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.env.multi_agent_env.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.MultiAgentEnv": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.multi_agent_env.MultiAgentEnv.reset": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.multi_agent_env.MultiAgentEnv.step": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.multi_agent_env.MultiAgentEnv.with_agent_groups": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper",
    "ray.rllib.env.multi_agent_env.gym",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.AgentID",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.multi_agent_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env._GroupAgentsWrapper": {
  "data": {
   "shadows": "ray.rllib.env.group_agents_wrapper._GroupAgentsWrapper"
  },
  "type": "import"
 },
 "ray.rllib.env.multi_agent_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.normalize_actions": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.normalize_actions.NormalizeActionWrapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.env.normalize_actions.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.normalize_actions.NormalizeActionWrapper.action": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "isinstance",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.normalize_actions.NormalizeActionWrapper.reverse_action": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.normalize_actions.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.normalize_actions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.normalize_actions.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.env.pettingzoo_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.pettingzoo_env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.close": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.render": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.reset": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.seed": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.ParallelPettingZooEnv.step": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv._init_dicts": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.close": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.render": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.reset": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.seed": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.step": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "all",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.pettingzoo_env.PettingZooEnv.with_agent_groups": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.rllib.env.policy_client.logger",
    "ray.rllib.env.policy_client.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.policy_client.EnvActionType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvActionType"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.EnvInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.EnvObsType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvObsType"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.ExternalMultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.ExternalMultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.PolicyClient": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.policy_client.PolicyClient.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "ray.rllib.utils.annotations.PublicAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient._send": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.cloudpickle.loads",
    "ray.rllib.env.policy_client.logger",
    "ray.rllib.env.policy_client.requests"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient._setup_local_rollout_worker": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.env.policy_client._create_embedded_rollout_worker",
    "ray.rllib.env.policy_client.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient._update_local_policy": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.env.policy_client.logger",
    "ray.rllib.env.policy_client.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.end_episode": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvObsType",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.get_action": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvObsType",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str",
    "tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.log_action": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvObsType",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.log_returns": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvInfoDict",
    "ray.rllib.utils.typing.MultiAgentDict",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.start_episode": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PolicyClient.update_policy_weights": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client._LocalInferenceThread": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.threading"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.policy_client._LocalInferenceThread.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._LocalInferenceThread.run": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "ray.rllib.env.policy_client.PolicyClient",
    "ray.rllib.env.policy_client.logger",
    "ray.rllib.policy.sample_batch.MultiAgentBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._auto_wrap_external": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._auto_wrap_external.wrapped_creator": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ExternalEnvWrapper",
    "isinstance",
    "ray.rllib.env.ExternalEnv",
    "ray.rllib.env.ExternalMultiAgentEnv",
    "ray.rllib.env.MultiAgentEnv",
    "ray.rllib.env.policy_client.logger",
    "real_env_creator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._auto_wrap_external.wrapped_creator.ExternalEnvWrapper": {
  "data": {
   "lineno": 306
  },
  "type": "class"
 },
 "ray.rllib.env.policy_client._auto_wrap_external.wrapped_creator.ExternalEnvWrapper.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._auto_wrap_external.wrapped_creator.ExternalEnvWrapper.run": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client._create_embedded_rollout_worker": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client._LocalInferenceThread",
    "ray.rllib.env.policy_client._auto_wrap_external",
    "ray.rllib.env.policy_client.logger",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "real_env_creator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_client.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.env.policy_client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.requests": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.env.policy_client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.policy_server_input.logger",
    "ray.rllib.env.policy_server_input.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.policy_server_input.HTTPServer": {
  "data": {
   "shadows": "http.server.HTTPServer"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.input_reader.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.PolicyClient": {
  "data": {
   "shadows": "ray.rllib.env.policy_client.PolicyClient"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.PolicyServerInput": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "http.server.HTTPServer",
    "ray.rllib.offline.input_reader.InputReader",
    "socketserver.ThreadingMixIn"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.policy_server_input.PolicyServerInput.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "http.server.HTTPServer.__init__",
    "ray.rllib.env.policy_server_input._make_handler",
    "ray.rllib.env.policy_server_input.logger",
    "ray.rllib.env.policy_server_input.queue",
    "ray.rllib.env.policy_server_input.threading",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input.PolicyServerInput.__init__.get_metrics": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.rllib.env.policy_server_input.queue"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input.PolicyServerInput.next": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.SimpleHTTPRequestHandler": {
  "data": {
   "shadows": "http.server.SimpleHTTPRequestHandler"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.ThreadingMixIn": {
  "data": {
   "shadows": "socketserver.ThreadingMixIn"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input._create_embedded_rollout_worker": {
  "data": {
   "shadows": "ray.rllib.env.policy_client._create_embedded_rollout_worker"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input._make_handler": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.rllib.env.policy_server_input.threading"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input._make_handler.Handler": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "http.server.SimpleHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.policy_server_input._make_handler.Handler.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input._make_handler.Handler.do_POST": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Exception",
    "int",
    "ray.cloudpickle.dumps",
    "ray.cloudpickle.loads",
    "ray.rllib.env.policy_server_input.traceback"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input._make_handler.Handler.execute_command": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.env.policy_client.PolicyClient.END_EPISODE",
    "ray.rllib.env.policy_client.PolicyClient.GET_ACTION",
    "ray.rllib.env.policy_client.PolicyClient.GET_WEIGHTS",
    "ray.rllib.env.policy_client.PolicyClient.GET_WORKER_ARGS",
    "ray.rllib.env.policy_client.PolicyClient.LOG_ACTION",
    "ray.rllib.env.policy_client.PolicyClient.LOG_RETURNS",
    "ray.rllib.env.policy_client.PolicyClient.REPORT_SAMPLES",
    "ray.rllib.env.policy_client.PolicyClient.START_EPISODE",
    "ray.rllib.env.policy_server_input.logger",
    "report_data",
    "setup_child_rollout_worker"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input._make_handler.report_data": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input._make_handler.setup_child_rollout_worker": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.rllib.env.policy_client._create_embedded_rollout_worker"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.policy_server_input.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.env.policy_server_input.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.env.policy_server_input.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.remote_vector_env.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.remote_vector_env.ASYNC_RESET_RETURN": {
  "data": {
   "shadows": "ray.rllib.env.base_env.ASYNC_RESET_RETURN"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.EnvID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvID"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.MultiEnvDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiEnvDict"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.utils.typing.EnvType",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.poll": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "list",
    "make_remote_env",
    "range",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.remote_vector_env.logger",
    "ray.rllib.env.remote_vector_env.ray",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiEnvDict",
    "set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.poll.make_remote_env": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.rllib.env.remote_vector_env.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.send_actions": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.MultiEnvDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.stop": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.RemoteVectorEnv.try_reset": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.ASYNC_RESET_RETURN",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env._DUMMY_AGENT_ID": {
  "data": {
   "shadows": "ray.rllib.env.base_env._DUMMY_AGENT_ID"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env._RemoteMultiAgentEnv": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.env.remote_vector_env.ray"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.remote_vector_env._RemoteMultiAgentEnv.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "make_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env._RemoteMultiAgentEnv.reset": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env._RemoteMultiAgentEnv.step": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env._RemoteSingleAgentEnv": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ray.rllib.env.remote_vector_env.ray"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.remote_vector_env._RemoteSingleAgentEnv.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "make_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env._RemoteSingleAgentEnv.reset": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env._RemoteSingleAgentEnv.step": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.remote_vector_env.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.env.remote_vector_env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.remote_vector_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.unity3d_env.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.unity3d_env.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.TupleSpace": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "int",
    "mlagents_envs.environment.UnityEnvironment",
    "print",
    "ray.rllib.env.unity3d_env.mlagents_envs",
    "ray.rllib.env.unity3d_env.random",
    "ray.rllib.env.unity3d_env.time",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv._get_step_results": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv.get_policy_configs_for_game": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dict",
    "float",
    "gym.spaces.Box",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Tuple",
    "numpy.float32",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.PolicyID",
    "staticmethod",
    "str",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv.get_policy_configs_for_game.policy_mapping_fn": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv.reset": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.Unity3DEnv.step": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.MultiAgentDict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.unity3d_env.UnityEnvironment": {
  "data": {
   "shadows": "mlagents_envs.environment.UnityEnvironment"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.env.unity3d_env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.mlagents_envs": {
  "data": {
   "shadows": "mlagents_envs"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.env.unity3d_env.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.vector_env.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.vector_env.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.EnvActionType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvActionType"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.EnvConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.EnvInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.EnvObsType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvObsType"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.VectorEnv": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.vector_env.VectorEnv.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.vector_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.VectorEnv.get_unwrapped": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.VectorEnv.reset_at": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvObsType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.VectorEnv.vector_reset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvObsType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.VectorEnv.vector_step": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "float",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvInfoDict",
    "ray.rllib.utils.typing.EnvObsType",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.VectorEnv.wrap": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.vector_env._VectorizedGymEnv",
    "ray.rllib.env.vector_env.gym",
    "ray.rllib.utils.typing.EnvConfigDict",
    "ray.rllib.utils.typing.EnvType",
    "staticmethod",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv.get_unwrapped": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv.reset_at": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv.vector_reset": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env._VectorizedGymEnv.vector_step": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "numpy.isfinite",
    "numpy.isreal",
    "numpy.isscalar",
    "range",
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.vector_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.env.vector_env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.vector_env.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.DictSpace": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gym.spaces.Dict",
    "ray.rllib.env.wrappers.kaggle_wrapper.kaggle_environments",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv._convert_obs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "copy.deepcopy",
    "gym.spaces.Dict",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv.build_agent_spaces": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiBinary",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Space",
    "gym.spaces.Tuple",
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv.reset": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.KaggleFootballMultiAgentEnv.step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "enumerate",
    "gym.spaces.Dict",
    "gym.spaces.Tuple",
    "int",
    "len",
    "range",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.MultiAgentDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.MultiAgentDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentDict"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.MultiBinary": {
  "data": {
   "shadows": "gym.spaces.MultiBinary"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.TupleSpace": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.kaggle_environments": {
  "data": {
   "shadows": "kaggle_environments"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.kaggle_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.env.wrappers.recsim_wrapper.env_name",
    "ray.rllib.env.wrappers.recsim_wrapper.make_recsim_env",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "module"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.MultiDiscreteToDiscreteActionWrapper": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.env.wrappers.recsim_wrapper.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.MultiDiscreteToDiscreteActionWrapper.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "isinstance",
    "numpy.prod",
    "ray.rllib.env.wrappers.recsim_wrapper.gym",
    "ray.rllib.utils.error.UnsupportedSpaceException",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.MultiDiscreteToDiscreteActionWrapper.action": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "divmod",
    "enumerate",
    "int",
    "len",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.RecSimObservationSpaceWrapper": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.env.wrappers.recsim_wrapper.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.RecSimObservationSpaceWrapper.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "gym.spaces.Dict",
    "ray.rllib.env.wrappers.recsim_wrapper.gym",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.RecSimObservationSpaceWrapper.observation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.RecSimResetWrapper": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.rllib.env.wrappers.recsim_wrapper.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.RecSimResetWrapper.reset": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.env_name": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.interest_evolution": {
  "data": {
   "shadows": "recsim.environments.interest_evolution"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.make_recsim_env": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.env.wrappers.recsim_wrapper.MultiDiscreteToDiscreteActionWrapper",
    "ray.rllib.env.wrappers.recsim_wrapper.RecSimObservationSpaceWrapper",
    "ray.rllib.env.wrappers.recsim_wrapper.RecSimResetWrapper",
    "recsim.environments.interest_evolution.create_environment"
   ]
  },
  "type": "function"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.env.wrappers.recsim_wrapper.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.evaluation": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.evaluation.AsyncSampler": {
  "data": {
   "shadows": "ray.rllib.evaluation.sampler.AsyncSampler"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.MultiAgentSampleBatchBuilder": {
  "data": {
   "shadows": "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.SampleBatchBuilder": {
  "data": {
   "shadows": "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.SyncSampler": {
  "data": {
   "shadows": "ray.rllib.evaluation.sampler.SyncSampler"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.evaluation.collectors.sample_collector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.collectors.sample_collector.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.collectors.sample_collector.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.EnvID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.EpisodeID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EpisodeID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.add_action_reward_next_obs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "bool",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.EpisodeID",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.add_init_obs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.build_multi_agent_batch": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "int",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.episode_step": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.rllib.utils.typing.EpisodeID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.get_inference_input_dict": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.postprocess_episode": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "bool",
    "ray.rllib.evaluation.episode.MultiAgentEpisode"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.total_env_steps": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector._SampleCollector.try_build_truncated_episode_multi_agent_batch": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.sample_collector.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.sample_collector.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.collectors.sample_collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.collectors.simple_list_collector.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.EnvID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.EpisodeID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EpisodeID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector._build_buffers": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.zeros",
    "range",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector.add_action_reward_next_obs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector.add_init_obs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS.append",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.EpisodeID",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector.build": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.repeat",
    "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector.to_float_np_array",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.UNROLL_ID",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._DUMMY_AGENT_ID": {
  "data": {
   "shadows": "ray.rllib.env.base_env._DUMMY_AGENT_ID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._PolicyCollector": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._PolicyCollector.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "list",
    "ray.rllib.evaluation.collectors.simple_list_collector.collections",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._PolicyCollector.add_postprocessed_batch_for_training": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._PolicyCollector.build": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.UNROLL_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SampleCollector": {
  "data": {
   "shadows": "ray.rllib.evaluation.collectors.sample_collector._SampleCollector"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "max",
    "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector._PolicyCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector.collections",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EpisodeID",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector._add_to_next_inference_call": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.EpisodeID",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector._reset_inference_calls": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.PolicyID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.add_action_reward_next_obs": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.EpisodeID",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.add_init_obs": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector._AgentCollector",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.build_multi_agent_batch": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "int",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.MultiAgentBatch.wrap_as_needed",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.override",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.episode_step": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector.logger",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.EpisodeID",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.get_inference_input_dict": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.postprocess_episode": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "getattr",
    "len",
    "numpy.clip",
    "numpy.sign",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.evaluation.collectors.simple_list_collector.logger",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.debug.summarize",
    "ray.util.debug.log_once",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.total_env_steps": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "int",
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.utils.annotations.override",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector._SimpleListCollector.try_build_truncated_episode_multi_agent_batch": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ray.rllib.evaluation.collectors.sample_collector._SampleCollector",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.override",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.convert_to_non_torch_type": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_non_torch_type"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.to_float_np_array": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.collectors.simple_list_collector.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.episode.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.EnvActionType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvActionType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.EnvInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.EnvObsType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvObsType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "batch_builder_factory",
    "collections.defaultdict",
    "dict",
    "float",
    "int",
    "list",
    "ray.rllib.evaluation.episode.random",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvActionType",
    "ray.rllib.utils.typing.EnvInfoDict",
    "ray.rllib.utils.typing.EnvObsType",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.SampleBatchType",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._add_agent_rewards": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.typing.AgentID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._agent_index": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_last_action": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_last_info": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_last_observation": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_last_pi_info": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_last_raw_obs": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode._set_rnn_state": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.last_action_for": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hasattr",
    "numpy.zeros_like",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvActionType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.last_info_for": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvInfoDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.last_observation_for": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvObsType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.last_pi_info_for": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.last_raw_obs_for": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvObsType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.policy_for": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.PolicyID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.prev_action_for": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvActionType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.prev_reward_for": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "float",
    "len",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.rnn_state_for": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentEpisode.soft_reset": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "collections.defaultdict",
    "float",
    "list",
    "ray.rllib.evaluation.episode.random",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.episode.MultiAgentSampleBatchBuilder": {
  "data": {
   "shadows": "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode._DUMMY_AGENT_ID": {
  "data": {
   "shadows": "ray.rllib.env.base_env._DUMMY_AGENT_ID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.flatten_to_single_ndarray": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.episode.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.metrics.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.metrics.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.GradInfoDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.GradInfoDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.LearnerStatsDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.LearnerStatsDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.OffPolicyEstimate": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.ResultDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ResultDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.RolloutMetrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_metrics.RolloutMetrics"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics._partition": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.evaluation.rollout_metrics.RolloutMetrics",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.metrics.collect_episodes": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.rllib.evaluation.metrics.logger",
    "ray.rllib.evaluation.metrics.ray",
    "ray.rllib.evaluation.rollout_metrics.RolloutMetrics",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.metrics.collect_metrics": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "ray.rllib.evaluation.metrics.collect_episodes",
    "ray.rllib.evaluation.metrics.summarize_episodes",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ResultDict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.metrics.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.get_learner_stats": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.GradInfoDict",
    "ray.rllib.utils.typing.LearnerStatsDict",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.metrics.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.metrics.summarize_episodes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "list",
    "max",
    "min",
    "numpy.isnan",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "ray.rllib.evaluation.metrics._partition",
    "ray.rllib.evaluation.metrics.collections",
    "ray.rllib.evaluation.rollout_metrics.RolloutMetrics",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ResultDict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.observation_function": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.evaluation.observation_function.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.ObservationFunction": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.rllib.evaluation.observation_function.ObservationFunction.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.evaluation.RolloutWorker",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.framework.TensorType",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.observation_function.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.observation_function.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.postprocessing": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.evaluation.postprocessing.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.postprocessing.Postprocessing": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "ray.rllib.evaluation.postprocessing.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.postprocessing.compute_advantages": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "all",
    "bool",
    "float",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.zeros_like",
    "ray.rllib.evaluation.postprocessing.Postprocessing",
    "ray.rllib.evaluation.postprocessing.discount_cumsum",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS.astype",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.postprocessing.discount_cumsum": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "float",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.postprocessing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.postprocessing.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_metrics": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_metrics.RolloutMetrics",
    "ray.rllib.evaluation.rollout_metrics.collections"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.rollout_metrics.RolloutMetrics": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.rollout_metrics.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.rollout_worker.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.rollout_worker.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.AsyncSampler": {
  "data": {
   "shadows": "ray.rllib.evaluation.sampler.AsyncSampler"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.EnvConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ExternalMultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.Filter"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ImportanceSamplingEstimator": {
  "data": {
   "shadows": "ray.rllib.offline.is_estimator.ImportanceSamplingEstimator"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ModelWeights": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelWeights"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.MultiAgentPolicyConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.MultiAgentPolicyConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.NoPreprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.NoPreprocessor"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.NoopOutput": {
  "data": {
   "shadows": "ray.rllib.offline.NoopOutput"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ObservationFunction": {
  "data": {
   "shadows": "ray.rllib.evaluation.observation_function.ObservationFunction"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.OffPolicyEstimate": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.OffPolicyEstimator": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.OutputWriter": {
  "data": {
   "shadows": "ray.rllib.offline.OutputWriter"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ParallelIteratorWorker": {
  "data": {
   "shadows": "ray.util.iter.ParallelIteratorWorker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.PartialTrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PartialTrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.Preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutMetrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_metrics.RolloutMetrics"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.util.iter.ParallelIteratorWorker"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.__del__": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "ray.rllib.evaluation.sampler.AsyncSampler"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "RuntimeError",
    "ValueError",
    "bool",
    "callable",
    "callbacks",
    "custom_vec_wrapper",
    "dict",
    "env_creator",
    "float",
    "frozenset",
    "hasattr",
    "input_creator",
    "int",
    "isinstance",
    "list",
    "locals",
    "numpy.random.seed",
    "output_creator",
    "ray.rllib.agents.callbacks.DefaultCallbacks",
    "ray.rllib.env.atari_wrappers.is_atari",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.base_env.BaseEnv.to_base_env",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.evaluation.rollout_worker._has_tensorflow_graph",
    "ray.rllib.evaluation.rollout_worker._validate_and_canonicalize",
    "ray.rllib.evaluation.rollout_worker._validate_env",
    "ray.rllib.evaluation.rollout_worker.gym",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.evaluation.rollout_worker.logging",
    "ray.rllib.evaluation.rollout_worker.os",
    "ray.rllib.evaluation.rollout_worker.random",
    "ray.rllib.evaluation.rollout_worker.ray",
    "ray.rllib.evaluation.sampler.AsyncSampler",
    "ray.rllib.evaluation.sampler.SyncSampler",
    "ray.rllib.models.preprocessors.Preprocessor",
    "ray.rllib.offline.IOContext",
    "ray.rllib.offline.InputReader",
    "ray.rllib.offline.NoopOutput",
    "ray.rllib.offline.OutputWriter",
    "ray.rllib.offline.is_estimator.ImportanceSamplingEstimator.create",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator",
    "ray.rllib.offline.wis_estimator.WeightedImportanceSamplingEstimator.create",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.deprecation.deprecation_warning",
    "ray.rllib.utils.filter.Filter",
    "ray.rllib.utils.filter.get_filter",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvConfigDict",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.ModelConfigDict",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "ray.util.debug.disable_log_once_globally",
    "ray.util.debug.enable_periodic_logging",
    "ray.util.iter.ParallelIteratorWorker.__init__",
    "set",
    "str",
    "tf_session_creator",
    "type",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union",
    "validate_env",
    "wrap"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.__init__.gen_rollouts": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.__init__.make_env": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "env_creator",
    "wrap"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.__init__.wrap": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "gym.wrappers.Monitor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker._build_policy_map": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "hasattr",
    "isinstance",
    "issubclass",
    "ray.rllib.evaluation.rollout_worker.gym",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.models.ModelCatalog.get_preprocessor_for_space",
    "ray.rllib.models.preprocessors.NoPreprocessor",
    "ray.rllib.models.preprocessors.Preprocessor",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.merge_dicts",
    "ray.rllib.utils.typing.MultiAgentPolicyConfigDict",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "sorted",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.apply": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.rollout_worker.T",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.apply_gradients": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID.apply_gradients",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.PolicyID",
    "ray.util.debug.log_once",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.as_remote": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "ray.rllib.evaluation.rollout_worker.ray",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.compute_gradients": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID.compute_gradients",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.util.debug.log_once",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.creation_args": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.export_policy_checkpoint": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.export_policy_model": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.find_free_port": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "int",
    "ray.util.sgd.utils.find_free_port"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.for_policy": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.rollout_worker.T",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.foreach_env": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "func",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.evaluation.rollout_worker.T",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.foreach_policy": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.rollout_worker.T",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.foreach_trainable_policy": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.rollout_worker.T",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_filters": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "bool",
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_global_vars": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_host": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.platform",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_metrics": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_metrics.RolloutMetrics",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_node_ip": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_policy": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.get_weights": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelWeights",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.import_policy_model_from_h5": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.learn_on_batch": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID.learn_on_batch",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.restore": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.pickle",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.sample": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "float",
    "len",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.sample_and_learn": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.utils.sgd.do_minibatch_sgd",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.sample_with_count": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "int",
    "ray.rllib.evaluation.rollout_worker.ray",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.save": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.pickle",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.set_global_vars": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.set_weights": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelWeights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.setup_torch_data_parallel": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "ray.rllib.evaluation.rollout_worker.logger",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.stop": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.RolloutWorker.sync_filters": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "all",
    "dict",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.SyncSampler": {
  "data": {
   "shadows": "ray.rllib.evaluation.sampler.SyncSampler"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.T": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.rollout_worker.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.TFRunBuilder": {
  "data": {
   "shadows": "ray.rllib.utils.tf_run_builder.TFRunBuilder"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.WeightedImportanceSamplingEstimator": {
  "data": {
   "shadows": "ray.rllib.offline.wis_estimator.WeightedImportanceSamplingEstimator"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker._has_tensorflow_graph": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "bool",
    "issubclass",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.typing.MultiAgentPolicyConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker._validate_and_canonicalize": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "issubclass",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.evaluation.rollout_worker._validate_multiagent_config",
    "ray.rllib.evaluation.rollout_worker.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.MultiAgentPolicyConfigDict",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker._validate_env": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr",
    "isinstance",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv",
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.evaluation.rollout_worker.gym",
    "ray.rllib.utils.typing.EnvType",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker._validate_multiagent_config": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "ray.rllib.evaluation.rollout_worker.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.MultiAgentPolicyConfigDict",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.deprecation_warning": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.deprecation_warning"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.disable_log_once_globally": {
  "data": {
   "shadows": "ray.util.debug.disable_log_once_globally"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.do_minibatch_sgd": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.do_minibatch_sgd"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.enable_periodic_logging": {
  "data": {
   "shadows": "ray.util.debug.enable_periodic_logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.get_filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.get_filter"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.get_global_worker": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.rollout_worker.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.is_atari": {
  "data": {
   "shadows": "ray.rllib.env.atari_wrappers.is_atari"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.logger": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.rollout_worker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.utils": {
  "data": {
   "shadows": "ray.util.sgd.utils"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.wrap_deepmind": {
  "data": {
   "shadows": "ray.rllib.env.atari_wrappers.wrap_deepmind"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.rollout_worker.wrappers": {
  "data": {
   "shadows": "gym.wrappers"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.sample_batch_builder.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.sample_batch_builder.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.episode.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.add_values": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.build_and_reset": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.MultiAgentBatch.wrap_as_needed",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.check_missing_dones": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.has_pending_agent_data": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.postprocess_batch_so_far": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "getattr",
    "len",
    "numpy.clip",
    "numpy.sign",
    "ray.rllib.evaluation.episode.MultiAgentEpisode",
    "ray.rllib.evaluation.rollout_worker.get_global_worker",
    "ray.rllib.evaluation.sample_batch_builder.logger",
    "ray.rllib.utils.debug.summarize",
    "ray.util.debug.log_once",
    "set",
    "sorted",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.MultiAgentSampleBatchBuilder.total": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list",
    "ray.rllib.evaluation.sample_batch_builder.collections",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder.add_batch": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder.add_values": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder.build_and_reset": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.repeat",
    "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder",
    "ray.rllib.evaluation.sample_batch_builder.to_float_array",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.UNROLL_ID",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.sample_batch_builder.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder._DUMMY_AGENT_ID": {
  "data": {
   "shadows": "ray.rllib.env.base_env._DUMMY_AGENT_ID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.sample_batch_builder.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.sample_batch_builder.to_float_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.evaluation.worker_set.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "ray.rllib.evaluation.worker_set.COMMON_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.COMMON_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.EnvContext": {
  "data": {
   "shadows": "ray.rllib.env.env_context.EnvContext"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.EnvType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.EnvType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.JsonReader": {
  "data": {
   "shadows": "ray.rllib.offline.JsonReader"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.JsonWriter": {
  "data": {
   "shadows": "ray.rllib.offline.JsonWriter"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.MixedInput": {
  "data": {
   "shadows": "ray.rllib.offline.MixedInput"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.NoopOutput": {
  "data": {
   "shadows": "ray.rllib.offline.NoopOutput"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.ShuffledInput": {
  "data": {
   "shadows": "ray.rllib.offline.ShuffledInput"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.T": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.worker_set.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.agents.trainer.COMMON_CONFIG",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.worker_set.ray",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.merge_dicts",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet._from_existing": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet._make_worker": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "cls",
    "dict",
    "int",
    "isinstance",
    "ray.rllib.env.env_context.EnvContext",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.rollout_worker._validate_multiagent_config",
    "ray.rllib.evaluation.worker_set.gym",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.offline.JsonWriter",
    "ray.rllib.offline.MixedInput",
    "ray.rllib.offline.NoopOutput",
    "ray.rllib.offline.ShuffledInput",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.typing.EnvType",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "types.FunctionType",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet._make_worker.session_creator": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ray.rllib.evaluation.worker_set.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.add_workers": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker.as_remote"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.foreach_policy": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.worker_set.T",
    "ray.rllib.evaluation.worker_set.ray",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.foreach_trainable_policy": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.worker_set.T",
    "ray.rllib.evaluation.worker_set.ray",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.foreach_worker": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "func",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.worker_set.T",
    "ray.rllib.evaluation.worker_set.ray",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.foreach_worker_with_index": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "int",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.worker_set.T",
    "ray.rllib.evaluation.worker_set.ray",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.local_worker": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.remote_workers": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.reset": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.stop": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.sync_weights": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ray.rllib.evaluation.worker_set.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set.WorkerSet.trainable_policies": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.evaluation.worker_set._validate_multiagent_config": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker._validate_multiagent_config"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.evaluation.worker_set.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.evaluation.worker_set.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.attention_net": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.attention_net.argparse",
    "ray.rllib.examples.attention_net.args",
    "ray.rllib.examples.attention_net.config",
    "ray.rllib.examples.attention_net.os",
    "ray.rllib.examples.attention_net.parser",
    "ray.rllib.examples.attention_net.ray",
    "ray.rllib.examples.attention_net.results",
    "ray.rllib.examples.attention_net.stop",
    "ray.rllib.examples.env.look_and_push.LookAndPush",
    "ray.rllib.examples.env.look_and_push.OneHot",
    "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv",
    "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv",
    "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole",
    "ray.rllib.models.tf.attention_net.GTrXLNet",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.attention_net.GTrXLNet": {
  "data": {
   "shadows": "ray.rllib.models.tf.attention_net.GTrXLNet"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.LookAndPush": {
  "data": {
   "shadows": "ray.rllib.examples.env.look_and_push.LookAndPush"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.OneHot": {
  "data": {
   "shadows": "ray.rllib.examples.env.look_and_push.OneHot"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.RepeatAfterMeEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.RepeatInitialObsEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.StatelessCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.args": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.examples.attention_net.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.config": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "ray.rllib.examples.attention_net.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.parser": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.examples.attention_net.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.registry": {
  "data": {
   "shadows": "ray.tune.registry"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.results": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "ray.rllib.examples.attention_net.stop": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.rllib.examples.attention_net.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net_supervised": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.examples.attention_net_supervised.train_bit_shift",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.attention_net_supervised.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net_supervised.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net_supervised.TrXLNet": {
  "data": {
   "shadows": "rllib.models.tf.attention_net.TrXLNet"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net_supervised.bit_shift_generator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.roll",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.attention_net_supervised.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.attention_net_supervised.train_bit_shift": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "model",
    "next",
    "numpy.int32",
    "numpy.reshape",
    "print",
    "range",
    "ray.rllib.examples.attention_net_supervised.bit_shift_generator",
    "ray.rllib.examples.attention_net_supervised.train_loss",
    "rllib.models.tf.attention_net.TrXLNet",
    "update_step",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.attention_net_supervised.train_bit_shift.update_step": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "model",
    "model.trainable_variables",
    "numpy.full",
    "ray.rllib.examples.attention_net_supervised.train_loss"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.attention_net_supervised.train_loss": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.rllib.examples.attention_net_supervised.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.autoregressive_action_dist.argparse",
    "ray.rllib.examples.autoregressive_action_dist.args",
    "ray.rllib.examples.autoregressive_action_dist.config",
    "ray.rllib.examples.autoregressive_action_dist.os",
    "ray.rllib.examples.autoregressive_action_dist.parser",
    "ray.rllib.examples.autoregressive_action_dist.ray",
    "ray.rllib.examples.autoregressive_action_dist.results",
    "ray.rllib.examples.autoregressive_action_dist.stop",
    "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv",
    "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution",
    "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution",
    "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel",
    "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel",
    "ray.rllib.models.ModelCatalog.register_custom_action_dist",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.autoregressive_action_dist.AutoregressiveActionModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.BinaryAutoregressiveDistribution": {
  "data": {
   "shadows": "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.CorrelatedActionsEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.TorchAutoregressiveActionModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution": {
  "data": {
   "shadows": "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.args": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.rllib.examples.autoregressive_action_dist.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.config": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.autoregressive_action_dist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.parser": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.autoregressive_action_dist.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.autoregressive_action_dist.results": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ray.rllib.examples.autoregressive_action_dist.stop": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.examples.autoregressive_action_dist.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.batch_norm_model.argparse",
    "ray.rllib.examples.batch_norm_model.args",
    "ray.rllib.examples.batch_norm_model.config",
    "ray.rllib.examples.batch_norm_model.os",
    "ray.rllib.examples.batch_norm_model.parser",
    "ray.rllib.examples.batch_norm_model.ray",
    "ray.rllib.examples.batch_norm_model.results",
    "ray.rllib.examples.batch_norm_model.stop",
    "ray.rllib.examples.models.batch_norm_model.BatchNormModel",
    "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.batch_norm_model.BatchNormModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.batch_norm_model.BatchNormModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.TorchBatchNormModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.args": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.examples.batch_norm_model.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.config": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.examples.batch_norm_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.parser": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.examples.batch_norm_model.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.results": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.examples.batch_norm_model.stop": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.rllib.examples.batch_norm_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.batch_norm_model.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "float",
    "int",
    "ray.rllib.examples.cartpole_lstm.argparse",
    "ray.rllib.examples.cartpole_lstm.args",
    "ray.rllib.examples.cartpole_lstm.config",
    "ray.rllib.examples.cartpole_lstm.configs",
    "ray.rllib.examples.cartpole_lstm.os",
    "ray.rllib.examples.cartpole_lstm.parser",
    "ray.rllib.examples.cartpole_lstm.ray",
    "ray.rllib.examples.cartpole_lstm.results",
    "ray.rllib.examples.cartpole_lstm.stop",
    "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.cartpole_lstm.StatelessCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm.args": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm.config": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.configs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm.parser": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.cartpole_lstm.results": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.stop": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.rllib.examples.cartpole_lstm.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "gym.spaces.Discrete",
    "int",
    "ray.rllib.agents.ppo.ppo.PPOTrainer.with_updates",
    "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy.with_updates",
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin",
    "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy.with_updates",
    "ray.rllib.examples.centralized_critic.CCPPOTFPolicy",
    "ray.rllib.examples.centralized_critic.CCTrainer",
    "ray.rllib.examples.centralized_critic.CentralizedValueMixin",
    "ray.rllib.examples.centralized_critic.argparse",
    "ray.rllib.examples.centralized_critic.args",
    "ray.rllib.examples.centralized_critic.central_vf_stats",
    "ray.rllib.examples.centralized_critic.centralized_critic_postprocessing",
    "ray.rllib.examples.centralized_critic.config",
    "ray.rllib.examples.centralized_critic.get_policy_class",
    "ray.rllib.examples.centralized_critic.loss_with_central_critic",
    "ray.rllib.examples.centralized_critic.os",
    "ray.rllib.examples.centralized_critic.parser",
    "ray.rllib.examples.centralized_critic.ray",
    "ray.rllib.examples.centralized_critic.results",
    "ray.rllib.examples.centralized_critic.setup_tf_mixins",
    "ray.rllib.examples.centralized_critic.setup_torch_mixins",
    "ray.rllib.examples.centralized_critic.stop",
    "ray.rllib.examples.env.two_step_game.TwoStepGame",
    "ray.rllib.examples.env.two_step_game.TwoStepGame.action_space",
    "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel",
    "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule",
    "ray.rllib.policy.torch_policy.LearningRateSchedule",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.centralized_critic.CCPPOTFPolicy": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.CCPPOTorchPolicy": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.CCTrainer": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.CentralizedCriticModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.CentralizedValueMixin": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "ray.rllib.examples.centralized_critic.CentralizedValueMixin.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.rllib.utils.tf_ops.make_tf_callable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.EntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.KLCoeffMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.KLCoeffMixin"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.LearningRateSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.OPPONENT_ACTION": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.OPPONENT_OBS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.PPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.PPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo.PPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.Postprocessing": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.Postprocessing"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.TorchCentralizedCriticModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.TorchEntropyCoeffSchedule": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.EntropyCoeffSchedule"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.TorchKLCoeffMixin": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.TorchLR": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.LearningRateSchedule"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.TwoStepGame": {
  "data": {
   "shadows": "ray.rllib.examples.env.two_step_game.TwoStepGame"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.args": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.central_vf_stats": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.Postprocessing.VALUE_TARGETS",
    "ray.rllib.utils.tf_ops.explained_variance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.centralized_critic_postprocessing": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "numpy.float32",
    "numpy.zeros_like",
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.examples.centralized_critic.OPPONENT_ACTION",
    "ray.rllib.examples.centralized_critic.OPPONENT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.VF_PREDS",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.config": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.explained_variance": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.explained_variance"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.get_policy_class": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.rllib.examples.centralized_critic.CCPPOTorchPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.loss_with_central_critic": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "func",
    "ray.rllib.agents.ppo.ppo_tf_policy.ppo_surrogate_loss",
    "ray.rllib.agents.ppo.ppo_torch_policy.ppo_surrogate_loss",
    "ray.rllib.examples.centralized_critic.CentralizedValueMixin",
    "ray.rllib.examples.centralized_critic.OPPONENT_ACTION",
    "ray.rllib.examples.centralized_critic.OPPONENT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.make_tf_callable": {
  "data": {
   "shadows": "ray.rllib.utils.tf_ops.make_tf_callable"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.parser": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.results": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.setup_tf_mixins": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin.__init__",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.setup_torch_mixins": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.ppo_torch_policy.KLCoeffMixin.__init__",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.__init__",
    "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic.stop": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic.tf_loss": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.ppo_surrogate_loss"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.torch_loss": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.ppo_surrogate_loss"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "int",
    "ray.rllib.examples.centralized_critic_2.FillInActions",
    "ray.rllib.examples.centralized_critic_2.action_space",
    "ray.rllib.examples.centralized_critic_2.argparse",
    "ray.rllib.examples.centralized_critic_2.args",
    "ray.rllib.examples.centralized_critic_2.central_critic_observer",
    "ray.rllib.examples.centralized_critic_2.config",
    "ray.rllib.examples.centralized_critic_2.observer_space",
    "ray.rllib.examples.centralized_critic_2.os",
    "ray.rllib.examples.centralized_critic_2.parser",
    "ray.rllib.examples.centralized_critic_2.results",
    "ray.rllib.examples.centralized_critic_2.stop",
    "ray.rllib.examples.env.two_step_game.TwoStepGame",
    "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel",
    "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.centralized_critic_2.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.FillInActions": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.rllib.agents.callbacks.DefaultCallbacks"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.centralized_critic_2.FillInActions.on_postprocess_trajectory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "numpy.array",
    "ray.rllib.models.ModelCatalog.get_preprocessor_for_space",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic_2.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.TwoStepGame": {
  "data": {
   "shadows": "ray.rllib.examples.env.two_step_game.TwoStepGame"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.YetAnotherCentralizedCriticModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.YetAnotherTorchCentralizedCriticModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.action_space": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.args": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.central_critic_observer": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.rllib.examples.centralized_critic_2.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.config": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.observer_space": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.centralized_critic_2.parser": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.results": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.stop": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "ray.rllib.examples.centralized_critic_2.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.examples.complex_struct_space.argparse",
    "ray.rllib.examples.complex_struct_space.args",
    "ray.rllib.examples.complex_struct_space.config",
    "ray.rllib.examples.complex_struct_space.os",
    "ray.rllib.examples.complex_struct_space.parser",
    "ray.rllib.examples.complex_struct_space.ray",
    "ray.rllib.examples.complex_struct_space.stop",
    "ray.rllib.examples.env.simple_rpg.SimpleRPG",
    "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel",
    "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.complex_struct_space.CustomTFRPGModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.CustomTorchRPGModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.SimpleRPG": {
  "data": {
   "shadows": "ray.rllib.examples.env.simple_rpg.SimpleRPG"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.args": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.complex_struct_space.config": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.rllib.examples.complex_struct_space.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.parser": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.examples.complex_struct_space.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.complex_struct_space.stop": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.complex_struct_space.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.custom_env.CustomModel",
    "ray.rllib.examples.custom_env.SimpleCorridor",
    "ray.rllib.examples.custom_env.TorchCustomModel",
    "ray.rllib.examples.custom_env.argparse",
    "ray.rllib.examples.custom_env.args",
    "ray.rllib.examples.custom_env.config",
    "ray.rllib.examples.custom_env.os",
    "ray.rllib.examples.custom_env.parser",
    "ray.rllib.examples.custom_env.ray",
    "ray.rllib.examples.custom_env.results",
    "ray.rllib.examples.custom_env.stop",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.grid_search",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_env.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.CustomModel": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_env.CustomModel.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.examples.custom_env.CustomModel",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.CustomModel.forward": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.CustomModel.value_function": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.SimpleCorridor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.rllib.examples.custom_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_env.SimpleCorridor.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.SimpleCorridor.reset": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.SimpleCorridor.step": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.TorchCustomModel": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_env.TorchCustomModel.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.TorchCustomModel.forward": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.TorchCustomModel.value_function": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_env.TorchFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.args": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_env.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.config": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_env.grid_search": {
  "data": {
   "shadows": "ray.tune.grid_search"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.parser": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.results": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_env.stop": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_env.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_env.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.examples.custom_eval.argparse",
    "ray.rllib.examples.custom_eval.args",
    "ray.rllib.examples.custom_eval.config",
    "ray.rllib.examples.custom_eval.custom_eval_function",
    "ray.rllib.examples.custom_eval.eval_fn",
    "ray.rllib.examples.custom_eval.os",
    "ray.rllib.examples.custom_eval.parser",
    "ray.rllib.examples.custom_eval.ray",
    "ray.rllib.examples.custom_eval.stop",
    "ray.rllib.examples.env.simple_corridor.SimpleCorridor",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_eval.SimpleCorridor": {
  "data": {
   "shadows": "ray.rllib.examples.env.simple_corridor.SimpleCorridor"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.args": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_eval.collect_episodes": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_episodes"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.config": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_eval.custom_eval_function": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.evaluation.metrics.collect_episodes",
    "ray.rllib.evaluation.metrics.summarize_episodes",
    "ray.rllib.examples.custom_eval.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_eval.eval_fn": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_eval.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.parser": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_eval.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.stop": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_eval.summarize_episodes": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.summarize_episodes"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_eval.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "max",
    "ray.rllib.examples.custom_fast_model.argparse",
    "ray.rllib.examples.custom_fast_model.args",
    "ray.rllib.examples.custom_fast_model.config",
    "ray.rllib.examples.custom_fast_model.os",
    "ray.rllib.examples.custom_fast_model.parser",
    "ray.rllib.examples.custom_fast_model.ray",
    "ray.rllib.examples.custom_fast_model.stop",
    "ray.rllib.examples.env.fast_image_env.FastImageEnv",
    "ray.rllib.examples.models.fast_model.FastModel",
    "ray.rllib.examples.models.fast_model.TorchFastModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.tune.run",
    "ray.tune.sample_from"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_fast_model.FastImageEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.fast_image_env.FastImageEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.FastModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.fast_model.FastModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.TorchFastModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.fast_model.TorchFastModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.args": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_fast_model.config": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_fast_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.parser": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_fast_model.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.sample_from": {
  "data": {
   "shadows": "ray.tune.sample_from"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_fast_model.stop": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_fast_model.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "int",
    "ray.rllib.examples.custom_keras_model.MyKerasModel",
    "ray.rllib.examples.custom_keras_model.MyKerasQModel",
    "ray.rllib.examples.custom_keras_model.argparse",
    "ray.rllib.examples.custom_keras_model.args",
    "ray.rllib.examples.custom_keras_model.check_has_custom_metric",
    "ray.rllib.examples.custom_keras_model.extra_config",
    "ray.rllib.examples.custom_keras_model.os",
    "ray.rllib.examples.custom_keras_model.parser",
    "ray.rllib.examples.custom_keras_model.ray",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.models.tf.visionnet.VisionNetwork",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_keras_model.DistributionalQTFModel": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasModel.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.rllib.examples.custom_keras_model.MyKerasModel",
    "ray.rllib.models.tf.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasModel.forward": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasModel.metrics": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasModel.value_function": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasQModel": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasQModel.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.examples.custom_keras_model.MyKerasQModel",
    "ray.rllib.models.tf.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasQModel.forward": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyKerasQModel.metrics": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.MyVisionNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.args": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_keras_model.check_has_custom_metric": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_keras_model.extra_config": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_keras_model.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.parser": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_keras_model.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_keras_model.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "pathlib.Path",
    "ray.rllib.examples.custom_loss.argparse",
    "ray.rllib.examples.custom_loss.args",
    "ray.rllib.examples.custom_loss.config",
    "ray.rllib.examples.custom_loss.input_dir",
    "ray.rllib.examples.custom_loss.os",
    "ray.rllib.examples.custom_loss.parser",
    "ray.rllib.examples.custom_loss.ray",
    "ray.rllib.examples.custom_loss.rllib_dir",
    "ray.rllib.examples.custom_loss.stop",
    "ray.rllib.examples.models.custom_loss_model.CustomLossModel",
    "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_loss.CustomLossModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.custom_loss_model.CustomLossModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.TorchCustomLossModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.args": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.config": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.input_dir": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.parser": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.rllib_dir": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.stop": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_loss.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_loss.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "print",
    "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks",
    "ray.rllib.examples.custom_metrics_and_callbacks.argparse",
    "ray.rllib.examples.custom_metrics_and_callbacks.args",
    "ray.rllib.examples.custom_metrics_and_callbacks.custom_metrics",
    "ray.rllib.examples.custom_metrics_and_callbacks.os",
    "ray.rllib.examples.custom_metrics_and_callbacks.parser",
    "ray.rllib.examples.custom_metrics_and_callbacks.ray",
    "ray.rllib.examples.custom_metrics_and_callbacks.trials",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.DefaultCallbacks": {
  "data": {
   "shadows": "ray.rllib.agents.callbacks.DefaultCallbacks"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MultiAgentEpisode": {
  "data": {
   "shadows": "ray.rllib.evaluation.MultiAgentEpisode"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.agents.callbacks.DefaultCallbacks"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_episode_end": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "print",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.evaluation.RolloutWorker",
    "ray.rllib.policy.Policy",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_episode_start": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "print",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.evaluation.RolloutWorker",
    "ray.rllib.policy.Policy",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_episode_step": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abs",
    "int",
    "ray.rllib.env.BaseEnv",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.evaluation.RolloutWorker"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_postprocess_trajectory": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "print",
    "ray.rllib.evaluation.MultiAgentEpisode",
    "ray.rllib.evaluation.RolloutWorker",
    "ray.rllib.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_sample_end": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "print",
    "ray.rllib.evaluation.RolloutWorker",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.MyCallbacks.on_train_result": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.args": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.custom_metrics": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.parser": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.trials": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "print",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.argparse",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.args",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.custom_metrics",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_end",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_start",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_step",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_postprocess_traj",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_sample_end",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_train_result",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.os",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.parser",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.ray",
    "ray.rllib.examples.custom_metrics_and_callbacks_legacy.trials",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.args": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.custom_metrics": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_end": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.mean",
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_start": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_episode_step": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_postprocess_traj": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_sample_end": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.on_train_result": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.parser": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.trials": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_metrics_and_callbacks_legacy.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.custom_rnn_model.argparse",
    "ray.rllib.examples.custom_rnn_model.args",
    "ray.rllib.examples.custom_rnn_model.config",
    "ray.rllib.examples.custom_rnn_model.os",
    "ray.rllib.examples.custom_rnn_model.parser",
    "ray.rllib.examples.custom_rnn_model.ray",
    "ray.rllib.examples.custom_rnn_model.results",
    "ray.rllib.examples.custom_rnn_model.stop",
    "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv",
    "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv",
    "ray.rllib.examples.models.rnn_model.RNNModel",
    "ray.rllib.examples.models.rnn_model.TorchRNNModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_rnn_model.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.RNNModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.rnn_model.RNNModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.RepeatAfterMeEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.RepeatInitialObsEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.TorchRNNModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.rnn_model.TorchRNNModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.args": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_rnn_model.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.config": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_rnn_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.parser": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_rnn_model.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_rnn_model.results": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_rnn_model.stop": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_rnn_model.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.examples.custom_tf_policy.MyTFPolicy",
    "ray.rllib.examples.custom_tf_policy.MyTrainer",
    "ray.rllib.examples.custom_tf_policy.argparse",
    "ray.rllib.examples.custom_tf_policy.args",
    "ray.rllib.examples.custom_tf_policy.calculate_advantages",
    "ray.rllib.examples.custom_tf_policy.os",
    "ray.rllib.examples.custom_tf_policy.parser",
    "ray.rllib.examples.custom_tf_policy.policy_gradient_loss",
    "ray.rllib.examples.custom_tf_policy.ray",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_tf_policy.MyTFPolicy": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_tf_policy.MyTrainer": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_tf_policy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.args": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_tf_policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.calculate_advantages": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.discount_cumsum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_tf_policy.discount_cumsum": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.discount_cumsum"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.parser": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_tf_policy.policy_gradient_loss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dist_class"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_tf_policy.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.examples.custom_torch_policy.MyTorchPolicy",
    "ray.rllib.examples.custom_torch_policy.MyTrainer",
    "ray.rllib.examples.custom_torch_policy.argparse",
    "ray.rllib.examples.custom_torch_policy.args",
    "ray.rllib.examples.custom_torch_policy.os",
    "ray.rllib.examples.custom_torch_policy.parser",
    "ray.rllib.examples.custom_torch_policy.policy_gradient_loss",
    "ray.rllib.examples.custom_torch_policy.ray",
    "ray.rllib.policy.torch_policy_template.build_torch_policy",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_torch_policy.MyTorchPolicy": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_torch_policy.MyTrainer": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.args": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_torch_policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.parser": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_torch_policy.policy_gradient_loss": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dist_class",
    "model",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS.dot"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_torch_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_torch_policy.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_train_fn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.agents.ppo.PPOTrainer.default_resource_request",
    "ray.rllib.examples.custom_train_fn.argparse",
    "ray.rllib.examples.custom_train_fn.args",
    "ray.rllib.examples.custom_train_fn.config",
    "ray.rllib.examples.custom_train_fn.my_train_fn",
    "ray.rllib.examples.custom_train_fn.os",
    "ray.rllib.examples.custom_train_fn.parser",
    "ray.rllib.examples.custom_train_fn.ray",
    "ray.rllib.examples.custom_train_fn.resources",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.custom_train_fn.PPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.PPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_train_fn.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_train_fn.args": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_train_fn.config": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_train_fn.my_train_fn": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.ppo.PPOTrainer",
    "reporter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.custom_train_fn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_train_fn.parser": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_train_fn.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.custom_train_fn.resources": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.examples.custom_train_fn.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.dmlab_watermaze": {
  "data": {
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.env",
    "ray.rllib.env.action_space",
    "ray.rllib.env.step",
    "ray.rllib.examples.dmlab_watermaze.Watermaze"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.dmlab_watermaze.Watermaze": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.env.DMEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.dmlab_watermaze.Watermaze.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "deepmind_lab.dmenv_module.Lab",
    "ray.rllib.examples.dmlab_watermaze.Watermaze",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.dmlab_watermaze.dmenv_module": {
  "data": {
   "shadows": "deepmind_lab.dmenv_module"
  },
  "type": "import"
 },
 "ray.rllib.examples.dmlab_watermaze.env": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.examples.eager_execution.MyTFPolicy",
    "ray.rllib.examples.eager_execution.MyTrainer",
    "ray.rllib.examples.eager_execution.argparse",
    "ray.rllib.examples.eager_execution.args",
    "ray.rllib.examples.eager_execution.config",
    "ray.rllib.examples.eager_execution.os",
    "ray.rllib.examples.eager_execution.parser",
    "ray.rllib.examples.eager_execution.policy_gradient_loss",
    "ray.rllib.examples.eager_execution.ray",
    "ray.rllib.examples.eager_execution.results",
    "ray.rllib.examples.eager_execution.stop",
    "ray.rllib.examples.models.eager_model.EagerModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.policy.tf_policy_template.build_tf_policy",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.eager_execution.EagerModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.eager_model.EagerModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.MyTFPolicy": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.MyTrainer": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.args": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.config": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.parser": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.policy_gradient_loss": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dist_class",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.eager_execution.policy_gradient_loss.compute_penalty": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "print",
    "ray.rllib.examples.eager_execution.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.eager_execution.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.results": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.stop": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ray.rllib.examples.eager_execution.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.eager_execution.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.ant_rand_goal": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "gym.envs.mujoco.mujoco_env.MujocoEnv",
    "ray.rllib.env.meta_env.MetaEnv",
    "ray.rllib.examples.env.ant_rand_goal.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gym.envs.mujoco.mujoco_env.MujocoEnv.__init__",
    "ray.rllib.examples.env.ant_rand_goal.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv._get_obs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.get_task": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.reset_model": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.sample_tasks": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.pi",
    "numpy.random.random",
    "numpy.sin",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.set_task": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.step": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "numpy.abs",
    "numpy.clip",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.AntRandGoalEnv.viewer_setup": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.rllib.examples.env.ant_rand_goal.MetaEnv": {
  "data": {
   "shadows": "ray.rllib.env.meta_env.MetaEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.ant_rand_goal.MujocoEnv": {
  "data": {
   "shadows": "gym.envs.mujoco.mujoco_env.MujocoEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.ant_rand_goal.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.ant_rand_goal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.correlated_actions_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.examples.env.correlated_actions_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "gym.spaces.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv.reset": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.examples.env.correlated_actions_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.correlated_actions_env.CorrelatedActionsEnv.step": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.examples.env.correlated_actions_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.correlated_actions_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.correlated_actions_env.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.correlated_actions_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.correlated_actions_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.debug_counter_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.examples.env.debug_counter_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.examples.env.debug_counter_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv.reset": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv.step": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.MultiAgentDebugCounterEnv": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.debug_counter_env.MultiAgentDebugCounterEnv.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "ray.rllib.examples.env.debug_counter_env.gym",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.MultiAgentDebugCounterEnv.reset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.MultiAgentDebugCounterEnv.step": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.debug_counter_env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.debug_counter_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.debug_counter_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.dm_control_suite": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.dm_control_suite.DMCEnv": {
  "data": {
   "shadows": "ray.rllib.env.dm_control_wrapper.DMCEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.dm_control_suite.acrobot_swingup": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.cartpole_swingup": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.cheetah_run": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.hopper_hop": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.hopper_stand": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.humanoid_walk": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.pendulum_swingup": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.walker_run": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.dm_control_suite.walker_walk": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.rllib.env.dm_control_wrapper.DMCEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.env_with_subprocess": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.env_with_subprocess.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.examples.env.env_with_subprocess.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "ray.rllib.examples.env.env_with_subprocess.atexit",
    "ray.rllib.examples.env.env_with_subprocess.os",
    "ray.rllib.examples.env.env_with_subprocess.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess.close": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib.examples.env.env_with_subprocess.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess.reset": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess.step": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ray.rllib.examples.env.env_with_subprocess.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.env_with_subprocess.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.env_with_subprocess.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.env_with_subprocess.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.fast_image_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.fast_image_env.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.fast_image_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.fast_image_env.FastImageEnv": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.examples.env.fast_image_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.fast_image_env.FastImageEnv.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.fast_image_env.FastImageEnv.reset": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.rllib.examples.env.fast_image_env.FastImageEnv.step": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.rllib.examples.env.fast_image_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.fast_image_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "gym.envs.mujoco.mujoco_env.MujocoEnv",
    "ray.rllib.env.meta_env.MetaEnv",
    "ray.rllib.examples.env.halfcheetah_rand_direc.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gym.envs.mujoco.mujoco_env.MujocoEnv.__init__",
    "ray.rllib.examples.env.halfcheetah_rand_direc.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv._get_obs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.get_task": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.reset_model": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.sample_tasks": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.set_task": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.step": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.HalfCheetahRandDirecEnv.viewer_setup": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.MetaEnv": {
  "data": {
   "shadows": "ray.rllib.env.meta_env.MetaEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.MujocoEnv": {
  "data": {
   "shadows": "gym.envs.mujoco.mujoco_env.MujocoEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.halfcheetah_rand_direc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.look_and_push": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.look_and_push.LookAndPush": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.rllib.examples.env.look_and_push.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.look_and_push.LookAndPush.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.examples.env.look_and_push.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.LookAndPush.reset": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.LookAndPush.step": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.OneHot": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.rllib.examples.env.look_and_push.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.look_and_push.OneHot.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.rllib.examples.env.look_and_push.OneHot",
    "ray.rllib.examples.env.look_and_push.gym",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.OneHot._encode_obs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.OneHot.reset": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.OneHot.step": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "ray.rllib.examples.env.look_and_push.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.look_and_push.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.mbmpo_env": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "gym.envs.mujoco.HalfCheetahEnv",
    "range",
    "ray.rllib.examples.env.mbmpo_env.PendulumWrapper",
    "ray.rllib.examples.env.mbmpo_env.env",
    "ray.rllib.examples.env.mbmpo_env.gym"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.env.mbmpo_env.HalfCheetahEnv": {
  "data": {
   "shadows": "gym.envs.mujoco.HalfCheetahEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.mbmpo_env.HalfCheetahWrapper": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gym.envs.mujoco.HalfCheetahEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.mbmpo_env.HalfCheetahWrapper.reward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.mbmpo_env.HopperEnv": {
  "data": {
   "shadows": "gym.envs.mujoco.HopperEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.mbmpo_env.HopperWrapper": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gym.envs.mujoco.HopperEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.mbmpo_env.HopperWrapper.reward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.mbmpo_env.PendulumEnv": {
  "data": {
   "shadows": "gym.envs.classic_control.PendulumEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.mbmpo_env.PendulumWrapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gym.envs.classic_control.PendulumEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.mbmpo_env.PendulumWrapper.angle_normalize": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.pi",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.mbmpo_env.PendulumWrapper.reward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.mbmpo_env.env": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.mbmpo_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.mbmpo_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.examples.env.multi_agent.make_multiagent",
    "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.env.multi_agent.BasicMultiAgent": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.multi_agent.BasicMultiAgent.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "range",
    "ray.rllib.examples.env.multi_agent.gym",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.BasicMultiAgent.reset": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.BasicMultiAgent.step": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.examples.env.multi_agent.gym",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent.reset": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent.step": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.MockEnv": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent.MockEnv2": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockEnv2"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent.MultiAgentCartPole": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.multi_agent.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent.MultiAgentMountainCar": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.multi_agent.MultiAgentPendulum": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.multi_agent.MultiAgentStatelessCartPole": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "range",
    "ray.rllib.examples.env.multi_agent.gym",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockEnv2",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent.reset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent.step": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.StatelessCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.multi_agent.make_multiagent": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.make_multiagent.MultiEnv": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.multi_agent.make_multiagent.MultiEnv.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "env_name_or_creator",
    "isinstance",
    "range",
    "ray.rllib.examples.env.multi_agent.gym",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.make_multiagent.MultiEnv.reset": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.multi_agent.make_multiagent.MultiEnv.step": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.examples.env.nested_space_repeat_after_me_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "ray.rllib.utils.spaces.space_utils.flatten_space"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv._next_obs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.examples.env.nested_space_repeat_after_me_env.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv.reset": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv.step": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.sum",
    "ray.rllib.examples.env.nested_space_repeat_after_me_env.gym",
    "ray.rllib.examples.env.nested_space_repeat_after_me_env.tree",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.flatten_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.flatten_space"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.nested_space_repeat_after_me_env.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.examples.env.parametric_actions_cartpole.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "numpy.random.randn",
    "ray.rllib.examples.env.parametric_actions_cartpole.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole.reset": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole.step": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole.update_avail_actions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "ray.rllib.examples.env.parametric_actions_cartpole.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.parametric_actions_cartpole.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.pendulum_mass": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.pendulum_mass.MetaEnv": {
  "data": {
   "shadows": "ray.rllib.env.meta_env.MetaEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.pendulum_mass.PendulumEnv": {
  "data": {
   "shadows": "gym.envs.classic_control.pendulum.PendulumEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.pendulum_mass.PendulumMassEnv": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "gym.envs.classic_control.pendulum.PendulumEnv",
    "ray.rllib.env.meta_env.MetaEnv",
    "ray.rllib.examples.env.pendulum_mass.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.pendulum_mass.PendulumMassEnv.get_task": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.rllib.examples.env.pendulum_mass.PendulumMassEnv.sample_tasks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.pendulum_mass.PendulumMassEnv.set_task": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.rllib.examples.env.pendulum_mass.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.pendulum_mass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.random_env": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.examples.env.multi_agent.make_multiagent",
    "ray.rllib.examples.env.random_env.RandomEnv"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.env.random_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.random_env.RandomEnv": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.examples.env.random_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.random_env.RandomEnv.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "numpy.float32",
    "ray.rllib.examples.env.random_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.random_env.RandomEnv.reset": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.rllib.examples.env.random_env.RandomEnv.step": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "gym.spaces.Tuple",
    "isinstance",
    "len",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.random_env.RandomMultiAgentEnv": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.random_env.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.random_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.random_env.make_multiagent": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.make_multiagent"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.random_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_after_me_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.repeat_after_me_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.examples.env.repeat_after_me_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gym.spaces.Discrete"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv._next_obs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.rllib.examples.env.repeat_after_me_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv.reset": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_after_me_env.RepeatAfterMeEnv.step": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_after_me_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_after_me_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.examples.env.repeat_initial_obs_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gym.spaces.Discrete"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv.reset": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.examples.env.repeat_initial_obs_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.RepeatInitialObsEnv.step": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.repeat_initial_obs_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.rock_paper_scissors": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.rock_paper_scissors.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.rock_paper_scissors.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gym.spaces.Discrete"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.reset": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.step": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_corridor": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.simple_corridor.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_corridor.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_corridor.SimpleCorridor": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.examples.env.simple_corridor.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.simple_corridor.SimpleCorridor.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_corridor.SimpleCorridor.reset": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_corridor.SimpleCorridor.set_corridor_length": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_corridor.SimpleCorridor.step": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_corridor.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_corridor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_rpg": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.simple_rpg.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_rpg.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_rpg.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_rpg.MAX_EFFECTS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.simple_rpg.MAX_ITEMS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.simple_rpg.MAX_PLAYERS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.simple_rpg.Repeated": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.repeated.Repeated"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.simple_rpg.SimpleRPG": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.examples.env.simple_rpg.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.simple_rpg.SimpleRPG.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "ray.rllib.examples.env.simple_rpg.MAX_EFFECTS",
    "ray.rllib.examples.env.simple_rpg.MAX_ITEMS",
    "ray.rllib.examples.env.simple_rpg.MAX_PLAYERS",
    "ray.rllib.utils.spaces.repeated.Repeated"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_rpg.SimpleRPG.reset": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_rpg.SimpleRPG.step": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "ray.rllib.examples.env.simple_rpg.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.examples.env.stateless_cartpole.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.array",
    "ray.rllib.examples.env.stateless_cartpole.math"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.close": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.render": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "gym.envs.classic_control.rendering.FilledPolygon",
    "gym.envs.classic_control.rendering.Line",
    "gym.envs.classic_control.rendering.Transform",
    "gym.envs.classic_control.rendering.Viewer",
    "gym.envs.classic_control.rendering.make_circle"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.reset": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.seed": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gym.utils.seeding.np_random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole.step": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "numpy.r_",
    "ray.rllib.examples.env.stateless_cartpole.math",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.stateless_cartpole.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole.rendering": {
  "data": {
   "shadows": "gym.envs.classic_control.rendering"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole.seeding": {
  "data": {
   "shadows": "gym.utils.seeding"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.stateless_cartpole.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.env.two_step_game.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game.ENV_STATE": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.ENV_STATE"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "ray.rllib.env.multi_agent_env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "ray.rllib.env.multi_agent_env.ENV_STATE"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame._obs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ray.rllib.env.multi_agent_env.ENV_STATE"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame.agent_1_obs": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame.agent_2_obs": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame.reset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.TwoStepGame.step": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.two_step_game.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.examples.env.windy_maze_env.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.env.windy_maze_env.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.rllib.env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv._high_level_step": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.rllib.examples.env.windy_maze_env.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv._low_level_step": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.examples.env.windy_maze_env.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv.reset": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv.step": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.MAP_DATA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.windy_maze_env.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.examples.env.windy_maze_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "len",
    "range",
    "ray.rllib.examples.env.windy_maze_env.MAP_DATA",
    "ray.rllib.examples.env.windy_maze_env.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv._get_new_pos": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv.reset": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.rllib.examples.env.windy_maze_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv.step": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "ray.rllib.examples.env.windy_maze_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.env.windy_maze_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.examples.env.windy_maze_env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.examples.env.windy_maze_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "int",
    "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv",
    "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv",
    "ray.rllib.examples.hierarchical_training.argparse",
    "ray.rllib.examples.hierarchical_training.args",
    "ray.rllib.examples.hierarchical_training.config",
    "ray.rllib.examples.hierarchical_training.logging",
    "ray.rllib.examples.hierarchical_training.maze",
    "ray.rllib.examples.hierarchical_training.os",
    "ray.rllib.examples.hierarchical_training.parser",
    "ray.rllib.examples.hierarchical_training.policy_mapping_fn",
    "ray.rllib.examples.hierarchical_training.ray",
    "ray.rllib.examples.hierarchical_training.results",
    "ray.rllib.examples.hierarchical_training.stop",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.function",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.hierarchical_training.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.HierarchicalWindyMazeEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.windy_maze_env.HierarchicalWindyMazeEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.WindyMazeEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.windy_maze_env.WindyMazeEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.args": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.config": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.function": {
  "data": {
   "shadows": "ray.tune.function"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.maze": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.parser": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.policy_mapping_fn": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.rllib.examples.hierarchical_training.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.hierarchical_training.results": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.stop": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.rllib.examples.hierarchical_training.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "int",
    "numpy.float32",
    "ray.rllib.examples.env.random_env.RandomEnv",
    "ray.rllib.examples.mobilenet_v2_with_lstm.argparse",
    "ray.rllib.examples.mobilenet_v2_with_lstm.args",
    "ray.rllib.examples.mobilenet_v2_with_lstm.cnn_shape",
    "ray.rllib.examples.mobilenet_v2_with_lstm.cnn_shape_torch",
    "ray.rllib.examples.mobilenet_v2_with_lstm.config",
    "ray.rllib.examples.mobilenet_v2_with_lstm.os",
    "ray.rllib.examples.mobilenet_v2_with_lstm.parser",
    "ray.rllib.examples.mobilenet_v2_with_lstm.stop",
    "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel",
    "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.MobileV2PlusRNNModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.RandomEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.random_env.RandomEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.TorchMobileV2PlusRNNModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.args": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.cnn_shape": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.cnn_shape_torch": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.config": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.parser": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.stop": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.mobilenet_v2_with_lstm.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.models": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.models.autoregressive_action_dist": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.ActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution._a1_distribution": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution._a2_distribution": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.deterministic_sample": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.entropy": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.kl": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.logp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.required_model_output_shape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.sample": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.BinaryAutoregressiveDistribution.sampled_action_logp": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution._a1_distribution": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution._a2_distribution": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.deterministic_sample": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.entropy": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.kl": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.logp": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.required_model_output_shape": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.sample": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchBinaryAutoregressiveDistribution.sampled_action_logp": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_dist.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel",
    "ray.rllib.models.torch.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel.forward": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.AutoregressiveActionModel.value_function": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "_ActionModel",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.misc.normc_initializer",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.__init__._ActionModel": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.__init__._ActionModel.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.misc.normc_initializer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.__init__._ActionModel.forward": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.forward": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchAutoregressiveActionModel.value_function": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "ray.rllib.examples.models.autoregressive_action_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.normc_init_torch": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.autoregressive_action_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.batch_norm_model.BatchNormModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.batch_norm_model.BatchNormModel.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.BatchNormModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.misc.normc_initializer",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.BatchNormModel.value_function": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.KerasBatchNormModel": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.batch_norm_model.KerasBatchNormModel.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.models.torch.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.KerasBatchNormModel.forward": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.KerasBatchNormModel.value_function": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "numpy.product",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.misc.normc_initializer",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel.forward": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.TorchBatchNormModel.value_function": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.batch_norm_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.torch_normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.batch_norm_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.centralized_critic_models.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel.central_value_function": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.CentralizedCriticModel.value_function": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel.central_value_function": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel.forward": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchCentralizedCriticModel.value_function": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel.forward": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherCentralizedCriticModel.value_function": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel.forward": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.YetAnotherTorchCentralizedCriticModel.value_function": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.rllib.examples.models.centralized_critic_models.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.centralized_critic_models.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.custom_loss_model.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.CustomLossModel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.custom_loss_model.CustomLossModel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.CustomLossModel.custom_loss": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "print",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.modelv2.restore_original_dimensions",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.CustomLossModel.custom_stats": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.CustomLossModel.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.JsonReader": {
  "data": {
   "shadows": "ray.rllib.offline.JsonReader"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.offline.JsonReader",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel.custom_loss": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.mean",
    "print",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.modelv2.restore_original_dimensions",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel.forward": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchCustomLossModel.metrics": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.restore_original_dimensions": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.restore_original_dimensions"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.custom_loss_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.eager_model.EagerModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.eager_model.EagerModel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.eager_model.EagerModel.__init__.lambda_": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.rllib.examples.models.eager_model.EagerModel.forward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.eager_model.EagerModel.forward_eager": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "print",
    "ray.rllib.examples.models.eager_model.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.eager_model.EagerModel.value_function": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.eager_model.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.eager_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.fast_model.FastModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.fast_model.FastModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.FastModel.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.FastModel.value_function": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.TorchFastModel": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.fast_model.TorchFastModel.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.TorchFastModel.forward": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.TorchFastModel.value_function": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.fast_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.fast_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cnn_model",
    "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel.forward_rnn": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel.get_initial_state": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.MobileV2PlusRNNModel.value_function": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.RecurrentNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "list",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel.forward_rnn": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel.get_initial_state": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "list",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchMobileV2PlusRNNModel.value_function": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.TorchRNN": {
  "data": {
   "shadows": "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.mobilenet_v2_with_lstm_models.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.parametric_actions_model.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.DQNTorchModel": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.DistributionalQTFModel": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.FLOAT_MAX": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.FLOAT_MAX"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.FLOAT_MIN": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.FLOAT_MIN"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.distributional_q_tf_model.DistributionalQTFModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel.forward": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel.value_function": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.TorchFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "ray.rllib.agents.dqn.dqn_torch_model.DQNTorchModel.__init__",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ray.rllib.utils.torch_ops.FLOAT_MAX",
    "ray.rllib.utils.torch_ops.FLOAT_MIN"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel.value_function": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.rllib.examples.models.parametric_actions_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.parametric_actions_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.rnn_model.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.RNNModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.rnn_model.RNNModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.examples.models.rnn_model.RNNModel",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.RNNModel.forward_rnn": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.RNNModel.get_initial_state": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.RNNModel.value_function": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.RecurrentNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNN": {
  "data": {
   "shadows": "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNNModel": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNNModel.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "range",
    "ray.rllib.models.preprocessors.get_preprocessor",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNNModel.forward_rnn": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNNModel.get_initial_state": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.TorchRNNModel.value_function": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_model.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.rnn_spy_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel",
    "ray.rllib.examples.models.rnn_spy_model.SpyLayer",
    "ray.rllib.models.tf.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel.forward_rnn": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel",
    "ray.rllib.models.tf.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel.get_initial_state": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel.value_function": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.RecurrentNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.SpyLayer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.rnn_spy_model.SpyLayer.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.models.tf.misc.normc_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.SpyLayer.call": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.SpyLayer.spy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "ray.rllib.examples.models.rnn_spy_model.SpyLayer",
    "ray.rllib.examples.models.rnn_spy_model.pickle",
    "ray.rllib.examples.models.rnn_spy_model.ray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.rnn_spy_model.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.rnn_spy_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.shared_weights_model.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1.value_function": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2.forward": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2.value_function": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.TORCH_GLOBAL_SHARED_LAYER": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.rllib.examples.models.shared_weights_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "numpy.product",
    "ray.rllib.examples.models.shared_weights_model.TORCH_GLOBAL_SHARED_LAYER",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel.forward": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel.value_function": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.shared_weights_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.shared_weights_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTFRPGModel.value_function": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel.forward": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.CustomTorchRPGModel.value_function": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.rllib.examples.models.simple_rpg_model.TFFCNet": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model.TorchFCNet": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.models.simple_rpg_model.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "list",
    "range",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1",
    "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2",
    "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel",
    "ray.rllib.examples.multi_agent_cartpole.argparse",
    "ray.rllib.examples.multi_agent_cartpole.args",
    "ray.rllib.examples.multi_agent_cartpole.config",
    "ray.rllib.examples.multi_agent_cartpole.gen_policy",
    "ray.rllib.examples.multi_agent_cartpole.gym",
    "ray.rllib.examples.multi_agent_cartpole.mod1",
    "ray.rllib.examples.multi_agent_cartpole.mod2",
    "ray.rllib.examples.multi_agent_cartpole.os",
    "ray.rllib.examples.multi_agent_cartpole.parser",
    "ray.rllib.examples.multi_agent_cartpole.policies",
    "ray.rllib.examples.multi_agent_cartpole.policy_ids",
    "ray.rllib.examples.multi_agent_cartpole.random",
    "ray.rllib.examples.multi_agent_cartpole.ray",
    "ray.rllib.examples.multi_agent_cartpole.results",
    "ray.rllib.examples.multi_agent_cartpole.single_env",
    "ray.rllib.examples.multi_agent_cartpole.stop",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.multi_agent_cartpole.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.SharedWeightsModel1": {
  "data": {
   "shadows": "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel1"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.SharedWeightsModel2": {
  "data": {
   "shadows": "ray.rllib.examples.models.shared_weights_model.SharedWeightsModel2"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.TorchSharedWeightsModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.shared_weights_model.TorchSharedWeightsModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.act_space": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.args": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.config": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.gen_policy": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.rllib.examples.multi_agent_cartpole.act_space",
    "ray.rllib.examples.multi_agent_cartpole.obs_space",
    "ray.rllib.examples.multi_agent_cartpole.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.multi_agent_cartpole.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.mod1": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.mod2": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.obs_space": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.parser": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.policies": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.policy_ids": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.results": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.single_env": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.stop": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_cartpole.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_cartpole.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.examples.multi_agent_custom_policy.act_space",
    "ray.rllib.examples.multi_agent_custom_policy.argparse",
    "ray.rllib.examples.multi_agent_custom_policy.args",
    "ray.rllib.examples.multi_agent_custom_policy.config",
    "ray.rllib.examples.multi_agent_custom_policy.gym",
    "ray.rllib.examples.multi_agent_custom_policy.obs_space",
    "ray.rllib.examples.multi_agent_custom_policy.os",
    "ray.rllib.examples.multi_agent_custom_policy.parser",
    "ray.rllib.examples.multi_agent_custom_policy.ray",
    "ray.rllib.examples.multi_agent_custom_policy.results",
    "ray.rllib.examples.multi_agent_custom_policy.single_env",
    "ray.rllib.examples.multi_agent_custom_policy.stop",
    "ray.rllib.examples.policy.random_policy.RandomPolicy",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.multi_agent_custom_policy.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.RandomPolicy": {
  "data": {
   "shadows": "ray.rllib.examples.policy.random_policy.RandomPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.act_space": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.args": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.config": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.obs_space": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.parser": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_custom_policy.results": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.single_env": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.stop": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_custom_policy.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_independent_learning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.examples.multi_agent_independent_learning.act_spc",
    "ray.rllib.examples.multi_agent_independent_learning.env",
    "ray.rllib.examples.multi_agent_independent_learning.env_creator",
    "ray.rllib.examples.multi_agent_independent_learning.obs_space",
    "ray.rllib.examples.multi_agent_independent_learning.policies",
    "ray.tune.registry.register_env",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.multi_agent_independent_learning.PettingZooEnv": {
  "data": {
   "shadows": "ray.rllib.env.pettingzoo_env.PettingZooEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_independent_learning.act_spc": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_independent_learning.env": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_independent_learning.env_creator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pettingzoo.sisl.waterworld_v0.env",
    "ray.rllib.env.pettingzoo_env.PettingZooEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.multi_agent_independent_learning.obs_space": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_independent_learning.policies": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_independent_learning.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_independent_learning.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_independent_learning.waterworld_v0": {
  "data": {
   "shadows": "pettingzoo.sisl.waterworld_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "list",
    "ray.rllib.examples.multi_agent_parameter_sharing.act_space",
    "ray.rllib.examples.multi_agent_parameter_sharing.env",
    "ray.rllib.examples.multi_agent_parameter_sharing.env_creator",
    "ray.rllib.examples.multi_agent_parameter_sharing.obs_space",
    "ray.rllib.examples.multi_agent_parameter_sharing.policies",
    "ray.tune.registry.register_env",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.PettingZooEnv": {
  "data": {
   "shadows": "ray.rllib.env.pettingzoo_env.PettingZooEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.act_space": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.env": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.env_creator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pettingzoo.sisl.waterworld_v0.env",
    "ray.rllib.env.pettingzoo_env.PettingZooEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.obs_space": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.policies": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.policy_ids": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_parameter_sharing.waterworld_v0": {
  "data": {
   "shadows": "pettingzoo.sisl.waterworld_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "float",
    "int",
    "print",
    "quit",
    "range",
    "ray.rllib.agents.dqn.DQNTFPolicy",
    "ray.rllib.agents.dqn.DQNTorchPolicy",
    "ray.rllib.agents.dqn.DQNTrainer",
    "ray.rllib.agents.ppo.PPOTFPolicy",
    "ray.rllib.agents.ppo.PPOTorchPolicy",
    "ray.rllib.agents.ppo.PPOTrainer",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.examples.multi_agent_two_trainers.act_space",
    "ray.rllib.examples.multi_agent_two_trainers.argparse",
    "ray.rllib.examples.multi_agent_two_trainers.args",
    "ray.rllib.examples.multi_agent_two_trainers.dqn_trainer",
    "ray.rllib.examples.multi_agent_two_trainers.gym",
    "ray.rllib.examples.multi_agent_two_trainers.obs_space",
    "ray.rllib.examples.multi_agent_two_trainers.os",
    "ray.rllib.examples.multi_agent_two_trainers.parser",
    "ray.rllib.examples.multi_agent_two_trainers.policies",
    "ray.rllib.examples.multi_agent_two_trainers.policy_mapping_fn",
    "ray.rllib.examples.multi_agent_two_trainers.ppo_trainer",
    "ray.rllib.examples.multi_agent_two_trainers.ray",
    "ray.rllib.examples.multi_agent_two_trainers.result_dqn",
    "ray.rllib.examples.multi_agent_two_trainers.result_ppo",
    "ray.rllib.examples.multi_agent_two_trainers.single_dummy_env",
    "ray.tune.logger.pretty_print",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.multi_agent_two_trainers.DQNTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.DQNTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.PPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.PPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.PPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.PPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.act_space": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.args": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.dqn_trainer": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.obs_space": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.parser": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.policies": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.policy_mapping_fn": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.rllib.examples.multi_agent_two_trainers.ppo_trainer": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.pretty_print": {
  "data": {
   "shadows": "ray.tune.logger.pretty_print"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.multi_agent_two_trainers.result_dqn": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.result_ppo": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "ray.rllib.examples.multi_agent_two_trainers.single_dummy_env": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "int",
    "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv",
    "ray.rllib.examples.nested_action_spaces.argparse",
    "ray.rllib.examples.nested_action_spaces.args",
    "ray.rllib.examples.nested_action_spaces.config",
    "ray.rllib.examples.nested_action_spaces.os",
    "ray.rllib.examples.nested_action_spaces.parser",
    "ray.rllib.examples.nested_action_spaces.ray",
    "ray.rllib.examples.nested_action_spaces.results",
    "ray.rllib.examples.nested_action_spaces.stop",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.nested_action_spaces.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.NestedSpaceRepeatAfterMeEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.nested_space_repeat_after_me_env.NestedSpaceRepeatAfterMeEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.args": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.config": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.parser": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.nested_action_spaces.results": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces.stop": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.examples.nested_action_spaces.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "float",
    "int",
    "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole",
    "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel",
    "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel",
    "ray.rllib.examples.parametric_actions_cartpole.argparse",
    "ray.rllib.examples.parametric_actions_cartpole.args",
    "ray.rllib.examples.parametric_actions_cartpole.cfg",
    "ray.rllib.examples.parametric_actions_cartpole.config",
    "ray.rllib.examples.parametric_actions_cartpole.os",
    "ray.rllib.examples.parametric_actions_cartpole.parser",
    "ray.rllib.examples.parametric_actions_cartpole.ray",
    "ray.rllib.examples.parametric_actions_cartpole.results",
    "ray.rllib.examples.parametric_actions_cartpole.stop",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.parametric_actions_cartpole.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.ParametricActionsCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.parametric_actions_cartpole.ParametricActionsCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.ParametricActionsModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.parametric_actions_model.ParametricActionsModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.TorchParametricActionsModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.parametric_actions_model.TorchParametricActionsModel"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.args": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.cfg": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.config": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.parser": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.parametric_actions_cartpole.results": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.stop": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.rllib.examples.parametric_actions_cartpole.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "copy.deepcopy",
    "int",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.env.PettingZooEnv",
    "ray.rllib.examples.pettingzoo_env.act_space",
    "ray.rllib.examples.pettingzoo_env.alg_name",
    "ray.rllib.examples.pettingzoo_env.config",
    "ray.rllib.examples.pettingzoo_env.env_creator",
    "ray.rllib.examples.pettingzoo_env.num_cpus",
    "ray.rllib.examples.pettingzoo_env.obs_space",
    "ray.rllib.examples.pettingzoo_env.os",
    "ray.rllib.examples.pettingzoo_env.ray",
    "ray.rllib.examples.pettingzoo_env.test_env",
    "ray.rllib.examples.pettingzoo_env.trainer",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.pettingzoo_env.PettingZooEnv": {
  "data": {
   "shadows": "ray.rllib.env.PettingZooEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.act_space": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.alg_name": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.color_reduction_v0": {
  "data": {
   "shadows": "supersuit.color_reduction_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.config": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.dtype_v0": {
  "data": {
   "shadows": "supersuit.dtype_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.env_creator": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.float32",
    "pettingzoo.butterfly.pistonball_v0.env",
    "supersuit.color_reduction_v0",
    "supersuit.dtype_v0",
    "supersuit.normalize_obs_v0"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.pettingzoo_env.float32": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.normalize_obs_v0": {
  "data": {
   "shadows": "supersuit.normalize_obs_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.num_cpus": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.num_rollouts": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.obs_space": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.pistonball_v0": {
  "data": {
   "shadows": "pettingzoo.butterfly.pistonball_v0"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.pettingzoo_env.test_env": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.rllib.examples.pettingzoo_env.trainer": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.examples.policy": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.examples.policy.random_policy.RandomPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_fake_model",
    "dict",
    "gym.spaces.Box",
    "range",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy.__init__._fake_model": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy.compute_actions_from_input_dict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "print",
    "range",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy.is_recurrent": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.EpisodeEnvAwarePolicy.postprocess_trajectory": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.RandomPolicy": {
  "data": {
   "shadows": "ray.rllib.examples.policy.random_policy.RandomPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.episode_env_aware_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.random_policy": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.policy.random_policy.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.random_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.random_policy.RandomPolicy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.policy.random_policy.RandomPolicy.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Box",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.random_policy.RandomPolicy.compute_actions": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.random_policy.RandomPolicy.compute_log_likelihoods": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "ray.rllib.examples.policy.random_policy.random",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.random_policy.RandomPolicy.learn_on_batch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.random_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.random_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.random_policy.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.int32",
    "ray.rllib.examples.policy.rock_paper_scissors_dummies.gym",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic.compute_actions": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic.get_initial_state": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.PAPER",
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.ROCK",
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.SCISSORS",
    "ray.rllib.examples.policy.rock_paper_scissors_dummies.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.compute_actions": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "successor"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.compute_actions.successor": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.PAPER",
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.ROCK",
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors.SCISSORS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.get_weights": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.learn_on_batch": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic.set_weights": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.RockPaperScissors": {
  "data": {
   "shadows": "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.policy.rock_paper_scissors_dummies.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "print",
    "ray.rllib.examples.rock_paper_scissors_multiagent.argparse",
    "ray.rllib.examples.rock_paper_scissors_multiagent.args",
    "ray.rllib.examples.rock_paper_scissors_multiagent.parser",
    "ray.rllib.examples.rock_paper_scissors_multiagent.run_heuristic_vs_learned",
    "ray.rllib.examples.rock_paper_scissors_multiagent.run_same_policy",
    "ray.rllib.examples.rock_paper_scissors_multiagent.run_with_custom_entropy_loss",
    "ray.rllib.examples.rock_paper_scissors_multiagent.stop",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.AlwaysSameHeuristic": {
  "data": {
   "shadows": "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.BeatLastHeuristic": {
  "data": {
   "shadows": "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.PGTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.RockPaperScissors": {
  "data": {
   "shadows": "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.args": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.parser": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.run_heuristic_vs_learned": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "print",
    "range",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors",
    "ray.rllib.examples.policy.rock_paper_scissors_dummies.AlwaysSameHeuristic",
    "ray.rllib.examples.policy.rock_paper_scissors_dummies.BeatLastHeuristic",
    "ray.rllib.examples.rock_paper_scissors_multiagent.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.run_heuristic_vs_learned.select_policy": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.rllib.examples.rock_paper_scissors_multiagent.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.run_same_policy": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.rllib.examples.env.rock_paper_scissors.RockPaperScissors",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.run"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.run_with_custom_entropy_loss": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.PGTFPolicy",
    "ray.rllib.agents.pg.PGTorchPolicy",
    "ray.rllib.agents.pg.PGTrainer.with_updates",
    "ray.rllib.examples.rock_paper_scissors_multiagent.run_heuristic_vs_learned"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.run_with_custom_entropy_loss.entropy_policy_gradient_loss": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dist_class"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.stop": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.examples.rock_paper_scissors_multiagent.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.rllib.examples.rollout_worker_custom_workflow.argparse",
    "ray.rllib.examples.rollout_worker_custom_workflow.args",
    "ray.rllib.examples.rollout_worker_custom_workflow.os",
    "ray.rllib.examples.rollout_worker_custom_workflow.parser",
    "ray.rllib.examples.rollout_worker_custom_workflow.ray",
    "ray.rllib.examples.rollout_worker_custom_workflow.training_workflow",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.compute_actions": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.get_weights": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.learn_on_batch": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.set_weights": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy.update_some_value": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.args": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.parser": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.training_workflow": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.RolloutWorker.as_remote",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.examples.rollout_worker_custom_workflow.CustomPolicy",
    "ray.rllib.examples.rollout_worker_custom_workflow.gym",
    "ray.rllib.examples.rollout_worker_custom_workflow.ray",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "reporter",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.rollout_worker_custom_workflow.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.zeros_like",
    "print",
    "range",
    "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder",
    "ray.rllib.examples.saving_experiences.action",
    "ray.rllib.examples.saving_experiences.batch_builder",
    "ray.rllib.examples.saving_experiences.done",
    "ray.rllib.examples.saving_experiences.env",
    "ray.rllib.examples.saving_experiences.gym",
    "ray.rllib.examples.saving_experiences.obs",
    "ray.rllib.examples.saving_experiences.os",
    "ray.rllib.examples.saving_experiences.prep",
    "ray.rllib.examples.saving_experiences.prev_action",
    "ray.rllib.examples.saving_experiences.prev_reward",
    "ray.rllib.examples.saving_experiences.t",
    "ray.rllib.examples.saving_experiences.writer",
    "ray.rllib.models.preprocessors.get_preprocessor",
    "ray.rllib.offline.json_writer.JsonWriter"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.saving_experiences.JsonWriter": {
  "data": {
   "shadows": "ray.rllib.offline.json_writer.JsonWriter"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.SampleBatchBuilder": {
  "data": {
   "shadows": "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.action": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.batch_builder": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.done": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.env": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.obs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.prep": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.prev_action": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.prev_reward": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.rllib.examples.saving_experiences.t": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.examples.saving_experiences.writer": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "float",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Tuple",
    "int",
    "ray.rllib.env.multi_agent_env.ENV_STATE",
    "ray.rllib.examples.env.two_step_game.TwoStepGame",
    "ray.rllib.examples.env.two_step_game.TwoStepGame.action_space",
    "ray.rllib.examples.two_step_game.act_space",
    "ray.rllib.examples.two_step_game.argparse",
    "ray.rllib.examples.two_step_game.args",
    "ray.rllib.examples.two_step_game.config",
    "ray.rllib.examples.two_step_game.group",
    "ray.rllib.examples.two_step_game.grouping",
    "ray.rllib.examples.two_step_game.obs_space",
    "ray.rllib.examples.two_step_game.os",
    "ray.rllib.examples.two_step_game.parser",
    "ray.rllib.examples.two_step_game.ray",
    "ray.rllib.examples.two_step_game.results",
    "ray.rllib.examples.two_step_game.stop",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.grid_search",
    "ray.tune.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.two_step_game.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.ENV_STATE": {
  "data": {
   "shadows": "ray.rllib.env.multi_agent_env.ENV_STATE"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.TwoStepGame": {
  "data": {
   "shadows": "ray.rllib.examples.env.two_step_game.TwoStepGame"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.act_space": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.act_space_dict": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.args": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.config": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.grid_search": {
  "data": {
   "shadows": "ray.tune.grid_search"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.group": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.grouping": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.obs_space": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.obs_space_dict": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.parser": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.register_env": {
  "data": {
   "shadows": "ray.tune.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_step_game.results": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.stop": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_step_game.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG",
    "ray.rllib.agents.dqn.dqn_tf_policy.DQNTFPolicy",
    "ray.rllib.agents.dqn.dqn_torch_policy.DQNTorchPolicy",
    "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG",
    "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy",
    "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy",
    "ray.rllib.agents.trainer_template.build_trainer",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.examples.two_trainer_workflow.MyTrainer",
    "ray.rllib.examples.two_trainer_workflow.act_space",
    "ray.rllib.examples.two_trainer_workflow.argparse",
    "ray.rllib.examples.two_trainer_workflow.args",
    "ray.rllib.examples.two_trainer_workflow.config",
    "ray.rllib.examples.two_trainer_workflow.custom_training_workflow",
    "ray.rllib.examples.two_trainer_workflow.gym",
    "ray.rllib.examples.two_trainer_workflow.obs_space",
    "ray.rllib.examples.two_trainer_workflow.os",
    "ray.rllib.examples.two_trainer_workflow.parser",
    "ray.rllib.examples.two_trainer_workflow.policies",
    "ray.rllib.examples.two_trainer_workflow.policy_mapping_fn",
    "ray.rllib.examples.two_trainer_workflow.ray",
    "ray.rllib.examples.two_trainer_workflow.results",
    "ray.rllib.examples.two_trainer_workflow.single_env",
    "ray.rllib.examples.two_trainer_workflow.stop",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.registry.register_env",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.two_trainer_workflow.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.DQNTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy.DQNTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.DQNTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_torch_policy.DQNTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.DQN_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.LocalReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.LocalReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.MyTrainer": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.PPOTorchPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_torch_policy.PPOTorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.PPO_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.SelectExperiences": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.SelectExperiences"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.StandardizeFields": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.StandardizeFields"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.act_space": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.args": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.build_trainer": {
  "data": {
   "shadows": "ray.rllib.agents.trainer_template.build_trainer"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.config": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.custom_training_workflow": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.rollout_ops.SelectExperiences",
    "ray.rllib.execution.rollout_ops.StandardizeFields",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.execution.train_ops.UpdateTargetNetwork"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.two_trainer_workflow.custom_training_workflow.add_dqn_metrics": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "print",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.two_trainer_workflow.custom_training_workflow.add_ppo_metrics": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "print",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.examples.two_trainer_workflow.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.obs_space": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.parser": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.policies": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.policy_mapping_fn": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "ray.rllib.examples.two_trainer_workflow.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.examples.two_trainer_workflow.results": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.single_env": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.stop": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "ray.rllib.examples.two_trainer_workflow.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.rllib.env.unity3d_env.Unity3DEnv",
    "ray.rllib.env.unity3d_env.Unity3DEnv.get_policy_configs_for_game",
    "ray.rllib.examples.unity3d_env_local.argparse",
    "ray.rllib.examples.unity3d_env_local.args",
    "ray.rllib.examples.unity3d_env_local.config",
    "ray.rllib.examples.unity3d_env_local.os",
    "ray.rllib.examples.unity3d_env_local.parser",
    "ray.rllib.examples.unity3d_env_local.ray",
    "ray.rllib.examples.unity3d_env_local.results",
    "ray.rllib.examples.unity3d_env_local.stop",
    "ray.rllib.utils.test_utils.check_learning_achieved",
    "ray.tune.register_env",
    "ray.tune.run",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.examples.unity3d_env_local.Unity3DEnv": {
  "data": {
   "shadows": "ray.rllib.env.unity3d_env.Unity3DEnv"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local.args": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.rllib.examples.unity3d_env_local.check_learning_achieved": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_learning_achieved"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local.config": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.rllib.examples.unity3d_env_local.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local.parser": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.examples.unity3d_env_local.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.examples.unity3d_env_local.results": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "ray.rllib.examples.unity3d_env_local.stop": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "ray.rllib.examples.unity3d_env_local.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.execution": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.ApplyGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ApplyGradients"
  },
  "type": "import"
 },
 "ray.rllib.execution.AsyncGradients": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.AsyncGradients"
  },
  "type": "import"
 },
 "ray.rllib.execution.AverageGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.AverageGradients"
  },
  "type": "import"
 },
 "ray.rllib.execution.CollectMetrics": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.CollectMetrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.ComputeGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ComputeGradients"
  },
  "type": "import"
 },
 "ray.rllib.execution.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.execution.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.execution.Dequeue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Dequeue"
  },
  "type": "import"
 },
 "ray.rllib.execution.Enqueue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Enqueue"
  },
  "type": "import"
 },
 "ray.rllib.execution.MixInReplay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.MixInReplay"
  },
  "type": "import"
 },
 "ray.rllib.execution.OncePerTimeInterval": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.OncePerTimeInterval"
  },
  "type": "import"
 },
 "ray.rllib.execution.OncePerTimestepsElapsed": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.OncePerTimestepsElapsed"
  },
  "type": "import"
 },
 "ray.rllib.execution.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.execution.PrioritizedReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.execution.ReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.ReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.SelectExperiences": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.SelectExperiences"
  },
  "type": "import"
 },
 "ray.rllib.execution.SimpleReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.SimpleReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.execution.StandardizeFields": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.StandardizeFields"
  },
  "type": "import"
 },
 "ray.rllib.execution.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.execution.TrainTFMultiGPU": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainTFMultiGPU"
  },
  "type": "import"
 },
 "ray.rllib.execution.UpdateTargetNetwork": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.UpdateTargetNetwork"
  },
  "type": "import"
 },
 "ray.rllib.execution.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.execution.common": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.common.APPLY_GRADS_TIMER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.COMPUTE_GRADS_TIMER": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.GRAD_WAIT_TIMER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.LAST_TARGET_UPDATE_TS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.LEARNER_INFO": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.LOAD_BATCH_TIMER": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.common.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.common.NUM_TARGET_UPDATES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.SAMPLE_TIMER": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.STEPS_TRAINED_COUNTER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.execution.common.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.common.WORKER_UPDATE_TIMER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.execution.common._check_sample_batch_type": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.common._get_global_vars": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.util.iter.LocalIterator.get_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.common._get_shared_metrics": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.util.iter.LocalIterator.get_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.concurrency_ops.Concurrently": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "len",
    "range",
    "ray.util.iter.LocalIterator",
    "tag",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.Concurrently.tag": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.Dequeue": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.execution.concurrency_ops.queue",
    "ray.util.iter.LocalIterator",
    "ray.util.iter_metrics.SharedMetrics",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.Dequeue.base_iterator": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeError",
    "check",
    "ray.rllib.execution.concurrency_ops.queue",
    "ray.util.iter._NextValueNotReady"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.Enqueue": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "ray.rllib.execution.concurrency_ops.Enqueue.__call__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.queue",
    "ray.util.iter._NextValueNotReady"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.Enqueue.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.execution.concurrency_ops.queue",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.concurrency_ops.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.concurrency_ops.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.concurrency_ops.SharedMetrics": {
  "data": {
   "shadows": "ray.util.iter_metrics.SharedMetrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.concurrency_ops._NextValueNotReady": {
  "data": {
   "shadows": "ray.util.iter._NextValueNotReady"
  },
  "type": "import"
 },
 "ray.rllib.execution.concurrency_ops.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.learner_thread.LearnerThread": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.execution.learner_thread.threading"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.learner_thread.LearnerThread.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.execution.learner_thread.threading",
    "ray.rllib.execution.minibatch_buffer.MinibatchBuffer",
    "ray.rllib.utils.timer.TimerStat",
    "ray.rllib.utils.window_stat.WindowStat",
    "six.moves.queue.Queue"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.learner_thread.LearnerThread.add_learner_metrics": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.execution.learner_thread.copy",
    "timer_to_ms"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.learner_thread.LearnerThread.add_learner_metrics.timer_to_ms": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.learner_thread.LearnerThread.run": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.rllib.execution.learner_thread.LearnerThread.step": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.get_learner_stats"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.learner_thread.MinibatchBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.minibatch_buffer.MinibatchBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.TimerStat": {
  "data": {
   "shadows": "ray.rllib.utils.timer.TimerStat"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.WindowStat": {
  "data": {
   "shadows": "ray.rllib.utils.window_stat.WindowStat"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.execution.learner_thread.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.metric_ops.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.CollectMetrics": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "ray.rllib.execution.metric_ops.CollectMetrics.__call__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "list",
    "ray.rllib.evaluation.metrics.collect_episodes",
    "ray.rllib.evaluation.metrics.summarize_episodes",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.CollectMetrics.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.OncePerTimeInterval": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "ray.rllib.execution.metric_ops.OncePerTimeInterval.__call__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.rllib.execution.metric_ops.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.OncePerTimeInterval.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.OncePerTimestepsElapsed": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "ray.rllib.execution.metric_ops.OncePerTimestepsElapsed.__call__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.OncePerTimestepsElapsed.__init__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.StandardMetricsReporting": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.metric_ops.CollectMetrics",
    "ray.rllib.execution.metric_ops.OncePerTimeInterval",
    "ray.rllib.execution.metric_ops.OncePerTimestepsElapsed",
    "ray.util.iter.LocalIterator",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.metric_ops.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.collect_episodes": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_episodes"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.summarize_episodes": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.summarize_episodes"
  },
  "type": "import"
 },
 "ray.rllib.execution.metric_ops.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.execution.minibatch_buffer": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.minibatch_buffer.MinibatchBuffer": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "ray.rllib.execution.minibatch_buffer.MinibatchBuffer.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "ray.rllib.execution.minibatch_buffer.MinibatchBuffer.get": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.rllib.execution.multi_gpu_impl.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "build_graph",
    "enumerate",
    "len",
    "ray.rllib.execution.multi_gpu_impl.TOWER_SCOPE_NAME",
    "ray.rllib.execution.multi_gpu_impl.average_gradients",
    "ray.rllib.execution.multi_gpu_impl.logger",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer._setup_device": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "ray.rllib.execution.multi_gpu_impl.TOWER_SCOPE_NAME",
    "ray.rllib.execution.multi_gpu_impl.Tower"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer.get_common_loss": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer.get_device_losses": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer.load_data": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "ray.rllib.execution.multi_gpu_impl.logger",
    "ray.rllib.execution.multi_gpu_impl.make_divisible_by",
    "ray.rllib.utils.debug.summarize",
    "ray.util.debug.log_once",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer.optimize": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.TOWER_SCOPE_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.execution.multi_gpu_impl.Tower": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "ray.rllib.execution.multi_gpu_impl.average_gradients": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_impl.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.execution.multi_gpu_impl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_impl.make_divisible_by": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_impl.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_impl.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_impl.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.execution.multi_gpu_learner.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.multi_gpu_learner.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.LearnerThread": {
  "data": {
   "shadows": "ray.rllib.execution.learner_thread.LearnerThread"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.LocalSyncParallelOptimizer": {
  "data": {
   "shadows": "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.MinibatchBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.minibatch_buffer.MinibatchBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.TFMultiGPULearner": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.execution.learner_thread.LearnerThread"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.multi_gpu_learner.TFMultiGPULearner.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "len",
    "range",
    "ray.rllib.execution.learner_thread.LearnerThread.__init__",
    "ray.rllib.execution.minibatch_buffer.MinibatchBuffer",
    "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer",
    "ray.rllib.execution.multi_gpu_learner._LoaderThread",
    "ray.rllib.execution.multi_gpu_learner.logger",
    "ray.rllib.execution.multi_gpu_learner.math",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "set",
    "six.moves.queue.Queue"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_learner.TFMultiGPULearner.step": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.learner_thread.LearnerThread",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_learner.TimerStat": {
  "data": {
   "shadows": "ray.rllib.utils.timer.TimerStat"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner._LoaderThread": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.execution.multi_gpu_learner.threading"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.multi_gpu_learner._LoaderThread.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ray.rllib.execution.multi_gpu_learner.threading",
    "ray.rllib.utils.timer.TimerStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_learner._LoaderThread._step": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_learner._LoaderThread.run": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "ray.rllib.execution.multi_gpu_learner.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.execution.multi_gpu_learner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.execution.multi_gpu_learner.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.rllib.execution.replay_buffer.logging",
    "ray.rllib.execution.replay_buffer.ray"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.replay_buffer.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.util.iter.ParallelIteratorWorker"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max",
    "ray.rllib.execution.replay_buffer._local_replay_buffer",
    "ray.rllib.execution.replay_buffer.collections",
    "ray.rllib.execution.replay_buffer.logger",
    "ray.rllib.utils.timer.TimerStat",
    "ray.util.iter.ParallelIteratorWorker.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.__init__.gen_replay": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.__init__.new_buffer": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.add_batch": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "isinstance",
    "numpy.mean",
    "ray.rllib.execution.replay_buffer._ALL_POLICIES",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.get_host": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer.platform"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.get_instance_for_testing": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer._local_replay_buffer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.replay": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer._ALL_POLICIES",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.stats": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.LocalReplayBuffer.update_priorities": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.MinSegmentTree": {
  "data": {
   "shadows": "ray.rllib.execution.segment_tree.MinSegmentTree"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.ParallelIteratorWorker": {
  "data": {
   "shadows": "ray.util.iter.ParallelIteratorWorker"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer.ReplayBuffer",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer",
    "ray.rllib.execution.segment_tree.MinSegmentTree",
    "ray.rllib.execution.segment_tree.SumSegmentTree",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.window_stat.WindowStat",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer._sample_proportional": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "ray.rllib.execution.replay_buffer.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer.add": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "float",
    "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer.sample": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer.stats": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_buffer.ReplayBuffer",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.PrioritizedReplayBuffer.update_priorities": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "max",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayActor": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.window_stat.WindowStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer.__len__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer._encode_sample": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer.add": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "len",
    "ray.rllib.execution.replay_buffer.warn_replay_buffer_size",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer.sample": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "ray.rllib.execution.replay_buffer.random",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.ReplayBuffer.stats": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_buffer.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.SumSegmentTree": {
  "data": {
   "shadows": "ray.rllib.execution.segment_tree.SumSegmentTree"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.TimerStat": {
  "data": {
   "shadows": "ray.rllib.utils.timer.TimerStat"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.WindowStat": {
  "data": {
   "shadows": "ray.rllib.utils.window_stat.WindowStat"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer._ALL_POLICIES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.rllib.execution.replay_buffer._local_replay_buffer": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "ray.rllib.execution.replay_buffer.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.execution.replay_buffer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_buffer.warn_replay_buffer_size": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "ray.rllib.execution.replay_buffer.logger",
    "ray.rllib.execution.replay_buffer.psutil",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.replay_ops.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.LocalReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.LocalReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.MixInReplay": {
  "data": {
   "lineno": 139
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_ops.MixInReplay.__call__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_ops.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.MixInReplay.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "ray.rllib.execution.replay_ops.SimpleReplayBuffer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.Replay": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.util.iter.LocalIterator",
    "ray.util.iter.from_actors",
    "ray.util.iter_metrics.SharedMetrics",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.Replay.gen_replay": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.util.iter._NextValueNotReady"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.SharedMetrics": {
  "data": {
   "shadows": "ray.util.iter_metrics.SharedMetrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.SimpleReplayBuffer": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_ops.SimpleReplayBuffer.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.SimpleReplayBuffer.add_batch": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "ray.rllib.execution.replay_buffer.warn_replay_buffer_size"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.SimpleReplayBuffer.replay": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_ops.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.StoreToReplayBuffer": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_ops.StoreToReplayBuffer.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_ops.random",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.StoreToReplayBuffer.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.WaitUntilTimestepsElapsed": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "ray.rllib.execution.replay_ops.WaitUntilTimestepsElapsed.__call__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops.WaitUntilTimestepsElapsed.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.rllib.execution.replay_ops._NextValueNotReady": {
  "data": {
   "shadows": "ray.util.iter._NextValueNotReady"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.from_actors": {
  "data": {
   "shadows": "ray.util.iter.from_actors"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.execution.replay_ops.warn_replay_buffer_size": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.warn_replay_buffer_size"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.execution.rollout_ops.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.rollout_ops.AsyncGradients": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "int",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.util.iter.LocalIterator",
    "ray.util.iter.from_actors",
    "record_metrics",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.AsyncGradients.record_metrics": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "ray.rllib.execution.rollout_ops.AsyncGradients.record_metrics.__call__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.common.GRAD_WAIT_TIMER.push",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.execution.rollout_ops.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.AsyncGradients.record_metrics._on_fetch_start": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.rllib.execution.rollout_ops.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.AsyncGradients.samples_to_grads": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.get_global_worker"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.ConcatBatches": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "ray.rllib.execution.rollout_ops.ConcatBatches.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.rllib.execution.common.SAMPLE_TIMER",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.execution.rollout_ops.logger",
    "ray.rllib.execution.rollout_ops.time",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.ConcatBatches.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.ConcatBatches._on_fetch_start": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.rllib.execution.rollout_ops.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.GRAD_WAIT_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.GRAD_WAIT_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.ParallelRollouts": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "ray.util.iter.LocalIterator",
    "ray.util.iter.from_actors",
    "ray.util.iter_metrics.SharedMetrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.ParallelRollouts.report_timesteps": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.ParallelRollouts.sampler": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.SAMPLE_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.SAMPLE_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.SelectExperiences": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "ray.rllib.execution.rollout_ops.SelectExperiences.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.SelectExperiences.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.SharedMetrics": {
  "data": {
   "shadows": "ray.util.iter_metrics.SharedMetrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.StandardizeFields": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "ray.rllib.execution.rollout_ops.StandardizeFields.__call__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.sgd.standardized",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.StandardizeFields.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.rollout_ops.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops._check_sample_batch_type": {
  "data": {
   "shadows": "ray.rllib.execution.common._check_sample_batch_type"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.from_actors": {
  "data": {
   "shadows": "ray.util.iter.from_actors"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.get_global_worker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.get_global_worker"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.execution.rollout_ops.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.standardized": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.standardized"
  },
  "type": "import"
 },
 "ray.rllib.execution.rollout_ops.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.execution.segment_tree": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.execution.segment_tree.MinSegmentTree": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ray.rllib.execution.segment_tree.SegmentTree"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.segment_tree.MinSegmentTree.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "min",
    "ray.rllib.execution.segment_tree.MinSegmentTree",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.MinSegmentTree.min": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SegmentTree": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.rllib.execution.segment_tree.SegmentTree.__getitem__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SegmentTree.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "max",
    "range",
    "ray.rllib.execution.segment_tree.operator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SegmentTree.__setitem__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SegmentTree.reduce": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SumSegmentTree": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.rllib.execution.segment_tree.SegmentTree"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.segment_tree.SumSegmentTree.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.rllib.execution.segment_tree.SumSegmentTree",
    "ray.rllib.execution.segment_tree.operator",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SumSegmentTree.find_prefixsum_idx": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.SumSegmentTree.sum": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "ray.rllib.execution.segment_tree.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.execution.train_ops.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.train_ops.APPLY_GRADS_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.APPLY_GRADS_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.ApplyGradients": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.ApplyGradients.__call__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "ray.rllib.execution.common.APPLY_GRADS_TIMER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common.WORKER_UPDATE_TIMER",
    "ray.rllib.execution.common._get_global_vars",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.execution.train_ops.ray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.ApplyGradients.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "frozenset",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.AverageGradients": {
  "data": {
   "lineno": 323
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.AverageGradients.__call__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "len",
    "ray.rllib.execution.train_ops.logger",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.COMPUTE_GRADS_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.COMPUTE_GRADS_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.ComputeGradients": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.ComputeGradients.__call__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.common.COMPUTE_GRADS_TIMER",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.ComputeGradients.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LAST_TARGET_UPDATE_TS": {
  "data": {
   "shadows": "ray.rllib.execution.common.LAST_TARGET_UPDATE_TS"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LEARNER_INFO": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARNER_INFO"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LEARN_ON_BATCH_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LOAD_BATCH_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.LOAD_BATCH_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.LocalSyncParallelOptimizer": {
  "data": {
   "shadows": "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.NUM_TARGET_UPDATES": {
  "data": {
   "shadows": "ray.rllib.execution.common.NUM_TARGET_UPDATES"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.PolicyID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.PolicyID"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.STEPS_TRAINED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.TrainOneStep": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.TrainOneStep.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.evaluation.metrics.get_learner_stats",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common.WORKER_UPDATE_TIMER",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.execution.common._get_global_vars",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.execution.train_ops.ray",
    "ray.rllib.utils.sgd.do_minibatch_sgd",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.TrainOneStep.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "frozenset",
    "int",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.utils.typing.PolicyID",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.TrainTFMultiGPU": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.TrainTFMultiGPU.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int",
    "isinstance",
    "list",
    "max",
    "numpy.random.permutation",
    "range",
    "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY.items",
    "ray.rllib.execution.common.LEARNER_INFO",
    "ray.rllib.execution.common.LEARN_ON_BATCH_TIMER",
    "ray.rllib.execution.common.LOAD_BATCH_TIMER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER",
    "ray.rllib.execution.common.WORKER_UPDATE_TIMER",
    "ray.rllib.execution.common._check_sample_batch_type",
    "ray.rllib.execution.common._get_global_vars",
    "ray.rllib.execution.common._get_shared_metrics",
    "ray.rllib.execution.train_ops.logger",
    "ray.rllib.execution.train_ops.logging",
    "ray.rllib.execution.train_ops.ray",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.sgd.averaged",
    "ray.rllib.utils.typing.SampleBatchType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.TrainTFMultiGPU.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "int",
    "len",
    "range",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.execution.multi_gpu_impl.LocalSyncParallelOptimizer",
    "ray.rllib.execution.train_ops.math",
    "ray.rllib.utils.typing.PolicyID",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.UpdateTargetNetwork": {
  "data": {
   "lineno": 350
  },
  "type": "class"
 },
 "ray.rllib.execution.train_ops.UpdateTargetNetwork.__call__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ray.rllib.execution.common.LAST_TARGET_UPDATE_TS",
    "ray.rllib.execution.common.NUM_TARGET_UPDATES",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.UpdateTargetNetwork.__init__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "frozenset",
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common.STEPS_TRAINED_COUNTER"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.train_ops.WORKER_UPDATE_TIMER": {
  "data": {
   "shadows": "ray.rllib.execution.common.WORKER_UPDATE_TIMER"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops._check_sample_batch_type": {
  "data": {
   "shadows": "ray.rllib.execution.common._check_sample_batch_type"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops._get_global_vars": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_global_vars"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.averaged": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.averaged"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.do_minibatch_sgd": {
  "data": {
   "shadows": "ray.rllib.utils.sgd.do_minibatch_sgd"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.get_learner_stats": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.get_learner_stats"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.rllib.execution.train_ops.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.execution.train_ops.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.execution.tree_agg.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.execution.tree_agg.Aggregator": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.execution.tree_agg.ray",
    "ray.util.iter.ParallelIteratorWorker"
   ]
  },
  "type": "class"
 },
 "ray.rllib.execution.tree_agg.Aggregator.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.Aggregator.__init__.generator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib.execution.replay_ops.MixInReplay",
    "ray.rllib.execution.rollout_ops.ConcatBatches"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.Aggregator.__init__.generator.update_worker": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.Aggregator.get_host": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.rllib.execution.tree_agg.platform"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.Aggregator.set_weights": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.MixInReplay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.MixInReplay"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.ParallelIterator": {
  "data": {
   "shadows": "ray.util.iter.ParallelIterator"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.ParallelIteratorWorker": {
  "data": {
   "shadows": "ray.util.iter.ParallelIteratorWorker"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.STEPS_SAMPLED_COUNTER": {
  "data": {
   "shadows": "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg._get_shared_metrics": {
  "data": {
   "shadows": "ray.rllib.execution.common._get_shared_metrics"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.create_colocated": {
  "data": {
   "shadows": "ray.rllib.utils.actors.create_colocated"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.from_actors": {
  "data": {
   "shadows": "ray.util.iter.from_actors"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.gather_experiences_tree_aggregation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.tree_agg.Aggregator",
    "ray.rllib.execution.tree_agg.logger",
    "ray.rllib.utils.actors.create_colocated",
    "ray.util.iter.from_actors",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.gather_experiences_tree_aggregation.record_steps_sampled": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.rllib.execution.common.STEPS_SAMPLED_COUNTER",
    "ray.rllib.execution.common._get_shared_metrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.execution.tree_agg.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.execution.tree_agg.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.rllib.execution.tree_agg.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.models": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.MODEL_DEFAULTS": {
  "data": {
   "shadows": "ray.rllib.models.catalog.MODEL_DEFAULTS"
  },
  "type": "import"
 },
 "ray.rllib.models.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.models.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.Preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.Preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.models.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.models.action_dist": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.action_dist.ActionDistribution": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.action_dist.ActionDistribution.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.List",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.deterministic_sample": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.entropy": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.kl": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.logp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.multi_entropy": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.multi_kl": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.required_model_output_shape": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "numpy.ndarray",
    "ray.rllib.models.action_dist.gym",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelConfigDict",
    "ray.rllib.utils.typing.Union",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.sample": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.ActionDistribution.sampled_action_logp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.action_dist.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.List": {
  "data": {
   "shadows": "ray.rllib.utils.typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.Union": {
  "data": {
   "shadows": "ray.rllib.utils.typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.models.action_dist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.models.catalog.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.typing.ModelConfigDict"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.catalog.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Deterministic": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Deterministic"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.DiagGaussian": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.DiagGaussian"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Dirichlet": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Dirichlet"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.FCNet": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.LSTMWrapper": {
  "data": {
   "shadows": "ray.rllib.models.tf.recurrent_net.LSTMWrapper"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.ModelCatalog": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.catalog.ModelCatalog._get_multi_action_distribution": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "functools.partial",
    "int",
    "issubclass",
    "ray.rllib.models.catalog.ModelCatalog",
    "ray.rllib.models.catalog.tree",
    "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution",
    "ray.rllib.utils.spaces.space_utils.flatten_space",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog._get_v2_model_class": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.tf.visionnet.VisionNetwork",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog._wrap_if_needed": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "issubclass",
    "model_cls",
    "model_cls.__name__",
    "ray.rllib.models.modelv2.ModelV2",
    "staticmethod",
    "type",
    "wrapper",
    "wrapper.__name__",
    "wrapper.__qualname__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog._wrap_if_needed.wrapper": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "model_cls"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_action_dist": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.partial",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.catalog.ModelCatalog",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.models.catalog.logger",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.tf.tf_action_dist.Deterministic",
    "ray.rllib.models.tf.tf_action_dist.DiagGaussian",
    "ray.rllib.models.tf.tf_action_dist.Dirichlet",
    "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.MultiCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchDeterministic",
    "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian",
    "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.error.UnsupportedSpaceException",
    "ray.rllib.utils.spaces.simplex.Simplex",
    "ray.rllib.utils.typing.ModelConfigDict",
    "ray.tune.registry.RLLIB_ACTION_DIST",
    "ray.tune.registry._global_registry.get",
    "staticmethod",
    "str",
    "sum",
    "type",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_action_placeholder": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ray.rllib.models.catalog.ModelCatalog",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_action_shape": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "isinstance",
    "len",
    "numpy.dtype",
    "numpy.product",
    "range",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.spaces.simplex.Simplex",
    "ray.rllib.utils.spaces.space_utils.flatten_space",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_model_v2": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "dict",
    "int",
    "isinstance",
    "issubclass",
    "model_cls",
    "ray.rllib.models.catalog.ModelCatalog",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.models.catalog.logger",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.recurrent_net.LSTMWrapper",
    "ray.rllib.models.torch.recurrent_net.LSTMWrapper",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelConfigDict",
    "ray.tune.registry.RLLIB_MODEL",
    "ray.tune.registry._global_registry.get",
    "set",
    "staticmethod",
    "str",
    "type",
    "wrapper"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_model_v2.track_var_creation": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_preprocessor": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.models.catalog.ModelCatalog",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.models.preprocessors.Preprocessor",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "staticmethod",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.get_preprocessor_for_space": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "Exception",
    "cls",
    "dict",
    "list",
    "ray.rllib.models.catalog.gym",
    "ray.rllib.models.catalog.logger",
    "ray.rllib.models.preprocessors.Preprocessor",
    "ray.rllib.models.preprocessors.get_preprocessor",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.tune.registry.RLLIB_PREPROCESSOR",
    "ray.tune.registry._global_registry.get",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.register_custom_action_dist": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.tune.registry.RLLIB_ACTION_DIST",
    "ray.tune.registry._global_registry.register",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.register_custom_model": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.tune.registry.RLLIB_MODEL",
    "ray.tune.registry._global_registry.register",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelCatalog.register_custom_preprocessor": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.tune.registry.RLLIB_PREPROCESSOR",
    "ray.tune.registry._global_registry.register",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.catalog.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.MultiActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.MultiCategorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.MultiCategorical"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.Preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.RLLIB_ACTION_DIST": {
  "data": {
   "shadows": "ray.tune.registry.RLLIB_ACTION_DIST"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.RLLIB_MODEL": {
  "data": {
   "shadows": "ray.tune.registry.RLLIB_MODEL"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.RLLIB_PREPROCESSOR": {
  "data": {
   "shadows": "ray.tune.registry.RLLIB_PREPROCESSOR"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Simplex": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.simplex.Simplex"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchDeterministic": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchDiagGaussian": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchLSTMWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.recurrent_net.LSTMWrapper"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchMultiActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.TorchMultiCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.VisionNet": {
  "data": {
   "shadows": "ray.rllib.models.tf.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog._global_registry": {
  "data": {
   "shadows": "ray.tune.registry._global_registry"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.flatten_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.flatten_space"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.rllib.models.catalog.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.models.catalog.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.modelv2.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.ModelV2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.modelv2.ModelV2.__call__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "ray.rllib.models.modelv2.flatten",
    "ray.rllib.models.modelv2.restore_original_dimensions",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "ray.rllib.models.modelv2.gym",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.context": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.NullContextManager",
    "ray.rllib.models.modelv2.contextlib",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.custom_loss": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.from_batch": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.get_initial_state": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.ndarray",
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.import_from_h5": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.is_time_major": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.last_output": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.metrics": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.trainable_variables": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.value_function": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.ModelV2.variables": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.framework.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.NullContextManager": {
  "data": {
   "lineno": 322
  },
  "type": "class"
 },
 "ray.rllib.models.modelv2.NullContextManager.__enter__": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.NullContextManager.__exit__": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.NullContextManager.__init__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.Repeated": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.repeated.Repeated"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.RepeatedValues": {
  "data": {
   "shadows": "ray.rllib.models.repeated_values.RepeatedValues"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.RepeatedValuesPreprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.RepeatedValuesPreprocessor"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.TensorStructType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorStructType"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2._cache": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "ray.rllib.models.modelv2._unpack_obs": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "id",
    "isinstance",
    "len",
    "list",
    "ray.rllib.models.modelv2._cache",
    "ray.rllib.models.modelv2.gym",
    "ray.rllib.models.preprocessors.RepeatedValuesPreprocessor",
    "ray.rllib.models.preprocessors.get_preprocessor",
    "ray.rllib.models.repeated_values.RepeatedValues",
    "ray.rllib.utils.framework.TensorType",
    "ray.rllib.utils.spaces.repeated.Repeated",
    "ray.rllib.utils.typing.TensorStructType",
    "typing.Any",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.flatten": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.TensorType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.get_preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.get_preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.restore_original_dimensions": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.models.modelv2._unpack_obs",
    "ray.rllib.models.modelv2.gym",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.TensorType",
    "ray.rllib.utils.typing.TensorStructType",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.modelv2.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.modelv2.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.repeated_values": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.repeated_values.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.repeated_values.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.repeated_values.RepeatedValues": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.repeated_values.RepeatedValues.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values.RepeatedValues.__repr__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values.RepeatedValues.__str__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values.RepeatedValues.unbatch_all": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "range",
    "ray.rllib.models.repeated_values._batch_index_helper",
    "ray.rllib.models.repeated_values._get_batch_dim_helper",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values.RepeatedValues.unbatch_repeat_dim": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.models.repeated_values._unbatch_helper",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values.TensorStructType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorStructType"
  },
  "type": "import"
 },
 "ray.rllib.models.repeated_values.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.repeated_values._batch_index_helper": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "list",
    "ray.rllib.models.repeated_values.RepeatedValues",
    "ray.rllib.utils.framework.TensorStructType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values._get_batch_dim_helper": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "int",
    "isinstance",
    "ray.rllib.models.repeated_values.RepeatedValues",
    "ray.rllib.utils.framework.TensorStructType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.repeated_values._unbatch_helper": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "range",
    "ray.rllib.models.repeated_values.RepeatedValues",
    "ray.rllib.utils.framework.TensorStructType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.tf.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.RecurrentNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.VisionNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.models.tf.fcnet": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.fcnet.FullyConnectedNetwork": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.fcnet.FullyConnectedNetwork.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.product",
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.tf.misc.normc_initializer",
    "ray.rllib.utils.framework.get_activation_fn",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.fcnet.FullyConnectedNetwork.__init__.tiled_log_std": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "ray.rllib.models.tf.fcnet.FullyConnectedNetwork.forward": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "ray.rllib.models.tf.fcnet.FullyConnectedNetwork.value_function": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ray.rllib.models.tf.fcnet.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.fcnet.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.fcnet.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.fcnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.fcnet.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.tf.layers.GRUGate": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.gru_gate.GRUGate"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.MultiHeadAttention": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.multi_head_attention.MultiHeadAttention"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.NoisyLayer": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.RelativeMultiHeadAttention": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.relative_multi_head_attention.RelativeMultiHeadAttention"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.SkipConnection": {
  "data": {
   "shadows": "ray.rllib.models.tf.layers.skip_connection.SkipConnection"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.models.tf.layers.gru_gate": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.layers.gru_gate.GRUGate": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.layers.gru_gate.GRUGate.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.gru_gate.GRUGate.build": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.gru_gate.GRUGate.build.bias_initializer": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.gru_gate.GRUGate.call": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.gru_gate.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.multi_head_attention": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.layers.multi_head_attention.MultiHeadAttention": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.layers.multi_head_attention.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.multi_head_attention.MultiHeadAttention.call": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.multi_head_attention.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.noisy_layer": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer._f_epsilon": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer.build": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.sqrt",
    "ray.rllib.utils.framework.get_variable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.noisy_layer.NoisyLayer.call": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "fn",
    "int",
    "ray.rllib.utils.framework.get_activation_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.noisy_layer.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.noisy_layer.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.noisy_layer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.noisy_layer.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention.RelativeMultiHeadAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention.RelativeMultiHeadAttention.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention.RelativeMultiHeadAttention.call": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention.RelativeMultiHeadAttention.rel_shift": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.relative_multi_head_attention.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.layers.skip_connection": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.layers.skip_connection.SkipConnection": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.layers.skip_connection.SkipConnection.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.skip_connection.SkipConnection.call": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.models.tf.layers.skip_connection.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.misc": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.misc.conv2d": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.misc.flatten": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.misc.linear": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.models.tf.misc.normc_initializer": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "ray.rllib.models.tf.misc.normc_initializer._initializer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.misc.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.recurrent_net.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.rllib.models.tf.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "numpy.product",
    "ray.rllib.models.tf.recurrent_net.LSTMWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper.forward": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ray.rllib.models.tf.recurrent_net.RecurrentNetwork",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper.forward_rnn": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ray.rllib.models.tf.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper.get_initial_state": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.LSTMWrapper.value_function": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.RecurrentNetwork": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.recurrent_net.RecurrentNetwork.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.rnn_sequencing.add_time_dimension",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.RecurrentNetwork.forward_rnn": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.RecurrentNetwork.get_initial_state": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.recurrent_net.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.add_time_dimension": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.add_time_dimension"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.recurrent_net.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_tfp"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.tf_action_dist.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "math.log",
    "ray.rllib.models.tf.tf_action_dist.tfp",
    "ray.rllib.utils.SMALL_NUMBER",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta._build_sample_op": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta._squash": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta._unsquash": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta.deterministic_sample": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta.logp": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Beta.required_model_output_shape": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical._build_sample_op": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.deterministic_sample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.entropy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.kl": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.logp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Categorical.required_model_output_shape": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Deterministic": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.Deterministic._build_sample_op": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Deterministic.deterministic_sample": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Deterministic.logp": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Deterministic.required_model_output_shape": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian._build_sample_op": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.deterministic_sample": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.entropy": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.e",
    "numpy.log",
    "numpy.pi",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.kl": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.DiagGaussian",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.logp": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.DiagGaussian.required_model_output_shape": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet._build_sample_op": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet.entropy": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet.kl": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet.logp": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.Dirichlet.required_model_output_shape": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.tfp",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax._build_sample_op": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax.deterministic_sample": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax.logp": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.GumbelSoftmax.required_model_output_shape": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.List": {
  "data": {
   "shadows": "ray.rllib.utils.typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.MAX_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.MAX_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.MIN_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.MIN_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "dist",
    "numpy.array",
    "numpy.int32",
    "ray.rllib.models.action_dist.ActionDistribution.__init__",
    "ray.rllib.models.tf.tf_action_dist.tree",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.deterministic_sample": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.entropy": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.functools",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.kl": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.functools",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.logp": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "dist",
    "dist.sample",
    "isinstance",
    "numpy.ndarray",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.tf.tf_action_dist.functools",
    "ray.rllib.models.tf.tf_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.logp.map_": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "dist",
    "dist.logp",
    "isinstance",
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.required_model_output_shape": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.sample": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiActionDistribution.sampled_action_logp": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution.__init__",
    "ray.rllib.models.tf.tf_action_dist.Categorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical._build_sample_op": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.deterministic_sample": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.entropy": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.kl": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.logp": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.multi_entropy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.multi_kl": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.MultiCategorical.required_model_output_shape": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SMALL_NUMBER": {
  "data": {
   "shadows": "ray.rllib.utils.SMALL_NUMBER"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.less",
    "ray.rllib.models.tf.tf_action_dist.tfp",
    "ray.rllib.utils.MAX_LOG_NN_OUTPUT",
    "ray.rllib.utils.MIN_LOG_NN_OUTPUT",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian._build_sample_op": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian._squash": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian._unsquash": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ray.rllib.utils.SMALL_NUMBER"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian.deterministic_sample": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian.logp": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.SMALL_NUMBER",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.SquashedGaussian.required_model_output_shape": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.TFActionDistribution": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_action_dist.TFActionDistribution.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.List",
    "ray.rllib.utils.typing.TensorType",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.TFActionDistribution._build_sample_op": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.TFActionDistribution.sample": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.TFActionDistribution.sampled_action_logp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_action_dist.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.tfp": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.models.tf.tf_action_dist.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_action_dist.try_import_tfp": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tfp"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.tf_modelv2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "ray.rllib.models.modelv2.ModelV2.__init__",
    "ray.rllib.models.tf.tf_modelv2.gym",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.context": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2.context",
    "ray.rllib.models.tf.tf_modelv2.contextlib"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.register_variables": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.trainable_variables": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.update_ops": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TFModelV2.variables": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "list",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.tf_modelv2.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.tf_modelv2.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.visionnet": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.tf.visionnet.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.visionnet.VisionNetwork": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.tf.visionnet.VisionNetwork.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "ray.rllib.models.tf.misc.normc_initializer",
    "ray.rllib.models.tf.visionnet.VisionNetwork",
    "ray.rllib.models.utils.get_filter_config",
    "ray.rllib.utils.framework.get_activation_fn",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.tf.visionnet.VisionNetwork.forward": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "ray.rllib.models.tf.visionnet.VisionNetwork.value_function": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "ray.rllib.models.tf.visionnet.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.visionnet.get_filter_config": {
  "data": {
   "shadows": "ray.rllib.models.utils.get_filter_config"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.visionnet.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.models.tf.visionnet.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.torch": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.torch.attention_net": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.attention_net.GRUGate": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.GRUGate"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.GTrXLNet": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.attention_net.GTrXLNet.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "range",
    "ray.rllib.models.torch.attention_net.relative_position_embedding",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.modules.GRUGate",
    "ray.rllib.models.torch.modules.RelativeMultiHeadAttention",
    "ray.rllib.models.torch.modules.SkipConnection",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.attention_net.GTrXLNet.forward_rnn": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "range",
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.attention_net.GTrXLNet.get_initial_state": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.attention_net.GTrXLNet.value_function": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.attention_net.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.RecurrentNetwork": {
  "data": {
   "shadows": "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.RelativeMultiHeadAttention": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.RelativeMultiHeadAttention"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.SkipConnection": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.SkipConnection"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.attention_net.relative_position_embedding": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.rllib.models.torch.attention_net.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.models.torch.fcnet.logging",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.fcnet.AppendBiasLayer": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.AppendBiasLayer"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.FullyConnectedNetwork": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.fcnet.FullyConnectedNetwork.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.product",
    "ray.rllib.models.torch.misc.AppendBiasLayer",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.misc.normc_initializer",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.fcnet.FullyConnectedNetwork.forward": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.fcnet.FullyConnectedNetwork.value_function": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.fcnet.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.models.torch.fcnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.fcnet.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.misc": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.misc.AppendBiasLayer": {
  "data": {
   "lineno": 129
  },
  "type": "class"
 },
 "ray.rllib.models.torch.misc.AppendBiasLayer.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.AppendBiasLayer.forward": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.misc.Reshape": {
  "data": {
   "lineno": 144
  },
  "type": "class"
 },
 "ray.rllib.models.torch.misc.Reshape.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.Reshape.forward": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.SlimConv2d": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "ray.rllib.models.torch.misc.SlimConv2d.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "activation_fn",
    "initializer",
    "isinstance",
    "ray.rllib.models.torch.misc.SlimConv2d",
    "ray.rllib.utils.framework.get_activation_fn",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.SlimConv2d.forward": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.SlimFC": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "ray.rllib.models.torch.misc.SlimFC.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "activation_fn",
    "initializer",
    "isinstance",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.utils.framework.get_activation_fn",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.SlimFC.forward": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.misc.normc_initializer": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.normc_initializer.initializer": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.misc.same_padding": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.misc.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.torch.modules.GRUGate": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.gru_gate.GRUGate"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.MultiHeadAttention": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.multi_head_attention.MultiHeadAttention"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.RelativeMultiHeadAttention": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.relative_multi_head_attention.RelativeMultiHeadAttention"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.SkipConnection": {
  "data": {
   "shadows": "ray.rllib.models.torch.modules.skip_connection.SkipConnection"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.ConvTranspose2DStack": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.ConvTranspose2DStack.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "enumerate",
    "initializer",
    "int",
    "len",
    "ray.rllib.models.torch.misc.Reshape",
    "ray.rllib.models.utils.get_initializer",
    "ray.rllib.utils.framework.get_activation_fn",
    "str",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.ConvTranspose2DStack.forward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "torch.distributions.Independent",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.Reshape": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.Reshape"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.get_initializer": {
  "data": {
   "shadows": "ray.rllib.models.utils.get_initializer"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.td": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.convtranspose2d_stack.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.gru_gate": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.gru_gate.GRUGate": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.gru_gate.GRUGate.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.gru_gate.GRUGate.forward": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.gru_gate.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.multi_head_attention": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.MultiHeadAttention": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.models.torch.misc.SlimFC",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.MultiHeadAttention.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "list",
    "ray.rllib.utils.torch_ops.sequence_mask"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.sequence_mask": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.sequence_mask"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.multi_head_attention.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.noisy_layer": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "numpy.full",
    "numpy.random.uniform",
    "numpy.sqrt",
    "numpy.zeros",
    "ray.rllib.utils.framework.get_activation_fn",
    "ray.rllib.utils.framework.get_variable",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer._f_epsilon": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.noisy_layer.NoisyLayer.forward": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.noisy_layer.get_activation_fn": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_activation_fn"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.noisy_layer.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.noisy_layer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.noisy_layer.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.RelativeMultiHeadAttention": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.RelativeMultiHeadAttention.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.models.torch.misc.SlimFC",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.RelativeMultiHeadAttention.forward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "list",
    "ray.rllib.utils.torch_ops.sequence_mask"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.RelativeMultiHeadAttention.rel_shift": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.sequence_mask": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.sequence_mask"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.relative_multi_head_attention.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.modules.skip_connection": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.modules.skip_connection.SkipConnection": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "ray.rllib.models.torch.modules.skip_connection.SkipConnection.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.skip_connection.SkipConnection.forward": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.models.torch.modules.skip_connection.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.recurrent_net.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "int",
    "numpy.product",
    "range",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper.forward": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS.float",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS.float",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper.forward_rnn": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.rllib.models.torch.recurrent_net.RecurrentNetwork",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper.get_initial_state": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "next",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.LSTMWrapper.value_function": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.RecurrentNetwork": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.recurrent_net.RecurrentNetwork.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.rnn_sequencing.add_time_dimension",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.RecurrentNetwork.forward_rnn": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.recurrent_net.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.add_time_dimension": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.add_time_dimension"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.recurrent_net.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.torch_action_dist.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.List": {
  "data": {
   "shadows": "ray.rllib.utils.typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.MAX_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.MAX_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.MIN_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.MIN_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.SMALL_NUMBER": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.SMALL_NUMBER"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "math.log",
    "ray.rllib.utils.numpy.SMALL_NUMBER",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta._squash": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta._unsquash": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta.deterministic_sample": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta.logp": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta.required_model_output_shape": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchBeta.sample": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchCategorical": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchCategorical.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchCategorical.deterministic_sample": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchCategorical.required_model_output_shape": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDeterministic": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDeterministic.deterministic_sample": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDeterministic.required_model_output_shape": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDeterministic.sample": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDeterministic.sampled_action_logp": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.deterministic_sample": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.entropy": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.kl": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.logp": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDiagGaussian.required_model_output_shape": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.List",
    "ray.rllib.utils.typing.TensorType",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.entropy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.kl": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.logp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.sample": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper.sampled_action_logp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "dist",
    "isinstance",
    "list",
    "ray.rllib.models.torch.torch_action_dist.tree",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.deterministic_sample": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.entropy": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.functools",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.kl": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.functools",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.logp": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "dist",
    "dist.sample",
    "isinstance",
    "list",
    "numpy.ndarray",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.functools",
    "ray.rllib.models.torch.torch_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.logp.map_": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dist",
    "dist.logp",
    "isinstance",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.required_model_output_shape": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.sample": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.torch.torch_action_dist.tree",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiActionDistribution.sampled_action_logp": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.deterministic_sample": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.entropy": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.kl": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.logp": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.multi_entropy": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.multi_kl": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.required_model_output_shape": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.sum",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical.sample": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.less",
    "ray.rllib.utils.numpy.MAX_LOG_NN_OUTPUT",
    "ray.rllib.utils.numpy.MIN_LOG_NN_OUTPUT",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian._squash": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian._unsquash": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ray.rllib.utils.numpy.SMALL_NUMBER",
    "ray.rllib.utils.torch_ops.atanh"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian.deterministic_sample": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian.logp": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.numpy.SMALL_NUMBER"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian.required_model_output_shape": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.prod",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.TorchSquashedGaussian.sample": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_action_dist.atanh": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.atanh"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_action_dist.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.torch_modelv2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.TorchModelV2": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "ray.rllib.models.modelv2.ModelV2.__init__",
    "ray.rllib.models.torch.torch_modelv2.gym",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_modelv2.TorchModelV2.trainable_variables": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_modelv2.TorchModelV2.variables": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "list",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.torch_modelv2.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.torch_modelv2.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.models.torch.visionnet.SlimConv2d": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimConv2d"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.VisionNetwork": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.models.torch.visionnet.VisionNetwork.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.ceil",
    "ray.rllib.models.torch.misc.SlimConv2d",
    "ray.rllib.models.torch.misc.SlimFC",
    "ray.rllib.models.torch.misc.normc_initializer",
    "ray.rllib.models.torch.misc.same_padding",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__",
    "ray.rllib.models.utils.get_filter_config"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.visionnet.VisionNetwork._hidden_layers": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.rllib.models.torch.visionnet.VisionNetwork.forward": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.visionnet.VisionNetwork.value_function": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.torch.visionnet.get_filter_config": {
  "data": {
   "shadows": "ray.rllib.models.utils.get_filter_config"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.same_padding": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.same_padding"
  },
  "type": "import"
 },
 "ray.rllib.models.torch.visionnet.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.models.utils": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.models.utils.get_filter_config": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.utils.get_initializer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.models.utils.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.models.utils.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.offline": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.io_context.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.offline.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.input_reader.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.JsonReader": {
  "data": {
   "shadows": "ray.rllib.offline.json_reader.JsonReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.JsonWriter": {
  "data": {
   "shadows": "ray.rllib.offline.json_writer.JsonWriter"
  },
  "type": "import"
 },
 "ray.rllib.offline.MixedInput": {
  "data": {
   "shadows": "ray.rllib.offline.mixed_input.MixedInput"
  },
  "type": "import"
 },
 "ray.rllib.offline.NoopOutput": {
  "data": {
   "shadows": "ray.rllib.offline.output_writer.NoopOutput"
  },
  "type": "import"
 },
 "ray.rllib.offline.OutputWriter": {
  "data": {
   "shadows": "ray.rllib.offline.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "ray.rllib.offline.ShuffledInput": {
  "data": {
   "shadows": "ray.rllib.offline.shuffled_input.ShuffledInput"
  },
  "type": "import"
 },
 "ray.rllib.offline.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.offline.input_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.offline.input_reader.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.offline.input_reader.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.InputReader": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.input_reader.InputReader.next": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.input_reader.InputReader.tf_input_ops": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "numpy.issubdtype",
    "numpy.number",
    "ray.rllib.offline.input_reader._QueueRunner",
    "ray.rllib.offline.input_reader.logger",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TensorType",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.input_reader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader._QueueRunner": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.offline.input_reader.threading"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.input_reader._QueueRunner.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.offline.input_reader.threading",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.input_reader._QueueRunner.enqueue": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.input_reader._QueueRunner.run": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.offline.input_reader.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.input_reader.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.offline.input_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.offline.input_reader.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.offline.io_context": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.io_context.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.offline.io_context.IOContext": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.io_context.IOContext.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.rllib.offline.io_context.os",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.io_context.IOContext.default_sampler_input": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.io_context.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.io_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.offline.is_estimator": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.is_estimator.ImportanceSamplingEstimator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.is_estimator.ImportanceSamplingEstimator.estimate": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "max",
    "range",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.is_estimator.OffPolicyEstimate": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate"
  },
  "type": "import"
 },
 "ray.rllib.offline.is_estimator.OffPolicyEstimator": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator"
  },
  "type": "import"
 },
 "ray.rllib.offline.is_estimator.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.is_estimator.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "chr",
    "ord",
    "range",
    "ray.rllib.offline.json_reader.logging",
    "smart_open.smart_open"
   ]
  },
  "type": "module"
 },
 "ray.rllib.offline.json_reader.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.FileType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.FileType"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.io_context.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.input_reader.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.JsonReader": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.json_reader.JsonReader.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "ray.rllib.offline.io_context.IOContext",
    "ray.rllib.offline.json_reader.WINDOWS_DRIVES",
    "ray.rllib.offline.json_reader.glob",
    "ray.rllib.offline.json_reader.logger",
    "ray.rllib.offline.json_reader.os",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "type",
    "typing.List",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.JsonReader._next_file": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "ray.rllib.offline.json_reader.WINDOWS_DRIVES",
    "ray.rllib.offline.json_reader.random",
    "ray.rllib.utils.typing.FileType",
    "smart_open.smart_open",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.JsonReader._next_line": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "ray.rllib.offline.json_reader.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.JsonReader._postprocess_if_needed": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID.postprocess_trajectory",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.concat_samples",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.JsonReader._try_parse": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.offline.json_reader._from_json",
    "ray.rllib.offline.json_reader.logger",
    "ray.rllib.utils.typing.SampleBatchType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.JsonReader.next": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.offline.json_reader.logger",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.WINDOWS_DRIVES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_reader._from_json": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "ray.rllib.offline.json_reader.json",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.compression.unpack_if_needed",
    "ray.rllib.utils.typing.SampleBatchType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_reader.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.smart_open": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_reader.unpack_if_needed": {
  "data": {
   "shadows": "ray.rllib.utils.compression.unpack_if_needed"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_reader.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "chr",
    "ord",
    "range",
    "ray.rllib.offline.json_writer.logging",
    "smart_open.smart_open"
   ]
  },
  "type": "module"
 },
 "ray.rllib.offline.json_writer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.FileType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.FileType"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.io_context.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.JsonWriter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.offline.output_writer.OutputWriter",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.json_writer.JsonWriter.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "OSError",
    "frozenset",
    "int",
    "ray.rllib.offline.io_context.IOContext",
    "ray.rllib.offline.json_writer.WINDOWS_DRIVES",
    "ray.rllib.offline.json_writer.os",
    "ray.rllib.utils.annotations.PublicAPI",
    "six.moves.urllib.parse.urlparse",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_writer.JsonWriter._get_file": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.today",
    "open",
    "ray.rllib.offline.json_writer.logger",
    "ray.rllib.offline.json_writer.os",
    "ray.rllib.utils.typing.FileType",
    "smart_open.smart_open"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_writer.JsonWriter.write": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "ray.rllib.offline.json_writer._to_json",
    "ray.rllib.offline.json_writer.logger",
    "ray.rllib.offline.json_writer.time",
    "ray.rllib.offline.output_writer.OutputWriter",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_writer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.OutputWriter": {
  "data": {
   "shadows": "ray.rllib.offline.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.WINDOWS_DRIVES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_writer._to_json": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.offline.json_writer._to_jsonable",
    "ray.rllib.offline.json_writer.json",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.typing.SampleBatchType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_writer._to_jsonable": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.ndarray",
    "ray.rllib.utils.compression.compression_supported",
    "ray.rllib.utils.compression.pack",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.json_writer.compression_supported": {
  "data": {
   "shadows": "ray.rllib.utils.compression.compression_supported"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_writer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.pack": {
  "data": {
   "shadows": "ray.rllib.utils.compression.pack"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.smart_open": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.offline.json_writer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.offline.json_writer.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.mixed_input.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.io_context.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.input_reader.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.JsonReader": {
  "data": {
   "shadows": "ray.rllib.offline.json_reader.JsonReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.MixedInput": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.mixed_input.MixedInput.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "ray.rllib.offline.io_context.IOContext",
    "ray.rllib.offline.json_reader.JsonReader",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "sum",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.mixed_input.MixedInput.next": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.random.choice",
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.mixed_input.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.offline.mixed_input.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ray.rllib.offline.off_policy_estimator.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.offline.off_policy_estimator.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.io_context.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "ray.rllib.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.action_prob": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.ndarray",
    "range",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.numpy.convert_to_numpy",
    "ray.rllib.utils.typing.SampleBatchType",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.check_can_estimate_for": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.create": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls",
    "len",
    "list",
    "ray.rllib.offline.io_context.IOContext"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.estimate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.get_metrics": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator.process": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.off_policy_estimator.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.convert_to_numpy": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.convert_to_numpy"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.rllib.offline.off_policy_estimator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.rllib.offline.off_policy_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.offline.output_writer": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.output_writer.NoopOutput": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.offline.output_writer.OutputWriter"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.output_writer.NoopOutput.write": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.offline.output_writer.OutputWriter",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.output_writer.OutputWriter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.output_writer.OutputWriter.write": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.output_writer.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.output_writer.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.output_writer.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.offline.shuffled_input.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.offline.shuffled_input.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input.InputReader": {
  "data": {
   "shadows": "ray.rllib.offline.input_reader.InputReader"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input.ShuffledInput": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.shuffled_input.ShuffledInput.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.shuffled_input.ShuffledInput.next": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "ray.rllib.offline.input_reader.InputReader",
    "ray.rllib.offline.shuffled_input.logger",
    "ray.rllib.offline.shuffled_input.random",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.shuffled_input.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.offline.shuffled_input.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.offline.shuffled_input.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.offline.wis_estimator": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.offline.wis_estimator.OffPolicyEstimate": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate"
  },
  "type": "import"
 },
 "ray.rllib.offline.wis_estimator.OffPolicyEstimator": {
  "data": {
   "shadows": "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator"
  },
  "type": "import"
 },
 "ray.rllib.offline.wis_estimator.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.offline.wis_estimator.SampleBatchType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.SampleBatchType"
  },
  "type": "import"
 },
 "ray.rllib.offline.wis_estimator.WeightedImportanceSamplingEstimator": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator"
   ]
  },
  "type": "class"
 },
 "ray.rllib.offline.wis_estimator.WeightedImportanceSamplingEstimator.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "ray.rllib.policy.Policy",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.wis_estimator.WeightedImportanceSamplingEstimator.estimate": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "range",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimate",
    "ray.rllib.offline.off_policy_estimator.OffPolicyEstimator",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.SampleBatchType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.offline.wis_estimator.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.policy.build_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy_template.build_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.build_torch_policy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy_template.build_torch_policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.policy.dynamic_tf_policy.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.dynamic_tf_policy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "action_distribution_fn",
    "action_sampler_fn",
    "before_loss_init",
    "bool",
    "dist_class",
    "get_batch_divisibility_req",
    "int",
    "list",
    "make_model",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_action_placeholder",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.dynamic_tf_policy.gym",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str",
    "super",
    "type",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy._do_loss_init": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy._initialize_loss_dynamically": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "enumerate",
    "fake_array",
    "numpy.array",
    "numpy.bool",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.object",
    "ray.rllib.models.catalog.ModelCatalog.get_action_placeholder",
    "ray.rllib.policy.dynamic_tf_policy.logger",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.tf_policy.TFPolicy._initialize_loss",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.tracking_dict.UsageTrackingDict",
    "ray.util.debug.log_once",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy._initialize_loss_dynamically.fake_array": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy.copy": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "len",
    "range",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.policy.tf_policy.TFPolicy._initialize_loss",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy.get_initial_state": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.dynamic_tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.UsageTrackingDict": {
  "data": {
   "shadows": "ray.rllib.utils.tracking_dict.UsageTrackingDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.policy.dynamic_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.policy.dynamic_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.policy.eager_tf_policy.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.eager_tf_policy.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy._convert_to_numpy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy._convert_to_numpy._map": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy._convert_to_tf": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.INFOS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy._disallow_var_creation": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "next_creator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.add_mixins": {
  "data": {
   "shadows": "ray.rllib.utils.add_mixins"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.add_mixins"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "action_distribution_fn",
    "after_init",
    "before_init",
    "before_loss_init",
    "dict",
    "get_default_config",
    "make_model",
    "numpy.array",
    "optimizer_fn",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.policy.policy.Policy.__init__",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray",
    "validate_spaces"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._apply_gradients": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "apply_gradients_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._compute_gradients": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "OptimizerWrapper",
    "gradients_fn",
    "len",
    "list",
    "loss_fn",
    "range",
    "ray.rllib.policy.eager_tf_policy.logger",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS.shape",
    "ray.util.debug.log_once",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._compute_gradients.OptimizerWrapper": {
  "data": {
   "lineno": 571
  },
  "type": "class"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._compute_gradients.OptimizerWrapper.__init__": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._compute_gradients.OptimizerWrapper.compute_gradients": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._get_is_training_placeholder": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._initialize_loss_with_dummy_batch": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "enumerate",
    "get_batch_divisibility_req",
    "gym.spaces.Dict",
    "gym.spaces.Tuple",
    "isinstance",
    "loss_fn",
    "numpy.array",
    "numpy.bool",
    "numpy.float32",
    "numpy.int32",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray",
    "stats_fn",
    "tile_to"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._initialize_loss_with_dummy_batch.tile_to": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls._stats": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "extra_learn_fetches_fn",
    "grad_stats_fn",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "stats_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.apply_gradients": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.compute_actions": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "action_distribution_fn",
    "dist_class",
    "extra_action_fetches_fn",
    "len",
    "ray.rllib.policy.eager_tf_policy._disallow_var_creation",
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_PROB",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS.shape",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.compute_gradients": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy._disallow_var_creation",
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.compute_log_likelihoods": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "action_distribution_fn",
    "dist_class",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.export_checkpoint": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.export_model": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_exploration_info": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy._convert_to_numpy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_initial_state": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_placeholder": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_session": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_state": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.get_weights": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.is_recurrent": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.learn_on_batch": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy._disallow_var_creation",
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.loss_initialized": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.num_state_tensors": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.postprocess_trajectory": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "postprocess_fn",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.policy.Policy.postprocess_trajectory",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.set_state": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy.logger",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.set_weights": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.variables": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy.eager_policy_cls.with_tracing": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.policy.eager_tf_policy.traced_eager_policy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.convert_eager_inputs": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.convert_eager_inputs._func": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "func",
    "ray.rllib.policy.eager_tf_policy._convert_to_tf",
    "ray.rllib.policy.eager_tf_policy.functools"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.convert_eager_outputs": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.convert_eager_outputs._func": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "func",
    "ray.rllib.policy.eager_tf_policy._convert_to_numpy",
    "ray.rllib.policy.eager_tf_policy.functools"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.flatten_to_single_ndarray": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.policy.eager_tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy.apply_gradients": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy.compute_actions": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy._convert_to_tf",
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy.compute_gradients": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.traced_eager_policy.TracedEagerPolicy.learn_on_batch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy.convert_eager_inputs",
    "ray.rllib.policy.eager_tf_policy.convert_eager_outputs",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.eager_tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.policy.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.LEARNER_STATS_KEY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.policy.policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.ModelWeights": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelWeights"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Policy": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.policy.Policy.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.gym",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.DONES",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space",
    "ray.rllib.utils.typing.TrainerConfigDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy._create_exploration": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "getattr",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.from_config.from_config"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.apply_gradients": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelGradients"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.compute_actions": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "bool",
    "int",
    "list",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Tuple",
    "ray.rllib.utils.typing.Union",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.compute_actions_from_input_dict": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "numpy.expand_dims",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Tuple",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.compute_gradients": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Tuple",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.compute_log_likelihoods": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Union",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.compute_single_action": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "isinstance",
    "len",
    "numpy.expand_dims",
    "ray.rllib.policy.policy.clip_action",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.spaces.space_utils.unbatch",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Tuple",
    "str",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.export_checkpoint": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.export_model": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.get_exploration_info": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.get_initial_state": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.get_state": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.Union",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.get_weights": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelWeights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.import_model_from_h5": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.is_recurrent": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "bool",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.learn_on_batch": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.num_state_tensors": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.on_global_var_update": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.postprocess_trajectory": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.Tuple",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.set_state": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "object",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.Policy.set_weights": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.ModelWeights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Tuple": {
  "data": {
   "shadows": "ray.rllib.utils.typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.Union": {
  "data": {
   "shadows": "ray.rllib.utils.typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.clip_action": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.clip_action.map_": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "isinstance",
    "numpy.clip",
    "ray.rllib.policy.policy.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.policy.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.policy.policy.unbatch": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.unbatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.policy.rnn_sequencing.logging",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.rnn_sequencing.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.add_time_dimension": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.rnn_sequencing.chop_into_sequences": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.add",
    "numpy.array",
    "numpy.int64",
    "numpy.object",
    "numpy.random.permutation",
    "numpy.reshape",
    "numpy.shape",
    "numpy.str_",
    "numpy.zeros",
    "range",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.rnn_sequencing.log_once": {
  "data": {
   "shadows": "ray.util.log_once"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.policy.rnn_sequencing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.pad_batch_to_sequences_of_same_size": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "int",
    "len",
    "max",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences",
    "ray.rllib.policy.rnn_sequencing.logger",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.AGENT_INDEX",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.EPS_ID",
    "ray.rllib.policy.sample_batch.SampleBatch.UNROLL_ID",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.debug.summarize",
    "ray.util.log_once",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.rnn_sequencing.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.policy.rnn_sequencing.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch": {
  "data": {
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.sample_batch.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.policy.sample_batch.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "ray.rllib.policy.sample_batch.PolicyID",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.__repr__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.__str__": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.agent_steps": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.compress": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.concat_samples": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.collections",
    "ray.rllib.utils.annotations.PublicAPI",
    "staticmethod",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.copy": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.decompress_if_needed": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "frozenset",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.env_steps": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.size_bytes": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.PublicAPI",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.timeslices": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "finish_slice",
    "int",
    "len",
    "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.collections",
    "ray.rllib.policy.sample_batch.itertools",
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.timeslices.finish_slice": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.MultiAgentBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.MultiAgentBatch.wrap_as_needed": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.PolicyID",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI",
    "staticmethod",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.PolicyID": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.policy.sample_batch.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.SampleBatch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__contains__": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__getitem__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TensorType",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "ray.rllib.utils.annotations.PublicAPI",
    "set",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__iter__": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__repr__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__setitem__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.__str__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.columns": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "any",
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.compress": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "numpy.array",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.pack",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.concat": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.memory.concat_aligned"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.concat_samples": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.memory.concat_aligned",
    "staticmethod",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.copy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.decompress_if_needed": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "frozenset",
    "len",
    "numpy.array",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.is_compressed",
    "ray.rllib.utils.compression.unpack",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.get": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.items": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.keys": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.rows": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "range",
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.shuffle": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.size_bytes": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "int",
    "ray.rllib.policy.sample_batch.sys",
    "ray.rllib.utils.annotations.PublicAPI",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.slice": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "int",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.split_by_episode": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.utils.annotations.PublicAPI",
    "set",
    "sum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatch.timeslices": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.PublicAPI",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.sample_batch.SampleBatchBuilder": {
  "data": {
   "shadows": "ray.rllib.evaluation.sample_batch_builder.SampleBatchBuilder"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.concat_aligned": {
  "data": {
   "shadows": "ray.rllib.utils.memory.concat_aligned"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.is_compressed": {
  "data": {
   "shadows": "ray.rllib.utils.compression.is_compressed"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.pack": {
  "data": {
   "shadows": "ray.rllib.utils.compression.pack"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.policy.sample_batch.unpack": {
  "data": {
   "shadows": "ray.rllib.utils.compression.unpack"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.policy.tf_policy.logging",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.tf_policy.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.EntropyCoeffSchedule": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.tf_policy.EntropyCoeffSchedule.__init__": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.get_variable",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "ray.rllib.utils.schedules.PiecewiseSchedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.EntropyCoeffSchedule.on_global_var_update": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.EntropyCoeffSchedule",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.LearningRateSchedule": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.tf_policy.LearningRateSchedule.__init__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "ray.rllib.utils.schedules.PiecewiseSchedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.LearningRateSchedule.on_global_var_update": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.LearningRateSchedule",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.LearningRateSchedule.optimizer": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.TFPolicy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.tf_policy.gym",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str",
    "super",
    "type",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._build_apply_gradients": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._build_compute_actions": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.ones",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._build_compute_gradients": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._build_learn_on_batch": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._build_signature_def": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._debug_vars": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ray.rllib.policy.tf_policy.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._extra_input_signature_def": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._extra_output_signature_def": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._get_grad_and_stats_fetches": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._get_is_training_placeholder": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._get_loss_inputs_dict": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.policy.rnn_sequencing.pad_batch_to_sequences_of_same_size"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy._initialize_loss": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.policy.tf_policy.logger",
    "ray.rllib.policy.tf_policy.ray",
    "ray.rllib.utils.debug.summarize",
    "ray.rllib.utils.typing.TensorType",
    "ray.util.debug.log_once",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.apply_gradients": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.ModelGradients"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.build_apply_op": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.compute_actions": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "bool",
    "int",
    "list",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.compute_gradients": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.compute_log_likelihoods": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.copy": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.export_checkpoint": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "OSError",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.tf_policy.errno",
    "ray.rllib.policy.tf_policy.os",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.export_model": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.extra_compute_action_feed_dict": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.extra_compute_action_fetches": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_PROB",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.extra_compute_grad_feed_dict": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.extra_compute_grad_fetches": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "any",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.get_exploration_info": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.get_placeholder": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.get_session": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.get_state": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.get_weights": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.gradients": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.import_model_from_h5": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.is_recurrent": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "bool",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.learn_on_batch": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.tf_run_builder.TFRunBuilder",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.loss_initialized": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.num_state_tensors": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.optimizer": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.set_state": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.set_weights": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFPolicy.variables": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy.TFRunBuilder": {
  "data": {
   "shadows": "ray.rllib.utils.tf_run_builder.TFRunBuilder"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.policy.tf_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.pad_batch_to_sequences_of_same_size": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.pad_batch_to_sequences_of_same_size"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.ray.experimental.tf_utils": {
  "data": {
   "shadows": "ray.experimental.tf_utils"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.summarize": {
  "data": {
   "shadows": "ray.rllib.utils.debug.summarize"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.policy.tf_policy_template.AgentID": {
  "data": {
   "shadows": "ray.rllib.utils.typing.AgentID"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.DynamicTFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.TFActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.TFPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.tf_policy.TFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.add_mixins": {
  "data": {
   "shadows": "ray.rllib.utils.add_mixins"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "int",
    "locals",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.policy.tf_policy_template.gym",
    "ray.rllib.utils.add_mixins",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.ModelGradients",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "staticmethod",
    "str",
    "type",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.as_eager": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ray.rllib.policy.eager_tf_policy.build_eager_tf_policy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "after_init",
    "before_init",
    "dict",
    "get_default_config",
    "ray.rllib.policy.dynamic_tf_policy.DynamicTFPolicy.__init__",
    "validate_spaces"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.__init__.before_loss_init_wrapper": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "before_loss_init",
    "extra_action_fetches_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.build_apply_op": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "apply_gradients_fn",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.extra_compute_action_fetches": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.extra_compute_grad_fetches": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dict",
    "extra_learn_fetches_fn",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.gradients": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "gradients_fn",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.optimizer": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "optimizer_fn",
    "ray.rllib.policy.tf_policy.TFPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.policy_cls.postprocess_trajectory": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "postprocess_fn",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.policy.Policy.postprocess_trajectory",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.build_tf_policy.with_updates": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.policy.tf_policy_template.build_tf_policy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.tf_policy_template.eager_tf_policy": {
  "data": {
   "shadows": "ray.rllib.policy.eager_tf_policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.tf_policy_template.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.policy.torch_policy.logging",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.torch_policy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.EntropyCoeffSchedule": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.__init__": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "ray.rllib.utils.schedules.PiecewiseSchedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.EntropyCoeffSchedule.on_global_var_update": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.torch_policy.EntropyCoeffSchedule",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.LearningRateSchedule": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.torch_policy.LearningRateSchedule.__init__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "ray.rllib.utils.schedules.PiecewiseSchedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.LearningRateSchedule.on_global_var_update": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.torch_policy.LearningRateSchedule",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.LearningRateSchedule.optimizer": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.ModelGradients": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelGradients"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.ModelWeights": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelWeights"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "callable",
    "get_batch_divisibility_req",
    "int",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.torch_policy.gym",
    "ray.rllib.policy.torch_policy.logger",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.force_list",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "super",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy._compute_action_helper": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "dist_class",
    "isinstance",
    "issubclass",
    "len",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.torch_policy.functools"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy._lazy_tensor_dict": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ray.rllib.policy.torch_policy.functools",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor",
    "ray.rllib.utils.tracking_dict.UsageTrackingDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.apply_gradients": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.ModelGradients",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.compute_actions": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "list",
    "numpy.asarray",
    "numpy.exp",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_PROB",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.compute_actions_from_input_dict": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "numpy.array",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_LOGP",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_PROB",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.compute_gradients": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.force_list",
    "ray.rllib.utils.typing.ModelGradients"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.compute_log_likelihoods": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "dist_class",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.export_checkpoint": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.export_model": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.extra_action_out": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.extra_compute_grad_fetches": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "any",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.extra_grad_info": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.extra_grad_process": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.get_initial_state": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.get_state": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "enumerate",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.get_weights": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.typing.ModelWeights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.import_model_from_h5": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.is_recurrent": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "bool",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.learn_on_batch": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "hasattr",
    "len",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.rnn_sequencing.pad_batch_to_sequences_of_same_size",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.torch_policy.time",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.force_list",
    "ray.rllib.utils.typing.TensorType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.num_state_tensors": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.optimizer": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.set_state": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "len",
    "object",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TorchPolicy.set_weights": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_torch_tensor",
    "ray.rllib.utils.typing.ModelWeights"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.UsageTrackingDict": {
  "data": {
   "shadows": "ray.rllib.utils.tracking_dict.UsageTrackingDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.convert_to_non_torch_type": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_non_torch_type"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.convert_to_torch_tensor": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_torch_tensor"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.force_list": {
  "data": {
   "shadows": "ray.rllib.utils.force_list"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.rllib.policy.torch_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.pad_batch_to_sequences_of_same_size": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.pad_batch_to_sequences_of_same_size"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.torch_policy_template.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.policy.policy.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.TorchDistributionWrapper": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.TorchPolicy": {
  "data": {
   "shadows": "ray.rllib.policy.torch_policy.TorchPolicy"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.ViewRequirement": {
  "data": {
   "shadows": "ray.rllib.policy.view_requirement.ViewRequirement"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.add_mixins": {
  "data": {
   "shadows": "ray.rllib.utils.add_mixins"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "locals",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.models.torch.torch_action_dist.TorchDistributionWrapper",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy_template.gym",
    "ray.rllib.policy.view_requirement.ViewRequirement",
    "ray.rllib.utils.add_mixins",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "staticmethod",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls": {
  "data": {
   "lineno": 179
  },
  "type": "class"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "after_init",
    "before_init",
    "callable",
    "dict",
    "get_default_config",
    "isinstance",
    "make_model",
    "make_model_and_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_action_dist",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2",
    "ray.rllib.policy.torch_policy.TorchPolicy.__init__",
    "validate_spaces",
    "view_requirements_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.apply_gradients": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "apply_gradients_fn",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.apply_gradients",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.extra_action_out": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "extra_action_out_fn",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.extra_action_out",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.extra_compute_grad_fetches": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dict",
    "extra_learn_fetches_fn",
    "ray.rllib.policy.policy.LEARNER_STATS_KEY",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.extra_compute_grad_fetches",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.extra_grad_info": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.extra_grad_info",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "stats_fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.extra_grad_process": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "extra_grad_process_fn",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.extra_grad_process",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.optimizer": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "hasattr",
    "optimizer_fn",
    "ray.rllib.policy.torch_policy.TorchPolicy",
    "ray.rllib.policy.torch_policy.TorchPolicy.optimizer",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.force_list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.policy_cls.postprocess_trajectory": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "postprocess_fn",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.torch_ops.convert_to_non_torch_type",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.build_torch_policy.with_updates": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.policy.torch_policy_template.build_torch_policy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.torch_policy_template.convert_to_non_torch_type": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.convert_to_non_torch_type"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.force_list": {
  "data": {
   "shadows": "ray.rllib.utils.force_list"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.policy.torch_policy_template.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.policy.view_requirement": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.policy.view_requirement.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.policy.view_requirement.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.policy.view_requirement.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.policy.view_requirement.ViewRequirement": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "ray.rllib.policy.view_requirement.ViewRequirement.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "ray.rllib.policy.view_requirement.gym",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.policy.view_requirement.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.policy.view_requirement.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.register_trainable": {
  "data": {
   "shadows": "ray.tune.registry.register_trainable"
  },
  "type": "import"
 },
 "ray.rllib.rollout": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "ray.rllib.rollout.args",
    "ray.rllib.rollout.create_parser",
    "ray.rllib.rollout.parser",
    "ray.rllib.rollout.run",
    "ray.rllib.utils.deprecation.deprecation_warning"
   ]
  },
  "type": "module"
 },
 "ray.rllib.rollout.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.rollout.DefaultMapping": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ray.rllib.rollout.collections"
   ]
  },
  "type": "class"
 },
 "ray.rllib.rollout.DefaultMapping.__missing__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "ray.rllib.rollout.EXAMPLE_USAGE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.rollout.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.rollout.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.rollout.RolloutSaver": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "ray.rllib.rollout.RolloutSaver.__enter__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IOError",
    "open",
    "print",
    "ray.rllib.rollout.shelve"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.__exit__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "open",
    "ray.rllib.rollout.pickle"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver._get_progress": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver._get_tmp_progress_filename": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.append_step": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.begin_rollout": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.end_rollout": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.RolloutSaver.outfile": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.rollout._DUMMY_AGENT_ID": {
  "data": {
   "shadows": "ray.rllib.env.base_env._DUMMY_AGENT_ID"
  },
  "type": "import"
 },
 "ray.rllib.rollout.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.rollout.args": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "ray.rllib.rollout.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.rllib.rollout.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.rllib.rollout.create_parser": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "parser_creator",
    "ray.rllib.rollout.EXAMPLE_USAGE",
    "ray.rllib.rollout.argparse",
    "ray.rllib.rollout.json",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.default_policy_agent_mapping": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.deprecation_warning": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.deprecation_warning"
  },
  "type": "import"
 },
 "ray.rllib.rollout.flatten_to_single_ndarray": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray"
  },
  "type": "import"
 },
 "ray.rllib.rollout.get_trainable_cls": {
  "data": {
   "shadows": "ray.tune.registry.get_trainable_cls"
  },
  "type": "import"
 },
 "ray.rllib.rollout.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.rollout.gym_wrappers": {
  "data": {
   "shadows": "gym.wrappers"
  },
  "type": "import"
 },
 "ray.rllib.rollout.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.rllib.rollout.keep_going": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "ray.rllib.rollout.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.rollout.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.rollout.parser": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "ray.rllib.rollout.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.rollout.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.rollout.rollout": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "AttributeError",
    "gym.wrappers.Monitor",
    "hasattr",
    "isinstance",
    "len",
    "policy_agent_mapping",
    "print",
    "ray.rllib.env.MultiAgentEnv",
    "ray.rllib.env.base_env._DUMMY_AGENT_ID",
    "ray.rllib.evaluation.worker_set.WorkerSet",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.rollout.DefaultMapping",
    "ray.rllib.rollout.RolloutSaver",
    "ray.rllib.rollout.collections",
    "ray.rllib.rollout.default_policy_agent_mapping",
    "ray.rllib.rollout.gym",
    "ray.rllib.rollout.keep_going",
    "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.run": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "int",
    "min",
    "open",
    "ray.rllib.rollout.RolloutSaver",
    "ray.rllib.rollout.copy",
    "ray.rllib.rollout.os",
    "ray.rllib.rollout.pickle",
    "ray.rllib.rollout.ray",
    "ray.rllib.rollout.rollout",
    "ray.tune.registry.get_trainable_cls",
    "ray.tune.utils.merge_dicts"
   ]
  },
  "type": "function"
 },
 "ray.rllib.rollout.shelve": {
  "data": {
   "shadows": "shelve"
  },
  "type": "import"
 },
 "ray.rllib.scripts": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.scripts.EXAMPLE_USAGE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.scripts.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.scripts.cli": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.rllib.rollout.create_parser",
    "ray.rllib.rollout.run",
    "ray.rllib.scripts.EXAMPLE_USAGE",
    "ray.rllib.scripts.argparse",
    "ray.rllib.train.create_parser",
    "ray.rllib.train.run"
   ]
  },
  "type": "function"
 },
 "ray.rllib.scripts.rollout": {
  "data": {
   "shadows": "ray.rllib.rollout"
  },
  "type": "import"
 },
 "ray.rllib.scripts.train": {
  "data": {
   "shadows": "ray.rllib.train"
  },
  "type": "import"
 },
 "ray.rllib.tests": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.tests.conftest.ray_start_regular_shared": {
  "data": {
   "shadows": "ray.tests.conftest.ray_start_regular_shared"
  },
  "type": "import"
 },
 "ray.rllib.tests.mock_worker": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.tests.mock_worker.MeanStdFilter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.MeanStdFilter"
  },
  "type": "import"
 },
 "ray.rllib.tests.mock_worker.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.tests.mock_worker._MockWorker": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.rllib.tests.mock_worker._MockWorker.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.array",
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.apply_gradients": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.compute_gradients": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.get_filters": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.get_weights": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.sample": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.set_weights": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker._MockWorker.sync_filters": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.mock_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "len",
    "map",
    "open",
    "pathlib.Path",
    "print",
    "range",
    "ray.rllib._register_all",
    "ray.rllib.tests.run_regression_tests.abs_yaml_path",
    "ray.rllib.tests.run_regression_tests.argparse",
    "ray.rllib.tests.run_regression_tests.args",
    "ray.rllib.tests.run_regression_tests.experiments",
    "ray.rllib.tests.run_regression_tests.os",
    "ray.rllib.tests.run_regression_tests.parser",
    "ray.rllib.tests.run_regression_tests.passed",
    "ray.rllib.tests.run_regression_tests.ray",
    "ray.rllib.tests.run_regression_tests.rllib_dir",
    "ray.rllib.tests.run_regression_tests.sys",
    "ray.rllib.tests.run_regression_tests.trials",
    "ray.rllib.tests.run_regression_tests.yaml",
    "ray.rllib.tests.run_regression_tests.yaml_files",
    "ray.tune.run_experiments",
    "sorted",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.run_regression_tests.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests._register_all": {
  "data": {
   "shadows": "ray.rllib._register_all"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.abs_yaml_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.args": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.experiments": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.parser": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.passed": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.rllib_dir": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.run_experiments": {
  "data": {
   "shadows": "ray.tune.run_experiments"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.trials": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "ray.rllib.tests.run_regression_tests.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.rllib.tests.run_regression_tests.yaml_files": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_attention_net_learning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_attention_net_learning.pytest",
    "ray.rllib.tests.test_attention_net_learning.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_attention_net_learning.GTrXLNet": {
  "data": {
   "shadows": "ray.rllib.models.tf.attention_net.GTrXLNet"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.StatelessCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.TestAttentionNetLearning": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.examples.env.stateless_cartpole.StatelessCartPole",
    "ray.rllib.tests.test_attention_net_learning.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_attention_net_learning.TestAttentionNetLearning.setUpClass": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_attention_net_learning.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_attention_net_learning.TestAttentionNetLearning.tearDownClass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_attention_net_learning.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_attention_net_learning.TestAttentionNetLearning.test_impala_attention_net_learning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.models.catalog.ModelCatalog.register_custom_model",
    "ray.rllib.models.tf.attention_net.GTrXLNet",
    "ray.tune.run"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_attention_net_learning.TestAttentionNetLearning.test_ppo_attention_net_learning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "ray.rllib.models.catalog.ModelCatalog.register_custom_model",
    "ray.rllib.models.tf.attention_net.GTrXLNet",
    "ray.tune.run"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_attention_net_learning.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_attention_net_learning.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_catalog.pytest",
    "ray.rllib.tests.test_catalog.sys",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_catalog.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.CustomActionDistribution": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.CustomActionDistribution.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomActionDistribution._build_sample_op": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_action_dist.TFActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomActionDistribution.logp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.rllib.models.ActionDistribution",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomActionDistribution.required_model_output_shape": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.CustomModel._build_layers": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomPreprocessor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.models.preprocessors.Preprocessor"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.CustomPreprocessor._init_shape": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.CustomPreprocessor2": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.models.preprocessors.Preprocessor"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.CustomPreprocessor2._init_shape": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.MODEL_DEFAULTS": {
  "data": {
   "shadows": "ray.rllib.models.MODEL_DEFAULTS"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.NoPreprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.NoPreprocessor"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.OneHotPreprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.OneHotPreprocessor"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.Preprocessor": {
  "data": {
   "shadows": "ray.rllib.models.preprocessors.Preprocessor"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.TFActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.TFActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ray.rllib.tests.test_catalog.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.rllib.tests.test_catalog.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_custom_action_distribution": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Model",
    "NotImplementedError",
    "dist_cls",
    "gym.spaces.Box",
    "numpy.float32",
    "ray.rllib.models.MODEL_DEFAULTS.copy",
    "ray.rllib.models.ModelCatalog.get_action_dist",
    "ray.rllib.models.ModelCatalog.register_custom_action_dist",
    "ray.rllib.tests.test_catalog.CustomActionDistribution",
    "ray.rllib.tests.test_catalog.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_custom_action_distribution.Model": {
  "data": {
   "lineno": 130
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_custom_model": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.float32",
    "ray.rllib.models.ModelCatalog.get_model_v2",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_catalog.CustomModel",
    "ray.rllib.tests.test_catalog.ray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_custom_preprocessor": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.rllib.models.ModelCatalog.get_preprocessor",
    "ray.rllib.models.ModelCatalog.register_custom_preprocessor",
    "ray.rllib.models.preprocessors.NoPreprocessor",
    "ray.rllib.tests.test_catalog.CustomPreprocessor",
    "ray.rllib.tests.test_catalog.CustomPreprocessor2",
    "ray.rllib.tests.test_catalog.gym",
    "ray.rllib.tests.test_catalog.ray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_default_models": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "numpy.float32",
    "ray.rllib.models.ModelCatalog.get_model_v2",
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.tf.visionnet.VisionNetwork",
    "ray.rllib.tests.test_catalog.ray",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_gym_preprocessors": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.models.ModelCatalog.get_preprocessor",
    "ray.rllib.models.preprocessors.NoPreprocessor",
    "ray.rllib.models.preprocessors.OneHotPreprocessor",
    "ray.rllib.tests.test_catalog.gym",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_tuple_preprocessor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "TupleEnv",
    "float",
    "list",
    "numpy.array",
    "ray.rllib.models.ModelCatalog.get_preprocessor",
    "ray.rllib.tests.test_catalog.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_tuple_preprocessor.TupleEnv": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "ray.rllib.tests.test_catalog.TestModelCatalog.test_tuple_preprocessor.TupleEnv.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_catalog.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.VisionNetwork": {
  "data": {
   "shadows": "ray.rllib.models.tf.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_catalog.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_checkpoint_restore.pytest",
    "ray.rllib.tests.test_checkpoint_restore.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_checkpoint_restore.CONFIGS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.setUpClass": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_checkpoint_restore.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.tearDownClass": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_checkpoint_restore.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_a3c_checkpoint_restore": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_apex_ddpg_checkpoint_restore": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_ars_checkpoint_restore": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_ddpg_checkpoint_restore": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_dqn_checkpoint_restore": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_es_checkpoint_restore": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_ppo_checkpoint_restore": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.TestCheckpointRestore.test_sac_checkpoint_restore": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.check": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.ckpt_restore_test": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "cls",
    "enumerate",
    "list",
    "numpy.clip",
    "numpy.random.uniform",
    "print",
    "range",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.tests.test_checkpoint_restore.CONFIGS",
    "ray.rllib.tests.test_checkpoint_restore.get_mean_action",
    "ray.rllib.utils.test_utils.check",
    "ray.rllib.utils.test_utils.framework_iterator",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.get_mean_action": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_checkpoint_restore.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_checkpoint_restore.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.tests.test_dependency_tf.os",
    "ray.rllib.tests.test_dependency_tf.sys",
    "ray.rllib.tests.test_dependency_tf.trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_dependency_tf.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_tf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_tf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_tf.trainer": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_dependency_torch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.tests.test_dependency_torch.os",
    "ray.rllib.tests.test_dependency_torch.sys",
    "ray.rllib.tests.test_dependency_torch.trainer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_dependency_torch.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_torch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_torch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_dependency_torch.trainer": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_eager_support": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "print",
    "ray.rllib.tests.test_eager_support.class_",
    "ray.rllib.tests.test_eager_support.pytest",
    "ray.rllib.tests.test_eager_support.sys",
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.tearDown": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_apex_dqn": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_ddpg": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_dqn": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_sac": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_simple_q": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportOffPolicy.test_td3": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.tearDown": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_a2c": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_a3c": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_appo": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_ddpg": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_dqn": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_impala": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_pg": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_ppo": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_simple_q": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.TestEagerSupportPG.test_td3": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.rllib.tests.test_eager_support.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.check_support": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "print",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.tune.run"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_eager_support.class_": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_eager_support.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_eager_support.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess",
    "ray.rllib.tests.test_env_with_subprocess.leaked_processes",
    "ray.rllib.tests.test_env_with_subprocess.os",
    "ray.rllib.tests.test_env_with_subprocess.ray",
    "ray.rllib.tests.test_env_with_subprocess.tempfile",
    "ray.test_utils.wait_for_condition",
    "ray.tune.registry.register_env",
    "ray.tune.run_experiments"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_env_with_subprocess.EnvWithSubprocess": {
  "data": {
   "shadows": "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.leaked_processes": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.examples.env.env_with_subprocess.EnvWithSubprocess.UNIQUE_CMD",
    "ray.rllib.tests.test_env_with_subprocess.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_env_with_subprocess.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.run_experiments": {
  "data": {
   "shadows": "ray.tune.run_experiments"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_env_with_subprocess.wait_for_condition": {
  "data": {
   "shadows": "ray.test_utils.wait_for_condition"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_evaluators.pytest",
    "ray.rllib.tests.test_evaluators.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_evaluators.A3CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A3CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.EvalTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_evaluators.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_evaluators.EvalTest.setUpClass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_evaluators.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_evaluators.EvalTest.tearDownClass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_evaluators.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_evaluators.EvalTest.test_dqn_n_step": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.agents.dqn.dqn_tf_policy._adjust_nstep"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_evaluators.EvalTest.test_evaluation_option": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "agent_cls",
    "ray.rllib.agents.a3c.A3CTrainer",
    "ray.rllib.agents.dqn.DQNTrainer",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_evaluators.EvalTest.test_evaluation_option.env_creator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.rllib.tests.test_evaluators.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_evaluators._adjust_nstep": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.dqn_tf_policy._adjust_nstep"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_evaluators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_exec_api.pytest",
    "ray.rllib.tests.test_exec_api.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_exec_api.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api.TestDistributedExecution": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.tests.test_exec_api.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_exec_api.TestDistributedExecution.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_exec_api.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_exec_api.TestDistributedExecution.tearDownClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_exec_api.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_exec_api.TestDistributedExecution.test_exec_plan_save_restore": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_exec_api.TestDistributedExecution.test_exec_plan_stats": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_exec_api.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_exec_api.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_execution.pytest",
    "ray.rllib.tests.test_execution.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_execution.AsyncGradients": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.AsyncGradients"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.AverageGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.AverageGradients"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.ComputeGradients": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.ComputeGradients"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.ConcatBatches": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ConcatBatches"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.Concurrently": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Concurrently"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.Dequeue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Dequeue"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.Enqueue": {
  "data": {
   "shadows": "ray.rllib.execution.concurrency_ops.Enqueue"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.LocalIterator": {
  "data": {
   "shadows": "ray.util.iter.LocalIterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.LocalReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.LocalReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.PPOTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.ParallelRollouts": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.ParallelRollouts"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.Replay": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.Replay"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.ReplayActor": {
  "data": {
   "shadows": "ray.rllib.execution.replay_buffer.ReplayActor"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.SharedMetrics": {
  "data": {
   "shadows": "ray.util.iter_metrics.SharedMetrics"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.StandardMetricsReporting": {
  "data": {
   "shadows": "ray.rllib.execution.metric_ops.StandardMetricsReporting"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.StandardizeFields": {
  "data": {
   "shadows": "ray.rllib.execution.rollout_ops.StandardizeFields"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.StoreToReplayBuffer": {
  "data": {
   "shadows": "ray.rllib.execution.replay_ops.StoreToReplayBuffer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.TrainOneStep": {
  "data": {
   "shadows": "ray.rllib.execution.train_ops.TrainOneStep"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.WorkerSet": {
  "data": {
   "shadows": "ray.rllib.evaluation.worker_set.WorkerSet"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.from_range": {
  "data": {
   "shadows": "ray.util.iter.from_range"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.iter_list": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.util.iter.LocalIterator",
    "ray.util.iter_metrics.SharedMetrics"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.make_workers": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.ppo.ppo_tf_policy.PPOTFPolicy",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker.as_remote",
    "ray.rllib.evaluation.worker_set.WorkerSet._from_existing",
    "ray.rllib.tests.test_execution.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_execution.test_async_grads": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "next",
    "ray.rllib.execution.rollout_ops.AsyncGradients",
    "ray.rllib.tests.test_execution.make_workers",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_avg_gradients": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.AverageGradients",
    "ray.rllib.execution.train_ops.ComputeGradients",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_compute_gradients": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.ComputeGradients",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_concat_batches": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.rollout_ops.ConcatBatches",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_concurrently": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.tests.test_execution.iter_list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_concurrently_output": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.tests.test_execution.iter_list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_concurrently_weighted": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Concurrently",
    "ray.rllib.tests.test_execution.iter_list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_enqueue_dequeue": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ray.rllib.execution.concurrency_ops.Dequeue",
    "ray.rllib.execution.concurrency_ops.Enqueue",
    "ray.rllib.tests.test_execution.iter_list",
    "ray.rllib.tests.test_execution.queue"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_metrics": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.metric_ops.StandardMetricsReporting",
    "ray.rllib.tests.test_execution.make_workers",
    "ray.rllib.tests.test_execution.time",
    "ray.util.iter.from_range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_rollouts": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_rollouts_local": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_standardize": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abs",
    "next",
    "numpy.mean",
    "numpy.std",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.rollout_ops.StandardizeFields",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_store_to_replay_actor": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.replay_buffer.ReplayActor.remote",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.tests.test_execution.make_workers",
    "ray.rllib.tests.test_execution.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_store_to_replay_local": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "next",
    "ray.rllib.execution.replay_buffer.LocalReplayBuffer",
    "ray.rllib.execution.replay_ops.Replay",
    "ray.rllib.execution.replay_ops.StoreToReplayBuffer",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.test_train_one_step": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "next",
    "ray.rllib.execution.rollout_ops.ParallelRollouts",
    "ray.rllib.execution.train_ops.TrainOneStep",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.tests.test_execution.make_workers"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_execution.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_export.pytest",
    "ray.rllib.tests.test_export.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_export.CONFIGS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_export.ExportFormat": {
  "data": {
   "shadows": "ray.tune.trial.ExportFormat"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.TestExport": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray.rllib.tests.test_export.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_export.TestExport.setUpClass": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_export.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.TestExport.tearDownClass": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_export.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.TestExport.test_export": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "print",
    "ray.rllib.tests.test_export.export_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.export_test": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cls",
    "print",
    "range",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.tests.test_export.CONFIGS",
    "ray.rllib.tests.test_export.os",
    "ray.rllib.tests.test_export.ray",
    "ray.rllib.tests.test_export.shutil",
    "ray.tune.trial.ExportFormat.CHECKPOINT",
    "ray.tune.trial.ExportFormat.MODEL",
    "str",
    "valid_tf_checkpoint",
    "valid_tf_model"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.export_test.valid_tf_checkpoint": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.rllib.tests.test_export.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.export_test.valid_tf_model": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.tests.test_export.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_export.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_export.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.external_env.ExternalEnv",
    "ray.rllib.tests.test_external_env.make_simple_serving",
    "ray.rllib.tests.test_external_env.pytest",
    "ray.rllib.tests.test_external_env.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_external_env.BadPolicy": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.BadPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.ExternalEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_env.ExternalEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.MockEnv": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.MockPolicy": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.MultiServing": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_env.MultiServing.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "env_creator",
    "ray.rllib.env.external_env.ExternalEnv.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.MultiServing.run": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.random.choice",
    "range",
    "ray.rllib.tests.test_external_env.uuid",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.PartOffPolicyServing": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_env.PartOffPolicyServing.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.PartOffPolicyServing.run": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.tests.test_external_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.SimpleOffPolicyServing": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_env.SimpleOffPolicyServing.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.env.external_env.ExternalEnv.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.SimpleOffPolicyServing.run": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.SimpleServing": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.tests.test_external_env.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.setUpClass": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_external_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.tearDownClass": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_external_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_external_env_bad_actions": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_rollout_worker.BadPolicy",
    "ray.rllib.tests.test_rollout_worker.MockEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_external_env_complete_episodes": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_external_env_horizon_not_supported": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_external_env_off_policy": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_external_env.SimpleOffPolicyServing",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_external_env_truncate_episodes": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_train_cartpole": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "Exception",
    "print",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_external_env.gym",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_train_cartpole_multi": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Exception",
    "print",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_external_env.MultiServing",
    "ray.rllib.tests.test_external_env.gym",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.TestExternalEnv.test_train_cartpole_off_policy": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Exception",
    "print",
    "range",
    "ray.rllib.agents.dqn.DQNTrainer",
    "ray.rllib.tests.test_external_env.PartOffPolicyServing",
    "ray.rllib.tests.test_external_env.gym",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.make_simple_serving": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.make_simple_serving.SimpleServing": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_env.make_simple_serving.SimpleServing.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.make_simple_serving.SimpleServing.run": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_env.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv",
    "ray.rllib.tests.test_external_env.make_simple_serving",
    "ray.rllib.tests.test_external_multi_agent_env.pytest",
    "ray.rllib.tests.test_external_multi_agent_env.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_external_multi_agent_env.BasicMultiAgent": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.BasicMultiAgent"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.ExternalMultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.external_multi_agent_env.ExternalMultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.MockPolicy": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.SimpleMultiServing": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.tests.test_external_multi_agent_env.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv.setUpClass": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_external_multi_agent_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv.tearDownClass": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_external_multi_agent_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv.test_external_multi_agent_env_complete_episodes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_external_multi_agent_env.SimpleMultiServing",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv.test_external_multi_agent_env_sample": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_external_multi_agent_env.SimpleMultiServing",
    "ray.rllib.tests.test_external_multi_agent_env.gym",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_multi_agent_env.TestExternalMultiAgentEnv.test_external_multi_agent_env_truncate_episodes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_external_multi_agent_env.SimpleMultiServing",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_external_multi_agent_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.make_simple_serving": {
  "data": {
   "shadows": "ray.rllib.tests.test_external_env.make_simple_serving"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_external_multi_agent_env.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_filters.pytest",
    "ray.rllib.tests.test_filters.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_filters.FilterManager": {
  "data": {
   "shadows": "ray.rllib.utils.FilterManager"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.FilterManagerTest": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.rllib.tests.test_filters.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_filters.FilterManagerTest.setUp": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.rllib.tests.test_filters.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters.FilterManagerTest.tearDown": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ray.rllib.tests.test_filters.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters.FilterManagerTest.test_synchronize": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "filt1",
    "filt1.buffer.n",
    "filt1.clear_buffer",
    "filt1.copy",
    "filt1.rs.n",
    "range",
    "ray.rllib.tests.mock_worker._MockWorker",
    "ray.rllib.tests.test_filters.ray",
    "ray.rllib.utils.FilterManager.synchronize",
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters.MSFTest": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.rllib.tests.test_filters.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_filters.MSFTest.testBasic": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "filt",
    "filt.apply_changes",
    "filt.buffer.n",
    "filt.clear_buffer",
    "filt.rs.n",
    "numpy.ones",
    "range",
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters.MeanStdFilter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.MeanStdFilter"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.RunningStat": {
  "data": {
   "shadows": "ray.rllib.utils.filter.RunningStat"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.RunningStatTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.tests.test_filters.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_filters.RunningStatTest.testCombiningStat": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.randn",
    "range",
    "ray.rllib.utils.filter.RunningStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters.RunningStatTest.testRunningStat": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.square",
    "numpy.var",
    "range",
    "ray.rllib.utils.filter.RunningStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_filters._MockWorker": {
  "data": {
   "shadows": "ray.rllib.tests.mock_worker._MockWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_filters.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_ignore_worker_failure.pytest",
    "ray.rllib.tests.test_ignore_worker_failure.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.tests.test_ignore_worker_failure.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_ignore_worker_failure.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv.reset": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv.step": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.rllib.tests.test_ignore_worker_failure.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure._do_test_fault_fatal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "agent_cls",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure._do_test_fault_recover": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "agent_cls",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.tests.test_ignore_worker_failure.FaultInjectEnv",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.do_test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fn",
    "ray.rllib._register_all",
    "ray.rllib.tests.test_ignore_worker_failure.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_async_grads": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_async_replay": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_async_samples": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_async_sampling_option": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_fatal": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_multi_g_p_u": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_sync_replay": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure.IgnoresWorkerFailure.test_sync_samples": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "ray.rllib.tests.test_ignore_worker_failure._register_all": {
  "data": {
   "shadows": "ray.rllib._register_all"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_ignore_worker_failure.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.tests.test_io.pytest",
    "ray.rllib.tests.test_io.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_io.AgentIOTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_io.AgentIOTest.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.tearDown": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.shutil"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentInputDict": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.isnan",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentInputDir": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.isnan",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentInputEvalSim": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.isnan",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_io.time",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentInputList": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.isnan",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_io.glob",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentInputPostprocessingEnabled": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.isnan",
    "open",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_io.glob",
    "ray.rllib.tests.test_io.json",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentOutputLogdir": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "ray.rllib.tests.test_io.glob",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testAgentOutputOk": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.tests.test_io.os",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testMultiAgent": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "gen_policy",
    "len",
    "numpy.isnan",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.tests.test_io.gym",
    "ray.rllib.tests.test_io.os",
    "ray.rllib.tests.test_io.random",
    "ray.rllib.tests.test_io.time",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testMultiAgent.gen_policy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.testSplitByEpisode": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "ray.rllib.tests.test_io.SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.AgentIOTest.writeOutputs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.PGTrainer"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.IOContext": {
  "data": {
   "shadows": "ray.rllib.offline.IOContext"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.JsonIOTest": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_io.JsonIOTest.setUp": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.ray",
    "ray.rllib.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.tearDown": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.rllib.tests.test_io.ray",
    "ray.rllib.tests.test_io.shutil"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_abort_on_all_empty_inputs": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "range",
    "ray.rllib.offline.JsonReader"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_read_write": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.offline.IOContext",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.offline.JsonWriter",
    "ray.rllib.tests.test_io.make_sample_batch",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_skips_over_corrupted_lines": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len",
    "open",
    "range",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.offline.json_writer._to_json",
    "ray.rllib.tests.test_io.make_sample_batch",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_skips_over_empty_lines_and_files": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "len",
    "open",
    "range",
    "ray.rllib.offline.JsonReader",
    "ray.rllib.offline.json_writer._to_json",
    "ray.rllib.tests.test_io.make_sample_batch",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_write_file_uri": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "ray.rllib.offline.IOContext",
    "ray.rllib.offline.JsonWriter",
    "ray.rllib.tests.test_io.SAMPLES",
    "ray.rllib.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_write_paginate": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.offline.IOContext",
    "ray.rllib.offline.JsonWriter",
    "ray.rllib.tests.test_io.SAMPLES",
    "ray.rllib.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonIOTest.test_write_simple": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "ray.rllib.offline.IOContext",
    "ray.rllib.offline.JsonWriter",
    "ray.rllib.tests.test_io.SAMPLES",
    "ray.rllib.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.JsonReader": {
  "data": {
   "shadows": "ray.rllib.offline.JsonReader"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.JsonWriter": {
  "data": {
   "shadows": "ray.rllib.offline.JsonWriter"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.SAMPLES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_io.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io._to_json": {
  "data": {
   "shadows": "ray.rllib.offline.json_writer._to_json"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.make_sample_batch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "ray.rllib.policy.sample_batch.SampleBatch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_io.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_local.pytest",
    "ray.rllib.tests.test_local.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_local.DEFAULT_CONFIG": {
  "data": {
   "shadows": "ray.rllib.agents.pg.DEFAULT_CONFIG"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.LocalModeTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.tests.test_local.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_local.LocalModeTest.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.tests.test_local.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_local.LocalModeTest.tearDown": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_local.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_local.LocalModeTest.test_local": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "print",
    "ray.rllib.agents.pg.DEFAULT_CONFIG.copy",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_local.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_local.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_lstm.pytest",
    "ray.rllib.tests.test_lstm.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_lstm.DebugCounterEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.PPOTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.ppo.PPOTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.RNNSpyModel": {
  "data": {
   "shadows": "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.rllib.tests.test_lstm.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils.test_basic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.ones_like",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils.test_batch_id": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils.test_dynamic_max_len": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.ones_like",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils.test_multi_agent": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "numpy.ones_like",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestLSTMUtils.test_multi_dim": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.ones_like",
    "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestRNNSequencing": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.rllib.tests.test_lstm.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_lstm.TestRNNSequencing.setUp": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.rllib.tests.test_lstm.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestRNNSequencing.tearDown": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ray.rllib.tests.test_lstm.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestRNNSequencing.test_minibatch_sequencing": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.rllib.agents.ppo.PPOTrainer",
    "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv",
    "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_lstm.pickle",
    "ray.rllib.tests.test_lstm.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.TestRNNSequencing.test_simple_optimizer_sequencing": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "abs",
    "numpy.allclose",
    "numpy.sum",
    "ray.rllib.agents.ppo.PPOTrainer",
    "ray.rllib.examples.env.debug_counter_env.DebugCounterEnv",
    "ray.rllib.examples.models.rnn_spy_model.RNNSpyModel",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_lstm.pickle",
    "ray.rllib.tests.test_lstm.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_lstm.chop_into_sequences": {
  "data": {
   "shadows": "ray.rllib.policy.rnn_sequencing.chop_into_sequences"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_lstm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_model_imports.pytest",
    "ray.rllib.tests.test_model_imports.sys",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_model_imports.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.MyKerasModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_model_imports.MyKerasModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.models.tf.misc.normc_initializer",
    "ray.rllib.tests.test_model_imports.MyKerasModel",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyKerasModel.forward": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyKerasModel.import_from_h5": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyKerasModel.value_function": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyTorchModel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_model_imports.MyTorchModel.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyTorchModel.forward": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyTorchModel.import_from_h5": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.transpose",
    "ray.rllib.tests.test_model_imports.h5py"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.MyTorchModel.value_function": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.TestModelImport": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.rllib.tests.test_model_imports.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_model_imports.TestModelImport.setUp": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ray.rllib.models.catalog.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_model_imports.MyKerasModel",
    "ray.rllib.tests.test_model_imports.MyTorchModel",
    "ray.rllib.tests.test_model_imports.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.TestModelImport.tearDown": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.rllib.tests.test_model_imports.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.TestModelImport.test_ppo": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ray.rllib.tests.test_model_imports.model_import_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.check": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.model_import_test": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "agent_cls",
    "current_weight",
    "pathlib.Path",
    "range",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.utils.test_utils.check",
    "ray.rllib.utils.test_utils.framework_iterator",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.model_import_test.current_weight": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_model_imports.normc_initializer": {
  "data": {
   "shadows": "ray.rllib.models.tf.misc.normc_initializer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_model_imports.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_multi_agent_env.pytest",
    "ray.rllib.tests.test_multi_agent_env.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_multi_agent_env.BasicMultiAgent": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.BasicMultiAgent"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.EarlyDoneMultiAgent": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.MockPolicy": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.RandomPolicy": {
  "data": {
   "shadows": "ray.rllib.examples.policy.random_policy.RandomPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.RoundRobinMultiAgent": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_env.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.tearDown": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_basic_mock": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "range",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_custom_rnn_state_values": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_multi_agent_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_custom_rnn_state_values.StatefulPolicy": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ray.rllib.examples.policy.random_policy.RandomPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_custom_rnn_state_values.StatefulPolicy.compute_actions": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_custom_rnn_state_values.StatefulPolicy.get_initial_state": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_multi_agent_sample": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "list",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_multi_agent_sample_async_remote": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_multi_agent_env.ray",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_multi_agent_sample_round_robin": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_multi_agent_env.one_hot",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_multi_agent_sample_sync_remote": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_multi_agent_env.ray",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_multi_agent_sample_with_horizon": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_no_reset_until_poll": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_returning_model_based_rollouts_data": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.tests.test_multi_agent_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_returning_model_based_rollouts_data.ModelBasedPolicy": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_returning_model_based_rollouts_data.ModelBasedPolicy.compute_actions": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.tests.test_multi_agent_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_round_robin_mock": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "range",
    "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_sample_from_early_done_env": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.multi_agent.EarlyDoneMultiAgent",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_train_multi_agent_cartpole_multi_policy": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "KeyError",
    "gen_policy",
    "print",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.tests.test_multi_agent_env.gym",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_train_multi_agent_cartpole_multi_policy.gen_policy": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_env.random"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_train_multi_agent_cartpole_single_policy": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "Exception",
    "print",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_vectorize_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv",
    "ray.rllib.examples.env.multi_agent.BasicMultiAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.TestMultiAgentEnv.test_vectorize_round_robin": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv",
    "ray.rllib.examples.env.multi_agent.RoundRobinMultiAgent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env._MultiAgentEnvToBaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env._MultiAgentEnvToBaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.one_hot": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_env.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_env.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_multi_agent_pendulum.pytest",
    "ray.rllib.tests.test_multi_agent_pendulum.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.MultiAgentPendulum": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentPendulum"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.TestMultiAgentPendulum": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_pendulum.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.TestMultiAgentPendulum.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_pendulum.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.TestMultiAgentPendulum.tearDown": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.tests.test_multi_agent_pendulum.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.TestMultiAgentPendulum.test_multi_agent_pendulum": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.examples.env.multi_agent.MultiAgentPendulum",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env",
    "ray.tune.run_experiments"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.run_experiments": {
  "data": {
   "shadows": "ray.tune.run_experiments"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_multi_agent_pendulum.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.Tuple",
    "range",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.EFFECT_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.ITEM_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.MAX_EFFECTS",
    "ray.rllib.tests.test_nested_observation_spaces.MAX_ITEMS",
    "ray.rllib.tests.test_nested_observation_spaces.MAX_PLAYERS",
    "ray.rllib.tests.test_nested_observation_spaces.PLAYER_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.pytest",
    "ray.rllib.tests.test_nested_observation_spaces.sys",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.spaces.repeated.Repeated"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_nested_observation_spaces.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.DICT_SPACE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel.forward": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel.forward.spy": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.EFFECT_SPACE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.EnvSpec": {
  "data": {
   "shadows": "gym.envs.registration.EnvSpec"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.FullyConnectedNetwork": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.ITEM_SPACE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.InvalidModel": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.InvalidModel.forward": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.InvalidModel2": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.InvalidModel2.forward": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.MAX_EFFECTS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.MAX_ITEMS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.MAX_PLAYERS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.MultiAgentEnv": {
  "data": {
   "shadows": "ray.rllib.env.MultiAgentEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gym.envs.registration.EnvSpec",
    "gym.spaces.Discrete",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SPACE"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv.reset": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv.step": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedMultiAgentEnv": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ray.rllib.env.MultiAgentEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedMultiAgentEnv.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedMultiAgentEnv.reset": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedMultiAgentEnv.step": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.do_test_nested_dict": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.one_hot",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.do_test_nested_tuple": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.one_hot",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.setUpClass": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.tearDownClass": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_invalid_model": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.InvalidModel"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_invalid_model2": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.InvalidModel2"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_multi_agent_complex_spaces": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "range",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.DictSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.NestedMultiAgentEnv",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SPACE",
    "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.one_hot",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_dict_async": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv.to_base_env",
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_dict_gym": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_dict_gym_lstm": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_dict_serving": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_dict_vector": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv.wrap",
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_tuple_async": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ray.rllib.env.base_env.BaseEnv.to_base_env",
    "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_tuple_gym": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_tuple_serving": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ray.rllib.tests.test_external_env.SimpleServing",
    "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_nested_tuple_vector": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv.wrap",
    "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_py_torch_model": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.DICT_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv",
    "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.one_hot",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_rollout_dict_space": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.rollout.rollout",
    "ray.rllib.tests.test_nested_observation_spaces.NestedDictEnv",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedSpacesTest.test_torch_repeated": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "range",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.models.ModelCatalog.register_custom_model",
    "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SAMPLES",
    "ray.rllib.tests.test_nested_observation_spaces.RepeatedSpaceEnv",
    "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray",
    "ray.rllib.tests.test_nested_observation_spaces.to_list",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "gym.envs.registration.EnvSpec",
    "gym.spaces.Discrete",
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SPACE"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv.reset": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.NestedTupleEnv.step": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.PGTFPolicy": {
  "data": {
   "shadows": "ray.rllib.agents.pg.pg_tf_policy.PGTFPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.PLAYER_SPACE": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SAMPLES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SPACE": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.Repeated": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.repeated.Repeated"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.RepeatedSpaceEnv": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.RepeatedSpaceEnv.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gym.envs.registration.EnvSpec",
    "gym.spaces.Discrete",
    "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SPACE"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.RepeatedSpaceEnv.reset": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.RepeatedSpaceEnv.step": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.REPEATED_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.SimpleServing": {
  "data": {
   "shadows": "ray.rllib.tests.test_external_env.SimpleServing"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TFModelV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_modelv2.TFModelV2"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SAMPLES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TUPLE_SPACE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchModelV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel.forward": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchRepeatedSpyModel.value_function": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.torch_modelv2.TorchModelV2.__init__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel.forward": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TorchSpyModel.value_function": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ray.rllib.models.tf.tf_modelv2.TFModelV2"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel.forward": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel.forward.spy": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "ray.rllib.tests.test_nested_observation_spaces.TupleSpyModel",
    "ray.rllib.tests.test_nested_observation_spaces.pickle",
    "ray.rllib.tests.test_nested_observation_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.one_hot": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.rollout": {
  "data": {
   "shadows": "ray.rllib.rollout.rollout"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.to_list": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "list",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_nested_observation_spaces.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_nested_observation_spaces.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_perf.pytest",
    "ray.rllib.tests.test_perf.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_perf.MockPolicy": {
  "data": {
   "shadows": "ray.rllib.tests.test_rollout_worker.MockPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.TestPerf": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.tests.test_perf.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_perf.TestPerf.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_perf.TestPerf.tearDownClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_perf.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_perf.TestPerf.test_baseline_performance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_perf.gym",
    "ray.rllib.tests.test_perf.time",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_perf.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_perf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_pettingzoo_env.pytest",
    "ray.rllib.tests.test_pettingzoo_env.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_pettingzoo_env.PettingZooEnv": {
  "data": {
   "shadows": "ray.rllib.env.PettingZooEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.TestPettingZooEnv": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_pettingzoo_env.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_pettingzoo_env.TestPettingZooEnv.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.tests.test_pettingzoo_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_pettingzoo_env.TestPettingZooEnv.tearDown": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.rllib.tests.test_pettingzoo_env.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_pettingzoo_env.TestPettingZooEnv.test_pettingzoo_env": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "agent_class",
    "copy.deepcopy",
    "pettingzoo.mpe.simple_spread_v1.env",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.env.PettingZooEnv",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_pettingzoo_env.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.simple_spread_v1": {
  "data": {
   "shadows": "pettingzoo.mpe.simple_spread_v1"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_pettingzoo_env.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_reproducibility.pytest",
    "ray.rllib.tests.test_reproducibility.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_reproducibility.DQNTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.dqn.DQNTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.tests.test_reproducibility.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "list",
    "range",
    "ray.rllib.agents.dqn.DQNTrainer",
    "ray.rllib.tests.test_reproducibility.ray",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory.PickLargest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.rllib.tests.test_reproducibility.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory.PickLargest.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "float",
    "ray.rllib.tests.test_reproducibility.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory.PickLargest.reset": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory.PickLargest.step": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "ray.rllib.tests.test_reproducibility.TestReproducibility.test_reproducing_trajectory.env_creator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "PickLargest"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_reproducibility.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_reproducibility.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "ray.rllib.tests.test_rollout.class_",
    "ray.rllib.tests.test_rollout.pytest",
    "ray.rllib.tests.test_rollout.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_rollout.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.TestRolloutLearntPolicy": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout.TestRolloutLearntPolicy.test_ppo_multi_agent_train_then_rollout": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.learn_test_multi_agent_plus_rollout"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutLearntPolicy.test_ppo_train_then_rollout": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.learn_test_plus_rollout"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_a3c": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_ddpg": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_dqn": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_es": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_impala": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_ppo": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.TestRolloutSimple.test_sac": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout.rollout_test"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.class_": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_rollout.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.learn_test_multi_agent_plus_rollout": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "int",
    "len",
    "pathlib.Path",
    "print",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.tests.test_rollout.os",
    "ray.rllib.tests.test_rollout.ray",
    "ray.rllib.tests.test_rollout.re",
    "ray.rllib.tests.test_rollout.sys",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.run",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.learn_test_multi_agent_plus_rollout.policy_fn": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.learn_test_plus_rollout": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "int",
    "pathlib.Path",
    "print",
    "ray.rllib.tests.test_rollout.os",
    "ray.rllib.tests.test_rollout.ray",
    "ray.rllib.tests.test_rollout.re",
    "ray.rllib.tests.test_rollout.sys",
    "ray.rllib.utils.test_utils.framework_iterator",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.rollout_test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pathlib.Path",
    "print",
    "ray.rllib.tests.test_rollout.os",
    "ray.rllib.tests.test_rollout.sys",
    "ray.rllib.utils.test_utils.framework_iterator",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_rollout_worker.pytest",
    "ray.rllib.tests.test_rollout_worker.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_rollout_worker.A2CTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.a3c.A2CTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.BadPolicy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.examples.policy.random_policy.RandomPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.BadPolicy.compute_actions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.examples.policy.random_policy.RandomPolicy",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.FailOnStepEnv": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.FailOnStepEnv.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.FailOnStepEnv.reset": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.FailOnStepEnv.step": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv.reset": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv.step": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv2": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv2.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv2.reset": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockEnv2.step": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockPolicy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.examples.policy.random_policy.RandomPolicy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.MockPolicy.compute_actions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "ray.rllib.examples.policy.random_policy.RandomPolicy",
    "ray.rllib.tests.test_rollout_worker.random",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockPolicy.postprocess_trajectory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.rllib.evaluation.postprocessing.compute_advantages",
    "ray.rllib.policy.policy.Policy",
    "ray.rllib.utils.annotations.override",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "range",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.gym",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv.get_unwrapped": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv.reset_at": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv.vector_reset": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.MockVectorEnv.vector_step": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.env.vector_env.VectorEnv",
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.PGTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.pg.PGTrainer"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.RandomEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.random_env.RandomEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.RandomPolicy": {
  "data": {
   "shadows": "ray.rllib.examples.policy.random_policy.RandomPolicy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.RolloutWorker": {
  "data": {
   "shadows": "ray.rllib.evaluation.rollout_worker.RolloutWorker"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.rllib.tests.test_rollout_worker.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.sample_and_flush": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.tests.test_rollout_worker.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.setUpClass": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_rollout_worker.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.tearDownClass": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_rollout_worker.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_action_clipping": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.max",
    "numpy.min",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.random_env.RandomEnv",
    "ray.rllib.examples.policy.random_policy.RandomPolicy",
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_async": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_auto_vectorization": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_basic": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.mean",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym",
    "to_prev"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_basic.to_prev": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_batch_ids": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.policy.sample_batch.SampleBatch.concat",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_batches_larger_when_vectorized": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_callbacks": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "collections.Counter",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_complete_episodes": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_complete_episodes_packing": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_extra_python_envs": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.os"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_filter_sync": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym",
    "ray.rllib.tests.test_rollout_worker.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_get_filters": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym",
    "ray.rllib.tests.test_rollout_worker.time"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_global_vars_update": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.rllib.agents.a3c.A2CTrainer",
    "ray.rllib.tests.test_rollout_worker.ray",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_hard_horizon": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "len",
    "numpy.argmax",
    "range",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv2",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym",
    "ray.rllib.utils.test_utils.check",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_metrics": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker.as_remote",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_no_env_seed": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "hasattr",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.MockVectorEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_no_step_on_init": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_rollout_worker.FailOnStepEnv",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_query_evaluators": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.tests.test_rollout_worker.gym",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.registry.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_reward_clipping": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dict",
    "max",
    "min",
    "numpy.mean",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.examples.env.random_env.RandomEnv",
    "ray.rllib.tests.test_rollout_worker.MockEnv2",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_soft_horizon": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_sync_filter": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_truncate_episodes": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockEnv",
    "ray.rllib.tests.test_rollout_worker.MockPolicy"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.TestRolloutWorker.test_vector_env_support": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "range",
    "ray.rllib.evaluation.metrics.collect_metrics",
    "ray.rllib.evaluation.rollout_worker.RolloutWorker",
    "ray.rllib.tests.test_rollout_worker.MockPolicy",
    "ray.rllib.tests.test_rollout_worker.MockVectorEnv"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_rollout_worker.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.check": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.collect_metrics": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.collect_metrics"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.compute_advantages": {
  "data": {
   "shadows": "ray.rllib.evaluation.postprocessing.compute_advantages"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_rollout_worker.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "ray.rllib.tests.test_supported_multi_agent.class_",
    "ray.rllib.tests.test_supported_multi_agent.pytest",
    "ray.rllib.tests.test_supported_multi_agent.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_supported_multi_agent.MultiAgentCartPole": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentCartPole"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.MultiAgentMountainCar": {
  "data": {
   "shadows": "ray.rllib.examples.env.multi_agent.MultiAgentMountainCar"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.setUpClass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_multi_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.tearDownClass": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_multi_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.test_apex_ddpg_multiagent": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.test_apex_multiagent": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.test_ddpg_multiagent": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.test_dqn_multiagent": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentOffPolicy.test_sac_multiagent": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.setUpClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_multi_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.tearDownClass": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_multi_agent.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.test_a3c_multiagent": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.test_impala_multiagent": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.test_pg_multiagent": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.TestSupportedMultiAgentPG.test_ppo_multiagent": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.check_support_multiagent": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "print",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.examples.env.multi_agent.MultiAgentCartPole",
    "ray.rllib.examples.env.multi_agent.MultiAgentMountainCar",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.tune.register_env"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_multi_agent.class_": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_supported_multi_agent.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.register_env": {
  "data": {
   "shadows": "ray.tune.register_env"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_multi_agent.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Tuple",
    "len",
    "numpy.float32",
    "ray.rllib.tests.test_supported_spaces.class_",
    "ray.rllib.tests.test_supported_spaces.pytest",
    "ray.rllib.tests.test_supported_spaces.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_supported_spaces.ACTION_SPACES_TO_TEST": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_supported_spaces.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.FCNetV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.OBSERVATION_SPACES_TO_TEST": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_supported_spaces.RandomEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.random_env.RandomEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesEvolutionAlgos": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesEvolutionAlgos.setUpClass": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesEvolutionAlgos.tearDownClass": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesEvolutionAlgos.test_ars": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesEvolutionAlgos.test_es": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy.setUpClass": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy.tearDownClass": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy.test_ddpg": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy.test_dqn": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesOffPolicy.test_sac": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.setUpClass": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.tearDownClass": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_supported_spaces.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.test_a3c": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.test_appo": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.test_impala": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.test_pg": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TestSupportedSpacesPG.test_ppo": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ray.rllib.tests.test_supported_spaces.check_support"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.TorchFCNetV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.fcnet.FullyConnectedNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.TorchVisionNetV2": {
  "data": {
   "shadows": "ray.rllib.models.torch.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.UnsupportedSpaceException": {
  "data": {
   "shadows": "ray.rllib.utils.error.UnsupportedSpaceException"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.VisionNetV2": {
  "data": {
   "shadows": "ray.rllib.models.tf.visionnet.VisionNetwork"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.check_support": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_do_check",
    "ray.rllib.tests.test_supported_spaces.ACTION_SPACES_TO_TEST",
    "ray.rllib.tests.test_supported_spaces.OBSERVATION_SPACES_TO_TEST",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.check_support._do_check": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "gym.spaces.Box",
    "isinstance",
    "numpy.float32",
    "print",
    "ray.rllib.agents.registry.get_agent_class",
    "ray.rllib.examples.env.random_env.RandomEnv",
    "ray.rllib.models.tf.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.tf.visionnet.VisionNetwork",
    "ray.rllib.models.torch.fcnet.FullyConnectedNetwork",
    "ray.rllib.models.torch.visionnet.VisionNetwork",
    "ray.rllib.tests.test_supported_spaces.ACTION_SPACES_TO_TEST",
    "ray.rllib.tests.test_supported_spaces.OBSERVATION_SPACES_TO_TEST",
    "ray.rllib.utils.error.UnsupportedSpaceException"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_supported_spaces.class_": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "ray.rllib.tests.test_supported_spaces.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.get_agent_class": {
  "data": {
   "shadows": "ray.rllib.agents.registry.get_agent_class"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_supported_spaces.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_timesteps.pytest",
    "ray.rllib.tests.test_timesteps.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_timesteps.RandomEnv": {
  "data": {
   "shadows": "ray.rllib.examples.env.random_env.RandomEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.TestTimeSteps": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.tests.test_timesteps.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_timesteps.TestTimeSteps.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_timesteps.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_timesteps.TestTimeSteps.tearDownClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod",
    "ray.rllib.tests.test_timesteps.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_timesteps.TestTimeSteps.test_timesteps": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "range",
    "ray.rllib.agents.pg.DEFAULT_CONFIG.copy",
    "ray.rllib.agents.pg.PGTrainer",
    "ray.rllib.examples.env.random_env.RandomEnv",
    "ray.rllib.utils.test_utils.framework_iterator"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_timesteps.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.pg": {
  "data": {
   "shadows": "ray.rllib.agents.pg"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_timesteps.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_vector_env": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.tests.test_vector_env.pytest",
    "ray.rllib.tests.test_vector_env.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.tests.test_vector_env.Info": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_vector_env.MockEnvDictSubclass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.tests.test_vector_env.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_vector_env.MockEnvDictSubclass.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.tests.test_vector_env.gym"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_vector_env.MockEnvDictSubclass.reset": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.rllib.tests.test_vector_env.MockEnvDictSubclass.step": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.tests.test_vector_env.Info"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_vector_env.TestExternalEnv": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.rllib.tests.test_vector_env.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.tests.test_vector_env.TestExternalEnv.test_vector_step": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.rllib.env.vector_env.VectorEnv.wrap",
    "ray.rllib.tests.test_vector_env.MockEnvDictSubclass"
   ]
  },
  "type": "function"
 },
 "ray.rllib.tests.test_vector_env.VectorEnv": {
  "data": {
   "shadows": "ray.rllib.env.vector_env.VectorEnv"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_vector_env.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_vector_env.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_vector_env.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.tests.test_vector_env.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.train.args",
    "ray.rllib.train.create_parser",
    "ray.rllib.train.parser",
    "ray.rllib.train.run",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.train.Cluster": {
  "data": {
   "shadows": "ray.cluster_utils.Cluster"
  },
  "type": "import"
 },
 "ray.rllib.train.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.rllib.train.EXAMPLE_USAGE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.rllib.train.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.train.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.rllib.train.args": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "ray.rllib.train.create_parser": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "ray.rllib.train.EXAMPLE_USAGE",
    "ray.rllib.train.argparse",
    "ray.tune.config_parser.make_parser",
    "ray.tune.result.DEFAULT_RESULTS_DIR",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.train.create_scheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.create_scheduler"
  },
  "type": "import"
 },
 "ray.rllib.train.make_parser": {
  "data": {
   "shadows": "ray.tune.config_parser.make_parser"
  },
  "type": "import"
 },
 "ray.rllib.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.train.parser": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "ray.rllib.train.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.train.resources_to_json": {
  "data": {
   "shadows": "ray.tune.resources.resources_to_json"
  },
  "type": "import"
 },
 "ray.rllib.train.run": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "open",
    "pathlib.Path",
    "range",
    "ray.cluster_utils.Cluster",
    "ray.rllib.train.os",
    "ray.rllib.train.ray",
    "ray.rllib.train.yaml",
    "ray.tune.resources.resources_to_json",
    "ray.tune.schedulers.create_scheduler",
    "ray.tune.tune.run_experiments",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.train.run_experiments": {
  "data": {
   "shadows": "ray.tune.tune.run_experiments"
  },
  "type": "import"
 },
 "ray.rllib.train.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.train.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.train.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.rllib.utils": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "ray.rllib.utils.force_list"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.ExponentialSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ExponentialSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.Filter": {
  "data": {
   "shadows": "ray.rllib.utils.filter.Filter"
  },
  "type": "import"
 },
 "ray.rllib.utils.FilterManager": {
  "data": {
   "shadows": "ray.rllib.utils.filter_manager.FilterManager"
  },
  "type": "import"
 },
 "ray.rllib.utils.LARGE_INTEGER": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.LARGE_INTEGER"
  },
  "type": "import"
 },
 "ray.rllib.utils.LinearSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.LinearSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.MAX_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.MAX_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.utils.MIN_LOG_NN_OUTPUT": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.MIN_LOG_NN_OUTPUT"
  },
  "type": "import"
 },
 "ray.rllib.utils.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.PolynomialSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.PolynomialSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.SMALL_NUMBER": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.SMALL_NUMBER"
  },
  "type": "import"
 },
 "ray.rllib.utils.__all__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.rllib.utils.actors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.actors.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.actors.TaskPool": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "ray.rllib.utils.actors.TaskPool.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.TaskPool.add": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.TaskPool.completed": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "list",
    "ray.rllib.utils.actors.ray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.TaskPool.completed_prefetch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.TaskPool.count": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.TaskPool.reset_workers": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.create_colocated": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "len",
    "ray.rllib.utils.actors.logger",
    "ray.rllib.utils.actors.try_create_colocated"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.rllib.utils.actors.drop_colocated": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.rllib.utils.actors.split_colocated"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.rllib.utils.actors.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.actors.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.rllib.utils.actors.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.utils.actors.split_colocated": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.rllib.utils.actors.platform",
    "ray.rllib.utils.actors.ray",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.actors.try_create_colocated": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.utils.actors.logger",
    "ray.rllib.utils.actors.split_colocated"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.add_mixins": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.add_mixins.new_base": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "ray.rllib.utils.annotations": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.annotations.DeveloperAPI": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.rllib.utils.annotations.PublicAPI": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.rllib.utils.annotations.override": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "ray.rllib.utils.annotations.override.check_override": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NameError",
    "dir"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.check": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check"
  },
  "type": "import"
 },
 "ray.rllib.utils.check_compute_single_action": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check_compute_single_action"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "len",
    "numpy.ones",
    "print",
    "ray.rllib.utils.compression.compressed",
    "ray.rllib.utils.compression.count",
    "ray.rllib.utils.compression.data",
    "ray.rllib.utils.compression.logger",
    "ray.rllib.utils.compression.logging",
    "ray.rllib.utils.compression.pack",
    "ray.rllib.utils.compression.size",
    "ray.rllib.utils.compression.start",
    "ray.rllib.utils.compression.time",
    "ray.rllib.utils.compression.unpack",
    "round"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.compression.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.LZ4_ENABLED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.compressed": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.compression_supported": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.LZ4_ENABLED"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.compression.count": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.data": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.is_compressed": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.compression.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.lz4.frame": {
  "data": {
   "shadows": "lz4.frame"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.pack": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.LZ4_ENABLED",
    "ray.rllib.utils.compression.base64"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.compression.pack_if_needed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.pack"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.compression.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.size": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.start": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "ray.rllib.utils.compression.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.utils.compression.unpack": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.cloudpickle.loads",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.LZ4_ENABLED",
    "ray.rllib.utils.compression.base64"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.compression.unpack_if_needed": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.compression.is_compressed",
    "ray.rllib.utils.compression.unpack"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.debug": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.debug.pprint"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.debug.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "ray.rllib.utils.debug.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.debug.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.debug._StringValue": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "ray.rllib.utils.debug._StringValue.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.rllib.utils.debug._StringValue.__repr__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.rllib.utils.debug._printer": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.rllib.utils.debug._summarize": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "isinstance",
    "list",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.ndarray",
    "numpy.object",
    "numpy.str_",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.debug._StringValue",
    "round",
    "tuple",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.debug.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.debug.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "ray.rllib.utils.debug.summarize": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.rllib.utils.debug._printer",
    "ray.rllib.utils.debug._summarize"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deep_update": {
  "data": {
   "shadows": "ray.tune.utils.deep_update"
  },
  "type": "import"
 },
 "ray.rllib.utils.deprecation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.deprecation.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.deprecation.DEPRECATED_VALUE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.utils.deprecation.deprecation_warning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "error",
    "issubclass",
    "ray.rllib.utils.deprecation.logger"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.logger": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.utils.deprecation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.deprecation.moved_function": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "func",
    "func.__module__",
    "func.__name__",
    "ray.rllib.utils.deprecation.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_agent": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_agent.DeprecationWrapper": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "ray.rllib.utils.deprecation.renamed_agent.DeprecationWrapper.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.rllib.utils.deprecation.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_class": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_class.DeprecationWrapper": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "ray.rllib.utils.deprecation.renamed_class.DeprecationWrapper.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.rllib.utils.deprecation.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_function": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation.renamed_function.deprecation_wrapper": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "func",
    "ray.rllib.utils.deprecation.deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.deprecation_warning": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.deprecation_warning"
  },
  "type": "import"
 },
 "ray.rllib.utils.error": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.error.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.error.UnsupportedSpaceException": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.utils.annotations.PublicAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.exploration.Curiosity": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.curiosity.Curiosity"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.EpsilonGreedy": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.GaussianNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.OrnsteinUhlenbeckNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ParameterNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.parameter_noise.ParameterNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.PerWorkerEpsilonGreedy": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.per_worker_epsilon_greedy.PerWorkerEpsilonGreedy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.PerWorkerGaussianNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.per_worker_gaussian_noise.PerWorkerGaussianNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.PerWorkerOrnsteinUhlenbeckNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.PerWorkerOrnsteinUhlenbeckNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.Random": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.random.Random"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.SoftQ": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.soft_q.SoftQ"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.StochasticSampling": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.rllib.utils.exploration.curiosity": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.curiosity.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "float",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Space",
    "int",
    "isinstance",
    "list",
    "numpy.sum",
    "ray.rllib.models.catalog.ModelCatalog.get_model_v2",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.from_config.from_config",
    "ray.rllib.utils.typing.FromConfigSpec",
    "ray.rllib.utils.typing.ModelConfigDict",
    "str",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity._create_fc_net": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.models.torch.misc.SlimFC"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity.get_exploration_action": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity.get_exploration_optimizer": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "list",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.curiosity.Curiosity.postprocess_trajectory": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "gym.spaces.Discrete",
    "isinstance",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.NEXT_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.REWARDS",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.torch_ops.one_hot"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.curiosity.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.F": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.rllib.utils.exploration.curiosity.FromConfigSpec": {
  "data": {
   "shadows": "ray.rllib.utils.typing.FromConfigSpec"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.ModelCatalog": {
  "data": {
   "shadows": "ray.rllib.models.catalog.ModelCatalog"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.ModelConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.ModelConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.SlimFC": {
  "data": {
   "shadows": "ray.rllib.models.torch.misc.SlimFC"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.TorchMultiCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchMultiCategorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.one_hot": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.one_hot"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.curiosity.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.int64",
    "ray.rllib.utils.framework.get_variable",
    "ray.rllib.utils.from_config.from_config",
    "ray.rllib.utils.schedules.PiecewiseSchedule",
    "ray.rllib.utils.schedules.Schedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy._get_tf_exploration_action_op": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "ray.rllib.utils.exploration.exploration.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy._get_torch_exploration_action": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.utils.exploration.exploration.TensorType",
    "ray.rllib.utils.torch_ops.FLOAT_MIN",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy.get_exploration_action": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.exploration.exploration.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy.get_info": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.FLOAT_MIN": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.FLOAT_MIN"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.epsilon_greedy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.exploration.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.Exploration": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gym.spaces.Space",
    "int",
    "isinstance",
    "list",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.typing.TrainerConfigDict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.before_compute_actions": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.TensorType",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.get_exploration_action": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.get_exploration_loss": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.framework.TensorType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.get_exploration_optimizer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.typing.LocalOptimizer",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.get_info": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.on_episode_end": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.on_episode_start": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.Exploration.postprocess_trajectory": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.annotations.DeveloperAPI",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.exploration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.LocalOptimizer": {
  "data": {
   "shadows": "ray.rllib.utils.typing.LocalOptimizer"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.TrainerConfigDict": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TrainerConfigDict"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.exploration.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.gaussian_noise.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Space",
    "int",
    "numpy.array",
    "numpy.int64",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.exploration.random.Random",
    "ray.rllib.utils.framework.get_variable",
    "ray.rllib.utils.schedules.Schedule",
    "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise._get_tf_exploration_action_op": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise._get_torch_exploration_action": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise.get_exploration_action": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise.get_info": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.gaussian_noise.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Random": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.random.Random"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.gaussian_noise.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.GaussianNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.float32",
    "ray.rllib.utils.framework.get_variable",
    "ray.rllib.utils.schedules.Schedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise._get_tf_exploration_action_op": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise._get_torch_exploration_action": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.parameter_noise.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.BaseEnv": {
  "data": {
   "shadows": "ray.rllib.env.base_env.BaseEnv"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Deterministic": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Deterministic"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "float",
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.zeros",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.get_variable",
    "ray.rllib.utils.from_config.from_config",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._add_stored_noise": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._delayed_on_episode_start": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._remove_noise": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._sample_new_noise": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._sample_new_noise_and_add": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._tf_add_stored_noise_op": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._tf_remove_noise_op": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise._tf_sample_new_noise_op": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.before_compute_actions": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.get_exploration_action": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.typing.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.get_info": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.on_episode_end": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.on_episode_start": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "ray.rllib.env.base_env.BaseEnv",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.ParameterNoise.postprocess_trajectory": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "numpy.log",
    "numpy.mean",
    "numpy.nanmean",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.tf.tf_action_dist.Deterministic",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.models.torch.torch_action_dist.TorchDeterministic",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.policy.sample_batch.SampleBatch.ACTION_DIST_INPUTS",
    "ray.rllib.policy.sample_batch.SampleBatch.CUR_OBS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_ACTIONS",
    "ray.rllib.policy.sample_batch.SampleBatch.PREV_REWARDS",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.numpy.SMALL_NUMBER",
    "ray.rllib.utils.numpy.softmax",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.parameter_noise.Policy": {
  "data": {
   "shadows": "ray.rllib.policy.policy.Policy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.SMALL_NUMBER": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.SMALL_NUMBER"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.TorchDeterministic": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchDeterministic"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.softmax": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.softmax"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.parameter_noise.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.EpsilonGreedy": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.PerWorkerEpsilonGreedy": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.epsilon_greedy.EpsilonGreedy"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.PerWorkerEpsilonGreedy.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Space",
    "int",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.per_worker_epsilon_greedy.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.GaussianNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.PerWorkerGaussianNoise": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.gaussian_noise.GaussianNoise"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.PerWorkerGaussianNoise.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Space",
    "int",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.per_worker_gaussian_noise.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.PerWorkerOrnsteinUhlenbeckNoise": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.ornstein_uhlenbeck_noise.OrnsteinUhlenbeckNoise"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.PerWorkerOrnsteinUhlenbeckNoise.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Space",
    "int",
    "ray.rllib.utils.schedules.ConstantSchedule",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.per_worker_ornstein_uhlenbeck_noise.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.random.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Random": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.random.Random.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gym.spaces.Space",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_exploration_action": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_tf_exploration_action_op": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.exploration.random.tree",
    "ray.rllib.utils.framework.TensorType",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_tf_exploration_action_op.false_fn": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_tf_exploration_action_op.true_fn": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "ray.rllib.utils.exploration.random.tree",
    "ray.rllib.utils.force_tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_tf_exploration_action_op.true_fn.random_component": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gym.spaces.Box",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Random.get_torch_exploration_action": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.stack",
    "range",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.force_tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.random.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.force_tuple": {
  "data": {
   "shadows": "ray.rllib.utils.force_tuple"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.get_base_struct_from_space": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.random.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.exploration.soft_q.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.Categorical": {
  "data": {
   "shadows": "ray.rllib.models.tf.tf_action_dist.Categorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.SoftQ": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.soft_q.SoftQ.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "gym.spaces.Discrete",
    "gym.spaces.Space",
    "isinstance",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.soft_q.SoftQ.get_exploration_action": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "cls",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.models.tf.tf_action_dist.Categorical",
    "ray.rllib.models.torch.torch_action_dist.TorchCategorical",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling",
    "ray.rllib.utils.framework.TensorType",
    "super",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.soft_q.Space": {
  "data": {
   "shadows": "gym.spaces.Space"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.StochasticSampling": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.TorchCategorical": {
  "data": {
   "shadows": "ray.rllib.models.torch.torch_action_dist.TorchCategorical"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.soft_q.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.ActionDistribution": {
  "data": {
   "shadows": "ray.rllib.models.action_dist.ActionDistribution"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.ModelV2": {
  "data": {
   "shadows": "ray.rllib.models.modelv2.ModelV2"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.Random": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.random.Random"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.exploration.Exploration"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.int64",
    "ray.rllib.models.modelv2.ModelV2",
    "ray.rllib.utils.exploration.random.Random",
    "ray.rllib.utils.exploration.stochastic_sampling.gym",
    "ray.rllib.utils.framework.get_variable",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling._get_tf_exploration_action_op": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling._get_tf_exploration_action_op.logp_false_fn": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ray.rllib.utils.exploration.stochastic_sampling.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling._get_torch_exploration_action": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.StochasticSampling.get_exploration_action": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.rllib.models.action_dist.ActionDistribution",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.framework.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.framework.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.get_variable": {
  "data": {
   "shadows": "ray.rllib.utils.framework.get_variable"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.exploration.stochastic_sampling.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.fc": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.fc"
  },
  "type": "import"
 },
 "ray.rllib.utils.filter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.filter.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.__init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "lock_wrap",
    "ray.rllib.utils.filter.ConcurrentMeanStdFilter",
    "ray.rllib.utils.filter.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.__init__.lock_wrap": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.__init__.lock_wrap.wrapper": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.__repr__": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.as_serializable": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.ConcurrentMeanStdFilter.copy": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.ConcurrentMeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.Filter": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.rllib.utils.filter.Filter.apply_changes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.Filter.as_serializable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.Filter.clear_buffer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.Filter.copy": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.Filter.sync": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.Filter"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.filter.MeanStdFilter.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.clip",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.RunningStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.__repr__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.apply_changes": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.as_serializable": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.clear_buffer": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.RunningStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.copy": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.MeanStdFilter"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.MeanStdFilter.sync": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.rllib.utils.filter.Filter"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.filter.NoFilter.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.apply_changes": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.as_serializable": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.clear_buffer": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.copy": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.NoFilter.sync": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "ray.rllib.utils.filter.RunningStat.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.__repr__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.copy": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.copy",
    "ray.rllib.utils.filter.RunningStat"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.mean": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.n": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.push": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.shape": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.std": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.update": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.RunningStat.var": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.square",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.get_filter": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "Exception",
    "ray.rllib.utils.filter.ConcurrentMeanStdFilter",
    "ray.rllib.utils.filter.MeanStdFilter",
    "ray.rllib.utils.filter.NoFilter",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.rllib.utils.filter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.filter.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.rllib.utils.filter_manager": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.filter_manager.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.filter_manager.FilterManager": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.filter_manager.FilterManager.synchronize": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI",
    "ray.rllib.utils.filter_manager.ray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.filter_manager.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.utils.force_list": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ctor",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.force_tuple": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.rllib.utils.framework": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.framework.logging",
    "ray.rllib.utils.typing.TensorStructType",
    "ray.rllib.utils.typing.TensorType"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.framework.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.ModuleStub": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "ray.rllib.utils.framework.ModuleStub.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.NNStub": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "ray.rllib.utils.framework.NNStub.__init__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.Swish": {
  "data": {
   "shadows": "ray.rllib.utils.torch_ops.Swish"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.TensorShape": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorShape"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.TensorStructType": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.utils.framework.TensorType": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.utils.framework._torch_stubs": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ray.rllib.utils.framework.NNStub",
    "torch.nn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.get_activation_fn": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.torch_ops.Swish",
    "tensorflow",
    "tensorflow.nn",
    "torch.nn",
    "torch.nn.ReLU",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.get_variable": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "bool",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "ray.rllib.utils.framework.torch",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.typing.TensorShape",
    "str",
    "tensorflow.compat.v1.get_variable",
    "tensorflow.float32",
    "tensorflow.int32",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.utils.framework.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.tf_function": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.tf_function.decorator": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow",
    "tensorflow.executing_eagerly",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.tf_module": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.framework.try_import_tf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "hasattr",
    "ray.rllib.utils.framework.logger",
    "ray.rllib.utils.framework.os",
    "ray.rllib.utils.framework.sys",
    "tensorflow",
    "tensorflow.__version__",
    "tensorflow.compat.v1"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.try_import_tfp": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ImportError",
    "ray.rllib.utils.framework.logger",
    "ray.rllib.utils.framework.os",
    "tensorflow_probability"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework.try_import_torch": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ImportError",
    "ray.rllib.utils.framework._torch_stubs",
    "ray.rllib.utils.framework.logger",
    "ray.rllib.utils.framework.os",
    "ray.rllib.utils.framework.torch",
    "torch.nn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.from_config.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.force_list": {
  "data": {
   "shadows": "ray.rllib.utils.force_list"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.from_config": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "ImportError",
    "ModuleNotFoundError",
    "TypeError",
    "ValueError",
    "__import__",
    "callable",
    "constructor",
    "constructor.func",
    "copy.deepcopy",
    "dict",
    "functools.partial",
    "getattr",
    "hasattr",
    "isinstance",
    "ray.rllib.utils.force_list",
    "ray.rllib.utils.from_config.from_file",
    "ray.rllib.utils.from_config.importlib",
    "ray.rllib.utils.from_config.json",
    "ray.rllib.utils.from_config.lookup_type",
    "ray.rllib.utils.from_config.re",
    "ray.rllib.utils.from_config.yaml",
    "ray.rllib.utils.merge_dicts",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.from_config.from_file": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "FileNotFoundError",
    "open",
    "ray.rllib.utils.from_config.from_config",
    "ray.rllib.utils.from_config.json",
    "ray.rllib.utils.from_config.os",
    "ray.rllib.utils.from_config.yaml"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.from_config.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.lookup_type": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "ray.rllib.utils.from_config.re",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.from_config.merge_dicts": {
  "data": {
   "shadows": "ray.rllib.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.rllib.utils.from_config.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.rllib.utils.lstm": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.lstm"
  },
  "type": "import"
 },
 "ray.rllib.utils.memory": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.memory.aligned_array": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.memory.concat_aligned": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.uint8",
    "ray.rllib.utils.memory.aligned_array",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.rllib.utils.numpy": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.numpy.LARGE_INTEGER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.rllib.utils.numpy.MAX_LOG_NN_OUTPUT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.utils.numpy.MIN_LOG_NN_OUTPUT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.rllib.utils.numpy.SMALL_NUMBER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.utils.numpy.convert_to_numpy": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ray.rllib.utils.numpy.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.convert_to_numpy.mapping": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.float32",
    "numpy.float64",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.fc": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "map_",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.fc.map_": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.huber_loss": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.power",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.l2_loss": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.lstm": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.concatenate",
    "numpy.matmul",
    "numpy.multiply",
    "numpy.tanh",
    "numpy.zeros",
    "range",
    "ray.rllib.utils.numpy.sigmoid"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.numpy.one_hot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.bool_",
    "numpy.int",
    "numpy.max",
    "numpy.ones",
    "numpy.tile",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.relu": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.sigmoid": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.softmax": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.maximum",
    "numpy.sum",
    "ray.rllib.utils.numpy.SMALL_NUMBER"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.numpy.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.utils.numpy.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.numpy.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.one_hot": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.one_hot"
  },
  "type": "import"
 },
 "ray.rllib.utils.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.rllib.utils.relu": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.relu"
  },
  "type": "import"
 },
 "ray.rllib.utils.renamed_agent": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.renamed_agent"
  },
  "type": "import"
 },
 "ray.rllib.utils.renamed_class": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.renamed_class"
  },
  "type": "import"
 },
 "ray.rllib.utils.renamed_function": {
  "data": {
   "shadows": "ray.rllib.utils.deprecation.renamed_function"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.schedules.ConstantSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.constant_schedule.ConstantSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.ExponentialSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.exponential_schedule.ExponentialSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.LinearSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.linear_schedule.LinearSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.PiecewiseSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.PolynomialSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.schedule.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.utils.schedules.constant_schedule": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.schedules.constant_schedule.ConstantSchedule": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.constant_schedule.ConstantSchedule.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.constant_schedule.ConstantSchedule._tf_value_op": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.constant_schedule.ConstantSchedule._value": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.constant_schedule.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.schedule.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.constant_schedule.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.constant_schedule.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.exponential_schedule": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.schedules.exponential_schedule.ExponentialSchedule": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.exponential_schedule.ExponentialSchedule.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.exponential_schedule.ExponentialSchedule._value": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.exponential_schedule.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.schedule.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.exponential_schedule.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.exponential_schedule.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.linear_schedule": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.schedules.linear_schedule.LinearSchedule": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.linear_schedule.LinearSchedule.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.linear_schedule.PolynomialSchedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.piecewise_schedule": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.rllib.utils.schedules.piecewise_schedule._linear_interpolation",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule._tf_value_op": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule._tf_value_op._body": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule._tf_value_op._cond": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.PiecewiseSchedule._value": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "float",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.schedule.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.piecewise_schedule._linear_interpolation": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.piecewise_schedule.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.utils.schedules.schedule.Schedule"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule._tf_value_op": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule",
    "ray.rllib.utils.typing.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.PolynomialSchedule._value": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "min",
    "ray.rllib.utils.annotations.override",
    "ray.rllib.utils.schedules.schedule.Schedule",
    "ray.rllib.utils.typing.TensorType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.Schedule": {
  "data": {
   "shadows": "ray.rllib.utils.schedules.schedule.Schedule"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.TensorType": {
  "data": {
   "shadows": "ray.rllib.utils.typing.TensorType"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.override": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.override"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.polynomial_schedule.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.schedule": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.schedules.schedule.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.schedule.DeveloperAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.DeveloperAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.schedule.Schedule": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.schedules.schedule.Schedule.__call__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.schedule.Schedule.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.schedule.Schedule._tf_value_op": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.schedule.Schedule._value": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "ray.rllib.utils.annotations.DeveloperAPI"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.schedule.Schedule.value": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.rllib.utils.schedules.schedule.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.rllib.utils.schedules.schedule.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.sgd.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.sgd.DEFAULT_POLICY_ID": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.LEARNER_STATS_KEY": {
  "data": {
   "shadows": "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.MultiAgentBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.MultiAgentBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.SampleBatch": {
  "data": {
   "shadows": "ray.rllib.policy.sample_batch.SampleBatch"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.averaged": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.sgd.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.do_minibatch_sgd": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "collections.defaultdict",
    "isinstance",
    "list",
    "range",
    "ray.rllib.evaluation.metrics.LEARNER_STATS_KEY",
    "ray.rllib.policy.sample_batch.DEFAULT_POLICY_ID",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.policy.sample_batch.SampleBatch",
    "ray.rllib.utils.sgd.averaged",
    "ray.rllib.utils.sgd.logger",
    "ray.rllib.utils.sgd.minibatches",
    "ray.rllib.utils.sgd.standardized"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.sgd.log_once": {
  "data": {
   "shadows": "ray.util.log_once"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.utils.sgd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.minibatches": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "ray.rllib.policy.sample_batch.MultiAgentBatch",
    "ray.rllib.utils.sgd.logger",
    "ray.rllib.utils.sgd.random",
    "ray.util.log_once"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.sgd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.rllib.utils.sgd.standardized": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.sigmoid": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.sigmoid"
  },
  "type": "import"
 },
 "ray.rllib.utils.softmax": {
  "data": {
   "shadows": "ray.rllib.utils.numpy.softmax"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.spaces.flexdict": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.spaces.flexdict.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.__getitem__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.__repr__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.__setitem__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.assertSpace": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "issubclass",
    "ray.rllib.utils.spaces.flexdict.gym",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.FlexDict.sample": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.flexdict.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.flexdict.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.repeated": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.spaces.repeated.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.repeated.Repeated": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.spaces.repeated.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.spaces.repeated.Repeated.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "ray.rllib.utils.spaces.repeated.gym",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.repeated.Repeated.contains": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.repeated.Repeated.sample": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.repeated.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.simplex": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.spaces.simplex.PublicAPI": {
  "data": {
   "shadows": "ray.rllib.utils.annotations.PublicAPI"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.simplex.Simplex": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.rllib.utils.annotations.PublicAPI",
    "ray.rllib.utils.spaces.simplex.gym"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.__eq__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.__repr__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.contains": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.ones_like",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.from_jsonable": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.sample": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.seed": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.Simplex.to_jsonable": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.simplex.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.simplex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.spaces.space_utils.Dict": {
  "data": {
   "shadows": "gym.spaces.Dict"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils.FlexDict": {
  "data": {
   "shadows": "ray.rllib.utils.spaces.flexdict.FlexDict"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils.Tuple": {
  "data": {
   "shadows": "gym.spaces.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils.flatten_space": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "_helper_flatten"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.space_utils.flatten_space._helper_flatten": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_helper_flatten",
    "gym.spaces.Dict",
    "gym.spaces.Tuple",
    "isinstance",
    "ray.rllib.utils.spaces.flexdict.FlexDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.space_utils.flatten_to_single_ndarray": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.concatenate",
    "numpy.reshape",
    "ray.rllib.utils.spaces.space_utils.tree",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_helper_struct"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.space_utils.get_base_struct_from_space._helper_struct": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_helper_struct",
    "gym.spaces.Dict",
    "gym.spaces.Tuple",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.spaces.space_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.utils.spaces.space_utils.unbatch": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.rllib.utils.spaces.space_utils.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "__name__",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.test_utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.test_utils.check": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "bool",
    "dict",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.bool_",
    "numpy.object",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.test_utils.check_compute_single_action": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "isinstance",
    "list",
    "method_to_test",
    "numpy.clip",
    "ray.rllib.utils.test_utils.check",
    "ray.rllib.utils.test_utils.gym",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.test_utils.check_learning_achieved": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "print"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.test_utils.eager_mode": {
  "data": {
   "shadows": "tensorflow.python.eager.context.eager_mode"
  },
  "type": "import"
 },
 "ray.rllib.utils.test_utils.framework_iterator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "print",
    "ray.rllib.utils.test_utils.logger",
    "str",
    "tensorflow.python.eager.context.eager_mode"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.test_utils.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.test_utils.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.rllib.utils.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.test_utils.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.test_utils.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.framework.try_import_torch",
    "ray.rllib.utils.tests.test_framework_agnostic_components.pytest",
    "ray.rllib.utils.tests.test_framework_agnostic_components.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.AbstractDummyComponent": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.AbstractDummyComponent.some_abstract_method": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent._add_tf": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent.add": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.Exploration": {
  "data": {
   "shadows": "ray.rllib.utils.exploration.exploration.Exploration"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.NonAbstractChildOfDummyComponent": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.TestFrameWorkAgnosticComponents": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.rllib.utils.tests.test_framework_agnostic_components.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.TestFrameWorkAgnosticComponents.test_dummy_components": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "gym.spaces.Discrete",
    "numpy.array",
    "pathlib.Path",
    "ray.rllib.utils.exploration.exploration.Exploration",
    "ray.rllib.utils.from_config.from_config",
    "ray.rllib.utils.test_utils.check",
    "ray.rllib.utils.test_utils.framework_iterator",
    "ray.rllib.utils.tests.test_framework_agnostic_components.AbstractDummyComponent",
    "ray.rllib.utils.tests.test_framework_agnostic_components.DummyComponent",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.TestFrameWorkAgnosticComponents.test_unregistered_envs": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.rllib.utils.from_config.from_config"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.check": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.check"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.framework_iterator": {
  "data": {
   "shadows": "ray.rllib.utils.test_utils.framework_iterator"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.from_config": {
  "data": {
   "shadows": "ray.rllib.utils.from_config.from_config"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_framework_agnostic_components.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.tests.test_taskpool.pytest",
    "ray.rllib.utils.tests.test_taskpool.sys"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPool": {
  "data": {
   "shadows": "ray.rllib.utils.actors.TaskPool"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.rllib.utils.tests.test_taskpool.unittest"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest.test_completed_prefetch_yieldsAllComplete": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "list",
    "ray.rllib.utils.actors.TaskPool",
    "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest.test_completed_prefetch_yieldsAllCompleteUpToDefaultLimit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list",
    "range",
    "ray.rllib.utils.actors.TaskPool",
    "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest.test_completed_prefetch_yieldsAllCompleteUpToSpecifiedLimit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list",
    "range",
    "ray.rllib.utils.actors.TaskPool",
    "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest.test_completed_prefetch_yieldsRemainingIfIterationStops": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "list",
    "range",
    "ray.rllib.utils.actors.TaskPool",
    "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef",
    "ray.rllib.utils.tests.test_taskpool.ray",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.TaskPoolTest.test_reset_workers_pendingFetchesFromFailedWorkersRemoved": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "range",
    "ray.rllib.utils.actors.TaskPool",
    "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.createMockWorkerAndObjectRef": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.rllib.utils.tests.test_taskpool.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.rllib.utils.tests.test_taskpool.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_ops": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_tf"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.tf_ops.explained_variance": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.huber_loss": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.make_tf_callable": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.make_tf_callable.make_wrapper": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.make_tf_callable.make_wrapper.call": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "fn",
    "len",
    "list",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.minimize_and_clip": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.reduce_mean_ignore_inf": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.scope_vars": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_ops.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.rllib.utils.framework.try_import_tf",
    "ray.rllib.utils.tf_run_builder.logging"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.tf_run_builder.TFRunBuilder": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.rllib.utils.tf_run_builder.TFRunBuilder.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_run_builder.TFRunBuilder.add_feed_dict": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_run_builder.TFRunBuilder.add_fetches": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_run_builder.TFRunBuilder.get": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "ray.rllib.utils.tf_run_builder.logger",
    "ray.rllib.utils.tf_run_builder.os",
    "ray.rllib.utils.tf_run_builder.run_timeline",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_run_builder._count": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.rllib.utils.tf_run_builder.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.rllib.utils.tf_run_builder.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder.run_timeline": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "open",
    "ray.rllib.utils.tf_run_builder._count",
    "ray.rllib.utils.tf_run_builder.logger",
    "ray.rllib.utils.tf_run_builder.os",
    "ray.rllib.utils.tf_run_builder.time",
    "ray.util.debug.log_once",
    "tensorflow.python.client.timeline.Timeline"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tf_run_builder.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder.timeline": {
  "data": {
   "shadows": "tensorflow.python.client.timeline"
  },
  "type": "import"
 },
 "ray.rllib.utils.tf_run_builder.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.timer": {
  "data": {
   "symbols_in_volume": [
    "ray.util.timer._Timer"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.timer.TimerStat": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.rllib.utils.timer._Timer": {
  "data": {
   "shadows": "ray.util.timer._Timer"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops": {
  "data": {
   "symbols_in_volume": [
    "ray.rllib.utils.framework.try_import_torch"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.torch_ops.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops.FLOAT_MAX": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.rllib.utils.torch_ops.FLOAT_MIN": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.utils.torch_ops.MultiDiscrete": {
  "data": {
   "shadows": "gym.spaces.MultiDiscrete"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops.RepeatedValues": {
  "data": {
   "shadows": "ray.rllib.models.repeated_values.RepeatedValues"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops.Swish": {
  "data": {
   "lineno": 178
  },
  "type": "class"
 },
 "ray.rllib.utils.torch_ops.Swish.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.Swish.forward": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.atanh": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.convert_to_non_torch_type": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.rllib.utils.torch_ops.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.convert_to_non_torch_type.mapping": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.convert_to_torch_tensor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.rllib.utils.torch_ops.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.convert_to_torch_tensor.mapping": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "ray.rllib.models.repeated_values.RepeatedValues",
    "ray.rllib.utils.torch_ops.tree"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.explained_variance": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.global_norm": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.huber_loss": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.l2_loss": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.minimize_and_clip": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops.one_hot": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "gym.spaces.Discrete",
    "gym.spaces.MultiDiscrete",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.reduce_mean_ignore_inf": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.sequence_mask": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.softmax_cross_entropy_with_logits": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "ray.rllib.utils.torch_ops.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "ray.rllib.utils.torch_ops.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.tracking_dict": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict.__getitem__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict.__init__",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict.__setitem__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict.copy": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict.copy",
    "ray.rllib.utils.tracking_dict.UsageTrackingDict"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.tracking_dict.UsageTrackingDict.set_get_interceptor": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.rllib.utils.try_import_tf": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tf"
  },
  "type": "import"
 },
 "ray.rllib.utils.try_import_tfp": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_tfp"
  },
  "type": "import"
 },
 "ray.rllib.utils.try_import_torch": {
  "data": {
   "shadows": "ray.rllib.utils.framework.try_import_torch"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.rllib.utils.typing.AgentID",
    "ray.rllib.utils.typing.EnvID",
    "ray.rllib.utils.typing.MultiAgentDict",
    "ray.rllib.utils.typing.PartialTrainerConfigDict",
    "ray.rllib.utils.typing.PolicyID",
    "ray.rllib.utils.typing.TensorType",
    "ray.rllib.utils.typing.gym",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "ray.rllib.utils.typing.AgentID": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing.EnvActionType": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EnvConfigDict": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EnvID": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EnvInfoDict": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EnvObsType": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EnvType": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.EpisodeID": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.FileType": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.FromConfigSpec": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.GradInfoDict": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.LearnerStatsDict": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing.LocalOptimizer": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.ModelConfigDict": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.ModelGradients": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.ModelWeights": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.MultiAgentDict": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.MultiAgentPolicyConfigDict": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.MultiEnvDict": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.PartialTrainerConfigDict": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.PolicyID": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.ResultDict": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.SampleBatchType": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.TensorShape": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.TensorStructType": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.TensorType": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.TrainerConfigDict": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.rllib.utils.typing.UnrollID": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.rllib.utils.typing.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "ray.rllib.utils.window_stat": {
  "data": {},
  "type": "module"
 },
 "ray.rllib.utils.window_stat.WindowStat": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.rllib.utils.window_stat.WindowStat.__init__": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "ray.rllib.utils.window_stat.WindowStat.push": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.window_stat.WindowStat.stats": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nanmean",
    "numpy.nanpercentile",
    "numpy.nanstd"
   ]
  },
  "type": "function"
 },
 "ray.rllib.utils.window_stat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.rllib.with_common_config": {
  "data": {
   "shadows": "ray.rllib.agents.trainer.with_common_config"
  },
  "type": "import"
 },
 "ray.runtime_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.runtime_context.logging"
   ]
  },
  "type": "module"
 },
 "ray.runtime_context.RuntimeContext": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.runtime_context.RuntimeContext.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.actor_id": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.current_placement_group_id": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.get": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.job_id": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.node_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.should_capture_child_tasks_in_placement_group": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.task_id": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.RuntimeContext.was_current_actor_reconstructed": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context._runtime_context": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "ray.runtime_context.get_runtime_context": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ray.runtime_context.RuntimeContext",
    "ray.runtime_context._runtime_context"
   ]
  },
  "type": "function"
 },
 "ray.runtime_context.logger": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.runtime_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.runtime_context.ray.worker": {
  "data": {
   "shadows": "ray.worker"
  },
  "type": "import"
 },
 "ray.scripts": {
  "data": {},
  "type": "module"
 },
 "ray.scripts.scripts": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "ray.autoscaler._private.cli_logger.cli_logger.VALID_LOG_STYLES",
    "ray.ray_perf.main",
    "ray.scripts.scripts.add_command_alias",
    "ray.scripts.scripts.attach",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.dashboard",
    "ray.scripts.scripts.down",
    "ray.scripts.scripts.exec",
    "ray.scripts.scripts.get_head_ip",
    "ray.scripts.scripts.get_worker_ips",
    "ray.scripts.scripts.global_gc",
    "ray.scripts.scripts.install_nightly",
    "ray.scripts.scripts.kill_random_node",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.logging",
    "ray.scripts.scripts.memory",
    "ray.scripts.scripts.microbenchmark",
    "ray.scripts.scripts.rsync_down",
    "ray.scripts.scripts.rsync_up",
    "ray.scripts.scripts.stack",
    "ray.scripts.scripts.start",
    "ray.scripts.scripts.status",
    "ray.scripts.scripts.stop",
    "ray.scripts.scripts.submit",
    "ray.scripts.scripts.timeline",
    "ray.scripts.scripts.up",
    "ray.serve.scripts.serve_cli"
   ]
  },
  "type": "module"
 },
 "ray.scripts.scripts.RUN_ENV_TYPES": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.RUN_ENV_TYPES"
  },
  "type": "import"
 },
 "ray.scripts.scripts.add_click_options": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "ray.scripts.scripts.add_click_options.wrapper": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "option",
    "ray.scripts.scripts.logging_options",
    "reversed"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.add_command_alias": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.copy"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.attach": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "int",
    "list",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.attach_cluster",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.start",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.attach_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.attach_cluster"
  },
  "type": "import"
 },
 "ray.scripts.scripts.cf": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cf"
  },
  "type": "import"
 },
 "ray.scripts.scripts.check_no_existing_redis_clients": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "ray.scripts.scripts.ray"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.cli": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.set_format",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging",
    "ray.scripts.scripts.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.cli_logger": {
  "data": {
   "shadows": "ray.autoscaler._private.cli_logger.cli_logger"
  },
  "type": "import"
 },
 "ray.scripts.scripts.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.scripts.scripts.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.scripts.scripts.create_or_update_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.create_or_update_cluster"
  },
  "type": "import"
 },
 "ray.scripts.scripts.dashboard": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "int",
    "ray.autoscaler._private.commands.exec_cluster",
    "ray.scripts.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.scripts.scripts.debug_status": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.debug_status"
  },
  "type": "import"
 },
 "ray.scripts.scripts.down": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.teardown_cluster",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.exec": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "int",
    "list",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.RUN_ENV_TYPES",
    "ray.autoscaler._private.commands.exec_cluster",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.start",
    "ray.scripts.scripts.stop",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.exec_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.exec_cluster"
  },
  "type": "import"
 },
 "ray.scripts.scripts.get_head_ip": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "ray.autoscaler._private.commands.get_head_node_ip",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.get_head_node_ip": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.get_head_node_ip"
  },
  "type": "import"
 },
 "ray.scripts.scripts.get_worker_ips": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "ray.autoscaler._private.commands.get_worker_node_ips",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.get_worker_node_ips": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.get_worker_node_ips"
  },
  "type": "import"
 },
 "ray.scripts.scripts.global_gc": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "print",
    "ray._private.services.find_redis_address_or_die",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.install_nightly": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "list",
    "open",
    "print",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.os",
    "ray.scripts.scripts.ray",
    "ray.scripts.scripts.subprocess",
    "ray.scripts.scripts.sys",
    "ray.scripts.scripts.yaml"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.scripts.scripts.kill_node": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.kill_node"
  },
  "type": "import"
 },
 "ray.scripts.scripts.kill_random_node": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ray.autoscaler._private.commands.kill_node",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.scripts.scripts.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.scripts.scripts.logging_options": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.scripts.scripts.main": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "ray.scripts.scripts.cli"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.memory": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "print",
    "ray._private.services.find_redis_address_or_die",
    "ray.ray_constants.REDIS_DEFAULT_PASSWORD",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.microbenchmark": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "ray.ray_perf.main",
    "ray.scripts.scripts.cli"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.monitor": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "int",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.monitor_cluster",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.monitor_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.monitor_cluster"
  },
  "type": "import"
 },
 "ray.scripts.scripts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.scripts.scripts.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.scripts.scripts.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.scripts.scripts.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.scripts.scripts.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.scripts.scripts.rsync": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.rsync"
  },
  "type": "import"
 },
 "ray.scripts.scripts.rsync_down": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.rsync",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.rsync_up": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.commands.rsync",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logging_options",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.serve_cli": {
  "data": {
   "shadows": "ray.serve.scripts.serve_cli"
  },
  "type": "import"
 },
 "ray.scripts.scripts.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.scripts.scripts.socket": {
  "data": {
   "shadows": "socket.socket"
  },
  "type": "import"
 },
 "ray.scripts.scripts.stack": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.start": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ConnectionError",
    "Exception",
    "ValueError",
    "bool",
    "int",
    "len",
    "ray._private.services.address_to_ip",
    "ray._private.services.check_version_info",
    "ray._private.services.create_redis_client",
    "ray._private.services.find_redis_address",
    "ray._private.services.get_node_ip_address",
    "ray._private.services.validate_redis_address",
    "ray._private.services.wait_for_redis_to_start",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cf.underlined",
    "ray.autoscaler._private.cli_logger.cf.with_style",
    "ray.autoscaler._private.cli_logger.cli_logger.abort",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.group",
    "ray.autoscaler._private.cli_logger.cli_logger.indented",
    "ray.autoscaler._private.cli_logger.cli_logger.labeled_value",
    "ray.autoscaler._private.cli_logger.cli_logger.newline",
    "ray.autoscaler._private.cli_logger.cli_logger.old_error",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.success",
    "ray.ray_constants.DEFAULT_DASHBOARD_PORT",
    "ray.ray_constants.DEFAULT_PORT",
    "ray.ray_constants.REDIS_DEFAULT_PASSWORD",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.check_no_existing_redis_clients",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.json",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.ray",
    "ray.scripts.scripts.sys",
    "ray.scripts.scripts.time",
    "socket.socket",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.status": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "print",
    "ray._private.services.find_redis_address_or_die",
    "ray.autoscaler._private.commands.debug_status",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.stop": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "len",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cf.dimmed",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.cli_logger.cli_logger.error",
    "ray.autoscaler._private.cli_logger.cli_logger.old_error",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.print",
    "ray.autoscaler._private.cli_logger.cli_logger.success",
    "ray.autoscaler._private.cli_logger.cli_logger.verbose",
    "ray.autoscaler._private.cli_logger.cli_logger.warning",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.psutil",
    "ray.scripts.scripts.subprocess",
    "ray.scripts.scripts.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.submit": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "int",
    "list",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.cli_logger.cli_logger.doassert",
    "ray.autoscaler._private.cli_logger.cli_logger.newline",
    "ray.autoscaler._private.cli_logger.cli_logger.old_warning",
    "ray.autoscaler._private.cli_logger.cli_logger.warning",
    "ray.autoscaler._private.commands.create_or_update_cluster",
    "ray.autoscaler._private.commands.exec_cluster",
    "ray.autoscaler._private.commands.rsync",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.os",
    "ray.scripts.scripts.start",
    "ray.scripts.scripts.stop",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.scripts.scripts.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.scripts.scripts.teardown_cluster": {
  "data": {
   "shadows": "ray.autoscaler._private.commands.teardown_cluster"
  },
  "type": "import"
 },
 "ray.scripts.scripts.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.scripts.scripts.timeline": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "ray._private.services.find_redis_address_or_die",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.os",
    "ray.scripts.scripts.ray",
    "ray.scripts.scripts.time",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.up": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "int",
    "open",
    "ray.autoscaler._private.cli_logger.cf.bold",
    "ray.autoscaler._private.cli_logger.cli_logger.configure",
    "ray.autoscaler._private.cli_logger.cli_logger.doassert",
    "ray.autoscaler._private.cli_logger.cli_logger.old_info",
    "ray.autoscaler._private.cli_logger.cli_logger.warning",
    "ray.autoscaler._private.commands.create_or_update_cluster",
    "ray.scripts.scripts.add_click_options",
    "ray.scripts.scripts.cli",
    "ray.scripts.scripts.click",
    "ray.scripts.scripts.logger",
    "ray.scripts.scripts.logging_options",
    "ray.scripts.scripts.urllib",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.scripts.scripts.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "ray.scripts.scripts.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "ray.scripts.scripts.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.serialization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.serialization.logging"
   ]
  },
  "type": "module"
 },
 "ray.serialization.CloudPickleError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.serialization.DeserializationError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.serialization.ErrorType": {
  "data": {
   "shadows": "ray.gcs_utils.ErrorType"
  },
  "type": "import"
 },
 "ray.serialization.JobID": {
  "data": {
   "shadows": "ray.JobID"
  },
  "type": "import"
 },
 "ray.serialization.MessagePackSerializedObject": {
  "data": {
   "shadows": "ray._raylet.MessagePackSerializedObject"
  },
  "type": "import"
 },
 "ray.serialization.MessagePackSerializer": {
  "data": {
   "shadows": "ray._raylet.MessagePackSerializer"
  },
  "type": "import"
 },
 "ray.serialization.ObjectLostError": {
  "data": {
   "shadows": "ray.exceptions.ObjectLostError"
  },
  "type": "import"
 },
 "ray.serialization.Pickle5SerializedObject": {
  "data": {
   "shadows": "ray._raylet.Pickle5SerializedObject"
  },
  "type": "import"
 },
 "ray.serialization.Pickle5Writer": {
  "data": {
   "shadows": "ray._raylet.Pickle5Writer"
  },
  "type": "import"
 },
 "ray.serialization.PlasmaObjectNotAvailable": {
  "data": {
   "shadows": "ray.exceptions.PlasmaObjectNotAvailable"
  },
  "type": "import"
 },
 "ray.serialization.RawSerializedObject": {
  "data": {
   "shadows": "ray._raylet.RawSerializedObject"
  },
  "type": "import"
 },
 "ray.serialization.RayActorError": {
  "data": {
   "shadows": "ray.exceptions.RayActorError"
  },
  "type": "import"
 },
 "ray.serialization.RayError": {
  "data": {
   "shadows": "ray.exceptions.RayError"
  },
  "type": "import"
 },
 "ray.serialization.RayNotDictionarySerializable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.serialization.RayTaskError": {
  "data": {
   "shadows": "ray.exceptions.RayTaskError"
  },
  "type": "import"
 },
 "ray.serialization.SerializationContext": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "ray.serialization.SerializationContext.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.serialization.threading"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.__init__.actor_handle_reducer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.serialization.actor_handle_deserializer"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.__init__.object_ref_reducer": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ray.serialization.object_ref_deserializer"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._deserialize_msgpack_data": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Exception",
    "ray._raylet.MessagePackSerializer.loads",
    "ray._raylet.split_buffer",
    "ray.ray_constants.OBJECT_METADATA_TYPE_PYTHON",
    "ray.serialization.DeserializationError"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._deserialize_msgpack_data._python_deserializer": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._deserialize_object": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "int",
    "ray.exceptions.ObjectLostError",
    "ray.exceptions.PlasmaObjectNotAvailable",
    "ray.exceptions.RayActorError",
    "ray.exceptions.RayError.from_bytes",
    "ray.exceptions.TaskCancelledError",
    "ray.exceptions.WorkerCrashedError",
    "ray.gcs_utils.ErrorType.Value",
    "ray.ray_constants.OBJECT_METADATA_TYPE_ACTOR_HANDLE",
    "ray.ray_constants.OBJECT_METADATA_TYPE_CROSS_LANGUAGE",
    "ray.ray_constants.OBJECT_METADATA_TYPE_PYTHON",
    "ray.ray_constants.OBJECT_METADATA_TYPE_RAW",
    "ray.serialization.actor_handle_deserializer",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._deserialize_pickle5_data": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "ray._raylet.unpack_pickle5_buffers",
    "ray.cloudpickle.loads",
    "ray.cloudpickle.pickle.PicklingError",
    "ray.serialization.DeserializationError"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._register_cloudpickle_reducer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.cloudpickle.CloudPickler.dispatch"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._register_cloudpickle_serializer": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.cloudpickle.CloudPickler.dispatch"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._register_cloudpickle_serializer._CloudPicklerReducer": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "custom_serializer"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._serialize_to_msgpack": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "isinstance",
    "ray._raylet.MessagePackSerializedObject",
    "ray._raylet.MessagePackSerializer.dumps",
    "ray.exceptions.RayTaskError",
    "ray.gcs_utils.ErrorType.Value",
    "ray.ray_constants.OBJECT_METADATA_TYPE_ACTOR_HANDLE",
    "ray.ray_constants.OBJECT_METADATA_TYPE_CROSS_LANGUAGE",
    "ray.ray_constants.OBJECT_METADATA_TYPE_PYTHON",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._serialize_to_msgpack._python_serializer": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext._serialize_to_pickle5": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Exception",
    "ray._raylet.Pickle5SerializedObject",
    "ray._raylet.Pickle5Writer",
    "ray.cloudpickle.dumps"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.add_contained_object_ref": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.deserialize_objects": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "len",
    "ray.ray_constants.WAIT_FOR_CLASS_PUSH_ERROR",
    "ray.serialization.DeserializationError",
    "ray.serialization.time"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.get_and_clear_contained_object_refs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.get_outer_object_ref": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.is_in_band_serialization": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.register_custom_serializer": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "isinstance",
    "ray.JobID",
    "ray.serialization._try_to_compute_deterministic_class_id",
    "ray.utils._random_string",
    "register_class_for_serialization"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.register_custom_serializer.register_class_for_serialization": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.serialize": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "ray._raylet.RawSerializedObject"
   ]
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.set_in_band_serialization": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.set_out_of_band_serialization": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "ray.serialization.SerializationContext.set_outer_object_ref": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "ray.serialization.TaskCancelledError": {
  "data": {
   "shadows": "ray.exceptions.TaskCancelledError"
  },
  "type": "import"
 },
 "ray.serialization.WorkerCrashedError": {
  "data": {
   "shadows": "ray.exceptions.WorkerCrashedError"
  },
  "type": "import"
 },
 "ray.serialization._random_string": {
  "data": {
   "shadows": "ray.utils._random_string"
  },
  "type": "import"
 },
 "ray.serialization._try_to_compute_deterministic_class_id": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "range",
    "ray.cloudpickle.dumps",
    "ray.cloudpickle.loads",
    "ray.serialization.hashlib",
    "ray.serialization.logger"
   ]
  },
  "type": "function"
 },
 "ray.serialization.actor_handle_deserializer": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "ray.serialization.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "ray.serialization.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.serialization.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.serialization.object_ref_deserializer": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "ray.serialization.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.serialization.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.serialization.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.serialization.split_buffer": {
  "data": {
   "shadows": "ray._raylet.split_buffer"
  },
  "type": "import"
 },
 "ray.serialization.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.serialization.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.serialization.unpack_pickle5_buffers": {
  "data": {
   "shadows": "ray._raylet.unpack_pickle5_buffers"
  },
  "type": "import"
 },
 "ray.serve": {
  "data": {},
  "type": "module"
 },
 "ray.serve.BackendConfig": {
  "data": {
   "shadows": "ray.serve.config.BackendConfig"
  },
  "type": "import"
 },
 "ray.serve.Client": {
  "data": {
   "shadows": "ray.serve.api.Client"
  },
  "type": "import"
 },
 "ray.serve.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.serve.accept_batch": {
  "data": {
   "shadows": "ray.serve.api.accept_batch"
  },
  "type": "import"
 },
 "ray.serve.api": {
  "data": {},
  "type": "module"
 },
 "ray.serve.api.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.serve.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.api.BackendConfig": {
  "data": {
   "shadows": "ray.serve.config.BackendConfig"
  },
  "type": "import"
 },
 "ray.serve.api.BackendMetadata": {
  "data": {
   "shadows": "ray.serve.config.BackendMetadata"
  },
  "type": "import"
 },
 "ray.serve.api.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.serve.api.Client": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "ray.serve.api.Client.__del__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.serve.utils.logger.info"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "ray.actor.ActorHandle",
    "ray.serve.api.atexit",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.__init__.shutdown_serve_client": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "ray.serve.api.Client.__reduce__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ray.serve.exceptions.RayServeException"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.create_backend": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "ray.serve.config.BackendConfig",
    "ray.serve.config.BackendConfig.parse_obj",
    "ray.serve.config.BackendMetadata",
    "ray.serve.config.ReplicaConfig",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.create_endpoint": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str",
    "type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.delete_backend": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.delete_endpoint": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.get_backend_config": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "ray.serve.config.BackendConfig",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.get_handle": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "bool",
    "filter",
    "list",
    "next",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.random",
    "ray.serve.api.ray",
    "ray.serve.handle.RayServeHandle",
    "ray.serve.utils.get_node_id_for_actor",
    "ray.serve.utils.logger.warning",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.list_backends": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.list_endpoints": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.set_traffic": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "float",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.shadow_traffic": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.shutdown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.serve.api.ray"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.Client.update_backend_config": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "ray.serve.api._ensure_connected",
    "ray.serve.api.ray",
    "ray.serve.config.BackendConfig",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.DEFAULT_HTTP_HOST": {
  "data": {
   "shadows": "ray.serve.constants.DEFAULT_HTTP_HOST"
  },
  "type": "import"
 },
 "ray.serve.api.DEFAULT_HTTP_PORT": {
  "data": {
   "shadows": "ray.serve.constants.DEFAULT_HTTP_PORT"
  },
  "type": "import"
 },
 "ray.serve.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.api.HTTP_PROXY_TIMEOUT": {
  "data": {
   "shadows": "ray.serve.constants.HTTP_PROXY_TIMEOUT"
  },
  "type": "import"
 },
 "ray.serve.api.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.api.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.serve.api.RayServeException": {
  "data": {
   "shadows": "ray.serve.exceptions.RayServeException"
  },
  "type": "import"
 },
 "ray.serve.api.RayServeHandle": {
  "data": {
   "shadows": "ray.serve.handle.RayServeHandle"
  },
  "type": "import"
 },
 "ray.serve.api.ReplicaConfig": {
  "data": {
   "shadows": "ray.serve.config.ReplicaConfig"
  },
  "type": "import"
 },
 "ray.serve.api.SERVE_CONTROLLER_NAME": {
  "data": {
   "shadows": "ray.serve.constants.SERVE_CONTROLLER_NAME"
  },
  "type": "import"
 },
 "ray.serve.api.ServeController": {
  "data": {
   "shadows": "ray.serve.controller.ServeController"
  },
  "type": "import"
 },
 "ray.serve.api.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.serve.api.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.serve.api._INTERNAL_CONTROLLER_NAME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.serve.api._ensure_connected": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.serve.api._ensure_connected.check": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "ray.serve.exceptions.RayServeException"
   ]
  },
  "type": "function"
 },
 "ray.serve.api._set_internal_controller_name": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.serve.api._INTERNAL_CONTROLLER_NAME"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.accept_batch": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "f",
    "f._serve_accept_batch",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.serve.api.block_until_http_ready": {
  "data": {
   "shadows": "ray.serve.utils.block_until_http_ready"
  },
  "type": "import"
 },
 "ray.serve.api.connect": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "ray.serve.api.Client",
    "ray.serve.api._INTERNAL_CONTROLLER_NAME",
    "ray.serve.api.ray",
    "ray.serve.constants.SERVE_CONTROLLER_NAME",
    "ray.serve.exceptions.RayServeException"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.format_actor_name": {
  "data": {
   "shadows": "ray.serve.utils.format_actor_name"
  },
  "type": "import"
 },
 "ray.serve.api.get_node_id_for_actor": {
  "data": {
   "shadows": "ray.serve.utils.get_node_id_for_actor"
  },
  "type": "import"
 },
 "ray.serve.api.get_random_letters": {
  "data": {
   "shadows": "ray.serve.utils.get_random_letters"
  },
  "type": "import"
 },
 "ray.serve.api.logger": {
  "data": {
   "shadows": "ray.serve.utils.logger"
  },
  "type": "import"
 },
 "ray.serve.api.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.serve.api.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.api.start": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "ray.serve.api.Client",
    "ray.serve.api.ray",
    "ray.serve.constants.DEFAULT_HTTP_HOST",
    "ray.serve.constants.DEFAULT_HTTP_PORT",
    "ray.serve.constants.HTTP_PROXY_TIMEOUT",
    "ray.serve.constants.SERVE_CONTROLLER_NAME",
    "ray.serve.controller.ServeController.options",
    "ray.serve.exceptions.RayServeException",
    "ray.serve.utils.block_until_http_ready.options",
    "ray.serve.utils.format_actor_name",
    "ray.serve.utils.get_random_letters",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.serve.api.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "ray.serve.autoscaling_policy": {
  "data": {},
  "type": "module"
 },
 "ray.serve.autoscaling_policy.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.serve.autoscaling_policy.AutoscalingPolicy": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "ray.serve.autoscaling_policy.AutoscalingPolicy.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.serve.autoscaling_policy.AutoscalingPolicy.scale": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.serve.autoscaling_policy.BasicAutoscalingPolicy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.serve.autoscaling_policy.AutoscalingPolicy"
   ]
  },
  "type": "class"
 },
 "ray.serve.autoscaling_policy.BasicAutoscalingPolicy.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.serve.autoscaling_policy.BasicAutoscalingPolicy.scale": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "list",
    "max",
    "min",
    "ray.serve.utils.logger.info",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.serve.autoscaling_policy.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.serve.autoscaling_policy.logger": {
  "data": {
   "shadows": "ray.serve.utils.logger"
  },
  "type": "import"
 },
 "ray.serve.backend_worker": {
  "data": {
   "symbols_in_volume": [
    "ray.serve.utils._get_logger"
   ]
  },
  "type": "module"
 },
 "ray.serve.backend_worker.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.BackendConfig": {
  "data": {
   "shadows": "ray.serve.config.BackendConfig"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.BatchQueue": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "max",
    "ray.serve.backend_worker.asyncio",
    "ray.serve.backend_worker.time",
    "ray.serve.router.Query",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "ray.serve.backend_worker.BatchQueue.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.serve.backend_worker.asyncio"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.BatchQueue.put": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.serve.router.Query"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.BatchQueue.qsize": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.BatchQueue.set_config": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.DEFAULT_LATENCY_BUCKET_MS": {
  "data": {
   "shadows": "ray.serve.constants.DEFAULT_LATENCY_BUCKET_MS"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.Query": {
  "data": {
   "shadows": "ray.serve.router.Query"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.RayServeException": {
  "data": {
   "shadows": "ray.serve.exceptions.RayServeException"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.RayServeWorker": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "call_method",
    "collections.abc.Iterable",
    "dict",
    "isinstance",
    "itertools.groupby",
    "len",
    "list",
    "method_to_call",
    "range",
    "ray.serve.backend_worker.asyncio",
    "ray.serve.backend_worker.ensure_async",
    "ray.serve.backend_worker.logger",
    "ray.serve.backend_worker.time",
    "ray.serve.backend_worker.wrap_to_ray_error",
    "ray.serve.exceptions.RayServeException",
    "ray.serve.router.Query",
    "ray.serve.router.Query.ray_deserialize",
    "ray.serve.utils.chain_future",
    "ray.serve.utils.parse_request_item",
    "ray.serve.utils.unpack_future",
    "set",
    "sorted",
    "str",
    "type",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "ray.serve.backend_worker.RayServeWorker.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bool",
    "ray.serve.backend_worker.BatchQueue",
    "ray.serve.backend_worker.asyncio",
    "ray.serve.config.BackendConfig",
    "ray.serve.constants.DEFAULT_LATENCY_BUCKET_MS",
    "ray.util.metrics.Count",
    "ray.util.metrics.Gauge",
    "ray.util.metrics.Histogram",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.RayServeWorker.get_runner_method": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "hasattr",
    "ray.serve.exceptions.RayServeException",
    "ray.serve.router.Query",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.RayServeWorker.update_config": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ray.serve.config.BackendConfig"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.RayTaskError": {
  "data": {
   "shadows": "ray.exceptions.RayTaskError"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.serve.backend_worker._get_logger": {
  "data": {
   "shadows": "ray.serve.utils._get_logger"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.chain_future": {
  "data": {
   "shadows": "ray.serve.utils.chain_future"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.create_backend_worker": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "func_or_class.__name__",
    "ray.serve.backend_worker.inspect",
    "typing.Callable",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.create_backend_worker.RayServeWrappedWorker": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.serve.backend_worker.create_backend_worker.RayServeWrappedWorker.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "func_or_class",
    "ray.serve.backend_worker.RayServeWorker",
    "ray.serve.backend_worker.ray",
    "ray.serve.config.BackendConfig",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.create_backend_worker.RayServeWrappedWorker.ready": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ray.serve.backend_worker.create_backend_worker.RayServeWrappedWorker.update_config": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.serve.config.BackendConfig"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.ensure_async": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.async_compat.sync_to_async",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.serve.backend_worker.groupby": {
  "data": {
   "shadows": "itertools.groupby"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.serve.backend_worker.metrics": {
  "data": {
   "shadows": "ray.util.metrics"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.parse_request_item": {
  "data": {
   "shadows": "ray.serve.utils.parse_request_item"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.sync_to_async": {
  "data": {
   "shadows": "ray.async_compat.sync_to_async"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.unpack_future": {
  "data": {
   "shadows": "ray.serve.utils.unpack_future"
  },
  "type": "import"
 },
 "ray.serve.backend_worker.wrap_to_ray_error": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Exception",
    "ray.exceptions.RayTaskError",
    "ray.serve.backend_worker.ray",
    "ray.serve.backend_worker.traceback",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.config": {
  "data": {},
  "type": "module"
 },
 "ray.serve.config.ASYNC_CONCURRENCY": {
  "data": {
   "shadows": "ray.serve.constants.ASYNC_CONCURRENCY"
  },
  "type": "import"
 },
 "ray.serve.config.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.config.BackendConfig": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "int",
    "pydantic.BaseModel",
    "pydantic.PositiveInt",
    "ray.serve.config.BackendMetadata",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.serve.config.BackendConfig.Config": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "ray.serve.config.BackendConfig._validate_batch_size": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.serve.config.BackendConfig._validate_complete": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.serve.config.BackendConfig.set_max_queries_by_mode": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pydantic.validator",
    "ray.serve.constants.ASYNC_CONCURRENCY"
   ]
  },
  "type": "function"
 },
 "ray.serve.config.BackendMetadata": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.serve.config.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "ray.serve.config.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.config.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.serve.config.PositiveInt": {
  "data": {
   "shadows": "pydantic.PositiveInt"
  },
  "type": "import"
 },
 "ray.serve.config.ReplicaConfig": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "ray.serve.config.ReplicaConfig.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "list",
    "ray.serve.config._callable_accepts_batch",
    "ray.serve.config._callable_is_blocking"
   ]
  },
  "type": "function"
 },
 "ray.serve.config.ReplicaConfig._validate": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "ray.serve.config.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.config._callable_accepts_batch": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "hasattr",
    "ray.serve.config.inspect"
   ]
  },
  "type": "function"
 },
 "ray.serve.config._callable_is_blocking": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.serve.config.inspect"
   ]
  },
  "type": "function"
 },
 "ray.serve.config.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "ray.serve.config.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.serve.config.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "ray.serve.connect": {
  "data": {
   "shadows": "ray.serve.api.connect"
  },
  "type": "import"
 },
 "ray.serve.constants": {
  "data": {
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "module"
 },
 "ray.serve.constants.ASYNC_CONCURRENCY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.serve.constants.DEFAULT_HTTP_ADDRESS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.serve.constants.DEFAULT_HTTP_HOST": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.serve.constants.DEFAULT_HTTP_PORT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.serve.constants.DEFAULT_LATENCY_BUCKET_MS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.serve.constants.HTTP_PROXY_TIMEOUT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.serve.constants.SERVE_CONTROLLER_NAME": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ray.serve.constants.SERVE_PROXY_NAME": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.serve.context": {
  "data": {},
  "type": "module"
 },
 "ray.serve.context.IntEnum": {
  "data": {
   "shadows": "enum.IntEnum"
  },
  "type": "import"
 },
 "ray.serve.context.TaskContext": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "enum.IntEnum"
   ]
  },
  "type": "class"
 },
 "ray.serve.controller": {
  "data": {},
  "type": "module"
 },
 "ray.serve.controller.ASYNC_CONCURRENCY": {
  "data": {
   "shadows": "ray.serve.constants.ASYNC_CONCURRENCY"
  },
  "type": "import"
 },
 "ray.serve.controller.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.serve.controller.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.controller.BackendConfig": {
  "data": {
   "shadows": "ray.serve.config.BackendConfig"
  },
  "type": "import"
 },
 "ray.serve.controller.BackendInfo": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pydantic.BaseModel",
    "ray.serve.config.BackendConfig",
    "ray.serve.config.ReplicaConfig",
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "ray.serve.controller.BackendInfo.Config": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "ray.serve.controller.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "ray.serve.controller.BasicAutoscalingPolicy": {
  "data": {
   "shadows": "ray.serve.autoscaling_policy.BasicAutoscalingPolicy"
  },
  "type": "import"
 },
 "ray.serve.controller.CHECKPOINT_KEY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.serve.controller.CONTROL_LOOP_PERIOD_S": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.serve.controller.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.controller.HTTPProxyActor": {
  "data": {
   "shadows": "ray.serve.http_proxy.HTTPProxyActor"
  },
  "type": "import"
 },
 "ray.serve.controller.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.controller.RayInternalKVStore": {
  "data": {
   "shadows": "ray.serve.kv_store.RayInternalKVStore"
  },
  "type": "import"
 },
 "ray.serve.controller.RayServeException": {
  "data": {
   "shadows": "ray.serve.exceptions.RayServeException"
  },
  "type": "import"
 },
 "ray.serve.controller.ReplicaConfig": {
  "data": {
   "shadows": "ray.serve.config.ReplicaConfig"
  },
  "type": "import"
 },
 "ray.serve.controller.SERVE_PROXY_NAME": {
  "data": {
   "shadows": "ray.serve.constants.SERVE_PROXY_NAME"
  },
  "type": "import"
 },
 "ray.serve.controller.ServeController": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bytes",
    "collections.defaultdict",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "ray.actor.ActorHandle",
    "ray.cloudpickle.loads",
    "ray.serve.autoscaling_policy.BasicAutoscalingPolicy",
    "ray.serve.backend_worker.create_backend_worker",
    "ray.serve.config.BackendConfig",
    "ray.serve.config.ReplicaConfig",
    "ray.serve.constants.SERVE_PROXY_NAME",
    "ray.serve.controller.BackendInfo",
    "ray.serve.controller.CHECKPOINT_KEY",
    "ray.serve.controller.CONTROL_LOOP_PERIOD_S",
    "ray.serve.controller.TrafficPolicy",
    "ray.serve.controller.asyncio",
    "ray.serve.controller.ray",
    "ray.serve.controller.time",
    "ray.serve.exceptions.RayServeException",
    "ray.serve.kv_store.RayInternalKVStore",
    "ray.serve.utils.format_actor_name",
    "ray.serve.utils.logger.debug",
    "ray.serve.utils.logger.info",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "ray.serve.controller.ServeController._checkpoint": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "list",
    "ray.cloudpickle.dumps",
    "ray.serve.controller.CHECKPOINT_KEY",
    "ray.serve.controller._CRASH_AFTER_CHECKPOINT_PROBABILITY",
    "ray.serve.controller.os",
    "ray.serve.controller.random",
    "ray.serve.controller.time",
    "ray.serve.utils.logger.debug",
    "ray.serve.utils.logger.warning"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController._list_replicas": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController._scale_replicas": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "all",
    "int",
    "len",
    "range",
    "ray.serve.controller._RESOURCE_CHECK_ENABLED",
    "ray.serve.exceptions.RayServeException",
    "ray.serve.utils.get_random_letters",
    "ray.serve.utils.logger.debug",
    "ray.serve.utils.try_schedule_resources_on_nodes",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController._start_routers_if_needed": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "ray.serve.constants.ASYNC_CONCURRENCY",
    "ray.serve.constants.SERVE_PROXY_NAME",
    "ray.serve.controller.ray",
    "ray.serve.http_proxy.HTTPProxyActor.options",
    "ray.serve.utils.format_actor_name",
    "ray.serve.utils.get_all_node_ids",
    "ray.serve.utils.logger.info"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController._stop_routers_if_needed": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "bool",
    "ray.serve.controller.ray",
    "ray.serve.utils.get_all_node_ids",
    "ray.serve.utils.logger.info"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_all_backends": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_all_endpoints": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_all_worker_handles": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ray.actor.ActorHandle",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_backend_config": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "ray.serve.config.BackendConfig",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_backend_configs": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ray.serve.config.BackendConfig",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_router_config": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_routers": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ray.actor.ActorHandle",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_traffic_policies": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ray.serve.controller.TrafficPolicy",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.ServeController.get_traffic_policy": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ray.serve.controller.TrafficPolicy",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.TrafficPolicy": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "ray.serve.controller.TrafficPolicy.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.TrafficPolicy.set_shadow": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.TrafficPolicy.set_traffic_dict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.isclose",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.serve.controller.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.serve.controller.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.serve.controller._CRASH_AFTER_CHECKPOINT_PROBABILITY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.serve.controller._RESOURCE_CHECK_ENABLED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.serve.controller.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.serve.controller.create_backend_worker": {
  "data": {
   "shadows": "ray.serve.backend_worker.create_backend_worker"
  },
  "type": "import"
 },
 "ray.serve.controller.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.serve.controller.format_actor_name": {
  "data": {
   "shadows": "ray.serve.utils.format_actor_name"
  },
  "type": "import"
 },
 "ray.serve.controller.get_all_node_ids": {
  "data": {
   "shadows": "ray.serve.utils.get_all_node_ids"
  },
  "type": "import"
 },
 "ray.serve.controller.get_random_letters": {
  "data": {
   "shadows": "ray.serve.utils.get_random_letters"
  },
  "type": "import"
 },
 "ray.serve.controller.logger": {
  "data": {
   "shadows": "ray.serve.utils.logger"
  },
  "type": "import"
 },
 "ray.serve.controller.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.serve.controller.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.serve.controller.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.serve.controller.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.serve.controller.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.controller.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.serve.controller.try_schedule_resources_on_nodes": {
  "data": {
   "shadows": "ray.serve.utils.try_schedule_resources_on_nodes"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy": {
  "data": {},
  "type": "module"
 },
 "ray.serve.endpoint_policy.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy.EndpointPolicy": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "ray.serve.endpoint_policy.EndpointPolicy.flush": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.serve.endpoint_policy.RandomEndpointPolicy": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.serve.endpoint_policy.EndpointPolicy"
   ]
  },
  "type": "class"
 },
 "ray.serve.endpoint_policy.RandomEndpointPolicy.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.serve.endpoint_policy.RandomEndpointPolicy._select_backends": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.serve.endpoint_policy.RandomEndpointPolicy.flush": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hashlib.sha256",
    "len",
    "numpy.frombuffer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.uint32",
    "ray.serve.endpoint_policy.copy",
    "ray.serve.utils.logger.info",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.serve.endpoint_policy.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy.logger": {
  "data": {
   "shadows": "ray.serve.utils.logger"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.serve.endpoint_policy.sha256": {
  "data": {
   "shadows": "hashlib.sha256"
  },
  "type": "import"
 },
 "ray.serve.exceptions": {
  "data": {},
  "type": "module"
 },
 "ray.serve.exceptions.RayServeException": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.serve.handle": {
  "data": {},
  "type": "module"
 },
 "ray.serve.handle.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.handle.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.handle.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.serve.handle.RayServeHandle": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.serve.handle.RayServeHandle.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.serve.handle.RayServeHandle.__repr__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "ray.serve.handle.RayServeHandle.options": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.serve.handle.RayServeHandle",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.serve.handle.RayServeHandle.remote": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "ray.serve.context.TaskContext.Python",
    "ray.serve.router.RequestMetadata",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.serve.handle.RequestMetadata": {
  "data": {
   "shadows": "ray.serve.router.RequestMetadata"
  },
  "type": "import"
 },
 "ray.serve.handle.TaskContext": {
  "data": {
   "shadows": "ray.serve.context.TaskContext"
  },
  "type": "import"
 },
 "ray.serve.handle.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.serve.http_proxy": {
  "data": {},
  "type": "module"
 },
 "ray.serve.http_proxy.HTTPProxy": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "KeyError",
    "error_sender",
    "isinstance",
    "ray.exceptions.RayTaskError",
    "ray.serve.context.TaskContext.Web",
    "ray.serve.http_proxy.ray",
    "ray.serve.http_util.Response",
    "ray.serve.router.RequestMetadata",
    "ray.serve.router.Router",
    "ray.util.metrics.Count",
    "receive"
   ]
  },
  "type": "class"
 },
 "ray.serve.http_proxy.HTTPProxy._make_error_sender": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.serve.http_util.Response",
    "receive"
   ]
  },
  "type": "function"
 },
 "ray.serve.http_proxy.HTTPProxy.set_route_table": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ray.serve.http_proxy.HTTPProxyActor": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "hasattr",
    "ray.serve.http_proxy.HTTPProxy",
    "ray.serve.http_proxy.asyncio",
    "ray.serve.http_proxy.ray",
    "ray.serve.http_proxy.socket",
    "ray.serve.http_proxy.uvicorn",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "ray.serve.http_proxy.HTTPProxyActor.ready": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.serve.http_proxy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.MAX_ACTOR_DEAD_RETRIES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.serve.http_proxy.RayTaskError": {
  "data": {
   "shadows": "ray.exceptions.RayTaskError"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.RequestMetadata": {
  "data": {
   "shadows": "ray.serve.router.RequestMetadata"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.Response": {
  "data": {
   "shadows": "ray.serve.http_util.Response"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.Router": {
  "data": {
   "shadows": "ray.serve.router.Router"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.TaskContext": {
  "data": {
   "shadows": "ray.serve.context.TaskContext"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.metrics": {
  "data": {
   "shadows": "ray.util.metrics"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.serve.http_proxy.uvicorn": {
  "data": {
   "shadows": "uvicorn"
  },
  "type": "import"
 },
 "ray.serve.http_util": {
  "data": {},
  "type": "module"
 },
 "ray.serve.http_util.Response": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "send"
   ]
  },
  "type": "class"
 },
 "ray.serve.http_util.Response.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "ray.serve.http_util.json",
    "ray.serve.utils.ServeEncoder",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.http_util.Response.set_content_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.serve.http_util.ServeEncoder": {
  "data": {
   "shadows": "ray.serve.utils.ServeEncoder"
  },
  "type": "import"
 },
 "ray.serve.http_util.build_flask_request": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.serve.http_util.build_wsgi_environ",
    "ray.serve.http_util.flask"
   ]
  },
  "type": "function"
 },
 "ray.serve.http_util.build_wsgi_environ": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.serve.http_util.io",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.serve.http_util.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "ray.serve.http_util.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.serve.http_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.serve.kv_store": {
  "data": {},
  "type": "module"
 },
 "ray.serve.kv_store.RayInternalKVStore": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.serve.kv_store.RayInternalKVStore.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.kv_store.RayInternalKVStore._format_key": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.serve.kv_store.RayInternalKVStore.delete": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.experimental.internal_kv._internal_kv_del",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.kv_store.RayInternalKVStore.get": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.experimental.internal_kv._internal_kv_get",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.kv_store.RayInternalKVStore.put": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "ray.experimental.internal_kv._internal_kv_put",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.kv_store.ray_kv": {
  "data": {
   "shadows": "ray.experimental.internal_kv"
  },
  "type": "import"
 },
 "ray.serve.router": {
  "data": {},
  "type": "module"
 },
 "ray.serve.router.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.serve.router.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "ray.serve.router.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.router.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.router.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.serve.router.Query": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "float",
    "ray.serve.context.TaskContext",
    "ray.serve.router.RequestMetadata",
    "ray.serve.router.asyncio",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.serve.router.Query.__reduce__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.router.Query.ray_deserialize": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.serve.router.Query",
    "ray.serve.router.pickle",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.serve.router.Query.ray_serialize": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.serve.router.copy",
    "ray.serve.router.pickle"
   ]
  },
  "type": "function"
 },
 "ray.serve.router.REPORT_QUEUE_LENGTH_PERIOD_S": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.serve.router.RandomEndpointPolicy": {
  "data": {
   "shadows": "ray.serve.endpoint_policy.RandomEndpointPolicy"
  },
  "type": "import"
 },
 "ray.serve.router.RayTaskError": {
  "data": {
   "shadows": "ray.exceptions.RayTaskError"
  },
  "type": "import"
 },
 "ray.serve.router.RequestMetadata": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "ray.serve.context.TaskContext",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.serve.router.RequestMetadata.__post_init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.serve.router.Router": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "collections.deque",
    "dict",
    "int",
    "len",
    "ray.exceptions.RayTaskError",
    "ray.serve.endpoint_policy.RandomEndpointPolicy",
    "ray.serve.router.Query",
    "ray.serve.router.REPORT_QUEUE_LENGTH_PERIOD_S",
    "ray.serve.router.asyncio",
    "ray.serve.router.ray",
    "ray.serve.router.time",
    "ray.serve.utils.logger.debug",
    "ray.util.metrics.Count",
    "ray.util.metrics.Gauge",
    "str",
    "typing.DefaultDict"
   ]
  },
  "type": "class"
 },
 "ray.serve.router.Router._assign_query_to_worker": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "ray.serve.router.asyncio",
    "ray.serve.utils.chain_future",
    "ray.serve.utils.logger.debug",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.serve.router.Router.flush_backend_queues": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "ray.serve.utils.logger.debug"
   ]
  },
  "type": "function"
 },
 "ray.serve.router.Router.flush_endpoint_queue": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "ray.serve.router.TaskContext": {
  "data": {
   "shadows": "ray.serve.context.TaskContext"
  },
  "type": "import"
 },
 "ray.serve.router.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.serve.router.chain_future": {
  "data": {
   "shadows": "ray.serve.utils.chain_future"
  },
  "type": "import"
 },
 "ray.serve.router.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.serve.router.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "ray.serve.router.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.serve.router.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.serve.router.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "ray.serve.router.logger": {
  "data": {
   "shadows": "ray.serve.utils.logger"
  },
  "type": "import"
 },
 "ray.serve.router.metrics": {
  "data": {
   "shadows": "ray.util.metrics"
  },
  "type": "import"
 },
 "ray.serve.router.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.serve.router.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.router.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.serve.start": {
  "data": {
   "shadows": "ray.serve.api.start"
  },
  "type": "import"
 },
 "ray.serve.utils": {
  "data": {
   "symbols_in_volume": [
    "ray.serve.utils._get_logger"
   ]
  },
  "type": "module"
 },
 "ray.serve.utils.ACTOR_FAILURE_RETRY_TIMEOUT_S": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.serve.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.serve.utils.HTTP_PROXY_TIMEOUT": {
  "data": {
   "shadows": "ray.serve.constants.HTTP_PROXY_TIMEOUT"
  },
  "type": "import"
 },
 "ray.serve.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.serve.utils.RayServeException": {
  "data": {
   "shadows": "ray.serve.exceptions.RayServeException"
  },
  "type": "import"
 },
 "ray.serve.utils.ServeEncoder": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.serve.utils.json"
   ]
  },
  "type": "class"
 },
 "ray.serve.utils.ServeEncoder.default": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "float",
    "int",
    "isinstance",
    "numpy.ndarray",
    "ray.serve.utils.pydantic",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeMultiDict": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "collections.UserDict"
   ]
  },
  "type": "class"
 },
 "ray.serve.utils.ServeMultiDict.getlist": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "ray.serve.utils.ServeRequest.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.serve.utils.ServeMultiDict"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.args": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.data": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.form": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "property",
    "ray.serve.exceptions.RayServeException",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.headers": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.json": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "property",
    "ray.serve.exceptions.RayServeException",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.ServeRequest.method": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.TaskContext": {
  "data": {
   "shadows": "ray.serve.context.TaskContext"
  },
  "type": "import"
 },
 "ray.serve.utils.UserDict": {
  "data": {
   "shadows": "collections.UserDict"
  },
  "type": "import"
 },
 "ray.serve.utils._chain_future_list": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "ray.serve.utils.asyncio",
    "ray.serve.utils.chain_future",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils._chain_future_single": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ray.serve.utils.asyncio",
    "ray.serve.utils.chain_future"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils._get_logger": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.serve.utils.logging",
    "ray.serve.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.serve.utils.block_until_http_ready": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Exception",
    "TimeoutError",
    "ray.serve.constants.HTTP_PROXY_TIMEOUT",
    "ray.serve.utils.ray",
    "ray.serve.utils.requests",
    "ray.serve.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.build_flask_request": {
  "data": {
   "shadows": "ray.serve.http_util.build_flask_request"
  },
  "type": "import"
 },
 "ray.serve.utils.chain_future": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.singledispatch"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "ray.serve.utils.format_actor_name": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "ray.serve.utils.get_all_node_ids": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "enumerate",
    "itertools.groupby",
    "ray.serve.utils.ray",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.get_node_id_for_actor": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ray.serve.utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.get_random_letters": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ray.serve.utils.random",
    "ray.serve.utils.string"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.groupby": {
  "data": {
   "shadows": "itertools.groupby"
  },
  "type": "import"
 },
 "ray.serve.utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.serve.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.serve.utils.logger": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "ray.serve.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.serve.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.serve.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.serve.utils.parse_request_item": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "ray.serve.context.TaskContext.Web",
    "ray.serve.http_util.build_flask_request",
    "ray.serve.utils.ServeRequest",
    "ray.serve.utils.flask",
    "ray.serve.utils.io"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.pydantic": {
  "data": {
   "shadows": "pydantic"
  },
  "type": "import"
 },
 "ray.serve.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.serve.utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.serve.utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "ray.serve.utils.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "ray.serve.utils.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "ray.serve.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.serve.utils.try_schedule_resources_on_nodes": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bool",
    "dict",
    "ray.serve.utils.ray",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.unpack_future": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "int",
    "range",
    "ray.serve.utils.asyncio",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.serve.utils.unpack_future.unwrap_callback": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "ray.serve.utils.asyncio",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.services": {
  "data": {},
  "type": "module"
 },
 "ray.services.get_node_ip_address": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.services.ray"
   ]
  },
  "type": "function"
 },
 "ray.services.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.setup-dev": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "ray.setup-dev.argparse",
    "ray.setup-dev.args",
    "ray.setup-dev.do_link",
    "ray.setup-dev.parser"
   ]
  },
  "type": "module"
 },
 "ray.setup-dev.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.setup-dev.args": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.setup-dev.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.setup-dev.do_link": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "print",
    "ray.setup-dev.click",
    "ray.setup-dev.os",
    "ray.setup-dev.ray",
    "ray.setup-dev.shutil",
    "ray.setup-dev.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.setup-dev.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.setup-dev.parser": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.setup-dev.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.setup-dev.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.setup-dev.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.show_in_dashboard": {
  "data": {
   "shadows": "ray.worker.show_in_dashboard"
  },
  "type": "import"
 },
 "ray.shutdown": {
  "data": {
   "shadows": "ray.worker.shutdown"
  },
  "type": "import"
 },
 "ray.signature": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.signature.logging"
   ]
  },
  "type": "module"
 },
 "ray.signature.DUMMY_TYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.signature.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "ray.signature._convert_from_parameter_kind": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL"
   ]
  },
  "type": "function"
 },
 "ray.signature._convert_to_parameter_kind": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL"
   ]
  },
  "type": "function"
 },
 "ray.signature.extract_signature": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "ray.signature.get_signature"
   ]
  },
  "type": "function"
 },
 "ray.signature.flatten_args": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "ray.signature.DUMMY_TYPE",
    "ray.signature.inspect",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.signature.get_signature": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "getattr",
    "hasattr",
    "ray.signature.inspect",
    "ray.utils.is_cython",
    "setattr"
   ]
  },
  "type": "function"
 },
 "ray.signature.get_signature.func": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ray.signature.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.signature.is_cython": {
  "data": {
   "shadows": "ray.utils.is_cython"
  },
  "type": "import"
 },
 "ray.signature.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.signature.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.signature.recover_args": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.signature.DUMMY_TYPE"
   ]
  },
  "type": "function"
 },
 "ray.so_path": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.state": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.state.GlobalState",
    "ray.state.logging"
   ]
  },
  "type": "module"
 },
 "ray.state.GlobalState": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "class"
 },
 "ray.state.GlobalState.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.state.GlobalState._available_resources_per_node": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._check_connected": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._execute_command": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._gen_actor_info": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._gen_object_info": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._gen_placement_group_info": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "get_state",
    "get_strategy",
    "google.protobuf.json_format.MessageToDict",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._gen_placement_group_info.get_state": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._gen_placement_group_info.get_strategy": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "ray.core.generated.common_pb2.PlacementStrategy",
    "ray.core.generated.common_pb2.PlacementStrategy.PACK",
    "ray.core.generated.common_pb2.PlacementStrategy.SPREAD",
    "ray.core.generated.common_pb2.PlacementStrategy.STRICT_PACK",
    "ray.core.generated.common_pb2.PlacementStrategy.STRICT_SPREAD"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._initialize_global_state": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TimeoutError",
    "int",
    "len",
    "print",
    "ray._private.services.create_redis_client",
    "ray._raylet.GlobalStateAccessor",
    "ray.state.time"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._job_length": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "max",
    "min",
    "ray.state.sys",
    "ray.state.time"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._keys": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState._live_client_ids": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "ray.state.GlobalState._seconds_to_microseconds": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "ray.state.GlobalState.actor_checkpoint_info": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "list",
    "ray.gcs_utils.ActorCheckpointIdData.FromString",
    "ray.gcs_utils.GcsEntry.FromString",
    "ray.gcs_utils.TablePrefix.Value",
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.actor_table": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.gcs_utils.ActorTableData.FromString",
    "ray.state.ray",
    "ray.utils.binary_to_hex",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.add_worker": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "bytes",
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.available_resources": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.chrome_tracing_dump": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "open",
    "ray.state.json"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.chrome_tracing_object_transfer_dump": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "int",
    "len",
    "open",
    "ray.state.json"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.cluster_resources": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.disconnect": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "ray.state.GlobalState.job_table": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.gcs_utils.JobTableData.FromString"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.node_resource_table": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ray.gcs_utils.ResourceMap.FromString",
    "ray.state.ray",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.node_table": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ray.gcs_utils.GcsNodeInfo.FromString",
    "ray.gcs_utils.GcsNodeInfo.GcsNodeState.Value",
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.object_table": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.gcs_utils.ObjectLocationInfo.FromString",
    "ray.state.ray",
    "ray.utils.binary_to_hex",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.placement_group_table": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.gcs_utils.PlacementGroupTableData.FromString",
    "ray.state.ray",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.profile_table": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dict",
    "len",
    "list",
    "range",
    "ray.gcs_utils.ProfileTableData.FromString",
    "ray.state.json",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalState.workers": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.gcs_utils.WORKER",
    "ray.gcs_utils.WorkerTableData.FromString",
    "ray.utils.binary_to_hex",
    "ray.utils.decode"
   ]
  },
  "type": "function"
 },
 "ray.state.GlobalStateAccessor": {
  "data": {
   "shadows": "ray._raylet.GlobalStateAccessor"
  },
  "type": "import"
 },
 "ray.state.MessageToDict": {
  "data": {
   "shadows": "google.protobuf.json_format.MessageToDict"
  },
  "type": "import"
 },
 "ray.state.PlacementStrategy": {
  "data": {
   "shadows": "ray.core.generated.common_pb2.PlacementStrategy"
  },
  "type": "import"
 },
 "ray.state.actors": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.available_resources": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.state.cluster_resources": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.current_node_id": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.decode": {
  "data": {
   "shadows": "ray.utils.decode"
  },
  "type": "import"
 },
 "ray.state.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.state.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.state.hex_to_binary": {
  "data": {
   "shadows": "ray.utils.hex_to_binary"
  },
  "type": "import"
 },
 "ray.state.jobs": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.state.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.state.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.state.node_ids": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "ray.state.nodes",
    "ray.state.ray"
   ]
  },
  "type": "function"
 },
 "ray.state.nodes": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.object_transfer_timeline": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.objects": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.state.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.state.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.state.state": {
  "data": {
   "lineno": 842
  },
  "type": "constant"
 },
 "ray.state.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.state.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.state.timeline": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "ray.state.state"
   ]
  },
  "type": "function"
 },
 "ray.streaming": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.context.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.streaming.collector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.collector.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.collector.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.collector.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.streaming.collector.ChannelID": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.ChannelID"
  },
  "type": "import"
 },
 "ray.streaming.collector.CollectionCollector": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.streaming.collector.Collector"
   ]
  },
  "type": "class"
 },
 "ray.streaming.collector.CollectionCollector.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.streaming.collector.CollectionCollector.collect": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.collector.Collector": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.collector.Collector.collect": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.collector.DataWriter": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.DataWriter"
  },
  "type": "import"
 },
 "ray.streaming.collector.Language": {
  "data": {
   "shadows": "ray.Language"
  },
  "type": "import"
 },
 "ray.streaming.collector.OutputCollector": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.streaming.collector.Collector"
   ]
  },
  "type": "class"
 },
 "ray.streaming.collector.OutputCollector.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "ray.Language.JAVA",
    "ray.Language.PYTHON",
    "ray.actor.ActorHandle",
    "ray.streaming.collector.logger",
    "ray.streaming.collector.typing",
    "ray.streaming.function.Language.JAVA",
    "ray.streaming.function.Language.PYTHON",
    "ray.streaming.partition.Partition",
    "ray.streaming.runtime.serialization.CrossLangSerializer",
    "ray.streaming.runtime.serialization.PythonSerializer",
    "ray.streaming.runtime.transfer.ChannelID",
    "ray.streaming.runtime.transfer.DataWriter",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.collector.OutputCollector.collect": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bytes",
    "len",
    "ray.streaming.function.Language.PYTHON",
    "ray.streaming.runtime.serialization.CROSS_LANG_TYPE_ID",
    "ray.streaming.runtime.serialization.PYTHON_TYPE_ID"
   ]
  },
  "type": "function"
 },
 "ray.streaming.collector.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.collector.function": {
  "data": {
   "shadows": "ray.streaming.function"
  },
  "type": "import"
 },
 "ray.streaming.collector.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.streaming.collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.collector.message": {
  "data": {
   "shadows": "ray.streaming.message"
  },
  "type": "import"
 },
 "ray.streaming.collector.partition": {
  "data": {
   "shadows": "ray.streaming.partition"
  },
  "type": "import"
 },
 "ray.streaming.collector.serialization": {
  "data": {
   "shadows": "ray.streaming.runtime.serialization"
  },
  "type": "import"
 },
 "ray.streaming.collector.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "ray.streaming.config": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.config.Config": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "ray.streaming.config.ConfigHelper": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.streaming.config.ConfigHelper.get_cp_context_backend_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.streaming.config.Config",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.config.ConfigHelper.get_cp_local_file_root_dir": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.streaming.config.Config",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.context.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.context.CollectionSourceFunction": {
  "data": {
   "shadows": "ray.streaming.function.CollectionSourceFunction"
  },
  "type": "import"
 },
 "ray.streaming.context.GatewayClient": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client.GatewayClient"
  },
  "type": "import"
 },
 "ray.streaming.context.LocalFileSourceFunction": {
  "data": {
   "shadows": "ray.streaming.function.LocalFileSourceFunction"
  },
  "type": "import"
 },
 "ray.streaming.context.RuntimeContext": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.context.RuntimeContext.get_config": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContext.get_job_config": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContext.get_parallelism": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContext.get_task_id": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContext.get_task_index": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.streaming.context.RuntimeContext"
   ]
  },
  "type": "class"
 },
 "ray.streaming.context.RuntimeContextImpl.__init__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl.get_config": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl.get_job_config": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl.get_parallelism": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl.get_task_id": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "ray.streaming.context.RuntimeContextImpl.get_task_index": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ray.streaming.context.SourceFunction": {
  "data": {
   "shadows": "ray.streaming.function.SourceFunction"
  },
  "type": "import"
 },
 "ray.streaming.context.StreamSource": {
  "data": {
   "shadows": "ray.streaming.datastream.StreamSource"
  },
  "type": "import"
 },
 "ray.streaming.context.StreamingContext": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.streaming.context.StreamingContext.Builder": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "ray.streaming.context.StreamingContext.Builder.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.Builder.build": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.streaming.context.StreamingContext"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.Builder.option": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.streaming.runtime.gateway_client.GatewayClient"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext._gateway_client": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.execute": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.from_collection": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ray.streaming.function.CollectionSourceFunction"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.from_values": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.read_text_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.streaming.function.LocalFileSourceFunction",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.source": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.streaming.datastream.StreamSource.build_source",
    "ray.streaming.function.SourceFunction"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.StreamingContext.submit": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.context.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.function": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.function.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.function.CollectionSourceFunction": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.streaming.function.SourceFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.CollectionSourceFunction.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ray.streaming.function.CollectionSourceFunction.fetch": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.streaming.function.SourceContext"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.CollectionSourceFunction.init": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "ray.streaming.function.EmptyFunction": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.EmptyFunction.close": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.streaming.function.EmptyFunction.open": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.streaming.function.FilterFunction": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.FilterFunction.filter": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.FlatMapFunction": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.FlatMapFunction.flat_map": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.Function": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.Function.close": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ray.streaming.function.Function.load_checkpoint": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.streaming.function.Function.open": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.streaming.function.Function.save_checkpoint": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.streaming.function.KeyFunction": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.KeyFunction.key_by": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.Language": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.streaming.function.enum"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.LocalFileSourceFunction": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ray.streaming.function.SourceFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.LocalFileSourceFunction.__init__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "ray.streaming.function.LocalFileSourceFunction.fetch": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "open",
    "ray.streaming.function.SourceContext"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.LocalFileSourceFunction.init": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "ray.streaming.function.MapFunction": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.MapFunction.map": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.ReduceFunction": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.ReduceFunction.reduce": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleFilterFunction": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ray.streaming.function.FilterFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleFilterFunction.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleFilterFunction.filter": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleFlatMapFunction": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.streaming.function.FlatMapFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleFlatMapFunction.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "ray.streaming.function.inspect"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleFlatMapFunction.__init__.process": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleFlatMapFunction.flat_map": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleKeyFunction": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ray.streaming.function.KeyFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleKeyFunction.__init__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleKeyFunction.key_by": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleMapFunction": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ray.streaming.function.MapFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleMapFunction.__init__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleMapFunction.map": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleReduceFunction": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ray.streaming.function.ReduceFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleReduceFunction.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleReduceFunction.reduce": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleSinkFunction": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ray.streaming.function.SinkFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SimpleSinkFunction.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SimpleSinkFunction.sink": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "ray.streaming.function.SinkFunction": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SinkFunction.sink": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SourceContext": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SourceContext.collect": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SourceFunction": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.streaming.function.Function"
   ]
  },
  "type": "class"
 },
 "ray.streaming.function.SourceFunction.close": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.streaming.function.SourceFunction.fetch": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "ray.streaming.function.SourceContext"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.SourceFunction.init": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function._get_simple_function_class": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "issubclass",
    "ray.streaming.function.inspect",
    "ray.streaming.function.sys"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.function.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.streaming.function.deserialize": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ray.cloudpickle.loads"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "ray.streaming.function.gateway_client": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client"
  },
  "type": "import"
 },
 "ray.streaming.function.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.streaming.function.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.streaming.function.load_function": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "__name__",
    "bytes",
    "func",
    "getattr",
    "issubclass",
    "len",
    "ray.streaming.function._get_simple_function_class",
    "ray.streaming.function.deserialize",
    "ray.streaming.function.importlib",
    "ray.streaming.function.inspect",
    "ray.streaming.function.sys",
    "ray.streaming.runtime.gateway_client.deserialize",
    "simple_func_class"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.serialize": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "func",
    "ray.cloudpickle.dumps",
    "ray.streaming.function.Function"
   ]
  },
  "type": "function"
 },
 "ray.streaming.function.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.streaming.generated": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.generated.remote_call_pb2": {
  "data": {
   "symbols_in_volume": [
    "float",
    "google.protobuf.any_pb2.DESCRIPTOR",
    "google.protobuf.any_pb2._ANY",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.streaming.generated.remote_call_pb2.Barrier",
    "ray.streaming.generated.remote_call_pb2.BaseWorkerCmd",
    "ray.streaming.generated.remote_call_pb2.BoolResult",
    "ray.streaming.generated.remote_call_pb2.CallResult",
    "ray.streaming.generated.remote_call_pb2.CheckpointId",
    "ray.streaming.generated.remote_call_pb2.DESCRIPTOR",
    "ray.streaming.generated.remote_call_pb2.ExecutionVertexContext",
    "ray.streaming.generated.remote_call_pb2.PythonJobWorkerContext",
    "ray.streaming.generated.remote_call_pb2.QueueRecoverInfo",
    "ray.streaming.generated.remote_call_pb2.WorkerCommitReport",
    "ray.streaming.generated.remote_call_pb2.WorkerRollbackRequest",
    "ray.streaming.generated.remote_call_pb2._BARRIER",
    "ray.streaming.generated.remote_call_pb2._BASEWORKERCMD",
    "ray.streaming.generated.remote_call_pb2._BOOLRESULT",
    "ray.streaming.generated.remote_call_pb2._CALLRESULT",
    "ray.streaming.generated.remote_call_pb2._CHECKPOINTID",
    "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT",
    "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONEDGE",
    "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX",
    "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX_CONFIGENTRY",
    "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX_RESOURCEENTRY",
    "ray.streaming.generated.remote_call_pb2._PYTHONJOBWORKERCONTEXT",
    "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO",
    "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO_CREATIONSTATUSENTRY",
    "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO_QUEUECREATIONSTATUS",
    "ray.streaming.generated.remote_call_pb2._WORKERCOMMITREPORT",
    "ray.streaming.generated.remote_call_pb2._WORKERROLLBACKREQUEST",
    "ray.streaming.generated.remote_call_pb2._b",
    "ray.streaming.generated.remote_call_pb2._sym_db",
    "ray.streaming.generated.remote_call_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.streaming.generated.remote_call_pb2.Barrier": {
  "data": {
   "lineno": 809
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.BaseWorkerCmd": {
  "data": {
   "lineno": 823
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.BoolResult": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.CallResult": {
  "data": {
   "lineno": 844
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.CheckpointId": {
  "data": {
   "lineno": 816
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.ExecutionVertexContext": {
  "data": {
   "lineno": 756
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.PythonJobWorkerContext": {
  "data": {
   "lineno": 795
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.QueueRecoverInfo": {
  "data": {
   "lineno": 851
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.WorkerCommitReport": {
  "data": {
   "lineno": 830
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2.WorkerRollbackRequest": {
  "data": {
   "lineno": 837
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._BARRIER": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._BASEWORKERCMD": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._BOOLRESULT": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._CALLRESULT": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._CHECKPOINTID": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONEDGE": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX_CONFIGENTRY": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._EXECUTIONVERTEXCONTEXT_EXECUTIONVERTEX_RESOURCEENTRY": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._PYTHONJOBWORKERCONTEXT": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO_CREATIONSTATUSENTRY": {
  "data": {
   "lineno": 657
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._QUEUERECOVERINFO_QUEUECREATIONSTATUS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._WORKERCOMMITREPORT": {
  "data": {
   "lineno": 529
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._WORKERROLLBACKREQUEST": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.streaming.generated.remote_call_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2.google_dot_protobuf_dot_any__pb2": {
  "data": {
   "shadows": "google.protobuf.any_pb2"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2.protobuf_dot_streaming__pb2": {
  "data": {
   "shadows": "streaming_pb2"
  },
  "type": "import"
 },
 "ray.streaming.generated.remote_call_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.any_pb2.DESCRIPTOR",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "ray.streaming.generated.streaming_pb2.DESCRIPTOR",
    "ray.streaming.generated.streaming_pb2.StreamingConfig",
    "ray.streaming.generated.streaming_pb2._FLOWCONTROLTYPE",
    "ray.streaming.generated.streaming_pb2._LANGUAGE",
    "ray.streaming.generated.streaming_pb2._NODETYPE",
    "ray.streaming.generated.streaming_pb2._RELIABILITYLEVEL",
    "ray.streaming.generated.streaming_pb2._STREAMINGCONFIG",
    "ray.streaming.generated.streaming_pb2._b",
    "ray.streaming.generated.streaming_pb2._sym_db",
    "ray.streaming.generated.streaming_pb2.sys"
   ]
  },
  "type": "module"
 },
 "ray.streaming.generated.streaming_pb2.AT_LEAST_ONCE": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.EXACTLY_ONCE": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.FlowControlType": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.JAVA": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.Language": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.NONE": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.NoFlowControl": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.NodeType": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.PYTHON": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.ReliabilityLevel": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.SINK": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.SOURCE": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.StreamingConfig": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.TRANSFORM": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.UNKNOWN": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.UNKNOWN_FLOW_CONTROL_TYPE": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2.UnconsumedSeqFlowControl": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._FLOWCONTROLTYPE": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._LANGUAGE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._NODETYPE": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._RELIABILITYLEVEL": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._STREAMINGCONFIG": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._b": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.streaming.generated.streaming_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2.google_dot_protobuf_dot_any__pb2": {
  "data": {
   "shadows": "google.protobuf.any_pb2"
  },
  "type": "import"
 },
 "ray.streaming.generated.streaming_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.streaming.message": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.message.KeyRecord": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.streaming.message.Record"
   ]
  },
  "type": "class"
 },
 "ray.streaming.message.KeyRecord.__eq__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.message.KeyRecord.__hash__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "ray.streaming.message.KeyRecord.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.message.Record": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "ray.streaming.message.Record.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.message.Record.__hash__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "ray.streaming.message.Record.__init__": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "ray.streaming.message.Record.__repr__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.streaming.operator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.function.FilterFunction",
    "ray.streaming.function.FlatMapFunction",
    "ray.streaming.function.KeyFunction",
    "ray.streaming.function.MapFunction",
    "ray.streaming.function.ReduceFunction",
    "ray.streaming.function.SinkFunction",
    "ray.streaming.function.SourceFunction",
    "ray.streaming.operator.FilterOperator",
    "ray.streaming.operator.FlatMapOperator",
    "ray.streaming.operator.KeyByOperator",
    "ray.streaming.operator.MapOperator",
    "ray.streaming.operator.ReduceOperator",
    "ray.streaming.operator.SinkOperator",
    "ray.streaming.operator.SourceOperatorImpl",
    "ray.streaming.operator.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.operator.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.operator.ChainedOneInputOperator": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ray.streaming.operator.ChainedOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ChainedOneInputOperator.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOneInputOperator.process_element": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ChainedOperator.ForwardCollector": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ray.streaming.collector.Collector"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ChainedOperator.ForwardCollector.__init__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.ForwardCollector.collect": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.__create_runtime_context": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.__create_runtime_context.get_config": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.new_chained_operator": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.operator.ChainedOneInputOperator",
    "ray.streaming.operator.ChainedSourceOperator",
    "ray.streaming.operator.ChainedTwoInputOperator",
    "ray.streaming.operator.OperatorType",
    "ray.streaming.operator.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.open": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.streaming.operator.ChainedOperator"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedOperator.operator_type": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ray.streaming.operator.OperatorType"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedSourceOperator": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ray.streaming.operator.ChainedOperator",
    "ray.streaming.operator.SourceOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ChainedSourceOperator.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedSourceOperator.fetch": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedTwoInputOperator": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ray.streaming.operator.ChainedOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ChainedTwoInputOperator.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ChainedTwoInputOperator.process_element": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "ray.streaming.operator.CollectionCollector": {
  "data": {
   "shadows": "ray.streaming.collector.CollectionCollector"
  },
  "type": "import"
 },
 "ray.streaming.operator.Collector": {
  "data": {
   "shadows": "ray.streaming.collector.Collector"
  },
  "type": "import"
 },
 "ray.streaming.operator.FilterOperator": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.FilterOperator.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.FilterFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.FilterOperator.process_element": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "ray.streaming.operator.FlatMapOperator": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.FlatMapOperator.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.FlatMapFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.FlatMapOperator.open": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ray.streaming.collector.CollectionCollector",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.FlatMapOperator.process_element": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.streaming.operator.KeyByOperator": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.KeyByOperator.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.KeyFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.KeyByOperator.process_element": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ray.streaming.message.KeyRecord"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.MapOperator": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.MapOperator.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.MapFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.MapOperator.process_element": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.OneInputOperator": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.operator.Operator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.OneInputOperator.operator_type": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.streaming.operator.OperatorType"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.OneInputOperator.process_element": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.Operator.close": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator.finish": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator.load_checkpoint": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator.open": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator.operator_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "ray.streaming.operator.OperatorType"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.Operator.save_checkpoint": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.OperatorType": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.streaming.operator.enum"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ReduceOperator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.ReduceOperator.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.ReduceFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ReduceOperator.open": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.ReduceOperator.process_element": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ray.streaming.message.KeyRecord",
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SinkOperator": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.SinkOperator.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.SinkFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SinkOperator.process_element": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceFunction": {
  "data": {
   "shadows": "ray.streaming.function.SourceFunction"
  },
  "type": "import"
 },
 "ray.streaming.operator.SourceOperator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.operator.Operator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.SourceOperator.fetch": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.streaming.operator.SourceOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.SourceOperatorImpl.SourceContextImpl": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.streaming.function.SourceContext"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.SourceOperatorImpl.SourceContextImpl.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl.SourceContextImpl.collect": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "ray.streaming.function.SourceFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl.fetch": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl.open": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.streaming.operator.SourceOperatorImpl",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.SourceOperatorImpl.operator_type": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ray.streaming.operator.OperatorType"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.operator.Operator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.StreamOperator.__init__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.close": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.collect": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.finish": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.load_checkpoint": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.open": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.streaming.operator.StreamOperator.save_checkpoint": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.streaming.operator.TwoInputOperator": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.operator.Operator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.TwoInputOperator.operator_type": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.streaming.operator.OperatorType"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.TwoInputOperator.process_element": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.UnionOperator": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ray.streaming.operator.OneInputOperator",
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.operator.UnionOperator.__init__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ray.streaming.function.EmptyFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.UnionOperator.process_element": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "ray.streaming.operator._function_to_operator": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "ray.streaming.operator.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.operator.create_operator_with_func": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "operator_class",
    "ray.streaming.function.Function",
    "ray.streaming.operator._function_to_operator"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "ray.streaming.operator.function": {
  "data": {
   "shadows": "ray.streaming.function"
  },
  "type": "import"
 },
 "ray.streaming.operator.gateway_client": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client"
  },
  "type": "import"
 },
 "ray.streaming.operator.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.streaming.operator.load_chained_operator": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bytes",
    "ray.streaming.operator.ChainedOperator",
    "ray.streaming.operator.load_operator",
    "ray.streaming.runtime.gateway_client.deserialize"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.load_operator": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "bytes",
    "cls",
    "getattr",
    "issubclass",
    "len",
    "print",
    "ray.streaming.function.load_function",
    "ray.streaming.operator.Operator",
    "ray.streaming.operator.create_operator_with_func",
    "ray.streaming.operator.importlib",
    "ray.streaming.runtime.gateway_client.deserialize"
   ]
  },
  "type": "function"
 },
 "ray.streaming.operator.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.streaming.operator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.operator.message": {
  "data": {
   "shadows": "ray.streaming.message"
  },
  "type": "import"
 },
 "ray.streaming.partition": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.partition.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.partition.BroadcastPartition": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.streaming.partition.Partition"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.BroadcastPartition.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.streaming.partition.BroadcastPartition.partition": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.ForwardPartition": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.streaming.partition.Partition"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.ForwardPartition.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.streaming.partition.ForwardPartition.partition": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.KeyPartition": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.streaming.partition.Partition"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.KeyPartition.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.streaming.partition.KeyPartition.partition": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abs",
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.Partition": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.Partition.partition": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.RoundRobinPartition": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.streaming.partition.Partition"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.RoundRobinPartition.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.streaming.partition.RoundRobinPartition.partition": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.SimplePartition": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.streaming.partition.Partition"
   ]
  },
  "type": "class"
 },
 "ray.streaming.partition.SimplePartition.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "ray.streaming.partition.SimplePartition.partition": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.partition.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.streaming.partition.deserialize": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.cloudpickle.loads"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.gateway_client": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client"
  },
  "type": "import"
 },
 "ray.streaming.partition.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "ray.streaming.partition.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.streaming.partition.load_partition": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bytes",
    "func",
    "getattr",
    "issubclass",
    "len",
    "ray.streaming.partition.Partition",
    "ray.streaming.partition.SimplePartition",
    "ray.streaming.partition.deserialize",
    "ray.streaming.partition.importlib",
    "ray.streaming.partition.inspect",
    "ray.streaming.runtime.gateway_client.deserialize"
   ]
  },
  "type": "function"
 },
 "ray.streaming.partition.serialize": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps"
   ]
  },
  "type": "function"
 },
 "ray.streaming.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.runtime": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.runtime.command": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.runtime.command.BaseWorkerCmd": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "ray.streaming.runtime.command.BaseWorkerCmd.__init__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "ray.streaming.runtime.command.WorkerCommitReport": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.streaming.runtime.command.BaseWorkerCmd"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.command.WorkerCommitReport.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.command.WorkerRollbackRequest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.streaming.runtime.command.BaseWorkerCmd"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.command.WorkerRollbackRequest.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.command.WorkerRollbackRequest.exception_msg": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.runtime.context_backend.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.context_backend.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.AtomicFsContextBackend": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ray.streaming.runtime.context_backend.LocalFileContextBackend"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.context_backend.AtomicFsContextBackend.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.AtomicFsContextBackend.get": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.AtomicFsContextBackend.put": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.AtomicFsContextBackend.remove": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.Config": {
  "data": {
   "shadows": "ray.streaming.config.Config"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.ConfigHelper": {
  "data": {
   "shadows": "ray.streaming.config.ConfigHelper"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.ContextBackend": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.context_backend.ContextBackend.get": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.ContextBackend.put": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.ContextBackend.remove": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.ContextBackendFactory": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "ray.streaming.runtime.context_backend.ContextBackendFactory.get_context_backend": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.streaming.config.Config.CP_STATE_BACKEND_LOCAL_FILE",
    "ray.streaming.config.Config.CP_STATE_BACKEND_MEMORY",
    "ray.streaming.config.ConfigHelper.get_cp_context_backend_type",
    "ray.streaming.runtime.context_backend.AtomicFsContextBackend",
    "ray.streaming.runtime.context_backend.ContextBackend",
    "ray.streaming.runtime.context_backend.MemoryContextBackend",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.streaming.runtime.context_backend.ContextBackend"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.__gen_file_path": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "FileExistsError",
    "ray.streaming.config.ConfigHelper.get_cp_local_file_root_dir",
    "ray.streaming.runtime.context_backend.logger",
    "ray.streaming.runtime.context_backend.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.exists": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "ray.streaming.runtime.context_backend.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.get": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "open",
    "ray.streaming.runtime.context_backend.logger",
    "ray.streaming.runtime.context_backend.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.put": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "open",
    "ray.streaming.runtime.context_backend.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.remove": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.runtime.context_backend.logger",
    "ray.streaming.runtime.context_backend.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.LocalFileContextBackend.rename": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.streaming.runtime.context_backend.logger",
    "ray.streaming.runtime.context_backend.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.MemoryContextBackend": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.streaming.runtime.context_backend.ContextBackend"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.context_backend.MemoryContextBackend.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.MemoryContextBackend.get": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.MemoryContextBackend.put": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.MemoryContextBackend.remove": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.streaming.runtime.context_backend.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.streaming.runtime.context_backend.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.runtime.context_backend.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "ray.streaming.runtime.failover": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.runtime.failover.Barrier": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "ray.streaming.runtime.failover.Barrier.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.failover.Barrier.__str__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "ray.streaming.runtime.failover.OpCheckpointInfo": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "ray.streaming.runtime.failover.OpCheckpointInfo.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.runtime.graph.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.graph.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.ActorID": {
  "data": {
   "shadows": "ray._raylet.ActorID"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.Config": {
  "data": {
   "shadows": "ray.streaming.config.Config"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.ExecutionEdge": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ray.streaming.runtime.graph.ExecutionEdge.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.streaming.generated.streaming_pb2.Language.PYTHON",
    "ray.streaming.partition.load_partition"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertex": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.actor.ActorHandle"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.graph.ExecutionVertex.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.streaming.generated.streaming_pb2.Language.PYTHON",
    "ray.streaming.operator.load_chained_operator",
    "ray.streaming.operator.load_operator",
    "ray.streaming.runtime.graph.logger",
    "ray.streaming.runtime.graph.ray"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertex.execution_vertex_name": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ray._raylet.ActorID",
    "ray.streaming.runtime.graph.ExecutionVertex"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.streaming.config.Config.STREAMING_JOB_NAME",
    "ray.streaming.generated.remote_call_pb2.ExecutionVertexContext",
    "ray.streaming.runtime.graph.ExecutionEdge",
    "ray.streaming.runtime.graph.ExecutionVertex"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.build_time": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.config": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_downstream_parallelism": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_parallelism": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_source_actor_by_execution_vertex_id": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_target_actor_by_execution_vertex_id": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_task_id": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.get_upstream_parallelism": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.ExecutionVertexContext.stream_operator": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.graph.Language": {
  "data": {
   "shadows": "ray.streaming.generated.streaming_pb2.Language"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.NodeType": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.streaming.runtime.graph.enum"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.graph.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.streaming.runtime.graph.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.operator": {
  "data": {
   "shadows": "ray.streaming.operator"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.partition": {
  "data": {
   "shadows": "ray.streaming.partition"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.runtime.graph.remote_call_pb": {
  "data": {
   "shadows": "ray.streaming.generated.remote_call_pb2"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.runtime.processor.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.processor.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor.OneInputProcessor": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ray.streaming.runtime.processor.StreamingProcessor"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.processor.OneInputProcessor.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.OneInputProcessor.process": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.OperatorType": {
  "data": {
   "shadows": "ray.streaming.operator.OperatorType"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor.Processor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.processor.Processor.close": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.Processor.load_checkpoint": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.Processor.open": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.Processor.process": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.Processor.save_checkpoint": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.SourceProcessor": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.streaming.runtime.processor.StreamingProcessor"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.processor.SourceProcessor.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.SourceProcessor.fetch": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.SourceProcessor.process": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.StreamingProcessor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.ABC",
    "ray.streaming.runtime.processor.Processor"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.processor.StreamingProcessor.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.StreamingProcessor.close": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.StreamingProcessor.load_checkpoint": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.StreamingProcessor.open": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.streaming.context.RuntimeContext",
    "ray.streaming.runtime.processor.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.StreamingProcessor.save_checkpoint": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.TwoInputProcessor": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ray.streaming.runtime.processor.StreamingProcessor"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.processor.TwoInputProcessor.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.TwoInputProcessor.left_stream": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.TwoInputProcessor.process": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.streaming.message.Record"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.TwoInputProcessor.right_stream": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor.build_processor": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.operator.OperatorType.ONE_INPUT",
    "ray.streaming.operator.OperatorType.SOURCE",
    "ray.streaming.operator.OperatorType.TWO_INPUT",
    "ray.streaming.runtime.processor.OneInputProcessor",
    "ray.streaming.runtime.processor.SourceProcessor",
    "ray.streaming.runtime.processor.TwoInputProcessor",
    "ray.streaming.runtime.processor.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.processor.context": {
  "data": {
   "shadows": "ray.streaming.context"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.streaming.runtime.processor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.runtime.processor.message": {
  "data": {
   "shadows": "ray.streaming.message"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.runtime.remote_call.logging"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.remote_call.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.CallResult": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "ray.streaming.runtime.remote_call.CallResult.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.CallResult.fail": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.streaming.runtime.remote_call.CallResult",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.CallResult.is_success": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.CallResult.skipped": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.streaming.runtime.remote_call.CallResult",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.CallResult.success": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.streaming.runtime.remote_call.CallResult",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.CallResultEnum": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.remote_call.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.RemoteCallMst": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "ray.streaming.runtime.remote_call.RemoteCallMst.report_job_worker_commit": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "ray.actor.ActorHandle",
    "ray.streaming.generated.remote_call_pb2.BaseWorkerCmd",
    "ray.streaming.generated.remote_call_pb2.BoolResult",
    "ray.streaming.generated.remote_call_pb2.WorkerCommitReport",
    "ray.streaming.runtime.command.WorkerCommitReport",
    "ray.streaming.runtime.remote_call.logger",
    "ray.streaming.runtime.remote_call.ray",
    "ray.streaming.runtime.remote_call.time",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.RemoteCallMst.request_job_worker_rollback": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "ray.actor.ActorHandle",
    "ray.streaming.generated.remote_call_pb2.BaseWorkerCmd",
    "ray.streaming.generated.remote_call_pb2.BoolResult",
    "ray.streaming.generated.remote_call_pb2.WorkerRollbackRequest",
    "ray.streaming.runtime.command.WorkerRollbackRequest",
    "ray.streaming.runtime.remote_call.logger",
    "ray.streaming.runtime.remote_call.os",
    "ray.streaming.runtime.remote_call.ray",
    "ray.streaming.runtime.remote_call.time",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.remote_call.WorkerCommitReport": {
  "data": {
   "shadows": "ray.streaming.runtime.command.WorkerCommitReport"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.WorkerRollbackRequest": {
  "data": {
   "shadows": "ray.streaming.runtime.command.WorkerRollbackRequest"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.streaming.runtime.remote_call.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.remote_call_pb2": {
  "data": {
   "shadows": "ray.streaming.generated.remote_call_pb2"
  },
  "type": "import"
 },
 "ray.streaming.runtime.remote_call.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.runtime.serialization": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.runtime.serialization.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.runtime.serialization.CROSS_LANG_TYPE_ID": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.streaming.runtime.serialization.CrossLangSerializer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.streaming.runtime.serialization.Serializer"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.serialization.CrossLangSerializer.deserialize": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.message.KeyRecord",
    "ray.streaming.message.Record",
    "ray.streaming.runtime.serialization.KEY_RECORD_TYPE_ID",
    "ray.streaming.runtime.serialization.RECORD_TYPE_ID",
    "ray.streaming.runtime.serialization.msgpack",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.CrossLangSerializer.serialize": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.message.KeyRecord",
    "ray.streaming.message.Record",
    "ray.streaming.runtime.serialization.KEY_RECORD_TYPE_ID",
    "ray.streaming.runtime.serialization.RECORD_TYPE_ID",
    "ray.streaming.runtime.serialization.msgpack",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.JAVA_TYPE_ID": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.streaming.runtime.serialization.KEY_RECORD_TYPE_ID": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.streaming.runtime.serialization.PYTHON_TYPE_ID": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.streaming.runtime.serialization.PythonSerializer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.streaming.runtime.serialization.Serializer"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.serialization.PythonSerializer.deserialize": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.streaming.runtime.serialization.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.PythonSerializer.serialize": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.streaming.runtime.serialization.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.RECORD_TYPE_ID": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.streaming.runtime.serialization.Serializer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.serialization.Serializer.deserialize": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.Serializer.serialize": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.serialization.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.runtime.serialization.message": {
  "data": {
   "shadows": "ray.streaming.message"
  },
  "type": "import"
 },
 "ray.streaming.runtime.serialization.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "ray.streaming.runtime.serialization.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.runtime.task.logging",
    "ray.streaming.runtime.task.typing"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.task.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.Barrier": {
  "data": {
   "shadows": "ray.streaming.runtime.failover.Barrier"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.ChannelID": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.ChannelID"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.ChannelInterruptException": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.ChannelInterruptException"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.ChannelRecoverInfo": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.ChannelRecoverInfo"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.CheckpointBarrier": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.CheckpointBarrier"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.Config": {
  "data": {
   "shadows": "ray.streaming.config.Config"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.CrossLangSerializer": {
  "data": {
   "shadows": "ray.streaming.runtime.serialization.CrossLangSerializer"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.DataMessage": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.DataMessage"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.DataReader": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.DataReader"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.DataWriter": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.DataWriter"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.InputStreamTask": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.StreamTask"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.task.InputStreamTask.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "int",
    "ray.streaming.config.Config.DEFAULT_READ_TIMEOUT_MS",
    "ray.streaming.config.Config.READ_TIMEOUT_MS",
    "ray.streaming.runtime.serialization.CrossLangSerializer",
    "ray.streaming.runtime.serialization.PythonSerializer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.InputStreamTask.cancel_task": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.InputStreamTask.commit_trigger": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.InputStreamTask.run": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "BaseException",
    "RuntimeError",
    "isinstance",
    "ray.streaming.runtime.serialization.PYTHON_TYPE_ID",
    "ray.streaming.runtime.task.logger",
    "ray.streaming.runtime.transfer.ChannelInterruptException",
    "ray.streaming.runtime.transfer.CheckpointBarrier",
    "ray.streaming.runtime.transfer.DataMessage",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.JobWorker": {
  "data": {
   "shadows": "ray.streaming.runtime.worker.JobWorker"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.OneInputStreamTask": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.InputStreamTask"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.task.OneInputStreamTask.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.OpCheckpointInfo": {
  "data": {
   "shadows": "ray.streaming.runtime.failover.OpCheckpointInfo"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.OutputCollector": {
  "data": {
   "shadows": "ray.streaming.collector.OutputCollector"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.Processor": {
  "data": {
   "shadows": "ray.streaming.runtime.processor.Processor"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.PythonSerializer": {
  "data": {
   "shadows": "ray.streaming.runtime.serialization.PythonSerializer"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.RemoteCallMst": {
  "data": {
   "shadows": "ray.streaming.runtime.remote_call.RemoteCallMst"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.RuntimeContextImpl": {
  "data": {
   "shadows": "ray.streaming.context.RuntimeContextImpl"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.SourceProcessor": {
  "data": {
   "shadows": "ray.streaming.runtime.processor.SourceProcessor"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.SourceStreamTask": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.StreamTask"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.task.SourceStreamTask.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int",
    "ray.streaming.runtime.failover.Barrier",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.SourceStreamTask.cancel_task": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.SourceStreamTask.commit_trigger": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.SourceStreamTask.run": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.runtime.task.logger",
    "ray.streaming.runtime.transfer.ChannelInterruptException",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.task.StreamTask.__gen_op_checkpoint_key": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.streaming.config.Config.JOB_WORKER_OP_CHECKPOINT_PREFIX_KEY",
    "ray.streaming.runtime.task.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.streaming.runtime.task.threading",
    "ray.streaming.runtime.transfer.DataReader",
    "ray.streaming.runtime.transfer.DataWriter",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.__report_commit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "ray.streaming.runtime.command.WorkerCommitReport",
    "ray.streaming.runtime.remote_call.RemoteCallMst.report_job_worker_commit",
    "ray.streaming.runtime.task.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.__save_cp": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.logger",
    "ray.streaming.runtime.task.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.__save_cp_state_and_report": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ray.streaming.runtime.task.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.cancel_task": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.clear_expired_cp_state": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.clear_expired_queue_msg": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.commit_trigger": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "ray.streaming.runtime.failover.Barrier"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.do_checkpoint": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "ray.streaming.generated.remote_call_pb2.Barrier",
    "ray.streaming.runtime.failover.OpCheckpointInfo",
    "ray.streaming.runtime.task.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.prepare_task": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "dict",
    "int",
    "len",
    "list",
    "ray.streaming.collector.OutputCollector",
    "ray.streaming.config.Config.CHANNEL_SIZE",
    "ray.streaming.config.Config.CHANNEL_SIZE_DEFAULT",
    "ray.streaming.config.Config.CHANNEL_TYPE",
    "ray.streaming.config.Config.NATIVE_CHANNEL",
    "ray.streaming.context.RuntimeContextImpl",
    "ray.streaming.runtime.failover.OpCheckpointInfo",
    "ray.streaming.runtime.task.atexit",
    "ray.streaming.runtime.task.logger",
    "ray.streaming.runtime.task.pickle",
    "ray.streaming.runtime.transfer.ChannelID.gen_id",
    "ray.streaming.runtime.transfer.DataReader",
    "ray.streaming.runtime.transfer.DataWriter"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.prepare_task.exit_handler": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.recover": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool",
    "ray.streaming.runtime.task.logger",
    "ray.streaming.runtime.transfer.ChannelRecoverInfo"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.request_rollback": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.StreamTask.run": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.task.WorkerCommitReport": {
  "data": {
   "shadows": "ray.streaming.runtime.command.WorkerCommitReport"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.streaming.runtime.task.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.remote_call_pb2": {
  "data": {
   "shadows": "ray.streaming.generated.remote_call_pb2"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.serialization": {
  "data": {
   "shadows": "ray.streaming.runtime.serialization"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.runtime.task.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "ray.streaming.runtime.worker.ActorHandle": {
  "data": {
   "shadows": "ray.actor.ActorHandle"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.Barrier": {
  "data": {
   "shadows": "ray.streaming.runtime.failover.Barrier"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.CallResult": {
  "data": {
   "shadows": "ray.streaming.runtime.remote_call.CallResult"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.Config": {
  "data": {
   "shadows": "ray.streaming.config.Config"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.ContextBackendFactory": {
  "data": {
   "shadows": "ray.streaming.runtime.context_backend.ContextBackendFactory"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.ExecutionVertex": {
  "data": {
   "shadows": "ray.streaming.runtime.graph.ExecutionVertex"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.ExecutionVertexContext": {
  "data": {
   "shadows": "ray.streaming.runtime.graph.ExecutionVertexContext"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.JobWorker": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "object",
    "ray.actor.ActorHandle",
    "ray.streaming.generated.remote_call_pb2.PythonJobWorkerContext",
    "ray.streaming.runtime.graph.ExecutionVertexContext",
    "ray.streaming.runtime.worker.ray",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.worker.JobWorker.__clear_expired_cp_state": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.__clear_expired_queue_msg": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.__gen_call_result": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ray.streaming.generated.remote_call_pb2.CallResult",
    "ray.streaming.runtime.transfer.channel_bytes_to_str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.__get_job_worker_context_key": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ray.streaming.config.Config.JOB_WORKER_CONTEXT_KEY",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "ray.streaming.generated.remote_call_pb2.ExecutionVertexContext.ExecutionVertex",
    "ray.streaming.runtime.context_backend.ContextBackendFactory.get_context_backend",
    "ray.streaming.runtime.graph.ExecutionVertex",
    "ray.streaming.runtime.worker.WorkerState",
    "ray.streaming.runtime.worker.logger",
    "ray.streaming.runtime.worker.os",
    "ray.streaming.runtime.worker.ray",
    "ray.streaming.runtime.worker.threading"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.__parse_to_checkpoint_id": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ray.streaming.generated.remote_call_pb2.CheckpointId"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker._gen_unique_key": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ray.streaming.config.Config.STREAMING_JOB_NAME",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.check_if_need_rollback": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ray.streaming.generated.remote_call_pb2.BoolResult"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.clear_expired_cp": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ray.streaming.generated.remote_call_pb2.BoolResult",
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.commit": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ray.streaming.generated.remote_call_pb2.Barrier",
    "ray.streaming.generated.remote_call_pb2.BoolResult",
    "ray.streaming.runtime.failover.Barrier",
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.create_stream_task": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "ray.streaming.runtime.processor.OneInputProcessor",
    "ray.streaming.runtime.processor.SourceProcessor",
    "ray.streaming.runtime.task.OneInputStreamTask",
    "ray.streaming.runtime.task.SourceStreamTask",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.init": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception",
    "ray.actor.ActorHandle._deserialization_helper",
    "ray.streaming._streaming.ReaderClient",
    "ray.streaming._streaming.WriterClient",
    "ray.streaming.config.Config.CHANNEL_TYPE",
    "ray.streaming.config.Config.NATIVE_CHANNEL",
    "ray.streaming.generated.remote_call_pb2.PythonJobWorkerContext",
    "ray.streaming.runtime.graph.ExecutionVertexContext",
    "ray.streaming.runtime.processor.build_processor",
    "ray.streaming.runtime.worker.logger",
    "ray.streaming.runtime.worker.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.notify_checkpoint_timeout": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.on_reader_message": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.on_reader_message_sync": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bytes",
    "ray.streaming.runtime.worker._NOT_READY_FLAG_",
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.on_writer_message": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "bytes",
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.on_writer_message_sync": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "bytes",
    "ray.streaming.runtime.worker._NOT_READY_FLAG_"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.request_rollback": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception",
    "range",
    "ray.streaming.config.Config.REQUEST_ROLLBACK_RETRY_TIMES",
    "ray.streaming.runtime.command.WorkerRollbackRequest",
    "ray.streaming.runtime.remote_call.RemoteCallMst.request_job_worker_rollback",
    "ray.streaming.runtime.worker.logger",
    "ray.streaming.runtime.worker.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.rollback": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "ray.streaming.generated.remote_call_pb2.CheckpointId",
    "ray.streaming.runtime.remote_call.CallResult.fail",
    "ray.streaming.runtime.remote_call.CallResult.skipped",
    "ray.streaming.runtime.remote_call.CallResult.success",
    "ray.streaming.runtime.worker.logger"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.JobWorker.shutdown_without_reconstruction": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ray.streaming.runtime.worker.logger",
    "ray.streaming.runtime.worker.ray"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.OneInputStreamTask": {
  "data": {
   "shadows": "ray.streaming.runtime.task.OneInputStreamTask"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.RemoteCallMst": {
  "data": {
   "shadows": "ray.streaming.runtime.remote_call.RemoteCallMst"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.SourceStreamTask": {
  "data": {
   "shadows": "ray.streaming.runtime.task.SourceStreamTask"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.StateType": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ray.streaming.runtime.worker.enum"
   ]
  },
  "type": "class"
 },
 "ray.streaming.runtime.worker.WorkerRollbackRequest": {
  "data": {
   "shadows": "ray.streaming.runtime.command.WorkerRollbackRequest"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.WorkerState": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "ray.streaming.runtime.worker.WorkerState.__init__": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.WorkerState.get_type": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker.WorkerState.set_type": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.runtime.worker._NOT_READY_FLAG_": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.streaming.runtime.worker._streaming": {
  "data": {
   "shadows": "ray.streaming._streaming"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.channel_bytes_to_str": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer.channel_bytes_to_str"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.streaming.runtime.worker.logging.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.processor": {
  "data": {
   "shadows": "ray.streaming.runtime.processor"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.remote_call_pb2": {
  "data": {
   "shadows": "ray.streaming.generated.remote_call_pb2"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.streaming.runtime.worker.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.tests.test_direct_transfer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.tests.test_direct_transfer.test_queue"
   ]
  },
  "type": "module"
 },
 "ray.streaming.tests.test_direct_transfer.Config": {
  "data": {
   "shadows": "ray.streaming.config.Config"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.PythonFunctionDescriptor": {
  "data": {
   "shadows": "ray._raylet.PythonFunctionDescriptor"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.Worker": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.streaming.tests.test_direct_transfer.ray"
   ]
  },
  "type": "class"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.streaming._streaming.ReaderClient",
    "ray.streaming._streaming.WriterClient"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.init_reader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "__name__",
    "ray._raylet.PythonFunctionDescriptor",
    "ray.streaming.config.Config.CHANNEL_TYPE",
    "ray.streaming.config.Config.NATIVE_CHANNEL",
    "ray.streaming.runtime.transfer.ChannelCreationParametersBuilder.set_python_writer_function_descriptor",
    "ray.streaming.runtime.transfer.DataReader",
    "ray.streaming.tests.test_direct_transfer.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.init_writer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "__name__",
    "ray._raylet.PythonFunctionDescriptor",
    "ray.streaming.config.Config.CHANNEL_TYPE",
    "ray.streaming.config.Config.NATIVE_CHANNEL",
    "ray.streaming.runtime.transfer.ChannelCreationParametersBuilder.set_python_reader_function_descriptor",
    "ray.streaming.runtime.transfer.ChannelID",
    "ray.streaming.runtime.transfer.DataWriter",
    "ray.streaming.tests.test_direct_transfer.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.is_finished": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.on_reader_message": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.on_reader_message_sync": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.on_writer_message": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.on_writer_message_sync": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.run_reader": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "print",
    "ray.streaming.tests.test_direct_transfer.pickle",
    "ray.streaming.tests.test_direct_transfer.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.run_writer": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.streaming.tests.test_direct_transfer.pickle"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.start_read": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.streaming.tests.test_direct_transfer.threading"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.Worker.start_write": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.streaming.tests.test_direct_transfer.threading"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer._streaming": {
  "data": {
   "shadows": "ray.streaming._streaming"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.test_queue": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "print",
    "ray.streaming.runtime.transfer.ChannelID.gen_random_id",
    "ray.streaming.tests.test_direct_transfer.Worker",
    "ray.streaming.tests.test_direct_transfer.pickle",
    "ray.streaming.tests.test_direct_transfer.ray",
    "ray.streaming.tests.test_direct_transfer.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_direct_transfer.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_direct_transfer.transfer": {
  "data": {
   "shadows": "ray.streaming.runtime.transfer"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_failover": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.tests.test_failover.test_word_count"
   ]
  },
  "type": "module"
 },
 "ray.streaming.tests.test_failover.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_failover.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_failover.checkpoint_success_num": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "int",
    "ray.streaming.tests.test_failover.grep_log"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.grep_log": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.streaming.tests.test_failover.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.has_sink_output": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "ray.streaming.tests.test_failover.grep_log"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.kill_all_worker": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "print",
    "ray.streaming.tests.test_failover.subprocess"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_failover.run_cmd": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.streaming.tests.test_failover.subprocess",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_failover.test_word_count": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "RuntimeError",
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_failover.checkpoint_success_num",
    "ray.streaming.tests.test_failover.has_sink_output",
    "ray.streaming.tests.test_failover.kill_all_worker",
    "ray.streaming.tests.test_failover.ray",
    "ray.streaming.tests.test_failover.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_failover.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_function": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.tests.test_function.MapFunc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.streaming.function.MapFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.tests.test_function.MapFunc.map": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_function.function": {
  "data": {
   "shadows": "ray.streaming.function"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_function.gateway_client": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_function.test_get_simple_function_class": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.streaming.function.MapFunction",
    "ray.streaming.function.SimpleMapFunction",
    "ray.streaming.function._get_simple_function_class"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_function.test_load_function": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.function.load_function",
    "ray.streaming.runtime.gateway_client.serialize",
    "ray.streaming.tests.test_function.MapFunc",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.tests.test_hybrid_stream.test_hybrid_stream"
   ]
  },
  "type": "module"
 },
 "ray.streaming.tests.test_hybrid_stream.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.filter_func1": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.map_func1": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.sink_func1": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.test_hybrid_stream": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_hybrid_stream.json",
    "ray.streaming.tests.test_hybrid_stream.os",
    "ray.streaming.tests.test_hybrid_stream.ray",
    "ray.streaming.tests.test_hybrid_stream.subprocess",
    "ray.test_utils.wait_for_condition"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.test_hybrid_stream.check_succeed": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "open",
    "print",
    "ray.streaming.tests.test_hybrid_stream.os",
    "ray.streaming.tests.test_hybrid_stream.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.test_hybrid_stream.sink_func": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_hybrid_stream.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_hybrid_stream.wait_for_condition": {
  "data": {
   "shadows": "ray.test_utils.wait_for_condition"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_operator": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.tests.test_operator.EmptyOperator": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.streaming.operator.StreamOperator"
   ]
  },
  "type": "class"
 },
 "ray.streaming.tests.test_operator.EmptyOperator.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.streaming.function.EmptyFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_operator.EmptyOperator.operator_type": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.streaming.operator.OperatorType",
    "ray.streaming.operator.OperatorType.ONE_INPUT"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_operator.MapFunc": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.streaming.function.MapFunction"
   ]
  },
  "type": "class"
 },
 "ray.streaming.tests.test_operator.MapFunc.map": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_operator.OperatorType": {
  "data": {
   "shadows": "ray.streaming.operator.OperatorType"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_operator.function": {
  "data": {
   "shadows": "ray.streaming.function"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_operator.gateway_client": {
  "data": {
   "shadows": "ray.streaming.runtime.gateway_client"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_operator.operator": {
  "data": {
   "shadows": "ray.streaming.operator"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_operator.test_create_operator_with_func": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ray.streaming.function.SimpleMapFunction",
    "ray.streaming.operator.MapOperator",
    "ray.streaming.operator.create_operator_with_func",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_operator.test_load_operator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "__name__",
    "isinstance",
    "ray.streaming.operator.MapOperator",
    "ray.streaming.operator.load_operator",
    "ray.streaming.runtime.gateway_client.serialize",
    "ray.streaming.tests.test_operator.EmptyOperator",
    "ray.streaming.tests.test_operator.MapFunc",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_serialization": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.tests.test_serialization.CrossLangSerializer": {
  "data": {
   "shadows": "ray.streaming.runtime.serialization.CrossLangSerializer"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_serialization.KeyRecord": {
  "data": {
   "shadows": "ray.streaming.message.KeyRecord"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_serialization.Record": {
  "data": {
   "shadows": "ray.streaming.message.Record"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_serialization.test_serialize": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.streaming.message.KeyRecord",
    "ray.streaming.message.Record",
    "ray.streaming.runtime.serialization.CrossLangSerializer"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_stream": {
  "data": {},
  "type": "module"
 },
 "ray.streaming.tests.test_stream.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_stream.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_stream.test_data_stream": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_stream.ray"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_stream.test_key_data_stream": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_stream.ray"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_stream.test_stream_config": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_stream.ray"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_union_stream": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.tests.test_union_stream.test_union_stream"
   ]
  },
  "type": "module"
 },
 "ray.streaming.tests.test_union_stream.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_union_stream.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_union_stream.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_union_stream.test_union_stream": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception",
    "open",
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_union_stream.os",
    "ray.streaming.tests.test_union_stream.ray",
    "ray.streaming.tests.test_union_stream.time",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_union_stream.test_union_stream.sink_func": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_union_stream.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_word_count": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.streaming.tests.test_word_count.test_simple_word_count",
    "ray.streaming.tests.test_word_count.test_word_count"
   ]
  },
  "type": "module"
 },
 "ray.streaming.tests.test_word_count.StreamingContext": {
  "data": {
   "shadows": "ray.streaming.StreamingContext"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_word_count.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_word_count.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_word_count.test_simple_word_count": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_word_count.os",
    "ray.streaming.tests.test_word_count.ray",
    "ray.test_utils.wait_for_condition"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_word_count.test_simple_word_count.check_succeed": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "open",
    "ray.streaming.tests.test_word_count.os"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_word_count.test_simple_word_count.sink_func": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_word_count.test_word_count": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "print",
    "ray.streaming.StreamingContext.Builder",
    "ray.streaming.tests.test_word_count.ray",
    "ray.streaming.tests.test_word_count.time"
   ]
  },
  "type": "function"
 },
 "ray.streaming.tests.test_word_count.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.streaming.tests.test_word_count.wait_for_condition": {
  "data": {
   "shadows": "ray.test_utils.wait_for_condition"
  },
  "type": "import"
 },
 "ray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ray.test_utils.sys"
   ]
  },
  "type": "module"
 },
 "ray.test_utils.RayTestTimeoutException": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.test_utils.Semaphore": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ray.test_utils.ray"
   ]
  },
  "type": "class"
 },
 "ray.test_utils.Semaphore.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ray.test_utils.asyncio"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.SignalActor": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ray.test_utils.ray"
   ]
  },
  "type": "class"
 },
 "ray.test_utils.SignalActor.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ray.test_utils.asyncio"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.SignalActor.send": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "ray.test_utils._pid_alive": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "OSError",
    "ray.test_utils._winapi",
    "ray.test_utils.errno",
    "ray.test_utils.os",
    "ray.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.test_utils._put": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ray.test_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.test_utils._winapi": {
  "data": {
   "shadows": "_winapi"
  },
  "type": "import"
 },
 "ray.test_utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.test_utils.check_call_module": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "contextlib.redirect_stderr",
    "contextlib.redirect_stdout",
    "ray.scripts.scripts.main",
    "ray.test_utils.io",
    "ray.test_utils.subprocess",
    "ray.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.check_call_ray": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.scripts.scripts.main",
    "ray.test_utils.check_call_module",
    "ray.test_utils.subprocess",
    "ray.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.dicts_equal": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "ray.test_utils.math"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.test_utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "ray.test_utils.format_web_url": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "ray.test_utils.generate_system_config_map": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "ray.test_utils.get_error_message": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "len",
    "ray.test_utils.ray",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.get_non_head_nodes": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "filter",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.get_other_nodes": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ray.test_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.init_error_pubsub": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ray.test_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.test_utils.kill_process_by_name": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.test_utils.psutil",
    "ray.test_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.test_utils.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.test_utils.put_object": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ray.test_utils._put",
    "ray.test_utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.test_utils.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.test_utils.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.test_utils.ray_main": {
  "data": {
   "shadows": "ray.scripts.scripts.main"
  },
  "type": "import"
 },
 "ray.test_utils.recursive_fnmatch": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ray.test_utils.fnmatch",
    "ray.test_utils.os"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.redirect_stderr": {
  "data": {
   "shadows": "contextlib.redirect_stderr"
  },
  "type": "import"
 },
 "ray.test_utils.redirect_stdout": {
  "data": {
   "shadows": "contextlib.redirect_stdout"
  },
  "type": "import"
 },
 "ray.test_utils.run_string_as_driver": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "print",
    "ray.test_utils.ray",
    "ray.test_utils.subprocess",
    "ray.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.run_string_as_driver_nonblocking": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ray.test_utils.subprocess",
    "ray.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.same_elements": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.test_utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.test_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.test_utils.wait_for_children_of_pid": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "ray.test_utils.RayTestTimeoutException",
    "ray.test_utils.psutil",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_for_children_of_pid_to_exit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "ray.test_utils.RayTestTimeoutException",
    "ray.test_utils.psutil"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_for_condition": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "RuntimeError",
    "condition_predictor",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_for_num_actors": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "ray.test_utils.RayTestTimeoutException",
    "ray.test_utils.ray",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_for_pid_to_exit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.test_utils.RayTestTimeoutException",
    "ray.test_utils._pid_alive",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_until_server_available": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Exception",
    "int",
    "ray.test_utils.socket",
    "ray.test_utils.time"
   ]
  },
  "type": "function"
 },
 "ray.test_utils.wait_until_succeeded_without_exception": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "func",
    "print",
    "ray.test_utils.time",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.thirdparty_files": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.timeline": {
  "data": {
   "shadows": "ray.state.timeline"
  },
  "type": "import"
 },
 "ray.tune": {
  "data": {},
  "type": "module"
 },
 "ray.tune.Analysis": {
  "data": {
   "shadows": "ray.tune.analysis.Analysis"
  },
  "type": "import"
 },
 "ray.tune.CLIReporter": {
  "data": {
   "shadows": "ray.tune.progress_reporter.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.Callback": {
  "data": {
   "shadows": "ray.tune.trial_runner.Callback"
  },
  "type": "import"
 },
 "ray.tune.DurableTrainable": {
  "data": {
   "shadows": "ray.tune.durable_trainable.DurableTrainable"
  },
  "type": "import"
 },
 "ray.tune.EarlyStopping": {
  "data": {
   "shadows": "ray.tune.stopper.EarlyStopping"
  },
  "type": "import"
 },
 "ray.tune.Experiment": {
  "data": {
   "shadows": "ray.tune.experiment.Experiment"
  },
  "type": "import"
 },
 "ray.tune.ExperimentAnalysis": {
  "data": {
   "shadows": "ray.tune.analysis.ExperimentAnalysis"
  },
  "type": "import"
 },
 "ray.tune.JupyterNotebookReporter": {
  "data": {
   "shadows": "ray.tune.progress_reporter.JupyterNotebookReporter"
  },
  "type": "import"
 },
 "ray.tune.ProgressReporter": {
  "data": {
   "shadows": "ray.tune.progress_reporter.ProgressReporter"
  },
  "type": "import"
 },
 "ray.tune.Stopper": {
  "data": {
   "shadows": "ray.tune.stopper.Stopper"
  },
  "type": "import"
 },
 "ray.tune.SyncConfig": {
  "data": {
   "shadows": "ray.tune.syncer.SyncConfig"
  },
  "type": "import"
 },
 "ray.tune.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.tune.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.analysis": {
  "data": {},
  "type": "module"
 },
 "ray.tune.analysis.Analysis": {
  "data": {
   "shadows": "ray.tune.analysis.experiment_analysis.Analysis"
  },
  "type": "import"
 },
 "ray.tune.analysis.ExperimentAnalysis": {
  "data": {
   "shadows": "ray.tune.analysis.experiment_analysis.ExperimentAnalysis"
  },
  "type": "import"
 },
 "ray.tune.analysis.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.tune.analysis.experiment_analysis": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas",
    "pandas.DataFrame",
    "ray.tune.analysis.experiment_analysis.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.analysis.experiment_analysis.Analysis": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "pandas",
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.analysis.experiment_analysis.os",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis._get_trial_paths": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ray.tune.analysis.experiment_analysis.os",
    "ray.tune.error.TuneError",
    "ray.tune.result.EXPR_PROGRESS_FILE",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis._retrieve_rows": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "ray.tune.analysis.experiment_analysis.logger",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis._validate_metric": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis._validate_mode": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.dataframe": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.fetch_trial_dataframes": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception",
    "pandas.DataFrame",
    "pandas.read_csv",
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.analysis.experiment_analysis.os",
    "ray.tune.result.EXPR_PROGRESS_FILE",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.get_all_configs": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "list",
    "open",
    "ray.tune.analysis.experiment_analysis.json",
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.analysis.experiment_analysis.os",
    "ray.tune.result.CONFIG_PREFIX",
    "ray.tune.result.EXPR_PARAM_FILE",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.get_best_checkpoint": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "max",
    "min",
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.trial.Trial",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.get_best_config": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "compare_op",
    "max",
    "min",
    "ray.tune.analysis.experiment_analysis.logger",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.get_best_logdir": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "mode_idx",
    "pandas.Series.idxmax",
    "pandas.Series.idxmin",
    "ray.tune.analysis.experiment_analysis.logger",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.get_trial_checkpoints_paths": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "ray.tune.analysis.experiment_analysis.os",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.trainable.TrainableUtil.get_checkpoints_paths",
    "ray.tune.trial.Trial",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Analysis.trial_dataframes": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.CONFIG_PREFIX": {
  "data": {
   "shadows": "ray.tune.result.CONFIG_PREFIX"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.DataFrame": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.analysis.experiment_analysis.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.EXPR_PARAM_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PARAM_FILE"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.EXPR_PROGRESS_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PROGRESS_FILE"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ray.tune.analysis.experiment_analysis.Analysis"
   ]
  },
  "type": "class"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "ray.tune.analysis.experiment_analysis.ExperimentAnalysis",
    "ray.tune.analysis.experiment_analysis.json",
    "ray.tune.analysis.experiment_analysis.os",
    "ray.tune.error.TuneError",
    "ray.tune.trial.Trial",
    "str",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis._get_trial_paths": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.error.TuneError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_checkpoint": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_config": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_dataframe": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_logdir": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_result": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_result_df": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "pandas",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "property",
    "ray.tune.utils.flatten_dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.best_trial": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.get_best_config": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.get_best_logdir": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.get_best_trial": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.analysis.experiment_analysis.logger",
    "ray.tune.trial.Trial",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.results": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.results_df": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError",
    "pandas",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "property",
    "ray.tune.utils.flatten_dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.runner_data": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.ExperimentAnalysis.stats": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.analysis.experiment_analysis.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.tune.analysis.experiment_analysis.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.analysis.experiment_analysis.pd": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.automl": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automl.ContinuousSpace": {
  "data": {
   "shadows": "ray.tune.automl.search_space.ContinuousSpace"
  },
  "type": "import"
 },
 "ray.tune.automl.DiscreteSpace": {
  "data": {
   "shadows": "ray.tune.automl.search_space.DiscreteSpace"
  },
  "type": "import"
 },
 "ray.tune.automl.GeneticSearch": {
  "data": {
   "shadows": "ray.tune.automl.genetic_searcher.GeneticSearch"
  },
  "type": "import"
 },
 "ray.tune.automl.GridSearch": {
  "data": {
   "shadows": "ray.tune.automl.search_policy.GridSearch"
  },
  "type": "import"
 },
 "ray.tune.automl.RandomSearch": {
  "data": {
   "shadows": "ray.tune.automl.search_policy.RandomSearch"
  },
  "type": "import"
 },
 "ray.tune.automl.SearchSpace": {
  "data": {
   "shadows": "ray.tune.automl.search_space.SearchSpace"
  },
  "type": "import"
 },
 "ray.tune.automl.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.tune.automl.genetic_searcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.automl.genetic_searcher.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.automl.genetic_searcher.AutoMLSearcher": {
  "data": {
   "shadows": "ray.tune.automl.search_policy.AutoMLSearcher"
  },
  "type": "import"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "range",
    "ray.tune.automl.genetic_searcher.GeneticSearch",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._crossover": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.random.choice",
    "numpy.random.uniform",
    "range",
    "ray.tune.automl.genetic_searcher.LOGGING_PREFIX",
    "ray.tune.automl.genetic_searcher.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._feedback": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher.CONTINUE",
    "ray.tune.automl.search_policy.AutoMLSearcher.TERMINATE",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._mutation": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.argmax",
    "numpy.random.choice",
    "range",
    "ray.tune.automl.genetic_searcher.LOGGING_PREFIX",
    "ray.tune.automl.genetic_searcher.logger",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._next_generation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.random.uniform",
    "range",
    "ray.tune.automl.genetic_searcher.GeneticSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._next_population_size": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._select": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "ray.tune.automl.genetic_searcher.LOGGING_PREFIX",
    "ray.tune.automl.genetic_searcher.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.GeneticSearch._selection": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "range",
    "ray.tune.automl.genetic_searcher.LOGGING_PREFIX",
    "ray.tune.automl.genetic_searcher.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.genetic_searcher.LOGGING_PREFIX": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.automl.genetic_searcher.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.tune.automl.genetic_searcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automl.genetic_searcher.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.automl.search_policy.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.tune.suggest.SearchAlgorithm"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher",
    "ray.tune.config_parser.make_parser",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher._feedback": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher._generate_next_trials": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "ray.tune.automl.search_policy.copy",
    "ray.tune.automl.search_policy.deep_insert",
    "ray.tune.automl.search_policy.logger",
    "ray.tune.automl.search_policy.time",
    "ray.tune.config_parser.create_trial_from_spec",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher._select": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.add_configurations": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.tune.experiment.convert_to_experiment_list"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.get_best_trial": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.is_finished": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.next_trial": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.on_trial_complete": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "ray.tune.automl.search_policy.AutoMLSearcher",
    "ray.tune.automl.search_policy.logger",
    "ray.tune.automl.search_policy.time",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial.Trial.TERMINATED",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.AutoMLSearcher.on_trial_result": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.GridSearch": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.search_policy.GridSearch._feedback": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.GridSearch._select": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ray.tune.suggest.variant_generator.generate_variants"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.RandomSearch": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.search_policy.RandomSearch.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.RandomSearch",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.RandomSearch._feedback": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ray.tune.automl.search_policy.AutoMLSearcher"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.RandomSearch._select": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "range",
    "ray.tune.suggest.variant_generator.generate_variants"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.SearchAlgorithm": {
  "data": {
   "shadows": "ray.tune.suggest.SearchAlgorithm"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.convert_to_experiment_list": {
  "data": {
   "shadows": "ray.tune.experiment.convert_to_experiment_list"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.create_trial_from_spec": {
  "data": {
   "shadows": "ray.tune.config_parser.create_trial_from_spec"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.deep_insert": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_policy.generate_variants": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.generate_variants"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.automl.search_policy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.make_parser": {
  "data": {
   "shadows": "ray.tune.config_parser.make_parser"
  },
  "type": "import"
 },
 "ray.tune.automl.search_policy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.automl.search_space": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.automl.search_space.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.automl.search_space.ContinuousSpace": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.ParameterSpace"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.search_space.ContinuousSpace.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "numpy.linspace",
    "ray.tune.automl.search_space.ContinuousSpace",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.ContinuousSpace.__str__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.ContinuousSpace.choices_count": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.ContinuousSpace.to_grid_search": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ray.tune.grid_search"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.ContinuousSpace.to_random_choice": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.random"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.DiscreteSpace": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.ParameterSpace"
   ]
  },
  "type": "class"
 },
 "ray.tune.automl.search_space.DiscreteSpace.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.DiscreteSpace",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.DiscreteSpace.__str__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.DiscreteSpace.choices_count": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.DiscreteSpace.to_grid_search": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.tune.grid_search"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.DiscreteSpace.to_random_choice": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.random"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.ParameterSpace": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.tune.automl.search_space.ParameterSpace.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.SearchSpace": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "ray.tune.automl.search_space.SearchSpace.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.tune.automl.search_space.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.SearchSpace.apply_one_hot_encoding": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.argmax",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.SearchSpace.generate_random_one_hot_encoding": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.zeros",
    "ray.tune.automl.search_space.random"
   ]
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.SearchSpace.to_grid_search": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.SearchSpace.to_random_choice": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ray.tune.automl.search_space.grid_search": {
  "data": {
   "shadows": "ray.tune.grid_search"
  },
  "type": "import"
 },
 "ray.tune.automl.search_space.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.automl.search_space.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automl.search_space.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.automl.search_space.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.automlboard": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.backend": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.backend.collector": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.backend.collector.Collector": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.backend.collector.Collector.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.tune.automlboard.backend.collector.Collector",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._add_results": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ray.tune.automlboard.models.models.ResultRecord.from_json"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._build_job_meta": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.backend.collector.os",
    "ray.tune.automlboard.common.utils.parse_json",
    "ray.tune.automlboard.common.utils.timestamp2date",
    "ray.tune.result.JOB_META_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._build_trial_meta": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "isinstance",
    "ray.tune.automlboard.backend.collector.os",
    "ray.tune.automlboard.common.utils.parse_json",
    "ray.tune.automlboard.common.utils.timestamp2date",
    "ray.tune.result.EXPR_META_FILE",
    "ray.tune.result.EXPR_PARAM_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._create_job_info": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ray.tune.automlboard.models.models.JobRecord.from_json"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._create_trial_info": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.tune.automlboard.models.models.TrialRecord.from_json"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._do_collect": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "filter",
    "ray.tune.automlboard.backend.collector.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._initialize": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.tune.automlboard.backend.collector.os",
    "ray.tune.automlboard.common.exception.CollectorError",
    "ray.tune.automlboard.models.models.JobRecord.objects.filter",
    "ray.tune.automlboard.models.models.ResultRecord.objects.filter",
    "ray.tune.automlboard.models.models.TrialRecord.objects.filter"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._update_job_info": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.backend.collector.logging",
    "ray.tune.automlboard.backend.collector.os",
    "ray.tune.automlboard.common.utils.parse_json",
    "ray.tune.automlboard.common.utils.timestamp2date",
    "ray.tune.automlboard.models.models.JobRecord.objects.filter",
    "ray.tune.result.JOB_META_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector._update_trial_info": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "ray.tune.automlboard.backend.collector.os",
    "ray.tune.automlboard.common.utils.parse_json",
    "ray.tune.automlboard.common.utils.parse_multiple_json",
    "ray.tune.automlboard.common.utils.timestamp2date",
    "ray.tune.automlboard.models.models.TrialRecord.objects.filter",
    "ray.tune.result.EXPR_META_FILE",
    "ray.tune.result.EXPR_RESULT_FILE",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector.run": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.tune.automlboard.backend.collector.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector.stop": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector.sync_job_info": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "filter",
    "ray.tune.automlboard.backend.collector.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.Collector.sync_trial_info": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ray.tune.automlboard.backend.collector.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.CollectorError": {
  "data": {
   "shadows": "ray.tune.automlboard.common.exception.CollectorError"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.CollectorService": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ray.tune.automlboard.backend.collector.CollectorService.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.tune.automlboard.backend.collector.Collector",
    "ray.tune.result.DEFAULT_RESULTS_DIR"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.CollectorService.init_logger": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.backend.collector.logging"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.CollectorService.run": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.CollectorService.stop": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.tune.automlboard.backend.collector.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.EXPR_META_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_META_FILE"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.EXPR_PARAM_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PARAM_FILE"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.EXPR_RESULT_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_RESULT_FILE"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.JOB_META_FILE": {
  "data": {
   "shadows": "ray.tune.result.JOB_META_FILE"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.JobRecord": {
  "data": {
   "shadows": "ray.tune.automlboard.models.models.JobRecord"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.ResultRecord": {
  "data": {
   "shadows": "ray.tune.automlboard.models.models.ResultRecord"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.TrialRecord": {
  "data": {
   "shadows": "ray.tune.automlboard.models.models.TrialRecord"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.parse_json": {
  "data": {
   "shadows": "ray.tune.automlboard.common.utils.parse_json"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.parse_multiple_json": {
  "data": {
   "shadows": "ray.tune.automlboard.common.utils.parse_multiple_json"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.automlboard.backend.collector.timestamp2date": {
  "data": {
   "shadows": "ray.tune.automlboard.common.utils.timestamp2date"
  },
  "type": "import"
 },
 "ray.tune.automlboard.common": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.common.exception": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.common.exception.CollectorError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.common.exception.DatabaseError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.common.utils": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.common.utils.dump_json": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "BaseException",
    "open",
    "ray.tune.automlboard.common.utils.json",
    "ray.tune.automlboard.common.utils.logging"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.common.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.automlboard.common.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automlboard.common.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.automlboard.common.utils.parse_json": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "BaseException",
    "open",
    "ray.tune.automlboard.common.utils.json",
    "ray.tune.automlboard.common.utils.logging",
    "ray.tune.automlboard.common.utils.os",
    "ray.tune.automlboard.common.utils.unicode2str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.common.utils.parse_multiple_json": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "BaseException",
    "len",
    "open",
    "ray.tune.automlboard.common.utils.json",
    "ray.tune.automlboard.common.utils.logging",
    "ray.tune.automlboard.common.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.common.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.automlboard.common.utils.timestamp2date": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.tune.automlboard.common.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.common.utils.unicode2str": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.frontend": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.frontend.query": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.frontend.query.HttpResponse": {
  "data": {
   "shadows": "django.shortcuts.HttpResponse"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.query.JobRecord": {
  "data": {
   "shadows": "ray.tune.automlboard.models.models.JobRecord"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.query.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.query.TrialRecord": {
  "data": {
   "shadows": "ray.tune.automlboard.models.models.TrialRecord"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.query.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.query.query_job": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "django.shortcuts.HttpResponse",
    "float",
    "int",
    "len",
    "ray.tune.automlboard.frontend.query.json",
    "ray.tune.automlboard.models.models.JobRecord.objects.filter",
    "ray.tune.automlboard.models.models.TrialRecord.objects.filter",
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial.Trial.TERMINATED",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.frontend.query.query_trial": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "django.shortcuts.HttpResponse",
    "len",
    "ray.tune.automlboard.frontend.query.json",
    "ray.tune.automlboard.models.models.TrialRecord.objects.filter"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.frontend.urls": {
  "data": {
   "symbols_in_volume": [
    "django.conf.urls.url",
    "django.contrib.admin.site.urls",
    "ray.tune.automlboard.frontend.query.query_job",
    "ray.tune.automlboard.frontend.query.query_trial",
    "ray.tune.automlboard.frontend.view.index",
    "ray.tune.automlboard.frontend.view.job",
    "ray.tune.automlboard.frontend.view.trial"
   ]
  },
  "type": "module"
 },
 "ray.tune.automlboard.frontend.urls.admin": {
  "data": {
   "shadows": "django.contrib.admin"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.urls.query": {
  "data": {
   "shadows": "ray.tune.automlboard.frontend.query"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.urls.url": {
  "data": {
   "shadows": "django.conf.urls.url"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.urls.urlpatterns": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.tune.automlboard.frontend.urls.view": {
  "data": {
   "shadows": "ray.tune.automlboard.frontend.view"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.wsgi": {
  "data": {
   "symbols_in_volume": [
    "django.core.wsgi.get_wsgi_application",
    "ray.tune.automlboard.frontend.wsgi.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.automlboard.frontend.wsgi.application": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.automlboard.frontend.wsgi.get_wsgi_application": {
  "data": {
   "shadows": "django.core.wsgi.get_wsgi_application"
  },
  "type": "import"
 },
 "ray.tune.automlboard.frontend.wsgi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.automlboard.manage": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "django.core.management.execute_from_command_line",
    "ray.tune.automlboard.manage.os",
    "ray.tune.automlboard.manage.sys"
   ]
  },
  "type": "module"
 },
 "ray.tune.automlboard.manage.execute_from_command_line": {
  "data": {
   "shadows": "django.core.management.execute_from_command_line"
  },
  "type": "import"
 },
 "ray.tune.automlboard.manage.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.automlboard.manage.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.tune.automlboard.models": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.models.apps": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.models.apps.AppConfig": {
  "data": {
   "shadows": "django.apps.AppConfig"
  },
  "type": "import"
 },
 "ray.tune.automlboard.models.apps.ModelConfig": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "django.apps.AppConfig"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.models.default_app_config": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.tune.automlboard.models.models": {
  "data": {},
  "type": "module"
 },
 "ray.tune.automlboard.models.models.JobRecord": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "django.db.models.CharField",
    "django.db.models.Model",
    "type"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.models.models.JobRecord.from_json": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.models.models.JobRecord"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.models.models.JobRecord.is_finished": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.tune.automlboard.models.models.ResultRecord": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "django.db.models.BigIntegerField",
    "django.db.models.CharField",
    "django.db.models.FloatField",
    "django.db.models.Model"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.models.models.ResultRecord.from_json": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.models.models.ResultRecord"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.models.models.TrialRecord": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "django.db.models.CharField",
    "django.db.models.Model"
   ]
  },
  "type": "class"
 },
 "ray.tune.automlboard.models.models.TrialRecord.from_json": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.automlboard.models.models.TrialRecord"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.models.models.models": {
  "data": {
   "shadows": "django.db.models"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.automlboard.run.logging",
    "ray.tune.automlboard.run.main",
    "ray.tune.automlboard.run.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.automlboard.run.CollectorService": {
  "data": {
   "shadows": "backend.collector.CollectorService"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.DatabaseError": {
  "data": {
   "shadows": "common.exception.DatabaseError"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.django": {
  "data": {
   "shadows": "django"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.execute_from_command_line": {
  "data": {
   "shadows": "django.core.management.execute_from_command_line"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.init_config": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "BaseException",
    "common.exception.DatabaseError",
    "django.core.management.execute_from_command_line",
    "ray.tune.automlboard.run.django",
    "ray.tune.automlboard.run.logger",
    "ray.tune.automlboard.run.os",
    "ray.tune.automlboard.run.re",
    "ray.tune.automlboard.run.root_path",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.run.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.automlboard.run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.main": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "ray.tune.automlboard.run.argparse",
    "ray.tune.automlboard.run.run_board",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.tune.automlboard.run.root_path": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.tune.automlboard.run.run_board": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "backend.collector.CollectorService",
    "django.core.management.execute_from_command_line",
    "ray.tune.automlboard.run.init_config",
    "ray.tune.automlboard.run.logger",
    "ray.tune.automlboard.run.os",
    "ray.tune.automlboard.run.root_path"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.settings": {
  "data": {
   "symbols_in_volume": [
    "ray.tune.automlboard.settings.BASE_DIR",
    "ray.tune.automlboard.settings.VALIDATION_PREFIX",
    "ray.tune.automlboard.settings.lookup_db_engine",
    "ray.tune.automlboard.settings.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.automlboard.settings.ALLOWED_HOSTS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.AUTH_PASSWORD_VALIDATORS": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.AUTOMLBOARD_LOG_DIR": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.AUTOMLBOARD_LOG_LEVEL": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.AUTOMLBOARD_RELOAD_INTERVAL": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.BASE_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.DATABASES": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.DB_ENGINE_NAME_MAP": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.DEBUG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.INSTALLED_APPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.LANGUAGE_CODE": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.MIDDLEWARE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.ROOT_URLCONF": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.SECRET_KEY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.STATICFILES_DIRS": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.STATIC_URL": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.TEMPLATES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.TIME_ZONE": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.USE_I18N": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.USE_L10N": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.USE_TZ": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.VALIDATION_PREFIX": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.WSGI_APPLICATION": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.tune.automlboard.settings.lookup_db_engine": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ray.tune.automlboard.settings.DB_ENGINE_NAME_MAP"
   ]
  },
  "type": "function"
 },
 "ray.tune.automlboard.settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.checkpoint_dir": {
  "data": {
   "shadows": "ray.tune.session.checkpoint_dir"
  },
  "type": "import"
 },
 "ray.tune.checkpoint_manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.checkpoint_manager.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.checkpoint_manager.Checkpoint": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "ray.tune.checkpoint_manager.Checkpoint.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.Checkpoint.__repr__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.Checkpoint.from_object": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.tune.checkpoint_manager.Checkpoint",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.Checkpoint.is_ready": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "ray.tune.checkpoint_manager.Checkpoint",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.__getstate__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ray.tune.checkpoint_manager.Checkpoint"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "float",
    "ray.tune.checkpoint_manager.Checkpoint",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.__setstate__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager._priority": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.best_checkpoints": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.newest_checkpoint": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "max",
    "property",
    "ray.tune.result.TRAINING_ITERATION"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.newest_memory_checkpoint": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.CheckpointManager.on_checkpoint": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "ray.tune.checkpoint_manager.Checkpoint",
    "ray.tune.checkpoint_manager.QueueItem",
    "ray.tune.checkpoint_manager.heapq",
    "ray.tune.checkpoint_manager.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.QueueItem": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "ray.tune.checkpoint_manager.QueueItem.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.QueueItem.__lt__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.QueueItem.__repr__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "ray.tune.checkpoint_manager.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.checkpoint_manager.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "ray.tune.checkpoint_manager.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.checkpoint_manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.choice": {
  "data": {
   "shadows": "ray.tune.sample.choice"
  },
  "type": "import"
 },
 "ray.tune.cluster_info": {
  "data": {},
  "type": "module"
 },
 "ray.tune.cluster_info.get_ssh_key": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.tune.cluster_info.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.cluster_info.get_ssh_user": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.tune.cluster_info.getpass"
   ]
  },
  "type": "function"
 },
 "ray.tune.cluster_info.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "ray.tune.cluster_info.is_ray_cluster": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.tune.cluster_info.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.cluster_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.commands": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "int",
    "ray.tune.commands.logging",
    "ray.tune.commands.operator",
    "ray.tune.commands.os",
    "ray.tune.commands.subprocess",
    "ray.tune.result.DEFAULT_EXPERIMENT_INFO_KEYS",
    "ray.tune.result.DEFAULT_RESULT_KEYS",
    "tabulate.tabulate"
   ]
  },
  "type": "module"
 },
 "ray.tune.commands.Analysis": {
  "data": {
   "shadows": "ray.tune.analysis.Analysis"
  },
  "type": "import"
 },
 "ray.tune.commands.CONFIG_PREFIX": {
  "data": {
   "shadows": "ray.tune.result.CONFIG_PREFIX"
  },
  "type": "import"
 },
 "ray.tune.commands.DEFAULT_CLI_KEYS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.tune.commands.DEFAULT_EXPERIMENT_INFO_KEYS": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_EXPERIMENT_INFO_KEYS"
  },
  "type": "import"
 },
 "ray.tune.commands.DEFAULT_PROJECT_INFO_KEYS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.tune.commands.DEFAULT_RESULT_KEYS": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULT_KEYS"
  },
  "type": "import"
 },
 "ray.tune.commands.EDITOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.commands.OPERATORS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.commands.TIMESTAMP_FORMAT": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.commands.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.commands._check_tabulate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ImportError",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.add_note": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "print",
    "ray.tune.commands.EDITOR",
    "ray.tune.commands.click",
    "ray.tune.commands.os",
    "ray.tune.commands.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.tune.commands.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.tune.commands.is_numeric_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_numeric_dtype"
  },
  "type": "import"
 },
 "ray.tune.commands.is_string_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_string_dtype"
  },
  "type": "import"
 },
 "ray.tune.commands.list_experiments": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float",
    "list",
    "next",
    "op",
    "pandas.DataFrame",
    "pandas.api.types.is_numeric_dtype",
    "pandas.api.types.is_string_dtype",
    "ray.tune.commands.DEFAULT_PROJECT_INFO_KEYS",
    "ray.tune.commands.OPERATORS",
    "ray.tune.commands._check_tabulate",
    "ray.tune.commands.click",
    "ray.tune.commands.os",
    "ray.tune.commands.print_format_output",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.list_trials": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "float",
    "key_filter",
    "list",
    "op",
    "pandas.api.types.is_numeric_dtype",
    "pandas.api.types.is_string_dtype",
    "pandas.option_context",
    "ray.tune.TuneError",
    "ray.tune.analysis.Analysis",
    "ray.tune.commands.OPERATORS",
    "ray.tune.commands.TIMESTAMP_FORMAT",
    "ray.tune.commands._check_tabulate",
    "ray.tune.commands.click",
    "ray.tune.commands.os",
    "ray.tune.commands.print_format_output",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.list_trials.key_filter": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.tune.commands.DEFAULT_CLI_KEYS",
    "ray.tune.result.CONFIG_PREFIX"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.tune.commands.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.commands.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "ray.tune.commands.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.commands.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ray.tune.commands.print_format_output": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "pandas.DataFrame",
    "print",
    "ray.tune.commands.click",
    "str",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "ray.tune.commands.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.tune.commands.tabulate": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.config_parser": {
  "data": {},
  "type": "module"
 },
 "ray.tune.config_parser.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.config_parser.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.config_parser._SafeFallbackEncoder": {
  "data": {
   "shadows": "ray.tune.logger._SafeFallbackEncoder"
  },
  "type": "import"
 },
 "ray.tune.config_parser.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.config_parser.create_trial_from_spec": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "SystemExit",
    "ray.tune.TuneError",
    "ray.tune.config_parser.os",
    "ray.tune.config_parser.to_argv",
    "ray.tune.resources.json_to_resources",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.config_parser.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.config_parser.json_to_resources": {
  "data": {
   "shadows": "ray.tune.resources.json_to_resources"
  },
  "type": "import"
 },
 "ray.tune.config_parser.make_parser": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "parser_creator",
    "ray.tune.config_parser.argparse",
    "ray.tune.config_parser.json",
    "ray.tune.resources.json_to_resources",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.config_parser.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.config_parser.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "ray.tune.config_parser.to_argv": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "ray.tune.config_parser.json",
    "ray.tune.logger._SafeFallbackEncoder",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "ray.tune.create_scheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.create_scheduler"
  },
  "type": "import"
 },
 "ray.tune.create_searcher": {
  "data": {
   "shadows": "ray.tune.suggest.create_searcher"
  },
  "type": "import"
 },
 "ray.tune.durable_trainable": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.durable_trainable.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.durable_trainable.DurableTrainable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.durable_trainable.DurableTrainable.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.tune.durable_trainable.DurableTrainable",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.DurableTrainable._create_storage_client": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.tune.syncer.get_cloud_sync_client"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.DurableTrainable._storage_path": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.tune.durable_trainable.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.DurableTrainable.delete_checkpoint": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ray.tune.durable_trainable.DurableTrainable",
    "ray.tune.durable_trainable.logger",
    "ray.tune.trainable.TrainableUtil.find_checkpoint_dir",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.DurableTrainable.restore": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.tune.durable_trainable.DurableTrainable",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.DurableTrainable.save": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.durable_trainable.DurableTrainable",
    "ray.tune.durable_trainable.os",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.durable_trainable.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.tune.durable_trainable.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.durable_trainable.get_cloud_sync_client": {
  "data": {
   "shadows": "ray.tune.syncer.get_cloud_sync_client"
  },
  "type": "import"
 },
 "ray.tune.durable_trainable.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.durable_trainable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.durable_trainable.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.error": {
  "data": {},
  "type": "module"
 },
 "ray.tune.error.AbortTrialExecution": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ray.tune.error.TuneError"
   ]
  },
  "type": "class"
 },
 "ray.tune.error.TuneError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples": {
  "data": {},
  "type": "module"
 },
 "ray.tune.examples.async_hyperband_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.tune.examples.async_hyperband_example.MyTrainableClass",
    "ray.tune.examples.async_hyperband_example.ahb",
    "ray.tune.examples.async_hyperband_example.argparse",
    "ray.tune.examples.async_hyperband_example.parser",
    "ray.tune.examples.async_hyperband_example.random",
    "ray.tune.examples.async_hyperband_example.ray",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.AsyncHyperBandScheduler"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.async_hyperband_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.MyTrainableClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.async_hyperband_example.MyTrainableClass.load_checkpoint": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.async_hyperband_example.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.async_hyperband_example.MyTrainableClass.save_checkpoint": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.async_hyperband_example.json",
    "ray.tune.examples.async_hyperband_example.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.async_hyperband_example.MyTrainableClass.setup": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ray.tune.examples.async_hyperband_example.MyTrainableClass.step": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.async_hyperband_example.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.ahb": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.tune.examples.async_hyperband_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.parser": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.tune.examples.async_hyperband_example.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.async_hyperband_example.sample_from": {
  "data": {
   "shadows": "ray.tune.sample_from"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.ax_example.algo",
    "ray.tune.examples.ax_example.argparse",
    "ray.tune.examples.ax_example.easy_objective",
    "ray.tune.examples.ax_example.parser",
    "ray.tune.examples.ax_example.ray",
    "ray.tune.examples.ax_example.scheduler",
    "ray.tune.examples.ax_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ax.AxSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.ax_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.AxSearch": {
  "data": {
   "shadows": "ray.tune.suggest.ax.AxSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.algo": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.tune.examples.ax_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.easy_objective": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "range",
    "ray.tune.examples.ax_example.hartmann6",
    "ray.tune.examples.ax_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.ax_example.hartmann6": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.exp",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.ax_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.parser": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.tune.examples.ax_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.scheduler": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "ray.tune.examples.ax_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.ax_example.tune_kwargs": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.tune.examples.bayesopt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.bayesopt_example.algo",
    "ray.tune.examples.bayesopt_example.argparse",
    "ray.tune.examples.bayesopt_example.easy_objective",
    "ray.tune.examples.bayesopt_example.parser",
    "ray.tune.examples.bayesopt_example.ray",
    "ray.tune.examples.bayesopt_example.scheduler",
    "ray.tune.examples.bayesopt_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.bayesopt.BayesOptSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.bayesopt_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.BayesOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.bayesopt.BayesOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.algo": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.tune.examples.bayesopt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.bayesopt_example.evaluation_fn",
    "ray.tune.examples.bayesopt_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.bayesopt_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.bayesopt_example.parser": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.examples.bayesopt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.scheduler": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.tune.examples.bayesopt_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.bayesopt_example.tune_kwargs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.examples.bohb_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "ray.tune.choice",
    "ray.tune.examples.bohb_example.MyTrainableClass",
    "ray.tune.examples.bohb_example.bohb_hyperband",
    "ray.tune.examples.bohb_example.bohb_search",
    "ray.tune.examples.bohb_example.config",
    "ray.tune.examples.bohb_example.experiment_metrics",
    "ray.tune.examples.bohb_example.ray",
    "ray.tune.run",
    "ray.tune.schedulers.hb_bohb.HyperBandForBOHB",
    "ray.tune.suggest.bohb.TuneBOHB",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.bohb_example.CS": {
  "data": {
   "shadows": "ConfigSpace"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.HyperBandForBOHB": {
  "data": {
   "shadows": "ray.tune.schedulers.hb_bohb.HyperBandForBOHB"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.MyTrainableClass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.bohb_example.MyTrainableClass.load_checkpoint": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.bohb_example.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.bohb_example.MyTrainableClass.save_checkpoint": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.bohb_example.json",
    "ray.tune.examples.bohb_example.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.bohb_example.MyTrainableClass.setup": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ray.tune.examples.bohb_example.MyTrainableClass.step": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.bohb_example.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.TuneBOHB": {
  "data": {
   "shadows": "ray.tune.suggest.bohb.TuneBOHB"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.bohb_hyperband": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.tune.examples.bohb_example.bohb_search": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "ray.tune.examples.bohb_example.config": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.tune.examples.bohb_example.experiment_metrics": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.tune.examples.bohb_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.bohb_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.cifar10_pytorch.argparse",
    "ray.tune.examples.cifar10_pytorch.main",
    "ray.tune.examples.cifar10_pytorch.parser",
    "ray.tune.examples.cifar10_pytorch.ray"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.cifar10_pytorch.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.Net": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.cifar10_pytorch.Net.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.tune.examples.cifar10_pytorch.Net",
    "super",
    "torch.nn.Conv2d",
    "torch.nn.Linear",
    "torch.nn.MaxPool2d"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.Net.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.load_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.tune.examples.cifar10_pytorch.torchvision",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.main": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.random.randint",
    "print",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.examples.cifar10_pytorch.Net",
    "ray.tune.examples.cifar10_pytorch.load_data",
    "ray.tune.examples.cifar10_pytorch.os",
    "ray.tune.examples.cifar10_pytorch.test_accuracy",
    "ray.tune.examples.cifar10_pytorch.torch",
    "ray.tune.examples.cifar10_pytorch.train_cifar",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.ASHAScheduler",
    "torch.nn.DataParallel"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.parser": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "ray.tune.examples.cifar10_pytorch.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.random_split": {
  "data": {
   "shadows": "torch.utils.data.random_split"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.test_accuracy": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "net",
    "ray.tune.examples.cifar10_pytorch.load_data",
    "ray.tune.examples.cifar10_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.torchvision": {
  "data": {
   "shadows": "torchvision"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.train_cifar": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "criterion",
    "enumerate",
    "int",
    "len",
    "net",
    "net.state_dict",
    "print",
    "range",
    "ray.tune.checkpoint_dir",
    "ray.tune.examples.cifar10_pytorch.Net",
    "ray.tune.examples.cifar10_pytorch.load_data",
    "ray.tune.examples.cifar10_pytorch.os",
    "ray.tune.examples.cifar10_pytorch.torch",
    "ray.tune.report",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.DataParallel",
    "torch.optim.SGD",
    "torch.utils.data.random_split"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.cifar10_pytorch.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.tune.examples.cifar10_pytorch.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "int",
    "ray.tune.examples.ddp_mnist_torch.argparse",
    "ray.tune.examples.ddp_mnist_torch.args",
    "ray.tune.examples.ddp_mnist_torch.logging",
    "ray.tune.examples.ddp_mnist_torch.options",
    "ray.tune.examples.ddp_mnist_torch.parser",
    "ray.tune.examples.ddp_mnist_torch.ray",
    "ray.tune.examples.ddp_mnist_torch.train_mnist",
    "ray.tune.examples.ddp_mnist_torch.trainable_cls",
    "ray.tune.integration.torch.DistributedTrainableCreator",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.ddp_mnist_torch.ConvNet": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.ConvNet"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.DistributedDataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DistributedDataParallel"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.DistributedTrainableCreator": {
  "data": {
   "shadows": "ray.tune.integration.torch.DistributedTrainableCreator"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.args": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.tune.examples.ddp_mnist_torch.distributed_checkpoint_dir": {
  "data": {
   "shadows": "ray.tune.integration.torch.distributed_checkpoint_dir"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.get_data_loaders": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.get_data_loaders"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.examples.ddp_mnist_torch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.options": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "ray.tune.examples.ddp_mnist_torch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.parser": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.tune.examples.ddp_mnist_torch.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.test": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.test"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.train": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.train"
  },
  "type": "import"
 },
 "ray.tune.examples.ddp_mnist_torch.train_mnist": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "open",
    "range",
    "ray.tune.examples.ddp_mnist_torch.os",
    "ray.tune.examples.ddp_mnist_torch.torch",
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.mnist_pytorch.train",
    "ray.tune.integration.torch.distributed_checkpoint_dir",
    "ray.tune.report",
    "torch.nn.parallel.DistributedDataParallel",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.ddp_mnist_torch.trainable_cls": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "ray.tune.examples.ddp_mnist_torch.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.dragonfly_example.argparse",
    "ray.tune.examples.dragonfly_example.df_search",
    "ray.tune.examples.dragonfly_example.objective",
    "ray.tune.examples.dragonfly_example.parser",
    "ray.tune.examples.dragonfly_example.ray",
    "ray.tune.examples.dragonfly_example.scheduler",
    "ray.tune.examples.dragonfly_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.dragonfly.DragonflySearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.dragonfly_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.DragonflySearch": {
  "data": {
   "shadows": "ray.tune.suggest.dragonfly.DragonflySearch"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.df_search": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "ray.tune.examples.dragonfly_example.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.objective": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.random.normal",
    "range",
    "ray.tune.examples.dragonfly_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.dragonfly_example.parser": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.examples.dragonfly_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.scheduler": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "ray.tune.examples.dragonfly_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.dragonfly_example.tune_kwargs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.exponential",
    "numpy.random.rand",
    "ray.tune.DurableTrainable",
    "ray.tune.SyncConfig",
    "ray.tune.examples.durable_trainable_example.MockDurableTrainable",
    "ray.tune.examples.durable_trainable_example.address",
    "ray.tune.examples.durable_trainable_example.args",
    "ray.tune.examples.durable_trainable_example.config",
    "ray.tune.examples.durable_trainable_example.get_optimus_trainable",
    "ray.tune.examples.durable_trainable_example.logging",
    "ray.tune.examples.durable_trainable_example.parent",
    "ray.tune.examples.durable_trainable_example.parse",
    "ray.tune.examples.durable_trainable_example.ray",
    "ray.tune.examples.durable_trainable_example.sync_config",
    "ray.tune.examples.durable_trainable_example.time",
    "ray.tune.run",
    "ray.tune.sample_from",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.durable_trainable_example.DurableTrainable": {
  "data": {
   "shadows": "ray.tune.DurableTrainable"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.MockDurableTrainable": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.tune.DurableTrainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.durable_trainable_example.MockDurableTrainable.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.tune.examples.durable_trainable_example.MockDurableTrainable",
    "ray.tune.examples.durable_trainable_example.logger",
    "ray.tune.examples.durable_trainable_example.os",
    "ray.tune.examples.durable_trainable_example.ray",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.MockDurableTrainable._create_storage_client": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.tune.sync_client.get_sync_client"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.OptimusFn": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.durable_trainable_example.OptimusFn.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.OptimusFn.eval": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.address": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.analysis": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.args": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.config": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable.OptimusTrainable": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable.OptimusTrainable.load_checkpoint": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.random.set_state",
    "ray.cloudpickle.loads"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable.OptimusTrainable.save_checkpoint": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.random.get_state",
    "ray.cloudpickle.dumps",
    "ray.tune.examples.durable_trainable_example.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable.OptimusTrainable.setup": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.random.seed",
    "open",
    "ray.tune.examples.durable_trainable_example.OptimusFn",
    "ray.tune.examples.durable_trainable_example.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.get_optimus_trainable.OptimusTrainable.step": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "ray.tune.examples.durable_trainable_example.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.get_sync_client": {
  "data": {
   "shadows": "ray.tune.sync_client.get_sync_client"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.parent": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.parse": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ray.tune.examples.durable_trainable_example.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.durable_trainable_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.sync_config": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "ray.tune.examples.durable_trainable_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.durable_trainable_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.automl.ContinuousSpace",
    "ray.tune.automl.DiscreteSpace",
    "ray.tune.automl.GeneticSearch",
    "ray.tune.automl.SearchSpace",
    "ray.tune.examples.genetic_example.algo",
    "ray.tune.examples.genetic_example.argparse",
    "ray.tune.examples.genetic_example.config",
    "ray.tune.examples.genetic_example.michalewicz_function",
    "ray.tune.examples.genetic_example.parser",
    "ray.tune.examples.genetic_example.ray",
    "ray.tune.examples.genetic_example.scheduler",
    "ray.tune.examples.genetic_example.space",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.genetic_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.ContinuousSpace": {
  "data": {
   "shadows": "ray.tune.automl.ContinuousSpace"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.DiscreteSpace": {
  "data": {
   "shadows": "ray.tune.automl.DiscreteSpace"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.GeneticSearch": {
  "data": {
   "shadows": "ray.tune.automl.GeneticSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.SearchSpace": {
  "data": {
   "shadows": "ray.tune.automl.SearchSpace"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.algo": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ray.tune.examples.genetic_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.config": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.tune.examples.genetic_example.michalewicz_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.pi",
    "numpy.power",
    "numpy.sin",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.genetic_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.parser": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.tune.examples.genetic_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.genetic_example.scheduler": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ray.tune.examples.genetic_example.space": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.tune.examples.genetic_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "ray.tune.examples.horovod_simple.analysis",
    "ray.tune.examples.horovod_simple.argparse",
    "ray.tune.examples.horovod_simple.args",
    "ray.tune.examples.horovod_simple.horovod_trainable",
    "ray.tune.examples.horovod_simple.parser",
    "ray.tune.examples.horovod_simple.ray",
    "ray.tune.examples.horovod_simple.train",
    "ray.tune.integration.horovod.DistributedTrainableCreator",
    "ray.tune.run",
    "ray.tune.uniform",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.horovod_simple.DistributedTrainableCreator": {
  "data": {
   "shadows": "ray.tune.integration.horovod.DistributedTrainableCreator"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.Net": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.tune.examples.horovod_simple.torch"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.horovod_simple.Net.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.tune.examples.horovod_simple.Net",
    "ray.tune.examples.horovod_simple.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.horovod_simple.Net.forward": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.tune.examples.horovod_simple.analysis": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "ray.tune.examples.horovod_simple.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.args": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ray.tune.examples.horovod_simple.config": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.tune.examples.horovod_simple.horovod_trainable": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "ray.tune.examples.horovod_simple.hvd": {
  "data": {
   "shadows": "horovod.torch"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.parser": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "ray.tune.examples.horovod_simple.qu": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "ray.tune.examples.horovod_simple.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.sq": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ray.tune.examples.horovod_simple.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.horovod_simple.train": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "horovod.torch.DistributedOptimizer",
    "horovod.torch.broadcast_optimizer_state",
    "horovod.torch.broadcast_parameters",
    "horovod.torch.init",
    "horovod.torch.rank",
    "horovod.torch.size",
    "net",
    "numpy.random.rand",
    "numpy.random.seed",
    "print",
    "range",
    "ray.tune.examples.horovod_simple.Net",
    "ray.tune.examples.horovod_simple.qu",
    "ray.tune.examples.horovod_simple.sq",
    "ray.tune.examples.horovod_simple.time",
    "ray.tune.examples.horovod_simple.torch",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.horovod_simple.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.hyperband_example.MyTrainableClass",
    "ray.tune.examples.hyperband_example.argparse",
    "ray.tune.examples.hyperband_example.hyperband",
    "ray.tune.examples.hyperband_example.parser",
    "ray.tune.examples.hyperband_example.ray",
    "ray.tune.randint",
    "ray.tune.run",
    "ray.tune.schedulers.HyperBandScheduler"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.hyperband_example.HyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.HyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.MyTrainableClass": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.hyperband_example.MyTrainableClass.load_checkpoint": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.hyperband_example.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.hyperband_example.MyTrainableClass.save_checkpoint": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.hyperband_example.json",
    "ray.tune.examples.hyperband_example.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.hyperband_example.MyTrainableClass.setup": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.tune.examples.hyperband_example.MyTrainableClass.step": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.hyperband_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.hyperband": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperband_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.parser": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperband_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.hyperband_function_example.argparse",
    "ray.tune.examples.hyperband_function_example.hyperband",
    "ray.tune.examples.hyperband_function_example.parser",
    "ray.tune.examples.hyperband_function_example.ray",
    "ray.tune.examples.hyperband_function_example.train",
    "ray.tune.run",
    "ray.tune.schedulers.HyperBandScheduler",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.hyperband_function_example.HyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.HyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.hyperband": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperband_function_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.parser": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperband_function_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperband_function_example.train": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "float",
    "numpy.tanh",
    "open",
    "range",
    "ray.tune.checkpoint_dir",
    "ray.tune.examples.hyperband_function_example.json",
    "ray.tune.examples.hyperband_function_example.os",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.hyperband_function_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.choice",
    "ray.tune.examples.hyperopt_example.algo",
    "ray.tune.examples.hyperopt_example.argparse",
    "ray.tune.examples.hyperopt_example.current_best_params",
    "ray.tune.examples.hyperopt_example.easy_objective",
    "ray.tune.examples.hyperopt_example.parser",
    "ray.tune.examples.hyperopt_example.ray",
    "ray.tune.examples.hyperopt_example.scheduler",
    "ray.tune.examples.hyperopt_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.hyperopt.HyperOptSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.hyperopt_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.HyperOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.hyperopt.HyperOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.algo": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperopt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.current_best_params": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperopt_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.hyperopt_example.evaluation_fn",
    "ray.tune.examples.hyperopt_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.hyperopt_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.hyperopt_example.parser": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperopt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.scheduler": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "ray.tune.examples.hyperopt_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.hyperopt_example.tune_kwargs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.tune.examples.lightgbm_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.lightgbm_example.config",
    "ray.tune.examples.lightgbm_example.train_breast_cancer",
    "ray.tune.grid_search",
    "ray.tune.loguniform",
    "ray.tune.randint",
    "ray.tune.run",
    "ray.tune.schedulers.ASHAScheduler"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.lightgbm_example.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.LightGBMCallback": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.lightgbm_example.config": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.examples.lightgbm_example.lgb": {
  "data": {
   "shadows": "lightgbm"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.sklearn.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.sklearn.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.train_breast_cancer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "lightgbm.Dataset",
    "lightgbm.train",
    "numpy.rint",
    "ray.tune.examples.lightgbm_example.LightGBMCallback",
    "ray.tune.report",
    "sklearn.model_selection.train_test_split"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.lightgbm_example.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "ray.tune.examples.lightgbm_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.logging_example.MyTrainableClass",
    "ray.tune.examples.logging_example.TestLogger",
    "ray.tune.examples.logging_example.argparse",
    "ray.tune.examples.logging_example.parser",
    "ray.tune.examples.logging_example.trial_str_creator",
    "ray.tune.loguniform",
    "ray.tune.randint",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.logging_example.MyTrainableClass": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.logging_example.MyTrainableClass.load_checkpoint": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.logging_example.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.MyTrainableClass.save_checkpoint": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "open",
    "ray.tune.examples.logging_example.json",
    "ray.tune.examples.logging_example.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.MyTrainableClass.setup": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.MyTrainableClass.step": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.TestLogger": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.logging_example.TestLogger.on_result": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.parser": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.tune.examples.logging_example.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.logging_example.trial_str_creator": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.tune.examples.logging_example.trials": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.tune.examples.logging_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.tracking.MlflowClient",
    "print",
    "ray.tune.examples.mlflow_example.client",
    "ray.tune.examples.mlflow_example.df",
    "ray.tune.examples.mlflow_example.easy_objective",
    "ray.tune.examples.mlflow_example.experiment_id",
    "ray.tune.examples.mlflow_example.mlflow",
    "ray.tune.logger.DEFAULT_LOGGERS",
    "ray.tune.logger.MLFLowLogger",
    "ray.tune.randint",
    "ray.tune.run"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mlflow_example.DEFAULT_LOGGERS": {
  "data": {
   "shadows": "ray.tune.logger.DEFAULT_LOGGERS"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example.MLFLowLogger": {
  "data": {
   "shadows": "ray.tune.logger.MLFLowLogger"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.MlflowClient"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example.client": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.tune.examples.mlflow_example.df": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.tune.examples.mlflow_example.easy_objective": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.mlflow_example.evaluation_fn",
    "ray.tune.examples.mlflow_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mlflow_example.evaluation_fn": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "ray.tune.examples.mlflow_example.experiment_id": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.tune.examples.mlflow_example.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.mlflow_example.trials": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ray.tune.examples.mlflow_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.mnist_ptl_mini.argparse",
    "ray.tune.examples.mnist_ptl_mini.parser",
    "ray.tune.examples.mnist_ptl_mini.tune_mnist"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mnist_ptl_mini.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pytorch_lightning.metrics.Accuracy",
    "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier",
    "ray.tune.examples.mnist_ptl_mini.os",
    "ray.tune.examples.mnist_ptl_mini.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.configure_optimizers": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_ptl_mini.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_ptl_mini.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.training_step": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "torch.nn.functional.nll_loss"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.validation_epoch_end": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_ptl_mini.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier.validation_step": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "torch.nn.functional.nll_loss"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.MNISTDataModule": {
  "data": {
   "shadows": "pl_bolts.datamodules.MNISTDataModule"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.TuneReportCallback": {
  "data": {
   "shadows": "ray.tune.integration.pytorch_lightning.TuneReportCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.parser": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_ptl_mini.pl": {
  "data": {
   "shadows": "pytorch_lightning"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.train_mnist_tune": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pl_bolts.datamodules.MNISTDataModule",
    "pytorch_lightning.Trainer",
    "ray.tune.examples.mnist_ptl_mini.LightningMNISTClassifier",
    "ray.tune.integration.pytorch_lightning.TuneReportCallback"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_ptl_mini.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_ptl_mini.tune_mnist": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pl_bolts.datamodules.MNISTDataModule",
    "ray.tune.choice",
    "ray.tune.examples.mnist_ptl_mini.os",
    "ray.tune.examples.mnist_ptl_mini.tempfile",
    "ray.tune.examples.mnist_ptl_mini.train_mnist_tune",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.with_parameters"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "print",
    "ray.tune.examples.mnist_pytorch.analysis",
    "ray.tune.examples.mnist_pytorch.argparse",
    "ray.tune.examples.mnist_pytorch.args",
    "ray.tune.examples.mnist_pytorch.parser",
    "ray.tune.examples.mnist_pytorch.ray",
    "ray.tune.examples.mnist_pytorch.sched",
    "ray.tune.examples.mnist_pytorch.train_mnist",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mnist_pytorch.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.ConvNet": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.mnist_pytorch.ConvNet.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "super",
    "torch.nn.Conv2d",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.ConvNet.forward": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.max_pool2d",
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.EPOCH_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.TEST_SIZE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.analysis": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.args": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.datasets": {
  "data": {
   "shadows": "torchvision.datasets"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.get_data_loaders": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "filelock.FileLock",
    "ray.tune.examples.mnist_pytorch.os",
    "ray.tune.examples.mnist_pytorch.torch",
    "torchvision.datasets.MNIST",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.parser": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.sched": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch.test": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "model",
    "model.eval",
    "ray.tune.examples.mnist_pytorch.TEST_SIZE",
    "ray.tune.examples.mnist_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.train": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "model",
    "ray.tune.examples.mnist_pytorch.EPOCH_SIZE",
    "ray.tune.examples.mnist_pytorch.torch",
    "torch.nn.functional.nll_loss"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.train_mnist": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "model",
    "model.parameters",
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.mnist_pytorch.torch",
    "ray.tune.examples.mnist_pytorch.train",
    "ray.tune.report",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.mnist_pytorch_lightning.argparse",
    "ray.tune.examples.mnist_pytorch_lightning.parser",
    "ray.tune.examples.mnist_pytorch_lightning.tune_mnist_asha",
    "ray.tune.examples.mnist_pytorch_lightning.tune_mnist_pbt"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mnist_pytorch_lightning.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier",
    "ray.tune.examples.mnist_pytorch_lightning.os",
    "ray.tune.examples.mnist_pytorch_lightning.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.accuracy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "ray.tune.examples.mnist_pytorch_lightning.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.configure_optimizers": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_lightning.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.cross_entropy_loss": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.nn.functional.nll_loss"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.download_data": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "staticmethod",
    "torchvision.datasets.MNIST",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_lightning.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.prepare_data": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "torch.utils.data.random_split"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.train_dataloader": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.training_step": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.val_dataloader": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.validation_epoch_end": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_lightning.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier.validation_step": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.MNIST": {
  "data": {
   "shadows": "torchvision.datasets.MNIST"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.TensorBoardLogger": {
  "data": {
   "shadows": "pytorch_lightning.loggers.TensorBoardLogger"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.TuneReportCallback": {
  "data": {
   "shadows": "ray.tune.integration.pytorch_lightning.TuneReportCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.TuneReportCheckpointCallback": {
  "data": {
   "shadows": "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.parser": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_lightning.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.pl": {
  "data": {
   "shadows": "pytorch_lightning"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.pl_load": {
  "data": {
   "shadows": "pytorch_lightning.utilities.cloud_io.load"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.random_split": {
  "data": {
   "shadows": "torch.utils.data.random_split"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.train_mnist": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pytorch_lightning.Trainer",
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.train_mnist_tune": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pytorch_lightning.Trainer",
    "pytorch_lightning.loggers.TensorBoardLogger",
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier",
    "ray.tune.get_trial_dir",
    "ray.tune.integration.pytorch_lightning.TuneReportCallback"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.train_mnist_tune_checkpoint": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pytorch_lightning.Trainer",
    "pytorch_lightning.loggers.TensorBoardLogger",
    "pytorch_lightning.utilities.cloud_io.load",
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier",
    "ray.tune.examples.mnist_pytorch_lightning.os",
    "ray.tune.get_trial_dir",
    "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_lightning.tune_mnist_asha": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "functools.partial",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier",
    "ray.tune.examples.mnist_pytorch_lightning.shutil",
    "ray.tune.examples.mnist_pytorch_lightning.train_mnist_tune",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.schedulers.ASHAScheduler",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_lightning.tune_mnist_pbt": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "functools.partial",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.examples.mnist_pytorch_lightning.LightningMNISTClassifier",
    "ray.tune.examples.mnist_pytorch_lightning.shutil",
    "ray.tune.examples.mnist_pytorch_lightning.train_mnist_tune_checkpoint",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_trainable": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "print",
    "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST",
    "ray.tune.examples.mnist_pytorch_trainable.analysis",
    "ray.tune.examples.mnist_pytorch_trainable.argparse",
    "ray.tune.examples.mnist_pytorch_trainable.args",
    "ray.tune.examples.mnist_pytorch_trainable.parser",
    "ray.tune.examples.mnist_pytorch_trainable.ray",
    "ray.tune.examples.mnist_pytorch_trainable.sched",
    "ray.tune.run",
    "ray.tune.schedulers.ASHAScheduler",
    "ray.tune.uniform",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mnist_pytorch_trainable.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.ConvNet": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.ConvNet"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.EPOCH_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TEST_SIZE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST.load_checkpoint": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_trainable.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST.save_checkpoint": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch_trainable.os",
    "ray.tune.examples.mnist_pytorch_trainable.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST.setup": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch_trainable.torch",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_trainable.TrainMNIST.step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.mnist_pytorch.train"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mnist_pytorch_trainable.analysis": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.args": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.get_data_loaders": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.get_data_loaders"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.parser": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.sched": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.tune.examples.mnist_pytorch_trainable.test": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.test"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.train": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.train"
  },
  "type": "import"
 },
 "ray.tune.examples.mnist_pytorch_trainable.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.mxnet_example.argparse",
    "ray.tune.examples.mxnet_example.parser",
    "ray.tune.examples.mxnet_example.tune_mnist_mxnet"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.mxnet_example.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.TuneCheckpointCallback": {
  "data": {
   "shadows": "ray.tune.integration.mxnet.TuneCheckpointCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.TuneReportCallback": {
  "data": {
   "shadows": "ray.tune.integration.mxnet.TuneReportCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.logger": {
  "data": {
   "shadows": "ray.logger"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.mx": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.parser": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "ray.tune.examples.mxnet_example.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.train_mnist_mxnet": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mxnet.callback.Speedometer",
    "mxnet.cpu",
    "mxnet.io.NDArrayIter",
    "mxnet.mod.Module",
    "mxnet.sym.Activation",
    "mxnet.sym.FullyConnected",
    "mxnet.sym.SoftmaxOutput",
    "mxnet.sym.flatten",
    "mxnet.sym.var",
    "ray.tune.integration.mxnet.TuneCheckpointCallback",
    "ray.tune.integration.mxnet.TuneReportCallback"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.mxnet_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.mxnet_example.tune_mnist_mxnet": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "functools.partial",
    "mxnet.test_utils.get_mnist",
    "ray.logger.info",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.examples.mxnet_example.train_mnist_mxnet",
    "ray.tune.loguniform",
    "ray.tune.run",
    "ray.tune.schedulers.ASHAScheduler"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.nevergrad_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nevergrad.optimizers.OnePlusOne",
    "ray.tune.choice",
    "ray.tune.examples.nevergrad_example.algo",
    "ray.tune.examples.nevergrad_example.argparse",
    "ray.tune.examples.nevergrad_example.easy_objective",
    "ray.tune.examples.nevergrad_example.parser",
    "ray.tune.examples.nevergrad_example.ray",
    "ray.tune.examples.nevergrad_example.scheduler",
    "ray.tune.examples.nevergrad_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.nevergrad.NevergradSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.nevergrad_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.NevergradSearch": {
  "data": {
   "shadows": "ray.tune.suggest.nevergrad.NevergradSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.algo": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ray.tune.examples.nevergrad_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.nevergrad_example.evaluation_fn",
    "ray.tune.examples.nevergrad_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.nevergrad_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.nevergrad_example.ng": {
  "data": {
   "shadows": "nevergrad"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.parser": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.tune.examples.nevergrad_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.scheduler": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.tune.examples.nevergrad_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.nevergrad_example.tune_kwargs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "ray.tune.examples.optuna_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.choice",
    "ray.tune.examples.optuna_example.algo",
    "ray.tune.examples.optuna_example.argparse",
    "ray.tune.examples.optuna_example.easy_objective",
    "ray.tune.examples.optuna_example.parser",
    "ray.tune.examples.optuna_example.ray",
    "ray.tune.examples.optuna_example.scheduler",
    "ray.tune.examples.optuna_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.optuna.OptunaSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.optuna_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.OptunaSearch": {
  "data": {
   "shadows": "ray.tune.suggest.optuna.OptunaSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.algo": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.tune.examples.optuna_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.optuna_example.evaluation_fn",
    "ray.tune.examples.optuna_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.optuna_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.optuna_example.parser": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.examples.optuna_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.scheduler": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "ray.tune.examples.optuna_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.optuna_example.tune_kwargs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.pb2_example.argparse",
    "ray.tune.examples.pb2_example.parser",
    "ray.tune.examples.pb2_example.pbt",
    "ray.tune.examples.pb2_example.ray",
    "ray.tune.examples.pbt_function.pbt_function",
    "ray.tune.run",
    "ray.tune.schedulers.PB2"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pb2_example.PB2": {
  "data": {
   "shadows": "ray.tune.schedulers.PB2"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_example.parser": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_example.pbt": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_example.pbt_function": {
  "data": {
   "shadows": "ray.tune.examples.pbt_function.pbt_function"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "datetime.datetime.date",
    "datetime.datetime.now",
    "datetime.datetime.time",
    "float",
    "int",
    "list",
    "pandas.DataFrame",
    "pandas.concat",
    "range",
    "ray.tune.examples.pb2_ppo_example.all_dfs",
    "ray.tune.examples.pb2_ppo_example.analysis",
    "ray.tune.examples.pb2_ppo_example.argparse",
    "ray.tune.examples.pb2_ppo_example.args",
    "ray.tune.examples.pb2_ppo_example.df",
    "ray.tune.examples.pb2_ppo_example.explore",
    "ray.tune.examples.pb2_ppo_example.horizon",
    "ray.tune.examples.pb2_ppo_example.methods",
    "ray.tune.examples.pb2_ppo_example.names",
    "ray.tune.examples.pb2_ppo_example.os",
    "ray.tune.examples.pb2_ppo_example.parser",
    "ray.tune.examples.pb2_ppo_example.pb2",
    "ray.tune.examples.pb2_ppo_example.pbt",
    "ray.tune.examples.pb2_ppo_example.random",
    "ray.tune.examples.pb2_ppo_example.ray",
    "ray.tune.examples.pb2_ppo_example.results",
    "ray.tune.examples.pb2_ppo_example.timelog",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.PB2",
    "ray.tune.schedulers.PopulationBasedTraining",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pb2_ppo_example.PB2": {
  "data": {
   "shadows": "ray.tune.schedulers.PB2"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.all_dfs": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.analysis": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.args": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.df": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.explore": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pb2_ppo_example.horizon": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.methods": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.names": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.parser": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.pb2": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.pbt": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.results": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "ray.tune.examples.pb2_ppo_example.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.sample_from": {
  "data": {
   "shadows": "ray.tune.sample_from"
  },
  "type": "import"
 },
 "ray.tune.examples.pb2_ppo_example.timelog": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.uniform",
    "print",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.pbt_convnet_example.CustomStopper",
    "ray.tune.examples.pbt_convnet_example.PytorchTrainable",
    "ray.tune.examples.pbt_convnet_example.analysis",
    "ray.tune.examples.pbt_convnet_example.argparse",
    "ray.tune.examples.pbt_convnet_example.best_checkpoint",
    "ray.tune.examples.pbt_convnet_example.best_model",
    "ray.tune.examples.pbt_convnet_example.best_trial",
    "ray.tune.examples.pbt_convnet_example.parser",
    "ray.tune.examples.pbt_convnet_example.ray",
    "ray.tune.examples.pbt_convnet_example.restored_trainable",
    "ray.tune.examples.pbt_convnet_example.scheduler",
    "ray.tune.examples.pbt_convnet_example.stopper",
    "ray.tune.examples.pbt_convnet_example.test_acc",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining",
    "ray.tune.trial.ExportFormat.MODEL",
    "ray.tune.uniform",
    "ray.tune.utils.validate_save_restore",
    "torchvision.datasets.MNIST"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_convnet_example.ConvNet": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.ConvNet"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.CustomStopper": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ray.tune.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_convnet_example.CustomStopper.__call__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.CustomStopper.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.CustomStopper.stop_all": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.ExportFormat": {
  "data": {
   "shadows": "ray.tune.trial.ExportFormat"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable._export_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.examples.pbt_convnet_example.os",
    "ray.tune.examples.pbt_convnet_example.torch",
    "ray.tune.trial.ExportFormat.MODEL",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable.load_checkpoint": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ray.tune.examples.pbt_convnet_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable.reset_config": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable.save_checkpoint": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.tune.examples.pbt_convnet_example.os",
    "ray.tune.examples.pbt_convnet_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable.setup": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.PytorchTrainable.step": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.mnist_pytorch.train"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_example.analysis": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.best_checkpoint": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.best_model": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.best_trial": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.datasets": {
  "data": {
   "shadows": "torchvision.datasets"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.get_data_loaders": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.get_data_loaders"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.parser": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.restored_trainable": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.scheduler": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.stopper": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.test": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.test"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.test_acc": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.train": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.train"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_example.validate_save_restore": {
  "data": {
   "shadows": "ray.tune.utils.validate_save_restore"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.uniform",
    "print",
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.pbt_convnet_function_example.CustomStopper",
    "ray.tune.examples.pbt_convnet_function_example.analysis",
    "ray.tune.examples.pbt_convnet_function_example.argparse",
    "ray.tune.examples.pbt_convnet_function_example.best_checkpoint",
    "ray.tune.examples.pbt_convnet_function_example.best_checkpoint_path",
    "ray.tune.examples.pbt_convnet_function_example.best_model",
    "ray.tune.examples.pbt_convnet_function_example.best_trial",
    "ray.tune.examples.pbt_convnet_function_example.os",
    "ray.tune.examples.pbt_convnet_function_example.parser",
    "ray.tune.examples.pbt_convnet_function_example.ray",
    "ray.tune.examples.pbt_convnet_function_example.scheduler",
    "ray.tune.examples.pbt_convnet_function_example.stopper",
    "ray.tune.examples.pbt_convnet_function_example.test_acc",
    "ray.tune.examples.pbt_convnet_function_example.torch",
    "ray.tune.examples.pbt_convnet_function_example.train_convnet",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining",
    "ray.tune.trial.ExportFormat.MODEL",
    "ray.tune.uniform",
    "torchvision.datasets.MNIST"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_convnet_function_example.ConvNet": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.ConvNet"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.CustomStopper": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.tune.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_convnet_function_example.CustomStopper.__call__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_function_example.CustomStopper.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_function_example.CustomStopper.stop_all": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_function_example.ExportFormat": {
  "data": {
   "shadows": "ray.tune.trial.ExportFormat"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.analysis": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.best_checkpoint": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.best_checkpoint_path": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.best_model": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.best_trial": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.datasets": {
  "data": {
   "shadows": "torchvision.datasets"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.get_data_loaders": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.get_data_loaders"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.parser": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.scheduler": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.stopper": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.test": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.test"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.test_acc": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_convnet_function_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.train": {
  "data": {
   "shadows": "ray.tune.examples.mnist_pytorch.train"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_convnet_function_example.train_convnet": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "print",
    "ray.tune.checkpoint_dir",
    "ray.tune.examples.mnist_pytorch.ConvNet",
    "ray.tune.examples.mnist_pytorch.get_data_loaders",
    "ray.tune.examples.mnist_pytorch.test",
    "ray.tune.examples.mnist_pytorch.train",
    "ray.tune.examples.pbt_convnet_function_example.os",
    "ray.tune.examples.pbt_convnet_function_example.torch",
    "ray.tune.report",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_convnet_function_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.pbt_example.PBTBenchmarkExample",
    "ray.tune.examples.pbt_example.argparse",
    "ray.tune.examples.pbt_example.parser",
    "ray.tune.examples.pbt_example.pbt",
    "ray.tune.examples.pbt_example.random",
    "ray.tune.examples.pbt_example.ray",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample.load_checkpoint": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample.reset_config": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample.save_checkpoint": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample.setup": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_example.PBTBenchmarkExample.step": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.random.normal",
    "ray.tune.examples.pbt_example.random"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.parser": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_example.pbt": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_example.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_example.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.pbt_function.argparse",
    "ray.tune.examples.pbt_function.parser",
    "ray.tune.examples.pbt_function.pbt",
    "ray.tune.examples.pbt_function.pbt_function",
    "ray.tune.examples.pbt_function.random",
    "ray.tune.examples.pbt_function.ray",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_function.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.parser": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_function.pbt": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_function.pbt_function": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.random.normal",
    "open",
    "range",
    "ray.tune.checkpoint_dir",
    "ray.tune.examples.pbt_function.json",
    "ray.tune.examples.pbt_function.os",
    "ray.tune.examples.pbt_function.random",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_function.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_function.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.randint",
    "numpy.random.uniform",
    "ray.tune.examples.pbt_memnn_example.MemNNModel",
    "ray.tune.examples.pbt_memnn_example.argparse",
    "ray.tune.examples.pbt_memnn_example.parser",
    "ray.tune.examples.pbt_memnn_example.pbt",
    "ray.tune.examples.pbt_memnn_example.ray",
    "ray.tune.examples.pbt_memnn_example.read_data",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_memnn_example.Activation": {
  "data": {
   "shadows": "tensorflow.keras.layers.Activation"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Dense": {
  "data": {
   "shadows": "tensorflow.keras.layers.Dense"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Dropout": {
  "data": {
   "shadows": "tensorflow.keras.layers.Dropout"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Embedding": {
  "data": {
   "shadows": "tensorflow.keras.layers.Embedding"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Input": {
  "data": {
   "shadows": "tensorflow.keras.layers.Input"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.LSTM": {
  "data": {
   "shadows": "tensorflow.keras.layers.LSTM"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel.build_model": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "enumerate",
    "input_encoder_c",
    "input_encoder_m",
    "len",
    "max",
    "question_encoder",
    "ray.tune.examples.pbt_memnn_example.vectorize_stories",
    "set",
    "sorted",
    "tensorflow.keras.layers.Activation",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.Input",
    "tensorflow.keras.layers.LSTM",
    "tensorflow.keras.layers.Permute",
    "tensorflow.keras.layers.add",
    "tensorflow.keras.layers.concatenate",
    "tensorflow.keras.layers.dot",
    "tensorflow.keras.models.Model",
    "tensorflow.keras.models.Sequential"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel.load_checkpoint": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.keras.models.load_model"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel.save_checkpoint": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel.setup": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "filelock.FileLock",
    "ray.tune.examples.pbt_memnn_example.os",
    "ray.tune.examples.pbt_memnn_example.read_data",
    "tensorflow.keras.optimizers.RMSprop"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.MemNNModel.step": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.Model": {
  "data": {
   "shadows": "tensorflow.keras.models.Model"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Permute": {
  "data": {
   "shadows": "tensorflow.keras.layers.Permute"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.RMSprop": {
  "data": {
   "shadows": "tensorflow.keras.optimizers.RMSprop"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.Sequential": {
  "data": {
   "shadows": "tensorflow.keras.models.Sequential"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.add": {
  "data": {
   "shadows": "tensorflow.keras.layers.add"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.concatenate": {
  "data": {
   "shadows": "tensorflow.keras.layers.concatenate"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.dot": {
  "data": {
   "shadows": "tensorflow.keras.layers.dot"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.get_file": {
  "data": {
   "shadows": "tensorflow.keras.utils.get_file"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.get_stories": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flatten",
    "len",
    "ray.tune.examples.pbt_memnn_example.parse_stories"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.get_stories.flatten": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.load_model": {
  "data": {
   "shadows": "tensorflow.keras.models.load_model"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.pad_sequences": {
  "data": {
   "shadows": "tensorflow.keras.preprocessing.sequence.pad_sequences"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.parse_stories": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "map",
    "ray.tune.examples.pbt_memnn_example.tokenize"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.parser": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_memnn_example.pbt": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_memnn_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.read_data": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "print",
    "ray.tune.examples.pbt_memnn_example.get_stories",
    "ray.tune.examples.pbt_memnn_example.tarfile",
    "tensorflow.keras.utils.get_file"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.results": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_memnn_example.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.tokenize": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.examples.pbt_memnn_example.re"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_memnn_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_memnn_example.vectorize_stories": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.keras.preprocessing.sequence.pad_sequences"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_ppo_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.pbt_ppo_example.explore",
    "ray.tune.examples.pbt_ppo_example.pbt",
    "ray.tune.examples.pbt_ppo_example.random",
    "ray.tune.examples.pbt_ppo_example.ray",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_ppo_example.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_ppo_example.explore": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_ppo_example.pbt": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_ppo_example.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_ppo_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_ppo_example.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_ppo_example.sample_from": {
  "data": {
   "shadows": "ray.tune.sample_from"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers": {
  "data": {},
  "type": "module"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.pbt_transformers.pbt_transformers.argparse",
    "ray.tune.examples.pbt_transformers.pbt_transformers.parser",
    "ray.tune.examples.pbt_transformers.pbt_transformers.tune_transformer",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.AutoConfig": {
  "data": {
   "shadows": "transformers.AutoConfig"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.AutoModelForSequenceClassification": {
  "data": {
   "shadows": "transformers.AutoModelForSequenceClassification"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.AutoTokenizer": {
  "data": {
   "shadows": "transformers.AutoTokenizer"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.GlueDataTrainingArguments": {
  "data": {
   "shadows": "transformers.GlueDataTrainingArguments"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.GlueDataset": {
  "data": {
   "shadows": "transformers.GlueDataset"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.Trainer": {
  "data": {
   "shadows": "transformers.Trainer"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.TrainingArguments": {
  "data": {
   "shadows": "transformers.TrainingArguments"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.build_compute_metrics_fn": {
  "data": {
   "shadows": "ray.tune.examples.pbt_transformers.utils.build_compute_metrics_fn"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.download_data": {
  "data": {
   "shadows": "ray.tune.examples.pbt_transformers.utils.download_data"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.glue_tasks_num_labels": {
  "data": {
   "shadows": "transformers.glue_tasks_num_labels"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.parser": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.tune_transformer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "print",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.examples.pbt_transformers.pbt_transformers.os",
    "ray.tune.examples.pbt_transformers.pbt_transformers.ray",
    "ray.tune.examples.pbt_transformers.utils.build_compute_metrics_fn",
    "ray.tune.examples.pbt_transformers.utils.download_data",
    "ray.tune.sample_from",
    "ray.tune.schedulers.PopulationBasedTraining",
    "ray.tune.uniform",
    "transformers.AutoConfig.from_pretrained",
    "transformers.AutoModelForSequenceClassification.from_pretrained",
    "transformers.AutoTokenizer.from_pretrained",
    "transformers.GlueDataTrainingArguments",
    "transformers.GlueDataset",
    "transformers.Trainer",
    "transformers.TrainingArguments",
    "transformers.glue_tasks_num_labels"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_transformers.pbt_transformers.tune_transformer.get_model": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "transformers.AutoModelForSequenceClassification.from_pretrained"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_transformers.utils": {
  "data": {},
  "type": "module"
 },
 "ray.tune.examples.pbt_transformers.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.EvalPrediction": {
  "data": {
   "shadows": "transformers.EvalPrediction"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.build_compute_metrics_fn": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "str",
    "transformers.EvalPrediction",
    "transformers.glue_output_modes",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_transformers.utils.build_compute_metrics_fn.compute_metrics_fn": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.squeeze",
    "transformers.EvalPrediction",
    "transformers.glue_compute_metrics"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_transformers.utils.download_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "ray.tune.examples.pbt_transformers.utils.os",
    "ray.tune.examples.pbt_transformers.utils.urllib",
    "ray.tune.examples.pbt_transformers.utils.zipfile"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_transformers.utils.glue_compute_metrics": {
  "data": {
   "shadows": "transformers.glue_compute_metrics"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.glue_output_modes": {
  "data": {
   "shadows": "transformers.glue_output_modes"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_transformers.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.uniform",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.argparse",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.parser",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.pbt",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.ray",
    "ray.tune.examples.pbt_tune_cifar10_with_keras.train_spec",
    "ray.tune.grid_search",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model._build_model": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.keras.layers.Convolution2D",
    "tensorflow.python.keras.layers.Dense",
    "tensorflow.python.keras.layers.Dropout",
    "tensorflow.python.keras.layers.Flatten",
    "tensorflow.python.keras.layers.Input",
    "tensorflow.python.keras.layers.MaxPooling2D",
    "tensorflow.python.keras.models.Model"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model._read_data": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.tune.examples.pbt_tune_cifar10_with_keras.num_classes",
    "tensorflow.keras.utils.to_categorical",
    "tensorflow.python.keras.datasets.cifar10.load_data"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model.cleanup": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model.load_checkpoint": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.python.keras.models.load_model"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model.save_checkpoint": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model.setup": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.keras.optimizers.Adadelta"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Cifar10Model.step": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ray.tune.examples.pbt_tune_cifar10_with_keras.NUM_SAMPLES",
    "tensorflow.python.keras.preprocessing.image.ImageDataGenerator"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Convolution2D": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.Convolution2D"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Dense": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.Dense"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Dropout": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.Dropout"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Flatten": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.Flatten"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.ImageDataGenerator": {
  "data": {
   "shadows": "tensorflow.python.keras.preprocessing.image.ImageDataGenerator"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Input": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.Input"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.MaxPooling2D": {
  "data": {
   "shadows": "tensorflow.python.keras.layers.MaxPooling2D"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Model": {
  "data": {
   "shadows": "tensorflow.python.keras.models.Model"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.NUM_SAMPLES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.cifar10": {
  "data": {
   "shadows": "tensorflow.python.keras.datasets.cifar10"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.grid_search": {
  "data": {
   "shadows": "ray.tune.grid_search"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.load_model": {
  "data": {
   "shadows": "tensorflow.python.keras.models.load_model"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.num_classes": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.parser": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.pbt": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.run": {
  "data": {
   "shadows": "ray.tune.run"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.sample_from": {
  "data": {
   "shadows": "ray.tune.sample_from"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.tune.examples.pbt_tune_cifar10_with_keras.train_spec": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.sigopt_example.algo",
    "ray.tune.examples.sigopt_example.argparse",
    "ray.tune.examples.sigopt_example.config",
    "ray.tune.examples.sigopt_example.easy_objective",
    "ray.tune.examples.sigopt_example.os",
    "ray.tune.examples.sigopt_example.parser",
    "ray.tune.examples.sigopt_example.ray",
    "ray.tune.examples.sigopt_example.scheduler",
    "ray.tune.examples.sigopt_example.space",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.sigopt.SigOptSearch"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.sigopt_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.SigOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.sigopt.SigOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.algo": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.config": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example.easy_objective": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.sigopt_example.evaluate",
    "ray.tune.examples.sigopt_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_example.evaluate": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.parser": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.scheduler": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example.space": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.normal",
    "numpy.random.seed",
    "ray.tune.examples.sigopt_multi_objective_example.algo",
    "ray.tune.examples.sigopt_multi_objective_example.argparse",
    "ray.tune.examples.sigopt_multi_objective_example.config",
    "ray.tune.examples.sigopt_multi_objective_example.easy_objective",
    "ray.tune.examples.sigopt_multi_objective_example.os",
    "ray.tune.examples.sigopt_multi_objective_example.parser",
    "ray.tune.examples.sigopt_multi_objective_example.ray",
    "ray.tune.examples.sigopt_multi_objective_example.scheduler",
    "ray.tune.examples.sigopt_multi_objective_example.space",
    "ray.tune.run",
    "ray.tune.schedulers.FIFOScheduler",
    "ray.tune.suggest.sigopt.SigOptSearch"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.sigopt_multi_objective_example.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.SigOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.sigopt.SigOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.algo": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.config": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.easy_objective": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.tune.examples.sigopt_multi_objective_example.evaluate",
    "ray.tune.examples.sigopt_multi_objective_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_multi_objective_example.evaluate": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.tune.examples.sigopt_multi_objective_example.vector1",
    "ray.tune.examples.sigopt_multi_objective_example.vector2"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_multi_objective_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.parser": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.scheduler": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.space": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_multi_objective_example.vector1": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_multi_objective_example.vector2": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "numpy.random.normal",
    "numpy.random.seed",
    "ray.tune.examples.sigopt_prior_beliefs_example.algo",
    "ray.tune.examples.sigopt_prior_beliefs_example.argparse",
    "ray.tune.examples.sigopt_prior_beliefs_example.config",
    "ray.tune.examples.sigopt_prior_beliefs_example.conn",
    "ray.tune.examples.sigopt_prior_beliefs_example.easy_objective",
    "ray.tune.examples.sigopt_prior_beliefs_example.experiment",
    "ray.tune.examples.sigopt_prior_beliefs_example.os",
    "ray.tune.examples.sigopt_prior_beliefs_example.parser",
    "ray.tune.examples.sigopt_prior_beliefs_example.ray",
    "ray.tune.examples.sigopt_prior_beliefs_example.samples",
    "ray.tune.examples.sigopt_prior_beliefs_example.scheduler",
    "ray.tune.run",
    "ray.tune.schedulers.FIFOScheduler",
    "ray.tune.suggest.sigopt.SigOptSearch",
    "sigopt.Connection"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.Connection": {
  "data": {
   "shadows": "sigopt.Connection"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.SigOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.sigopt.SigOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.algo": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.config": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.conn": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.easy_objective": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ray.tune.examples.sigopt_prior_beliefs_example.evaluate",
    "ray.tune.examples.sigopt_prior_beliefs_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.evaluate": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.tune.examples.sigopt_prior_beliefs_example.vector1",
    "ray.tune.examples.sigopt_prior_beliefs_example.vector2",
    "ray.tune.examples.sigopt_prior_beliefs_example.vector3"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.experiment": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.parser": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.samples": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.scheduler": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.vector1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.vector2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.examples.sigopt_prior_beliefs_example.vector3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.choice",
    "ray.tune.examples.skopt_example.algo",
    "ray.tune.examples.skopt_example.argparse",
    "ray.tune.examples.skopt_example.easy_objective",
    "ray.tune.examples.skopt_example.known_rewards",
    "ray.tune.examples.skopt_example.parser",
    "ray.tune.examples.skopt_example.previously_run_params",
    "ray.tune.examples.skopt_example.ray",
    "ray.tune.examples.skopt_example.scheduler",
    "ray.tune.examples.skopt_example.tune_kwargs",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.ConcurrencyLimiter",
    "ray.tune.suggest.skopt.SkOptSearch",
    "ray.tune.uniform"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.skopt_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.SkOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.skopt.SkOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.algo": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.skopt_example.evaluation_fn",
    "ray.tune.examples.skopt_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.skopt_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.skopt_example.known_rewards": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example.parser": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example.previously_run_params": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.scheduler": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "ray.tune.examples.skopt_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.skopt_example.tune_kwargs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "ray.tune.examples.tf_mnist_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.tf_mnist_example.MNISTTrainable",
    "ray.tune.examples.tf_mnist_example.argparse",
    "ray.tune.examples.tf_mnist_example.parser",
    "ray.tune.grid_search",
    "ray.tune.run",
    "tensorflow.keras.datasets.mnist.load_data"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.tf_mnist_example.Conv2D": {
  "data": {
   "shadows": "tensorflow.keras.layers.Conv2D"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.Dense": {
  "data": {
   "shadows": "tensorflow.keras.layers.Dense"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.Flatten": {
  "data": {
   "shadows": "tensorflow.keras.layers.Flatten"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.MAX_TRAIN_BATCH": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.tune.examples.tf_mnist_example.MNISTTrainable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.tf_mnist_example.MNISTTrainable.setup": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.tune.examples.tf_mnist_example.MyModel",
    "tensorflow.data.Dataset.from_tensor_slices",
    "tensorflow.keras.datasets.mnist.load_data",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "tensorflow.keras.metrics.Mean",
    "tensorflow.keras.metrics.SparseCategoricalAccuracy",
    "tensorflow.keras.optimizers.Adam",
    "tensorflow.newaxis"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.MNISTTrainable.setup.test_step": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.MNISTTrainable.setup.train_step": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.GradientTape",
    "tensorflow.function",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.MNISTTrainable.step": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "enumerate",
    "ray.tune.examples.tf_mnist_example.MAX_TRAIN_BATCH"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.Model": {
  "data": {
   "shadows": "tensorflow.keras.Model"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.MyModel": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.keras.Model"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.tf_mnist_example.MyModel.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.examples.tf_mnist_example.MyModel",
    "super",
    "tensorflow.keras.layers.Conv2D",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Flatten"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.MyModel.call": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ray.tune.examples.tf_mnist_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.load_data": {
  "data": {
   "shadows": "tensorflow.keras.datasets.mnist.load_data"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.parser": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.examples.tf_mnist_example.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.tune.examples.tf_mnist_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon": {
  "data": {
   "symbols_in_volume": [
    "NotImplementedError",
    "__name__",
    "float",
    "int",
    "numpy.power",
    "numpy.random.uniform",
    "ray.tune.examples.tune_cifar10_gluon.argparse",
    "ray.tune.examples.tune_cifar10_gluon.args",
    "ray.tune.examples.tune_cifar10_gluon.parser",
    "ray.tune.examples.tune_cifar10_gluon.ray",
    "ray.tune.examples.tune_cifar10_gluon.sched",
    "ray.tune.examples.tune_cifar10_gluon.train_cifar10",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.schedulers.FIFOScheduler",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.tune_cifar10_gluon.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.ag": {
  "data": {
   "shadows": "mxnet.autograd"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.args": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "ray.tune.examples.tune_cifar10_gluon.gcv_transforms": {
  "data": {
   "shadows": "gluoncv.data.transforms"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.get_model": {
  "data": {
   "shadows": "gluoncv.model_zoo.get_model"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.gluon": {
  "data": {
   "shadows": "mxnet.gluon"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.init": {
  "data": {
   "shadows": "mxnet.init"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.mx": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.nn": {
  "data": {
   "shadows": "mxnet.gluon.nn"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.parser": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.tune.examples.tune_cifar10_gluon.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.sched": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "ray.tune.examples.tune_cifar10_gluon.train_cifar10": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "gluoncv.data.transforms.Compose",
    "gluoncv.data.transforms.Normalize",
    "gluoncv.data.transforms.RandomCrop",
    "gluoncv.data.transforms.RandomFlipLeftRight",
    "gluoncv.data.transforms.ToTensor",
    "gluoncv.model_zoo.get_model",
    "max",
    "mxnet.cpu",
    "mxnet.gluon.Trainer",
    "mxnet.gluon.data.DataLoader",
    "mxnet.gluon.data.vision.CIFAR10",
    "mxnet.gluon.loss.SoftmaxCrossEntropyLoss",
    "mxnet.gluon.nn.Dense",
    "mxnet.gpu",
    "mxnet.init.Xavier",
    "mxnet.metric.Accuracy",
    "mxnet.random.seed",
    "numpy.random.seed",
    "range",
    "ray.tune.examples.tune_cifar10_gluon.args",
    "ray.tune.examples.tune_cifar10_gluon.random",
    "ray.tune.report",
    "test",
    "train",
    "vars"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tune_cifar10_gluon.train_cifar10.test": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "L",
    "enumerate",
    "finetune_net",
    "len",
    "mxnet.gluon.utils.split_and_load",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tune_cifar10_gluon.train_cifar10.train": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "L",
    "enumerate",
    "finetune_net",
    "mxnet.autograd.record",
    "mxnet.gluon.utils.split_and_load",
    "mxnet.nd.waitall",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tune_cifar10_gluon.transforms": {
  "data": {
   "shadows": "mxnet.gluon.data.vision.transforms"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_cifar10_gluon.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.randint",
    "numpy.random.uniform",
    "ray.tune.examples.tune_mnist_keras.argparse",
    "ray.tune.examples.tune_mnist_keras.parser",
    "ray.tune.examples.tune_mnist_keras.ray",
    "ray.tune.examples.tune_mnist_keras.sched",
    "ray.tune.examples.tune_mnist_keras.train_mnist",
    "ray.tune.run",
    "ray.tune.sample_from",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "tensorflow.keras.datasets.mnist.load_data"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.tune_mnist_keras.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.TuneReportCallback": {
  "data": {
   "shadows": "ray.tune.integration.keras.TuneReportCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.mnist": {
  "data": {
   "shadows": "tensorflow.keras.datasets.mnist"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.parser": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.examples.tune_mnist_keras.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.sched": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.tune.examples.tune_mnist_keras.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.tune.examples.tune_mnist_keras.train_mnist": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.tune.integration.keras.TuneReportCallback",
    "tensorflow.keras.datasets.mnist.load_data",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Flatten",
    "tensorflow.keras.models.Sequential",
    "tensorflow.keras.optimizers.SGD"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.tune_mnist_keras.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.utils": {
  "data": {},
  "type": "module"
 },
 "ray.tune.examples.utils.OneHotEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.OneHotEncoder"
  },
  "type": "import"
 },
 "ray.tune.examples.utils.TuneKerasCallback": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.utils.get_iris_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.train_test_split",
    "sklearn.preprocessing.OneHotEncoder"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.utils.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "ray.tune.examples.utils.set_keras_threads": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "tensorflow.config.threading.set_inter_op_parallelism_threads",
    "tensorflow.config.threading.set_intra_op_parallelism_threads"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.tune.examples.utils.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.wandb_example.WandbTrainable",
    "ray.tune.examples.wandb_example.api_key_file",
    "ray.tune.examples.wandb_example.argparse",
    "ray.tune.examples.wandb_example.decorated_train_function",
    "ray.tune.examples.wandb_example.parser",
    "ray.tune.examples.wandb_example.temp_file",
    "ray.tune.examples.wandb_example.tempfile",
    "ray.tune.examples.wandb_example.tune_decorated",
    "ray.tune.examples.wandb_example.tune_function",
    "ray.tune.examples.wandb_example.tune_trainable",
    "ray.tune.integration.wandb.WandbLogger._logger_process_cls",
    "tuple",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.wandb_example.DEFAULT_LOGGERS": {
  "data": {
   "shadows": "ray.tune.logger.DEFAULT_LOGGERS"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.WandbLogger": {
  "data": {
   "shadows": "ray.tune.integration.wandb.WandbLogger"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.WandbTrainable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.tune.Trainable",
    "ray.tune.integration.wandb.WandbTrainableMixin"
   ]
  },
  "type": "class"
 },
 "ray.tune.examples.wandb_example.WandbTrainable.step": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "ray.tune.examples.wandb_example.wandb"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.WandbTrainableMixin": {
  "data": {
   "shadows": "ray.tune.integration.wandb.WandbTrainableMixin"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.api_key_file": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "ray.tune.examples.wandb_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.decorated_train_function": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "range",
    "ray.tune.examples.wandb_example.wandb",
    "ray.tune.integration.wandb.wandb_mixin",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.parser": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "ray.tune.examples.wandb_example.temp_file": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "ray.tune.examples.wandb_example.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.train_function": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.wandb_example.tune_decorated": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.tune.examples.wandb_example.decorated_train_function",
    "ray.tune.grid_search",
    "ray.tune.run",
    "ray.tune.uniform"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.tune_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.tune.examples.wandb_example.train_function",
    "ray.tune.grid_search",
    "ray.tune.integration.wandb.WandbLogger",
    "ray.tune.logger.DEFAULT_LOGGERS",
    "ray.tune.run",
    "ray.tune.uniform"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.tune_trainable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ray.tune.examples.wandb_example.WandbTrainable",
    "ray.tune.grid_search",
    "ray.tune.run",
    "ray.tune.uniform"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.wandb_example.wandb": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "ray.tune.examples.wandb_example.wandb_mixin": {
  "data": {
   "shadows": "ray.tune.integration.wandb.wandb_mixin"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "ray.tune.choice",
    "ray.tune.examples.xgboost_example.accuracy",
    "ray.tune.examples.xgboost_example.analysis",
    "ray.tune.examples.xgboost_example.best_bst",
    "ray.tune.examples.xgboost_example.config",
    "ray.tune.examples.xgboost_example.os",
    "ray.tune.examples.xgboost_example.scheduler",
    "ray.tune.examples.xgboost_example.train_breast_cancer",
    "ray.tune.loguniform",
    "ray.tune.randint",
    "ray.tune.run",
    "ray.tune.schedulers.ASHAScheduler",
    "ray.tune.uniform",
    "xgboost.Booster"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.xgboost_example.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.TuneReportCheckpointCallback": {
  "data": {
   "shadows": "ray.tune.integration.xgboost.TuneReportCheckpointCallback"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.accuracy": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.tune.examples.xgboost_example.analysis": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ray.tune.examples.xgboost_example.best_bst": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "ray.tune.examples.xgboost_example.config": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.examples.xgboost_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.scheduler": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ray.tune.examples.xgboost_example.sklearn.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.sklearn.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.train_breast_cancer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.tune.integration.xgboost.TuneReportCheckpointCallback",
    "sklearn.model_selection.train_test_split",
    "xgboost.DMatrix",
    "xgboost.train"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.xgboost_example.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.xgboost_example.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.examples.zoopt_example.argparse",
    "ray.tune.examples.zoopt_example.easy_objective",
    "ray.tune.examples.zoopt_example.parser",
    "ray.tune.examples.zoopt_example.ray",
    "ray.tune.examples.zoopt_example.scheduler",
    "ray.tune.examples.zoopt_example.tune_kwargs",
    "ray.tune.examples.zoopt_example.zoopt_search",
    "ray.tune.examples.zoopt_example.zoopt_search_config",
    "ray.tune.quniform",
    "ray.tune.randint",
    "ray.tune.run",
    "ray.tune.schedulers.AsyncHyperBandScheduler",
    "ray.tune.suggest.zoopt.ZOOptSearch"
   ]
  },
  "type": "module"
 },
 "ray.tune.examples.zoopt_example.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.ValueType": {
  "data": {
   "shadows": "zoopt.ValueType"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.ZOOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.zoopt.ZOOptSearch"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.easy_objective": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "range",
    "ray.tune.examples.zoopt_example.evaluation_fn",
    "ray.tune.examples.zoopt_example.time",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.examples.zoopt_example.evaluation_fn": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.tune.examples.zoopt_example.parser": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.examples.zoopt_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.scheduler": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "ray.tune.examples.zoopt_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.examples.zoopt_example.tune_kwargs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.examples.zoopt_example.zoopt_search": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ray.tune.examples.zoopt_example.zoopt_search_config": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.tune.experiment": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.experiment.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.experiment.CombinedStopper": {
  "data": {
   "shadows": "ray.tune.stopper.CombinedStopper"
  },
  "type": "import"
 },
 "ray.tune.experiment.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.tune.experiment.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.experiment.DurableTrainable": {
  "data": {
   "shadows": "ray.tune.durable_trainable.DurableTrainable"
  },
  "type": "import"
 },
 "ray.tune.experiment.Experiment": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "ray.tune.experiment.Experiment.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "int",
    "isinstance",
    "issubclass",
    "ray.tune.experiment.Experiment",
    "ray.tune.experiment._raise_on_durable",
    "ray.tune.experiment._validate_log_to_file",
    "ray.tune.experiment.os",
    "ray.tune.result.DEFAULT_RESULTS_DIR",
    "ray.tune.stopper.CombinedStopper",
    "ray.tune.stopper.FunctionStopper",
    "ray.tune.stopper.FunctionStopper.is_valid_function",
    "ray.tune.stopper.Stopper",
    "ray.tune.stopper.TimeoutStopper",
    "ray.tune.utils.date_str",
    "ray.tune.utils.detect_checkpoint_function",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.checkpoint_dir": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property",
    "ray.tune.experiment.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.from_json": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "ray.tune.error.TuneError",
    "ray.tune.experiment.copy"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.local_dir": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.register_if_needed": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "classmethod",
    "hasattr",
    "isinstance",
    "pickle.PicklingError",
    "ray.tune.error.TuneError",
    "ray.tune.experiment.logger",
    "ray.tune.registry.register_trainable",
    "ray.tune.sample.Domain",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.run_identifier": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.Experiment.stopper": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.FunctionStopper": {
  "data": {
   "shadows": "ray.tune.stopper.FunctionStopper"
  },
  "type": "import"
 },
 "ray.tune.experiment.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "ray.tune.experiment.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ray.tune.experiment.Stopper": {
  "data": {
   "shadows": "ray.tune.stopper.Stopper"
  },
  "type": "import"
 },
 "ray.tune.experiment.TimeoutStopper": {
  "data": {
   "shadows": "ray.tune.stopper.TimeoutStopper"
  },
  "type": "import"
 },
 "ray.tune.experiment.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.experiment._raise_deprecation_note": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ray.tune.experiment.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment._raise_on_durable": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "ray.tune.durable_trainable.DurableTrainable",
    "ray.tune.registry.get_trainable_cls"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment._validate_log_to_file": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "str",
    "type",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.convert_to_experiment_list": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "len",
    "list",
    "ray.tune.error.TuneError",
    "ray.tune.experiment.Experiment",
    "ray.tune.experiment.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.experiment.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.experiment.date_str": {
  "data": {
   "shadows": "ray.tune.utils.date_str"
  },
  "type": "import"
 },
 "ray.tune.experiment.detect_checkpoint_function": {
  "data": {
   "shadows": "ray.tune.utils.detect_checkpoint_function"
  },
  "type": "import"
 },
 "ray.tune.experiment.get_trainable_cls": {
  "data": {
   "shadows": "ray.tune.registry.get_trainable_cls"
  },
  "type": "import"
 },
 "ray.tune.experiment.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.experiment.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.experiment.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.experiment.register_trainable": {
  "data": {
   "shadows": "ray.tune.registry.register_trainable"
  },
  "type": "import"
 },
 "ray.tune.function": {
  "data": {
   "shadows": "ray.tune.sample.function"
  },
  "type": "import"
 },
 "ray.tune.function_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.function_runner.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.function_runner.ERROR_FETCH_TIMEOUT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.tune.function_runner.ERROR_REPORT_TIMEOUT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.function_runner.FuncCheckpointUtil": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "ray.tune.function_runner.FuncCheckpointUtil.create_perm_checkpoint": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ray.tune.function_runner.TEMP_MARKER",
    "ray.tune.function_runner.os",
    "ray.tune.function_runner.shutil",
    "ray.tune.trainable.TrainableUtil.make_checkpoint_dir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FuncCheckpointUtil.is_null_checkpoint": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.tune.function_runner.NULL_MARKER",
    "ray.tune.function_runner.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FuncCheckpointUtil.is_temp_checkpoint_dir": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.tune.function_runner.TEMP_MARKER",
    "ray.tune.function_runner.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FuncCheckpointUtil.mk_null_checkpoint_dir": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "open",
    "ray.tune.function_runner.NULL_MARKER",
    "ray.tune.function_runner.os",
    "ray.tune.trainable.TrainableUtil.make_checkpoint_dir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FuncCheckpointUtil.mk_temp_checkpoint_dir": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "open",
    "ray.tune.function_runner.TEMP_MARKER",
    "ray.tune.function_runner.os",
    "ray.tune.function_runner.uuid",
    "ray.tune.trainable.TrainableUtil.make_checkpoint_dir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.function_runner.FunctionRunner._report_thread_runner_error": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ray.tune.TuneError",
    "ray.tune.function_runner.ERROR_FETCH_TIMEOUT",
    "six.moves.queue.Empty"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner._start": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "RuntimeError",
    "ray.tune.function_runner._RunnerThread"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner._start.entrypoint": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner._trainable_func": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.cleanup": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ray.tune.function_runner.logger",
    "ray.tune.function_runner.os",
    "ray.tune.function_runner.shutil",
    "ray.tune.session.shutdown"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.execute": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.load_checkpoint": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ray.tune.function_runner.FuncCheckpointUtil"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.reset_config": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "int",
    "ray.tune.function_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.restore_from_object": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ray.tune.function_runner.FuncCheckpointUtil",
    "ray.tune.trainable.TrainableUtil.create_from_pickle"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.save": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "ray.tune.function_runner.FuncCheckpointUtil",
    "ray.tune.function_runner.os",
    "ray.tune.trainable.TrainableUtil.find_checkpoint_dir",
    "ray.tune.trainable.TrainableUtil.make_checkpoint_dir",
    "ray.tune.trainable.TrainableUtil.process_checkpoint",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.save_to_object": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ray.tune.trainable.TrainableUtil.checkpoint_to_object"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.setup": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ray.tune.function_runner.StatusReporter",
    "ray.tune.function_runner.threading",
    "ray.tune.session.init",
    "six.moves.queue.Queue"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.FunctionRunner.step": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ray.tune.TuneError",
    "ray.tune.function_runner.RESULT_FETCH_TIMEOUT",
    "ray.tune.function_runner.logger",
    "ray.tune.result.RESULT_DUPLICATE",
    "ray.tune.result.SHOULD_CHECKPOINT",
    "six.moves.queue.Empty"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.NULL_MARKER": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.function_runner.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "ray.tune.function_runner.RESULT_DUPLICATE": {
  "data": {
   "shadows": "ray.tune.result.RESULT_DUPLICATE"
  },
  "type": "import"
 },
 "ray.tune.function_runner.RESULT_FETCH_TIMEOUT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.tune.function_runner.SHOULD_CHECKPOINT": {
  "data": {
   "shadows": "ray.tune.result.SHOULD_CHECKPOINT"
  },
  "type": "import"
 },
 "ray.tune.function_runner.StatusReporter": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "ray.tune.function_runner.StatusReporter.__call__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.tune.function_runner.sys",
    "ray.tune.function_runner.time",
    "ray.tune.result.TIME_THIS_ITER_S"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter._start": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ray.tune.function_runner.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.get_checkpoint": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.has_new_checkpoint": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.logdir": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.make_checkpoint_dir": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ray.tune.function_runner.logger",
    "ray.tune.trainable.TrainableUtil.make_checkpoint_dir"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.reset": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.set_checkpoint": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "FileNotFoundError",
    "isinstance",
    "ray.tune.function_runner.logger",
    "ray.tune.trainable.TrainableUtil.find_checkpoint_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.trial_id": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.StatusReporter.trial_name": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.TEMP_MARKER": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.tune.function_runner.TIME_THIS_ITER_S": {
  "data": {
   "shadows": "ray.tune.result.TIME_THIS_ITER_S"
  },
  "type": "import"
 },
 "ray.tune.function_runner.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.tune.function_runner.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.function_runner.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.function_runner._RunnerThread": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ray.tune.function_runner.threading"
   ]
  },
  "type": "class"
 },
 "ray.tune.function_runner._RunnerThread.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ray.tune.function_runner.threading"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner._RunnerThread.run": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception",
    "StopIteration",
    "ray.tune.function_runner.ERROR_REPORT_TIMEOUT",
    "ray.tune.function_runner.logger",
    "ray.tune.function_runner.traceback",
    "six.moves.queue.Full"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.detect_checkpoint_function": {
  "data": {
   "shadows": "ray.tune.utils.detect_checkpoint_function"
  },
  "type": "import"
 },
 "ray.tune.function_runner.detect_config_single": {
  "data": {
   "shadows": "ray.tune.utils.detect_config_single"
  },
  "type": "import"
 },
 "ray.tune.function_runner.detect_reporter": {
  "data": {
   "shadows": "ray.tune.utils.detect_reporter"
  },
  "type": "import"
 },
 "ray.tune.function_runner.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.tune.function_runner.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.function_runner.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.function_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.function_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.function_runner.parameter_registry": {
  "data": {
   "shadows": "ray.tune.registry.parameter_registry"
  },
  "type": "import"
 },
 "ray.tune.function_runner.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.function_runner.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "ray.tune.function_runner.session": {
  "data": {
   "shadows": "ray.tune.session"
  },
  "type": "import"
 },
 "ray.tune.function_runner.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.function_runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.tune.function_runner.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.tune.function_runner.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.function_runner.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.tune.function_runner.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.tune.function_runner.with_parameters": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "fn",
    "inner",
    "ray.tune.registry.parameter_registry.put",
    "ray.tune.utils.detect_checkpoint_function",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.with_parameters._inner": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "inner"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.with_parameters.inner": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "fn",
    "ray.tune.function_runner.inspect",
    "ray.tune.registry.parameter_registry.get"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.wrap_function": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr",
    "ray.tune.function_runner.FunctionRunner",
    "ray.tune.function_runner.inspect",
    "ray.tune.function_runner.logger",
    "ray.tune.utils.detect_checkpoint_function",
    "ray.tune.utils.detect_config_single",
    "ray.tune.utils.detect_reporter",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.wrap_function.ImplicitFunc": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "class"
 },
 "ray.tune.function_runner.wrap_function.ImplicitFunc._trainable_func": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "fn",
    "functools.partial",
    "handle_output",
    "ray.tune.function_runner.inspect",
    "ray.tune.result.RESULT_DUPLICATE",
    "reporter"
   ]
  },
  "type": "function"
 },
 "ray.tune.function_runner.wrap_function.ImplicitFunc._trainable_func.handle_output": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "numbers.Number",
    "reporter"
   ]
  },
  "type": "function"
 },
 "ray.tune.get_trial_dir": {
  "data": {
   "shadows": "ray.tune.session.get_trial_dir"
  },
  "type": "import"
 },
 "ray.tune.get_trial_id": {
  "data": {
   "shadows": "ray.tune.session.get_trial_id"
  },
  "type": "import"
 },
 "ray.tune.get_trial_name": {
  "data": {
   "shadows": "ray.tune.session.get_trial_name"
  },
  "type": "import"
 },
 "ray.tune.grid_search": {
  "data": {
   "shadows": "ray.tune.suggest.grid_search"
  },
  "type": "import"
 },
 "ray.tune.integration": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.docker": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.docker.DockerSyncClient": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ray.tune.sync_client.SyncClient"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.docker.DockerSyncClient.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncClient.configure": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncClient.delete": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncClient.sync_down": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler.sdk.rsync",
    "ray.tune.integration.docker.os",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncClient.sync_up": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "ray.autoscaler.sdk.rsync",
    "ray.tune.integration.docker.os",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ray.tune.integration.docker.os",
    "ray.tune.syncer.NodeSyncer"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.docker.DockerSyncer.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.services.get_node_ip_address",
    "ray.tune.integration.docker.DockerSyncClient",
    "ray.tune.sync_client.SyncClient",
    "ray.tune.syncer.NodeSyncer",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncer._remote_path": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.DockerSyncer.set_worker_ip": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.docker.NodeSyncer": {
  "data": {
   "shadows": "ray.tune.syncer.NodeSyncer"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.SyncClient": {
  "data": {
   "shadows": "ray.tune.sync_client.SyncClient"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.rsync": {
  "data": {
   "shadows": "ray.autoscaler.sdk.rsync"
  },
  "type": "import"
 },
 "ray.tune.integration.docker.services": {
  "data": {
   "shadows": "ray.services"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.integration.horovod.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.integration.horovod.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.DistributedTrainableCreator": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "int",
    "open",
    "ray.tune.cluster_info.get_ssh_key",
    "ray.tune.integration.horovod._HorovodTrainable",
    "ray.tune.integration.horovod.os",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod.DistributedTrainableCreator.WrappedHorovodTrainable": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ray.tune.integration.horovod._HorovodTrainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.horovod.DistributedTrainableCreator.WrappedHorovodTrainable.default_resource_request": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "ray.tune.resources.Resources",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.NoopLogger": {
  "data": {
   "shadows": "ray.tune.logger.NoopLogger"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.RESULT_DUPLICATE": {
  "data": {
   "shadows": "ray.tune.result.RESULT_DUPLICATE"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.RayExecutor": {
  "data": {
   "shadows": "horovod.ray.RayExecutor"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod._HorovodTrainable": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.Trainable",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.horovod._HorovodTrainable.load_checkpoint": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ray.tune.integration.horovod.ray",
    "ray.tune.trainable.TrainableUtil.checkpoint_to_object",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._HorovodTrainable.num_workers": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._HorovodTrainable.save_checkpoint": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.tune.trainable.TrainableUtil.create_from_pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._HorovodTrainable.setup": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "filelock.FileLock",
    "horovod.ray.RayExecutor",
    "horovod.ray.RayExecutor.create_settings",
    "ray.tune.function_runner.wrap_function",
    "ray.tune.integration.horovod.logger_creator",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._HorovodTrainable.step": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "RuntimeError",
    "ray.tune.result.RESULT_DUPLICATE",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._HorovodTrainable.stop": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "ray.tune.integration.horovod._train_simple": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "horovod.torch.init",
    "horovod.torch.rank",
    "range",
    "ray.tune.integration.horovod.time",
    "ray.tune.report",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod.get_rank": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.tune.integration.horovod.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod.get_ssh_key": {
  "data": {
   "shadows": "ray.tune.cluster_info.get_ssh_key"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.hvd": {
  "data": {
   "shadows": "horovod.torch"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.integration.horovod.logger_creator": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.tune.integration.horovod.get_rank",
    "ray.tune.integration.horovod.os",
    "ray.tune.logger.NoopLogger",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.horovod.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.integration.horovod.wrap_function": {
  "data": {
   "shadows": "ray.tune.function_runner.wrap_function"
  },
  "type": "import"
 },
 "ray.tune.integration.keras": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.keras.Callback": {
  "data": {
   "shadows": "tensorflow.keras.callbacks.Callback"
  },
  "type": "import"
 },
 "ray.tune.integration.keras.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "ray.tune.integration.keras.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.keras.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.integration.keras.TuneCallback": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "tensorflow.keras.callbacks.Callback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.keras.TuneCallback.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "list",
    "ray.tune.integration.keras.TuneCallback",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback._handle": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_batch_begin": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_batch_end": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_epoch_begin": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_epoch_end": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_predict_batch_begin": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_predict_batch_end": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_predict_begin": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_predict_end": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_test_batch_begin": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_test_batch_end": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_test_begin": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_test_end": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_train_batch_begin": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_train_batch_end": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_train_begin": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneCallback.on_train_end": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneReportCallback": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.tune.integration.keras.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.keras.TuneReportCallback.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "isinstance",
    "ray.tune.integration.keras.TuneReportCallback",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneReportCallback._handle": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.tune.report",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneReportCheckpointCallback": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ray.tune.integration.keras.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.keras.TuneReportCheckpointCallback.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "int",
    "ray.tune.integration.keras.TuneReportCallback",
    "ray.tune.integration.keras.TuneReportCheckpointCallback",
    "ray.tune.integration.keras._TuneCheckpointCallback",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneReportCheckpointCallback._handle": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.TuneReportCheckpointCallback.set_model": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "ray.tune.integration.keras.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.integration.keras._TuneCheckpointCallback": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.tune.integration.keras.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.keras._TuneCheckpointCallback.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "collections.Counter",
    "int",
    "isinstance",
    "len",
    "list",
    "ray.tune.integration.keras._TuneCheckpointCallback",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras._TuneCheckpointCallback._handle": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.tune.checkpoint_dir",
    "ray.tune.integration.keras.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.keras.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.keras.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.kubernetes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.KubernetesCommandRunner": {
  "data": {
   "shadows": "ray.autoscaler._private.command_runner.KubernetesCommandRunner"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.tune.sync_client.SyncClient"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.tune.integration.kubernetes.subprocess",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient._create_command_runner": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.KubernetesCommandRunner",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient._get_command_runner": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.autoscaler._private.command_runner.KubernetesCommandRunner",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient.delete": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient.sync_down": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "ray.tune.integration.kubernetes.os",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncClient.sync_up": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "ray.tune.integration.kubernetes.os",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.tune.syncer.NodeSyncer"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncer.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.services.get_node_ip_address",
    "ray.tune.integration.kubernetes.KubernetesSyncClient",
    "ray.tune.sync_client.SyncClient",
    "ray.tune.syncer.NodeSyncer",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncer._get_kubernetes_node_by_ip": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.logger.error",
    "ray.tune.integration.kubernetes.kubernetes",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncer._remote_path": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.KubernetesSyncer.set_worker_ip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.NamespacedKubernetesSyncer": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "ray.tune.integration.kubernetes.NamespacedKubernetesSyncer._NamespacedKubernetesSyncer": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ray.tune.integration.kubernetes.NodeSyncer": {
  "data": {
   "shadows": "ray.tune.syncer.NodeSyncer"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.SyncClient": {
  "data": {
   "shadows": "ray.tune.sync_client.SyncClient"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.kubernetes": {
  "data": {
   "shadows": "kubernetes"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.logger": {
  "data": {
   "shadows": "ray.logger"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.services": {
  "data": {
   "shadows": "ray.services"
  },
  "type": "import"
 },
 "ray.tune.integration.kubernetes.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.mxnet.BatchEndParam": {
  "data": {
   "shadows": "mxnet.model.BatchEndParam"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.TuneCallback": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.tune.integration.mxnet.TuneCheckpointCallback": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.tune.integration.mxnet.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.mxnet.TuneCheckpointCallback.__call__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int",
    "mxnet.model.save_checkpoint",
    "numpy.ndarray",
    "ray.tune.checkpoint_dir",
    "ray.tune.integration.mxnet.mxnet",
    "ray.tune.integration.mxnet.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.mxnet.TuneCheckpointCallback.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.mxnet.TuneReportCallback": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.tune.integration.mxnet.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.mxnet.TuneReportCallback.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mxnet.model.BatchEndParam",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.mxnet.TuneReportCallback.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.mxnet.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.mxnet": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.save_checkpoint": {
  "data": {
   "shadows": "mxnet.model.save_checkpoint"
  },
  "type": "import"
 },
 "ray.tune.integration.mxnet.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.pytorch_lightning.Callback": {
  "data": {
   "shadows": "pytorch_lightning.Callback"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.LightningModule": {
  "data": {
   "shadows": "pytorch_lightning.LightningModule"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.Trainer": {
  "data": {
   "shadows": "pytorch_lightning.Trainer"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pytorch_lightning.Callback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback._handle": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_batch_end": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_batch_start": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_epoch_end": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_epoch_start": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_fit_end": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_fit_start": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_init_end": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_init_start": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_keyboard_interrupt": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_sanity_check_end": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_sanity_check_start": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_test_batch_end": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_test_batch_start": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_test_end": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_test_start": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_train_end": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_train_start": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_validation_batch_end": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_validation_batch_start": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_validation_end": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneCallback.on_validation_start": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCallback": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ray.tune.integration.pytorch_lightning.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCallback.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "ray.tune.integration.pytorch_lightning.TuneReportCallback",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCallback._handle": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ray.tune.integration.pytorch_lightning.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ray.tune.integration.pytorch_lightning.TuneReportCallback",
    "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback",
    "ray.tune.integration.pytorch_lightning._TuneCheckpointCallback",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.TuneReportCheckpointCallback._handle": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning._TuneCheckpointCallback": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ray.tune.integration.pytorch_lightning.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.pytorch_lightning._TuneCheckpointCallback.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ray.tune.integration.pytorch_lightning._TuneCheckpointCallback",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning._TuneCheckpointCallback._handle": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.Trainer",
    "ray.tune.checkpoint_dir",
    "ray.tune.integration.pytorch_lightning.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.pytorch_lightning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.pytorch_lightning.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.integration.torch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.integration.torch.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.integration.torch.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.DistributedDataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DistributedDataParallel"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.DistributedTrainableCreator": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.integration.torch._TorchTrainable",
    "ray.tune.utils.detect_checkpoint_function",
    "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S",
    "str",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.DistributedTrainableCreator.WrappedDistributedTorchTrainable": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ray.tune.integration.torch._TorchTrainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.torch.DistributedTrainableCreator.WrappedDistributedTorchTrainable.default_process_group_parameters": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "classmethod",
    "datetime.timedelta",
    "dict",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.DistributedTrainableCreator.WrappedDistributedTorchTrainable.default_resource_request": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "ray.tune.resources.Resources",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.NCCL_TIMEOUT_S": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.NoopLogger": {
  "data": {
   "shadows": "ray.tune.logger.NoopLogger"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.RESULT_DUPLICATE": {
  "data": {
   "shadows": "ray.tune.result.RESULT_DUPLICATE"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "ray.tune.integration.torch._TorchTrainable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.torch._TorchTrainable.default_process_group_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod",
    "datetime.timedelta",
    "dict",
    "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.get_remote_worker_options": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.load_checkpoint": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ray.tune.integration.torch.ray",
    "ray.tune.trainable.TrainableUtil.checkpoint_to_object",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.save_checkpoint": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.tune.integration.torch.ray",
    "ray.tune.trainable.TrainableUtil.create_from_pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.setup": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "range",
    "ray.tune.function_runner.wrap_function",
    "ray.tune.integration.torch.enable_distributed_trainable",
    "ray.tune.integration.torch.logger_creator",
    "ray.tune.integration.torch.ray",
    "ray.util.sgd.torch.utils.setup_address",
    "ray.util.sgd.torch.utils.setup_process_group",
    "setup_on_worker",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.step": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "ray.tune.integration.torch.ray",
    "ray.tune.result.RESULT_DUPLICATE",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._TorchTrainable.stop": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ray.tune.integration.torch.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._distributed_enabled": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.tune.integration.torch._train_check_global": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ray.tune.integration.torch.is_distributed_trainable",
    "ray.tune.integration.torch.time",
    "ray.tune.report",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch._train_simple": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "loss_fn",
    "model",
    "model.state_dict",
    "open",
    "range",
    "ray.tune.integration.torch.distributed_checkpoint_dir",
    "ray.tune.integration.torch.os",
    "ray.tune.integration.torch.torch",
    "ray.tune.report",
    "str",
    "torch.nn.MSELoss",
    "torch.nn.parallel.DistributedDataParallel",
    "torch.optim.SGD",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.detect_checkpoint_function": {
  "data": {
   "shadows": "ray.tune.utils.detect_checkpoint_function"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.distributed_checkpoint_dir": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "int",
    "ray.tune.checkpoint_dir",
    "ray.tune.integration.torch.shutil",
    "ray.tune.integration.torch.tempfile",
    "ray.tune.integration.torch.torch",
    "str",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.enable_distributed_trainable": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.tune.integration.torch._distributed_enabled"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.is_distributed_trainable": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.tune.integration.torch._distributed_enabled"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.integration.torch.logger_creator": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "int",
    "ray.tune.integration.torch.os",
    "ray.tune.logger.NoopLogger",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.torch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.setup_address": {
  "data": {
   "shadows": "ray.util.sgd.torch.utils.setup_address"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.setup_process_group": {
  "data": {
   "shadows": "ray.util.sgd.torch.utils.setup_process_group"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.integration.torch.wrap_function": {
  "data": {
   "shadows": "ray.tune.function_runner.wrap_function"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ray.logger.error"
   ]
  },
  "type": "module"
 },
 "ray.tune.integration.wandb.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.FunctionRunner": {
  "data": {
   "shadows": "ray.tune.function_runner.FunctionRunner"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Logger": {
  "data": {
   "shadows": "ray.tune.logger.Logger"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.WANDB_ENV_VAR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.tune.integration.wandb.WandbLogger": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ray.tune.integration.wandb._WandbLoggingProcess",
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.wandb.WandbLogger._init": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "multiprocessing.Queue",
    "ray.tune.integration.wandb._clean_log",
    "ray.tune.integration.wandb._set_api_key",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.WandbLogger.close": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ray.tune.integration.wandb._WANDB_QUEUE_END"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.WandbLogger.on_result": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ray.tune.integration.wandb._clean_log",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.WandbTrainableMixin": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ray.tune.integration.wandb.wandb"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.wandb.WandbTrainableMixin.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "isinstance",
    "ray.tune.Trainable",
    "ray.tune.function_runner.FunctionRunner",
    "ray.tune.integration.wandb._clean_log",
    "ray.tune.integration.wandb._set_api_key",
    "super",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.WandbTrainableMixin.stop": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._WANDB_QUEUE_END": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.integration.wandb._WandbLoggingProcess": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "multiprocessing.Process"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.wandb._WandbLoggingProcess.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "multiprocessing.Queue",
    "ray.tune.integration.wandb._WandbLoggingProcess",
    "set",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._WandbLoggingProcess._handle_result": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "any",
    "ray.tune.integration.wandb._is_allowed_type",
    "ray.tune.utils.flatten_dict",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._WandbLoggingProcess.run": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.tune.integration.wandb._WANDB_QUEUE_END",
    "ray.tune.integration.wandb.wandb"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._clean_log": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "list",
    "ray.tune.integration.wandb._is_allowed_type",
    "ray.tune.integration.wandb.pickle",
    "ray.tune.integration.wandb.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._is_allowed_type": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb._set_api_key": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "open",
    "ray.logger.info",
    "ray.tune.integration.wandb.WANDB_ENV_VAR",
    "ray.tune.integration.wandb.os",
    "ray.tune.integration.wandb.wandb",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.logger": {
  "data": {
   "shadows": "ray.logger"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.integration.wandb.wandb": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.integration.wandb.wandb_mixin": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.wandb.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.tune.integration.xgboost": {
  "data": {},
  "type": "module"
 },
 "ray.tune.integration.xgboost.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.integration.xgboost.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.integration.xgboost.TuneCallback": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.tune.integration.xgboost.TuneCallback.__call__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.TuneReportCallback": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ray.tune.integration.xgboost.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.xgboost.TuneReportCallback.__call__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "ray.tune.report"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.TuneReportCallback.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.TuneReportCheckpointCallback": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.tune.integration.xgboost.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.xgboost.TuneReportCheckpointCallback.__call__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.TuneReportCheckpointCallback.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ray.tune.integration.xgboost.TuneReportCallback",
    "ray.tune.integration.xgboost._TuneCheckpointCallback",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.integration.xgboost._TuneCheckpointCallback": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.tune.integration.xgboost.TuneCallback"
   ]
  },
  "type": "class"
 },
 "ray.tune.integration.xgboost._TuneCheckpointCallback.__call__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.tune.checkpoint_dir",
    "ray.tune.integration.xgboost.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost._TuneCheckpointCallback.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.integration.xgboost.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.integration.xgboost.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.tune.is_session_enabled": {
  "data": {
   "shadows": "ray.tune.session.is_session_enabled"
  },
  "type": "import"
 },
 "ray.tune.logger": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "ray.tune.logger.CSVLogger",
    "ray.tune.logger.JsonLogger",
    "ray.tune.logger.TBXLogger",
    "ray.tune.logger.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.logger.CSVLogger": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.CSVLogger._init": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "open",
    "ray.tune.logger.os",
    "ray.tune.result.EXPR_PROGRESS_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.CSVLogger.close": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "ray.tune.logger.CSVLogger.flush": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "ray.tune.logger.CSVLogger.on_result": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.tune.logger.csv",
    "ray.tune.utils.flatten_dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.DEFAULT_LOGGERS": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "ray.tune.logger.EXPR_PARAM_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PARAM_FILE"
  },
  "type": "import"
 },
 "ray.tune.logger.EXPR_PARAM_PICKLE_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PARAM_PICKLE_FILE"
  },
  "type": "import"
 },
 "ray.tune.logger.EXPR_PROGRESS_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_PROGRESS_FILE"
  },
  "type": "import"
 },
 "ray.tune.logger.EXPR_RESULT_FILE": {
  "data": {
   "shadows": "ray.tune.result.EXPR_RESULT_FILE"
  },
  "type": "import"
 },
 "ray.tune.logger.JsonLogger": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.JsonLogger._init": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "open",
    "ray.tune.logger.os",
    "ray.tune.result.EXPR_RESULT_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.JsonLogger.close": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.tune.logger.JsonLogger.flush": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.tune.logger.JsonLogger.on_result": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.tune.logger.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.JsonLogger.update_config": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "open",
    "ray.cloudpickle.dump",
    "ray.tune.logger.json",
    "ray.tune.logger.os",
    "ray.tune.result.EXPR_PARAM_FILE",
    "ray.tune.result.EXPR_PARAM_PICKLE_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.JsonLogger.write": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ray.tune.logger.Logger": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "ray.tune.logger.Logger.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.tune.logger.Logger._init": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ray.tune.logger.Logger.close": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ray.tune.logger.Logger.flush": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ray.tune.logger.Logger.on_result": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.Logger.update_config": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "ray.tune.logger.MLFLowLogger": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.MLFLowLogger._init": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mlflow.tracking.MlflowClient"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.MLFLowLogger.close": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "ray.tune.logger.MLFLowLogger.on_result": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "ray.tune.result.TRAINING_ITERATION"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.MlflowClient"
  },
  "type": "import"
 },
 "ray.tune.logger.NODE_IP": {
  "data": {
   "shadows": "ray.tune.result.NODE_IP"
  },
  "type": "import"
 },
 "ray.tune.logger.NoopLogger": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.NoopLogger.on_result": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "ray.tune.logger.SummaryWriter": {
  "data": {
   "shadows": "tensorboardX.SummaryWriter"
  },
  "type": "import"
 },
 "ray.tune.logger.TBXLogger": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "list",
    "numpy.bool8",
    "numpy.integer",
    "ray.tune.logger.Logger",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.TBXLogger._init": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ImportError",
    "ray.tune.logger.logger",
    "ray.util.debug.log_once",
    "tensorboardX.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.TBXLogger._try_log_hparams": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "ray.tune.logger.logger",
    "ray.tune.utils.flatten_dict",
    "str",
    "tensorboardX.summary.hparams"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.TBXLogger.close": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.tune.logger.VALID_SUMMARY_TYPES",
    "ray.tune.utils.flatten_dict",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.TBXLogger.flush": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "ray.tune.logger.TBXLogger.on_result": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "numpy.isnan",
    "numpy.ndarray",
    "ray.tune.logger.VALID_SUMMARY_TYPES",
    "ray.tune.logger.logger",
    "ray.tune.result.TIMESTEPS_TOTAL",
    "ray.tune.result.TIME_TOTAL_S",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.utils.flatten_dict",
    "ray.util.debug.log_once",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.TIMESTEPS_TOTAL": {
  "data": {
   "shadows": "ray.tune.result.TIMESTEPS_TOTAL"
  },
  "type": "import"
 },
 "ray.tune.logger.TIME_TOTAL_S": {
  "data": {
   "shadows": "ray.tune.result.TIME_TOTAL_S"
  },
  "type": "import"
 },
 "ray.tune.logger.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.logger.UnifiedLogger": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ray.tune.logger.Logger"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger.UnifiedLogger.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ray.tune.logger.DEFAULT_LOGGERS",
    "ray.tune.logger.JsonLogger",
    "ray.tune.logger.UnifiedLogger",
    "ray.tune.logger.logger",
    "ray.util.debug.log_once",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger._init": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Exception",
    "cls",
    "cls.__name__",
    "ray.tune.logger.logger",
    "ray.tune.syncer.get_node_syncer",
    "ray.util.debug.log_once",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.close": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.flush": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ray.tune.logger.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.on_result": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ray.tune.result.NODE_IP"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.sync_down": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.sync_results_to_new_location": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ray.tune.logger.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.sync_up": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.update_config": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "ray.tune.logger.UnifiedLogger.wait": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "ray.tune.logger.VALID_SUMMARY_TYPES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.logger._SafeFallbackEncoder": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ray.tune.logger.json"
   ]
  },
  "type": "class"
 },
 "ray.tune.logger._SafeFallbackEncoder.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ray.tune.logger._SafeFallbackEncoder",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger._SafeFallbackEncoder.default": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Exception",
    "float",
    "int",
    "isinstance",
    "issubclass",
    "numpy.__name__",
    "numpy.isnan",
    "numpy.ndarray",
    "ray.tune.logger._SafeFallbackEncoder",
    "ray.tune.logger.numbers",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.logger.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "ray.tune.logger.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.logger.get_node_syncer": {
  "data": {
   "shadows": "ray.tune.syncer.get_node_syncer"
  },
  "type": "import"
 },
 "ray.tune.logger.hparams": {
  "data": {
   "shadows": "tensorboardX.summary.hparams"
  },
  "type": "import"
 },
 "ray.tune.logger.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.logger.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.logger.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.logger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.logger.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "ray.tune.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.logger.pretty_print": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ray.tune.logger._SafeFallbackEncoder",
    "ray.tune.logger.json",
    "ray.tune.logger.yaml"
   ]
  },
  "type": "function"
 },
 "ray.tune.logger.tf": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.logger.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.tune.loguniform": {
  "data": {
   "shadows": "ray.tune.sample.loguniform"
  },
  "type": "import"
 },
 "ray.tune.make_checkpoint_dir": {
  "data": {
   "shadows": "ray.tune.session.make_checkpoint_dir"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "ray.tune.progress_reporter.AUTO_RESULT_KEYS": {
  "data": {
   "shadows": "ray.tune.result.AUTO_RESULT_KEYS"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.CLIReporter": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.TuneReporterBase"
   ]
  },
  "type": "class"
 },
 "ray.tune.progress_reporter.CLIReporter.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.CLIReporter",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.CLIReporter.report": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.EPISODE_REWARD_MEAN": {
  "data": {
   "shadows": "ray.tune.result.EPISODE_REWARD_MEAN"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.HTML": {
  "data": {
   "shadows": "IPython.core.display.HTML"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.JupyterNotebookReporter": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.TuneReporterBase"
   ]
  },
  "type": "class"
 },
 "ray.tune.progress_reporter.JupyterNotebookReporter.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.JupyterNotebookReporter",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.JupyterNotebookReporter.report": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "IPython.core.display.HTML",
    "IPython.core.display.display",
    "IPython.display.clear_output"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.MEAN_ACCURACY": {
  "data": {
   "shadows": "ray.tune.result.MEAN_ACCURACY"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.MEAN_LOSS": {
  "data": {
   "shadows": "ray.tune.result.MEAN_LOSS"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.ProgressReporter": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "ray.tune.progress_reporter.ProgressReporter.report": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.ProgressReporter.should_report": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TIMESTEPS_TOTAL": {
  "data": {
   "shadows": "ray.tune.result.TIMESTEPS_TOTAL"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.TIME_TOTAL_S": {
  "data": {
   "shadows": "ray.tune.result.TIME_TOTAL_S"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.TuneReporterBase": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "ray.tune.progress_reporter.ProgressReporter",
    "ray.tune.progress_reporter.collections",
    "ray.tune.result.EPISODE_REWARD_MEAN",
    "ray.tune.result.MEAN_ACCURACY",
    "ray.tune.result.MEAN_LOSS",
    "ray.tune.result.TIMESTEPS_TOTAL",
    "ray.tune.result.TIME_TOTAL_S",
    "ray.tune.result.TRAINING_ITERATION",
    "type"
   ]
  },
  "type": "class"
 },
 "ray.tune.progress_reporter.TuneReporterBase.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase._current_best_trial": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "float",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase._infer_user_metrics": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "ray.tune.result.AUTO_RESULT_KEYS",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase._progress_str": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.best_trial_str",
    "ray.tune.progress_reporter.memory_debug_str",
    "ray.tune.progress_reporter.trial_errors_str",
    "ray.tune.progress_reporter.trial_progress_str"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase.add_metric_column": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase.add_parameter_column": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase.set_search_properties": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase.set_total_samples": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.TuneReporterBase.should_report": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ray.tune.progress_reporter.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter._fair_filter_trials": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.tune.progress_reporter.collections",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter._get_trial_info": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ray.tune.utils.unflattened_lookup",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.best_trial_str": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.clear_output": {
  "data": {
   "shadows": "IPython.display.clear_output"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.display": {
  "data": {
   "shadows": "IPython.core.display.display"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.memory_debug_str": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ImportError",
    "ray.tune.progress_reporter.psutil",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.progress_reporter.trial_errors_str": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "float",
    "len",
    "str",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.trial_progress_str": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "any",
    "collections.Mapping",
    "float",
    "isinstance",
    "len",
    "list",
    "ray.tune.progress_reporter._fair_filter_trials",
    "ray.tune.progress_reporter._get_trial_info",
    "ray.tune.progress_reporter.collections",
    "ray.tune.progress_reporter.sys",
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial.Trial.TERMINATED",
    "set",
    "sorted",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "ray.tune.progress_reporter.unflattened_lookup": {
  "data": {
   "shadows": "ray.tune.utils.unflattened_lookup"
  },
  "type": "import"
 },
 "ray.tune.qloguniform": {
  "data": {
   "shadows": "ray.tune.sample.qloguniform"
  },
  "type": "import"
 },
 "ray.tune.qrandint": {
  "data": {
   "shadows": "ray.tune.sample.qrandint"
  },
  "type": "import"
 },
 "ray.tune.qrandn": {
  "data": {
   "shadows": "ray.tune.sample.qrandn"
  },
  "type": "import"
 },
 "ray.tune.quniform": {
  "data": {
   "shadows": "ray.tune.sample.quniform"
  },
  "type": "import"
 },
 "ray.tune.randint": {
  "data": {
   "shadows": "ray.tune.sample.randint"
  },
  "type": "import"
 },
 "ray.tune.randn": {
  "data": {
   "shadows": "ray.tune.sample.randn"
  },
  "type": "import"
 },
 "ray.tune.register_env": {
  "data": {
   "shadows": "ray.tune.registry.register_env"
  },
  "type": "import"
 },
 "ray.tune.register_trainable": {
  "data": {
   "shadows": "ray.tune.registry.register_trainable"
  },
  "type": "import"
 },
 "ray.tune.registry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.registry.ENV_CREATOR",
    "ray.tune.registry.RLLIB_ACTION_DIST",
    "ray.tune.registry.RLLIB_MODEL",
    "ray.tune.registry.RLLIB_PREPROCESSOR",
    "ray.tune.registry.TEST",
    "ray.tune.registry.TRAINABLE_CLASS",
    "ray.tune.registry._ParameterRegistry",
    "ray.tune.registry._Registry",
    "ray.tune.registry._global_registry",
    "ray.tune.registry.logging",
    "ray.tune.registry.parameter_registry",
    "ray.tune.registry.ray"
   ]
  },
  "type": "module"
 },
 "ray.tune.registry.ENV_CREATOR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.registry.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "ray.tune.registry.KNOWN_CATEGORIES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.registry.RLLIB_ACTION_DIST": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.registry.RLLIB_MODEL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.tune.registry.RLLIB_PREPROCESSOR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.registry.TEST": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.registry.TRAINABLE_CLASS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.tune.registry.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.tune.registry.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.registry._ParameterRegistry": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "ray.tune.registry._ParameterRegistry.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.tune.registry._ParameterRegistry.flush": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ray.tune.registry.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._ParameterRegistry.get": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ray.tune.registry.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._ParameterRegistry.put": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ray.tune.registry.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._Registry": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "ray.tune.registry._Registry.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "ray.tune.registry._Registry.contains": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ray.experimental.internal_kv._internal_kv_get",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "ray.tune.registry._make_key"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._Registry.flush_values": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ray.experimental.internal_kv._internal_kv_put",
    "ray.tune.registry._make_key"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._Registry.get": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "ray.cloudpickle.loads",
    "ray.experimental.internal_kv._internal_kv_get",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "ray.tune.registry._make_key"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._Registry.register": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.experimental.internal_kv._internal_kv_initialized",
    "ray.tune.TuneError",
    "ray.tune.registry.KNOWN_CATEGORIES"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry._global_registry": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "ray.tune.registry._internal_kv_get": {
  "data": {
   "shadows": "ray.experimental.internal_kv._internal_kv_get"
  },
  "type": "import"
 },
 "ray.tune.registry._internal_kv_initialized": {
  "data": {
   "shadows": "ray.experimental.internal_kv._internal_kv_initialized"
  },
  "type": "import"
 },
 "ray.tune.registry._internal_kv_put": {
  "data": {
   "shadows": "ray.experimental.internal_kv._internal_kv_put"
  },
  "type": "import"
 },
 "ray.tune.registry._make_key": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.tune.registry._register_all": {
  "data": {
   "shadows": "ray.rllib._register_all"
  },
  "type": "import"
 },
 "ray.tune.registry.check_serializability": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.tune.registry.TEST"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.get_trainable_cls": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.registry.TRAINABLE_CLASS",
    "ray.tune.registry.validate_trainable"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.has_trainable": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.tune.registry.TRAINABLE_CLASS"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.registry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.registry.parameter_registry": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "ray.tune.registry.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.registry.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.registry.register_env": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.tune.registry.ENV_CREATOR",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.register_trainable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "isinstance",
    "issubclass",
    "ray.tune.function_runner.wrap_function",
    "ray.tune.registry.TRAINABLE_CLASS",
    "ray.tune.registry.logger",
    "ray.tune.trainable.Trainable",
    "type",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.validate_trainable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.rllib._register_all",
    "ray.tune.error.TuneError",
    "ray.tune.registry.has_trainable"
   ]
  },
  "type": "function"
 },
 "ray.tune.registry.wrap_function": {
  "data": {
   "shadows": "ray.tune.function_runner.wrap_function"
  },
  "type": "import"
 },
 "ray.tune.report": {
  "data": {
   "shadows": "ray.tune.session.report"
  },
  "type": "import"
 },
 "ray.tune.resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.resources.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.resources.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "ray.tune.resources.Resources": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "ray.tune.resources.Resources.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numbers.Number",
    "ray.tune.resources.Resources",
    "round",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.cpu_total": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.get": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.get_res_total": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.gpu_total": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.is_nonnegative": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "all",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.memory_total": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.object_store_memory_total": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.subtract": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.resources.Resources",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.summary_string": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.tune.resources.ray",
    "round"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.Resources.to_json": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ray.tune.resources.resources_to_json"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.resources.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.resources.json_to_resources": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.TuneError",
    "ray.tune.resources.Resources",
    "ray.tune.resources.json",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "ray.tune.resources.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.resources.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.tune.resources.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.resources.resources_to_json": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "ray.tune.resources.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "ray.tune.result": {
  "data": {
   "symbols_in_volume": [
    "ray.tune.result.EPISODES_TOTAL",
    "ray.tune.result.EXPERIMENT_TAG",
    "ray.tune.result.HOSTNAME",
    "ray.tune.result.MEAN_ACCURACY",
    "ray.tune.result.MEAN_LOSS",
    "ray.tune.result.NODE_IP",
    "ray.tune.result.PID",
    "ray.tune.result.TIMESTEPS_TOTAL",
    "ray.tune.result.TIME_THIS_ITER_S",
    "ray.tune.result.TIME_TOTAL_S",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.result.TRIAL_ID",
    "ray.tune.result.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.result.AUTO_RESULT_KEYS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.tune.result.CONFIG_PREFIX": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ray.tune.result.DEFAULT_EXPERIMENT_INFO_KEYS": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ray.tune.result.DEFAULT_RESULTS_DIR": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "ray.tune.result.DEFAULT_RESULT_KEYS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ray.tune.result.DONE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.tune.result.EPISODES_THIS_ITER": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ray.tune.result.EPISODES_TOTAL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "ray.tune.result.EPISODE_REWARD_MEAN": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.tune.result.EXPERIMENT_TAG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.result.EXPR_META_FILE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.tune.result.EXPR_PARAM_FILE": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "ray.tune.result.EXPR_PARAM_PICKLE_FILE": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "ray.tune.result.EXPR_PROGRESS_FILE": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "ray.tune.result.EXPR_RESULT_FILE": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ray.tune.result.HOSTNAME": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.tune.result.JOB_META_FILE": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "ray.tune.result.MEAN_ACCURACY": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.result.MEAN_LOSS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.result.NEG_MEAN_LOSS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.result.NODE_IP": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.result.PID": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.result.RESULT_DUPLICATE": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "ray.tune.result.SHOULD_CHECKPOINT": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.tune.result.STDERR_FILE": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "ray.tune.result.STDOUT_FILE": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "ray.tune.result.TIMESTEPS_THIS_ITER": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ray.tune.result.TIMESTEPS_TOTAL": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "ray.tune.result.TIME_THIS_ITER_S": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ray.tune.result.TIME_TOTAL_S": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ray.tune.result.TRAINING_ITERATION": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.tune.result.TRIAL_ID": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.result.TRIAL_INFO": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "ray.tune.result.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.run": {
  "data": {
   "shadows": "ray.tune.tune.run"
  },
  "type": "import"
 },
 "ray.tune.run_experiments": {
  "data": {
   "shadows": "ray.tune.tune.run_experiments"
  },
  "type": "import"
 },
 "ray.tune.sample_from": {
  "data": {
   "shadows": "ray.tune.sample.sample_from"
  },
  "type": "import"
 },
 "ray.tune.save_checkpoint": {
  "data": {
   "shadows": "ray.tune.session.save_checkpoint"
  },
  "type": "import"
 },
 "ray.tune.schedulers": {
  "data": {},
  "type": "module"
 },
 "ray.tune.schedulers.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.async_hyperband.ASHAScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.AsyncHyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.HyperBandForBOHB": {
  "data": {
   "shadows": "ray.tune.schedulers.hb_bohb.HyperBandForBOHB"
  },
  "type": "import"
 },
 "ray.tune.schedulers.HyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.hyperband.HyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.MedianStoppingRule": {
  "data": {
   "shadows": "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule"
  },
  "type": "import"
 },
 "ray.tune.schedulers.PB2": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2.PB2"
  },
  "type": "import"
 },
 "ray.tune.schedulers.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.pbt.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.schedulers.PopulationBasedTrainingReplay": {
  "data": {
   "shadows": "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay"
  },
  "type": "import"
 },
 "ray.tune.schedulers.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.__all__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ray.tune.schedulers.async_hyperband": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "range",
    "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler",
    "ray.tune.schedulers.async_hyperband.bracket",
    "ray.tune.schedulers.async_hyperband.logging",
    "ray.tune.schedulers.async_hyperband.sched",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.async_hyperband.ASHAScheduler": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "int",
    "range",
    "ray.tune.schedulers.async_hyperband._Bracket",
    "ray.tune.schedulers.async_hyperband.logger",
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler.__init__",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.debug_string": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.on_trial_add": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.e",
    "numpy.random.choice",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.on_trial_complete": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.on_trial_remove": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.on_trial_result": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.STOP",
    "ray.tune.trial.Trial",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler.set_search_properties": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband._Bracket": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "ray.tune.schedulers.async_hyperband._Bracket.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.log",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband._Bracket.cutoff": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "list",
    "numpy.nanpercentile",
    "numpy.ndarray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband._Bracket.debug_str": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband._Bracket.on_result": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.tune.schedulers.async_hyperband.logger",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.STOP",
    "ray.tune.trial.Trial",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.async_hyperband.bracket": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "ray.tune.schedulers.async_hyperband.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.tune.schedulers.async_hyperband.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.async_hyperband.sched": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "ray.tune.schedulers.async_hyperband.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.schedulers.create_scheduler": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "SchedulerClass",
    "ValueError",
    "list",
    "ray.tune.schedulers.async_hyperband.AsyncHyperBandScheduler",
    "ray.tune.schedulers.hb_bohb.HyperBandForBOHB",
    "ray.tune.schedulers.hyperband.HyperBandScheduler",
    "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule",
    "ray.tune.schedulers.pb2.PB2",
    "ray.tune.schedulers.pbt.PopulationBasedTraining",
    "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay",
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hb_bohb": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.schedulers.hb_bohb.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.hb_bohb.Bracket": {
  "data": {
   "shadows": "ray.tune.schedulers.hyperband.Bracket"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandForBOHB": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ray.tune.schedulers.hyperband.HyperBandScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandForBOHB._unpause_trial": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner._search_alg.searcher.on_unpause",
    "ray.tune.trial_runner.trial_executor.unpause_trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandForBOHB.choose_trial_to_run": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "any",
    "bool",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial_runner",
    "ray.tune.trial_runner.get_trials",
    "ray.tune.trial_runner.has_resources",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandForBOHB.on_trial_add": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "ray.tune.schedulers.hb_bohb.logger",
    "ray.tune.schedulers.hyperband.Bracket",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandForBOHB.on_trial_result": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "any",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.PAUSE",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial_runner",
    "ray.tune.trial_runner._search_alg.searcher.on_pause",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hb_bohb.HyperBandScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.hyperband.HyperBandScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.tune.schedulers.hb_bohb.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hb_bohb.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.schedulers.hyperband.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.hyperband.Bracket": {
  "data": {
   "lineno": 340
  },
  "type": "class"
 },
 "ray.tune.schedulers.hyperband.Bracket.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.__repr__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ray.tune.schedulers.hyperband.collections",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket._calculate_total_work": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "float",
    "int",
    "min",
    "numpy.ceil",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket._get_result_time": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "float",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.add_trial": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.cleanup_full": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial_runner.stop_trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.cleanup_trial": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.completion_percentage": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.continue_trial": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "bool",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.cur_iter_done": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "all",
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.current_trials": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "list",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.filled": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.finished": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.successive_halving": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "float",
    "int",
    "min",
    "numpy.ceil",
    "ray.tune.trial.Trial",
    "sorted",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Bracket.update_trial_stats": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ray.tune.schedulers.hyperband.logger",
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ceil",
    "numpy.log",
    "numpy.round",
    "ray.tune.schedulers.hyperband.logger",
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler.__init__",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler._cur_band_filled": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler._process_bracket": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "len",
    "ray.tune.error.TuneError",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.PAUSE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.STOP",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial_runner",
    "ray.tune.trial_runner.stop_trial",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler._unpause_trial": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner.trial_executor.unpause_trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.choose_trial_to_run": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner.has_resources",
    "sorted",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.debug_string": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.on_trial_add": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "ray.tune.schedulers.hyperband.Bracket",
    "ray.tune.schedulers.hyperband.logger",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.on_trial_complete": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.on_trial_error": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.on_trial_remove": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.on_trial_result": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ray.tune.schedulers.hyperband.logger",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.set_search_properties": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.HyperBandScheduler.state": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "int",
    "len",
    "str",
    "sum",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.hyperband.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.tune.schedulers.hyperband.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.hyperband.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.schedulers.median_stopping_rule.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.median_stopping_rule.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "list",
    "max",
    "min",
    "ray.tune.schedulers.median_stopping_rule.collections",
    "ray.tune.schedulers.median_stopping_rule.logger",
    "ray.tune.schedulers.trial_scheduler.FIFOScheduler.__init__",
    "set",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule._best_result": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule._median_result": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "float",
    "numpy.median",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule._on_insufficient_samples": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "float",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.PAUSE",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner.get_trials",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule._running_mean": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "numpy.ndarray",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule._trials_beyond_time": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "float",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.debug_string": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.on_trial_add": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule",
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.on_trial_complete": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.on_trial_result": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "ray.tune.schedulers.median_stopping_rule.logger",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.PAUSE",
    "ray.tune.schedulers.trial_scheduler.TrialScheduler.STOP",
    "ray.tune.trial.Trial",
    "ray.tune.trial_runner",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.MedianStoppingRule.set_search_properties": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bool",
    "float",
    "max",
    "min",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.median_stopping_rule.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.trial_scheduler.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.schedulers.median_stopping_rule.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.median_stopping_rule.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.schedulers.pb2.is_gpy_available",
    "ray.tune.schedulers.pb2.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.pb2.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.GPy": {
  "data": {
   "shadows": "GPy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.PB2": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ray.tune.schedulers.PopulationBasedTraining"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.pb2.PB2.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "bool",
    "float",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "ray.tune.TuneError",
    "ray.tune.schedulers.pb2.PB2",
    "ray.tune.schedulers.pb2.explore",
    "ray.tune.schedulers.pb2.is_gpy_available",
    "ray.tune.schedulers.pb2.is_sklearn_available",
    "str",
    "super",
    "tuple",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.PB2._get_new_config": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "ray.tune.schedulers.pb2.explore",
    "ray.tune.schedulers.pb2.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.PB2._save_trial_state": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.concat",
    "ray.tune.schedulers.pb2.PB2",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.TV_SquaredExp": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.TV_SquaredExp"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.UCB": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.UCB"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2._has_gpy": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.schedulers.pb2._has_sklearn": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.schedulers.pb2.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.explore": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat",
    "ray.tune.schedulers.pb2.select_config",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.is_gpy_available": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.tune.schedulers.pb2._has_gpy"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.is_sklearn_available": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.schedulers.pb2._has_sklearn"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ray.tune.schedulers.pb2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.normalize": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.normalize"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.optimize_acq": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.optimize_acq"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.select_config": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "copy.deepcopy",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.float32",
    "numpy.hstack",
    "numpy.linalg.LinAlgError",
    "numpy.max",
    "numpy.min",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "ray.tune.schedulers.pb2.GPy",
    "ray.tune.schedulers.pb2_utils.TV_SquaredExp",
    "ray.tune.schedulers.pb2_utils.UCB",
    "ray.tune.schedulers.pb2_utils.normalize",
    "ray.tune.schedulers.pb2_utils.optimize_acq",
    "ray.tune.schedulers.pb2_utils.select_length",
    "ray.tune.schedulers.pb2_utils.standardize"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2.select_length": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.select_length"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2.standardize": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2_utils.standardize"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils": {
  "data": {
   "symbols_in_volume": [
    "ray.tune.schedulers.pb2.is_gpy_available",
    "ray.tune.schedulers.pb2.is_sklearn_available"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.pb2_utils.GPy": {
  "data": {
   "shadows": "GPy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.Kern": {
  "data": {
   "shadows": "GPy.kern.Kern"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.Param": {
  "data": {
   "shadows": "GPy.core.Param"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.TV_SquaredExp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "GPy.kern.Kern"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.pb2_utils.TV_SquaredExp.K": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.square",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.TV_SquaredExp.Kdiag": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.TV_SquaredExp.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "GPy.core.Param",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.TV_SquaredExp.update_gradients_full": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.square",
    "numpy.sum",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.UCB": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.concatenate",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.is_gpy_available": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2.is_gpy_available"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.is_sklearn_available": {
  "data": {
   "shadows": "ray.tune.schedulers.pb2.is_sklearn_available"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.normalize": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.optimize_acq": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "func",
    "numpy.clip",
    "numpy.random.uniform",
    "range",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.pairwise_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise_distances"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pb2_utils.select_length": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.argmax",
    "numpy.array",
    "numpy.concatenate",
    "numpy.max",
    "numpy.min",
    "ray.tune.schedulers.pb2_utils.GPy",
    "ray.tune.schedulers.pb2_utils.TV_SquaredExp",
    "ray.tune.schedulers.pb2_utils.normalize",
    "ray.tune.schedulers.pb2_utils.standardize"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pb2_utils.standardize": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.schedulers.pbt.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.schedulers.pbt.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Checkpoint": {
  "data": {
   "shadows": "ray.tune.trial.Checkpoint"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Function": {
  "data": {
   "shadows": "ray.tune.sample.Function"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.PBTTrialState": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "ray.tune.schedulers.pbt.PBTTrialState.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PBTTrialState.__repr__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ray.tune.schedulers.FIFOScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "custom_explore_fn",
    "dict",
    "float",
    "isinstance",
    "list",
    "ray.tune.error.TuneError",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Function",
    "ray.tune.schedulers.FIFOScheduler.__init__",
    "ray.tune.schedulers.pbt.logger",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._exploit": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ray.tune.error.TuneError",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.schedulers.pbt.make_experiment_tag",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial_executor.reset_trial",
    "ray.tune.trial_executor.restore",
    "ray.tune.trial_executor.start_trial",
    "ray.tune.trial_executor.stop_trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._get_new_config": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ray.tune.schedulers.pbt.explore"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._log_config_on_step": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "open",
    "print",
    "ray.tune.logger._SafeFallbackEncoder",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.schedulers.pbt.PBTTrialState",
    "ray.tune.schedulers.pbt.json",
    "ray.tune.schedulers.pbt.os",
    "ray.tune.schedulers.pbt.shutil",
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._perturb_trial": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.schedulers.pbt.random",
    "ray.tune.trial.Checkpoint.MEMORY",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial_runner.trial_executor",
    "ray.tune.trial_runner.trial_executor.save",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._quantiles": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.schedulers.pbt.math",
    "ray.tune.trial.Trial",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining._save_trial_state": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "int",
    "ray.tune.schedulers.pbt.PBTTrialState",
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.choose_trial_to_run": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner.get_trials",
    "ray.tune.trial_runner.has_resources",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.debug_string": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.last_scores": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "float",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.on_trial_add": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.schedulers.pbt.PBTTrialState",
    "ray.tune.schedulers.pbt.fill_config",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.trial.Trial",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.on_trial_result": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "max",
    "ray.tune.schedulers.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.TrialScheduler.PAUSE",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner",
    "ray.tune.trial_runner.get_trials",
    "ray.util.debug.log_once",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.reset_stats": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTraining.set_search_properties": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ray.tune.schedulers.FIFOScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay.__init__": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "next",
    "ray.tune.schedulers.pbt.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay._load_policy": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "open",
    "ray.tune.schedulers.pbt.json",
    "reversed",
    "str",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay.debug_string": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay.on_trial_add": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.PopulationBasedTrainingReplay.on_trial_result": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "next",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.schedulers.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.pbt.logger",
    "ray.tune.schedulers.pbt.make_experiment_tag",
    "ray.tune.trial.Checkpoint.MEMORY",
    "ray.tune.trial.Trial",
    "ray.tune.trial_executor",
    "ray.tune.trial_executor.reset_trial",
    "ray.tune.trial_executor.restore",
    "ray.tune.trial_executor.start_trial",
    "ray.tune.trial_executor.stop_trial",
    "ray.tune.trial_runner.trial_executor",
    "ray.tune.trial_runner.trial_executor.save",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt._SafeFallbackEncoder": {
  "data": {
   "shadows": "ray.tune.logger._SafeFallbackEncoder"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.explore": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "custom_explore_fn",
    "dict",
    "distribution",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "ray.tune.sample.Domain",
    "ray.tune.schedulers.pbt.copy",
    "ray.tune.schedulers.pbt.random",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.fill_config": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "callable",
    "dict",
    "isinstance",
    "list",
    "ray.tune.sample.Domain",
    "ray.tune.schedulers.pbt.random",
    "search_space",
    "search_space.items",
    "search_space.sample",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.format_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.format_vars"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.schedulers.pbt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.make_experiment_tag": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ray.tune.suggest.variant_generator.format_vars",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.pbt.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.trial_executor": {
  "data": {
   "shadows": "ray.tune.trial_executor"
  },
  "type": "import"
 },
 "ray.tune.schedulers.pbt.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.schedulers.trial_scheduler": {
  "data": {},
  "type": "module"
 },
 "ray.tune.schedulers.trial_scheduler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.TrialScheduler"
   ]
  },
  "type": "class"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.choose_trial_to_run": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner.get_trials",
    "ray.tune.trial_runner.has_resources",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.debug_string": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.on_trial_add": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.on_trial_complete": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.on_trial_error": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.on_trial_remove": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.FIFOScheduler.on_trial_result": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.tune.schedulers.trial_scheduler.TrialScheduler",
    "ray.tune.trial.Trial",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.schedulers.trial_scheduler.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.choose_trial_to_run": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.debug_string": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.metric": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.on_trial_add": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.on_trial_complete": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.on_trial_error": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.on_trial_remove": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.on_trial_result": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Trial",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.TrialScheduler.set_search_properties": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.schedulers.trial_scheduler.trial_runner": {
  "data": {
   "shadows": "ray.tune.trial_runner"
  },
  "type": "import"
 },
 "ray.tune.scripts": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.scripts.add_note",
    "ray.tune.scripts.cli",
    "ray.tune.scripts.list_experiments",
    "ray.tune.scripts.list_trials",
    "ray.tune.scripts.main"
   ]
  },
  "type": "module"
 },
 "ray.tune.scripts.add_note": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.tune.commands.add_note",
    "ray.tune.scripts.cli",
    "ray.tune.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.scripts.cli": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ray.tune.scripts.click"
   ]
  },
  "type": "function"
 },
 "ray.tune.scripts.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.tune.scripts.commands": {
  "data": {
   "shadows": "ray.tune.commands"
  },
  "type": "import"
 },
 "ray.tune.scripts.list_experiments": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.commands.list_experiments",
    "ray.tune.scripts.cli",
    "ray.tune.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.scripts.list_trials": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.commands.list_trials",
    "ray.tune.scripts.cli",
    "ray.tune.scripts.click",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.scripts.main": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.tune.scripts.cli"
   ]
  },
  "type": "function"
 },
 "ray.tune.session": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.session.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.session.__all__": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "ray.tune.session._session": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.session.checkpoint_dir": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "contextlib.contextmanager",
    "ray.tune.session._session",
    "ray.tune.session.get_session",
    "ray.tune.session.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "ray.tune.session.get_session": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.tune.session._session",
    "ray.tune.session.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.get_trial_dir": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ray.tune.session._session",
    "ray.tune.session.get_session"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.get_trial_id": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ray.tune.session._session",
    "ray.tune.session.get_session"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.get_trial_name": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ray.tune.session._session",
    "ray.tune.session.get_session"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.init": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.session._session",
    "ray.tune.session.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.is_session_enabled": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "ray.tune.session._session"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.tune.session.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.session.make_checkpoint_dir": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.session.report": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ray.tune.session._session",
    "ray.tune.session.get_session"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.save_checkpoint": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.session.shutdown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.tune.session._session"
   ]
  },
  "type": "function"
 },
 "ray.tune.sklearn": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.sklearn.logger",
    "ray.tune.sklearn.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.sklearn.TuneGridSearchCV": {
  "data": {
   "shadows": "tune_sklearn.TuneGridSearchCV"
  },
  "type": "import"
 },
 "ray.tune.sklearn.TuneSearchCV": {
  "data": {
   "shadows": "tune_sklearn.TuneSearchCV"
  },
  "type": "import"
 },
 "ray.tune.sklearn.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.sklearn.logger": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.tune.sklearn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.stopper": {
  "data": {},
  "type": "module"
 },
 "ray.tune.stopper.CombinedStopper": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.stopper.CombinedStopper.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "any",
    "s"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.CombinedStopper.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.CombinedStopper.stop_all": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "any",
    "s",
    "s.stop_all"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.EarlyStopping": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.stopper.EarlyStopping.__call__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.EarlyStopping.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.EarlyStopping.has_plateaued": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.EarlyStopping.stop_all": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "ray.tune.stopper.FunctionStopper": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.stopper.FunctionStopper.__call__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "ray.tune.stopper.FunctionStopper.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.tune.stopper.FunctionStopper.is_valid_function": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "classmethod",
    "hasattr",
    "issubclass",
    "ray.tune.stopper.Stopper",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.FunctionStopper.stop_all": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "ray.tune.stopper.NoopStopper": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.stopper.NoopStopper.__call__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.tune.stopper.NoopStopper.stop_all": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.tune.stopper.Stopper": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "ray.tune.stopper.Stopper.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.Stopper.stop_all": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.TimeoutStopper": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ray.tune.stopper.Stopper"
   ]
  },
  "type": "class"
 },
 "ray.tune.stopper.TimeoutStopper.__call__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "ray.tune.stopper.TimeoutStopper.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "float",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.TimeoutStopper.stop_all": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ray.logger.info",
    "ray.tune.stopper.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.stopper.logger": {
  "data": {
   "shadows": "ray.logger"
  },
  "type": "import"
 },
 "ray.tune.stopper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.stopper.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.stopper.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "ray.tune.suggest": {
  "data": {},
  "type": "module"
 },
 "ray.tune.suggest.AxSearch": {
  "data": {
   "shadows": "ray.tune.suggest.ax.AxSearch"
  },
  "type": "import"
 },
 "ray.tune.suggest.BasicVariantGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.basic_variant.BasicVariantGenerator"
  },
  "type": "import"
 },
 "ray.tune.suggest.BayesOptSearch": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.suggest.DragonflySearch": {
  "data": {
   "shadows": "ray.tune.suggest.dragonfly.DragonflySearch"
  },
  "type": "import"
 },
 "ray.tune.suggest.HyperOptSearch": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.NevergradSearch": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.OptunaSearch": {
  "data": {
   "shadows": "ray.tune.suggest.optuna.OptunaSearch"
  },
  "type": "import"
 },
 "ray.tune.suggest.Repeater": {
  "data": {
   "shadows": "ray.tune.suggest.repeater.Repeater"
  },
  "type": "import"
 },
 "ray.tune.suggest.SearchAlgorithm": {
  "data": {
   "shadows": "ray.tune.suggest.search.SearchAlgorithm"
  },
  "type": "import"
 },
 "ray.tune.suggest.SearchGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.search_generator.SearchGenerator"
  },
  "type": "import"
 },
 "ray.tune.suggest.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.SigOptSearch": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.SkOptSearch": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.TuneBOHB": {
  "data": {
   "shadows": "ray.tune.suggest.bohb.TuneBOHB"
  },
  "type": "import"
 },
 "ray.tune.suggest.ZOOptSearch": {
  "data": {
   "shadows": "ray.tune.suggest.zoopt.ZOOptSearch"
  },
  "type": "import"
 },
 "ray.tune.suggest.__all__": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ray.tune.suggest._mock": {
  "data": {},
  "type": "module"
 },
 "ray.tune.suggest._mock.ConcurrencyLimiter": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.ConcurrencyLimiter"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.SearchGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.search_generator.SearchGenerator"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.suggest._mock._MockSearcher": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ray.tune.suggest.suggestion.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest._mock._MockSearcher.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.tune.suggest._mock._MockSearcher",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSearcher._process_result": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSearcher.on_trial_complete": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSearcher.on_trial_result": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSearcher.suggest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSuggestionAlgorithm": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.tune.suggest.search_generator.SearchGenerator"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest._mock._MockSuggestionAlgorithm.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "ray.tune.suggest._mock._MockSearcher",
    "ray.tune.suggest._mock._MockSuggestionAlgorithm",
    "ray.tune.suggest.suggestion.ConcurrencyLimiter",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSuggestionAlgorithm.live_trials": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest._mock._MockSuggestionAlgorithm.results": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.suggest.ax.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.ax.AxClient": {
  "data": {
   "shadows": "ax.service.ax_client.AxClient"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.AxSearch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.ax.AxSearch.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ax.service.ax_client.AxClient",
    "bool",
    "int",
    "ray.tune.suggest.ax.AxSearch",
    "ray.tune.suggest.ax.ax",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch._process_result": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.convert_search_space": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.LogUniform",
    "ray.tune.sample.Quantized",
    "ray.tune.sample.Uniform",
    "ray.tune.suggest.ax.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.on_trial_complete": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.set_search_properties": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.setup_experiment": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "ax.service.ax_client.AxClient",
    "list",
    "ray.tune.suggest.ax.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.AxSearch.suggest": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.ax.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.LogUniform": {
  "data": {
   "shadows": "ray.tune.sample.LogUniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.Uniform": {
  "data": {
   "shadows": "ray.tune.sample.Uniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.ax": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.suggest.ax.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.suggest.ax.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.ax.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant": {
  "data": {},
  "type": "module"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.tune.suggest.search.SearchAlgorithm"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ray.tune.config_parser.make_parser",
    "ray.tune.suggest.basic_variant.os",
    "ray.tune.suggest.basic_variant.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator._generate_trials": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "range",
    "ray.tune.config_parser.create_trial_from_spec",
    "ray.tune.error.TuneError",
    "ray.tune.suggest.variant_generator.flatten_resolved_vars",
    "ray.tune.suggest.variant_generator.format_vars",
    "ray.tune.suggest.variant_generator.generate_variants",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator.add_configurations": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ray.tune.experiment.Experiment",
    "ray.tune.experiment.convert_to_experiment_list",
    "ray.tune.suggest.basic_variant.itertools",
    "ray.tune.suggest.variant_generator.count_variants",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator.next_trial": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.basic_variant.BasicVariantGenerator.total_samples": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.basic_variant.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.Experiment": {
  "data": {
   "shadows": "ray.tune.experiment.Experiment"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.SearchAlgorithm": {
  "data": {
   "shadows": "ray.tune.suggest.search.SearchAlgorithm"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.convert_to_experiment_list": {
  "data": {
   "shadows": "ray.tune.experiment.convert_to_experiment_list"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.count_variants": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.count_variants"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.create_trial_from_spec": {
  "data": {
   "shadows": "ray.tune.config_parser.create_trial_from_spec"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.flatten_resolved_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.flatten_resolved_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.format_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.format_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.generate_variants": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.generate_variants"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.make_parser": {
  "data": {
   "shadows": "ray.tune.config_parser.make_parser"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.suggest.basic_variant.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "bayes_opt",
    "ray.tune.suggest.bayesopt.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "bayes_opt",
    "bayes_opt.UtilityFunction",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "ray.tune.ExperimentAnalysis",
    "ray.tune.suggest.bayesopt.BayesOptSearch",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch._register_result": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.convert_search_space": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Quantized",
    "ray.tune.suggest.bayesopt.logger",
    "type",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.on_trial_complete": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "bool",
    "len",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.register_analysis": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ray.tune.ExperimentAnalysis",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.restore": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.bayesopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.save": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.bayesopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.set_search_properties": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.setup_optimizer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "bayes_opt.BayesianOptimization"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.BayesOptSearch.suggest": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "max",
    "ray.tune.suggest.Searcher.FINISHED",
    "ray.tune.suggest.bayesopt._dict_hash",
    "ray.tune.suggest.bayesopt.logger",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.ExperimentAnalysis": {
  "data": {
   "shadows": "ray.tune.ExperimentAnalysis"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt._dict_hash": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "ray.tune.suggest.bayesopt.json",
    "ray.tune.utils.flatten_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bayesopt.byo": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.suggest.bayesopt.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.suggest.bayesopt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.bayesopt.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.suggest.bohb.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.bohb.BOHB": {
  "data": {
   "shadows": "hpbandster.optimizers.config_generators.bohb.BOHB"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.ConfigSpace": {
  "data": {
   "shadows": "ConfigSpace"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.LogUniform": {
  "data": {
   "shadows": "ray.tune.sample.LogUniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Normal": {
  "data": {
   "shadows": "ray.tune.sample.Normal"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.TuneBOHB": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.bohb.TuneBOHB.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "hpbandster.optimizers.config_generators.bohb.BOHB",
    "int",
    "ray.tune.suggest.bohb.ConfigSpace",
    "ray.tune.suggest.bohb.TuneBOHB",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.convert_search_space": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.bohb.ConfigSpace",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.convert_search_space.resolve_value": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.LogUniform",
    "ray.tune.sample.Normal",
    "ray.tune.sample.Quantized",
    "ray.tune.sample.Uniform",
    "ray.tune.suggest.bohb.ConfigSpace",
    "ray.tune.suggest.bohb.math",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.on_pause": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.on_trial_complete": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.on_trial_result": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ray.tune.suggest.bohb.logger",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.on_unpause": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.set_search_properties": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.setup_bohb": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "hpbandster.optimizers.config_generators.bohb.BOHB"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.suggest": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "ray.tune.suggest.bohb.copy",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.TuneBOHB.to_wrapper": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ray.tune.suggest.bohb._BOHBJobWrapper",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.Uniform": {
  "data": {
   "shadows": "ray.tune.sample.Uniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb._BOHBJobWrapper": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "ray.tune.suggest.bohb._BOHBJobWrapper.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.bohb.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.suggest.bohb.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.bohb.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.create_searcher": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "SearcherClass",
    "ValueError",
    "list"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_ax_search": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.tune.suggest.ax.AxSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_bayesopt_search": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.tune.suggest.bayesopt.BayesOptSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_bohb_search": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.tune.suggest.bohb.TuneBOHB"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_dragonfly_search": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.tune.suggest.dragonfly.DragonflySearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_hyperopt_search": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.tune.suggest.hyperopt.HyperOptSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_nevergrad_search": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ray.tune.suggest.nevergrad.NevergradSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_optuna_search": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ray.tune.suggest.optuna.OptunaSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_sigopt_search": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.tune.suggest.sigopt.SigOptSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_skopt_search": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.tune.suggest.skopt.SkOptSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_variant_generator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.tune.suggest.basic_variant.BasicVariantGenerator"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.create_searcher._import_zoopt_search": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ray.tune.suggest.zoopt.ZOOptSearch"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dragonfly.opt.blackbox_optimiser.BlackboxOptimiser",
    "ray.tune.suggest.dragonfly.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.dragonfly.BlackboxOptimiser": {
  "data": {
   "shadows": "dragonfly.opt.blackbox_optimiser.BlackboxOptimiser"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.CPFunctionCaller": {
  "data": {
   "shadows": "dragonfly.exd.experiment_caller.CPFunctionCaller"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.CPGAOptimiser": {
  "data": {
   "shadows": "dragonfly.opt.cp_ga_optimiser.CPGAOptimiser"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.CPGPBandit": {
  "data": {
   "shadows": "dragonfly.opt.gp_bandit.CPGPBandit"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.CPRandomOptimiser": {
  "data": {
   "shadows": "dragonfly.opt.random_optimiser.CPRandomOptimiser"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.tune.suggest.suggestion.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "dragonfly.opt.blackbox_optimiser.BlackboxOptimiser",
    "isinstance",
    "ray.tune.suggest.dragonfly.DragonflySearch",
    "ray.tune.suggest.dragonfly.dragonfly",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.convert_search_space": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.util.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Quantized",
    "ray.tune.suggest.dragonfly.logger",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.init_dragonfly": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.on_trial_complete": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.restore": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.dragonfly.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.save": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.dragonfly.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.set_search_properties": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.setup_dragonfly": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "dragonfly.exd.experiment_caller.CPFunctionCaller",
    "dragonfly.exd.experiment_caller.EuclideanFunctionCaller",
    "dragonfly.load_config",
    "dragonfly.opt.blackbox_optimiser.BlackboxOptimiser",
    "dragonfly.opt.cp_ga_optimiser.CPGAOptimiser",
    "dragonfly.opt.gp_bandit.CPGPBandit",
    "dragonfly.opt.gp_bandit.EuclideanGPBandit",
    "dragonfly.opt.random_optimiser.CPRandomOptimiser",
    "dragonfly.opt.random_optimiser.EuclideanRandomOptimiser",
    "function_caller_cls",
    "isinstance",
    "issubclass",
    "optimizer_cls",
    "ray.tune.suggest.dragonfly.inspect",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.DragonflySearch.suggest": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ray.tune.suggest.dragonfly.logger",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.dragonfly.EuclideanFunctionCaller": {
  "data": {
   "shadows": "dragonfly.exd.experiment_caller.EuclideanFunctionCaller"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.EuclideanGPBandit": {
  "data": {
   "shadows": "dragonfly.opt.gp_bandit.EuclideanGPBandit"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.EuclideanRandomOptimiser": {
  "data": {
   "shadows": "dragonfly.opt.random_optimiser.EuclideanRandomOptimiser"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.dragonfly": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.suggest.dragonfly.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.load_config": {
  "data": {
   "shadows": "dragonfly.load_config"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.suggest.dragonfly.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.dragonfly.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ray.tune.suggest.grid_search": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.grid_search"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "hyperopt",
    "ray.tune.suggest.hyperopt.hyperopt_logger",
    "ray.tune.suggest.hyperopt.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.hyperopt.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "float",
    "functools.partial",
    "hyperopt",
    "hyperopt.Domain",
    "hyperopt.Trials",
    "hyperopt.fmin.generate_trials_to_calculate",
    "hyperopt.tpe.suggest",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.random.RandomState",
    "ray.tune.suggest.hyperopt.HyperOptSearch",
    "str",
    "super",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch._get_hyperopt_trial": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch._process_result": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "hyperopt.base.JOB_STATE_DONE",
    "hyperopt.utils.coarse_utcnow",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch._to_hyperopt_result": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.convert_search_space": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.hyperopt.copy",
    "ray.tune.suggest.variant_generator.assign_value",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "resolve_value",
    "staticmethod",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "hyperopt.hp.choice",
    "hyperopt.hp.loguniform",
    "hyperopt.hp.normal",
    "hyperopt.hp.qloguniform",
    "hyperopt.hp.qnormal",
    "hyperopt.hp.quniform",
    "hyperopt.hp.randint",
    "hyperopt.hp.uniform",
    "isinstance",
    "list",
    "numpy.log",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.LogUniform",
    "ray.tune.sample.Normal",
    "ray.tune.sample.Quantized",
    "ray.tune.sample.Uniform",
    "ray.tune.suggest.hyperopt.HyperOptSearch",
    "ray.tune.suggest.hyperopt.logger",
    "resolve_value",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.get_state": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.on_trial_complete": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "bool",
    "hyperopt.base.JOB_STATE_ERROR",
    "hyperopt.utils.coarse_utcnow",
    "ray.tune.error.TuneError",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.on_trial_result": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "hyperopt.utils.coarse_utcnow",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.restore": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "ray.tune.suggest.hyperopt.pickle",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.save": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.hyperopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.set_search_properties": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bool",
    "hyperopt.Domain",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.set_state": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.HyperOptSearch.suggest": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "RuntimeError",
    "hyperopt.base.Ctrl",
    "hyperopt.base.spec_from_misc",
    "hyperopt.pyll.rec_eval",
    "hyperopt.utils.use_obj_for_literal_in_memo",
    "len",
    "ray.tune.suggest.hyperopt.copy",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.hyperopt.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.LogUniform": {
  "data": {
   "shadows": "ray.tune.sample.LogUniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Normal": {
  "data": {
   "shadows": "ray.tune.sample.Normal"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.Uniform": {
  "data": {
   "shadows": "ray.tune.sample.Uniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.assign_value": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.assign_value"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.generate_trials_to_calculate": {
  "data": {
   "shadows": "hyperopt.fmin.generate_trials_to_calculate"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.hpo": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.suggest.hyperopt.hyperopt_logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.suggest.hyperopt.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.tune.suggest.hyperopt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "ray.tune.suggest.hyperopt.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nevergrad",
    "nevergrad.optimization.Optimizer",
    "nevergrad.optimization.base.ConfiguredOptimizer",
    "nevergrad.p.Parameter",
    "ray.tune.suggest.nevergrad.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.nevergrad.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.ConfiguredOptimizer": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.tune.suggest.nevergrad.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.LogUniform": {
  "data": {
   "shadows": "ray.tune.sample.LogUniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "list",
    "nevergrad",
    "nevergrad.optimization.Optimizer",
    "nevergrad.optimization.base.ConfiguredOptimizer",
    "ray.tune.suggest.nevergrad.NevergradSearch",
    "ray.tune.suggest.nevergrad.Parameter",
    "str",
    "super",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch._process_result": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.convert_search_space": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "nevergrad.p.Dict",
    "ray.tune.suggest.nevergrad.Parameter",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nevergrad.p.Choice",
    "nevergrad.p.Log",
    "nevergrad.p.Scalar",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.LogUniform",
    "ray.tune.sample.Quantized",
    "ray.tune.suggest.nevergrad.Parameter",
    "ray.tune.suggest.nevergrad.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.on_trial_complete": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.restore": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.nevergrad.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.save": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.nevergrad.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.set_search_properties": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.setup_nevergrad": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.NevergradSearch.suggest": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "len",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.nevergrad.Optimizer": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.suggest.nevergrad.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Parameter": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.suggest.nevergrad.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.suggest.nevergrad.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.ng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.suggest.nevergrad.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.nevergrad.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "optuna",
    "optuna.samplers.BaseSampler",
    "ray.tune.suggest.optuna._Param",
    "ray.tune.suggest.optuna.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.optuna.BaseSampler": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.suggest.optuna.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.LogUniform": {
  "data": {
   "shadows": "ray.tune.sample.LogUniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.OptunaSearch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.optuna.OptunaSearch.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "optuna",
    "optuna.pruners.NopPruner",
    "optuna.samplers.BaseSampler",
    "optuna.samplers.TPESampler",
    "optuna.storages.InMemoryStorage",
    "ray.tune.suggest.optuna.OptunaSearch",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.convert_search_space": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.LogUniform",
    "ray.tune.sample.Quantized",
    "ray.tune.sample.Uniform",
    "ray.tune.suggest.optuna.logger",
    "ray.tune.suggest.optuna.param",
    "str",
    "type",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.on_trial_complete": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bool",
    "optuna.trial.TrialState.COMPLETE",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.on_trial_result": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ray.tune.result.TRAINING_ITERATION",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.restore": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.optuna.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.save": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.optuna.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.set_search_properties": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.setup_study": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "optuna.study.create_study",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.OptunaSearch.suggest": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "len",
    "optuna.trial.Trial",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.Uniform": {
  "data": {
   "shadows": "ray.tune.sample.Uniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna._Param": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "ray.tune.suggest.optuna._Param.__getattr__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna._Param.__getattr__._inner": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ray.tune.suggest.optuna.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.tune.suggest.optuna.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.ot": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.suggest.optuna.param": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.tune.suggest.optuna.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.optuna.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.suggest.repeater.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.repeater.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.Repeater": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.tune.suggest.suggestion.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.repeater.Repeater.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.suggest.repeater.Repeater",
    "ray.tune.suggest.suggestion.Searcher",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Repeater.get_state": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Repeater.on_trial_complete": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.nanmean",
    "ray.tune.suggest.repeater.logger",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Repeater.set_search_properties": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Repeater.set_state": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Repeater.suggest": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ray.tune.suggest.repeater.TRIAL_INDEX",
    "ray.tune.suggest.repeater._TrialGroup",
    "ray.tune.suggest.repeater.copy",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.TRIAL_INDEX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.suggest.repeater._TrialGroup": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "ray.tune.suggest.repeater._TrialGroup.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "int",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.add": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.count": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.finished_reporting": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.full": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.report": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._TrialGroup.scores": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "float",
    "list",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater._warn_num_samples": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "ray.tune.suggest.repeater.logger",
    "ray.tune.suggest.suggestion.Searcher"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.repeater.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.tune.suggest.repeater.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.repeater.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.suggest.search": {
  "data": {},
  "type": "module"
 },
 "ray.tune.suggest.search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.search.Experiment": {
  "data": {
   "shadows": "ray.tune.experiment.Experiment"
  },
  "type": "import"
 },
 "ray.tune.suggest.search.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.search.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.search.SearchAlgorithm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "ray.tune.suggest.search.SearchAlgorithm.add_configurations": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.experiment.Experiment",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.has_checkpoint": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.is_finished": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.metric": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.next_trial": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.on_trial_complete": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.on_trial_result": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.restore_from_dir": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.save_to_dir": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.set_finished": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.set_search_properties": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.SearchAlgorithm.total_samples": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.suggest.search_generator.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.search_generator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.Experiment": {
  "data": {
   "shadows": "ray.tune.experiment.Experiment"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.SearchAlgorithm": {
  "data": {
   "shadows": "ray.tune.suggest.search.SearchAlgorithm"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.SearchGenerator": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.tune.suggest.search.SearchAlgorithm"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "issubclass",
    "ray.tune.config_parser.make_parser",
    "ray.tune.suggest.suggestion.Searcher",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.add_configurations": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "ray.tune.error.TuneError",
    "ray.tune.experiment.Experiment",
    "ray.tune.experiment.convert_to_experiment_list",
    "ray.tune.suggest.search_generator._warn_on_repeater",
    "ray.tune.suggest.search_generator.logger",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.create_trial_if_possible": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.tune.config_parser.create_trial_from_spec",
    "ray.tune.suggest.search_generator.copy",
    "ray.tune.suggest.search_generator.logger",
    "ray.tune.suggest.suggestion.Searcher.FINISHED",
    "ray.tune.suggest.variant_generator.format_vars",
    "ray.tune.suggest.variant_generator.resolve_nested_dict",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.generate_id",
    "ray.tune.utils.flatten_dict",
    "ray.tune.utils.merge_dicts",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.get_state": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.has_checkpoint": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bool",
    "ray.tune.suggest.search_generator._find_newest_ckpt",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.is_finished": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.metric": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.next_trial": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.on_trial_complete": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.on_trial_result": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.restore_from_dir": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "ray.tune.suggest.search_generator._find_newest_ckpt",
    "ray.tune.suggest.search_generator.logger",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.save_to_dir": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hasattr",
    "ray.tune.suggest.search_generator._atomic_save",
    "ray.tune.suggest.search_generator.logger",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.set_search_properties": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.set_state": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.SearchGenerator.total_samples": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator._atomic_save": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "open",
    "ray.cloudpickle.dump",
    "ray.tune.suggest.search_generator.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator._find_newest_ckpt": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "max",
    "open",
    "ray.cloudpickle.load",
    "ray.tune.suggest.search_generator.glob",
    "ray.tune.suggest.search_generator.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator._warn_num_samples": {
  "data": {
   "shadows": "ray.tune.suggest.repeater._warn_num_samples"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator._warn_on_repeater": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.tune.suggest.repeater._warn_num_samples"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.search_generator.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.convert_to_experiment_list": {
  "data": {
   "shadows": "ray.tune.experiment.convert_to_experiment_list"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.create_trial_from_spec": {
  "data": {
   "shadows": "ray.tune.config_parser.create_trial_from_spec"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.format_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.format_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.suggest.search_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.make_parser": {
  "data": {
   "shadows": "ray.tune.config_parser.make_parser"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.suggest.search_generator.resolve_nested_dict": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.resolve_nested_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.suggest.sigopt.logging",
    "sigopt",
    "sigopt.Connection"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.sigopt.Connection": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.tune.suggest.sigopt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.SigOptSearch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "isinstance",
    "len",
    "ray.tune.suggest.sigopt.Connection",
    "ray.tune.suggest.sigopt.SigOptSearch",
    "ray.tune.suggest.sigopt.os",
    "sigopt",
    "sigopt.Connection",
    "str",
    "super",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.on_trial_complete": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "bool",
    "dict",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.restore": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.sigopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.save": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.sigopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.serialize_metric": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "ray.tune.suggest.sigopt.SigOptSearch",
    "staticmethod",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.serialize_result": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.SigOptSearch.suggest": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "ray.tune.suggest.sigopt.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.sigopt.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.suggest.sigopt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.sigopt.sgo": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.suggest.skopt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.suggest.skopt.logging",
    "skopt"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.skopt.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.SkOptSearch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.skopt.SkOptSearch.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "list",
    "ray.tune.suggest.skopt.SkOptSearch",
    "skopt",
    "skopt.Optimizer",
    "skopt.optimizer.Optimizer",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch._process_result": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.convert_search_space": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.utils.flatten_dict",
    "resolve_value",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.Quantized",
    "ray.tune.suggest.skopt.logger",
    "type",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.on_trial_complete": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.restore": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.skopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.save": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "open",
    "ray.tune.suggest.skopt.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.set_search_properties": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.setup_skopt": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.skopt._validate_warmstart",
    "skopt.Optimizer"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.SkOptSearch.suggest": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "len",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt._validate_warmstart": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.skopt.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.tune.suggest.skopt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.skopt.sko": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.suggest.skopt.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.suggest.suggestion.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ray.tune.suggest.suggestion.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "bool",
    "int",
    "ray.tune.suggest.suggestion.ConcurrencyLimiter",
    "ray.tune.suggest.suggestion.Searcher",
    "set",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.get_state": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ray.tune.suggest.suggestion.copy",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.on_pause": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.on_trial_complete": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bool",
    "len",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.on_unpause": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.set_search_properties": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.set_state": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.ConcurrencyLimiter.suggest": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "len",
    "ray.tune.suggest.suggestion.Searcher",
    "ray.tune.suggest.suggestion.logger",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.Searcher": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "ray.tune.suggest.suggestion.Searcher.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "all",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "ray.tune.suggest.suggestion.logger",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.get_state": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.metric": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.mode": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.on_trial_complete": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.on_trial_result": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.restore": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.restore_from_dir": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "RuntimeError",
    "max",
    "ray.tune.suggest.suggestion.glob",
    "ray.tune.suggest.suggestion.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.save": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.save_to_dir": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.suggest.suggestion.logger",
    "ray.tune.suggest.suggestion.os",
    "ray.util.debug.log_once",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.set_search_properties": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.set_state": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.Searcher.suggest": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.suggestion.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.tune.suggest.suggestion.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.suggestion.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.suggest.variant_generator.logging",
    "ray.tune.suggest.variant_generator.numpy",
    "ray.tune.suggest.variant_generator.random"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.variant_generator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Function": {
  "data": {
   "shadows": "ray.tune.sample.Function"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.RecursiveDependencyError": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.variant_generator.RecursiveDependencyError.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "Exception.__init__",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator._MAX_RESOLUTION_PASSES": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ray.tune.suggest.variant_generator._STANDARD_IMPORTS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.tune.suggest.variant_generator._UnresolvedAccessGuard": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.variant_generator._UnresolvedAccessGuard.__getattribute__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "dict",
    "dict.__getattribute__",
    "isinstance",
    "ray.tune.suggest.variant_generator.RecursiveDependencyError",
    "ray.tune.suggest.variant_generator._UnresolvedAccessGuard",
    "ray.tune.suggest.variant_generator._is_resolved"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._UnresolvedAccessGuard.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ray.tune.suggest.variant_generator._UnresolvedAccessGuard",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._clean_value": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._generate_variants": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator._get_value",
    "ray.tune.suggest.variant_generator._grid_search_generator",
    "ray.tune.suggest.variant_generator._is_resolved",
    "ray.tune.suggest.variant_generator._resolve_domain_vars",
    "ray.tune.suggest.variant_generator.copy",
    "ray.tune.suggest.variant_generator.grid_search",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._get_value": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._grid_search_generator": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "enumerate",
    "increment",
    "len",
    "ray.tune.suggest.variant_generator.assign_value",
    "ray.tune.suggest.variant_generator.copy",
    "typing.Dict",
    "typing.Generator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._grid_search_generator.increment": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "increment",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._is_resolved": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "bool",
    "ray.tune.suggest.variant_generator._try_resolve"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._resolve_domain_vars": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "ray.tune.sample.Domain",
    "ray.tune.suggest.variant_generator._MAX_RESOLUTION_PASSES",
    "ray.tune.suggest.variant_generator._UnresolvedAccessGuard",
    "ray.tune.suggest.variant_generator.assign_value",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._split_resolved_unresolved_values": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "ray.tune.suggest.variant_generator._try_resolve",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._try_resolve": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "bool",
    "dict",
    "eval",
    "isinstance",
    "len",
    "list",
    "ray.tune.TuneError",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Function",
    "ray.tune.suggest.variant_generator._STANDARD_IMPORTS",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator._unresolved_values": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ray.tune.suggest.variant_generator._split_resolved_unresolved_values",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.assign_value": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.count_variants": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int",
    "len",
    "ray.tune.suggest.variant_generator.copy",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.flatten_resolved_vars": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.format_vars": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "ray.tune.suggest.variant_generator._clean_value",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.generate_variants": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ray.tune.suggest.variant_generator._generate_variants",
    "ray.tune.suggest.variant_generator._unresolved_values",
    "typing.Dict",
    "typing.Generator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.grid_search": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.has_unresolved_values": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bool",
    "ray.tune.suggest.variant_generator._unresolved_values",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.suggest.variant_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.parse_spec_vars": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "list",
    "ray.tune.suggest.variant_generator._split_resolved_unresolved_values",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.variant_generator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.tune.suggest.variant_generator.resolve_nested_dict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.suggest.zoopt.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.suggest.zoopt.Categorical": {
  "data": {
   "shadows": "ray.tune.sample.Categorical"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Domain": {
  "data": {
   "shadows": "ray.tune.sample.Domain"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Float": {
  "data": {
   "shadows": "ray.tune.sample.Float"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Integer": {
  "data": {
   "shadows": "ray.tune.sample.Integer"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Quantized": {
  "data": {
   "shadows": "ray.tune.sample.Quantized"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.SRacosTune": {
  "data": {
   "shadows": "zoopt.algos.opt_algorithms.racos.sracos.SRacosTune"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.Searcher"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.Uniform": {
  "data": {
   "shadows": "ray.tune.sample.Uniform"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.ValueType": {
  "data": {
   "shadows": "zoopt.ValueType"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.tune.suggest.Searcher"
   ]
  },
  "type": "class"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "int",
    "ray.tune.suggest.zoopt.ZOOptSearch",
    "ray.tune.suggest.zoopt.zoopt",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.convert_search_space": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.suggest.variant_generator.parse_spec_vars",
    "ray.tune.suggest.zoopt.copy",
    "resolve_value",
    "staticmethod",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.convert_search_space.resolve_value": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "ray.tune.sample.Categorical",
    "ray.tune.sample.Domain",
    "ray.tune.sample.Float",
    "ray.tune.sample.Integer",
    "ray.tune.sample.Quantized",
    "ray.tune.sample.Uniform",
    "type",
    "typing.Tuple",
    "zoopt.ValueType.CONTINUOUS",
    "zoopt.ValueType.DISCRETE",
    "zoopt.ValueType.GRID"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.on_trial_complete": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.restore": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "input",
    "open",
    "ray.cloudpickle.load",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.save": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "open",
    "ray.cloudpickle.dump",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.set_search_properties": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.setup_zoopt": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ray.tune.suggest.zoopt.zoopt",
    "zoopt.algos.opt_algorithms.racos.sracos.SRacosTune"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.ZOOptSearch.suggest": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "ray.tune.suggest.Searcher.FINISHED",
    "ray.tune.suggest.zoopt.ray",
    "ray.tune.utils.util.unflatten_dict",
    "str",
    "typing.Dict",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.tune.suggest.zoopt.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.suggest.zoopt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.parse_spec_vars": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.parse_spec_vars"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.pickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.unflatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.unflatten_dict"
  },
  "type": "import"
 },
 "ray.tune.suggest.zoopt.zoopt": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.sync_client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.sync_client.FunctionBasedClient",
    "ray.tune.sync_client.GS_PREFIX",
    "ray.tune.sync_client.S3_PREFIX",
    "ray.tune.sync_client.logging",
    "ray.tune.sync_client.noop"
   ]
  },
  "type": "module"
 },
 "ray.tune.sync_client.ALLOWED_REMOTE_PREFIXES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.tune.sync_client.CommandBasedClient": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ray.tune.sync_client.SyncClient"
   ]
  },
  "type": "class"
 },
 "ray.tune.sync_client.CommandBasedClient.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ray.tune.sync_client.noop_template"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient._execute": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ray.tune.sync_client.logger",
    "ray.tune.sync_client.subprocess",
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient._validate_sync_string": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.delete": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ray.tune.sync_client.logger",
    "ray.tune.sync_client.subprocess",
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.is_running": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.reset": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ray.tune.sync_client.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.set_logdir": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ray.tune.sync_client.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.sync_down": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.sync_up": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ray.tune.sync_client.CommandBasedClient.wait": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ray.tune.error.TuneError"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.FunctionBasedClient": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ray.tune.sync_client.SyncClient"
   ]
  },
  "type": "class"
 },
 "ray.tune.sync_client.FunctionBasedClient.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.tune.sync_client.noop"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.FunctionBasedClient.delete": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ray.tune.sync_client.FunctionBasedClient.sync_down": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "ray.tune.sync_client.FunctionBasedClient.sync_up": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "ray.tune.sync_client.GS_PREFIX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.sync_client.NOOP": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "ray.tune.sync_client.S3_PREFIX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.sync_client.SyncClient": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "ray.tune.sync_client.SyncClient.delete": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.SyncClient.reset": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "ray.tune.sync_client.SyncClient.sync_down": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.SyncClient.sync_up": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.SyncClient.wait": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "ray.tune.sync_client.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.sync_client.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "ray.tune.sync_client.distutils.spawn": {
  "data": {
   "shadows": "distutils.spawn"
  },
  "type": "import"
 },
 "ray.tune.sync_client.get_cloud_sync_client": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.sync_client.ALLOWED_REMOTE_PREFIXES",
    "ray.tune.sync_client.CommandBasedClient",
    "ray.tune.sync_client.GS_PREFIX",
    "ray.tune.sync_client.S3_PREFIX",
    "ray.tune.sync_client.distutils"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.get_sync_client": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "client_cls",
    "isinstance",
    "ray.tune.sync_client.noop",
    "ray.tune.sync_client.noop_template",
    "ray.tune.sync_client.types",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.sync_client.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ray.tune.sync_client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.sync_client.noop": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.tune.sync_client.noop_template": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.sync_client.quote": {
  "data": {
   "shadows": "shlex.quote"
  },
  "type": "import"
 },
 "ray.tune.sync_client.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.tune.sync_client.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.tune.sync_client.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ray.tune.syncer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.syncer.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.syncer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.tune.syncer.CLOUD_SYNC_PERIOD": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.syncer.CloudSyncer": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ray.tune.syncer.Syncer"
   ]
  },
  "type": "class"
 },
 "ray.tune.syncer.CloudSyncer.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ray.tune.syncer.CloudSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.CloudSyncer.sync_down_if_needed": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ray.tune.syncer.CLOUD_SYNC_PERIOD",
    "ray.tune.syncer.CloudSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.CloudSyncer.sync_up_if_needed": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ray.tune.syncer.CLOUD_SYNC_PERIOD",
    "ray.tune.syncer.CloudSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.CommandBasedClient": {
  "data": {
   "shadows": "ray.tune.sync_client.CommandBasedClient"
  },
  "type": "import"
 },
 "ray.tune.syncer.NODE_SYNC_PERIOD": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.tune.syncer.NOOP": {
  "data": {
   "shadows": "ray.tune.sync_client.NOOP"
  },
  "type": "import"
 },
 "ray.tune.syncer.NodeSyncer": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ray.tune.syncer.Syncer"
   ]
  },
  "type": "class"
 },
 "ray.tune.syncer.NodeSyncer.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ray.services.get_node_ip_address",
    "ray.tune.syncer.NodeSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer._remote_path": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "property",
    "ray.tune.cluster_info.get_ssh_user",
    "ray.tune.syncer._log_sync_warned",
    "ray.tune.syncer.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.has_remote_target": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ray.tune.syncer.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.set_worker_ip": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.sync_down": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ray.tune.syncer.NodeSyncer",
    "ray.tune.syncer.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.sync_down_if_needed": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ray.tune.syncer.NODE_SYNC_PERIOD",
    "ray.tune.syncer.NodeSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.sync_up": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ray.tune.syncer.NodeSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.sync_up_if_needed": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ray.tune.syncer.NODE_SYNC_PERIOD",
    "ray.tune.syncer.NodeSyncer",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.NodeSyncer.sync_up_to_new_location": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ray.tune.syncer.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.SyncConfig": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "ray.tune.syncer.Syncer": {
  "data": {
   "lineno": 116
  },
  "type": "class"
 },
 "ray.tune.syncer.Syncer.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "float",
    "ray.tune.sync_client.NOOP",
    "ray.tune.syncer.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer._remote_path": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.reset": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.sync_down": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.syncer.logger",
    "ray.tune.syncer.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.sync_down_if_needed": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ray.tune.syncer.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.sync_up": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.syncer.logger",
    "ray.tune.syncer.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.sync_up_if_needed": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.tune.syncer.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.validate_hosts": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ray.tune.syncer.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.Syncer.wait": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "ray.tune.syncer._log_sync_warned": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.tune.syncer._syncers": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.tune.syncer.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "ray.tune.syncer.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "ray.tune.syncer.env_integer": {
  "data": {
   "shadows": "ray.tune.utils.util.env_integer"
  },
  "type": "import"
 },
 "ray.tune.syncer.get_cloud_sync_client": {
  "data": {
   "shadows": "ray.tune.sync_client.get_cloud_sync_client"
  },
  "type": "import"
 },
 "ray.tune.syncer.get_cloud_syncer": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ray.tune.sync_client.NOOP",
    "ray.tune.sync_client.get_cloud_sync_client",
    "ray.tune.sync_client.get_sync_client",
    "ray.tune.syncer.CloudSyncer",
    "ray.tune.syncer._syncers"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.get_node_syncer": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "inspect.isclass",
    "issubclass",
    "ray.tune.sync_client.CommandBasedClient",
    "ray.tune.sync_client.NOOP",
    "ray.tune.sync_client.get_sync_client",
    "ray.tune.syncer.NodeSyncer",
    "ray.tune.syncer.Syncer",
    "ray.tune.syncer._syncers",
    "ray.tune.syncer.log_sync_template",
    "sync_function"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.get_ssh_key": {
  "data": {
   "shadows": "ray.tune.cluster_info.get_ssh_key"
  },
  "type": "import"
 },
 "ray.tune.syncer.get_ssh_user": {
  "data": {
   "shadows": "ray.tune.cluster_info.get_ssh_user"
  },
  "type": "import"
 },
 "ray.tune.syncer.get_sync_client": {
  "data": {
   "shadows": "ray.tune.sync_client.get_sync_client"
  },
  "type": "import"
 },
 "ray.tune.syncer.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "ray.tune.syncer.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.syncer.log_sync_template": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.tune.cluster_info.get_ssh_key",
    "ray.tune.syncer._log_sync_warned",
    "ray.tune.syncer.distutils",
    "ray.tune.syncer.logger",
    "ray.util.debug.log_once",
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.tune.syncer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.syncer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.syncer.quote": {
  "data": {
   "shadows": "shlex.quote"
  },
  "type": "import"
 },
 "ray.tune.syncer.services": {
  "data": {
   "shadows": "ray.services"
  },
  "type": "import"
 },
 "ray.tune.syncer.set_sync_periods": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "ray.tune.syncer.CLOUD_SYNC_PERIOD",
    "ray.tune.syncer.NODE_SYNC_PERIOD",
    "ray.tune.syncer.logger",
    "ray.tune.syncer.os",
    "ray.tune.utils.util.env_integer"
   ]
  },
  "type": "function"
 },
 "ray.tune.syncer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.syncer.wait_for_sync": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.tune.syncer._syncers"
   ]
  },
  "type": "function"
 },
 "ray.tune.track": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.track.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.track._deprecation_warning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ray.tune.track.logger",
    "ray.tune.track.warned"
   ]
  },
  "type": "function"
 },
 "ray.tune.track._session": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.tune.track.get_session": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.init": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.log": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.tune.session.report",
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.tune.track.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.track.session": {
  "data": {
   "shadows": "ray.tune.session"
  },
  "type": "import"
 },
 "ray.tune.track.session.TrackSession": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.shutdown": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.trial_dir": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.tune.session.get_trial_dir",
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.trial_id": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.tune.session.get_trial_id",
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.trial_name": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.tune.session.get_trial_name",
    "ray.tune.track._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "ray.tune.track.warned": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.tune.trainable": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.trainable.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.trainable.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.tune.trainable.DONE": {
  "data": {
   "shadows": "ray.tune.result.DONE"
  },
  "type": "import"
 },
 "ray.tune.trainable.EPISODES_THIS_ITER": {
  "data": {
   "shadows": "ray.tune.result.EPISODES_THIS_ITER"
  },
  "type": "import"
 },
 "ray.tune.trainable.EPISODES_TOTAL": {
  "data": {
   "shadows": "ray.tune.result.EPISODES_TOTAL"
  },
  "type": "import"
 },
 "ray.tune.trainable.RESULT_DUPLICATE": {
  "data": {
   "shadows": "ray.tune.result.RESULT_DUPLICATE"
  },
  "type": "import"
 },
 "ray.tune.trainable.SETUP_TIME_THRESHOLD": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "ray.tune.trainable.STDERR_FILE": {
  "data": {
   "shadows": "ray.tune.result.STDERR_FILE"
  },
  "type": "import"
 },
 "ray.tune.trainable.STDOUT_FILE": {
  "data": {
   "shadows": "ray.tune.result.STDOUT_FILE"
  },
  "type": "import"
 },
 "ray.tune.trainable.TIMESTEPS_THIS_ITER": {
  "data": {
   "shadows": "ray.tune.result.TIMESTEPS_THIS_ITER"
  },
  "type": "import"
 },
 "ray.tune.trainable.TIMESTEPS_TOTAL": {
  "data": {
   "shadows": "ray.tune.result.TIMESTEPS_TOTAL"
  },
  "type": "import"
 },
 "ray.tune.trainable.TIME_THIS_ITER_S": {
  "data": {
   "shadows": "ray.tune.result.TIME_THIS_ITER_S"
  },
  "type": "import"
 },
 "ray.tune.trainable.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.trainable.TRIAL_INFO": {
  "data": {
   "shadows": "ray.tune.result.TRIAL_INFO"
  },
  "type": "import"
 },
 "ray.tune.trainable.Tee": {
  "data": {
   "shadows": "ray.tune.utils.util.Tee"
  },
  "type": "import"
 },
 "ray.tune.trainable.Trainable": {
  "data": {
   "lineno": 184
  },
  "type": "class"
 },
 "ray.tune.trainable.Trainable.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ray.tune.result.STDERR_FILE",
    "ray.tune.result.STDOUT_FILE",
    "ray.tune.result.TRIAL_INFO",
    "ray.tune.trainable.SETUP_TIME_THRESHOLD",
    "ray.tune.trainable.copy",
    "ray.tune.trainable.logger",
    "ray.tune.trainable.time",
    "ray.tune.trainable.uuid",
    "ray.tune.utils.UtilMonitor"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._close_logfiles": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ray.tune.trainable.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._create_logger": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "logger_creator",
    "ray.tune.logger.UnifiedLogger",
    "ray.tune.result.DEFAULT_RESULTS_DIR",
    "ray.tune.trainable.ray",
    "ray.tune.trainable.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._export_model": {
  "data": {
   "lineno": 939
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._is_overridden": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "getattr",
    "ray.tune.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._log_result": {
  "data": {
   "lineno": 908
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._open_logfiles": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "contextlib.redirect_stderr",
    "contextlib.redirect_stdout",
    "open",
    "ray.tune.trainable.logging",
    "ray.tune.trainable.os",
    "ray.tune.trainable.ray",
    "ray.tune.trainable.sys",
    "ray.tune.utils.util.Tee"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._restore": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._save": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._setup": {
  "data": {
   "lineno": 882
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._stop": {
  "data": {
   "lineno": 932
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable._train": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.cleanup": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.default_resource_request": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.delete_checkpoint": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ray.tune.trainable.TrainableUtil",
    "ray.tune.trainable.logger",
    "ray.tune.trainable.os",
    "ray.tune.trainable.shutil"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.export_model": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.get_config": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.get_current_ip": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ray.tune.trainable.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.get_state": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ray.tune.trainable.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.iteration": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.load_checkpoint": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.log_result": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.logdir": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "property",
    "ray.tune.trainable.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.reset": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ray.tune.result.STDERR_FILE",
    "ray.tune.result.STDOUT_FILE"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.reset_config": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.resource_help": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.restore": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "open",
    "ray.tune.trainable.logger",
    "ray.tune.trainable.pickle"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.restore_from_object": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ray.tune.trainable.TrainableUtil",
    "ray.tune.trainable.shutil",
    "ray.tune.trainable.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.save": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ray.tune.trainable.TrainableUtil"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.save_checkpoint": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.save_to_object": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ray.tune.trainable.TrainableUtil",
    "ray.tune.trainable.shutil",
    "ray.tune.trainable.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.setup": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.step": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "ray.tune.trainable.logger",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.stop": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.train": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "dict",
    "int",
    "isinstance",
    "ray.tune.result.DONE",
    "ray.tune.result.EPISODES_THIS_ITER",
    "ray.tune.result.EPISODES_TOTAL",
    "ray.tune.result.RESULT_DUPLICATE",
    "ray.tune.result.TIMESTEPS_THIS_ITER",
    "ray.tune.result.TIMESTEPS_TOTAL",
    "ray.tune.result.TIME_THIS_ITER_S",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.trainable.os",
    "ray.tune.trainable.platform",
    "ray.tune.trainable.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.training_iteration": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.trial_id": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.Trainable.trial_name": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "ray.tune.trainable.TrainableUtil.checkpoint_to_object": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "ray.tune.trainable.TrainableUtil",
    "ray.tune.trainable.io",
    "ray.tune.trainable.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.create_from_pickle": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "open",
    "ray.tune.trainable.os",
    "ray.tune.trainable.pickle",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.find_checkpoint_dir": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ray.tune.trainable.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.get_checkpoints_paths": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "pandas.DataFrame",
    "ray.tune.trainable.glob",
    "ray.tune.trainable.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.make_checkpoint_dir": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "open",
    "ray.tune.trainable.os",
    "ray.tune.trainable.shutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.pickle_checkpoint": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "open",
    "ray.tune.trainable.TrainableUtil",
    "ray.tune.trainable.os",
    "ray.tune.trainable.pickle",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.TrainableUtil.process_checkpoint": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "open",
    "ray.tune.trainable.os",
    "ray.tune.trainable.pickle",
    "six.string_types",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.trainable.UnifiedLogger": {
  "data": {
   "shadows": "ray.tune.logger.UnifiedLogger"
  },
  "type": "import"
 },
 "ray.tune.trainable.UtilMonitor": {
  "data": {
   "shadows": "ray.tune.utils.UtilMonitor"
  },
  "type": "import"
 },
 "ray.tune.trainable.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.trainable.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.tune.trainable.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.tune.trainable.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.tune.trainable.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.trainable.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.tune.trainable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.trainable.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.trainable.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ray.tune.trainable.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.tune.trainable.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.tune.trainable.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.trainable.redirect_stderr": {
  "data": {
   "shadows": "contextlib.redirect_stderr"
  },
  "type": "import"
 },
 "ray.tune.trainable.redirect_stdout": {
  "data": {
   "shadows": "contextlib.redirect_stdout"
  },
  "type": "import"
 },
 "ray.tune.trainable.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.trainable.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "ray.tune.trainable.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.tune.trainable.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.tune.trainable.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.trainable.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.tune.trial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.tune.trial.logger",
    "ray.tune.trial.logging",
    "ray.tune.trial.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.trial.Checkpoint": {
  "data": {
   "shadows": "ray.tune.checkpoint_manager.Checkpoint"
  },
  "type": "import"
 },
 "ray.tune.trial.CheckpointManager": {
  "data": {
   "shadows": "ray.tune.checkpoint_manager.CheckpointManager"
  },
  "type": "import"
 },
 "ray.tune.trial.DEBUG_PRINT_INTERVAL": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "ray.tune.trial.DEFAULT_RESULTS_DIR": {
  "data": {
   "shadows": "ray.tune.result.DEFAULT_RESULTS_DIR"
  },
  "type": "import"
 },
 "ray.tune.trial.DONE": {
  "data": {
   "shadows": "ray.tune.result.DONE"
  },
  "type": "import"
 },
 "ray.tune.trial.DurableTrainable": {
  "data": {
   "shadows": "ray.tune.durable_trainable.DurableTrainable"
  },
  "type": "import"
 },
 "ray.tune.trial.ExportFormat": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "ray.tune.trial.ExportFormat.validate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "range",
    "ray.tune.TuneError",
    "ray.tune.trial.ExportFormat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Location": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "ray.tune.trial.Location.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ray.tune.trial.Location.__str__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.tune.trial.platform"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.MAX_LEN_IDENTIFIER": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ray.tune.trial.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "ray.tune.trial.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.tune.trial.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ray.tune.trial.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.trial.TrainableUtil": {
  "data": {
   "shadows": "ray.tune.trainable.TrainableUtil"
  },
  "type": "import"
 },
 "ray.tune.trial.Trial": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "ray.tune.trial.Trial.__getstate__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.tune.checkpoint_manager.Checkpoint.PERSISTENT",
    "ray.tune.resources.resources_to_json",
    "ray.tune.trial.Location",
    "ray.tune.trial.copy",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "ray.tune.checkpoint_manager.CheckpointManager",
    "ray.tune.registry.validate_trainable",
    "ray.tune.resources.Resources",
    "ray.tune.result.DEFAULT_RESULTS_DIR",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.trial.Location",
    "ray.tune.trial.Trial",
    "ray.tune.trial.checkpoint_deleter",
    "ray.tune.trial.os",
    "trial_dirname_creator",
    "trial_name_creator",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.__repr__": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.__setstate__": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "ray.cloudpickle.loads",
    "ray.tune.registry.validate_trainable",
    "ray.tune.resources.json_to_resources",
    "ray.tune.trial.Trial",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.__str__": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "ray.tune.trial.Trial._generate_dirname": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ray.tune.trial.MAX_LEN_IDENTIFIER",
    "ray.tune.utils.date_str",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial._trainable_name": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.checkpoint": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property",
    "ray.tune.checkpoint_manager.Checkpoint",
    "ray.tune.checkpoint_manager.Checkpoint.PERSISTENT",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.clear_checkpoint": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.close_logger": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.generate_id": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "classmethod",
    "ray.tune.trial.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.get_trainable_cls": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ray.tune.registry.get_trainable_cls"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.has_checkpoint": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.init_logger": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ray.tune.logger.UnifiedLogger",
    "ray.tune.trial.create_logdir",
    "ray.tune.trial.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.is_finished": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.is_restoring": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.is_saving": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.node_ip": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.on_checkpoint": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "issubclass",
    "ray.tune.TuneError",
    "ray.tune.checkpoint_manager.Checkpoint.MEMORY",
    "ray.tune.durable_trainable.DurableTrainable",
    "ray.tune.trial.logger",
    "ray.tune.trial.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.on_restore": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.remote_checkpoint_dir": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "property",
    "ray.tune.trial.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.reset": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.set_location": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.set_runner": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ray.tune.trial.checkpoint_deleter"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.set_status": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ray.tune.trial.Trial",
    "ray.tune.trial.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.set_verbose": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.should_checkpoint": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ray.tune.result.DONE",
    "ray.tune.result.TRAINING_ITERATION"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.should_recover": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.should_stop": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "ray.tune.TuneError",
    "ray.tune.result.DONE"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.update_last_result": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "collections.deque",
    "isinstance",
    "len",
    "max",
    "min",
    "numbers.Number",
    "print",
    "ray.tune.logger.pretty_print",
    "ray.tune.trial.DEBUG_PRINT_INTERVAL",
    "ray.tune.trial.Location",
    "ray.tune.trial.time",
    "ray.tune.utils.flatten_dict",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.update_resources": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.resources.Resources",
    "ray.tune.trial.Trial"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.Trial.write_error_log": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "open",
    "ray.tune.trial.os",
    "ray.tune.utils.date_str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.TrialInfo": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "ray.tune.trial.TrialInfo.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.TrialInfo.trial_id": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.TrialInfo.trial_name": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.trial.UnifiedLogger": {
  "data": {
   "shadows": "ray.tune.logger.UnifiedLogger"
  },
  "type": "import"
 },
 "ray.tune.trial.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.tune.trial.checkpoint_deleter": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "ray.tune.trial.checkpoint_deleter.delete": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ray.tune.checkpoint_manager.Checkpoint.PERSISTENT",
    "ray.tune.trainable.TrainableUtil.find_checkpoint_dir",
    "ray.tune.trial.logger",
    "ray.tune.trial.os",
    "ray.tune.trial.shutil"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.trial.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.trial.create_logdir": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ray.tune.trial.logger",
    "ray.tune.trial.os",
    "ray.tune.trial.uuid"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial.date_str": {
  "data": {
   "shadows": "ray.tune.utils.date_str"
  },
  "type": "import"
 },
 "ray.tune.trial.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.tune.trial.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.trial.get_trainable_cls": {
  "data": {
   "shadows": "ray.tune.registry.get_trainable_cls"
  },
  "type": "import"
 },
 "ray.tune.trial.hex_to_binary": {
  "data": {
   "shadows": "ray.utils.hex_to_binary"
  },
  "type": "import"
 },
 "ray.tune.trial.json_to_resources": {
  "data": {
   "shadows": "ray.tune.resources.json_to_resources"
  },
  "type": "import"
 },
 "ray.tune.trial.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.tune.trial.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.trial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.trial.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ray.tune.trial.pretty_print": {
  "data": {
   "shadows": "ray.tune.logger.pretty_print"
  },
  "type": "import"
 },
 "ray.tune.trial.resources_to_json": {
  "data": {
   "shadows": "ray.tune.resources.resources_to_json"
  },
  "type": "import"
 },
 "ray.tune.trial.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ray.tune.trial.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.trial.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.tune.trial.validate_trainable": {
  "data": {
   "shadows": "ray.tune.registry.validate_trainable"
  },
  "type": "import"
 },
 "ray.tune.trial_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.trial_executor.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.trial_executor.Checkpoint": {
  "data": {
   "shadows": "ray.tune.trial.Checkpoint"
  },
  "type": "import"
 },
 "ray.tune.trial_executor.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.trial_executor.TrialExecutor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "ray.tune.trial_executor.TrialExecutor.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.cleanup": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.continue_training": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.debug_string": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.export_trial_if_needed": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.fetch_result": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.get_checkpoints": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.get_next_available_trial": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.get_next_failed_trial": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.get_running_trials": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.has_gpus": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.has_resources": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.on_no_available_trials": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ray.tune.cluster_info.is_ray_cluster",
    "ray.tune.error.TuneError",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.on_step_begin": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.on_step_end": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.pause_trial": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.trial.Checkpoint.MEMORY",
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial_executor.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.reset_trial": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.resource_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.restore": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.resume_trial": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.PAUSED"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.save": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "NotImplementedError",
    "ray.tune.trial.Checkpoint.PERSISTENT"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.set_status": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial.Trial.TERMINATED",
    "ray.tune.trial_executor.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.start_trial": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.stop_trial": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.try_checkpoint_metadata": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.trial.Checkpoint.MEMORY",
    "ray.tune.trial_executor.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TrialExecutor.unpause_trial": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_executor.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.trial_executor.is_ray_cluster": {
  "data": {
   "shadows": "ray.tune.cluster_info.is_ray_cluster"
  },
  "type": "import"
 },
 "ray.tune.trial_executor.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.tune.trial_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.trial_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.trial_runner.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.trial_runner.BasicVariantGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.BasicVariantGenerator"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.Callback": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "ray.tune.trial_runner.Callback.on_step_begin": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_step_end": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_complete": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_fail": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_restore": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_result": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_save": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Callback.on_trial_start": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int",
    "ray.tune.trial.Trial",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.Checkpoint": {
  "data": {
   "shadows": "ray.tune.trial.Checkpoint"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.MAX_DEBUG_TRIALS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ray.tune.trial_runner.NoopStopper": {
  "data": {
   "shadows": "ray.tune.stopper.NoopStopper"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.RESULT_DUPLICATE": {
  "data": {
   "shadows": "ray.tune.result.RESULT_DUPLICATE"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.RayTrialExecutor": {
  "data": {
   "shadows": "ray.tune.ray_trial_executor.RayTrialExecutor"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.SHOULD_CHECKPOINT": {
  "data": {
   "shadows": "ray.tune.result.SHOULD_CHECKPOINT"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.TIME_THIS_ITER_S": {
  "data": {
   "shadows": "ray.tune.result.TIME_THIS_ITER_S"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.TrialRunner": {
  "data": {
   "lineno": 254
  },
  "type": "class"
 },
 "ray.tune.trial_runner.TrialRunner.__getstate__": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datetime.datetime.fromtimestamp",
    "float",
    "isinstance",
    "ray.tune.ray_trial_executor.RayTrialExecutor",
    "ray.tune.schedulers.FIFOScheduler",
    "ray.tune.stopper.NoopStopper",
    "ray.tune.suggest.BasicVariantGenerator",
    "ray.tune.syncer.get_cloud_syncer",
    "ray.tune.trial_runner.TrialRunner",
    "ray.tune.trial_runner._CallbackList",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.os",
    "ray.tune.trial_runner.time",
    "ray.tune.utils.env_integer",
    "ray.tune.web_server.TuneServer",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.__setstate__": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "ray.tune.web_server.TuneServer"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._checkpoint_trial_if_needed": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "ray.tune.trial.Checkpoint.PERSISTENT"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._execute_action": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.schedulers.TrialScheduler.CONTINUE",
    "ray.tune.schedulers.TrialScheduler.PAUSE",
    "ray.tune.schedulers.TrialScheduler.STOP"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._get_next_trial": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "all",
    "any",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial_runner.logger",
    "ray.tune.utils.warn_if_slow"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_events": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "ray.services.get_node_ip_address",
    "ray.tune.trial_runner.logger",
    "ray.tune.utils.warn_if_slow",
    "ray.util.debug.log_once"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_stop_requests": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_trial": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.result.RESULT_DUPLICATE",
    "ray.tune.result.SHOULD_CHECKPOINT",
    "ray.tune.result.TIME_THIS_ITER_S",
    "ray.tune.schedulers.TrialScheduler.STOP",
    "ray.tune.trial_runner.TrialRunner",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.traceback",
    "ray.tune.utils.flatten_dict",
    "ray.tune.utils.warn_if_slow"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_trial_failure": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.RUNNING"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_trial_restore": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial_runner.TrialRunner",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.traceback"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._process_trial_save": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.trial_runner.TrialRunner",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.traceback"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._requeue_trial": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.utils.warn_if_slow"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._stop_experiment_if_needed": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.ERROR"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._try_recover": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._update_trial_queue": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._validate_result_metrics": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "filter",
    "int",
    "isinstance",
    "len",
    "list",
    "ray.tune.trial_runner.os",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner._validate_resume": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "ray.tune.trial_runner.click",
    "ray.tune.trial_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.add_trial": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ray.tune.utils.warn_if_slow"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.checkpoint": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "list",
    "open",
    "ray.tune.trial_runner._TuneFunctionEncoder",
    "ray.tune.trial_runner.json",
    "ray.tune.trial_runner.os",
    "ray.tune.trial_runner.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.checkpoint_exists": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "any",
    "classmethod",
    "ray.tune.trial_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.cleanup_trials": {
  "data": {
   "lineno": 1070
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.debug_string": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "list",
    "ray.tune.progress_reporter.trial_progress_str",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.get_trial": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.get_trials": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.has_resources": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.is_finished": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.request_stop_experiment": {
  "data": {
   "lineno": 1029
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.request_stop_trial": {
  "data": {
   "lineno": 1026
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.resume": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "open",
    "ray.tune.trial.Trial",
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial_runner._TuneFunctionDecoder",
    "ray.tune.trial_runner._find_newest_ckpt",
    "ray.tune.trial_runner.json",
    "ray.tune.trial_runner.logger",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.resumed": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.scheduler_alg": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.step": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.TuneError",
    "ray.tune.trial_runner.logger",
    "ray.tune.utils.warn_if_slow",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialRunner.stop_trial": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.trial.Trial.ERROR",
    "ray.tune.trial.Trial.PAUSED",
    "ray.tune.trial.Trial.PENDING",
    "ray.tune.trial.Trial.RUNNING",
    "ray.tune.trial.Trial.TERMINATED",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.traceback"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.TrialScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.TrialScheduler"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.TuneServer": {
  "data": {
   "shadows": "ray.tune.web_server.TuneServer"
  },
  "type": "import"
 },
 "ray.tune.trial_runner._CallbackList": {
  "data": {
   "lineno": 215
  },
  "type": "class"
 },
 "ray.tune.trial_runner._CallbackList.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ray.tune.trial_runner.Callback",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_step_begin": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_step_end": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_complete": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_fail": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_restore": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_result": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_save": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "ray.tune.trial_runner._CallbackList.on_trial_start": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "ray.tune.trial_runner._TuneFunctionDecoder": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.tune.trial_runner.json"
   ]
  },
  "type": "class"
 },
 "ray.tune.trial_runner._TuneFunctionDecoder.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.tune.trial_runner.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner._TuneFunctionDecoder._from_cloudpickle": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ray.cloudpickle.loads",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner._TuneFunctionDecoder.object_hook": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.tune.trial_runner._TuneFunctionEncoder": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.tune.trial_runner.json"
   ]
  },
  "type": "class"
 },
 "ray.tune.trial_runner._TuneFunctionEncoder._to_cloudpickle": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner._TuneFunctionEncoder.default": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "ray.tune.trial_runner._TuneFunctionEncoder",
    "ray.tune.trial_runner.logger",
    "ray.tune.trial_runner.types",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner._find_newest_ckpt": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "max",
    "ray.tune.trial_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.trial_runner.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.env_integer": {
  "data": {
   "shadows": "ray.tune.utils.env_integer"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.get_cloud_syncer": {
  "data": {
   "shadows": "ray.tune.syncer.get_cloud_syncer"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.get_node_ip_address": {
  "data": {
   "shadows": "ray.services.get_node_ip_address"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.hex_to_binary": {
  "data": {
   "shadows": "ray.utils.hex_to_binary"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "ray.tune.trial_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.trial_progress_str": {
  "data": {
   "shadows": "ray.tune.progress_reporter.trial_progress_str"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ray.tune.trial_runner.warn_if_slow": {
  "data": {
   "shadows": "ray.tune.utils.warn_if_slow"
  },
  "type": "import"
 },
 "ray.tune.tune": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "get_ipython",
    "ray.tune.tune.class_name",
    "ray.tune.tune.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.tune.BasicVariantGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.BasicVariantGenerator"
  },
  "type": "import"
 },
 "ray.tune.tune.CLIReporter": {
  "data": {
   "shadows": "ray.tune.progress_reporter.CLIReporter"
  },
  "type": "import"
 },
 "ray.tune.tune.Experiment": {
  "data": {
   "shadows": "ray.tune.experiment.Experiment"
  },
  "type": "import"
 },
 "ray.tune.tune.ExperimentAnalysis": {
  "data": {
   "shadows": "ray.tune.analysis.ExperimentAnalysis"
  },
  "type": "import"
 },
 "ray.tune.tune.FIFOScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.FIFOScheduler"
  },
  "type": "import"
 },
 "ray.tune.tune.IS_NOTEBOOK": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.tune.tune.JupyterNotebookReporter": {
  "data": {
   "shadows": "ray.tune.progress_reporter.JupyterNotebookReporter"
  },
  "type": "import"
 },
 "ray.tune.tune.RayTrialExecutor": {
  "data": {
   "shadows": "ray.tune.ray_trial_executor.RayTrialExecutor"
  },
  "type": "import"
 },
 "ray.tune.tune.SearchGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.SearchGenerator"
  },
  "type": "import"
 },
 "ray.tune.tune.Searcher": {
  "data": {
   "shadows": "ray.tune.suggest.suggestion.Searcher"
  },
  "type": "import"
 },
 "ray.tune.tune.SyncConfig": {
  "data": {
   "shadows": "ray.tune.syncer.SyncConfig"
  },
  "type": "import"
 },
 "ray.tune.tune.Trainable": {
  "data": {
   "shadows": "ray.tune.trainable.Trainable"
  },
  "type": "import"
 },
 "ray.tune.tune.Trial": {
  "data": {
   "shadows": "ray.tune.trial.Trial"
  },
  "type": "import"
 },
 "ray.tune.tune.TrialRunner": {
  "data": {
   "shadows": "ray.tune.trial_runner.TrialRunner"
  },
  "type": "import"
 },
 "ray.tune.tune.TuneError": {
  "data": {
   "shadows": "ray.tune.error.TuneError"
  },
  "type": "import"
 },
 "ray.tune.tune._check_default_resources_override": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "ray.tune.registry.get_trainable_cls",
    "ray.tune.trainable.Trainable.default_resource_request.__code__",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.tune._report_progress": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "ray.tune.tune.class_name": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.tune.convert_to_experiment_list": {
  "data": {
   "shadows": "ray.tune.experiment.convert_to_experiment_list"
  },
  "type": "import"
 },
 "ray.tune.tune.get_trainable_cls": {
  "data": {
   "shadows": "ray.tune.registry.get_trainable_cls"
  },
  "type": "import"
 },
 "ray.tune.tune.has_unresolved_values": {
  "data": {
   "shadows": "ray.tune.suggest.variant_generator.has_unresolved_values"
  },
  "type": "import"
 },
 "ray.tune.tune.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.tune.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.tune.run": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "bool",
    "dict",
    "enumerate",
    "isinstance",
    "issubclass",
    "list",
    "ray.tune.analysis.ExperimentAnalysis",
    "ray.tune.error.TuneError",
    "ray.tune.experiment.Experiment",
    "ray.tune.progress_reporter.CLIReporter",
    "ray.tune.progress_reporter.JupyterNotebookReporter",
    "ray.tune.ray_trial_executor.RayTrialExecutor",
    "ray.tune.schedulers.FIFOScheduler",
    "ray.tune.suggest.BasicVariantGenerator",
    "ray.tune.suggest.SearchGenerator",
    "ray.tune.suggest.suggestion.Searcher",
    "ray.tune.suggest.variant_generator.has_unresolved_values",
    "ray.tune.syncer.SyncConfig",
    "ray.tune.syncer.set_sync_periods",
    "ray.tune.syncer.wait_for_sync",
    "ray.tune.trial.Trial.TERMINATED",
    "ray.tune.trial_runner.TrialRunner",
    "ray.tune.tune.IS_NOTEBOOK",
    "ray.tune.tune._check_default_resources_override",
    "ray.tune.tune._report_progress",
    "ray.tune.tune.logger",
    "ray.tune.tune.sys",
    "ray.tune.tune.time",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.tune.tune.run_experiments": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ray.tune.experiment.convert_to_experiment_list",
    "ray.tune.tune.run"
   ]
  },
  "type": "function"
 },
 "ray.tune.tune.set_sync_periods": {
  "data": {
   "shadows": "ray.tune.syncer.set_sync_periods"
  },
  "type": "import"
 },
 "ray.tune.tune.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.tune.tune.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.tune.wait_for_sync": {
  "data": {
   "shadows": "ray.tune.syncer.wait_for_sync"
  },
  "type": "import"
 },
 "ray.tune.uniform": {
  "data": {
   "shadows": "ray.tune.sample.uniform"
  },
  "type": "import"
 },
 "ray.tune.utils": {
  "data": {},
  "type": "module"
 },
 "ray.tune.utils.UtilMonitor": {
  "data": {
   "shadows": "ray.tune.utils.util.UtilMonitor"
  },
  "type": "import"
 },
 "ray.tune.utils.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.tune.utils.date_str": {
  "data": {
   "shadows": "ray.tune.utils.util.date_str"
  },
  "type": "import"
 },
 "ray.tune.utils.deep_update": {
  "data": {
   "shadows": "ray.tune.utils.util.deep_update"
  },
  "type": "import"
 },
 "ray.tune.utils.detect_checkpoint_function": {
  "data": {
   "shadows": "ray.tune.utils.util.detect_checkpoint_function"
  },
  "type": "import"
 },
 "ray.tune.utils.detect_config_single": {
  "data": {
   "shadows": "ray.tune.utils.util.detect_config_single"
  },
  "type": "import"
 },
 "ray.tune.utils.detect_reporter": {
  "data": {
   "shadows": "ray.tune.utils.util.detect_reporter"
  },
  "type": "import"
 },
 "ray.tune.utils.diagnose_serialization": {
  "data": {
   "shadows": "ray.tune.utils.util.diagnose_serialization"
  },
  "type": "import"
 },
 "ray.tune.utils.env_integer": {
  "data": {
   "shadows": "ray.tune.utils.util.env_integer"
  },
  "type": "import"
 },
 "ray.tune.utils.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.util.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.utils.get_pinned_object": {
  "data": {
   "shadows": "ray.tune.utils.util.get_pinned_object"
  },
  "type": "import"
 },
 "ray.tune.utils.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.util.merge_dicts"
  },
  "type": "import"
 },
 "ray.tune.utils.mock": {
  "data": {
   "symbols_in_volume": [
    "ray.tune.utils.mock.os"
   ]
  },
  "type": "module"
 },
 "ray.tune.utils.mock.DurableTrainable": {
  "data": {
   "shadows": "ray.tune.DurableTrainable"
  },
  "type": "import"
 },
 "ray.tune.utils.mock.LOCAL_DELETE_TEMPLATE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.tune.utils.mock.LOCAL_SYNC_TEMPLATE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.utils.mock.MOCK_REMOTE_DIR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ray.tune.utils.mock.MockDurableTrainer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ray.rllib.agents.mock._MockTrainer",
    "ray.tune.DurableTrainable"
   ]
  },
  "type": "class"
 },
 "ray.tune.utils.mock.MockDurableTrainer.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.rllib.agents.mock._MockTrainer.__init__",
    "ray.tune.DurableTrainable.__init__"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.mock.MockDurableTrainer._create_storage_client": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ray.tune.utils.mock.mock_storage_client"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.mock.MockNodeSyncer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ray.tune.syncer.NodeSyncer"
   ]
  },
  "type": "class"
 },
 "ray.tune.utils.mock.MockNodeSyncer._remote_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property",
    "ray.tune.utils.mock.MOCK_REMOTE_DIR",
    "ray.tune.utils.mock.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.mock.MockNodeSyncer.has_remote_target": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "ray.tune.utils.mock.MockRemoteTrainer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.rllib.agents.mock._MockTrainer"
   ]
  },
  "type": "class"
 },
 "ray.tune.utils.mock.MockRemoteTrainer.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.tune.utils.mock.MOCK_REMOTE_DIR",
    "ray.tune.utils.mock.MockRemoteTrainer",
    "ray.tune.utils.mock.os",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.mock.NodeSyncer": {
  "data": {
   "shadows": "ray.tune.syncer.NodeSyncer"
  },
  "type": "import"
 },
 "ray.tune.utils.mock._MockTrainer": {
  "data": {
   "shadows": "ray.rllib.agents.mock._MockTrainer"
  },
  "type": "import"
 },
 "ray.tune.utils.mock.get_sync_client": {
  "data": {
   "shadows": "ray.tune.sync_client.get_sync_client"
  },
  "type": "import"
 },
 "ray.tune.utils.mock.mock_storage_client": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.tune.sync_client.get_sync_client",
    "ray.tune.utils.mock.LOCAL_DELETE_TEMPLATE",
    "ray.tune.utils.mock.LOCAL_SYNC_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.mock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.utils.mock.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.tune.utils.pin_in_object_store": {
  "data": {
   "shadows": "ray.tune.utils.util.pin_in_object_store"
  },
  "type": "import"
 },
 "ray.tune.utils.unflattened_lookup": {
  "data": {
   "shadows": "ray.tune.utils.util.unflattened_lookup"
  },
  "type": "import"
 },
 "ray.tune.utils.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "print",
    "ray.tune.utils.util.X",
    "ray.tune.utils.util.get_pinned_object",
    "ray.tune.utils.util.logging",
    "ray.tune.utils.util.pin_in_object_store",
    "ray.tune.utils.util.ray",
    "ray.tune.utils.util.result",
    "ray.tune.utils.util.time"
   ]
  },
  "type": "module"
 },
 "ray.tune.utils.util.GPUtil": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "ray.tune.utils.util.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "ray.tune.utils.util.PINNED_OBJECT_PREFIX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.tune.utils.util.START_OF_TIME": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ray.tune.utils.util.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "ray.tune.utils.util.TRAINING_ITERATION": {
  "data": {
   "shadows": "ray.tune.result.TRAINING_ITERATION"
  },
  "type": "import"
 },
 "ray.tune.utils.util.Tee": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.tune.utils.util.Tee.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "ray.tune.utils.util.Tee.flush": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "ray.tune.utils.util.Tee.write": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "ray.tune.utils.util.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ray.tune.utils.util.UtilMonitor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "ray.tune.utils.util.UtilMonitor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "ray.tune.utils.util.GPUtil",
    "ray.tune.utils.util.UtilMonitor",
    "ray.tune.utils.util.logger",
    "ray.tune.utils.util.psutil",
    "ray.tune.utils.util.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.UtilMonitor._read_utilization": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "float",
    "getattr",
    "ray.tune.utils.util.GPUtil",
    "ray.tune.utils.util.logger",
    "ray.tune.utils.util.psutil",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.UtilMonitor.get_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "ray.tune.utils.util.copy"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.UtilMonitor.run": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ray.tune.utils.util.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.UtilMonitor.stop": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "ray.tune.utils.util.X": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "ray.tune.utils.util._from_pinnable": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "ray.tune.utils.util._pinned_objects": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.tune.utils.util._to_pinnable": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.check_serializability": {
  "data": {
   "shadows": "ray.tune.registry.check_serializability"
  },
  "type": "import"
 },
 "ray.tune.utils.util.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.tune.utils.util.date_str": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datetime.datetime.today"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ray.tune.utils.util.deep_update": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.tune.utils.util.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.tune.utils.util.detect_checkpoint_function": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "ray.tune.utils.util.inspect",
    "ray.tune.utils.util.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.detect_config_single": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.utils.util.inspect",
    "ray.tune.utils.util.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.detect_reporter": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "Exception",
    "ray.tune.utils.util.inspect",
    "ray.tune.utils.util.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.diagnose_serialization": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Exception",
    "check_variables",
    "len",
    "print",
    "ray.tune.registry.register_trainable",
    "ray.tune.utils.util.inspect",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.diagnose_serialization.check_variables": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "Exception",
    "printer",
    "ray.tune.registry.check_serializability",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.env_integer": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "ray.tune.utils.util.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.flatten_dict": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dict",
    "isinstance",
    "ray.tune.utils.util.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.get_pinned_object": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ray.tune.utils.util.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.tune.utils.util.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.tune.utils.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.utils.util.merge_dicts": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ray.tune.utils.util.copy",
    "ray.tune.utils.util.deep_update"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.utils.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.utils.util.pin_in_object_store": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ray.tune.utils.util._pinned_objects",
    "ray.tune.utils.util.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.tune.utils.util.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.tune.utils.util.register_trainable": {
  "data": {
   "shadows": "ray.tune.registry.register_trainable"
  },
  "type": "import"
 },
 "ray.tune.utils.util.result": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "ray.tune.utils.util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.tune.utils.util.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.tune.utils.util.unflatten_dict": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.unflattened_lookup": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "KeyError",
    "collections.Mapping",
    "collections.Sequence",
    "collections.deque",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.validate_save_restore": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "range",
    "ray.tune.result.TRAINING_ITERATION",
    "ray.tune.utils.util.ray"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.wait_for_gpu": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "range",
    "ray.tune.utils.util.GPUtil",
    "ray.tune.utils.util.logger",
    "ray.tune.utils.util.ray",
    "ray.tune.utils.util.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.warn_if_slow": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "ray.tune.utils.util.warn_if_slow.__enter__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.tune.utils.util.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.warn_if_slow.__exit__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.tune.utils.util.START_OF_TIME",
    "ray.tune.utils.util.logger",
    "ray.tune.utils.util.time"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.util.warn_if_slow.__init__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.tune.utils.validate_save_restore": {
  "data": {
   "shadows": "ray.tune.utils.util.validate_save_restore"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.tune.utils.visual_utils.logger",
    "ray.tune.utils.visual_utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.utils.visual_utils._parse_configs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "open",
    "ray.tune.utils.flatten_dict",
    "ray.tune.utils.visual_utils.json",
    "ray.tune.utils.visual_utils.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.visual_utils._parse_results": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "open",
    "ray.tune.utils.flatten_dict",
    "ray.tune.utils.visual_utils.json",
    "ray.tune.utils.visual_utils.logger"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.visual_utils._resolve": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "os.path.join",
    "ray.tune.utils.visual_utils._parse_configs",
    "ray.tune.utils.visual_utils._parse_results"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.visual_utils.flatten_dict": {
  "data": {
   "shadows": "ray.tune.utils.flatten_dict"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.generate_plotly_dim_dict": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.argwhere",
    "pandas.api.types.is_numeric_dtype",
    "pandas.api.types.is_string_dtype",
    "range"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.visual_utils.is_numeric_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_numeric_dtype"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.is_string_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_string_dtype"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.load_results_to_df": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "ray.tune.utils.visual_utils._resolve",
    "ray.tune.utils.visual_utils.os"
   ]
  },
  "type": "function"
 },
 "ray.tune.utils.visual_utils.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.tune.utils.visual_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.osp": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "ray.tune.utils.visual_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ray.tune.utils.wait_for_gpu": {
  "data": {
   "shadows": "ray.tune.utils.util.wait_for_gpu"
  },
  "type": "import"
 },
 "ray.tune.utils.warn_if_slow": {
  "data": {
   "shadows": "ray.tune.utils.util.warn_if_slow"
  },
  "type": "import"
 },
 "ray.tune.web_server": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.tune.web_server.logger",
    "ray.tune.web_server.logging"
   ]
  },
  "type": "module"
 },
 "ray.tune.web_server.BasicVariantGenerator": {
  "data": {
   "shadows": "ray.tune.suggest.BasicVariantGenerator"
  },
  "type": "import"
 },
 "ray.tune.web_server.HTTPServer": {
  "data": {
   "shadows": "http.server.HTTPServer"
  },
  "type": "import"
 },
 "ray.tune.web_server.RunnerHandler": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "http.server.SimpleHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "ray.tune.web_server.RunnerHandler.Handler._add_trials": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ray.tune.suggest.BasicVariantGenerator"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler._do_header": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler._get_trial_by_url": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "list",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler._trial_info": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ray.cloudpickle.dumps",
    "ray.utils.binary_to_hex"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler.do_GET": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.tune.TuneError",
    "ray.tune.web_server.json",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler.do_HEAD": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler.do_POST": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "int",
    "ray.tune.web_server.json"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.RunnerHandler.Handler.do_PUT": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.tune.TuneError",
    "ray.tune.web_server.json",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.SimpleHTTPRequestHandler": {
  "data": {
   "shadows": "http.server.SimpleHTTPRequestHandler"
  },
  "type": "import"
 },
 "ray.tune.web_server.TuneClient": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "ray.tune.web_server.TuneClient.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient._deserialize": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient._load_trial_info": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ray.cloudpickle.loads",
    "ray.utils.hex_to_binary"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.add_trial": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.tune.web_server.requests",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.get_all_trials": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.tune.web_server.requests",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.get_trial": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ray.tune.web_server.requests",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.server_address": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.server_port": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.stop_experiment": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ray.tune.web_server.requests",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneClient.stop_trial": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ray.tune.web_server.requests",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneError": {
  "data": {
   "shadows": "ray.tune.TuneError"
  },
  "type": "import"
 },
 "ray.tune.web_server.TuneServer": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ray.tune.web_server.threading"
   ]
  },
  "type": "class"
 },
 "ray.tune.web_server.TuneServer.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "http.server.HTTPServer",
    "ray.tune.web_server.RunnerHandler",
    "ray.tune.web_server.logger",
    "ray.tune.web_server.threading"
   ]
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneServer.run": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "ray.tune.web_server.TuneServer.shutdown": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "ray.tune.web_server.binary_to_hex": {
  "data": {
   "shadows": "ray.utils.binary_to_hex"
  },
  "type": "import"
 },
 "ray.tune.web_server.cloudpickle": {
  "data": {
   "shadows": "ray.cloudpickle"
  },
  "type": "import"
 },
 "ray.tune.web_server.hex_to_binary": {
  "data": {
   "shadows": "ray.utils.hex_to_binary"
  },
  "type": "import"
 },
 "ray.tune.web_server.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.tune.web_server.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.tune.web_server.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.tune.web_server.requests": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.tune.web_server.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.tune.web_server.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "ray.tune.web_server.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "ray.tune.with_parameters": {
  "data": {
   "shadows": "ray.tune.function_runner.with_parameters"
  },
  "type": "import"
 },
 "ray.util": {
  "data": {},
  "type": "module"
 },
 "ray.util.ActorPool": {
  "data": {
   "shadows": "ray.util.actor_pool.ActorPool"
  },
  "type": "import"
 },
 "ray.util.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.accelerators": {
  "data": {},
  "type": "module"
 },
 "ray.util.accelerators.NVIDIA_TESLA_K80": {
  "data": {
   "shadows": "ray.util.accelerators.accelerators.NVIDIA_TESLA_K80"
  },
  "type": "import"
 },
 "ray.util.accelerators.NVIDIA_TESLA_P100": {
  "data": {
   "shadows": "ray.util.accelerators.accelerators.NVIDIA_TESLA_P100"
  },
  "type": "import"
 },
 "ray.util.accelerators.NVIDIA_TESLA_P4": {
  "data": {
   "shadows": "ray.util.accelerators.accelerators.NVIDIA_TESLA_P4"
  },
  "type": "import"
 },
 "ray.util.accelerators.NVIDIA_TESLA_T4": {
  "data": {
   "shadows": "ray.util.accelerators.accelerators.NVIDIA_TESLA_T4"
  },
  "type": "import"
 },
 "ray.util.accelerators.NVIDIA_TESLA_V100": {
  "data": {
   "shadows": "ray.util.accelerators.accelerators.NVIDIA_TESLA_V100"
  },
  "type": "import"
 },
 "ray.util.accelerators.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.util.accelerators.accelerators": {
  "data": {},
  "type": "module"
 },
 "ray.util.accelerators.accelerators.NVIDIA_TESLA_K80": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.util.accelerators.accelerators.NVIDIA_TESLA_P100": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ray.util.accelerators.accelerators.NVIDIA_TESLA_P4": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.util.accelerators.accelerators.NVIDIA_TESLA_T4": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.util.accelerators.accelerators.NVIDIA_TESLA_V100": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ray.util.actor_pool": {
  "data": {},
  "type": "module"
 },
 "ray.util.actor_pool.ActorPool": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.util.actor_pool.ActorPool.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool._return_actor": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.get_next": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "StopIteration",
    "TimeoutError",
    "ValueError",
    "ray.util.actor_pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.get_next_unordered": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "StopIteration",
    "TimeoutError",
    "list",
    "max",
    "ray.util.actor_pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.has_next": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.map": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.map_unordered": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.util.actor_pool.ActorPool.submit": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "ray.util.actor_pool.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.dask": {
  "data": {},
  "type": "module"
 },
 "ray.util.dask.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "ray.util.dask.callbacks.CBS",
    "tuple"
   ]
  },
  "type": "module"
 },
 "ray.util.dask.callbacks.CBS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks.CBS_DONT_DROP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks.CB_FIELDS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks.Callback": {
  "data": {
   "shadows": "dask.callbacks.Callback"
  },
  "type": "import"
 },
 "ray.util.dask.callbacks.RayCallback": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks.RayCallbacks": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ray.util.dask.callbacks.RayDaskCallback": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dask.callbacks.Callback",
    "set"
   ]
  },
  "type": "class"
 },
 "ray.util.dask.callbacks.RayDaskCallback.__enter__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ray.util.dask.callbacks.add_ray_callbacks",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.RayDaskCallback.__exit__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.RayDaskCallback.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.util.dask.callbacks.CBS",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.RayDaskCallback._ray_callback": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "getattr",
    "property",
    "ray.util.dask.callbacks.CB_FIELDS",
    "ray.util.dask.callbacks.RayCallback"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.RayDaskCallback.register": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.RayDaskCallback.unregister": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.add_ray_callbacks": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "ray.util.dask.callbacks.add_ray_callbacks.__enter__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.add_ray_callbacks.__exit__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray.util.dask.callbacks.RayDaskCallback"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.add_ray_callbacks.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ray.util.dask.callbacks.RayDaskCallback",
    "ray.util.dask.callbacks.normalize_ray_callback"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "ray.util.dask.callbacks.local_ray_callbacks": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ray.util.dask.callbacks.RayDaskCallback",
    "ray.util.dask.callbacks.contextlib",
    "set"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ray.util.dask.callbacks.normalize_ray_callback": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "ray.util.dask.callbacks.RayCallback",
    "ray.util.dask.callbacks.RayDaskCallback"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.callbacks.unpack_ray_callbacks": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "ray.util.dask.callbacks.CBS",
    "ray.util.dask.callbacks.CBS_DONT_DROP",
    "ray.util.dask.callbacks.RayCallbacks",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.common": {
  "data": {},
  "type": "module"
 },
 "ray.util.dask.common.Iterator": {
  "data": {
   "shadows": "collections.abc.Iterator"
  },
  "type": "import"
 },
 "ray.util.dask.common.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ray.util.dask.common.apply": {
  "data": {
   "shadows": "dask.compatibility.apply"
  },
  "type": "import"
 },
 "ray.util.dask.common.dataclass_fields": {
  "data": {
   "shadows": "dask.compatibility.dataclass_fields"
  },
  "type": "import"
 },
 "ray.util.dask.common.get_sync": {
  "data": {
   "shadows": "dask.core.get"
  },
  "type": "import"
 },
 "ray.util.dask.common.getitem": {
  "data": {
   "shadows": "operator.getitem"
  },
  "type": "import"
 },
 "ray.util.dask.common.is_dataclass": {
  "data": {
   "shadows": "dask.compatibility.is_dataclass"
  },
  "type": "import"
 },
 "ray.util.dask.common.quote": {
  "data": {
   "shadows": "dask.base.quote"
  },
  "type": "import"
 },
 "ray.util.dask.common.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.dask.common.unpack_object_refs": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_unpack",
    "ray.util.dask.common.uuid",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.common.unpack_object_refs._unpack": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_unpack",
    "collections.OrderedDict",
    "collections.abc.Iterator",
    "dask.compatibility.apply",
    "dask.compatibility.dataclass_fields",
    "dask.compatibility.is_dataclass",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "list",
    "operator.getitem",
    "ray.util.dask.common.ray",
    "ray.util.dask.common.uuid",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.common.unpack_object_refs.repack": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dask.base.quote",
    "dask.core.get"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.common.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler": {
  "data": {
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "ray.util.dask.scheduler.threading"
   ]
  },
  "type": "module"
 },
 "ray.util.dask.scheduler.CPU_COUNT": {
  "data": {
   "shadows": "dask.system.CPU_COUNT"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler._apply_async_wrapper": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "ray.util.dask.scheduler._apply_async_wrapper.wrapper": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "apply_async",
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler._execute_task": {
  "data": {
   "shadows": "dask.core._execute_task"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler._rayify_task": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "cb",
    "dask.core.ishashable",
    "dask.core.istask",
    "isinstance",
    "list",
    "unpack_object_refs"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler._rayify_task_wrapper": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "BaseException",
    "dask.threaded.pack_exception",
    "dumps",
    "get_id",
    "id",
    "loads",
    "ray.util.dask.scheduler._rayify_task"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler._thread_get_id": {
  "data": {
   "shadows": "dask.threaded._thread_get_id"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.apply_sync": {
  "data": {
   "shadows": "dask.local.apply_sync"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.dask_task_wrapper": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "cb",
    "dask.core._execute_task",
    "func",
    "ray.util.dask.scheduler.ray",
    "repack",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler.default_pool": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.util.dask.scheduler.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.get_async": {
  "data": {
   "shadows": "dask.local.get_async"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.ishashable": {
  "data": {
   "shadows": "dask.core.ishashable"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.istask": {
  "data": {
   "shadows": "dask.core.istask"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.main_thread": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.util.dask.scheduler.pack_exception": {
  "data": {
   "shadows": "dask.threaded.pack_exception"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.pools": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.util.dask.scheduler.pools_lock": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ray.util.dask.scheduler.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.dask.scheduler.ray_dask_get": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cb",
    "dask.local.get_async",
    "dask.system.CPU_COUNT",
    "dask.threaded._thread_get_id",
    "dask.threaded.pack_exception",
    "len",
    "list",
    "local_ray_callbacks",
    "multiprocessing.pool.ThreadPool",
    "ray.util.dask.scheduler._apply_async_wrapper",
    "ray.util.dask.scheduler.atexit",
    "ray.util.dask.scheduler.default_pool",
    "ray.util.dask.scheduler.main_thread",
    "ray.util.dask.scheduler.pools",
    "ray.util.dask.scheduler.pools_lock",
    "ray.util.dask.scheduler.ray_get_unpack",
    "ray.util.dask.scheduler.threading",
    "set",
    "unpack_ray_callbacks"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler.ray_dask_get_sync": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "cb",
    "dask.local.apply_sync",
    "dask.local.get_async",
    "local_ray_callbacks",
    "ray.util.dask.scheduler._apply_async_wrapper",
    "ray.util.dask.scheduler._rayify_task_wrapper",
    "ray.util.dask.scheduler.ray_get_unpack",
    "unpack_ray_callbacks"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler.ray_get_unpack": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "list",
    "ray.util.dask.scheduler.ray",
    "repack",
    "tuple",
    "unpack_object_refs"
   ]
  },
  "type": "function"
 },
 "ray.util.dask.scheduler.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.util.debug": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "ray.util.debug._disabled": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.util.debug._last_logged": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.util.debug._logged": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.util.debug._periodic_log": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.util.debug.disable_log_once_globally": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.util.debug._disabled"
   ]
  },
  "type": "function"
 },
 "ray.util.debug.enable_periodic_logging": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.util.debug._periodic_log"
   ]
  },
  "type": "function"
 },
 "ray.util.debug.log_once": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ray.util.debug._disabled",
    "ray.util.debug._last_logged",
    "ray.util.debug._logged",
    "ray.util.debug._periodic_log",
    "ray.util.debug.time"
   ]
  },
  "type": "function"
 },
 "ray.util.debug.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.disable_log_once_globally": {
  "data": {
   "shadows": "ray.util.debug.disable_log_once_globally"
  },
  "type": "import"
 },
 "ray.util.enable_periodic_logging": {
  "data": {
   "shadows": "ray.util.debug.enable_periodic_logging"
  },
  "type": "import"
 },
 "ray.util.iter": {
  "data": {
   "shadows": "ray.util.iter"
  },
  "type": "import"
 },
 "ray.util.iter_metrics": {
  "data": {},
  "type": "module"
 },
 "ray.util.iter_metrics.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.util.iter_metrics.MetricsContext": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "ray.util.iter_metrics.MetricsContext.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "ray.util.iter_metrics.collections",
    "ray.util.timer._Timer"
   ]
  },
  "type": "function"
 },
 "ray.util.iter_metrics.MetricsContext.restore": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ray.util.iter_metrics.MetricsContext.save": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ray.util.iter_metrics.SharedMetrics": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "ray.util.iter_metrics.SharedMetrics.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ray.util.iter_metrics.MetricsContext",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.util.iter_metrics.SharedMetrics.get": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ray.util.iter_metrics.SharedMetrics.set": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "ray.util.iter_metrics._Timer": {
  "data": {
   "shadows": "ray.util.timer._Timer"
  },
  "type": "import"
 },
 "ray.util.iter_metrics.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.util.joblib": {
  "data": {},
  "type": "module"
 },
 "ray.util.joblib.RayBackend": {
  "data": {
   "shadows": "ray.util.joblib.ray_backend.RayBackend"
  },
  "type": "import"
 },
 "ray.util.joblib.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.util.joblib.ray_backend": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.joblib.ray_backend.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.joblib.ray_backend.MultiprocessingBackend": {
  "data": {
   "shadows": "joblib._parallel_backends.MultiprocessingBackend"
  },
  "type": "import"
 },
 "ray.util.joblib.ray_backend.PicklingPool": {
  "data": {
   "shadows": "joblib.pool.PicklingPool"
  },
  "type": "import"
 },
 "ray.util.joblib.ray_backend.Pool": {
  "data": {
   "shadows": "ray.util.multiprocessing.pool.Pool"
  },
  "type": "import"
 },
 "ray.util.joblib.ray_backend.RayBackend": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "joblib._parallel_backends.MultiprocessingBackend"
   ]
  },
  "type": "class"
 },
 "ray.util.joblib.ray_backend.RayBackend.configure": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "joblib.pool.PicklingPool.__bases__",
    "ray.util.joblib.ray_backend.RayBackend",
    "ray.util.joblib.ray_backend.logger",
    "ray.util.joblib.ray_backend.os",
    "ray.util.joblib.ray_backend.ray",
    "ray.util.multiprocessing.pool.Pool",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.joblib.ray_backend.RayBackend.effective_n_jobs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "ray.util.joblib.ray_backend.RayBackend",
    "ray.util.joblib.ray_backend.ray",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.joblib.ray_backend.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.joblib.ray_backend.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.joblib.ray_backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.joblib.ray_backend.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.joblib.register_parallel_backend": {
  "data": {
   "shadows": "joblib.parallel.register_parallel_backend"
  },
  "type": "import"
 },
 "ray.util.joblib.register_ray": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ImportError",
    "joblib.parallel.register_parallel_backend",
    "ray.util.joblib.ray_backend.RayBackend"
   ]
  },
  "type": "function"
 },
 "ray.util.log_once": {
  "data": {
   "shadows": "ray.util.debug.log_once"
  },
  "type": "import"
 },
 "ray.util.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.metrics.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.metrics.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "ray.util.metrics.Count": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ray.util.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "ray.util.metrics.Count.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ray._raylet.Count",
    "str",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.CythonCount": {
  "data": {
   "shadows": "ray._raylet.Count"
  },
  "type": "import"
 },
 "ray.util.metrics.CythonGauge": {
  "data": {
   "shadows": "ray._raylet.Gauge"
  },
  "type": "import"
 },
 "ray.util.metrics.CythonHistogram": {
  "data": {
   "shadows": "ray._raylet.Histogram"
  },
  "type": "import"
 },
 "ray.util.metrics.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.util.metrics.Gauge": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ray.util.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "ray.util.metrics.Gauge.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ray._raylet.Gauge",
    "str",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Histogram": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.util.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "ray.util.metrics.Histogram.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "ray._raylet.Histogram",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Histogram.info": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.util.metrics.Metric": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "ray.util.metrics.Metric.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "str",
    "tuple",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Metric.info": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Metric.record": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "float"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Metric.set_default_tags": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "ray.util.metrics.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.util.metrics.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ray.util.metrics.__all__": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "ray.util.metrics.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.util.metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.multiprocessing": {
  "data": {},
  "type": "module"
 },
 "ray.util.multiprocessing.TimeoutError": {
  "data": {
   "shadows": "multiprocessing.TimeoutError"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.util.multiprocessing.pool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.multiprocessing.pool.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.multiprocessing.pool.AsyncResult": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.AsyncResult.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.ResultThread"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.AsyncResult.get": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "multiprocessing.TimeoutError",
    "ray.util.multiprocessing.pool.PoolTaskError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.AsyncResult.ready": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.AsyncResult.successful": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.AsyncResult.wait": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.IMapIterator": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.IMapIterator.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hasattr",
    "iter",
    "len",
    "range",
    "ray.util.multiprocessing.pool.ResultThread",
    "ray.util.multiprocessing.pool.collections",
    "ray.util.multiprocessing.pool.div_round_up"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.IMapIterator.__iter__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.IMapIterator.__next__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.IMapIterator._submit_next_chunk": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.IMapIterator.next": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.OrderedIMapIterator": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.IMapIterator"
   ]
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.OrderedIMapIterator.next": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "max",
    "ray.util.multiprocessing.pool.time"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool": {
  "data": {
   "lineno": 308
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.Pool.__enter__": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.__exit__": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "initializer",
    "ray.util.multiprocessing.pool.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._calculate_chunksize": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "divmod",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._check_running": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._chunk_and_run": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "iter",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._init_ray": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "ray.util.multiprocessing.pool.RAY_ADDRESS_ENV",
    "ray.util.multiprocessing.pool.logger",
    "ray.util.multiprocessing.pool.os",
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._map_async": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "func",
    "ray.util.multiprocessing.pool.AsyncResult"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._new_actor_entry": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.PoolActor"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._random_actor_index": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "len",
    "ray.util.multiprocessing.pool.random"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._run_batch": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._start_actor_pool": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "range",
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._stop_actor": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._submit_chunk": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "StopIteration",
    "func",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool._wait_for_stopping_actors": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "float",
    "len",
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.apply": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.apply_async": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "func",
    "ray.util.multiprocessing.pool.AsyncResult"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.close": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.imap": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "func",
    "ray.util.multiprocessing.pool.OrderedIMapIterator"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.imap_unordered": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "func",
    "ray.util.multiprocessing.pool.UnorderedIMapIterator"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.join": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.map": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.map_async": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.starmap": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.starmap_async": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.Pool.terminate": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.PoolActor": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.PoolActor.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "initializer"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.PoolActor.ping": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.PoolActor.run_batch": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "Exception",
    "func",
    "ray.util.multiprocessing.pool.PoolTaskError"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.PoolTaskError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.PoolTaskError.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.RAY_ADDRESS_ENV": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.util.multiprocessing.pool.ResultThread": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.threading"
   ]
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.ResultThread.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "ray.util.multiprocessing.pool.queue",
    "ray.util.multiprocessing.pool.threading"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread._add_object_ref": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.add_object_ref": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.got_error": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.next_ready_index": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "multiprocessing.TimeoutError",
    "ray.util.multiprocessing.pool.queue"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.result": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.results": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.ResultThread.run": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "ray.util.multiprocessing.pool.copy",
    "ray.util.multiprocessing.pool.queue",
    "ray.util.multiprocessing.pool.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.TimeoutError": {
  "data": {
   "shadows": "multiprocessing.TimeoutError"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.UnorderedIMapIterator": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ray.util.multiprocessing.pool.IMapIterator"
   ]
  },
  "type": "class"
 },
 "ray.util.multiprocessing.pool.UnorderedIMapIterator.next": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "StopIteration",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.div_round_up": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "ray.util.multiprocessing.pool.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.util.multiprocessing.pool.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.util.multiprocessing.pool.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.placement_group": {
  "data": {
   "shadows": "ray.util.placement_group.placement_group"
  },
  "type": "import"
 },
 "ray.util.placement_group.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ray.util.placement_group.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "ray.util.placement_group.ObjectRef": {
  "data": {
   "shadows": "ray._raylet.ObjectRef"
  },
  "type": "import"
 },
 "ray.util.placement_group.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.util.placement_group.PlacementGroup": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "ray.util.placement_group.PlacementGroup.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "id",
    "ray._raylet.PlacementGroupID"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup._fill_bundle_cache_if_needed": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "list",
    "ray.util.placement_group.ray",
    "ray.util.placement_group.time"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup._get_none_zero_resource": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup.bundle_count": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup.bundle_specs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup.empty": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray._raylet.PlacementGroupID.nil",
    "ray.util.placement_group.PlacementGroup",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroup.ready": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "ray._raylet.ObjectRef",
    "ray.util.placement_group._export_bundle_reservation_check_method_if_needed",
    "ray.util.placement_group.bundle_reservation_check"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.PlacementGroupID": {
  "data": {
   "shadows": "ray._raylet.PlacementGroupID"
  },
  "type": "import"
 },
 "ray.util.placement_group._export_bundle_reservation_check_method_if_needed": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.util.placement_group.bundle_reservation_check"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group._export_bundle_reservation_check_method_if_needed.bundle_reservation_check_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.util.placement_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.bundle_reservation_check": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.placement_group.check_placement_group_index": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "ray.util.placement_group.PlacementGroup",
    "ray.util.placement_group.placement_group"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.get_current_placement_group": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ray.util.placement_group.PlacementGroup",
    "ray.util.placement_group.ray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.placement_group": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "float",
    "isinstance",
    "len",
    "list",
    "ray.util.placement_group.PlacementGroup",
    "ray.util.placement_group.ray",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.placement_group_table": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "ray.util.placement_group.PlacementGroup",
    "ray.util.placement_group.placement_group",
    "ray.util.placement_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.placement_group.remove_placement_group": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ray.util.placement_group.PlacementGroup",
    "ray.util.placement_group.placement_group",
    "ray.util.placement_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.placement_group.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.placement_group_table": {
  "data": {
   "shadows": "ray.util.placement_group.placement_group_table"
  },
  "type": "import"
 },
 "ray.util.queue": {
  "data": {},
  "type": "module"
 },
 "ray.util.queue.Empty": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.util.queue.Full": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ray.util.queue.Queue": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "ray.util.queue.Queue.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.util.queue.Queue.__len__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "ray.util.queue.Queue.empty": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ray.util.queue.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.queue.Queue.full": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.util.queue.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.queue.Queue.get": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "ray.util.queue.Empty",
    "ray.util.queue.asyncio",
    "ray.util.queue.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.queue.Queue.get_nowait": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "ray.util.queue.Queue.put": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "ray.util.queue.Full",
    "ray.util.queue.asyncio",
    "ray.util.queue.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.queue.Queue.put_nowait": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "ray.util.queue.Queue.qsize": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ray.util.queue.Queue.size": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.util.queue.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.util.queue.Empty",
    "ray.util.queue.Full",
    "ray.util.queue.asyncio",
    "ray.util.queue.ray"
   ]
  },
  "type": "class"
 },
 "ray.util.queue._QueueActor.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.util.queue.asyncio"
   ]
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor.empty": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor.full": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor.get_nowait": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor.put_nowait": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "ray.util.queue._QueueActor.qsize": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "ray.util.queue.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "ray.util.queue.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.remove_placement_group": {
  "data": {
   "shadows": "ray.util.placement_group.remove_placement_group"
  },
  "type": "import"
 },
 "ray.util.sgd": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.PyTorchTrainer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.TFTrainer": {
  "data": {
   "shadows": "ray.util.sgd.tf.TFTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.util.sgd.data": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.data.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.data.Dataset": {
  "data": {
   "shadows": "ray.util.sgd.data.dataset.Dataset"
  },
  "type": "import"
 },
 "ray.util.sgd.data.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.util.sgd.data.dataset": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.data.dataset.Dataset": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "ray.util.sgd.data.dataset.Dataset.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "ray.util.iter.ParallelIterator",
    "ray.util.iter.from_iterators"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.dataset.Dataset.get_shard": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "ray.util.sgd.data.dataset.Dataset.set_num_shards": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.dataset.ParallelIterator": {
  "data": {
   "shadows": "ray.util.iter.ParallelIterator"
  },
  "type": "import"
 },
 "ray.util.sgd.data.dataset.from_iterators": {
  "data": {
   "shadows": "ray.util.iter.from_iterators"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.data.examples.mlp_identity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.data.examples.mlp_identity.main",
    "ray.util.sgd.data.examples.mlp_identity.ray"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.data.examples.mlp_identity.Dataset": {
  "data": {
   "shadows": "ray.util.sgd.data.dataset.Dataset"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples.mlp_identity.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples.mlp_identity.Net": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.data.examples.mlp_identity.Net.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.util.sgd.data.examples.mlp_identity.Net",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.Net.forward": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.torch_trainer.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples.mlp_identity.dataset_creator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "range",
    "ray.util.sgd.data.dataset.Dataset",
    "ray.util.sgd.data.examples.mlp_identity.to_mat"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.main": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float",
    "model",
    "print",
    "range",
    "ray.util.sgd.data.examples.mlp_identity.dataset_creator",
    "ray.util.sgd.data.examples.mlp_identity.model_creator",
    "ray.util.sgd.data.examples.mlp_identity.optimizer_creator",
    "ray.util.sgd.data.examples.mlp_identity.to_mat",
    "ray.util.sgd.data.examples.mlp_identity.torch",
    "ray.util.sgd.torch.torch_trainer.TorchTrainer"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.model_creator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ray.util.sgd.data.examples.mlp_identity.Net"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples.mlp_identity.optimizer_creator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.util.sgd.data.examples.mlp_identity.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.data.examples.mlp_identity.to_mat": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.util.sgd.data.examples.mlp_identity.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.data.examples.mlp_identity.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.data.logger": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.util.sgd.data.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.tf": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.tf.TFTrainable": {
  "data": {
   "shadows": "ray.util.sgd.tf.tf_trainer.TFTrainable"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.TFTrainer": {
  "data": {
   "shadows": "ray.util.sgd.tf.tf_trainer.TFTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.util.sgd.tf.tf_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.tf.tf_runner.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.find_free_port": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ray.util.sgd.utils.find_free_port"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.get_node_ip": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_runner.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.get_state": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.set_state": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.setup": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.setup_distributed": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "MultiWorkerMirroredStrategy",
    "len",
    "ray.util.sgd.tf.tf_runner._try_import_strategy",
    "ray.util.sgd.tf.tf_runner.json",
    "ray.util.sgd.tf.tf_runner.logger",
    "ray.util.sgd.tf.tf_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.shutdown": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.step": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.TFRunner.validate": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "ray.util.sgd.tf.tf_runner.logger",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner._try_import_strategy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_runner.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.util.sgd.tf.tf_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.ray._private.services": {
  "data": {
   "shadows": "ray._private.services"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_runner.utils": {
  "data": {
   "shadows": "ray.util.sgd.utils"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.tf.tf_trainer.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.tf.tf_trainer.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.TFRunner": {
  "data": {
   "shadows": "ray.util.sgd.tf.tf_runner.TFRunner"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.cleanup": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.default_resource_request": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "ray.tune.resources.Resources"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.load_checkpoint": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.save_checkpoint": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_trainer.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.setup": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_trainer.TFTrainer"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainable.step": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "range",
    "ray.util.sgd.tf.tf_runner.TFRunner",
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer._get_model_from_state": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.get_model": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.restore": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "open",
    "ray.util.sgd.tf.tf_trainer.pickle",
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.save": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "open",
    "ray.util.sgd.tf.tf_trainer.pickle",
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.shutdown": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.train": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.TFTrainer.validate": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ray.util.sgd.tf.tf_trainer.logger",
    "ray.util.sgd.tf.tf_trainer.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.tf.tf_trainer.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.util.sgd.tf.tf_trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ray.util.sgd.tf.tf_trainer.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.util.sgd.torch.logger",
    "ray.util.sgd.torch.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.BaseTorchTrainable": {
  "data": {
   "shadows": "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.CreatorOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.training_operator.CreatorOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.torch_trainer.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.training_operator.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants": {
  "data": {
   "symbols_in_volume": [
    "ray.ray_constants.env_integer",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_MANUAL"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.NUM_STEPS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.SCHEDULER_STEP": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.SCHEDULER_STEP_MANUAL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.USE_FP16": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.VALID_SCHEDULER_STEP": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.constants.env_integer": {
  "data": {
   "shadows": "ray.ray_constants.env_integer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.distributed_torch_runner.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.TorchRunner"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.get_device_ids": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.set_local_rank": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.setup_address": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ray.util.sgd.torch.utils.setup_address"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.setup_operator": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.setup_process_group": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.logger",
    "ray.util.sgd.torch.utils.setup_process_group"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.shutdown": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner",
    "super",
    "torch.distributed.destroy_process_group"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner.train_epoch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hasattr",
    "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner._set_cuda_device": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "ray.util.sgd.torch.distributed_torch_runner._init_cuda_context",
    "ray.util.sgd.torch.distributed_torch_runner.logger",
    "ray.util.sgd.torch.distributed_torch_runner.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner._try_reserve_and_set_resources": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeError",
    "ray.util.sgd.torch.distributed_torch_runner.os",
    "ray.util.sgd.torch.distributed_torch_runner.reserve_resources",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner.get_device_ids": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner.is_actor": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner.shutdown": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cpu_actor",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cuda_actor",
    "ray.util.sgd.torch.distributed_torch_runner.ray",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.TorchRunner": {
  "data": {
   "shadows": "ray.util.sgd.torch.torch_runner.TorchRunner"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner._DummyActor": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "ray.util.sgd.torch.distributed_torch_runner._DummyActor.cuda_devices": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner._DummyActor.get": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner._dummy_cpu_actor": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.distributed_torch_runner._dummy_cuda_actor": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.distributed_torch_runner._init_cuda_context": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.util.sgd.torch.distributed_torch_runner.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.clear_dummy_actor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Exception",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cpu_actor",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cuda_actor",
    "ray.util.sgd.torch.distributed_torch_runner.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.distributed_torch_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.reserve_resources": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "isinstance",
    "range",
    "ray.util.sgd.torch.distributed_torch_runner._DummyActor",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cpu_actor",
    "ray.util.sgd.torch.distributed_torch_runner._dummy_cuda_actor",
    "ray.util.sgd.torch.distributed_torch_runner.logger",
    "ray.util.sgd.torch.distributed_torch_runner.os",
    "ray.util.sgd.torch.distributed_torch_runner.ray",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.distributed_torch_runner.setup_address": {
  "data": {
   "shadows": "ray.util.sgd.torch.utils.setup_address"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.setup_process_group": {
  "data": {
   "shadows": "ray.util.sgd.torch.utils.setup_process_group"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.distributed_torch_runner.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "int",
    "print",
    "ray.util.sgd.torch.TorchTrainer",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.CifarTrainingOperator",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.argparse",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.info",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.initialization_hook",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.num_cpus",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.parser",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.pbar",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.ray",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.trainer1",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.val_stats",
    "ray.util.sgd.utils.BATCH_SIZE",
    "str",
    "tqdm.trange"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.BATCH_SIZE": {
  "data": {
   "shadows": "ray.util.sgd.utils.BATCH_SIZE"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.CIFAR10": {
  "data": {
   "shadows": "torchvision.datasets.CIFAR10"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.CifarTrainingOperator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.CifarTrainingOperator.setup": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "filelock.FileLock",
    "list",
    "range",
    "ray.util.sgd.torch.TrainingOperator",
    "ray.util.sgd.torch.examples.cifar_pytorch_example.torch",
    "ray.util.sgd.torch.resnet.ResNet18",
    "ray.util.sgd.utils.BATCH_SIZE",
    "ray.util.sgd.utils.override",
    "torch.nn.CrossEntropyLoss",
    "torch.utils.data.DataLoader",
    "torch.utils.data.Subset",
    "torchvision.datasets.CIFAR10",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.RandomCrop",
    "torchvision.transforms.RandomHorizontalFlip",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.ResNet18": {
  "data": {
   "shadows": "ray.util.sgd.torch.resnet.ResNet18"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.Subset": {
  "data": {
   "shadows": "torch.utils.data.Subset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.info": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.initialization_hook": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.cifar_pytorch_example.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.num_cpus": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.override": {
  "data": {
   "shadows": "ray.util.sgd.utils.override"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.parser": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.pbar": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.trainer1": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.trange": {
  "data": {
   "shadows": "tqdm.trange"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_example.val_stats": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "numpy.random.uniform",
    "print",
    "ray.tune.CLIReporter",
    "ray.tune.choice",
    "ray.tune.run",
    "ray.tune.schedulers.PopulationBasedTraining",
    "ray.util.sgd.torch.TorchTrainer.as_trainable",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.CifarTrainingOperator",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.TorchTrainable",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.analysis",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.argparse",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.initialization_hook",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.parser",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.pbt_scheduler",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.ray",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.reporter",
    "ray.util.sgd.utils.BATCH_SIZE",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.BATCH_SIZE": {
  "data": {
   "shadows": "ray.util.sgd.utils.BATCH_SIZE"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.CIFAR10": {
  "data": {
   "shadows": "torchvision.datasets.CIFAR10"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.CifarTrainingOperator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.CifarTrainingOperator.setup": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "filelock.FileLock",
    "list",
    "range",
    "ray.util.sgd.torch.TrainingOperator",
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.torch",
    "ray.util.sgd.torch.resnet.ResNet18",
    "ray.util.sgd.utils.BATCH_SIZE",
    "ray.util.sgd.utils.override",
    "torch.nn.CrossEntropyLoss",
    "torch.utils.data.DataLoader",
    "torch.utils.data.Subset",
    "torchvision.datasets.CIFAR10",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.RandomCrop",
    "torchvision.transforms.RandomHorizontalFlip",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.ResNet18": {
  "data": {
   "shadows": "ray.util.sgd.torch.resnet.ResNet18"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.Subset": {
  "data": {
   "shadows": "torch.utils.data.Subset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.TorchTrainable": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.analysis": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.initialization_hook": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.cifar_pytorch_pbt.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.override": {
  "data": {
   "shadows": "ray.util.sgd.utils.override"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.parser": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.pbt_scheduler": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.reporter": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.cifar_pytorch_pbt.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "print",
    "ray.util.sgd.torch.examples.dcgan.MODEL_PATH",
    "ray.util.sgd.torch.examples.dcgan.argparse",
    "ray.util.sgd.torch.examples.dcgan.args",
    "ray.util.sgd.torch.examples.dcgan.os",
    "ray.util.sgd.torch.examples.dcgan.parser",
    "ray.util.sgd.torch.examples.dcgan.ray",
    "ray.util.sgd.torch.examples.dcgan.train_example",
    "ray.util.sgd.torch.examples.dcgan.trainer",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.dcgan.Discriminator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.dcgan.Discriminator.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.dcgan.Discriminator",
    "super",
    "torch.nn.BatchNorm2d",
    "torch.nn.Conv2d",
    "torch.nn.LeakyReLU",
    "torch.nn.Sequential",
    "torch.nn.Sigmoid"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.Discriminator.forward": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.GANOperator": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.dcgan.GANOperator.inception_score": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "get_pred",
    "len",
    "numpy.exp",
    "numpy.mean",
    "numpy.std",
    "numpy.zeros",
    "range",
    "ray.util.sgd.torch.examples.dcgan.torch",
    "scipy.stats.entropy",
    "torch.autograd.Variable",
    "torch.nn.Upsample"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.GANOperator.inception_score.get_pred": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "torch.nn.functional.softmax",
    "up"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.GANOperator.setup": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "filelock.FileLock",
    "list",
    "range",
    "ray.util.sgd.torch.examples.dcgan.Discriminator",
    "ray.util.sgd.torch.examples.dcgan.Generator",
    "ray.util.sgd.torch.examples.dcgan.LeNet",
    "ray.util.sgd.torch.examples.dcgan.torch",
    "ray.util.sgd.torch.examples.dcgan.weights_init",
    "torch.nn.BCELoss",
    "torch.optim.Adam",
    "torchvision.datasets.MNIST",
    "torchvision.transforms.Compose",
    "torchvision.transforms.Normalize",
    "torchvision.transforms.Resize",
    "torchvision.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.GANOperator.train_batch": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "discriminator",
    "generator",
    "generator.zero_grad",
    "ray.util.sgd.torch.TrainingOperator",
    "ray.util.sgd.torch.examples.dcgan.torch",
    "ray.util.sgd.utils.override"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.Generator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.dcgan.Generator.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.dcgan.Generator",
    "super",
    "torch.nn.BatchNorm2d",
    "torch.nn.ConvTranspose2d",
    "torch.nn.ReLU",
    "torch.nn.Sequential",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.Generator.forward": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.LeNet": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.dcgan.LeNet.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.dcgan.LeNet",
    "super",
    "torch.nn.Conv2d",
    "torch.nn.Dropout2d",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.LeNet.forward": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "torch.nn.functional.dropout",
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.max_pool2d",
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.MODEL_PATH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.dcgan.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.Variable": {
  "data": {
   "shadows": "torch.autograd.Variable"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.args": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.dcgan.datasets": {
  "data": {
   "shadows": "torchvision.datasets"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.entropy": {
  "data": {
   "shadows": "scipy.stats.entropy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.models": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.dcgan.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.override": {
  "data": {
   "shadows": "ray.util.sgd.utils.override"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.parser": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.dcgan.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.torch.utils.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.train_example": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dict",
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.examples.dcgan.GANOperator",
    "ray.util.sgd.torch.examples.dcgan.MODEL_PATH",
    "tabulate.tabulate",
    "tqdm.trange"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.dcgan.trainer": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.dcgan.trange": {
  "data": {
   "shadows": "tqdm.trange"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.transforms": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.urllib.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.dcgan.weights_init": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "torch.nn.init.constant_",
    "torch.nn.init.normal_"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.image_models.args": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "ray.util.sgd.torch.examples.image_models.args.argparse",
    "ray.util.sgd.torch.examples.image_models.args.parser",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.image_models.args.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.args.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.args.parse_args": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "open",
    "ray.util.sgd.torch.examples.image_models.args.logging",
    "ray.util.sgd.torch.examples.image_models.args.parser",
    "ray.util.sgd.torch.examples.image_models.args.yaml"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.args.parser": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.image_models.args.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.examples.image_models.train.main"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.image_models.train.BATCH_SIZE": {
  "data": {
   "shadows": "ray.util.sgd.utils.BATCH_SIZE"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.Dataset": {
  "data": {
   "shadows": "timm.data.Dataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.FastCollateMixup": {
  "data": {
   "shadows": "timm.data.FastCollateMixup"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.convert_splitbn_model": {
  "data": {
   "shadows": "timm.models.convert_splitbn_model"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.create_loader": {
  "data": {
   "shadows": "timm.data.create_loader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.create_model": {
  "data": {
   "shadows": "timm.models.create_model"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.create_optimizer": {
  "data": {
   "shadows": "timm.optim.create_optimizer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.data_creator": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "os.path.join",
    "ray.util.sgd.torch.examples.image_models.util.mock_data",
    "ray.util.sgd.utils.BATCH_SIZE",
    "timm.data.Dataset",
    "timm.data.FastCollateMixup",
    "timm.data.create_loader",
    "timm.data.resolve_data_config",
    "vars"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.train.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.loss_creator": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.train.main": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "int",
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.TrainingOperator.from_creators",
    "ray.util.sgd.torch.examples.image_models.args.parse_args",
    "ray.util.sgd.torch.examples.image_models.train.data_creator",
    "ray.util.sgd.torch.examples.image_models.train.loss_creator",
    "ray.util.sgd.torch.examples.image_models.train.model_creator",
    "ray.util.sgd.torch.examples.image_models.train.optimizer_creator",
    "ray.util.sgd.torch.examples.image_models.train.ray",
    "ray.util.sgd.utils.BATCH_SIZE",
    "timm.utils.setup_default_logging",
    "tqdm.trange"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.train.model_creator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "max",
    "timm.models.convert_splitbn_model",
    "timm.models.create_model"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.train.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.optimizer_creator": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "timm.optim.create_optimizer"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.train.parse_args": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.image_models.args.parse_args"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.resolve_data_config": {
  "data": {
   "shadows": "timm.data.resolve_data_config"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.setup_default_logging": {
  "data": {
   "shadows": "timm.utils.setup_default_logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.trange": {
  "data": {
   "shadows": "tqdm.trange"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.train.util": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.image_models.util"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.util": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.image_models.util.PIL": {
  "data": {
   "shadows": "PIL"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.util.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.util.mock_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "mock_class",
    "range",
    "ray.util.sgd.torch.examples.image_models.util.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.util.mock_data.mock_class": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.uint8",
    "numpy.zeros",
    "os.path.join",
    "range",
    "ray.util.sgd.torch.examples.image_models.util.PIL",
    "ray.util.sgd.torch.examples.image_models.util.os",
    "ray.util.sgd.torch.examples.image_models.util.random"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.image_models.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.image_models.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures": {
  "data": {
   "symbols_in_volume": [
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.TrainingOperator.from_creators",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.MyTrainingOperator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.data_creator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.loss_creator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.model_creator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.optimizer_creator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.ray",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.scheduler_creator",
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.trainer"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.LinearDataset": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.train_example.LinearDataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.MyTrainingOperator": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.MyTrainingOperator.setup": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.torch",
    "ray.util.sgd.torch.examples.train_example.LinearDataset",
    "torch.nn.Linear",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.data_creator": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.LinearDataset",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.loss_creator": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.model_creator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.optimizer_creator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.scheduler_creator": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.raysgd_torch_signatures.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.raysgd_torch_signatures.trainer": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.segmentation": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.Compose": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.segmentation.transforms.Compose"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.ConvertCocoPolysToMask": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.ConvertCocoPolysToMask.__call__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "PIL.Image.fromarray",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.convert_coco_poly_to_mask",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.FilterAndRemapCocoCategories": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.FilterAndRemapCocoCategories.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.coco_utils.copy"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.FilterAndRemapCocoCategories.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils._coco_remove_images_without_annotations": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_has_valid_annotation",
    "enumerate",
    "isinstance",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.torch",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.torchvision"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils._coco_remove_images_without_annotations._has_valid_annotation": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.coco_mask": {
  "data": {
   "shadows": "pycocotools.mask"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.convert_coco_poly_to_mask": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "pycocotools.mask",
    "pycocotools.mask.any",
    "pycocotools.mask.decode",
    "pycocotools.mask.frPyObjects",
    "pycocotools.mask.shape",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.get_coco": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.coco_utils.ConvertCocoPolysToMask",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.FilterAndRemapCocoCategories",
    "ray.util.sgd.torch.examples.segmentation.coco_utils._coco_remove_images_without_annotations",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.os",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.torchvision",
    "ray.util.sgd.torch.examples.segmentation.transforms.Compose"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.torch.utils.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.coco_utils.torchvision": {
  "data": {
   "shadows": "torchvision"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "apex.amp",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.args",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.main",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.parse_args",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.ray"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.SegOperator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.SegOperator.setup": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "filelock.FileLock",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_dataset",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_optimizer",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_transform",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torchvision",
    "ray.util.sgd.torch.examples.segmentation.utils.collate_fn"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.SegOperator.train_batch": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "apex.amp",
    "apex.amp.scale_loss",
    "len",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.criterion"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.SegOperator.validate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch",
    "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.T": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.segmentation.transforms"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.amp": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.args": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.criterion": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "torch.nn.functional.cross_entropy"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_coco": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.segmentation.coco_utils.get_coco"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_dataset": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RuntimeError",
    "ds_fn",
    "print",
    "ray.util.sgd.torch.examples.segmentation.coco_utils.get_coco",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.os",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torchvision"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_dataset.sbd": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torchvision"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_optimizer": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.get_transform": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "ray.util.sgd.torch.examples.segmentation.transforms.Compose",
    "ray.util.sgd.torch.examples.segmentation.transforms.Normalize",
    "ray.util.sgd.torch.examples.segmentation.transforms.RandomCrop",
    "ray.util.sgd.torch.examples.segmentation.transforms.RandomHorizontalFlip",
    "ray.util.sgd.torch.examples.segmentation.transforms.RandomResize",
    "ray.util.sgd.torch.examples.segmentation.transforms.ToTensor"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.main": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int",
    "print",
    "range",
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.SegOperator",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.datetime",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.os",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.time",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.parse_args": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.util.sgd.torch.examples.segmentation.train_segmentation.argparse"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.torch.utils.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.torchvision": {
  "data": {
   "shadows": "torchvision"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.train_segmentation.utils": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.segmentation.utils"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.CenterCrop": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.CenterCrop.__call__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "torchvision.transforms.functional.center_crop"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.CenterCrop.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Compose": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Compose.__call__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "t"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Compose.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "torchvision.transforms"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.F": {
  "data": {
   "shadows": "torchvision.transforms.functional"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Normalize": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Normalize.__call__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "torchvision.transforms.functional.normalize"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.Normalize.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomCrop": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomCrop.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.transforms.pad_if_smaller",
    "torchvision.transforms.RandomCrop.get_params",
    "torchvision.transforms.functional.crop"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomCrop.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomHorizontalFlip": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomHorizontalFlip.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.transforms.random",
    "torchvision.transforms.functional.hflip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomHorizontalFlip.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomResize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomResize.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "PIL.Image.NEAREST",
    "ray.util.sgd.torch.examples.segmentation.transforms.random",
    "torchvision.transforms.functional.resize"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.RandomResize.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.T": {
  "data": {
   "shadows": "torchvision.transforms"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.ToTensor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.ToTensor.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.asarray",
    "ray.util.sgd.torch.examples.segmentation.transforms.torch",
    "torchvision.transforms.functional.to_tensor"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.pad_if_smaller": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "min",
    "torchvision.transforms.functional.pad"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.__str__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.compute": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.utils.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.reduce_from_all_processes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.utils.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.reset": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.ConfusionMatrix.update": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.segmentation.utils.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.cat_list": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "max",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.collate_fn": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "ray.util.sgd.torch.examples.segmentation.utils.cat_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.segmentation.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.util.sgd.torch.examples.train_example.argparse",
    "ray.util.sgd.torch.examples.train_example.parser",
    "ray.util.sgd.torch.examples.train_example.ray",
    "ray.util.sgd.torch.examples.train_example.train_example",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.train_example.LinearDataset": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.torch"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.train_example.LinearDataset.__getitem__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.LinearDataset.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "ray.util.sgd.torch.examples.train_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.LinearDataset.__len__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.data_creator": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.LinearDataset",
    "ray.util.sgd.torch.examples.train_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.model_creator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.optimizer_creator": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.parser": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.train_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.scheduler_creator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.train_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.train_example.train_example": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "print",
    "range",
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.TrainingOperator.from_creators",
    "ray.util.sgd.torch.examples.train_example.data_creator",
    "ray.util.sgd.torch.examples.train_example.model_creator",
    "ray.util.sgd.torch.examples.train_example.optimizer_creator",
    "ray.util.sgd.torch.examples.train_example.scheduler_creator",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "apex.amp",
    "list",
    "ray.util.sgd.torch.examples.transformers.transformers_example.MODEL_CONFIG_CLASSES",
    "ray.util.sgd.torch.examples.transformers.transformers_example.logging",
    "ray.util.sgd.torch.examples.transformers.transformers_example.main",
    "sum",
    "transformers.ALL_PRETRAINED_CONFIG_ARCHIVE_MAP.keys",
    "transformers.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING.keys",
    "tuple"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.ALL_MODELS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.ALL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ALL_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.AdamW": {
  "data": {
   "shadows": "transformers.AdamW"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.AutoConfig": {
  "data": {
   "shadows": "transformers.AutoConfig"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.AutoModelForSequenceClassification": {
  "data": {
   "shadows": "transformers.AutoModelForSequenceClassification"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.AutoTokenizer": {
  "data": {
   "shadows": "transformers.AutoTokenizer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.DataProcessingArguments": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "int",
    "str",
    "transformers.glue_processors.keys"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.HfArgumentParser": {
  "data": {
   "shadows": "transformers.HfArgumentParser"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.MODEL_CONFIG_CLASSES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": {
  "data": {
   "shadows": "transformers.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.MODEL_TYPES": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.ModelArguments": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "ray.util.sgd.torch.examples.transformers.transformers_example.ALL_MODELS",
    "ray.util.sgd.torch.examples.transformers.transformers_example.MODEL_TYPES",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.RandomSampler": {
  "data": {
   "shadows": "torch.utils.data.RandomSampler"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.RayArguments": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TrainingArguments": {
  "data": {
   "shadows": "transformers.TrainingArguments"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TransformerOperator": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TransformerOperator.calculate_t_total": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TransformerOperator.setup": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "any",
    "bool",
    "filelock.FileLock",
    "len",
    "ray.util.sgd.torch.examples.transformers.transformers_example.announce_training",
    "ray.util.sgd.torch.examples.transformers.transformers_example.logger",
    "ray.util.sgd.torch.examples.transformers.transformers_example.os",
    "ray.util.sgd.torch.examples.transformers.transformers_example.time",
    "ray.util.sgd.torch.examples.transformers.utils.load_and_cache_examples",
    "torch.distributed.is_initialized",
    "torch.utils.data.DataLoader",
    "torch.utils.data.RandomSampler",
    "transformers.AdamW",
    "transformers.AutoConfig.from_pretrained",
    "transformers.AutoModelForSequenceClassification.from_pretrained",
    "transformers.AutoTokenizer.from_pretrained",
    "transformers.get_linear_schedule_with_warmup",
    "transformers.glue_processors"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.TransformerOperator.train_batch": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "apex.amp.master_params",
    "apex.amp.scale_loss",
    "model",
    "model.parameters",
    "model.zero_grad",
    "ray.util.sgd.torch.examples.transformers.transformers_example.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.amp": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.announce_training": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.transformers.transformers_example.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.evaluate": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.transformers.utils.evaluate"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.get_linear_schedule_with_warmup": {
  "data": {
   "shadows": "transformers.get_linear_schedule_with_warmup"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.load_and_cache_examples": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.transformers.utils.load_and_cache_examples"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.logger": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.main": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "print",
    "ray.util.sgd.TorchTrainer",
    "ray.util.sgd.torch.examples.transformers.transformers_example.DataProcessingArguments",
    "ray.util.sgd.torch.examples.transformers.transformers_example.ModelArguments",
    "ray.util.sgd.torch.examples.transformers.transformers_example.RayArguments",
    "ray.util.sgd.torch.examples.transformers.transformers_example.TransformerOperator",
    "ray.util.sgd.torch.examples.transformers.transformers_example.argparse",
    "ray.util.sgd.torch.examples.transformers.transformers_example.json",
    "ray.util.sgd.torch.examples.transformers.transformers_example.logger",
    "ray.util.sgd.torch.examples.transformers.transformers_example.logging",
    "ray.util.sgd.torch.examples.transformers.transformers_example.os",
    "ray.util.sgd.torch.examples.transformers.transformers_example.ray",
    "ray.util.sgd.torch.examples.transformers.transformers_example.set_seed",
    "ray.util.sgd.torch.examples.transformers.transformers_example.torch",
    "ray.util.sgd.torch.examples.transformers.utils.evaluate",
    "ray.util.sgd.torch.examples.transformers.utils.save_and_evaluate_checkpoints",
    "tqdm.trange",
    "transformers.HfArgumentParser",
    "transformers.TrainingArguments",
    "transformers.glue_output_modes",
    "transformers.glue_processors",
    "vars"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.output_modes": {
  "data": {
   "shadows": "transformers.glue_output_modes"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.processors": {
  "data": {
   "shadows": "transformers.glue_processors"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.save_and_evaluate_checkpoints": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.transformers.utils.save_and_evaluate_checkpoints"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.set_seed": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.random.seed",
    "ray.util.sgd.torch.examples.transformers.transformers_example.random",
    "ray.util.sgd.torch.examples.transformers.transformers_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.transformers_example.trange": {
  "data": {
   "shadows": "tqdm.trange"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.examples.transformers.utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.transformers.utils.AutoModelForSequenceClassification": {
  "data": {
   "shadows": "transformers.AutoModelForSequenceClassification"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.AutoTokenizer": {
  "data": {
   "shadows": "transformers.AutoTokenizer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.SequentialSampler": {
  "data": {
   "shadows": "torch.utils.data.SequentialSampler"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.TensorDataset": {
  "data": {
   "shadows": "torch.utils.data.TensorDataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.compute_metrics": {
  "data": {
   "shadows": "transformers.glue_compute_metrics"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.convert_examples_to_features": {
  "data": {
   "shadows": "transformers.glue_convert_examples_to_features"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.evaluate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "len",
    "model",
    "numpy.append",
    "numpy.argmax",
    "numpy.squeeze",
    "ray.util.sgd.torch.examples.transformers.utils.load_and_cache_examples",
    "ray.util.sgd.torch.examples.transformers.utils.logger",
    "ray.util.sgd.torch.examples.transformers.utils.os",
    "ray.util.sgd.torch.examples.transformers.utils.torch",
    "torch.utils.data.DataLoader",
    "torch.utils.data.SequentialSampler",
    "tqdm.tqdm",
    "transformers.glue_compute_metrics",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.load_and_cache_examples": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "filelock.FileLock",
    "filter",
    "list",
    "ray.util.sgd.torch.examples.transformers.utils.logger",
    "ray.util.sgd.torch.examples.transformers.utils.os",
    "ray.util.sgd.torch.examples.transformers.utils.torch",
    "str",
    "torch.utils.data.TensorDataset",
    "transformers.glue_convert_examples_to_features",
    "transformers.glue_output_modes",
    "transformers.glue_processors"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.utils.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.transformers.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.output_modes": {
  "data": {
   "shadows": "transformers.glue_output_modes"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.processors": {
  "data": {
   "shadows": "transformers.glue_processors"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.save_and_evaluate_checkpoints": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "len",
    "list",
    "ray.util.sgd.torch.examples.transformers.utils.evaluate",
    "ray.util.sgd.torch.examples.transformers.utils.glob",
    "ray.util.sgd.torch.examples.transformers.utils.logger",
    "ray.util.sgd.torch.examples.transformers.utils.logging",
    "ray.util.sgd.torch.examples.transformers.utils.os",
    "ray.util.sgd.torch.examples.transformers.utils.torch",
    "sorted",
    "transformers.AutoModelForSequenceClassification.from_pretrained",
    "transformers.AutoTokenizer.from_pretrained",
    "transformers.WEIGHTS_NAME"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.transformers.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.transformers.utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "ray.util.sgd.torch.TrainingOperator.from_creators",
    "ray.util.sgd.torch.examples.tune_example.CustomTrainingOperator",
    "ray.util.sgd.torch.examples.tune_example.argparse",
    "ray.util.sgd.torch.examples.tune_example.data_creator",
    "ray.util.sgd.torch.examples.tune_example.model_creator",
    "ray.util.sgd.torch.examples.tune_example.optimizer_creator",
    "ray.util.sgd.torch.examples.tune_example.parser",
    "ray.util.sgd.torch.examples.tune_example.ray",
    "ray.util.sgd.torch.examples.tune_example.scheduler_creator",
    "ray.util.sgd.torch.examples.tune_example.tune_example",
    "ray.util.sgd.torch.examples.tune_example.tune_example_manual",
    "str",
    "torch.nn.MSELoss"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.examples.tune_example.BATCH_SIZE": {
  "data": {
   "shadows": "ray.util.sgd.utils.BATCH_SIZE"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.CustomTrainingOperator": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.tune_example.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.LinearDataset": {
  "data": {
   "shadows": "ray.util.sgd.torch.examples.train_example.LinearDataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.ReduceLROnPlateau": {
  "data": {
   "shadows": "torch.optim.lr_scheduler.ReduceLROnPlateau"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.TorchTrainer": {
  "data": {
   "shadows": "ray.util.sgd.torch.TorchTrainer"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.data_creator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.train_example.LinearDataset",
    "ray.util.sgd.utils.BATCH_SIZE",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.merge_dicts"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.model_creator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.optimizer_creator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ray.util.sgd.torch.examples.tune_example.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.parser": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.examples.tune_example.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.scheduler_creator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.ReduceLROnPlateau"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.examples.tune_example.tune_example": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.tune.grid_search",
    "ray.tune.run",
    "ray.util.sgd.torch.TorchTrainer.as_trainable",
    "ray.util.sgd.utils.BATCH_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.tune_example_manual": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ray.tune.grid_search",
    "ray.tune.run",
    "ray.util.sgd.torch.TorchTrainer.as_trainable",
    "ray.util.sgd.utils.BATCH_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.examples.tune_example.tune_example_manual.step": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "ray.tune.utils.merge_dicts"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.func_trainable": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.util.sgd.torch.ptl_operator.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.ptl_operator.AverageMeterCollection": {
  "data": {
   "shadows": "ray.util.sgd.utils.AverageMeterCollection"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.LightningDistributedDataParallel": {
  "data": {
   "shadows": "pytorch_lightning.overrides.data_parallel.LightningDistributedDataParallel"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pytorch_lightning.trainer.model_hooks.TrainerModelHooksMixin",
    "pytorch_lightning.trainer.optimizers.TrainerOptimizersMixin",
    "ray.util.sgd.torch.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator._configure_amp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pytorch_lightning.LightningModule"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator._configure_ddp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.overrides.data_parallel.LightningDistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator._get_train_loader": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator._get_validation_loader": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.get_model": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "pytorch_lightning.overrides.data_parallel.LightningDistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.load_state_dict": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.model": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.optimizers": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.scheduler_dicts": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.schedulers": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.setup": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "issubclass",
    "len",
    "ptl_class",
    "pytorch_lightning.LightningModule",
    "pytorch_lightning.utilities.exceptions.MisconfigurationException",
    "pytorch_lightning.utilities.model_utils.is_overridden",
    "ray.util.sgd.torch.ptl_operator.inspect",
    "ray.util.sgd.torch.ptl_operator.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.state_dict": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.train_batch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "pytorch_lightning.core.step_result.Result",
    "pytorch_lightning.utilities.memory.recursive_detach",
    "pytorch_lightning.utilities.model_utils.is_overridden",
    "ray.util.sgd.torch.ptl_operator.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.train_epoch": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "pytorch_lightning.core.step_result.Result",
    "pytorch_lightning.utilities.model_utils.is_overridden",
    "ray.util.sgd.torch.constants.NUM_STEPS",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH",
    "ray.util.sgd.torch.ptl_operator.torch",
    "ray.util.sgd.utils.AverageMeterCollection",
    "ray.util.sgd.utils.NUM_SAMPLES",
    "tqdm.tqdm",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.validate": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "pytorch_lightning.core.step_result.Result",
    "pytorch_lightning.utilities.model_utils.is_overridden",
    "ray.util.sgd.torch.ptl_operator.torch",
    "ray.util.sgd.utils.AverageMeterCollection",
    "ray.util.sgd.utils.NUM_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.LightningOperator.validate_batch": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pytorch_lightning.core.step_result.Result",
    "pytorch_lightning.utilities.model_utils.is_overridden"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.ptl_operator.MisconfigurationException": {
  "data": {
   "shadows": "pytorch_lightning.utilities.exceptions.MisconfigurationException"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.NUM_SAMPLES": {
  "data": {
   "shadows": "ray.util.sgd.utils.NUM_SAMPLES"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.NUM_STEPS": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.NUM_STEPS"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.Result": {
  "data": {
   "shadows": "pytorch_lightning.core.step_result.Result"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.SCHEDULER_STEP_BATCH": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.SCHEDULER_STEP_EPOCH": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.TrainerModelHooksMixin": {
  "data": {
   "shadows": "pytorch_lightning.trainer.model_hooks.TrainerModelHooksMixin"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.TrainerOptimizersMixin": {
  "data": {
   "shadows": "pytorch_lightning.trainer.optimizers.TrainerOptimizersMixin"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.TrainingOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.TrainingOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.is_overridden": {
  "data": {
   "shadows": "pytorch_lightning.utilities.model_utils.is_overridden"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.ptl_operator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.ptl": {
  "data": {
   "shadows": "pytorch_lightning"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.recursive_detach": {
  "data": {
   "shadows": "pytorch_lightning.utilities.memory.recursive_detach"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.ptl_operator.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.resnet": {
  "data": {},
  "type": "module"
 },
 "ray.util.sgd.torch.resnet.BasicBlock": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.resnet.BasicBlock.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.BasicBlock",
    "super",
    "torch.nn.BatchNorm2d",
    "torch.nn.Conv2d",
    "torch.nn.Sequential"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.BasicBlock.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.Bottleneck": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.resnet.Bottleneck.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.Bottleneck",
    "super",
    "torch.nn.BatchNorm2d",
    "torch.nn.Conv2d",
    "torch.nn.Sequential"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.Bottleneck.forward": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.resnet.ResNet": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.resnet.ResNet.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.ResNet",
    "super",
    "torch.nn.BatchNorm2d",
    "torch.nn.Conv2d",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet._make_layer": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "block",
    "block.expansion",
    "torch.nn.Sequential"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet.forward": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.nn.functional.avg_pool2d",
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet101": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.Bottleneck",
    "ray.util.sgd.torch.resnet.ResNet"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet152": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.Bottleneck",
    "ray.util.sgd.torch.resnet.ResNet"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet18": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.BasicBlock",
    "ray.util.sgd.torch.resnet.ResNet"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet34": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.BasicBlock",
    "ray.util.sgd.torch.resnet.ResNet"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.ResNet50": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ray.util.sgd.torch.resnet.Bottleneck",
    "ray.util.sgd.torch.resnet.ResNet"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.resnet.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.util.sgd.torch.torch_runner.logger",
    "ray.util.sgd.torch.torch_runner.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.torch_runner.NUM_STEPS": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.NUM_STEPS"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "apex.amp",
    "ray.util.sgd.utils.TimerCollection"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner._toggle_profiling": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.apply": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.apply_operator": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.criterion": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.get_iterator": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.get_models": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.get_node_ip": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.given_models": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.given_optimizers": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.given_schedulers": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.load_state_dict": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.load_state_stream": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.io",
    "ray.util.sgd.torch.torch_runner.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.make_iterator": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.models": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.optimizers": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.schedulers": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.setup_operator": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.shutdown": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.state_dict": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.state_stream": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.io",
    "ray.util.sgd.torch.torch_runner.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.train_epoch": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "map",
    "ray.util.sgd.torch.constants.NUM_STEPS",
    "ray.util.sgd.torch.constants.USE_FP16",
    "ray.util.sgd.torch.torch_runner.itertools",
    "ray.util.sgd.torch.torch_runner.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.train_epoch.format_batch": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_runner.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.train_loader": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.validate": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.TorchRunner.validation_loader": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_runner.USE_FP16": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.USE_FP16"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.amp": {
  "data": {
   "shadows": "apex.amp"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.torch_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_runner.utils": {
  "data": {
   "shadows": "ray.util.sgd.utils"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.torch_trainer.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.torch_trainer.BATCH_SIZE": {
  "data": {
   "shadows": "ray.util.sgd.utils.BATCH_SIZE"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ray.tune.Trainable"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable._create_trainer": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.cleanup": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.load_checkpoint": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.save_checkpoint": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.os"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.setup": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.step": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ray.tune.utils.util.merge_dicts"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.BaseTorchTrainable.trainer": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.Dataset": {
  "data": {
   "shadows": "ray.util.sgd.data.Dataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.DeactivatedWorkerGroup": {
  "data": {
   "shadows": "ray.util.sgd.torch.worker_group.DeactivatedWorkerGroup"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.LocalWorkerGroup": {
  "data": {
   "shadows": "ray.util.sgd.torch.worker_group.LocalWorkerGroup"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.NCCL_TIMEOUT_S": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.NUM_SAMPLES": {
  "data": {
   "shadows": "ray.util.sgd.utils.NUM_SAMPLES"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.RemoteWorkerGroup": {
  "data": {
   "shadows": "ray.util.sgd.torch.worker_group.RemoteWorkerGroup"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.Resources": {
  "data": {
   "shadows": "ray.tune.resources.Resources"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "dict",
    "float",
    "isinstance",
    "ray.util.log_once",
    "ray.util.sgd.torch.constants.NCCL_TIMEOUT_S",
    "ray.util.sgd.torch.torch_trainer._remind_gpu_usage",
    "ray.util.sgd.torch.torch_trainer._validate_scheduler_step_freq",
    "ray.util.sgd.torch.torch_trainer.logger",
    "ray.util.sgd.torch.torch_trainer.logging",
    "ray.util.sgd.torch.torch_trainer.ray",
    "ray.util.sgd.torch.torch_trainer.tempfile",
    "ray.util.sgd.torch.torch_trainer.torch",
    "torch.distributed.is_available"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer._configure_and_split_batch": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.logger",
    "ray.util.sgd.utils.BATCH_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer._process_stats": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "numpy.nanmean",
    "ray.util.sgd.torch.torch_trainer.numbers",
    "ray.util.sgd.utils.NUM_SAMPLES",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer._resize_worker_group": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "range",
    "ray.util.sgd.torch.torch_trainer.logger",
    "ray.util.sgd.torch.torch_trainer.ray",
    "ray.util.sgd.torch.torch_trainer.time"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer._start_workers": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict",
    "ray.util.sgd.torch.worker_group.LocalWorkerGroup",
    "ray.util.sgd.torch.worker_group.RemoteWorkerGroup",
    "ray.util.sgd.utils.BATCH_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.apply_all_operators": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.apply_all_workers": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.as_trainable": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "len",
    "ray.util.sgd.torch.torch_trainer.inspect",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.as_trainable.TorchTrainable": {
  "data": {
   "lineno": 628
  },
  "type": "class"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.as_trainable.TorchTrainable._create_trainer": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.TorchTrainer"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.as_trainable.TorchTrainable.default_resource_request": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "ray.tune.resources.Resources"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.as_trainable.TorchTrainable.step": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "override_tune_step",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.get_local_operator": {
  "data": {
   "lineno": 524
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.get_model": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.load": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.load_state_dict": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.restore": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.save": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.shutdown": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.DeactivatedWorkerGroup"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.state_dict": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.train": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "range",
    "ray.util.sgd.data.Dataset",
    "ray.util.sgd.torch.torch_trainer.logger"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.update_scheduler": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.TorchTrainer.validate": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.Trainable": {
  "data": {
   "shadows": "ray.tune.Trainable"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.VALID_SCHEDULER_STEP": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.VALID_SCHEDULER_STEP"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer._remind_gpu_usage": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ray.util.sgd.torch.torch_trainer.logger",
    "ray.util.sgd.torch.torch_trainer.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer._validate_scheduler_step_freq": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "ray.util.sgd.torch.constants.VALID_SCHEDULER_STEP"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.torch_trainer.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.log_once": {
  "data": {
   "shadows": "ray.util.log_once"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.torch_trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.merge_dicts": {
  "data": {
   "shadows": "ray.tune.utils.util.merge_dicts"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.torch_trainer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "ray.util.sgd.torch.training_operator.logger",
    "ray.util.sgd.torch.training_operator.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.training_operator.AverageMeterCollection": {
  "data": {
   "shadows": "ray.util.sgd.utils.AverageMeterCollection"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ray.util.sgd.torch.training_operator.TrainingOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator._initialize_dataloaders": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "filelock.FileLock",
    "ray.util.sgd.torch.training_operator.logger",
    "ray.util.sgd.torch.training_operator.os",
    "ray.util.sgd.torch.training_operator.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator._validate_loaders": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.criterion": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.model": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.models": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.optimizer": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.optimizers": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.scheduler": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.schedulers": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.CreatorOperator.setup": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "callable",
    "criterion",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "ray.util.sgd.torch.training_operator.inspect",
    "ray.util.sgd.torch.training_operator.logger",
    "ray.util.sgd.torch.training_operator.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.DistributedDataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DistributedDataParallel"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.DistributedSampler": {
  "data": {
   "shadows": "torch.utils.data.DistributedSampler"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.IterableDataset": {
  "data": {
   "shadows": "torch.utils.data.IterableDataset"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.LightningOperator": {
  "data": {
   "shadows": "ray.util.sgd.torch.ptl_operator.LightningOperator"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.NUM_SAMPLES": {
  "data": {
   "shadows": "ray.util.sgd.utils.NUM_SAMPLES"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.NUM_STEPS": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.NUM_STEPS"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.SCHEDULER_STEP_BATCH": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.SCHEDULER_STEP_EPOCH": {
  "data": {
   "shadows": "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.TimerCollection": {
  "data": {
   "shadows": "ray.util.sgd.utils.TimerCollection"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "ray.util.sgd.torch.training_operator.torch",
    "ray.util.sgd.utils.TimerCollection",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._configure_amp": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "apex.amp.initialize"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._configure_ddp": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "torch.nn.parallel.DistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_criterion": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_optimizers": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_original_models": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_schedulers": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_train_loader": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._get_validation_loader": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._return_items": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator._set_timers": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.config": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.device": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.device_ids": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.from_creators": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.from_creators.CustomCreatorOperator": {
  "data": {
   "lineno": 829
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.from_ptl": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.from_ptl.CustomLightningOperator": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "ray.util.sgd.torch.ptl_operator.LightningOperator"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.load_state_dict": {
  "data": {
   "lineno": 678
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.local_rank": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.register": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "apex.amp",
    "collections.Iterable",
    "hasattr",
    "isinstance",
    "ray.util.sgd.torch.training_operator.logger",
    "ray.util.sgd.torch.training_operator.logging",
    "ray.util.sgd.torch.training_operator.torch",
    "torch.nn.Module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.register_data": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ray.util.sgd.torch.training_operator.logger",
    "ray.util.sgd.torch.training_operator.logging",
    "should_wrap_dataloader",
    "with_sampler"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.register_data.should_wrap_dataloader": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "isinstance",
    "torch.utils.data.DataLoader",
    "torch.utils.data.IterableDataset"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.register_data.with_sampler": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "torch.utils.data.DataLoader",
    "torch.utils.data.DistributedSampler"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.scheduler_step_freq": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.setup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.state_dict": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.train_batch": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "RuntimeError",
    "apex.amp.scale_loss",
    "criterion",
    "hasattr",
    "model",
    "ray.util.sgd.utils.NUM_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.train_epoch": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "hasattr",
    "len",
    "ray.util.sgd.torch.constants.NUM_STEPS",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_BATCH",
    "ray.util.sgd.torch.constants.SCHEDULER_STEP_EPOCH",
    "ray.util.sgd.utils.AverageMeterCollection",
    "ray.util.sgd.utils.NUM_SAMPLES",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.use_fp16": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.use_gpu": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.use_tqdm": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.validate": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "hasattr",
    "model",
    "model.eval",
    "ray.util.sgd.torch.training_operator.torch",
    "ray.util.sgd.utils.AverageMeterCollection",
    "ray.util.sgd.utils.NUM_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.validate_batch": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "RuntimeError",
    "criterion",
    "hasattr",
    "model",
    "ray.util.sgd.torch.training_operator.torch",
    "ray.util.sgd.utils.NUM_SAMPLES"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.TrainingOperator.world_rank": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator._is_multiple": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.amp": {
  "data": {
   "shadows": "apex.amp"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.get_test_metrics_operator": {
  "data": {
   "lineno": 1041
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_metrics_operator._TestMetricsOperator": {
  "data": {
   "lineno": 1042
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.get_test_metrics_operator._TestMetricsOperator.setup": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_metrics_operator._TestMetricsOperator.train_batch": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ray.util.sgd.utils.NUM_SAMPLES",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_metrics_operator._TestMetricsOperator.validate_batch": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "ray.util.sgd.utils.NUM_SAMPLES",
    "super"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_operator": {
  "data": {
   "lineno": 1027
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_operator._TestingOperator": {
  "data": {
   "lineno": 1028
  },
  "type": "class"
 },
 "ray.util.sgd.torch.training_operator.get_test_operator._TestingOperator.train_epoch": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.get_test_operator._TestingOperator.validate": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "ray.util.sgd.torch.training_operator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.training_operator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.training_operator.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.utils.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils.find_free_port": {
  "data": {
   "shadows": "ray.util.sgd.utils.find_free_port"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.utils.setup_address": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ray.util.sgd.torch.utils.ray",
    "ray.util.sgd.utils.find_free_port"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.utils.setup_process_group": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ray.util.sgd.torch.utils.logger",
    "ray.util.sgd.torch.utils.os",
    "torch.distributed.init_process_group"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.torch.worker_group.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.torch.worker_group.DeactivatedWorkerGroup": {
  "data": {
   "lineno": 592
  },
  "type": "class"
 },
 "ray.util.sgd.torch.worker_group.DeactivatedWorkerGroup.__getattr__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.DistributedTorchRunner": {
  "data": {
   "shadows": "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.LocalDistributedRunner": {
  "data": {
   "shadows": "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.WorkerGroupInterface"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.RemoteWorkerGroup"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.apply_all_operators": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.apply_all_workers": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.get_local_operator": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.get_model": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.load_state_dict": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.new_workers_size": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.num_workers": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.remote_workers": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.reset": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.RemoteWorkerGroup"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.should_scale_up": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.shutdown": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.DeactivatedWorkerGroup"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.start_workers": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datetime.timedelta",
    "int",
    "ray.util.sgd.torch.distributed_torch_runner.LocalDistributedRunner",
    "ray.util.sgd.torch.torch_runner.TorchRunner",
    "ray.util.sgd.torch.utils.setup_address",
    "ray.util.sgd.torch.worker_group.logger",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.state_dict": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.train": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "ray.util.sgd.torch.worker_group.logger",
    "ray.util.sgd.torch.worker_group.ray",
    "ray.util.sgd.utils.check_for_failure"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.LocalWorkerGroup.validate": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "dict",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RESIZE_COOLDOWN_S": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.worker_group.RayActorError": {
  "data": {
   "shadows": "ray.exceptions.RayActorError"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.WorkerGroupInterface"
   ]
  },
  "type": "class"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._apply_all_operators": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._apply_all_workers": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._init_dist_workers": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "int",
    "range",
    "ray.util.sgd.torch.distributed_torch_runner.DistributedTorchRunner",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._load_state_id": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._setup_local_rank": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "ray.util.sgd.torch.worker_group.ray",
    "zip"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._setup_operator": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._setup_process_group": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datetime.timedelta",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._shutdown_remote_workers": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._terminate_remote_workers": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ray.exceptions.RayActorError",
    "ray.util.sgd.torch.worker_group.logger",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._train": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup._validate": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.apply_all_operators": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.apply_all_workers": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.get_local_operator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.get_model": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.load_state_dict": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.io",
    "ray.util.sgd.torch.worker_group.ray",
    "ray.util.sgd.torch.worker_group.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.new_workers_size": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "min",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.num_workers": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.reset": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.logger",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.should_scale_up": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.RESIZE_COOLDOWN_S",
    "ray.util.sgd.torch.worker_group.time"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.shutdown": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.start_workers": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "int",
    "ray.util.sgd.torch.torch_runner.TorchRunner",
    "ray.util.sgd.torch.worker_group.logger",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.state_dict": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "ray.exceptions.RayActorError",
    "ray.util.sgd.torch.worker_group.io",
    "ray.util.sgd.torch.worker_group.ray",
    "ray.util.sgd.torch.worker_group.torch"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.train": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ray.util.sgd.torch.worker_group.ray",
    "ray.util.sgd.utils.check_for_failure"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.RemoteWorkerGroup.validate": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "dict",
    "ray.util.sgd.torch.worker_group.ray"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.TorchRunner": {
  "data": {
   "shadows": "ray.util.sgd.torch.torch_runner.TorchRunner"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.apply_all_operators": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.apply_all_workers": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.get_local_operator": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.get_model": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.load_state_dict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.new_workers_size": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.reset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.should_scale_up": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.shutdown": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.start_workers": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.state_dict": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.train": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.WorkerGroupInterface.validate": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.torch.worker_group.check_for_failure": {
  "data": {
   "shadows": "ray.util.sgd.utils.check_for_failure"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ray.util.sgd.torch.worker_group.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.setup_address": {
  "data": {
   "shadows": "ray.util.sgd.torch.utils.setup_address"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "ray.util.sgd.torch.worker_group.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "ray.util.sgd.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.util.sgd.utils.logging"
   ]
  },
  "type": "module"
 },
 "ray.util.sgd.utils.AverageMeter": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "ray.util.sgd.utils.AverageMeter.__init__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "ray.util.sgd.utils.AverageMeter.reset": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "ray.util.sgd.utils.AverageMeter.update": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "ray.util.sgd.utils.AverageMeterCollection": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "ray.util.sgd.utils.AverageMeterCollection.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ray.util.sgd.utils.AverageMeter",
    "ray.util.sgd.utils.collections"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.AverageMeterCollection.summary": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ray.util.sgd.utils.BATCH_COUNT",
    "ray.util.sgd.utils.NUM_SAMPLES",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.AverageMeterCollection.update": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "ray.util.sgd.utils.BATCH_COUNT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "ray.util.sgd.utils.BATCH_SIZE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.util.sgd.utils.NUM_SAMPLES": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.util.sgd.utils.RayActorError": {
  "data": {
   "shadows": "ray.exceptions.RayActorError"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.TimerCollection": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "ray.util.sgd.utils.TimerCollection.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ray.util.sgd.utils.TimerStat",
    "ray.util.sgd.utils.collections"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerCollection.disable": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerCollection.enable": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerCollection.record": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ray.util.sgd.utils._nullcontext"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerCollection.reset": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerCollection.stats": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "ray.util.sgd.utils.TimerStat.__enter__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ray.util.sgd.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.__exit__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ray.util.sgd.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.first": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.last": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.max": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.max",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.mean": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.mean",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.mean_throughput": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.mean_units_processed": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.median": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.median",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.push": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.push_units_processed": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.reset": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.size": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.TimerStat.sum": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.sum",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils._nullcontext": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.check_for_failure": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len",
    "ray.exceptions.RayActorError",
    "ray.util.sgd.utils.logger",
    "ray.util.sgd.utils.ray",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.find_free_port": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "contextlib.closing",
    "ray.util.sgd.utils.socket"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ray.util.sgd.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.override": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "ray.util.sgd.utils.override.overrider": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "ray.util.sgd.utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ray.util.sgd.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.util.timer": {
  "data": {},
  "type": "module"
 },
 "ray.util.timer._Timer": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "ray.util.timer._Timer.__enter__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ray.util.timer.time"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.__exit__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ray.util.timer.time"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "ray.util.timer._Timer.has_units_processed": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.mean": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.mean_throughput": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "float",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.mean_units_processed": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "property"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.push": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.timer._Timer.push_units_processed": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ray.util.timer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.util.timer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ray.utils.logging",
    "ray.utils.sys"
   ]
  },
  "type": "module"
 },
 "ray.utils.BOOL": {
  "data": {
   "shadows": "ctypes.wintypes.BOOL"
  },
  "type": "import"
 },
 "ray.utils.CDLL": {
  "data": {
   "shadows": "ctypes.CDLL"
  },
  "type": "import"
 },
 "ray.utils.DWORD": {
  "data": {
   "shadows": "ctypes.wintypes.DWORD"
  },
  "type": "import"
 },
 "ray.utils.HANDLE": {
  "data": {
   "shadows": "ctypes.wintypes.HANDLE"
  },
  "type": "import"
 },
 "ray.utils.LARGE_INTEGER": {
  "data": {
   "shadows": "ctypes.wintypes.LARGE_INTEGER"
  },
  "type": "import"
 },
 "ray.utils.LPCWSTR": {
  "data": {
   "shadows": "ctypes.wintypes.LPCWSTR"
  },
  "type": "import"
 },
 "ray.utils.LPVOID": {
  "data": {
   "shadows": "ctypes.wintypes.LPVOID"
  },
  "type": "import"
 },
 "ray.utils.ULARGE_INTEGER": {
  "data": {
   "shadows": "ctypes.wintypes.ULARGE_INTEGER"
  },
  "type": "import"
 },
 "ray.utils.Unbuffered": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ray.utils.Unbuffered.__getattr__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ray.utils.Unbuffered.__init__": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "ray.utils.Unbuffered.write": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "ray.utils.Unbuffered.writelines": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "ray.utils._default_handler": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "ray.utils._get_docker_cpus": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Exception",
    "float",
    "int",
    "len",
    "list",
    "min",
    "open",
    "range",
    "ray.utils.logger",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils._random_string": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "ray.ray_constants.ID_SIZE",
    "ray.utils.hashlib",
    "ray.utils.uuid"
   ]
  },
  "type": "function"
 },
 "ray.utils.binary_to_hex": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ray.utils.binascii",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.binary_to_object_ref": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ray.utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.utils.binary_to_task_id": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ray.utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.utils.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "ray.utils.c_int": {
  "data": {
   "shadows": "ctypes.c_int"
  },
  "type": "import"
 },
 "ray.utils.c_ulong": {
  "data": {
   "shadows": "ctypes.c_ulong"
  },
  "type": "import"
 },
 "ray.utils.check_oversized_pickle": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "len",
    "ray.ray_constants.PICKLE_OBJECT_WARNING_SIZE",
    "ray.ray_constants.PICKLING_LARGE_OBJECT_PUSH_ERROR",
    "ray.utils.push_error_to_driver"
   ]
  },
  "type": "function"
 },
 "ray.utils.compute_driver_id_from_job": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "isinstance",
    "ray.ray_constants.ID_SIZE",
    "ray.utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.utils.compute_job_id_from_driver": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "isinstance",
    "ray.utils.ray"
   ]
  },
  "type": "function"
 },
 "ray.utils.create_and_init_new_worker_log": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "print",
    "ray.utils.open_log"
   ]
  },
  "type": "function"
 },
 "ray.utils.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "ray.utils.decode": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.detect_fate_sharing_support": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "ray.utils.detect_fate_sharing_support_linux",
    "ray.utils.detect_fate_sharing_support_win32",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.detect_fate_sharing_support_linux": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "bool",
    "ctypes.CDLL",
    "ctypes.c_int",
    "ctypes.c_ulong",
    "ray.utils.linux_prctl",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.detect_fate_sharing_support_win32": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "JOBOBJECT_EXTENDED_LIMIT_INFORMATION",
    "TypeError",
    "bool",
    "ctypes.wintypes.BOOL",
    "ctypes.wintypes.DWORD",
    "ctypes.wintypes.HANDLE",
    "ctypes.wintypes.LPCWSTR",
    "ctypes.wintypes.LPVOID",
    "ray.utils.ctypes",
    "ray.utils.subprocess",
    "ray.utils.sys",
    "ray.utils.win32_AssignProcessToJobObject",
    "ray.utils.win32_job"
   ]
  },
  "type": "function"
 },
 "ray.utils.detect_fate_sharing_support_win32.IO_COUNTERS": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "ctypes.wintypes.ULARGE_INTEGER",
    "ray.utils.ctypes"
   ]
  },
  "type": "class"
 },
 "ray.utils.detect_fate_sharing_support_win32.JOBOBJECT_BASIC_LIMIT_INFORMATION": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ctypes.wintypes.DWORD",
    "ctypes.wintypes.LARGE_INTEGER",
    "ray.utils.ctypes"
   ]
  },
  "type": "class"
 },
 "ray.utils.detect_fate_sharing_support_win32.JOBOBJECT_EXTENDED_LIMIT_INFORMATION": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "ray.utils.ctypes"
   ]
  },
  "type": "class"
 },
 "ray.utils.ensure_str": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ray.utils.estimate_available_memory": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ray.utils.get_system_memory",
    "ray.utils.get_used_memory"
   ]
  },
  "type": "function"
 },
 "ray.utils.format_error_message": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "ray.utils.get_cuda_visible_devices": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "list",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_num_cpus": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "Exception",
    "float",
    "int",
    "ray.utils._get_docker_cpus",
    "ray.utils.logger",
    "ray.utils.multiprocessing",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_ray_temp_dir": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ray.utils.get_user_temp_dir",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_shared_memory_bytes": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ray.utils.os",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_system_memory": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "int",
    "min",
    "open",
    "ray.utils.os",
    "ray.utils.psutil"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_used_memory": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "int",
    "min",
    "open",
    "ray.utils.os",
    "ray.utils.psutil"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_user": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "Exception",
    "ray.utils.os",
    "ray.utils.pwd"
   ]
  },
  "type": "function"
 },
 "ray.utils.get_user_temp_dir": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ray.utils.os",
    "ray.utils.sys",
    "ray.utils.tempfile"
   ]
  },
  "type": "function"
 },
 "ray.utils.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "ray.utils.hex_to_binary": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ray.utils.binascii"
   ]
  },
  "type": "function"
 },
 "ray.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "ray.utils.is_class_method": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.utils.is_cython": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "check_cython",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ray.utils.is_cython.check_cython": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "ray.utils.is_function_or_method": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ray.utils.inspect",
    "ray.utils.is_cython"
   ]
  },
  "type": "function"
 },
 "ray.utils.is_main_thread": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ray.utils.threading"
   ]
  },
  "type": "function"
 },
 "ray.utils.is_static_method": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "ray.utils.inspect",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ray.utils.last_set_gpu_ids": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "ray.utils.linux_prctl": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ray.utils.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "ray.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ray.utils.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "ray.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ray.utils.open_log": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "open",
    "ray.utils.Unbuffered"
   ]
  },
  "type": "function"
 },
 "ray.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.utils.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "ray.utils.push_error_to_driver": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "ray.utils.ray",
    "ray.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.utils.push_error_to_driver_through_redis": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "ray.utils.ray",
    "ray.utils.time"
   ]
  },
  "type": "function"
 },
 "ray.utils.pwd": {
  "data": {
   "shadows": "pwd"
  },
  "type": "import"
 },
 "ray.utils.random_string": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state",
    "ray.ray_constants.ID_SIZE"
   ]
  },
  "type": "function"
 },
 "ray.utils.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.utils.ray.gcs_utils": {
  "data": {
   "shadows": "ray.gcs_utils"
  },
  "type": "import"
 },
 "ray.utils.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.utils.resources_from_resource_arguments": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "ray.ray_constants.RESOURCE_CONSTRAINT_PREFIX",
    "ray.ray_constants.to_memory_units"
   ]
  },
  "type": "function"
 },
 "ray.utils.set_cuda_visible_devices": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ray.utils.last_set_gpu_ids",
    "ray.utils.os",
    "str"
   ]
  },
  "type": "function"
 },
 "ray.utils.set_kill_child_on_death_win32": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "OSError",
    "int",
    "isinstance",
    "ray.utils.ctypes",
    "ray.utils.detect_fate_sharing_support_win32",
    "ray.utils.subprocess",
    "ray.utils.win32_AssignProcessToJobObject",
    "ray.utils.win32_job"
   ]
  },
  "type": "function"
 },
 "ray.utils.set_kill_on_parent_death_linux": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "OSError",
    "ray.utils.ctypes",
    "ray.utils.detect_fate_sharing_support_linux",
    "ray.utils.linux_prctl",
    "ray.utils.signal"
   ]
  },
  "type": "function"
 },
 "ray.utils.set_sigterm_handler": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "ray.utils.signal",
    "ray.utils.sys"
   ]
  },
  "type": "function"
 },
 "ray.utils.setup_logger": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ray.utils._default_handler",
    "ray.utils.logger",
    "ray.utils.logging",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ray.utils.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "ray.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ray.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ray.utils.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "ray.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ray.utils.try_make_directory_shared": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "OSError",
    "ray.utils.errno",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils.try_to_create_directory": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ray.utils.os",
    "ray.utils.try_make_directory_shared"
   ]
  },
  "type": "function"
 },
 "ray.utils.try_to_symlink": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "OSError",
    "ray.utils.os"
   ]
  },
  "type": "function"
 },
 "ray.utils.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ray.utils.win32_AssignProcessToJobObject": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "ray.utils.win32_job": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ray.version": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "ray.version_info": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "ray.wait": {
  "data": {
   "shadows": "ray.worker.wait"
  },
  "type": "import"
 },
 "ray.workers": {
  "data": {},
  "type": "module"
 },
 "ray.workers.default_worker": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "int",
    "len",
    "ray.external_storage.setup_external_storage",
    "ray.parameter.RayParams",
    "ray.ray_constants.LOGGER_FORMAT",
    "ray.ray_constants.LOGGER_FORMAT_HELP",
    "ray.ray_constants.LOGGER_LEVEL",
    "ray.ray_constants.LOGGER_LEVEL_CHOICES",
    "ray.ray_constants.LOGGER_LEVEL_HELP",
    "ray.workers.default_worker.argparse",
    "ray.workers.default_worker.args",
    "ray.workers.default_worker.code_search_path",
    "ray.workers.default_worker.config_list",
    "ray.workers.default_worker.i",
    "ray.workers.default_worker.json",
    "ray.workers.default_worker.mode",
    "ray.workers.default_worker.node",
    "ray.workers.default_worker.object_spilling_config",
    "ray.workers.default_worker.os",
    "ray.workers.default_worker.p",
    "ray.workers.default_worker.parser",
    "ray.workers.default_worker.ray",
    "ray.workers.default_worker.ray_params",
    "ray.workers.default_worker.raylet_ip_address",
    "ray.workers.default_worker.sys",
    "ray.workers.default_worker.system_config",
    "ray.workers.default_worker.time",
    "str"
   ]
  },
  "type": "module"
 },
 "ray.workers.default_worker.RayParams": {
  "data": {
   "shadows": "ray.parameter.RayParams"
  },
  "type": "import"
 },
 "ray.workers.default_worker.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "ray.workers.default_worker.args": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "ray.workers.default_worker.code_search_path": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "ray.workers.default_worker.config_list": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "ray.workers.default_worker.external_storage": {
  "data": {
   "shadows": "ray.external_storage"
  },
  "type": "import"
 },
 "ray.workers.default_worker.i": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "ray.workers.default_worker.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ray.workers.default_worker.mode": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "ray.workers.default_worker.node": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "ray.workers.default_worker.object_spilling_config": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "ray.workers.default_worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ray.workers.default_worker.p": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "ray.workers.default_worker.parser": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ray.workers.default_worker.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "ray.workers.default_worker.ray.actor": {
  "data": {
   "shadows": "ray.actor"
  },
  "type": "import"
 },
 "ray.workers.default_worker.ray.node": {
  "data": {
   "shadows": "ray.node"
  },
  "type": "import"
 },
 "ray.workers.default_worker.ray.utils": {
  "data": {
   "shadows": "ray.utils"
  },
  "type": "import"
 },
 "ray.workers.default_worker.ray_constants": {
  "data": {
   "shadows": "ray.ray_constants"
  },
  "type": "import"
 },
 "ray.workers.default_worker.ray_params": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "ray.workers.default_worker.raylet_ip_address": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "ray.workers.default_worker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ray.workers.default_worker.system_config": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "ray.workers.default_worker.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}