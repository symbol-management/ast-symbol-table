{
 "tree": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "object",
    "tree.K",
    "tree.StructureKV",
    "tree.V",
    "tree._DotString",
    "tree.six",
    "tree.sys",
    "tree.typing_available",
    "tree.wrapt",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Text",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "tree.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "tree.K": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "tree.MAP_TO_NONE": {
  "data": {
   "lineno": 886
  },
  "type": "constant"
 },
 "tree.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "tree.ObjectProxy": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tree.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "tree.Structure": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "tree.StructureKV": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "tree.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "tree.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "tree.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "tree.V": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "tree._DOT": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "tree._DotString": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tree._DotString.__repr__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "tree._DotString.__str__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "tree._IF_SHALLOW_IS_SEQ_INPUT_MUST_BE_SEQ": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "tree._INPUT_TREE_SMALLER_THAN_SHALLOW_TREE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tree._SHALLOW_TREE_HAS_INVALID_KEYS": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tree._STRUCTURES_HAVE_MISMATCHING_LENGTHS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "tree._STRUCTURES_HAVE_MISMATCHING_TYPES": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "tree._TEXT_OR_BYTES": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "tree.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tree.__version__": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tree._assert_shallow_structure": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "get_matching_input_branch",
    "isinstance",
    "tree.ObjectProxy",
    "tree._IF_SHALLOW_IS_SEQ_INPUT_MUST_BE_SEQ",
    "tree._INPUT_TREE_SMALLER_THAN_SHALLOW_TREE",
    "tree._STRUCTURES_HAVE_MISMATCHING_LENGTHS",
    "tree._STRUCTURES_HAVE_MISMATCHING_TYPES",
    "tree._is_namedtuple",
    "tree._num_elements",
    "tree._tree.same_namedtuples",
    "tree._yield_sorted_items",
    "tree.collections",
    "tree.is_nested",
    "type"
   ]
  },
  "type": "function"
 },
 "tree._assert_shallow_structure.get_matching_input_branch": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "ValueError",
    "tree._SHALLOW_TREE_HAS_INVALID_KEYS"
   ]
  },
  "type": "function"
 },
 "tree._get_attrs_items": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tree._is_attrs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tree._tree.is_attrs"
   ]
  },
  "type": "function"
 },
 "tree._is_namedtuple": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tree._tree.is_namedtuple"
   ]
  },
  "type": "function"
 },
 "tree._num_elements": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "getattr",
    "len",
    "tree._is_attrs"
   ]
  },
  "type": "function"
 },
 "tree._packed_nest_with_indices": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "tree._sequence_like",
    "tree._yield_value",
    "tree.is_nested"
   ]
  },
  "type": "function"
 },
 "tree._sequence_like": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "instance_type",
    "isinstance",
    "list",
    "six.moves.zip",
    "tree.ObjectProxy",
    "tree._is_attrs",
    "tree._is_namedtuple",
    "tree._sorted",
    "tree.collections",
    "tree.six",
    "tree.types",
    "type"
   ]
  },
  "type": "function"
 },
 "tree._sorted": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tree._tree": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tree._yield_flat_up_to": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tree._TEXT_OR_BYTES",
    "tree._is_attrs",
    "tree._is_namedtuple",
    "tree._yield_sorted_items",
    "tree.collections"
   ]
  },
  "type": "function"
 },
 "tree._yield_sorted_items": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "isinstance",
    "tree._get_attrs_items",
    "tree._is_attrs",
    "tree._is_namedtuple",
    "tree._sorted",
    "tree.collections"
   ]
  },
  "type": "function"
 },
 "tree._yield_value": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_yield_sorted_items"
   ]
  },
  "type": "function"
 },
 "tree.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tree.assert_same_structure": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "map_structure",
    "str",
    "tree._DOT",
    "tree._tree.assert_same_structure",
    "type"
   ]
  },
  "type": "function"
 },
 "tree.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tree.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tree.flatten": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tree._tree.flatten"
   ]
  },
  "type": "function"
 },
 "tree.flatten_up_to": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "tree._assert_shallow_structure",
    "tree._yield_flat_up_to"
   ]
  },
  "type": "function"
 },
 "tree.flatten_with_path": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "list",
    "tree._yield_flat_up_to"
   ]
  },
  "type": "function"
 },
 "tree.flatten_with_path_up_to": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "list",
    "tree._assert_shallow_structure",
    "tree._yield_flat_up_to"
   ]
  },
  "type": "function"
 },
 "tree.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tree.is_nested": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tree._tree.is_sequence"
   ]
  },
  "type": "function"
 },
 "tree.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "tree.map_structure": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "func",
    "six.moves.map",
    "six.moves.zip",
    "tree.assert_same_structure",
    "tree.flatten",
    "tree.unflatten_as"
   ]
  },
  "type": "function"
 },
 "tree.map_structure_up_to": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "func",
    "map_structure_with_path_up_to"
   ]
  },
  "type": "function"
 },
 "tree.map_structure_with_path": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "func",
    "map_structure_with_path_up_to"
   ]
  },
  "type": "function"
 },
 "tree.map_structure_with_path_up_to": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "six.moves.zip",
    "tree._assert_shallow_structure",
    "tree._yield_flat_up_to",
    "tree.flatten_up_to",
    "tree.unflatten_as"
   ]
  },
  "type": "function"
 },
 "tree.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tree.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tree.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tree.traverse": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "fn",
    "traverse_subtrees",
    "tree.MAP_TO_NONE"
   ]
  },
  "type": "function"
 },
 "tree.traverse.traverse_subtrees": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "six.moves.map",
    "tree._sequence_like",
    "tree._yield_value",
    "tree.functools",
    "tree.is_nested",
    "tree.traverse"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tree.tree_benchmark.benchmark_map",
    "tree.tree_benchmark.collections",
    "tree.tree_benchmark.main",
    "tree.tree_benchmark.map_to_list",
    "tree.tree_benchmark.tree"
   ]
  },
  "type": "module"
 },
 "tree.tree_benchmark.BENCHMARKS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tree.tree_benchmark.TIME_UNITS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tree.tree_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tree.tree_benchmark.benchmark_map": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tree.tree_benchmark.benchmark_map.benchmark_fn": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "map_fn"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tree.tree_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tree.tree_benchmark.format_time": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tree.tree_benchmark.TIME_UNITS"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark.main": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "print",
    "tree.tree_benchmark.BENCHMARKS",
    "tree.tree_benchmark.format_time",
    "tree.tree_benchmark.run_benchmark"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark.map_to_list": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tree.tree_benchmark.run_benchmark": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tree.tree_benchmark.timeit"
   ]
  },
  "type": "function"
 },
 "tree.tree_benchmark.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "tree.tree_benchmark.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "tree.tree_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tree.tree_test.unittest"
   ]
  },
  "type": "module"
 },
 "tree.tree_test.DoctestTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.DoctestTest.testDoctest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tree.tree_test.doctest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "tree.tree_test.collections"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.SameNamedType1": {
  "data": {
   "lineno": 261
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.assertAllEquals": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "bytearray",
    "numpy.array",
    "tree.tree_test.STRUCTURE1",
    "tree.tree_test.STRUCTURE2",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_classWrappingNamedTuple": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_dictionaryDifferentKeys": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_differentNameNamedStructures": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_differentNamedTuples": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_differentNesting": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.STRUCTURE1",
    "tree.tree_test.STRUCTURE_DIFFERENT_NESTING",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_differentNumElements": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.STRUCTURE1",
    "tree.tree_test.STRUCTURE_DIFFERENT_NUM_ELEMENTS",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_differentlyNestedLists": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_intVsList": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_listStructureWithAndWithoutTypes": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.STRUCTURE1",
    "tree.tree_test.STRUCTURE2",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_listVsNdArray": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNameDifferentFieldNames": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNameNamedTuples": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNameNamedTuplesDifferentStructure": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNameNamedTuplesNested": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNamedTupleDifferentContents": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_sameNamedTupleDifferentStructuredContents": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_tupleVsList": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertSameStructure_tupleVsNamedTuple": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.NestTest",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAssertShallowStructure": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "tree.tree_test.collections",
    "tree.tree_test.tree",
    "type"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAttrsFlattenAndUnflatten": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "BadAttr",
    "SampleAttr",
    "TypeError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAttrsFlattenAndUnflatten.BadAttr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.testAttrsFlattenAndUnflatten.SampleAttr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object",
    "tree.tree_test.attr"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.testAttrsMapStructure": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "SampleAttr",
    "absl.testing.parameterized.parameters",
    "tree.tree_test.collections",
    "tree.tree_test.tree",
    "tree.tree_test.wrapt"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testAttrsMapStructure.SampleAttr": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object",
    "tree.tree_test.attr"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.testByteStringsNotTreatedAsIterable": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenAndUnflatten": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "point",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenAndUnflatten_withDicts": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "list",
    "named_tuple",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenDictOrder": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenUpTo": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ABAttr",
    "TypeError",
    "ab_tuple",
    "tree.tree_test.collections",
    "tree.tree_test.tree",
    "type"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenUpTo.ABAttr": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "object",
    "tree.tree_test.attr"
   ]
  },
  "type": "class"
 },
 "tree.tree_test.NestTest.testFlattenWithPath": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "Bar",
    "Foo",
    "absl.testing.parameterized.parameters",
    "dict",
    "tree.tree_test.tree",
    "tree.tree_test.wrapt"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenWithPathUpTo": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "ab_tuple",
    "get_paths_and_values",
    "len",
    "tree.tree_test.collections",
    "tree.tree_test.tree",
    "type"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlattenWithPathUpTo.get_paths_and_values": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlatten_bytearrayIsNotFlattened": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bytearray",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlatten_numpyIsNotFlattened": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testFlatten_stringIsNotFlattened": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testIsSequence": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bytearray",
    "numpy.ones",
    "numpy.tanh",
    "set",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapStructure": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "empty_nt",
    "tree.tree_test.STRUCTURE1",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapStructureUpTo": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "ab_tuple",
    "len",
    "op_tuple",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapStructureWithStrings": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ab_tuple",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapWithPathCompatibleStructures": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "dict",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapWithPathCompatibleStructures.path_and_sum": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMapWithPathIncompatibleStructures": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "dict",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testMappingProxyType": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "tree.tree_test.six",
    "tree.tree_test.tree",
    "tree.tree_test.types"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testTraverseEarlyTermination": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testTraverseEarlyTermination.visit": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testTraverseListsToTuples": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tree.tree_test.tree",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testUnflattenDictOrder": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testUnflattenSequenceAs_defaultdict": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "list",
    "tree.tree_test.collections",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testUnflattenSequenceAs_notIterableError": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "TypeError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.NestTest.testUnflattenSequenceAs_wrongLengthsError": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "tree.tree_test.tree"
   ]
  },
  "type": "function"
 },
 "tree.tree_test.STRUCTURE1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tree.tree_test.STRUCTURE2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tree.tree_test.STRUCTURE_DIFFERENT_NESTING": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tree.tree_test.STRUCTURE_DIFFERENT_NUM_ELEMENTS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tree.tree_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tree.tree_test.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "tree.tree_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tree.tree_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tree.tree_test.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "tree.tree_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tree.tree_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "tree.tree_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tree.tree_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tree.tree_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "tree.tree_test.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "tree.tree_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tree.tree_test.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "tree.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "tree.typing_available": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tree.unflatten_as": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "tree._packed_nest_with_indices",
    "tree._sequence_like",
    "tree.flatten",
    "tree.is_nested",
    "type"
   ]
  },
  "type": "function"
 },
 "tree.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "tree.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 }
}