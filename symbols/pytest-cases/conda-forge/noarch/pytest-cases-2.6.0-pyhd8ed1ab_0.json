{
 "pytest_cases": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.pardir",
   "setuptools_scm.get_version"
  ],
  "type": "module"
 },
 "pytest_cases._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.case_funcs_legacy": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "pytest_cases.case_funcs_legacy.case_name": {
  "lineno": 25,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.case_tags": {
  "lineno": 48,
  "symbols_in_volume": [
   "decopatch.function_decorator",
   "decopatch.with_parenthesis",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.case_tags._apply": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.cases_generator": {
  "lineno": 104,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator",
   "functools32.lru_cache",
   "itertools.product",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.get_case_generator_details": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.is_case_generator": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.test_target": {
  "lineno": 70,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_new": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.case_funcs_new.CaseInfo": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.case_funcs_new.CaseInfo.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.__repr__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.add_tags": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.attach_to": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.copy_info": {
  "lineno": 110,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.get_from": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.CaseInfo.matches_tag_query": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.case": {
  "lineno": 164,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator"
  ],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.is_case_class": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.is_case_function": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_funcs_new.matches_tag_query": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest_cases.case_funcs_legacy.CaseData",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "module"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__repr__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__str__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.get": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.get_marks": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get": {
  "lineno": 54,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get_for": {
  "lineno": 69,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get_marks": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException.__init__": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException.__str__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s.__get_case_getter_s": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s.__get_case_getter_s.names": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.cases_data": {
  "lineno": 139,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator",
   "decopatch.with_parenthesis",
   "pytest.mark.parametrize",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.cases_fixture": {
  "lineno": 408,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.get_all_cases_legacy": {
  "lineno": 241,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.get_pytest_parametrize_args_legacy": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new": {
  "lineno": null,
  "symbols_in_volume": [
   "types.ModuleType",
   "typing.Literal",
   "typing.Union"
  ],
  "type": "module"
 },
 "pytest_cases.case_parametrizer_new.CasesCollectionWarning": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.case_parametrizer_new._extract_cases_from_module_or_class": {
  "lineno": 557,
  "symbols_in_volume": [
   "functools.partial",
   "inspect.getmembers"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new._extract_cases_from_module_or_class._of_interest": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new._get_fixture_cases": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.case_to_argvalues": {
  "lineno": 268,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.create_glob_name_filter": {
  "lineno": 125,
  "symbols_in_volume": [
   "re.compile",
   "re.escape"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.create_glob_name_filter._glob_name_filter": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.extract_cases_from_class": {
  "lineno": 489,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.extract_cases_from_module": {
  "lineno": 531,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_all_cases": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_or_create_case_fixture": {
  "lineno": 324,
  "symbols_in_volume": [
   "functools.partial",
   "inspect.getmembers",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_or_create_case_fixture.funcopy": {
  "lineno": 389,
  "symbols_in_volume": [
   "makefun.partial"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_or_create_case_fixture.name_changer": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_parametrize_args": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.hasinit": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.hasnew": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.import_default_cases_module": {
  "lineno": 440,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.parametrize_with_cases": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.parametrize_with_cases._apply_parametrization": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_mini_six": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "pytest_cases.common_mini_six.with_metaclass": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass.__new__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass.__prepare__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional",
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "pytest_cases.common_others.AssertException": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_others.AssertException.__enter__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others.AssertException.__exit__": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others.AssertException.__init__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others.ExceptionCheckingError": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_others.assert_exception": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others.get_class_that_defined_method": {
  "lineno": 231,
  "symbols_in_volume": [
   "functools.partial",
   "inspect.getmodule",
   "inspect.getmro",
   "inspect.isbuiltin",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "pytest_cases.common_others.get_code_first_line": {
  "lineno": 19,
  "symbols_in_volume": [
   "inspect.findsource"
  ],
  "type": "function"
 },
 "pytest_cases.common_others.get_function_host": {
  "lineno": 216,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pytest_cases.common_others.qname": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_others.unfold_expected_err": {
  "lineno": 55,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.__version__"
  ],
  "type": "module"
 },
 "pytest_cases.common_pytest.MiniFuncDef": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest.MiniFuncDef.__init__": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc": {
  "lineno": 544,
  "symbols_in_volume": [
   "_pytest.python.Metafunc"
  ],
  "type": "class"
 },
 "pytest_cases.common_pytest.MiniMetafunc.__init__": {
  "lineno": 546,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.is_parametrized": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.requires_fixtures": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.update_callspecs": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.ParameterSet": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest._cart_product_pytest": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.analyze_parameter_set": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.assert_is_fixture": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.cart_product_pytest": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.combine_ids": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.extract_parameterset_info": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.extract_pset_info_single": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_callspecs": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_fixture_name": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_fixture_scope": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_id": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_marks": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_values": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_param_names": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_parametrization_markers": {
  "lineno": 167,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_function_scopenum": {
  "lineno": 446,
  "symbols_in_volume": [
   "_pytest.python.scopes.index"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_nodeid": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_scopenum": {
  "lineno": 442,
  "symbols_in_volume": [
   "_pytest.python.scopes.index"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.getfuncargnames": {
  "lineno": 512,
  "symbols_in_volume": [
   "funcsigs.Parameter.KEYWORD_ONLY",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Parameter.empty",
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.inject_host": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.inject_host.apply": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.is_fixture": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.is_function_node": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.is_marked_parameter_value": {
  "lineno": 412,
  "symbols_in_volume": [
   "_pytest.mark.MarkDecorator"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.make_test_ids": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.make_test_ids_from_param_values": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.mini_idval": {
  "lineno": 468,
  "symbols_in_volume": [
   "_pytest.python._idval"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.mini_idvalset": {
  "lineno": 484,
  "symbols_in_volume": [
   "_pytest.python._idval"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.num_mock_patch_args": {
  "lineno": 498,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.pytest_fixture": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.pytest_fixture._decorate": {
  "lineno": 44,
  "symbols_in_volume": [
   "inspect.isgeneratorfunction",
   "pytest.fixture",
   "pytest.yield_fixture"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest.remove_duplicates": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.resolve_ids": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest.safe_isclass": {
  "lineno": 84,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.__version__"
  ],
  "type": "module"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__eq__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__name__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__repr__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__str__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.clone": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.copy_from": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.get": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.get_id": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__getitem__": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__init__": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__len__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.cached_value": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.copy_from": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.force_getitem": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.get": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.get_id": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.has_cached_value": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTupleItem": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTupleItem.clone": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyValue": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyValue.clone": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.__init__": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.__repr__": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.copy_from": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.get": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.get_id": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.as_lazy_items_list": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.as_lazy_tuple": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.copy_from": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get": {
  "lineno": 203,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get_id": {
  "lineno": 185,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get_marks": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.has_cached_value": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__getattribute__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__new__": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__repr__": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._unwrap": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.get_lazy_args": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.is_lazy": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.is_lazy_value": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.lazy_value": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.partial_to_str": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest"
  ],
  "type": "module"
 },
 "pytest_cases.common_pytest_marks._LegacyMark": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_marks._LegacyMark.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks._ParametrizationMark": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.common_pytest_marks._ParametrizationMark.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks._pytest_mark_parametrize": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.copy_pytest_marks": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_param_argnames_as_list": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_parametrize_signature": {
  "lineno": 37,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_pytest_marks_on_function": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_pytest_parametrize_marks": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.make_marked_parameter_value": {
  "lineno": 177,
  "symbols_in_volume": [
   "pytest.param"
  ],
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.transform_marks_into_decorators": {
  "lineno": 188,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.__version__",
   "pytest.mark.MarkDecorator",
   "warnings.catch_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.fixture__creation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError.__str__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture__creation._get_callerframe": {
  "lineno": 104,
  "symbols_in_volume": [
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "pytest_cases.fixture__creation.check_name_available": {
  "lineno": 37,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.fixture__creation.check_name_available.name_changer": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture__creation.get_caller_module": {
  "lineno": 92,
  "symbols_in_volume": [
   "inspect.getmodule"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList.__init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList.__str__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.__repr__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.to_list_of_fixture_names": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.compact": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.explicit": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.get": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.nostyle": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._NotUsed": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions._NotUsed.__repr__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._fixture_union": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._fixture_union._new_fixture": {
  "lineno": 327,
  "symbols_in_volume": [
   "makefun.with_signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture._create_fixture": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture._create_fixture._param_fixture": {
  "lineno": 443,
  "symbols_in_volume": [
   "makefun.with_signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.fixture_union": {
  "lineno": 207,
  "symbols_in_volume": [
   "pytest.param",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.ignore_unused": {
  "lineno": 158,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.signature",
   "inspect.isgeneratorfunction",
   "makefun.add_signature_parameters"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.ignore_unused.wrapped_fixture_func": {
  "lineno": 195,
  "symbols_in_volume": [
   "makefun.wraps"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.is_fixture_union_params": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.is_used_request": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.unpack_fixture": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.fixture_core2._create_param_fixture": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_param_fixture.__param_fixture": {
  "lineno": 118,
  "symbols_in_volume": [
   "makefun.with_signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._create_fixture": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._create_fixture._param_fixture": {
  "lineno": 234,
  "symbols_in_volume": [
   "makefun.with_signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._root_fixture": {
  "lineno": 215,
  "symbols_in_volume": [
   "makefun.with_signature",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus": {
  "lineno": 321,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.signature",
   "inspect.isgeneratorfunction",
   "itertools.product",
   "makefun.add_signature_parameters",
   "makefun.remove_signature_parameters",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus._map_arguments": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus.wrapped_fixture_func": {
  "lineno": 494,
  "symbols_in_volume": [
   "makefun.wraps"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2.fixture_plus": {
  "lineno": 274,
  "symbols_in_volume": [
   "decopatch.DECORATED",
   "decopatch.function_decorator"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2.param_fixture": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2.param_fixtures": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_core2.pytest_fixture_plus": {
  "lineno": 260,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_core2.pytest_fixture_plus._fixture_plus": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative.__init__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__init__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__repr__": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__str__": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.__init__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.argnames_str": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamIdMakers": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ParamIdMakers.explicit": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamIdMakers.get": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ProductParamAlternative": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ProductParamAlternative.__init__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative.__init__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative.get_id": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product._new_fixture": {
  "lineno": 98,
  "symbols_in_volume": [
   "makefun.with_signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product._tuple_generator": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._gen_ids": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._gen_ids.gen_id_using_str_formatter": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._get_argnames_argvalues": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus": {
  "lineno": 378,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._apply": {
  "lineno": 442,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_fixture_ref_alt": {
  "lineno": 555,
  "symbols_in_volume": [
   "pytest.param"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_fixture_ref_product": {
  "lineno": 571,
  "symbols_in_volume": [
   "pytest.param"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_params_alt": {
  "lineno": 491,
  "symbols_in_volume": [
   "pytest.param"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._make_idfun_for_params": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._make_idfun_for_params._tmp_make_id": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._make_ids": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate": {
  "lineno": 603,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.signature",
   "inspect.isgeneratorfunction",
   "makefun.add_signature_parameters",
   "makefun.remove_signature_parameters"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate.replace_paramfixture_with_values": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate.wrapped_test_func": {
  "lineno": 764,
  "symbols_in_volume": [
   "makefun.wraps"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._process_argvalues": {
  "lineno": 871,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__init__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__repr__": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.parametrize_plus": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.parametrize_plus._apply_parametrize_plus": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.pytest_parametrize_plus": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cases.plugin.CallsReactor": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.plugin.CallsReactor.__getitem__": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.__init__": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.__iter__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.append": {
  "lineno": 796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.calls_list": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.create_call_list_from_pending_parametrizations": {
  "lineno": 828,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.print_parametrization_list": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.plugin.FixtureClosureNode.__init__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.__repr__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode._build_closure": {
  "lineno": 243,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode._get_alternatives": {
  "lineno": 443,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.add_required_fixture": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.already_knows_fixture": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.build_closure": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.gather_all_required": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.gen_all_fixture_defs": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_defs": {
  "lineno": 175,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "distutils.version.LooseVersion",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_defs.sort_by_scope": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_names": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_alternatives": {
  "lineno": 426,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_leaves": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_not_always_used": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.has_split": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.is_closure_built": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.requires": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.split_and_build": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.to_str": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureDefsCache": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cases.plugin.FixtureDefsCache.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.FixtureDefsCache.get_fixture_defs": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.NormalParamz": {
  "lineno": 718,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pytest_cases.plugin.NormalParamz.__str__": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure": {
  "lineno": 464,
  "symbols_in_volume": [
   "collections.MutableSequence"
  ],
  "type": "class"
 },
 "pytest_cases.plugin.SuperClosure.__delitem__": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__getitem__": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__init__": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__len__": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__repr__": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__setitem__": {
  "lineno": 546,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.get_all_fixture_defs": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.insert": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.nb_alternative_closures": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.remove": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.UnionParamz": {
  "lineno": 707,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pytest_cases.plugin.UnionParamz.__str__": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin._cleanup_calls_list": {
  "lineno": 879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin._parametrize_calls": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin._process_node": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.create_super_closure": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.create_super_closure._merge": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.flatten_list": {
  "lineno": 1224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.get_calls_for_tree": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.getfixtureclosure": {
  "lineno": 595,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.parametrize": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_addoption": {
  "lineno": 1265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_collection": {
  "lineno": 69,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_collection_modifyitems": {
  "lineno": 1284,
  "symbols_in_volume": [
   "copy.copy",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_configure": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_generate_tests": {
  "lineno": 693,
  "symbols_in_volume": [
   "functools.partial",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.pytest_runtest_setup": {
  "lineno": 56,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "pytest_cases.plugin.sort_according_to_ref_list": {
  "lineno": 1228,
  "symbols_in_volume": [],
  "type": "function"
 }
}