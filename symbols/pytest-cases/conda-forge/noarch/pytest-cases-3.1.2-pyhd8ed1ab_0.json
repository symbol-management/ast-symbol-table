{
 "pytest_cases": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "os.path.dirname",
    "os.path.join",
    "os.path.pardir",
    "pytest_cases.__all__",
    "setuptools_scm.get_version"
   ]
  },
  "type": "module"
 },
 "pytest_cases.AUTO2": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pytest_cases.CaseData": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.CaseData"
  },
  "type": "import"
 },
 "pytest_cases.ExpectedError": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.ExpectedError"
  },
  "type": "import"
 },
 "pytest_cases.ExpectedNormal": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.ExpectedNormal"
  },
  "type": "import"
 },
 "pytest_cases.Given": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.Given"
  },
  "type": "import"
 },
 "pytest_cases.MultipleStepsCaseData": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.MultipleStepsCaseData"
  },
  "type": "import"
 },
 "pytest_cases.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pytest_cases.__version__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pytest_cases._gv": {
  "data": {
   "shadows": "setuptools_scm.get_version"
  },
  "type": "import"
 },
 "pytest_cases._path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pytest_cases._version": {
  "data": {},
  "type": "module"
 },
 "pytest_cases._version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pytest_cases._version.version_tuple": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pytest_cases.case_funcs_legacy.ExpectedNormal",
    "pytest_cases.case_funcs_legacy.Given",
    "pytest_cases.case_funcs_legacy.test_target",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pytest_cases.case_funcs_legacy.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.CaseData": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy.DECORATED": {
  "data": {
   "shadows": "decopatch.DECORATED"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.ExpectedNormal": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy.Given": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.MultipleStepsCaseData": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy._GENERATOR_FIELD": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_legacy.case_name": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DeprecationWarning",
    "decopatch.DECORATED",
    "decopatch.function_decorator",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.case_tags": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "DeprecationWarning",
    "decopatch.function_decorator",
    "decopatch.with_parenthesis",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.case_tags._apply": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "case"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.cases_generator": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "DeprecationWarning",
    "decopatch.DECORATED",
    "decopatch.function_decorator",
    "functools32.lru_cache",
    "itertools.product",
    "len",
    "list",
    "pytest_cases.case_funcs_legacy._GENERATOR_FIELD",
    "setattr",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.function_decorator": {
  "data": {
   "shadows": "decopatch.function_decorator"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.get_case_generator_details": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "getattr",
    "pytest_cases.case_funcs_legacy._GENERATOR_FIELD"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.is_case_generator": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "hasattr",
    "pytest_cases.case_funcs_legacy._GENERATOR_FIELD"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.lru": {
  "data": {
   "shadows": "functools32.lru_cache"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.test_target": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pytest_cases.case_funcs_legacy.case_tags",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_legacy.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_legacy.with_parenthesis": {
  "data": {
   "shadows": "decopatch.with_parenthesis"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pytest_cases.case_funcs_new.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.CASE_FIELD": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_new.CASE_PREFIX_CLS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_new.CASE_PREFIX_FUN": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_new.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.DECORATED": {
  "data": {
   "shadows": "decopatch.DECORATED"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.GEN_BY_US": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "pytest_cases.case_funcs_new.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Mark": {
  "data": {
   "shadows": "_pytest.mark.structures.Mark"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.structures.MarkDecorator"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new._CaseInfo": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.case_funcs_new._CaseInfo.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.__repr__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.add_tags": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.attach_to": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pytest_cases.case_funcs_new.CASE_FIELD",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.copy_info": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "classmethod",
    "cls.get_from",
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.get_from": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "getattr",
    "pytest_cases.case_funcs_new.CASE_FIELD"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._CaseInfo.matches_tag_query": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_tags_match_query"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new._tags_match_query": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.case": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "decopatch.DECORATED",
    "decopatch.function_decorator",
    "id",
    "markdecorators_as_tuple",
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.copy_case_info": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.function_decorator": {
  "data": {
   "shadows": "decopatch.function_decorator"
  },
  "type": "import"
 },
 "pytest_cases.case_funcs_new.get_case_id": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "pytest_cases.case_funcs_new.CASE_PREFIX_FUN",
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.get_case_marks": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "get_pytest_marks_on_function",
    "markdecorators_to_markinfos",
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.get_case_tags": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.is_case_class": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "pytest_cases.case_funcs_new.CASE_PREFIX_CLS",
    "safe_isclass"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.is_case_function": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "callable",
    "hasattr",
    "pytest_cases.case_funcs_new.CASE_PREFIX_FUN",
    "pytest_cases.case_funcs_new.GEN_BY_US",
    "safe_isclass"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.matches_tag_query": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "_filter",
    "_tags_match_query",
    "filter",
    "isinstance",
    "list",
    "pytest_cases.case_funcs_new.get_case_tags",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_funcs_new.set_case_id": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "id",
    "pytest_cases.case_funcs_new._CaseInfo"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pytest_cases.case_funcs_legacy.CaseData",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "pytest_cases.case_parametrizer_legacy.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.CaseData": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.CaseData"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pytest_cases.case_parametrizer_legacy.CaseDataGetter"
   ]
  },
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__repr__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.__str__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.get": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction.get_marks": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "get_pytest_marks_on_function"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "with_metaclass"
   ]
  },
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get_for": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DeprecationWarning",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseDataGetter.get_marks": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.CaseFunc": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_legacy.DECORATED": {
  "data": {
   "shadows": "decopatch.DECORATED"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.ExpectedError": {
  "data": {
   "shadows": "pytest_cases.case_funcs_legacy.ExpectedError"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.GeneratedCaseFunc": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException.__str__": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "filter"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s.__get_case_getter_s": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "enumerate",
    "filter",
    "get_case_generator_details",
    "is_case_generator",
    "isinstance",
    "len",
    "matches_tag_query",
    "names",
    "pytest_cases.case_parametrizer_legacy.CaseDataFromFunction",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy._get_case_getter_s.__get_case_getter_s.names": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "Exception",
    "pytest_cases.case_parametrizer_legacy.InvalidNamesTemplateException"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.cases_data": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "DeprecationWarning",
    "decopatch.DECORATED",
    "decopatch.function_decorator",
    "decopatch.with_parenthesis",
    "filter",
    "get_all_cases_legacy",
    "get_pytest_parametrize_args_legacy",
    "parametrizer",
    "pytest_cases.case_parametrizer_legacy.pytest",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.cases_fixture": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "DeprecationWarning",
    "decopatch.DECORATED",
    "decopatch.function_decorator",
    "filter",
    "fixture_plus",
    "pytest_cases.case_parametrizer_legacy.cases_data",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.function_decorator": {
  "data": {
   "shadows": "decopatch.function_decorator"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.get_all_cases_legacy": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_facto",
    "_get_case_getter_s",
    "callable",
    "extract_cases_from_module",
    "filter",
    "pytest_cases.case_parametrizer_legacy.sys"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.get_pytest_parametrize_args_legacy": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len",
    "make_marked_parameter_value",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_legacy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_legacy.with_parenthesis": {
  "data": {
   "shadows": "decopatch.with_parenthesis"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "NameError",
    "object",
    "pytest_cases.case_parametrizer_new.THIS_MODULE",
    "str",
    "types.ModuleType",
    "typing.Literal",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pytest_cases.case_parametrizer_new.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.CasesCollectionWarning": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pytest_cases.case_parametrizer_new.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.Literal": {
  "data": {
   "shadows": "typing.Literal"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.ModuleNotFoundError": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_new.ModuleRef": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_new.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.THIS_MODULE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_new.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new._HOST_CLS_ATTR": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pytest_cases.case_parametrizer_new._extract_cases_from_module_or_class": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_case_param_factory",
    "classmethod",
    "cls",
    "copy_case_info",
    "copy_pytest_marks",
    "dict",
    "enumerate",
    "get_code_first_line",
    "inspect.getmembers",
    "is_case_class",
    "is_case_function",
    "isinstance",
    "len",
    "pytest_cases.case_parametrizer_new._HOST_CLS_ATTR",
    "pytest_cases.case_parametrizer_new.extract_cases_from_class",
    "pytest_cases.case_parametrizer_new.functools",
    "setattr",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new._extract_cases_from_module_or_class._of_interest": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new._get_fixture_cases": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "AttributeError",
    "dict"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new._get_original_case_func": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "hasattr",
    "pytest_cases.case_parametrizer_new._HOST_CLS_ATTR"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.case_to_argvalues": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "MiniMetafunc",
    "fixture_ref",
    "get_case_id",
    "get_case_marks",
    "get_or_create_case_fixture",
    "isinstance",
    "lazy_value",
    "make_marked_parameter_value",
    "print",
    "pytest_cases.case_parametrizer_new.functools",
    "qname"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.create_glob_name_filter": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pytest_cases.case_parametrizer_new.re"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.create_glob_name_filter._glob_name_filter": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "get_case_id"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.extract_cases_from_class": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_extract_cases_from_module_or_class",
    "is_case_class",
    "pytest_cases.case_parametrizer_new.CasesCollectionWarning",
    "pytest_cases.case_parametrizer_new.hasinit",
    "pytest_cases.case_parametrizer_new.hasnew",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.extract_cases_from_module": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "_extract_cases_from_module_or_class",
    "importlib.import_module",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.get_all_cases": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "extract_cases_from_class",
    "extract_cases_from_module",
    "filter",
    "getattr",
    "import_default_cases_module",
    "is_case_function",
    "isinstance",
    "matches_tag_query",
    "pytest_cases.case_parametrizer_new.THIS_MODULE",
    "pytest_cases.case_parametrizer_new.create_glob_name_filter",
    "safe_isclass",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_or_create_case_fixture": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_get_fixture_cases",
    "add_fixture_params",
    "check_name_available",
    "filter_marks",
    "fixture",
    "funcopy",
    "get_case_marks",
    "get_fixture_name",
    "inspect.getmembers",
    "inspect.isfunction",
    "inspect.ismethod",
    "is_fixture",
    "print",
    "pytest_cases.case_parametrizer_new._get_original_case_func",
    "qname",
    "remove_pytest_mark",
    "safe_isclass",
    "setattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_or_create_case_fixture.name_changer": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.get_parametrize_args": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "case_to_argvalues"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.getmembers": {
  "data": {
   "shadows": "inspect.getmembers"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.hasinit": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "getattr",
    "object.__init__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.hasnew": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "getattr",
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.import_default_cases_module": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "importlib.import_module",
    "pytest_cases.case_parametrizer_new.ModuleNotFoundError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.parametrize_with_cases": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.parametrize_with_cases._apply_parametrization": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "_get_original_case_func",
    "_parametrize_plus",
    "_parametrize_with_cases",
    "filter",
    "get_all_cases",
    "get_parametrize_args",
    "ids",
    "iter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.case_parametrizer_new.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pytest_cases.case_parametrizer_new.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.common_mini_six": {
  "data": {
   "symbols_in_volume": [
    "pytest_cases.common_mini_six.PY3",
    "pytest_cases.common_mini_six.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "pytest_cases.common_mini_six.PY3": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pytest_cases.common_mini_six.PY34": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pytest_cases.common_mini_six.string_types": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pytest_cases.common_mini_six.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_cases.common_mini_six.with_metaclass": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass.__new__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_mini_six.with_metaclass.metaclass.__prepare__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "meta.__prepare__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "bool",
    "object",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pytest_cases.common_others.AUTO": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "pytest_cases.common_others.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.common_others.AssertException": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_others.AssertException.__enter__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pytest_cases.common_others.AssertException.__exit__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "pytest_cases.common_others.ExceptionCheckingError",
    "repr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.AssertException.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pytest_cases.common_others.unfold_expected_err"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.common_others.ExceptionCheckingError": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_others.ExpectedError": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pytest_cases.common_others.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.common_others.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.common_others.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.common_others.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.common_others.assert_exception": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "AssertException"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.findsource": {
  "data": {
   "shadows": "inspect.findsource"
  },
  "type": "import"
 },
 "pytest_cases.common_others.funcopy": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pytest_cases.common_others.makefun"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pytest_cases.common_others.get_class_that_defined_method": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pytest_cases.common_others.functools",
    "pytest_cases.common_others.inspect",
    "qname",
    "type"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.get_code_first_line": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "inspect.findsource"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.get_function_host": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "get_class_that_defined_method",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "pytest_cases.common_others.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pytest_cases.common_others.isidentifier": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "AttributeError",
    "pytest_cases.common_others.re"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.make_identifier": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "pytest_cases.common_others.isidentifier",
    "pytest_cases.common_others.re"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.makefun": {
  "data": {
   "shadows": "makefun"
  },
  "type": "import"
 },
 "pytest_cases.common_others.qname": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pytest_cases.common_others.robust_isinstance": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_others.unfold_expected_err": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "ValueError",
    "callable",
    "isinstance",
    "issubclass",
    "pytest_cases.common_others.re",
    "type"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict"
   ]
  },
  "type": "module"
 },
 "pytest_cases.common_pytest.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.Metafunc": {
  "data": {
   "shadows": "_pytest.python.Metafunc"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.MiniFuncDef": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest.MiniFuncDef.__init__": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "_pytest.python.Metafunc"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest.MiniMetafunc.__init__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "_pytest.compat.getfuncargnames",
    "get_pytest_parametrize_marks",
    "get_pytest_usefixture_marks",
    "list",
    "pytest_cases.common_pytest.MiniFuncDef",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.is_parametrized": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.requires_fixtures": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.MiniMetafunc.update_callspecs": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "_pytest.mark.MarkDecorator",
    "len",
    "list",
    "pytest_cases.common_pytest.is_marked_parameter_value",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.ParameterSet": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest._cart_product_pytest": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "ValueError",
    "is_lazy_value",
    "len",
    "list",
    "pytest_cases.common_pytest.extract_pset_info_single"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest._idval": {
  "data": {
   "shadows": "_pytest.python._idval"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest._idval_kwargs": {
  "data": {
   "lineno": 501
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest.add_fixture_params": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ValueError",
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.signature",
    "inspect.isgeneratorfunction",
    "makefun.add_signature_parameters"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.add_fixture_params.wrapped_func": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "func",
    "makefun.wraps"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.add_signature_parameters": {
  "data": {
   "shadows": "makefun.add_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.assert_is_fixture": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "pytest_cases.common_pytest.is_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.cart_product_pytest": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "_cart_product_pytest",
    "get_param_argnames_as_list",
    "len",
    "make_marked_parameter_value",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.combine_ids": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.extract_parameterset_info": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "extract_pset_info_single",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.extract_pset_info_single": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "get_marked_parameter_id",
    "get_marked_parameter_marks",
    "get_marked_parameter_values",
    "is_marked_parameter_value"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_callspecs": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "func",
    "pytest_cases.common_pytest.MiniMetafunc"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_fixture_name": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "pytest_cases.common_pytest.assert_is_fixture",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_fixture_scope": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pytest_cases.common_pytest.assert_is_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_id": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_marks": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_marked_parameter_values": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_param_names": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "get_param_argnames_as_list",
    "pytest_cases.common_pytest.get_parametrization_markers"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_parametrization_markers": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_function_scopenum": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "_pytest.python.scopes.index"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_nodeid": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.get_pytest_scopenum": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "_pytest.python.scopes.index"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.getfuncargnames": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "funcsigs.signature",
    "hasattr",
    "isinstance",
    "pytest_cases.common_pytest.num_mock_patch_args",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.inject_host": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.inject_host.apply": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "apply_decorator",
    "get_function_host"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.is_fixture": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.is_function_node": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.is_marked_parameter_value": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "_pytest.mark.MarkDecorator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.make_test_ids": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "make_test_ids_from_param_values",
    "resolve_ids"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.make_test_ids_from_param_values": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "mini_idvalset"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.mini_idval": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "_pytest.python._idval",
    "pytest_cases.common_pytest._idval_kwargs"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.mini_idvalset": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "_pytest.python._idval",
    "is_lazy",
    "len",
    "pytest_cases.common_pytest._idval_kwargs",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.num_mock_patch_args": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "getattr",
    "len",
    "object",
    "pytest_cases.common_pytest.sys"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.pt_scopes": {
  "data": {
   "shadows": "_pytest.python.scopes"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.pytest_fixture": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.pytest_fixture._decorate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "hook",
    "inspect.isgeneratorfunction",
    "pytest_cases.common_pytest.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.remove_duplicates": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.resolve_ids": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "id",
    "ids",
    "iter",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.safe_isclass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "inspect.isclass"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest.wraps": {
  "data": {
   "shadows": "makefun.wraps"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "int"
   ]
  },
  "type": "module"
 },
 "pytest_cases.common_pytest_lazy_values.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__eq__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "all",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__name__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__repr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.__str__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.clone": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.copy_from": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.get": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.Lazy.get_id": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values.Lazy"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__getitem__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "IndexError",
    "LazyTupleItem"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__init__": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.__len__": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.cached_value": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.copy_from": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.force_getitem": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.get": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.get_id": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTuple.has_cached_value": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTupleItem": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values._LazyTupleItem",
    "pytest_cases.common_pytest_lazy_values._LazyValueBase"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyTupleItem.clone": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values._LazyTupleItem"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.LazyValue": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values._LazyValue",
    "pytest_cases.common_pytest_lazy_values._LazyValueBase"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values.LazyValue.clone": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values._LazyValue"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Mark": {
  "data": {
   "shadows": "_pytest.mark.structures.Mark"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.structures.MarkDecorator"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values.Lazy"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.__init__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.__repr__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.copy_from": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.get": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyTupleItem.get_id": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values.Lazy"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "id",
    "markdecorators_as_tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.as_lazy_items_list": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.as_lazy_tuple": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "LazyTuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.copy_from": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "get_test_node",
    "pytest_cases.common_pytest_lazy_values.weakref"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get_id": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "functools.partial",
    "getattr",
    "isinstance",
    "pytest_cases.common_pytest_lazy_values._unwrap",
    "pytest_cases.common_pytest_lazy_values.partial_to_str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.get_marks": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "get_pytest_marks_on_function",
    "markinfos_to_markdecorators"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValue.has_cached_value": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "object",
    "pytest_cases.common_pytest_lazy_values.fake_base"
   ]
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__getattribute__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__new__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "cls",
    "cls.__init__",
    "pytest_cases.common_pytest_lazy_values.fake_base"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._LazyValueBase.__repr__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "object.__repr__"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values._unwrap": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.fake_base": {
  "data": {
   "lineno": 379
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_lazy_values.get_lazy_args": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "pytest_cases.common_pytest_lazy_values.is_lazy"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.get_test_node": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.is_lazy": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "isinstance",
    "pytest_cases.common_pytest_lazy_values.LazyTuple",
    "pytest_cases.common_pytest_lazy_values._LazyTupleItem",
    "pytest_cases.common_pytest_lazy_values._LazyValue"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.is_lazy_value": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "isinstance",
    "pytest_cases.common_pytest_lazy_values._LazyValue"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.lazy_value": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "id",
    "pytest_cases.common_pytest_lazy_values.LazyValue"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.partial_to_str": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_lazy_values.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_lazy_values.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "hasattr",
    "pytest_cases.common_pytest_marks.PYTEST_VERSION",
    "pytest_cases.common_pytest_marks.has_pytest_param",
    "pytest_cases.common_pytest_marks.pytest"
   ]
  },
  "type": "module"
 },
 "pytest_cases.common_pytest_marks.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.Mark": {
  "data": {
   "shadows": "_pytest.mark.structures.Mark"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.structures.MarkDecorator"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.PYTEST33_OR_GREATER": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST34_OR_GREATER": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST35_OR_GREATER": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST361_36X": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST37_OR_GREATER": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST38_OR_GREATER": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST3_OR_GREATER": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST421_OR_GREATER": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST46_OR_GREATER": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST53_OR_GREATER": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST54_OR_GREATER": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST6_OR_GREATER": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.PYTEST_VERSION": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks._LegacyMark": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_marks._LegacyMark.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks._ParametrizationMark": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "pytest_cases.common_pytest_marks._ParametrizationMark.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "len",
    "pytest_cases.common_pytest_marks.get_param_argnames_as_list",
    "pytest_cases.common_pytest_marks.get_parametrize_signature",
    "pytest_cases.common_pytest_marks.warnings"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks._pytest_mark_parametrize": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.copy_pytest_marks": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "get_pytest_marks_on_function"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.filter_marks": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_param_argnames_as_list": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_parametrize_signature": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "funcsigs.signature",
    "pytest_cases.common_pytest_marks._pytest_mark_parametrize"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_pytest_marks_on_function": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AttributeError",
    "markinfos_to_markdecorators",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_pytest_parametrize_marks": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "pytest_cases.common_pytest_marks._LegacyMark",
    "pytest_cases.common_pytest_marks._ParametrizationMark",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.get_pytest_usefixture_marks": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "getattr",
    "pytest_cases.common_pytest_marks.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.has_pytest_param": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pytest_cases.common_pytest_marks.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.make_marked_parameter_value": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "markinfos_to_markdecorators",
    "pytest_cases.common_pytest_marks.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.markdecorators_as_tuple": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.markdecorators_to_markinfos": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pytest_cases.common_pytest_marks.PYTEST3_OR_GREATER",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.markinfos_to_markdecorators": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pytest_cases.common_pytest_marks.PYTEST3_OR_GREATER",
    "pytest_cases.common_pytest_marks.pytest",
    "pytest_cases.common_pytest_marks.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.remove_pytest_mark": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.common_pytest_marks.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.common_pytest_marks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest_cases.fixture": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pytest_cases.fixture__creation": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pytest_cases.fixture__creation.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.CHANGE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pytest_cases.fixture__creation.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.ExistingFixtureNameError.__str__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.RAISE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pytest_cases.fixture__creation.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.WARN": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pytest_cases.fixture__creation._get_callerframe": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "inspect.currentframe",
    "range"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.check_name_available": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "dir",
    "list",
    "make_identifier",
    "name_changer",
    "pytest_cases.fixture__creation.CHANGE",
    "pytest_cases.fixture__creation.ExistingFixtureNameError",
    "pytest_cases.fixture__creation.RAISE",
    "pytest_cases.fixture__creation.WARN",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.check_name_available.name_changer": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.get_caller_module": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "_get_callerframe",
    "inspect.getmodule"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture__creation.getmodule": {
  "data": {
   "shadows": "inspect.getmodule"
  },
  "type": "import"
 },
 "pytest_cases.fixture__creation.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pytest_cases.fixture_core1_unions._NotUsed",
    "pytest_cases.fixture_core1_unions._fixture_union",
    "pytest_cases.fixture_core1_unions._unpack_fixture"
   ]
  },
  "type": "module"
 },
 "pytest_cases.fixture_core1_unions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList.__init__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.InvalidParamsList.__str__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.NOT_USED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pytest_cases.fixture_core1_unions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.__repr__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.__str__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.get_alternative_id": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.get_alternative_idx": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.get_union_id": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionFixtureAlternative.to_list_of_fixture_names": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "get_marked_parameter_values",
    "is_marked_parameter_value",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.compact": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.explicit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.get": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "classmethod",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.UnionIdMakers.nostyle": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._NotUsed": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "pytest_cases.fixture_core1_unions._NotUsed.__repr__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._fixture_union": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "_make_fix",
    "check_name_available",
    "len",
    "pytest_cases.fixture_core1_unions.UnionIdMakers",
    "pytest_cases.fixture_core1_unions.fixture_union",
    "pytest_fixture",
    "resolve_ids",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._fixture_union._new_fixture": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "makefun.with_signature",
    "pytest_cases.fixture_core1_unions.NOT_USED",
    "pytest_cases.fixture_core1_unions.UnionFixtureAlternative",
    "pytest_cases.fixture_core1_unions.is_used_request"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._make_fixture_union": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "pytest_cases.fixture_core1_unions._make_unpack_fixture": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "_create_fixture",
    "check_name_available",
    "enumerate",
    "get_fixture_name",
    "get_fixture_scope",
    "get_param_argnames_as_list",
    "isinstance",
    "pytest_cases.fixture_core1_unions.unpack_fixture",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture._create_fixture": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions._unpack_fixture._create_fixture._param_fixture": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "makefun.with_signature",
    "pytest_cases.fixture_core1_unions.NOT_USED",
    "pytest_cases.fixture_core1_unions.is_used_request",
    "pytest_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.add_signature_parameters": {
  "data": {
   "shadows": "makefun.add_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.fixture_union": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "_fixture_union",
    "_make_unpack_fixture",
    "enumerate",
    "extract_parameterset_info",
    "get_caller_module",
    "get_fixture_name",
    "isinstance",
    "list",
    "pytest_cases.fixture_core1_unions.UnionFixtureAlternative",
    "pytest_cases.fixture_core1_unions.pytest",
    "set",
    "tuple",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.ignore_unused": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.signature",
    "inspect.isgeneratorfunction",
    "makefun.add_signature_parameters"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.ignore_unused.wrapped_fixture_func": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "fixture_func",
    "makefun.wraps",
    "pytest_cases.fixture_core1_unions.NOT_USED",
    "pytest_cases.fixture_core1_unions.is_used_request"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.is_fixture_union_params": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "get_marked_parameter_values",
    "getattr",
    "is_marked_parameter_value",
    "isinstance",
    "len",
    "pytest_cases.fixture_core1_unions.UnionFixtureAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.is_used_request": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "getattr",
    "pytest_cases.fixture_core1_unions.NOT_USED"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.unpack_fixture": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "_unpack_fixture",
    "get_caller_module"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core1_unions.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.with_signature": {
  "data": {
   "shadows": "makefun.with_signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core1_unions.wraps": {
  "data": {
   "shadows": "makefun.wraps"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pytest_cases.fixture_core2.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.DECORATED": {
  "data": {
   "shadows": "decopatch.DECORATED"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2._create_param_fixture": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "check_name_available",
    "fixture_plus",
    "is_marked_parameter_value",
    "len",
    "print",
    "pytest_cases.fixture_core2.param_fixture",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_param_fixture.__param_fixture": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "makefun.with_signature"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_create_fixture",
    "check_name_available",
    "enumerate",
    "print",
    "pytest_cases.fixture_core2.param_fixtures",
    "setattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._create_fixture": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._create_fixture._param_fixture": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "fixture_plus",
    "makefun.with_signature"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._create_params_fixture._root_fixture": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "fixture_plus",
    "makefun.with_signature",
    "pytest_cases.fixture_core2.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "_make_fix",
    "_make_unpack_fixture",
    "combine_ids",
    "enumerate",
    "extract_parameterset_info",
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.signature",
    "get_caller_module",
    "get_pytest_parametrize_marks",
    "ignore_unused",
    "inspect.isgeneratorfunction",
    "itertools.product",
    "len",
    "list",
    "make_marked_parameter_value",
    "make_test_ids",
    "makefun.add_signature_parameters",
    "makefun.remove_signature_parameters",
    "pytest_fixture",
    "resolve_ids",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus._map_arguments": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "get_lazy_args",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2._decorate_fixture_plus.wrapped_fixture_func": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "_map_arguments",
    "fixture_func",
    "is_used_request",
    "makefun.wraps"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.add_signature_parameters": {
  "data": {
   "shadows": "makefun.add_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.fixture_plus": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_decorate_fixture_plus",
    "decopatch.DECORATED",
    "decopatch.function_decorator"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.function_decorator": {
  "data": {
   "shadows": "decopatch.function_decorator"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.param_fixture": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "_create_param_fixture",
    "get_caller_module",
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.param_fixtures": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_create_params_fixture",
    "get_caller_module",
    "get_param_argnames_as_list",
    "len",
    "pytest_cases.fixture_core2._create_param_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.pytest_fixture_plus": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_decorate_fixture_plus",
    "callable",
    "len",
    "pytest_cases.fixture_core2.pytest",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.pytest_fixture_plus._fixture_plus": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_decorate_fixture_plus"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_core2.remove_signature_parameters": {
  "data": {
   "shadows": "makefun.remove_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.with_signature": {
  "data": {
   "shadows": "makefun.with_signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_core2.wraps": {
  "data": {
   "shadows": "makefun.wraps"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "object",
    "pytest_cases.fixture_parametrize_plus._fixture_product"
   ]
  },
  "type": "module"
 },
 "pytest_cases.fixture_parametrize_plus.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.EMPTY_ID": {
  "data": {
   "lineno": 530
  },
  "type": "constant"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.SingleParamAlternative"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "id",
    "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative",
    "pytest_cases.fixture_parametrize_plus.fixture_ref",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative.get_alternative_id": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative.get_alternative_idx": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureRefItem": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureRefItem.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.FixtureRefItem.__repr__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__init__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__repr__": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException.__str__": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.ParamAlternative"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.MultiParamAlternative",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.__str__": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.create": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ParameterSet",
    "TypeError",
    "_create_param_fixture",
    "check_name_available",
    "classmethod",
    "enumerate",
    "get_marked_parameter_id",
    "get_marked_parameter_marks",
    "get_marked_parameter_values",
    "ids",
    "is_marked_parameter_value",
    "iter",
    "len",
    "mini_idvalset",
    "parametrize_plus",
    "print",
    "pytest_cases.fixture_parametrize_plus.MultiParamAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.get_alternative_id": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.MultiParamAlternative.get_alternative_idx": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative": {
  "data": {
   "lineno": 207
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.ParamAlternative",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.get_alternative_id": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.get_alternative_idx": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamAlternative.get_union_id": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ParamIdMakers": {
  "data": {
   "lineno": 567
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ParamIdMakers.nostyle": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "pytest_cases.fixture_parametrize_plus.EMPTY_ID",
    "pytest_cases.fixture_parametrize_plus.MultiParamAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.ProductParamAlternative": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.SingleParamAlternative"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.ProductParamAlternative.get_alternative_id": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mini_idvalset",
    "pytest_cases.fixture_parametrize_plus.fixture_ref",
    "robust_isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.ProductParamAlternative.get_alternative_idx": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.ParamAlternative"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "id",
    "pytest_cases.fixture_parametrize_plus.SingleParamAlternative",
    "super"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative.create": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ParameterSet",
    "_create_param_fixture",
    "check_name_available",
    "classmethod",
    "get_marked_parameter_id",
    "get_marked_parameter_marks",
    "get_marked_parameter_values",
    "id",
    "is_marked_parameter_value",
    "len",
    "parametrize_plus",
    "print",
    "pytest_cases.fixture_parametrize_plus.SingleParamAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.SingleParamAlternative.get_alternative_id": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "mini_idvalset"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus._IDGEN": {
  "data": {
   "lineno": 593
  },
  "type": "constant"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_make_unpack_fixture",
    "any",
    "check_name_available",
    "f_decorator",
    "fixture_plus",
    "get_fixture_name",
    "is_lazy_value",
    "isinstance",
    "len",
    "list",
    "remove_duplicates",
    "set",
    "setattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product._new_fixture": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_tuple_generator",
    "makefun.with_signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._fixture_product._tuple_generator": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "get_lazy_args",
    "range"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._gen_ids": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "idgen",
    "ids",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._gen_ids.gen_id_using_str_formatter": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "Exception",
    "pytest_cases.fixture_parametrize_plus.InvalidIdTemplateException"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._get_argnames_argvalues": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "InvalidParamsList",
    "TypeError",
    "ValueError",
    "any",
    "cart_product_pytest",
    "get_param_argnames_as_list",
    "is_marked_parameter_value",
    "isinstance",
    "len",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._make_fixture_product": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "ParameterSet",
    "ValueError",
    "_gen_ids",
    "_get_argnames_argvalues",
    "_make_ids",
    "_process_argvalues",
    "ids",
    "isinstance",
    "len",
    "list",
    "print",
    "pytest_cases.fixture_parametrize_plus._IDGEN",
    "pytest_cases.fixture_parametrize_plus.pytest",
    "resolve_ids",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._apply": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "ValueError",
    "_decorator",
    "funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_fixture_ref_alt": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "ParameterSet",
    "get_marked_parameter_id",
    "get_marked_parameter_marks",
    "ids",
    "is_marked_parameter_value",
    "print",
    "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_fixture_ref_product": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "ParameterSet",
    "check_name_available",
    "get_marked_parameter_id",
    "get_marked_parameter_marks",
    "ids",
    "is_marked_parameter_value",
    "print",
    "pytest_cases.fixture_parametrize_plus.ProductParamAlternative",
    "pytest_cases.fixture_parametrize_plus._make_fixture_product",
    "pytest_cases.fixture_parametrize_plus.parametrize_plus"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._create_params_alt": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ids",
    "pytest_cases.fixture_parametrize_plus.MultiParamAlternative",
    "pytest_cases.fixture_parametrize_plus.SingleParamAlternative"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus._make_ids": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "mini_idval"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "ValueError",
    "_create_fixture_ref_alt",
    "_create_fixture_ref_product",
    "_create_params_alt",
    "_make_fixture_union",
    "check_name_available",
    "enumerate",
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.signature",
    "get_marked_parameter_values",
    "inspect.isgeneratorfunction",
    "is_marked_parameter_value",
    "isinstance",
    "len",
    "makefun.add_signature_parameters",
    "makefun.remove_signature_parameters",
    "print",
    "pytest_cases.fixture_parametrize_plus.FixtureParamAlternative",
    "pytest_cases.fixture_parametrize_plus.ParamIdMakers",
    "pytest_cases.fixture_parametrize_plus.parametrize_plus",
    "test_func"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate.replace_paramfixture_with_values": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._parametrize_plus.parametrize_plus_decorate.wrapped_test_func": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "makefun.wraps",
    "replace_paramfixture_with_values",
    "test_func"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus._process_argvalues": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "ParameterSet",
    "ValueError",
    "enumerate",
    "extract_parameterset_info",
    "is_lazy_value",
    "isinstance",
    "len",
    "list",
    "pytest_cases.fixture_parametrize_plus.fixture_ref",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.add_signature_parameters": {
  "data": {
   "shadows": "makefun.add_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__getitem__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "FixtureRefItem"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "get_fixture_name",
    "id"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__len__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__repr__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.__str__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref._check_iterable": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.fixture_ref.get_name_for_id": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.parametrize_plus": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "_decorate",
    "_parametrize_plus",
    "ids",
    "pytest_cases.fixture_parametrize_plus._IDGEN"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.parametrize_plus._apply_parametrize_plus": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "_decorate"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.pytest_parametrize_plus": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "DeprecationWarning",
    "parametrize_plus",
    "pytest_cases.fixture_parametrize_plus.pytest",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.remove_empty_ids": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "pytest_cases.fixture_parametrize_plus.EMPTY_ID"
   ]
  },
  "type": "function"
 },
 "pytest_cases.fixture_parametrize_plus.remove_signature_parameters": {
  "data": {
   "shadows": "makefun.remove_signature_parameters"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.with_signature": {
  "data": {
   "shadows": "makefun.with_signature"
  },
  "type": "import"
 },
 "pytest_cases.fixture_parametrize_plus.wraps": {
  "data": {
   "shadows": "makefun.wraps"
  },
  "type": "import"
 },
 "pytest_cases.parametrize": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pytest_cases.plugin": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pytest_cases.plugin._NORMAL",
    "pytest_cases.plugin._SKIP"
   ]
  },
  "type": "module"
 },
 "pytest_cases.plugin.CallSpec2": {
  "data": {
   "shadows": "_pytest.python.CallSpec2"
  },
  "type": "import"
 },
 "pytest_cases.plugin.CallsReactor": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.CallsReactor.__getitem__": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.__init__": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.__iter__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.append": {
  "data": {
   "lineno": 810
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.calls_list": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.create_call_list_from_pending_parametrizations": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "get_calls_for_tree",
    "get_param_argnames_as_list",
    "get_pytest_nodeid",
    "isinstance",
    "print",
    "pytest_cases.plugin.SuperClosure",
    "pytest_cases.plugin._DEBUG",
    "remove_empty_ids"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.CallsReactor.print_parametrization_list": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.FixtureClosureNode.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pytest_cases.plugin.FixtureDefsCache"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.__repr__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode._build_closure": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "is_fixture_union_params",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode._get_alternatives": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.add_required_fixture": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.already_knows_fixture": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.build_closure": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.gather_all_required": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.gen_all_fixture_defs": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_defs": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "get_pytest_function_scopenum",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_defs.sort_by_scope": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_all_fixture_names": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_alternatives": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_leaves": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.get_not_always_used": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.has_split": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.is_closure_built": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.requires": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.split_and_build": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "pytest_cases.plugin.FixtureClosureNode"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureClosureNode.to_str": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureDefsCache": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.FixtureDefsCache.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.FixtureDefsCache.get_fixture_defs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "pytest_cases.plugin.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_cases.plugin.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_cases.plugin.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "pytest_cases.plugin.MutableSequence": {
  "data": {
   "shadows": "collections.MutableSequence"
  },
  "type": "import"
 },
 "pytest_cases.plugin.NormalParamz": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.NormalParamz.__str__": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "pytest_cases.plugin.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pytest_cases.plugin.PYTEST_CONFIG": {
  "data": {
   "lineno": 1301
  },
  "type": "constant"
 },
 "pytest_cases.plugin.SuperClosure": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "collections.MutableSequence"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.SuperClosure.__delitem__": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__getitem__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__init__": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__len__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__repr__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.__setitem__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "list",
    "set",
    "slice",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure._update_fixture_defs": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.get_all_fixture_defs": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.insert": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.nb_alternative_closures": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.SuperClosure.remove": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pytest_cases.plugin.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pytest_cases.plugin.UnionParamz": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pytest_cases.plugin.UnionParamz.__str__": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin._DEBUG": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pytest_cases.plugin._NORMAL": {
  "data": {
   "lineno": 1281
  },
  "type": "constant"
 },
 "pytest_cases.plugin._OPTIONS": {
  "data": {
   "lineno": 1282
  },
  "type": "constant"
 },
 "pytest_cases.plugin._OPTION_NAME": {
  "data": {
   "lineno": 1279
  },
  "type": "constant"
 },
 "pytest_cases.plugin._SKIP": {
  "data": {
   "lineno": 1280
  },
  "type": "constant"
 },
 "pytest_cases.plugin._cleanup_calls_list": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_parametrize_calls",
    "get_param_argnames_as_list",
    "get_pytest_function_scopenum",
    "isinstance",
    "len",
    "pytest_cases.plugin.UnionParamz",
    "range"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin._parametrize_calls": {
  "data": {
   "lineno": 1107
  },
  "type": "function"
 },
 "pytest_cases.plugin._process_node": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "enumerate",
    "flatten_list",
    "isinstance",
    "len",
    "print",
    "pytest_cases.plugin.NormalParamz",
    "pytest_cases.plugin.UnionParamz",
    "pytest_cases.plugin._DEBUG",
    "pytest_cases.plugin._parametrize_calls",
    "range"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "pytest_cases.plugin.create_super_closure": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "_merge",
    "get_param_names",
    "is_function_node",
    "list",
    "print",
    "pytest_cases.plugin.FixtureClosureNode",
    "pytest_cases.plugin.FixtureDefsCache",
    "pytest_cases.plugin.SuperClosure",
    "pytest_cases.plugin._DEBUG",
    "sort_according_to_ref_list"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.create_super_closure._merge": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "pytest_cases.plugin.flatten_list": {
  "data": {
   "lineno": 1250
  },
  "type": "function"
 },
 "pytest_cases.plugin.get_calls_for_tree": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "_cleanup_calls_list",
    "_process_node"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.getfixtureclosure": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "create_super_closure",
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.id": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "filter",
    "map",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pytest_cases.plugin.parametrize": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "CallsReactor",
    "ValueError",
    "is_fixture_union_params",
    "isinstance",
    "len",
    "pytest_cases.plugin.NormalParamz",
    "pytest_cases.plugin.SuperClosure",
    "pytest_cases.plugin.UnionParamz"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pytest_cases.plugin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_cases.plugin.pytest_addoption": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "pytest_cases.plugin._OPTIONS",
    "pytest_cases.plugin._OPTION_NAME",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.pytest_collection": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "copy.copy",
    "len",
    "pytest_cases.plugin._OPTION_NAME",
    "pytest_cases.plugin._SKIP",
    "pytest_cases.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.pytest_configure": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "ValueError",
    "pytest_cases.plugin.PYTEST_CONFIG",
    "pytest_cases.plugin._OPTION_NAME"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.pytest_generate_tests": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "functools.partial",
    "pytest_cases.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.pytest_runtest_setup": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "get_lazy_args",
    "hasattr",
    "pytest_cases.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "pytest_cases.plugin.sort_according_to_ref_list": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_cases.plugin.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 }
}