{
 "mgwr": {
  "data": {},
  "type": "module"
 },
 "mgwr.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mgwr.diagnostics": {
  "data": {},
  "type": "module"
 },
 "mgwr.diagnostics.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.diagnostics.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.diagnostics.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.diagnostics.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mgwr.diagnostics.corr": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mgwr.diagnostics.get_AIC": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "numpy.sum",
    "spglm.family.Binomial",
    "spglm.family.Gaussian",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.diagnostics.get_AICc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "isinstance",
    "mgwr.diagnostics.get_AIC",
    "spglm.family.Binomial",
    "spglm.family.Gaussian",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.diagnostics.get_BIC": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "numpy.log",
    "numpy.sum",
    "spglm.family.Binomial",
    "spglm.family.Gaussian",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.diagnostics.get_CV": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mgwr.diagnostics.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mgwr.diagnostics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.kernels": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "mgwr.kernels.Kernel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mgwr.kernels.Kernel.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "int",
    "mgwr.kernels.local_cdist",
    "numpy.partition"
   ]
  },
  "type": "function"
 },
 "mgwr.kernels.Kernel._kernel_funcs": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.ones",
    "print"
   ]
  },
  "type": "function"
 },
 "mgwr.kernels.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mgwr.kernels.local_cdist": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.arcsin",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mgwr.kernels.njit": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mgwr.kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.search": {
  "data": {},
  "type": "module"
 },
 "mgwr.search.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mgwr.search.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mgwr.search.equal_interval": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "function",
    "numpy.round",
    "print"
   ]
  },
  "type": "function"
 },
 "mgwr.search.golden_section": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "function",
    "numpy.abs",
    "numpy.round",
    "print"
   ]
  },
  "type": "function"
 },
 "mgwr.search.multi_bw": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ImportError",
    "bw_func",
    "copy.deepcopy",
    "gwr_func",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.multiply",
    "numpy.round",
    "numpy.sum",
    "numpy.zeros_like",
    "print",
    "range",
    "sel_func",
    "str",
    "tqdm.auto.tqdm"
   ]
  },
  "type": "function"
 },
 "mgwr.search.multi_bw.tqdm": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "mgwr.search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.search.tqdm": {
  "data": {
   "shadows": "tqdm.auto.tqdm"
  },
  "type": "import"
 },
 "mgwr.sel_bw": {
  "data": {},
  "type": "module"
 },
 "mgwr.sel_bw.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.sel_bw.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.sel_bw.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.sel_bw.Sel_BW": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mgwr.sel_bw.Sel_BW.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "spglm.family.Gaussian"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._bw": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "GWR",
    "TypeError",
    "equal_interval",
    "golden_section",
    "mgwr.sel_bw.getDiag",
    "scipy.optimize.minimize_scalar"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._init_section": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "local_cdist",
    "numpy.array",
    "numpy.delete",
    "numpy.max",
    "numpy.min",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._mbw": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "multi_bw",
    "spreg.user_output.check_constant"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._mbw.bw_func": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mgwr.sel_bw.Sel_BW"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._mbw.gwr_func": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "GWR"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW._mbw.sel_func": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "mgwr.sel_bw.Sel_BW.search": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "AttributeError",
    "len"
   ]
  },
  "type": "function"
 },
 "mgwr.sel_bw.USER": {
  "data": {
   "shadows": "spreg.user_output"
  },
  "type": "import"
 },
 "mgwr.sel_bw.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mgwr.sel_bw.getDiag": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mgwr.sel_bw.minimize_scalar": {
  "data": {
   "shadows": "scipy.optimize.minimize_scalar"
  },
  "type": "import"
 },
 "mgwr.sel_bw.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "mgwr.sel_bw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.sel_bw.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "mgwr.summary": {
  "data": {},
  "type": "module"
 },
 "mgwr.summary.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.summary.GLM": {
  "data": {
   "shadows": "spglm.glm.GLM"
  },
  "type": "import"
 },
 "mgwr.summary.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.summary.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.summary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.summary.summaryGLM": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "get_AICc",
    "isinstance",
    "range",
    "spglm.family.Gaussian",
    "spglm.glm.GLM",
    "str"
   ]
  },
  "type": "function"
 },
 "mgwr.summary.summaryGWR": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.sqrt",
    "numpy.std",
    "range",
    "spglm.family.Gaussian",
    "str"
   ]
  },
  "type": "function"
 },
 "mgwr.summary.summaryMGWR": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.sqrt",
    "numpy.std",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mgwr.summary.summaryModel": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "mgwr.tests": {
  "data": {},
  "type": "module"
 },
 "mgwr.tests.test_gwr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mgwr.tests.test_gwr.unittest"
   ]
  },
  "type": "module"
 },
 "mgwr.tests.test_gwr.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.SimpleNamespace": {
  "data": {
   "shadows": "types.SimpleNamespace"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "mgwr.tests.test_gwr.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial.setUp": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_gwr.os",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial.test_BS_F": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial.test_BS_NN": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial.test_GS_F": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRBinomial.test_GS_NN": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mgwr.tests.test_gwr.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libpysal.examples.get_path",
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_gwr.os",
    "mgwr.tests.test_gwr.pandas",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_BS_F": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "numpy.array",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_BS_NN": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "GWR",
    "Sel_BW",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "libpysal.io.open",
    "mgwr.tests.test_gwr.os",
    "numpy.around",
    "numpy.array",
    "numpy.float64",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_BS_NN_longlat": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_gwr.os",
    "numpy.around",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_GS_F": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "numpy.around",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_GS_NN": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "numpy.around",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_MGWR": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "MGWR",
    "Sel_BW",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRGaussian.test_Prediction": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "GWR",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "spglm.family.Gaussian"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "mgwr.tests.test_gwr.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.setUp": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_gwr.os",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.test_BS_F": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.test_BS_NN": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.test_BS_NN_Offset": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.test_GS_F": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.TestGWRPoisson.test_GS_NN": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_gwr.io": {
  "data": {
   "shadows": "libpysal.io"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.ps": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "mgwr.tests.test_gwr.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "mgwr.tests.test_kernels": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mgwr.tests.test_kernels.libpysal",
    "mgwr.tests.test_kernels.unittest"
   ]
  },
  "type": "module"
 },
 "mgwr.tests.test_kernels.PEGP": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mgwr.tests.test_kernels.TestKernels": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mgwr.tests.test_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_kernels.TestKernels.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_adapt_bisqaure": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_adapt_exp": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_adapt_gauss": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_fix_biqsquare": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_fix_exp": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.TestKernels.test_fix_gauss": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Kernel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_kernels.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "mgwr.tests.test_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.tests.test_kernels.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mgwr.tests.test_parallel.unittest"
   ]
  },
  "type": "module"
 },
 "mgwr.tests.test_parallel.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.SimpleNamespace": {
  "data": {
   "shadows": "types.SimpleNamespace"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "mgwr.tests.test_parallel.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool.setUp": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_parallel.os",
    "multiprocessing.Pool",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool.test_BS_F_Pool": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool.test_BS_NN_Pool": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool.test_GS_F_Pool": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRBinomialPool.test_GS_NN_Pool": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Binomial"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mgwr.tests.test_parallel.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.setUp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libpysal.examples.get_path",
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_parallel.os",
    "mgwr.tests.test_parallel.pandas",
    "multiprocessing.Pool",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.test_BS_NN_Pool": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "GWR",
    "Sel_BW",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "libpysal.io.open",
    "mgwr.tests.test_parallel.os",
    "numpy.around",
    "numpy.array",
    "numpy.float64",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.test_BS_NN_longlat_Pool": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_parallel.os",
    "numpy.around",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.test_GS_F_Pool": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "get_CV",
    "numpy.around",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.test_MGWR_Pool": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "MGWR",
    "Sel_BW",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRGaussianPool.test_Prediction": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "GWR",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "spglm.family.Gaussian"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "mgwr.tests.test_parallel.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.setUp": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_parallel.os",
    "multiprocessing.Pool",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.test_BS_F_Pool": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.test_BS_NN_Offset_Pool": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.test_BS_NN_Pool": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.test_GS_F_Pool": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.TestGWRPoissonPool.test_GS_NN_Pool": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "GWR",
    "get_AIC",
    "get_AICc",
    "get_BIC",
    "numpy.array",
    "numpy.floor",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_parallel.io": {
  "data": {
   "shadows": "libpysal.io"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.ps": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "mgwr.tests.test_parallel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mgwr.tests.test_sel_bw.unittest"
   ]
  },
  "type": "module"
 },
 "mgwr.tests.test_sel_bw.Binomial": {
  "data": {
   "shadows": "spglm.family.Binomial"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.Gaussian": {
  "data": {
   "shadows": "spglm.family.Gaussian"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.Poisson": {
  "data": {
   "shadows": "spglm.family.Poisson"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.TestGWRSelBWPoisson": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mgwr.tests.test_sel_bw.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_sel_bw.TestGWRSelBWPoisson.setUp": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "libpysal.io.open",
    "list",
    "mgwr.tests.test_sel_bw.os",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestGWRSelBWPoisson.test_golden_adapt_AICc_Poisson_w_offset": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestGWRSelBWPoisson.test_golden_adapt_AICc_Poisson_wo_offset": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose",
    "spglm.family.Poisson"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mgwr.tests.test_sel_bw.unittest"
   ]
  },
  "type": "class"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libpysal.examples.get_path",
    "libpysal.io.open",
    "list",
    "numpy.array",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_MGWR_AICc": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_MGWR_AICc_Longlat": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_adapt_AIC": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_adapt_AICc": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_adapt_AICc_Longlat": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_adapt_BIC": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_adapt_CV": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_fixed_AIC": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_fixed_AICc": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_fixed_BIC": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_golden_fixed_CV": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_adapt_AIC": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_adapt_AICc": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_adapt_BIC": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_adapt_CV": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_fixed_AIC": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_fixed_AICc": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_fixed_BIC": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.TestSelBWGaussian.test_interval_fixed_CV": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Sel_BW",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mgwr.tests.test_sel_bw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.io": {
  "data": {
   "shadows": "libpysal.io"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.ps": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "mgwr.tests.test_sel_bw.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "mgwr.utils": {
  "data": {},
  "type": "module"
 },
 "mgwr.utils.compare_surfaces": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abs",
    "cmap",
    "libpysal.common.requires",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.cm.seismic",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.subplots",
    "mgwr.utils.shift_colormap",
    "mgwr.utils.truncate_colormap",
    "numpy.max",
    "numpy.min",
    "str"
   ]
  },
  "type": "function"
 },
 "mgwr.utils.gp": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "mgwr.utils.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mgwr.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mgwr.utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mgwr.utils.requires": {
  "data": {
   "shadows": "libpysal.common.requires"
  },
  "type": "import"
 },
 "mgwr.utils.shift_colormap": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "cmap",
    "libpysal.common.requires",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.pyplot.register_cmap",
    "numpy.hstack",
    "numpy.linspace",
    "zip"
   ]
  },
  "type": "function"
 },
 "mgwr.utils.truncate_colormap": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cmap",
    "cmap.name",
    "libpysal.common.requires",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "numpy.linspace"
   ]
  },
  "type": "function"
 }
}