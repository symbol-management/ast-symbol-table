{
 "pyresample": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "int",
    "pyresample.os"
   ]
  },
  "type": "module"
 },
 "pyresample.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.CHUNK_SIZE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyresample.DynamicAreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.DynamicAreaDefinition"
  },
  "type": "import"
 },
 "pyresample.SwathDefinition": {
  "data": {
   "shadows": "pyresample.geometry.SwathDefinition"
  },
  "type": "import"
 },
 "pyresample.XArrayResamplerNN": {
  "data": {
   "shadows": "pyresample.kd_tree.XArrayResamplerNN"
  },
  "type": "import"
 },
 "pyresample.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyresample.__version__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyresample._multi_proc": {
  "data": {},
  "type": "module"
 },
 "pyresample._multi_proc.Scheduler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample._multi_proc.Scheduler.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "multiprocessing.Lock",
    "multiprocessing.RawValue",
    "pyresample._multi_proc.ctypes"
   ]
  },
  "type": "function"
 },
 "pyresample._multi_proc.Scheduler.__iter__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "max",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample._multi_proc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyresample._multi_proc.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pyresample._multi_proc.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyresample._multi_proc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample._multi_proc.shmem_as_ndarray": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint8",
    "pyresample._multi_proc.ctypes"
   ]
  },
  "type": "function"
 },
 "pyresample.area_def2basemap": {
  "data": {
   "shadows": "pyresample.plot.area_def2basemap"
  },
  "type": "import"
 },
 "pyresample.bilinear": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyresample.bilinear.warnings"
   ]
  },
  "type": "module"
 },
 "pyresample.bilinear.CACHE_INDICES": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyresample.bilinear.XArrayBilinearResampler": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyresample.bilinear.XArrayResamplerBilinear": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyresample.bilinear.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr": {
  "data": {},
  "type": "module"
 },
 "pyresample.bilinear.xarr.BIL_COORDINATES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyresample.bilinear.xarr.BilinearBase": {
  "data": {
   "shadows": "pyresample.bilinear._base.BilinearBase"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.CACHE_INDICES": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyresample.bilinear.xarr.CHUNK_SIZE": {
  "data": {
   "shadows": "pyresample.CHUNK_SIZE"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.Proj": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyresample.bilinear._base.BilinearBase"
   ]
  },
  "type": "class"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._add_missing_coordinates": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "KeyError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._add_x_and_y_coordinates": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dask.array.compute"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._adjust_bands_coordinates_to_match_data": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._create_empty_bil_info": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dask.array.ones",
    "dask.array.zeros",
    "numpy.bool",
    "numpy.int32",
    "numpy.nan",
    "pyresample.CHUNK_SIZE"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._delayed_slice_data": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dask.delayed",
    "slicer"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._finalize_output_data": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._get_input_xy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear.xarr._get_input_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._get_output_xy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyresample.bilinear.xarr._get_output_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._get_target_proj_vectors": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AttributeError",
    "pyresample.CHUNK_SIZE"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._get_valid_input_index_and_input_coords": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dask.array.compute",
    "numpy.float",
    "numpy.ravel",
    "pyresample.bilinear._base.lonlat2xyz",
    "pyresample.bilinear.xarr._get_valid_input_index"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._limit_output_values_to_input": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dask.array.nanmax",
    "dask.array.nanmin",
    "dask.array.where",
    "numpy.isnan",
    "pyresample.bilinear._base.find_indices_outside_min_and_max"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._reshape_to_target_area": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dask.array.reshape"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._slice_data": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "from_delayed",
    "pyresample.bilinear._base.get_slicer"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler._slice_data.from_delayed": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dask.array.from_delayed",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler.load_resampling_info": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dask.array.array",
    "pyresample.bilinear.xarr.BIL_COORDINATES",
    "pyresample.bilinear.xarr.zarr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler.resample": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayBilinearResampler.save_resampling_info": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dask.array.from_array",
    "getattr",
    "isinstance",
    "numpy.ndarray",
    "pyresample.CHUNK_SIZE",
    "pyresample.bilinear.xarr.BIL_COORDINATES",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.XArrayResamplerBilinear": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pyresample.bilinear.xarr.XArrayBilinearResampler"
   ]
  },
  "type": "class"
 },
 "pyresample.bilinear.xarr.XArrayResamplerBilinear.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyresample.bilinear.xarr.XArrayResamplerBilinear",
    "pyresample.bilinear.xarr.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr._get_input_xy": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "dask.array.compute",
    "proj",
    "pyresample.bilinear._base.array_slice_for_multiple_arrays",
    "pyresample.bilinear._base.mask_coordinates",
    "pyresample.bilinear.xarr._get_raveled_lonlats"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr._get_output_xy": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "dask.array.compute",
    "numpy.ravel",
    "pyresample.CHUNK_SIZE"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr._get_raveled_lonlats": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.ravel",
    "pyresample.CHUNK_SIZE"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr._get_valid_input_index": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dask.array.invert",
    "pyresample.bilinear._base.find_indices_outside_min_and_max",
    "pyresample.bilinear._base.get_valid_indices_from_lonlat_boundaries",
    "pyresample.bilinear._base.is_swath_to_grid_or_grid_to_grid",
    "pyresample.bilinear.xarr._get_raveled_lonlats"
   ]
  },
  "type": "function"
 },
 "pyresample.bilinear.xarr.array_slice_for_multiple_arrays": {
  "data": {
   "shadows": "pyresample.bilinear._base.array_slice_for_multiple_arrays"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.delayed": {
  "data": {
   "shadows": "dask.delayed"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.find_indices_outside_min_and_max": {
  "data": {
   "shadows": "pyresample.bilinear._base.find_indices_outside_min_and_max"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.get_slicer": {
  "data": {
   "shadows": "pyresample.bilinear._base.get_slicer"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.get_valid_indices_from_lonlat_boundaries": {
  "data": {
   "shadows": "pyresample.bilinear._base.get_valid_indices_from_lonlat_boundaries"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.is_swath_to_grid_or_grid_to_grid": {
  "data": {
   "shadows": "pyresample.bilinear._base.is_swath_to_grid_or_grid_to_grid"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.lonlat2xyz": {
  "data": {
   "shadows": "pyresample.bilinear._base.lonlat2xyz"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.mask_coordinates": {
  "data": {
   "shadows": "pyresample.bilinear._base.mask_coordinates"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.bilinear.xarr.zarr": {
  "data": {
   "shadows": "zarr"
  },
  "type": "import"
 },
 "pyresample.boundary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyresample.boundary.logging"
   ]
  },
  "type": "module"
 },
 "pyresample.boundary.AreaBoundary": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyresample.boundary.Boundary"
   ]
  },
  "type": "class"
 },
 "pyresample.boundary.AreaBoundary.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "list",
    "pyresample.boundary.Boundary",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyresample.boundary.AreaBoundary.contour": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "pyresample.boundary.AreaBoundary.decimate": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "pyresample.boundary.AreaDefBoundary": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyresample.boundary.AreaBoundary"
   ]
  },
  "type": "class"
 },
 "pyresample.boundary.AreaDefBoundary.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyresample.boundary.AreaBoundary",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyresample.boundary.Boundary": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.boundary.Boundary.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyresample.boundary.Boundary.contour": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyresample.boundary.Boundary.contour_poly": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.vstack",
    "property",
    "pyresample.spherical.SphPolygon"
   ]
  },
  "type": "function"
 },
 "pyresample.boundary.Boundary.draw": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyresample.boundary.SimpleBoundary": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.boundary.SimpleBoundary.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyresample.boundary.SphPolygon": {
  "data": {
   "shadows": "pyresample.spherical.SphPolygon"
  },
  "type": "import"
 },
 "pyresample.boundary.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyresample.boundary.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyresample.boundary.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "pyresample.boundary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.bucket": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyresample.bucket.logging"
   ]
  },
  "type": "module"
 },
 "pyresample.bucket.BucketResampler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.bucket.BucketResampler.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyresample._spatial_mp.Proj"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler._get_indices": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dask.array.floor",
    "dask.array.map_blocks",
    "dask.array.where",
    "numpy.int",
    "pyresample.bucket.LOG"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler._get_proj_coordinates": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler.get_average": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "dask.array.where",
    "int",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.nan",
    "pyresample.bucket.LOG"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler.get_count": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dask.array.histogram",
    "pyresample.bucket.LOG"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler.get_fractions": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "AttributeError",
    "dask.array.where",
    "float",
    "len",
    "numpy.asarray",
    "numpy.nan",
    "numpy.unique",
    "pyresample.bucket.LOG"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.BucketResampler.get_sum": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dask.array.histogram",
    "dask.array.rechunk",
    "dask.array.where",
    "isinstance",
    "numpy.isnan",
    "numpy.nan",
    "pyresample.bucket.LOG",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.LOG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyresample.bucket.Proj": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj"
  },
  "type": "import"
 },
 "pyresample.bucket.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.bucket.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyresample.bucket.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.bucket.round_to_resolution": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyresample.bucket.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.convert_def_to_yaml": {
  "data": {
   "shadows": "pyresample.area_config.convert_def_to_yaml"
  },
  "type": "import"
 },
 "pyresample.create_area_def": {
  "data": {
   "shadows": "pyresample.area_config.create_area_def"
  },
  "type": "import"
 },
 "pyresample.ewa": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyresample.ewa.logging"
   ]
  },
  "type": "module"
 },
 "pyresample.ewa.LOG": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pyresample.ewa._fornav": {
  "data": {
   "shadows": "pyresample.ewa._fornav"
  },
  "type": "import"
 },
 "pyresample.ewa._ll2cr": {
  "data": {
   "shadows": "pyresample.ewa._ll2cr"
  },
  "type": "import"
 },
 "pyresample.ewa.fornav": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "_mask_helper",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.ascontiguousarray",
    "numpy.empty",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_where",
    "numpy.nan",
    "pyresample.ewa._fornav.fornav_wrapper",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyresample.ewa.fornav._mask_helper": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pyresample.ewa.ll2cr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_static"
   ]
  },
  "type": "function"
 },
 "pyresample.ewa.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyresample.ewa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.geo_filter": {
  "data": {},
  "type": "module"
 },
 "pyresample.geo_filter.GridFilter": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.geo_filter.GridFilter.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "filter.astype",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "pyresample.geo_filter.GridFilter.filter": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyresample.geo_filter.GridFilter.get_valid_index": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "filter",
    "filter.astype",
    "numpy.bool",
    "numpy.int32",
    "numpy.invert",
    "proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geo_filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.geometry.Arc": {
  "data": {
   "shadows": "pyresample.spherical_geometry.Arc"
  },
  "type": "import"
 },
 "pyresample.geometry.AreaDefBoundary": {
  "data": {
   "shadows": "pyresample.boundary.AreaDefBoundary"
  },
  "type": "import"
 },
 "pyresample.geometry.AreaDefinition": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "pyresample.geometry.BaseDefinition"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.AreaDefinition.__eq__": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.allclose",
    "pyresample.geometry.AreaDefinition",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.__getitem__": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "int",
    "pyresample.geometry.AreaDefinition",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.__hash__": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.__init__": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "numpy.float64",
    "proj",
    "pyproj.CRS",
    "pyresample._spatial_mp.Proj",
    "pyresample.geometry.AreaDefinition",
    "pyresample.utils.convert_proj_floats",
    "pyresample.utils.proj4_str_to_dict",
    "str",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.__ne__": {
  "data": {
   "lineno": 1602
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.__str__": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "round",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition._crs": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "property",
    "pyproj.CRS.from_wkt"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition._do_rotation": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.array",
    "dask.array.dstack",
    "dask.array.einsum",
    "dask.array.meshgrid",
    "dask.array.radians",
    "hasattr",
    "pyresample.geometry.numpy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition._get_proj_vectors": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dask.array.arange",
    "int",
    "isinstance",
    "pyresample.geometry.numpy",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition._get_slice_starts_stops": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "pyresample.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.aggregate": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.area_extent": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.colrow2lonlat": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "p",
    "pyresample._spatial_mp.Proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.copy": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.create_areas_def": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "hasattr",
    "list",
    "pyresample.geometry.ordered_dump"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.create_areas_def_legacy": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.crop_around": {
  "data": {
   "lineno": 2061
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_area_of_interest": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.area_config.create_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_cf": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.utils.load_cf_area"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_circle": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.area_config.create_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_epsg": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "max",
    "min",
    "proj",
    "pyproj.CRS",
    "pyresample._spatial_mp.Proj",
    "pyresample.area_config.create_area_def",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_extent": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.area_config.create_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.from_ul_corner": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.area_config.create_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.geocentric_resolution": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "max",
    "pyproj.transform",
    "pyresample._spatial_mp.Proj",
    "pyresample.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_area_slices": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "isinstance",
    "pyresample.boundary.AreaDefBoundary",
    "pyresample.boundary.Boundary",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry._make_slice_divisible",
    "pyresample.geometry.get_geostationary_bounding_box",
    "pyresample.geometry.logger",
    "pyresample.geometry.numpy",
    "pyresample.utils.check_slice_orientation",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_lonlat": {
  "data": {
   "lineno": 1732
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_lonlats": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "ValueError",
    "dask.array.map_blocks",
    "hasattr",
    "pyresample._spatial_mp.Proj",
    "pyresample._spatial_mp.Proj_MP",
    "pyresample.geometry.invproj",
    "pyresample.geometry.numpy",
    "pyresample.geometry.warnings",
    "target_proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_lonlats_dask": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyresample.CHUNK_SIZE",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_proj_coords": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "dask.array.meshgrid",
    "isinstance",
    "pyresample.geometry.numpy",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_proj_coords_dask": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyresample.CHUNK_SIZE",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_proj_vectors": {
  "data": {
   "lineno": 1798
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_proj_vectors_dask": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyresample.CHUNK_SIZE",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_xy_from_lonlat": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "pobj",
    "pyresample._spatial_mp.Proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.get_xy_from_proj_coords": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.lonlat2colrow": {
  "data": {
   "lineno": 1627
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.name": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.outer_boundary_corners": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "proj",
    "property",
    "pyresample._spatial_mp.Proj",
    "pyresample.spherical_geometry.Coordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.proj4_string": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "pyresample.geometry.warnings",
    "pyresample.utils.proj4_dict_to_str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.proj_dict": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "pyresample.utils.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.proj_str": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "property",
    "pyresample.utils.proj4_dict_to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.projection_x_coords": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.projection_y_coords": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.resolution": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.shape": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.to_cartopy_crs": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "hasattr",
    "numpy.deg2rad",
    "pyresample._spatial_mp.Proj",
    "pyresample.utils.cartopy.from_proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.update_hash": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.geometry.hashlib"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.x_size": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.AreaDefinition.y_size": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.BaseDefinition.__contains__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "isinstance",
    "pyresample.spherical_geometry.Coordinate",
    "pyresample.spherical_geometry.point_inside",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.__eq__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "isinstance",
    "numpy.allclose",
    "numpy.ndarray",
    "pyresample.geometry.BaseDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.__getitem__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.__hash__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.__ne__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.corners": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "property",
    "pyresample.spherical_geometry.Coordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_area": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.get_polygon_area"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_area_extent_for_subset": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_area_slices": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_bbox_lonlats": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_boundary_lonlats": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pyresample.boundary.SimpleBoundary",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_cartesian_coords": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "isinstance",
    "numpy.ndarray",
    "numpy.ravel",
    "pyresample._spatial_mp.Cartesian",
    "pyresample._spatial_mp.Cartesian_MP",
    "pyresample.geometry.warnings",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_lonlat": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.geometry.DimensionError"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_lonlats": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.get_lonlats_dask": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyresample.CHUNK_SIZE",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.intersection": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.intersection_polygon"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.overlap_rate": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.get_polygon_area"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.BaseDefinition.overlaps": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Arc"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.Boundary": {
  "data": {
   "shadows": "pyresample.boundary.Boundary"
  },
  "type": "import"
 },
 "pyresample.geometry.CHUNK_SIZE": {
  "data": {
   "shadows": "pyresample.CHUNK_SIZE"
  },
  "type": "import"
 },
 "pyresample.geometry.CRS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyresample.geometry.Cartesian": {
  "data": {
   "shadows": "pyresample._spatial_mp.Cartesian"
  },
  "type": "import"
 },
 "pyresample.geometry.Cartesian_MP": {
  "data": {
   "shadows": "pyresample._spatial_mp.Cartesian_MP"
  },
  "type": "import"
 },
 "pyresample.geometry.Coordinate": {
  "data": {
   "shadows": "pyresample.spherical_geometry.Coordinate"
  },
  "type": "import"
 },
 "pyresample.geometry.CoordinateDefinition": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pyresample.geometry.BaseDefinition"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.CoordinateDefinition.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "pyresample.geometry.CoordinateDefinition",
    "super",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.CoordinateDefinition.__str__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.CoordinateDefinition.append": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pyresample.geometry.DimensionError"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.CoordinateDefinition.concatenate": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "klass",
    "min",
    "numpy.concatenate",
    "pyresample.geometry.DimensionError",
    "pyresample.geometry._get_highest_level_class"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.CoordinateDefinition.geocentric_resolution": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "RuntimeError",
    "dask.array.compute",
    "hasattr",
    "numpy.isfinite",
    "numpy.linalg.norm",
    "numpy.stack",
    "numpy.zeros_like",
    "pyproj.transform",
    "pyresample._spatial_mp.Proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DataArray": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyresample.geometry.DimensionError": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.DynamicAreaDefinition": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.DynamicAreaDefinition.__init__": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "isinstance",
    "pyresample._spatial_mp.Proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DynamicAreaDefinition._get_proj_dict": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "dict",
    "hasattr",
    "isinstance",
    "pyproj.CRS",
    "pyresample.utils.proj4_str_to_dict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DynamicAreaDefinition.compute_domain": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.rint"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DynamicAreaDefinition.freeze": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.asarray",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "proj4",
    "pyresample._spatial_mp.Proj",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DynamicAreaDefinition.pixel_size_x": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.DynamicAreaDefinition.pixel_size_y": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "pyresample.geometry.GridDefinition": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pyresample.geometry.CoordinateDefinition"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.GridDefinition.__init__": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.geometry.GridDefinition",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.IncompatibleAreas": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyresample.geometry.Proj": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj"
  },
  "type": "import"
 },
 "pyresample.geometry.Proj_MP": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj_MP"
  },
  "type": "import"
 },
 "pyresample.geometry.SimpleBoundary": {
  "data": {
   "shadows": "pyresample.boundary.SimpleBoundary"
  },
  "type": "import"
 },
 "pyresample.geometry.StackedAreaDefinition": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "pyresample.geometry.BaseDefinition"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.StackedAreaDefinition.__init__": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "pyresample.geometry.StackedAreaDefinition",
    "pyresample.geometry.numpy",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.append": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "isinstance",
    "pyresample.geometry.IncompatibleAreas",
    "pyresample.geometry.StackedAreaDefinition",
    "pyresample.geometry.concatenate_area_defs"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.get_lonlats": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": [
    "TypeError",
    "dask.array.vstack",
    "max",
    "min",
    "pyresample.geometry.numpy",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.get_lonlats_dask": {
  "data": {
   "lineno": 2361,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyresample.CHUNK_SIZE",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.height": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.proj4_string": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.proj_str": {
  "data": {
   "lineno": 2384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.shape": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.size": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.squeeze": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.update_hash": {
  "data": {
   "lineno": 2389
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.width": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.x_size": {
  "data": {
   "lineno": 2285,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.StackedAreaDefinition.y_size": {
  "data": {
   "lineno": 2296,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "property",
    "pyresample.geometry.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "pyresample.geometry.CoordinateDefinition"
   ]
  },
  "type": "class"
 },
 "pyresample.geometry.SwathDefinition.__hash__": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.__init__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "pyresample.geometry.SwathDefinition",
    "super",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition._compute_generic_parameters": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition._compute_omerc_parameters": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "abs",
    "any",
    "float",
    "int",
    "len",
    "numpy.asanyarray",
    "numpy.isnan",
    "pyproj.Geod",
    "pyresample._spatial_mp.Proj",
    "pyresample.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition._compute_uniform_shape": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "ImportError",
    "dask.array.compute",
    "int",
    "min",
    "notnull",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition._compute_uniform_shape.notnull": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition._do_transform": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.dstack",
    "pyproj.transform",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.aggregate": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "KeyError",
    "dask.array.map_blocks",
    "dask.array.zeros_like",
    "pyresample.geometry.SwathDefinition",
    "pyresample.geometry.pyproj",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.compute_bb_proj_params": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.compute_optimal_bb_area": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "pyresample.geometry.DynamicAreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.copy": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.get_edge_lonlats": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.ma.concatenate"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.SwathDefinition.update_hash": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.bool_",
    "pyresample.geometry.get_array_hashable",
    "pyresample.geometry.hashlib"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry._flatten_cartesian_coords": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry._get_highest_level_class": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "klass"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry._get_slice": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "min",
    "pyresample.geometry.numpy",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry._make_slice_divisible": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pyresample.geometry.arange": {
  "data": {
   "shadows": "dask.array.arange"
  },
  "type": "import"
 },
 "pyresample.geometry.check_slice_orientation": {
  "data": {
   "shadows": "pyresample.utils.check_slice_orientation"
  },
  "type": "import"
 },
 "pyresample.geometry.combine_area_extents_vertical": {
  "data": {
   "lineno": 2218,
   "symbols_in_volume": [
    "list",
    "pyresample.geometry.IncompatibleAreas",
    "pyresample.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.concatenate_area_defs": {
  "data": {
   "lineno": 2239,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.IncompatibleAreas",
    "pyresample.geometry.combine_area_extents_vertical",
    "set"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.convert_proj_floats": {
  "data": {
   "shadows": "pyresample.utils.convert_proj_floats"
  },
  "type": "import"
 },
 "pyresample.geometry.create_area_def": {
  "data": {
   "shadows": "pyresample.area_config.create_area_def"
  },
  "type": "import"
 },
 "pyresample.geometry.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.geometry.from_proj": {
  "data": {
   "shadows": "pyresample.utils.cartopy.from_proj"
  },
  "type": "import"
 },
 "pyresample.geometry.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyresample.geometry.get_array_hashable": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.uint8",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.get_geostationary_angle_extent": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "pyresample.geometry.numpy",
    "pyresample.utils.proj4_radius_parameters"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.get_geostationary_bounding_box": {
  "data": {
   "lineno": 2193,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "pyresample._spatial_mp.Proj",
    "pyresample.geometry.get_geostationary_angle_extent",
    "pyresample.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.get_polygon_area": {
  "data": {
   "shadows": "pyresample.spherical_geometry.get_polygon_area"
  },
  "type": "import"
 },
 "pyresample.geometry.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyresample.geometry.intersection_polygon": {
  "data": {
   "shadows": "pyresample.spherical_geometry.intersection_polygon"
  },
  "type": "import"
 },
 "pyresample.geometry.invproj": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "numpy.dstack",
    "pyresample._spatial_mp.Proj",
    "target_proj"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.load_cf_area": {
  "data": {
   "shadows": "pyresample.utils.load_cf_area"
  },
  "type": "import"
 },
 "pyresample.geometry.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyresample.geometry.map_blocks": {
  "data": {
   "shadows": "dask.array.map_blocks"
  },
  "type": "import"
 },
 "pyresample.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.geometry.numpy": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.geometry.ordered_dump": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyresample.geometry.yaml"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.ordered_dump.OrderedDumper": {
  "data": {
   "lineno": 2440
  },
  "type": "class"
 },
 "pyresample.geometry.ordered_dump._dict_representer": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "pyresample.geometry.yaml"
   ]
  },
  "type": "function"
 },
 "pyresample.geometry.point_inside": {
  "data": {
   "shadows": "pyresample.spherical_geometry.point_inside"
  },
  "type": "import"
 },
 "pyresample.geometry.proj4_dict_to_str": {
  "data": {
   "shadows": "pyresample.utils.proj4_dict_to_str"
  },
  "type": "import"
 },
 "pyresample.geometry.proj4_radius_parameters": {
  "data": {
   "shadows": "pyresample.utils.proj4_radius_parameters"
  },
  "type": "import"
 },
 "pyresample.geometry.proj4_str_to_dict": {
  "data": {
   "shadows": "pyresample.utils.proj4_str_to_dict"
  },
  "type": "import"
 },
 "pyresample.geometry.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pyresample.geometry.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "pyresample.geometry.vstack": {
  "data": {
   "shadows": "dask.array.vstack"
  },
  "type": "import"
 },
 "pyresample.geometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.geometry.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyresample.get_area_def": {
  "data": {
   "shadows": "pyresample.area_config.get_area_def"
  },
  "type": "import"
 },
 "pyresample.grid": {
  "data": {
   "shadows": "pyresample.grid"
  },
  "type": "import"
 },
 "pyresample.grid._spatial_mp": {
  "data": {
   "shadows": "pyresample._spatial_mp"
  },
  "type": "import"
 },
 "pyresample.grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyresample.grid.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.grid.get_image_from_linesample": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.ma.array",
    "numpy.ma.is_masked",
    "pyresample.grid.range"
   ]
  },
  "type": "function"
 },
 "pyresample.grid.get_image_from_lonlats": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyresample.grid.get_image_from_linesample",
    "pyresample.grid.get_linesample"
   ]
  },
  "type": "function"
 },
 "pyresample.grid.get_linesample": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.int32",
    "pyresample._spatial_mp.Proj",
    "pyresample._spatial_mp.Proj_MP",
    "source_proj"
   ]
  },
  "type": "function"
 },
 "pyresample.grid.get_resampled_image": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "int",
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.row_stack",
    "numpy.ndarray",
    "numpy.row_stack",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry._get_slice",
    "pyresample.grid.get_image_from_lonlats",
    "stack"
   ]
  },
  "type": "function"
 },
 "pyresample.grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.grid.range": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyresample.image": {
  "data": {
   "shadows": "pyresample.image"
  },
  "type": "import"
 },
 "pyresample.image.ImageContainer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.image.ImageContainer.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "numpy.ma.core.MaskedArray",
    "numpy.ndarray",
    "pyresample.image.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainer.__repr__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyresample.image.ImageContainer.__str__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyresample.image.ImageContainer.get_array_from_linesample": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "pyresample.grid.get_image_from_linesample"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainer.get_array_from_neighbour_info": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainer.resample": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerBilinear": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pyresample.image.ImageContainer"
   ]
  },
  "type": "class"
 },
 "pyresample.image.ImageContainerBilinear.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerBilinear",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerBilinear.resample": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.nan",
    "pyresample.bilinear.resample_bilinear",
    "pyresample.image.ImageContainerBilinear"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerNearest": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyresample.image.ImageContainer"
   ]
  },
  "type": "class"
 },
 "pyresample.image.ImageContainerNearest.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerNearest",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerNearest.resample": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerNearest",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerQuick": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyresample.image.ImageContainer"
   ]
  },
  "type": "class"
 },
 "pyresample.image.ImageContainerQuick.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyresample.geometry.AreaDefinition",
    "pyresample.image.ImageContainerQuick",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.image.ImageContainerQuick.resample": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyresample.grid.get_resampled_image",
    "pyresample.image.ImageContainerQuick"
   ]
  },
  "type": "function"
 },
 "pyresample.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyresample.image.bilinear": {
  "data": {
   "shadows": "pyresample.bilinear"
  },
  "type": "import"
 },
 "pyresample.image.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.image.grid": {
  "data": {
   "shadows": "pyresample.grid"
  },
  "type": "import"
 },
 "pyresample.image.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.image.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.load_area": {
  "data": {
   "shadows": "pyresample.area_config.load_area"
  },
  "type": "import"
 },
 "pyresample.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.parse_area_file": {
  "data": {
   "shadows": "pyresample.area_config.parse_area_file"
  },
  "type": "import"
 },
 "pyresample.plot": {
  "data": {
   "shadows": "pyresample.plot"
  },
  "type": "import"
 },
 "pyresample.plot.BASEMAP_NOT_CARTOPY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyresample.plot.Basemap": {
  "data": {
   "shadows": "mpl_toolkits.basemap.Basemap"
  },
  "type": "import"
 },
 "pyresample.plot._add_gridlines": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "matplotlib.ticker.FixedLocator",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyresample.plot._basemap_get_quicklook": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "matplotlib.pyplot",
    "matplotlib.pyplot.colorbar",
    "numpy.arange",
    "numpy.ma.isMaskedArray",
    "pyresample.plot.area_def2basemap"
   ]
  },
  "type": "function"
 },
 "pyresample.plot._get_quicklook": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "matplotlib.pyplot",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.colorbar",
    "numpy.ma.isMaskedArray",
    "pyresample.plot._add_gridlines",
    "pyresample.plot._basemap_get_quicklook",
    "pyresample.plot._translate_coast_resolution_to_cartopy"
   ]
  },
  "type": "function"
 },
 "pyresample.plot._translate_coast_resolution_to_cartopy": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pyresample.plot.BASEMAP_NOT_CARTOPY",
    "pyresample.plot.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyresample.plot.area_def2basemap": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "float",
    "mpl_toolkits.basemap.Basemap",
    "pyresample.plot.ellps2axis",
    "pyresample.plot.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.plot.cartopy": {
  "data": {
   "shadows": "pyresample.utils.cartopy"
  },
  "type": "import"
 },
 "pyresample.plot.ellps2axis": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyresample.plot.mticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "pyresample.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyresample.plot.save_quicklook": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.savefig",
    "pyresample.plot._get_quicklook"
   ]
  },
  "type": "function"
 },
 "pyresample.plot.show_quicklook": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.show",
    "pyresample.plot._get_quicklook"
   ]
  },
  "type": "function"
 },
 "pyresample.plot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.resampler": {
  "data": {},
  "type": "module"
 },
 "pyresample.resampler.BaseResampler": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.resampler.BaseResampler.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyresample.resampler.BaseResampler._create_cache_filename": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyresample.resampler.os"
   ]
  },
  "type": "function"
 },
 "pyresample.resampler.BaseResampler.compute": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyresample.resampler.BaseResampler.get_hash": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyresample.resampler.hash_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.resampler.BaseResampler.precompute": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyresample.resampler.BaseResampler.resample": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "numpy.iinfo",
    "numpy.integer",
    "numpy.issubdtype",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.resampler.SwathDefinition": {
  "data": {
   "shadows": "pyresample.geometry.SwathDefinition"
  },
  "type": "import"
 },
 "pyresample.resampler.hash_dict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyresample.resampler.hashlib",
    "pyresample.resampler.json"
   ]
  },
  "type": "function"
 },
 "pyresample.resampler.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyresample.resampler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyresample.resampler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.resampler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.save_quicklook": {
  "data": {
   "shadows": "pyresample.plot.save_quicklook"
  },
  "type": "import"
 },
 "pyresample.spherical_geometry": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "NameError",
    "pyresample.spherical_geometry.warnings"
   ]
  },
  "type": "module"
 },
 "pyresample.spherical_geometry.Arc": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.spherical_geometry.Arc.__eq__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.__init__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.__ne__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.__str__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.angle": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "pyresample.spherical_geometry.EPSILON",
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.center_angle": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.intersection": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "abs",
    "pyresample.spherical_geometry.EPSILON"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.intersections": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Coordinate",
    "pyresample.spherical_geometry.math",
    "pyresample.spherical_geometry.modpi"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Arc.intersects": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.spherical_geometry.Coordinate.__eq__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.__ne__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abs",
    "pyresample.spherical_geometry.EPSILON"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.__repr__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.__str__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate._update_cart": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate._update_lonlat": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.cross": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Coordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.cross2cart": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Coordinate",
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.distance": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.dot": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.norm": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.Coordinate.normalize": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.EPSILON": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyresample.spherical_geometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyresample.spherical_geometry.get_first_intersection": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyresample.spherical_geometry.get_intersections"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.get_intersections": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.get_next_intersection": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.get_intersections"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.get_polygon_area": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "abs",
    "len",
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.math",
    "pyresample.spherical_geometry.range"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.intersection_polygon": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "len",
    "numpy.sign",
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.get_first_intersection",
    "pyresample.spherical_geometry.get_next_intersection",
    "pyresample.spherical_geometry.point_inside"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyresample.spherical_geometry.modpi": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.spherical_geometry.point_inside": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "abs",
    "numpy.sign",
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.modpi"
   ]
  },
  "type": "function"
 },
 "pyresample.spherical_geometry.range": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyresample.spherical_geometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.test": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_bilinear": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_bilinear.CACHE_INDICES": {
  "data": {
   "shadows": "pyresample.bilinear.CACHE_INDICES"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.CHUNK_SIZE": {
  "data": {
   "shadows": "pyresample.CHUNK_SIZE"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.NumpyBilinearResampler": {
  "data": {
   "shadows": "pyresample.bilinear.NumpyBilinearResampler"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.Proj": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyresample.test.test_bilinear.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ones",
    "numpy.where",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_calc_abc": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "pyresample.bilinear._base._calc_abc"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_class_resample_method": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "hasattr",
    "numpy.dstack",
    "pyresample.bilinear.NumpyBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_create_empty_bil_info": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int32",
    "pyresample.bilinear.NumpyBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_bil_info": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_check_ts",
    "pyresample.bilinear.get_bil_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_bil_info._check_ts": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "numpy.isnan",
    "range"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_four_closest_corners": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.sum",
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear._base._get_four_closest_corners",
    "pyresample.bilinear._base._get_input_xy",
    "pyresample.bilinear._base._get_output_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_fractional_distances": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.bilinear._base._get_fractional_distances"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_fractional_distances_irregular": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.isnan",
    "pyresample.bilinear._base._get_fractional_distances_irregular"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_fractional_distances_parallellogram": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyresample.bilinear._base._get_fractional_distances_parallellogram"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_fractional_distances_uprights_parallel": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyresample.bilinear._base._get_fractional_distances_uprights_parallel"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_input_xy": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear._base._get_input_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_get_sample_from_bil_info": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "hasattr",
    "numpy.isnan",
    "numpy.ma.masked_all",
    "pyresample.bilinear.get_bil_info",
    "pyresample.bilinear.get_sample_from_bil_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_init": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyresample.bilinear.NumpyBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_resample_bilinear": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "hasattr",
    "numpy.dstack",
    "pyresample.bilinear.resample_bilinear"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestNumpyBilinear.test_solve_quadratic": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.isnan",
    "pyresample.bilinear._base._calc_abc",
    "pyresample.bilinear._base._solve_quadratic"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "pyresample.test.test_bilinear.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.setUp": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "dask.array.array",
    "dask.array.ones",
    "numpy.arange",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.where",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_add_missing_coordinates": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "dask.array.ones",
    "numpy.all",
    "numpy.arange",
    "pyresample.bilinear.XArrayBilinearResampler",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_calc_abc": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "pyresample.bilinear._base._calc_abc"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_class_resample_method": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nansum",
    "numpy.sum",
    "pyresample.bilinear.XArrayBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_create_empty_bil_info": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int32",
    "pyresample.bilinear.XArrayBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_create_resample_kdtree": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "numpy.sum",
    "pyresample.bilinear.XArrayBilinearResampler",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_bil_info": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "_check_ts",
    "numpy.all",
    "numpy.allclose",
    "pyresample.bilinear.XArrayBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_bil_info._check_ts": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "enumerate",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_corner": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "dask.array.ravel",
    "numpy.arange",
    "numpy.isnan",
    "numpy.reshape",
    "numpy.sum",
    "numpy.tile",
    "pyresample.CHUNK_SIZE",
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear._base._get_corner",
    "pyresample.bilinear._base._get_input_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_four_closest_corners": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "dask.array.ravel",
    "dask.array.sum",
    "numpy.isnan",
    "numpy.sum",
    "pyresample.CHUNK_SIZE",
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear._base._get_four_closest_corners",
    "pyresample.bilinear.xarr._get_input_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_fractional_distances": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "dask.array.array",
    "numpy.allclose",
    "numpy.nan",
    "pyresample.bilinear._base._get_fractional_distances",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_fractional_distances_irregular": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "numpy.isnan",
    "pyresample.bilinear._base._get_fractional_distances_irregular"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_fractional_distances_parallellogram": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "pyresample.bilinear._base._get_fractional_distances_parallellogram"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_fractional_distances_uprights_parallel": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "pyresample.bilinear._base._get_fractional_distances_uprights_parallel"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_index_array": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "pyresample.bilinear.XArrayBilinearResampler",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_input_xy": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pyresample._spatial_mp.Proj",
    "pyresample.bilinear.xarr._get_input_xy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_sample_from_bil_info": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "dask.array.dstack",
    "dask.array.moveaxis",
    "dict",
    "isinstance",
    "numpy.all",
    "numpy.isnan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.sum",
    "numpy.uint8",
    "pyresample.bilinear.XArrayBilinearResampler",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_slices": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.sum",
    "pyresample.bilinear.XArrayBilinearResampler",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_get_valid_input_index": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "numpy.bool",
    "pyresample.bilinear._base._get_valid_input_index"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_init": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.all",
    "pyresample.bilinear.XArrayBilinearResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_lonlat2xyz": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.CHUNK_SIZE",
    "pyresample.bilinear._base.lonlat2xyz"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_query_no_distance": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pyresample.bilinear._base._query_no_distance",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_save_and_load_bil_info": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.assert_array_equal",
    "pyresample.bilinear.CACHE_INDICES",
    "pyresample.bilinear.XArrayBilinearResampler",
    "pyresample.test.test_bilinear.os",
    "pyresample.test.test_bilinear.shutil",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_slice_data": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.ones",
    "numpy.all",
    "numpy.isnan",
    "numpy.nan",
    "pyresample.bilinear.XArrayBilinearResampler",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.TestXarrayBilinear.test_solve_quadratic": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.isnan",
    "pyresample.bilinear._base._calc_abc",
    "pyresample.bilinear._base._solve_quadratic"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.XArrayBilinearResampler": {
  "data": {
   "shadows": "pyresample.bilinear.XArrayBilinearResampler"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._calc_abc": {
  "data": {
   "shadows": "pyresample.bilinear._base._calc_abc"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._check_fill_value": {
  "data": {
   "shadows": "pyresample.bilinear._base._check_fill_value"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_corner": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_corner"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_four_closest_corners": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_four_closest_corners"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_fractional_distances": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_fractional_distances"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_fractional_distances_irregular": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_fractional_distances_irregular"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_fractional_distances_parallellogram": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_fractional_distances_parallellogram"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_fractional_distances_uprights_parallel": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_fractional_distances_uprights_parallel"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_input_xy": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_input_xy"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_output_xy": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_output_xy"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._get_valid_input_index": {
  "data": {
   "shadows": "pyresample.bilinear._base._get_valid_input_index"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._query_no_distance": {
  "data": {
   "shadows": "pyresample.bilinear._base._query_no_distance"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear._solve_quadratic": {
  "data": {
   "shadows": "pyresample.bilinear._base._solve_quadratic"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.get_bil_info": {
  "data": {
   "shadows": "pyresample.bilinear.get_bil_info"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.get_sample_from_bil_info": {
  "data": {
   "shadows": "pyresample.bilinear.get_sample_from_bil_info"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.lonlat2xyz": {
  "data": {
   "shadows": "pyresample.bilinear._base.lonlat2xyz"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.resample_bilinear": {
  "data": {
   "shadows": "pyresample.bilinear.resample_bilinear"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyresample.test.test_bilinear.test_check_fill_value": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.float32",
    "numpy.isnan",
    "numpy.nan",
    "numpy.uint16",
    "numpy.uint8",
    "pyresample.bilinear._base._check_fill_value"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bilinear.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_bucket.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.CustomScheduler": {
  "data": {
   "shadows": "pyresample.test.utils.CustomScheduler"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.Test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.array",
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_bucket.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_bucket.Test.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyresample.bucket.BucketResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_get_average": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.nanmax",
    "pyresample.test.test_bucket.dask",
    "pyresample.test.utils.CustomScheduler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_get_bucket_indices": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dask.array.compute",
    "dask.array.from_array",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyresample.bucket.BucketResampler",
    "pyresample.create_area_def",
    "pyresample.test.test_bucket.dask",
    "pyresample.test.utils.CustomScheduler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_get_count": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.sum",
    "pyresample.test.test_bucket.dask",
    "pyresample.test.utils.CustomScheduler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_get_proj_coordinates": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_get_sum": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.max",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.sum",
    "pyresample.test.test_bucket.dask",
    "pyresample.test.utils.CustomScheduler",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_init": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "pyresample.bucket.BucketResampler",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_resample_bucket_fractions": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.any",
    "numpy.array",
    "numpy.isnan",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmin",
    "pyresample.test.test_bucket.dask",
    "pyresample.test.utils.CustomScheduler",
    "set"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.Test.test_round_to_resolution": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dask.array.array",
    "numpy.all",
    "numpy.array",
    "pyresample.bucket.round_to_resolution"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_bucket.bucket": {
  "data": {
   "shadows": "pyresample.bucket"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.create_area_def": {
  "data": {
   "shadows": "pyresample.create_area_def"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_bucket.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_data_reduce.Test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyresample.test.test_data_reduce.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_data_reduce.Test.setUpClass": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_area_con_cartesian_reduce": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.get_valid_index_from_cartesian_grid"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_area_con_reduce": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.get_valid_index_from_lonlat_grid"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_cartesian_reduce": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.swath_from_cartesian_grid"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_reduce": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.swath_from_lonlat_grid"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_reduce_boundary": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.swath_from_lonlat_boundaries"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.Test.test_reduce_north_pole": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.data_reduce.swath_from_lonlat_grid",
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_data_reduce.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.get_valid_index_from_cartesian_grid": {
  "data": {
   "shadows": "pyresample.data_reduce.get_valid_index_from_cartesian_grid"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.get_valid_index_from_lonlat_grid": {
  "data": {
   "shadows": "pyresample.data_reduce.get_valid_index_from_lonlat_grid"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.swath_from_cartesian_grid": {
  "data": {
   "shadows": "pyresample.data_reduce.swath_from_cartesian_grid"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.swath_from_lonlat_boundaries": {
  "data": {
   "shadows": "pyresample.data_reduce.swath_from_lonlat_boundaries"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.swath_from_lonlat_grid": {
  "data": {
   "shadows": "pyresample.data_reduce.swath_from_lonlat_grid"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_data_reduce.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_fornav": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyresample.test.test_ewa_fornav.logging"
   ]
  },
  "type": "module"
 },
 "pyresample.test.test_ewa_fornav.LOG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyresample.test.test_ewa_fornav.TestFornav": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyresample.test.test_ewa_fornav.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_ewa_fornav.TestFornav.test_fornav_swath_larger": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float32",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan",
    "numpy.ones",
    "pyresample.ewa._fornav.fornav_wrapper"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_fornav.TestFornav.test_fornav_swath_one_scan_geo_nans": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.float32",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan",
    "numpy.ones",
    "pyresample.ewa._fornav.fornav_wrapper"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_fornav.TestFornav.test_fornav_swath_smaller": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.float32",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan",
    "numpy.ones",
    "pyresample.ewa._fornav.fornav_wrapper"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_fornav.TestFornav.test_fornav_swath_smaller_int8": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "numpy.empty",
    "numpy.float32",
    "numpy.int8",
    "numpy.linspace",
    "numpy.ones",
    "pyresample.ewa._fornav.fornav_wrapper"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_fornav.TestFornavWrapper": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pyresample.test.test_ewa_fornav.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_ewa_fornav.TestFornavWrapper.test_fornav_swath_larger_float32": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float32",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.ones",
    "pyresample.ewa.fornav"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_fornav._fornav": {
  "data": {
   "shadows": "pyresample.ewa._fornav"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_fornav.fornav": {
  "data": {
   "shadows": "pyresample.ewa.fornav"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_fornav.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_fornav.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_fornav.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyresample.test.test_ewa_ll2cr.logging"
   ]
  },
  "type": "module"
 },
 "pyresample.test.test_ewa_ll2cr.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.LOG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyresample.test.test_ewa_ll2cr.SwathDefinition": {
  "data": {
   "shadows": "pyresample.geometry.SwathDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyresample.test.test_ewa_ll2cr.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic.test_latlong_basic1": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_dynamic",
    "pyresample.test.test_ewa_ll2cr.dynamic_wgs84",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic.test_latlong_basic2": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_dynamic",
    "pyresample.test.test_ewa_ll2cr.dynamic_wgs84",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic.test_latlong_dateline1": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_dynamic",
    "pyresample.test.test_ewa_ll2cr.dynamic_wgs84",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyresample.test.test_ewa_ll2cr.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic.test_lcc_basic1": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_static",
    "pyresample.test.test_ewa_ll2cr.static_lcc",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic.test_lcc_fail1": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa._ll2cr.ll2cr_static",
    "pyresample.test.test_ewa_ll2cr.static_lcc",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRWrapper": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pyresample.test.test_ewa_ll2cr.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_ewa_ll2cr.TestLL2CRWrapper.test_basic1": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "abs",
    "numpy.float64",
    "numpy.nan",
    "pyresample.ewa.ll2cr",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition",
    "pyresample.test.test_ewa_ll2cr.static_lcc",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude",
    "pyresample.utils.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_ewa_ll2cr._ll2cr": {
  "data": {
   "shadows": "pyresample.ewa._ll2cr"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.create_test_latitude": {
  "data": {
   "shadows": "pyresample.test.utils.create_test_latitude"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.create_test_longitude": {
  "data": {
   "shadows": "pyresample.test.utils.create_test_longitude"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.dynamic_wgs84": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyresample.test.test_ewa_ll2cr.ll2cr": {
  "data": {
   "shadows": "pyresample.ewa.ll2cr"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.proj4_str_to_dict": {
  "data": {
   "shadows": "pyresample.utils.proj4_str_to_dict"
  },
  "type": "import"
 },
 "pyresample.test.test_ewa_ll2cr.static_lcc": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyresample.test.test_ewa_ll2cr.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyproj.CRS"
   ]
  },
  "type": "module"
 },
 "pyresample.test.test_geometry.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.CRS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyresample.test.test_geometry.DataArray": {
  "data": {
   "shadows": "pyresample.area_config.DataArray"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.DynamicAreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.DynamicAreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.IncompatibleAreas": {
  "data": {
   "shadows": "pyresample.geometry.IncompatibleAreas"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.Proj": {
  "data": {
   "shadows": "pyresample._spatial_mp.Proj"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.SwathDefinition": {
  "data": {
   "shadows": "pyresample.geometry.SwathDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.Test": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.Test.test_area_def_geocentric_resolution": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_area_def_init_projection": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "pyproj.CRS",
    "pyproj.CRS.from_dict",
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_area_equal": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_area_extent_ll": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_area_hash": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "hash",
    "int",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_areadef_immutable": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "AttributeError",
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_base_type": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones_like",
    "numpy.where",
    "pyresample.geometry.BaseDefinition",
    "pyresample.test.utils.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_boundary": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_cartesian": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_cartopy_crs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "min",
    "numpy.allclose",
    "numpy.fabs",
    "numpy.pi",
    "pyresample.geometry.AreaDefinition",
    "pyresample.utils.is_pyproj2",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_colrow2lonlat": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_create_areas_def": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_geometry.yaml",
    "pyresample.utils.is_pyproj2",
    "set"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_from_cf": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ma.masked_all",
    "pyresample.geometry.AreaDefinition.from_cf",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_from_epsg": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.geometry.AreaDefinition.from_epsg"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_area_slices": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.utils.get_area_def",
    "pyresample.utils.is_pyproj2",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_area_slices_nongeos": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "pyresample.utils.get_area_def",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_array_hashable": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.uint8",
    "pyresample.geometry.get_array_hashable",
    "pyresample.test.test_geometry.sys",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_lonlats_options": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "dask.array.core.Array",
    "numpy.dtype",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_proj_coords_basic": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyresample.utils.get_area_def",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_proj_coords_dask": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyresample.get_area_def",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_proj_coords_rotation": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.AreaDefinition",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_slice_starts_stops": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_get_xy_from_lonlat": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "p__",
    "pyresample._spatial_mp.Proj",
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_grid_filter": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "filter",
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geo_filter.GridFilter",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_grid_filter2D": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "filter",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dstack",
    "numpy.ones",
    "pyresample.geo_filter.GridFilter",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_grid_filter_valid": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "filter",
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geo_filter.GridFilter",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_latlong_area": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_lonlat2colrow": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_lonlat_precomp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_not_area_equal": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_parse_area_file": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.parse_area_file",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_proj_str": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.utils.friendly_crs_equal",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_striding": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.utils.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_swath_equal_area": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_swath_hash": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ImportError",
    "dask.array.from_array",
    "hash",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "print",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.Test.test_swath_not_equal_area": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestCrop": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.TestCrop.test_aggregate": {
  "data": {
   "lineno": 2390,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestCrop.test_get_geostationary_angle_extent": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.get_geostationary_angle_extent",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestCrop.test_get_geostationary_bbox": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.get_geostationary_bounding_box",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestCrop.test_sub_area": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.geometry.AreaDefinition",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestDynamicAreaDefinition": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.TestDynamicAreaDefinition.test_compute_domain": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.geometry.DynamicAreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestDynamicAreaDefinition.test_freeze": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.geometry.DynamicAreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestDynamicAreaDefinition.test_freeze_with_bb": {
  "data": {
   "lineno": 2242,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyresample.geometry.DynamicAreaDefinition",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestMakeSliceDivisible": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.TestMakeSliceDivisible.test_make_slice_divisible": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "pyresample.geometry._make_slice_divisible",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_append": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "len",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.StackedAreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_append_area_defs": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "pyresample.geometry.concatenate_area_defs",
    "pyresample.test.test_geometry.random",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_append_area_defs_fail": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "pyresample.geometry.IncompatibleAreas",
    "pyresample.geometry.concatenate_area_defs",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_combine_area_extents": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "pyresample.geometry.IncompatibleAreas",
    "pyresample.geometry.combine_area_extents_vertical",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_create_area_def": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "itertools.product",
    "len",
    "numpy.allclose",
    "pyresample.area_config.DataArray",
    "pyresample.area_config.create_area_def",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.AreaDefinition.from_area_of_interest",
    "pyresample.geometry.AreaDefinition.from_circle",
    "pyresample.geometry.AreaDefinition.from_extent",
    "pyresample.geometry.AreaDefinition.from_ul_corner",
    "pyresample.geometry.DynamicAreaDefinition",
    "pyresample.test.test_geometry.pyproj",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestStackedAreaDefinition.test_get_lonlats": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.StackedAreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "pyresample.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_aggregation": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_append_1d": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_append_2d": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_compute_omerc_params": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pyresample.geometry.SwathDefinition",
    "pyresample.test.test_geometry.assert_np_dict_allclose",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_compute_optimal_bb": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.SwathDefinition",
    "pyresample.test.test_geometry.assert_np_dict_allclose",
    "pyresample.utils.is_pyproj2",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_concat_1d": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_concat_2d": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_get_edge_lonlats": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_slice": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_striding": {
  "data": {
   "lineno": 1884,
   "symbols_in_volume": [
    "dask.array.from_array",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_swath": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "id",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_swath_def_geocentric_resolution": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "RuntimeError",
    "dask.array.from_array",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_swath_equal": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "ImportError",
    "dask.array.from_array",
    "numpy.array",
    "numpy.nan",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.TestSwathDefinition.test_swath_not_equal": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry._make_slice_divisible": {
  "data": {
   "shadows": "pyresample.geometry._make_slice_divisible"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.assert_np_dict_allclose": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "TypeError",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_geometry.cad": {
  "data": {
   "shadows": "pyresample.area_config.create_area_def"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.catch_warnings": {
  "data": {
   "shadows": "pyresample.test.utils.catch_warnings"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.combine_area_extents_vertical": {
  "data": {
   "shadows": "pyresample.geometry.combine_area_extents_vertical"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.concatenate_area_defs": {
  "data": {
   "shadows": "pyresample.geometry.concatenate_area_defs"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.dask_array": {
  "data": {
   "shadows": "dask.array.core.Array"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.friendly_crs_equal": {
  "data": {
   "shadows": "pyresample.test.utils.friendly_crs_equal"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.geo_filter": {
  "data": {
   "shadows": "pyresample.geo_filter"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.get_area_def": {
  "data": {
   "shadows": "pyresample.get_area_def"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.is_pyproj2": {
  "data": {
   "shadows": "pyresample.utils.is_pyproj2"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.parse_area_file": {
  "data": {
   "shadows": "pyresample.parse_area_file"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.test.test_geometry.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_gradient.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.GradientSearchResampler": {
  "data": {
   "shadows": "pyresample.gradient.GradientSearchResampler"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.SwathDefinition": {
  "data": {
   "shadows": "pyresample.geometry.SwathDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.TestGradientResampler": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyresample.test.test_gradient.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_gradient.TestGradientResampler.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.SwathDefinition",
    "pyresample.gradient.GradientSearchResampler"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_filter_data": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "dask.array.random.random",
    "len"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_chunk_mappings": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "all",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.product",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_dst_poly": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "AttributeError",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_gradients": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_projection_coordinates_area_to_area": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_projection_coordinates_swath_to_area": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_src_poly_area": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_get_src_poly_swath": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_resample_area_to_area_2d": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "dask.array.ones",
    "numpy.allclose",
    "numpy.float64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_resample_area_to_area_2d_fill_value": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dask.array.full",
    "numpy.allclose",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_resample_area_to_area_3d": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dask.array.ones",
    "numpy.allclose",
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_resample_swath_to_area_2d": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dask.array.ones",
    "numpy.all",
    "numpy.float64",
    "numpy.isnan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.TestGradientResampler.test_resample_swath_to_area_3d": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "dask.array.ones",
    "float",
    "numpy.allclose",
    "numpy.array",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.newaxis",
    "numpy.ravel",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient._concatenate_chunks": {
  "data": {
   "shadows": "pyresample.gradient._concatenate_chunks"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient._gradient_resample_data": {
  "data": {
   "shadows": "pyresample.gradient._gradient_resample_data"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.check_overlap": {
  "data": {
   "shadows": "pyresample.gradient.check_overlap"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.get_border_lonlats": {
  "data": {
   "shadows": "pyresample.gradient.get_border_lonlats"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.get_polygon": {
  "data": {
   "shadows": "pyresample.gradient.get_polygon"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.parallel_gradient_search": {
  "data": {
   "shadows": "pyresample.gradient.parallel_gradient_search"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.test_check_overlap": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pyresample.gradient.check_overlap",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_concatenate_chunks": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.full",
    "numpy.ones",
    "numpy.zeros",
    "pyresample.gradient._concatenate_chunks"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_concatenate_chunks_stack_calls": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.ones",
    "numpy.zeros",
    "pyresample.gradient._concatenate_chunks",
    "str",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_get_border_lonlats": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pyresample.gradient.get_border_lonlats",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_get_polygon": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pyresample.gradient.get_border_lonlats.assert_called_with",
    "pyresample.gradient.get_border_lonlats.return_value",
    "pyresample.gradient.get_polygon",
    "shapely.geometry.Polygon.assert_called_with",
    "shapely.geometry.Polygon.return_value",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_gradient_resample_data": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "AssertionError",
    "IndexError",
    "numpy.zeros",
    "pyresample.gradient._gradient_resample_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_parallel_gradient_search": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros",
    "pyresample.gradient.parallel_gradient_search",
    "str",
    "unittest.mock.call",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.test_parallel_gradient_search.mock_cc": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "pyresample.test.test_gradient.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_gradient.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.test.test_grid": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_grid.Test": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_grid.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_grid.Test.test_from_latlon": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.fromfunction",
    "pyresample.grid.get_image_from_lonlats"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_generate_linesample": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "numpy.uint16",
    "pyresample.test.test_grid.tmp",
    "pyresample.utils.generate_quick_linesample_arrays"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_latlons": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_latlons_mp": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyresample.test.test_grid.mp"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_linesample": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.fromfunction",
    "pyresample.grid.get_image_from_linesample"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_linesample_multi": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.fromfunction",
    "numpy.zeros",
    "pyresample.grid.get_image_from_linesample"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_proj4_string": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "frozenset",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_proj_coords": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_resampled_image": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.grid.get_resampled_image"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_resampled_image_masked": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.ma.ones",
    "numpy.zeros",
    "pyresample.grid.get_resampled_image"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_resampled_image_mp": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.grid.get_resampled_image",
    "pyresample.test.test_grid.mp"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_grid.Test.test_single_lonlat": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pyresample.test.test_grid.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_grid.grid": {
  "data": {
   "shadows": "pyresample.grid"
  },
  "type": "import"
 },
 "pyresample.test.test_grid.is_pyproj2": {
  "data": {
   "shadows": "pyresample.utils.is_pyproj2"
  },
  "type": "import"
 },
 "pyresample.test.test_grid.mp": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pyresample.test.test_grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_grid.tmp": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pyresample.test.test_grid.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_grid.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_image": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_image.Test": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.test.test_image.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_image.Test.test_bilinear": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerBilinear",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_bilinear_multi": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerBilinear",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_bilinear_swath": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.image.ImageContainerBilinear",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_image": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerQuick",
    "pyresample.test.test_image.numpy",
    "pyresample.test.test_image.tmp"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_image_segments": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerQuick",
    "pyresample.test.test_image.numpy",
    "pyresample.test.test_image.tmp"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_masked_image": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerQuick",
    "pyresample.test.test_image.mask",
    "pyresample.test.test_image.numpy",
    "pyresample.test.test_image.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_masked_image_fill": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerQuick",
    "pyresample.test.test_image.mask",
    "pyresample.test.test_image.numpy",
    "pyresample.test.test_image.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_neighbour": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerNearest",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_neighbour_multi": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerNearest",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_neighbour_multi_preproc": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyresample.image.ImageContainer",
    "pyresample.test.test_image.numpy",
    "pyresample.utils.generate_nearest_neighbour_linesample_arrays"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_resize": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerNearest",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_swath": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.image.ImageContainerNearest",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_nearest_swath_segments": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.image.ImageContainerNearest",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.Test.test_return_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyresample.image.ImageContainerQuick",
    "pyresample.test.test_image.numpy"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_image.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_image.image": {
  "data": {
   "shadows": "pyresample.image"
  },
  "type": "import"
 },
 "pyresample.test.test_image.mask": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pyresample.test.test_image.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_image.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_image.tmp": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyresample.test.test_image.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_image.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_kd_tree.Test": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyresample.test.test_kd_tree.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_kd_tree.Test.setUpClass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.CoordinateDefinition",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_custom",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom.wf": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_base": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "pyresample.kd_tree.resample_custom",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_base.wf": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_custom",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi.wf1": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi.wf2": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi.wf3": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi_from_sample": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info",
    "pyresample.kd_tree.get_sample_from_neighbour_info",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi_from_sample.wf1": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi_from_sample.wf2": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_multi_from_sample.wf3": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_uncert": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "len",
    "pyresample.kd_tree.resample_custom",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_custom_uncert.wf": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_dtype": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.fromfunction",
    "pyresample.geometry.GridDefinition",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_base": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_fwhm": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "pyresample.utils.fwhm2sigma",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_multi": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_multi_mp": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_multi_mp_segments": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_multi_mp_segments_empty": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_multi_uncert": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "enumerate",
    "len",
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_sparse": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_gauss_uncert": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "len",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.utils.catch_warnings",
    "pyresample.utils.fwhm2sigma",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_fill_float": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_fill_int": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_full": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_full_multi": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.column_stack",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_gauss": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_multi_from_sample": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.column_stack",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info",
    "pyresample.kd_tree.get_sample_from_neighbour_info",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_nearest": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.fromfile",
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.test.test_kd_tree.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_masked_nearest_1d": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "numpy.ma.array",
    "numpy.ones",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_1d": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_base": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_empty": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_empty_masked": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_empty_multi": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_empty_multi_masked": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_from_sample": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info",
    "pyresample.kd_tree.get_sample_from_neighbour_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_from_sample_np_dtypes": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.fromfunction",
    "numpy.uint16",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.get_neighbour_info",
    "pyresample.kd_tree.get_sample_from_neighbour_info"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_masked_swath_target": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.fromfunction",
    "numpy.ma.masked_array",
    "numpy.ones_like",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_mp": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_multi": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_multi_unraveled": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.dstack",
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_remap": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.Test.test_nearest_segments": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "pyresample.test.test_kd_tree.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.setUpClass": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "classmethod",
    "dask.array.from_array",
    "dfa",
    "numpy.array",
    "numpy.fromfunction",
    "numpy.nan",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.CoordinateDefinition",
    "pyresample.geometry.SwathDefinition",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_area_2d_to_area_1n": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "AssertionError",
    "dask.array.Array",
    "numpy.nansum",
    "pyresample.kd_tree.XArrayResamplerNN",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_area_2d_to_area_1n_3d_data": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "AssertionError",
    "dask.array.Array",
    "numpy.nansum",
    "pyresample.kd_tree.XArrayResamplerNN",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_area_2d_to_area_1n_no_roi": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "dask.array.Array",
    "numpy.nansum",
    "pyresample.kd_tree.XArrayResamplerNN",
    "unittest.mock.patch.object",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_swath_1d_mask_to_grid_1n": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "dask.array.Array",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pyresample.kd_tree.XArrayResamplerNN",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_swath_1d_mask_to_grid_8n": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "dask.array.Array",
    "pyresample.kd_tree.XArrayResamplerNN",
    "pyresample.test.test_kd_tree.unittest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_swath_2d_mask_to_area_1n": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "dask.array.Array",
    "numpy.nansum",
    "pyresample.kd_tree.XArrayResamplerNN",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.TestXArrayResamplerNN.test_nearest_type_preserve": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyresample.kd_tree.XArrayResamplerNN",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_kd_tree.XArrayResamplerNN": {
  "data": {
   "shadows": "pyresample.kd_tree.XArrayResamplerNN"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.catch_warnings": {
  "data": {
   "shadows": "pyresample.test.utils.catch_warnings"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_kd_tree.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.test.test_plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mpl_toolkits.basemap.Basemap",
    "numpy.array",
    "numpy.int64",
    "pyresample.test.test_plot.matplotlib"
   ]
  },
  "type": "module"
 },
 "pyresample.test.test_plot.BASEMAP_NOT_CARTOPY": {
  "data": {
   "shadows": "pyresample.plot.BASEMAP_NOT_CARTOPY"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.Basemap": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyresample.test.test_plot.MERIDIANS1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyresample.test.test_plot.PARALLELS1": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyresample.test.test_plot.Test": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.load",
    "pyresample.test.test_plot.os",
    "pyresample.test.test_plot.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_plot.Test.setUp": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_add_gridlines": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyresample.plot._add_gridlines",
    "pyresample.test.test_plot.MERIDIANS1",
    "pyresample.test.test_plot.PARALLELS1",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_area_def2basemap": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mpl_toolkits.basemap.Basemap",
    "pyresample.parse_area_file",
    "pyresample.plot.area_def2basemap",
    "pyresample.test.test_plot.os",
    "pyresample.test.test_plot.unittest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_easeplot": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.parse_area_file",
    "pyresample.plot._get_quicklook",
    "pyresample.test.test_plot.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_ellps2axis": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyresample.plot.ellps2axis"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_orthoplot": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.parse_area_file",
    "pyresample.plot._get_quicklook",
    "pyresample.test.test_plot.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_plate_carreeplot": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_nearest",
    "pyresample.parse_area_file",
    "pyresample.plot._get_quicklook",
    "pyresample.test.test_plot.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot.Test.test_translate_coast_res": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "pyresample.plot.BASEMAP_NOT_CARTOPY",
    "pyresample.plot._translate_coast_resolution_to_cartopy",
    "pyresample.test.test_plot.sys"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_plot._add_gridlines": {
  "data": {
   "shadows": "pyresample.plot._add_gridlines"
  },
  "type": "import"
 },
 "pyresample.test.test_plot._translate_coast_resolution_to_cartopy": {
  "data": {
   "shadows": "pyresample.plot._translate_coast_resolution_to_cartopy"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.parse_area_file": {
  "data": {
   "shadows": "pyresample.parse_area_file"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.plot": {
  "data": {
   "shadows": "pyresample.plot"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyresample.test.test_plot.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_spatial_mp": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_spatial_mp.SpatialMPTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyresample.test.test_spatial_mp.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spatial_mp.SpatialMPTest.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spatial_mp.SpatialMPTest.test_cartesian": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.testing.assert_almost_equal",
    "pyresample._spatial_mp.Cartesian",
    "type"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spatial_mp.SpatialMPTest.test_cartesian_without_ne": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.testing.assert_almost_equal",
    "pyresample._spatial_mp.Cartesian",
    "pyresample._spatial_mp.ne",
    "type"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spatial_mp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_spatial_mp.sp": {
  "data": {
   "shadows": "pyresample._spatial_mp"
  },
  "type": "import"
 },
 "pyresample.test.test_spatial_mp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_spherical.Arc": {
  "data": {
   "shadows": "pyresample.spherical.Arc"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical.CCoordinate": {
  "data": {
   "shadows": "pyresample.spherical.CCoordinate"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical.SCoordinate": {
  "data": {
   "shadows": "pyresample.spherical.SCoordinate"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical.SphPolygon": {
  "data": {
   "shadows": "pyresample.spherical.SphPolygon"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical.TestArc": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyresample.test.test_spherical.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical.TestArc.test_angle": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.deg2rad",
    "numpy.pi",
    "numpy.rad2deg",
    "pyresample.spherical.Arc",
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestArc.test_eq": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "pyresample.spherical.Arc",
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestArc.test_intersection": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.deg2rad",
    "numpy.rad2deg",
    "pyresample.spherical.Arc",
    "pyresample.spherical.SCoordinate",
    "round"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestArc.test_ne": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "pyresample.spherical.Arc",
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestArc.test_str": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "pyresample.spherical.Arc",
    "pyresample.spherical.SCoordinate",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyresample.test.test_spherical.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_add": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_cross": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_dot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_eq": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_mul": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_ne": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_norm": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_normalize": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.spherical.CCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_repr": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_str": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestCCoordinate.test_to_spherical": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyresample.spherical.CCoordinate",
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSCoordinate": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyresample.test.test_spherical.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical.TestSCoordinate.test_distance": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSCoordinate.test_hdistance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyresample.spherical.SCoordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSCoordinate.test_repr": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyresample.spherical.SCoordinate",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSCoordinate.test_str": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyresample.spherical.SCoordinate",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSphericalPolygon": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyresample.test.test_spherical.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical.TestSphericalPolygon.test_area": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "numpy.pi",
    "pyresample.spherical.SphPolygon"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSphericalPolygon.test_bool": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.deg2rad",
    "pyresample.spherical.SphPolygon"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSphericalPolygon.test_consistent_radius": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "pyresample.spherical.SphPolygon"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.TestSphericalPolygon.test_is_inside": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "pyresample.spherical.SphPolygon"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_spherical_geometry.Arc": {
  "data": {
   "shadows": "pyresample.spherical_geometry.Arc"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.Coordinate": {
  "data": {
   "shadows": "pyresample.spherical_geometry.Coordinate"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.TestOverlap": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyresample.test.test_spherical_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical_geometry.TestOverlap.assert_raises": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "call_able",
    "pyresample.test.test_spherical_geometry.sys"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.TestOverlap.test_inside": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyresample.geometry.SwathDefinition",
    "pyresample.spherical_geometry.Coordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.TestOverlap.test_overlap_rate": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.TestOverlap.test_overlaps": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.array",
    "pyresample.geometry.SwathDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.TestSphereGeometry": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyresample.test.test_spherical_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_spherical_geometry.TestSphereGeometry.test_angle": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.Coordinate",
    "pyresample.test.test_spherical_geometry.math"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.TestSphereGeometry.test_intersects": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pyresample.spherical_geometry.Arc",
    "pyresample.spherical_geometry.Coordinate"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_spherical_geometry.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyresample.test.test_spherical_geometry.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_swath": {
  "data": {
   "symbols_in_volume": [
    "pyresample.test.test_swath.warnings"
   ]
  },
  "type": "module"
 },
 "pyresample.test.test_swath.Test": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.load",
    "pyresample.test.test_swath.os",
    "pyresample.test.test_swath.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_swath.Test.test_self_map": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.test_swath.sys",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_swath.Test.test_self_map_multi": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "numpy.column_stack",
    "pyresample.geometry.SwathDefinition",
    "pyresample.kd_tree.resample_gauss",
    "pyresample.test.test_swath.sys",
    "pyresample.test.utils.catch_warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_swath.catch_warnings": {
  "data": {
   "shadows": "pyresample.test.utils.catch_warnings"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.kd_tree": {
  "data": {
   "shadows": "pyresample.kd_tree"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.suite": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyresample.test.test_swath.Test",
    "pyresample.test.test_swath.unittest"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_swath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_swath.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.test.test_utils": {
  "data": {},
  "type": "module"
 },
 "pyresample.test.test_utils.Affine": {
  "data": {
   "shadows": "affine.Affine"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.AreaNotFound": {
  "data": {
   "shadows": "pyresample.area_config.AreaNotFound"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.DynamicAreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.DynamicAreaDefinition"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser.test_area_file_not_found_exception": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyresample.area_config.load_area",
    "pyresample.test.test_utils.pathlib"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser.test_area_parser_legacy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "int",
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.os",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser.test_commented": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser.test_load_area": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyresample.load_area",
    "pyresample.test.test_utils.os",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLegacyAreaParser.test_not_found_exception": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pyresample.area_config.AreaNotFound",
    "pyresample.area_config.parse_area_file",
    "pyresample.test.test_utils.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.setUp": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "pyresample.test.test_utils._prepare_cf_llnocrs",
    "pyresample.test.test_utils._prepare_cf_llwgs84",
    "pyresample.test.test_utils._prepare_cf_nh10km"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_guess_axis_varname": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._guess_cf_axis_varname"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_guess_lonlat": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._guess_cf_lonlat_varname"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_is_valid_coordinate_standardname": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.utils.cf._is_valid_coordinate_standardname",
    "pyresample.utils.cf._valid_cf_type_of_grid_mapping"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_is_valid_coordinate_variable": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._is_valid_coordinate_variable"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_load_crs_from_cf_gridmapping": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "pyresample.utils.cf._load_crs_from_cf_gridmapping",
    "validate_crs_llwgs84",
    "validate_crs_nh10km"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_load_crs_from_cf_gridmapping.validate_crs_llwgs84": {
  "data": {
   "lineno": 969
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Private.test_cf_load_crs_from_cf_gridmapping.validate_crs_nh10km": {
  "data": {
   "lineno": 964
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_from_wrong_filepath": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "pyresample.test.test_utils.os",
    "pyresample.utils.load_cf_area"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_llnocrs": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "pyresample.test.test_utils._prepare_cf_llnocrs",
    "pyresample.utils.load_cf_area",
    "validate_llnocrs"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_llnocrs.validate_llnocrs": {
  "data": {
   "lineno": 847
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_llwgs84": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "pyresample.test.test_utils._prepare_cf_llwgs84",
    "pyresample.utils.load_cf_area",
    "validate_llwgs84"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_llwgs84.validate_llwgs84": {
  "data": {
   "lineno": 813
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_nh10km": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "pyresample.test.test_utils._prepare_cf_nh10km",
    "pyresample.utils.load_cf_area",
    "validate_nh10km_adef"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_nh10km.validate_nh10km_adef": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_nh10km_cfinfo": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "pyresample.test.test_utils._prepare_cf_nh10km",
    "pyresample.utils.load_cf_area",
    "validate_nh10km_cfinfo"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_nh10km_cfinfo.validate_nh10km_cfinfo": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestLoadCFArea_Public.test_load_cf_parameters_errors": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.test.test_utils._prepare_cf_nh10km",
    "pyresample.utils.load_cf_area"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestMisc.test_convert_proj_floats": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyresample.utils.proj4.convert_proj_floats"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_def2yaml_converter": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pyresample.convert_def_to_yaml",
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.os",
    "pyresample.test.test_utils.tempfile",
    "pyresample.utils.is_pyproj2",
    "set"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_get_area_def_from_raster": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "affine.Affine",
    "pyproj.CRS",
    "pyresample.test.test_utils.tmptiff",
    "pyresample.utils.is_pyproj2",
    "pyresample.utils.rasterio.get_area_def_from_raster",
    "rasterio.crs.CRS"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_get_area_def_from_raster_extracts_proj_id": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pyresample.test.test_utils.tmptiff",
    "pyresample.utils.rasterio.get_area_def_from_raster",
    "rasterio.crs.CRS"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_get_area_def_from_raster_non_georef_respects_proj_dict": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "affine.Affine",
    "pyproj.CRS",
    "pyresample.test.test_utils.tmptiff",
    "pyresample.utils.is_pyproj2",
    "pyresample.utils.rasterio.get_area_def_from_raster"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_get_area_def_from_raster_non_georef_value_err": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "ValueError",
    "affine.Affine",
    "pyresample.test.test_utils.tmptiff",
    "pyresample.utils.rasterio.get_area_def_from_raster"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_get_area_def_from_raster_rotated_value_err": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "affine.Affine",
    "pyresample.test.test_utils.tmptiff",
    "pyresample.utils.rasterio.get_area_def_from_raster"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_proj4_radius_parameters_default": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyresample.utils.proj4",
    "pyresample.utils.proj4.proj4_radius_parameters",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_proj4_radius_parameters_ellps": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyresample.utils.proj4",
    "pyresample.utils.proj4.proj4_radius_parameters",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_proj4_radius_parameters_provided": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyresample.utils.proj4",
    "pyresample.utils.proj4.proj4_radius_parameters",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_proj4_radius_parameters_spherical": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyresample.utils.proj4",
    "pyresample.utils.proj4.proj4_radius_parameters",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_proj4_str_dict_conversion": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "float",
    "pyresample.utils.proj4.proj4_dict_to_str",
    "pyresample.utils.proj4.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_unicode_proj4_string": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pyresample.get_area_def"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_wrap_and_check": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.isclose",
    "numpy.ones_like",
    "numpy.where",
    "pyresample.utils.check_and_wrap"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestMisc.test_wrap_longitudes": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.arange",
    "pyresample.utils.wrap_longitudes"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestPreprocessing": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestPreprocessing.test_nearest_neighbor_area_area": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition",
    "pyresample.utils.generate_nearest_neighbour_linesample_arrays",
    "pyresample.utils.proj4.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestPreprocessing.test_nearest_neighbor_area_grid": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.float64",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.GridDefinition",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude",
    "pyresample.utils.generate_nearest_neighbour_linesample_arrays",
    "pyresample.utils.proj4.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestPreprocessing.test_nearest_neighbor_grid_area": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.float64",
    "pyresample.geometry.AreaDefinition",
    "pyresample.geometry.GridDefinition",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude",
    "pyresample.utils.generate_nearest_neighbour_linesample_arrays",
    "pyresample.utils.proj4.proj4_str_to_dict"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestPreprocessing.test_nearest_neighbor_grid_grid": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.float64",
    "pyresample.geometry.GridDefinition",
    "pyresample.test.utils.create_test_latitude",
    "pyresample.test.utils.create_test_longitude",
    "pyresample.utils.generate_nearest_neighbour_linesample_arrays"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestProjRotation": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestProjRotation.test_norotation_legacy": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pyresample.area_config.load_area",
    "pyresample.test.test_utils.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestProjRotation.test_norotation_yaml": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pyresample.area_config.load_area",
    "pyresample.test.test_utils.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestProjRotation.test_rotation_legacy": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "pyresample.area_config.load_area",
    "pyresample.test.test_utils.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestProjRotation.test_rotation_yaml": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pyresample.area_config.load_area",
    "pyresample.test.test_utils.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestYAMLAreaParser": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyresample.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyresample.test.test_utils.TestYAMLAreaParser.test_area_parser_yaml": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.os",
    "pyresample.utils.is_pyproj2"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestYAMLAreaParser.test_dynamic_area_parser_yaml": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "hasattr",
    "pyresample.geometry.DynamicAreaDefinition",
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.os"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.TestYAMLAreaParser.test_multiple_file_content": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "DeprecationWarning",
    "len",
    "pyresample.area_config.load_area_from_string",
    "pyresample.parse_area_file",
    "pyresample.test.test_utils.io"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils._guess_cf_axis_varname": {
  "data": {
   "shadows": "pyresample.utils.cf._guess_cf_axis_varname"
  },
  "type": "import"
 },
 "pyresample.test.test_utils._guess_cf_lonlat_varname": {
  "data": {
   "shadows": "pyresample.utils.cf._guess_cf_lonlat_varname"
  },
  "type": "import"
 },
 "pyresample.test.test_utils._is_valid_coordinate_standardname": {
  "data": {
   "shadows": "pyresample.utils.cf._is_valid_coordinate_standardname"
  },
  "type": "import"
 },
 "pyresample.test.test_utils._is_valid_coordinate_variable": {
  "data": {
   "shadows": "pyresample.utils.cf._is_valid_coordinate_variable"
  },
  "type": "import"
 },
 "pyresample.test.test_utils._load_crs_from_cf_gridmapping": {
  "data": {
   "shadows": "pyresample.utils.cf._load_crs_from_cf_gridmapping"
  },
  "type": "import"
 },
 "pyresample.test.test_utils._prepare_cf_llnocrs": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ma.masked_all",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils._prepare_cf_llwgs84": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ma.masked_all",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils._prepare_cf_nh10km": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ma.masked_all",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils._valid_cf_type_of_grid_mapping": {
  "data": {
   "shadows": "pyresample.utils.cf._valid_cf_type_of_grid_mapping"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.check_slice_orientation": {
  "data": {
   "shadows": "pyresample.utils.check_slice_orientation"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.convert_def_to_yaml": {
  "data": {
   "shadows": "pyresample.convert_def_to_yaml"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.create_test_latitude": {
  "data": {
   "shadows": "pyresample.test.utils.create_test_latitude"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.create_test_longitude": {
  "data": {
   "shadows": "pyresample.test.utils.create_test_longitude"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.get_area_def": {
  "data": {
   "shadows": "pyresample.get_area_def"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.is_pyproj2": {
  "data": {
   "shadows": "pyresample.utils.is_pyproj2"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.load_area": {
  "data": {
   "shadows": "pyresample.area_config.load_area"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.load_area_from_string": {
  "data": {
   "shadows": "pyresample.area_config.load_area_from_string"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.load_cf_area": {
  "data": {
   "shadows": "pyresample.utils.load_cf_area"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.parse_area_file": {
  "data": {
   "shadows": "pyresample.parse_area_file"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.test_check_slice_orientation": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "pyresample.utils.check_slice_orientation",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.tmptiff": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.uint8",
    "pyresample.test.test_utils.rasterio",
    "pyresample.test.test_utils.uuid"
   ]
  },
  "type": "function"
 },
 "pyresample.test.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "pyresample.test.test_utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.test.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyproj.CRS"
   ]
  },
  "type": "module"
 },
 "pyresample.test.utils.AstropyDeprecationWarning": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyresample.test.utils.AstropyPendingDeprecationWarning": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyresample.test.utils.CRS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyresample.test.utils.CustomScheduler": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyresample.test.utils.CustomScheduler.__call__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "RuntimeError",
    "pyresample.test.utils.dask"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.CustomScheduler.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pyresample.test.utils._deprecations_as_exceptions": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyresample.test.utils._include_astropy_deprecations": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyresample.test.utils.catch_warnings": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyresample.test.utils.warnings"
   ]
  },
  "type": "class"
 },
 "pyresample.test.utils.catch_warnings.__enter__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "pyresample.test.utils.catch_warnings",
    "pyresample.test.utils.treat_deprecations_as_exceptions",
    "pyresample.test.utils.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.catch_warnings.__exit__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pyresample.test.utils.treat_deprecations_as_exceptions"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.catch_warnings.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyresample.test.utils.catch_warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.compiler": {
  "data": {
   "shadows": "compiler"
  },
  "type": "import"
 },
 "pyresample.test.utils.create_test_latitude": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.linspace",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.create_test_longitude": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.linspace",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "pyresample.test.utils.friendly_crs_equal": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "pyproj.CRS"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.test.utils.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyresample.test.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyresample.test.utils.treat_deprecations_as_exceptions": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ImportError",
    "hasattr",
    "isinstance",
    "pyresample.test.utils.AstropyDeprecationWarning",
    "pyresample.test.utils.AstropyPendingDeprecationWarning",
    "pyresample.test.utils._deprecations_as_exceptions",
    "pyresample.test.utils._include_astropy_deprecations",
    "pyresample.test.utils.sys",
    "pyresample.test.utils.types",
    "pyresample.test.utils.warnings"
   ]
  },
  "type": "function"
 },
 "pyresample.test.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyresample.test.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.utils": {
  "data": {
   "shadows": "pyresample.utils"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "cartopy.crs.from_proj",
    "logging.getLogger",
    "numpy.ndarray",
    "pyresample.utils.cartopy._lesser_from_proj",
    "xarray.DataArray"
   ]
  },
  "type": "module"
 },
 "pyresample.utils.cartopy.DataArray": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyresample.utils.cartopy._GLOBE_PARAMS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyresample.utils.cartopy._PROJ4Projection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cartopy.crs.Projection"
   ]
  },
  "type": "class"
 },
 "pyresample.utils.cartopy._PROJ4Projection.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyresample.utils.cartopy._GLOBE_PARAMS",
    "pyresample.utils.cartopy._PROJ4Projection",
    "pyresample.utils.cartopy._globe_from_proj4",
    "pyresample.utils.cartopy.pyproj",
    "pyresample.utils.cartopy.warnings",
    "pyresample.utils.proj4.proj4_str_to_dict",
    "super"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._PROJ4Projection.__repr__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._PROJ4Projection.boundary": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property",
    "shapely.geometry.LineString"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._PROJ4Projection.threshold": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abs",
    "min",
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._PROJ4Projection.x_limits": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._PROJ4Projection.y_limits": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._globe_from_proj4": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cartopy.crs.Globe",
    "filter",
    "pyresample.utils.cartopy._GLOBE_PARAMS"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy._lesser_from_proj": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyresample.utils.cartopy._PROJ4Projection"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cartopy.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.from_proj": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "pyresample.utils.cartopy.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyresample.utils.cartopy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.proj4_str_to_dict": {
  "data": {
   "shadows": "pyresample.utils.proj4.proj4_str_to_dict"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.sgeom": {
  "data": {
   "shadows": "shapely.geometry"
  },
  "type": "import"
 },
 "pyresample.utils.cartopy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyresample.utils.cf": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pyresample.utils.cf._valid_cf_coordinate_standardnames"
   ]
  },
  "type": "module"
 },
 "pyresample.utils.cf._convert_XY_CF_to_Proj": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyresample.utils.cf._get_area_extent_from_cf_axis": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "pyresample.utils.cf._guess_cf_axis_varname": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._is_valid_coordinate_variable"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._guess_cf_lonlat_varname": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._is_valid_coordinate_standardname": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._valid_cf_coordinate_standardnames",
    "pyresample.utils.cf._valid_cf_type_of_grid_mapping"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._is_valid_coordinate_variable": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "getattr",
    "pyresample.utils.cf._is_valid_coordinate_standardname"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_one_variable": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "dict",
    "pyresample.utils.cf._convert_XY_CF_to_Proj",
    "pyresample.utils.cf._load_cf_area_one_variable_areadef",
    "pyresample.utils.cf._load_cf_area_one_variable_axis",
    "pyresample.utils.cf._load_cf_area_one_variable_crs"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_one_variable_areadef": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pyresample.geometry.AreaDefinition.from_extent",
    "pyresample.utils.cf._get_area_extent_from_cf_axis"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_one_variable_axis": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pyresample.utils.cf._guess_cf_axis_varname",
    "pyresample.utils.cf._is_valid_coordinate_variable",
    "pyresample.utils.cf._load_cf_axis_info"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_one_variable_crs": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "pyresample.utils.cf._load_crs_from_cf_gridmapping",
    "pyresample.utils.cf._valid_cf_type_of_grid_mapping",
    "pyresample.utils.cf.pyproj"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_several_variables": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "_indices_unique_AreaDefs",
    "pyresample.utils.cf._load_cf_area_one_variable"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_area_several_variables._indices_unique_AreaDefs": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_cf_axis_info": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "float",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._load_crs_from_cf_gridmapping": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "pyresample.utils.cf._valid_cf_type_of_grid_mapping",
    "pyresample.utils.cf.pyproj"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf._valid_cf_coordinate_standardnames": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyresample.utils.cf._valid_cf_type_of_grid_mapping": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyresample.utils.cf.geometry": {
  "data": {
   "shadows": "pyresample.geometry"
  },
  "type": "import"
 },
 "pyresample.utils.cf.load_cf_area": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "pyresample.utils.cf._guess_cf_lonlat_varname",
    "pyresample.utils.cf._load_cf_area_one_variable",
    "pyresample.utils.cf._load_cf_area_several_variables",
    "xarray.Dataset",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.cf.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pyresample.utils.cf.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyresample.utils.proj4": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyproj.crs.CRS"
   ]
  },
  "type": "module"
 },
 "pyresample.utils.proj4.CRS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyresample.utils.proj4.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "pyresample.utils.proj4.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyresample.utils.proj4.convert_proj_floats": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.proj4.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyresample.utils.proj4.proj4_dict_to_str": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.proj4.proj4_radius_parameters": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "pyproj.Geod",
    "pyproj.crs.CRS",
    "pyresample.utils.proj4.math",
    "pyresample.utils.proj4.proj4_str_to_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.proj4.proj4_str_to_dict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "hasattr",
    "pyproj.crs.CRS",
    "pyresample.utils.proj4.convert_proj_floats"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.rasterio": {
  "data": {},
  "type": "module"
 },
 "pyresample.utils.rasterio.AreaDefinition": {
  "data": {
   "shadows": "pyresample.geometry.AreaDefinition"
  },
  "type": "import"
 },
 "pyresample.utils.rasterio._get_area_def_from_gdal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "osgeo.osr.SpatialReference",
    "proj4_str_to_dict",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.rasterio._get_area_def_from_rasterio": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "pyresample.geometry.AreaDefinition"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.rasterio.gdal": {
  "data": {
   "shadows": "osgeo.gdal"
  },
  "type": "import"
 },
 "pyresample.utils.rasterio.get_area_def_from_raster": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "osgeo.gdal.Open",
    "pyresample.utils.rasterio._get_area_def_from_gdal",
    "pyresample.utils.rasterio._get_area_def_from_rasterio",
    "pyresample.utils.rasterio.rasterio",
    "str"
   ]
  },
  "type": "function"
 },
 "pyresample.utils.rasterio.osr": {
  "data": {
   "shadows": "osgeo.osr"
  },
  "type": "import"
 },
 "pyresample.utils.rasterio.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "pyresample.version": {
  "data": {},
  "type": "module"
 },
 "pyresample.version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyresample.version.json",
    "pyresample.version.version_json"
   ]
  },
  "type": "function"
 },
 "pyresample.version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyresample.version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 }
}