{
 "liknorm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm._machine": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm._machine.LikNormMachine": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "liknorm._machine.LikNormMachine.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "liknorm._machine.LikNormMachine.finish": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "liknorm._machine.LikNormMachine.moments": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.float64",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "liknorm._machine.ptr": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "liknorm._testit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm._testit.test": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "liknorm.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm.test.test_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm.test.test_imports._clean_up_import_names": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "liknorm.test.test_imports._get_import_names": {
  "lineno": 4,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "liknorm.test.test_imports.test_import_names": {
  "lineno": 20,
  "symbols_in_volume": [
   "liknorm"
  ],
  "type": "function"
 },
 "liknorm.test.test_liknorm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "liknorm.test.test_liknorm.test_alignof_double": {
  "lineno": 14,
  "symbols_in_volume": [
   "liknorm._ffi.ffi.alignof",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "liknorm.test.test_liknorm.test_liknormmachine": {
  "lineno": 72,
  "symbols_in_volume": [
   "liknorm.LikNormMachine",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "liknorm.test.test_liknorm.test_nbinomial": {
  "lineno": 20,
  "symbols_in_volume": [
   "liknorm.LikNormMachine",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "liknorm.test.test_liknorm.test_sizeof_double": {
  "lineno": 8,
  "symbols_in_volume": [
   "liknorm._ffi.ffi.sizeof",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 }
}