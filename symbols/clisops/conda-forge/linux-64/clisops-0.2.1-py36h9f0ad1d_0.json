{
 "clisops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.__version__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core.subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core.subset._check_crs_compatibility": {
  "lineno": 846,
  "symbols_in_volume": [
   "pyproj.crs.CRS",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_desc_coords": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.flip"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps": {
  "lineno": 822,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps_old": {
  "lineno": 835,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset.assign_bounds": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.flip",
   "typing.Optional",
   "typing.Tuple",
   "xarray.Coordinate"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames.func_checker": {
  "lineno": 135,
  "symbols_in_volume": [
   "functools.wraps",
   "logging.info",
   "warnings.warn",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_lons": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_lons.func_checker": {
  "lineno": 92,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.all",
   "numpy.any",
   "numpy.asarray",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates.func_checker": {
  "lineno": 34,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da.func_checker": {
  "lineno": 184,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn",
   "xarray.DataArray",
   "xarray.core.utils.get_temp_dimname"
  ],
  "type": "function"
 },
 "clisops.core.subset.create_mask": {
  "lineno": 383,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.tools.sjoin",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.meshgrid",
   "pandas.DataFrame",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_string",
   "shapely.geometry.Point",
   "warnings.warn",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "clisops.core.subset.create_mask_vectorize": {
  "lineno": 303,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "numpy.asarray",
   "numpy.meshgrid",
   "numpy.nan",
   "numpy.zeros",
   "shapely.vectorized.contains",
   "warnings.warn",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "clisops.core.subset.distance": {
  "lineno": 1037,
  "symbols_in_volume": [
   "pyproj.Geod",
   "typing.Sequence",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.apply_ufunc",
   "xarray.broadcast"
  ],
  "type": "function"
 },
 "clisops.core.subset.distance.func": {
  "lineno": 1075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.in_bounds": {
  "lineno": 809,
  "symbols_in_volume": [
   "typing.Tuple",
   "xarray.Coordinate"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_bbox": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_gridpoint": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.concat"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_shape": {
  "lineno": 476,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.GeoDataFrame.from_file",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "pathlib.Path",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_cf",
   "pyproj.crs.CRS.from_string",
   "pyproj.crs.CRS.from_user_input",
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_time": {
  "lineno": 985,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich.func_checker": {
  "lineno": 220,
  "symbols_in_volume": [
   "functools.wraps",
   "geopandas.GeoDataFrame",
   "numpy.max",
   "numpy.min",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_string",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon",
   "shapely.ops.cascaded_union",
   "shapely.ops.split",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.exceptions.InvalidParameterValue": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.exceptions.MissingParameterValue": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.average": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.regrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.subset._subset": {
  "lineno": 15,
  "symbols_in_volume": [
   "clisops.core.subset_bbox",
   "clisops.core.subset_time",
   "clisops.utils.map_params",
   "logging.debug"
  ],
  "type": "function"
 },
 "clisops.ops.subset.subset": {
  "lineno": 29,
  "symbols_in_volume": [
   "logging.info",
   "os.path.join",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "clisops.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.utils._map_space": {
  "lineno": 31,
  "symbols_in_volume": [
   "logging.error"
  ],
  "type": "function"
 },
 "clisops.utils._map_time": {
  "lineno": 18,
  "symbols_in_volume": [
   "logging.error"
  ],
  "type": "function"
 },
 "clisops.utils.map_params": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.parse_date": {
  "lineno": 9,
  "symbols_in_volume": [
   "dateutil.parser.parse"
  ],
  "type": "function"
 },
 "clisops.utils.parse_date_year": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests._common": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "tests._common.cmip5_archive_base": {
  "lineno": 10,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.conftest.areacella": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.convolve",
   "numpy.cos",
   "numpy.diff",
   "numpy.newaxis",
   "numpy.radians",
   "pytest.fixture",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.huss_series": {
  "lineno": 220,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.huss_series._huss_series": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.ndq_series": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.lognormal",
   "pandas.DateOffset",
   "pandas.date_range",
   "pytest.fixture",
   "xarray.DataArray",
   "xarray.IndexVariable"
  ],
  "type": "function"
 },
 "tests.conftest.pr_ndseries": {
  "lineno": 90,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.pr_ndseries._pr_series": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.atleast_3d",
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.pr_series": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.pr_series._pr_series": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.ps_series": {
  "lineno": 235,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ps_series._ps_series": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.q_series": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.q_series._q_series": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.rh_series": {
  "lineno": 190,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.rh_series._rh_series": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tas_series": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tas_series._tas_series": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tasmax_series": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tasmax_series._tasmax_series": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tasmin_series": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tasmin_series._tasmin_series": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tmp_netcdf_filename": {
  "lineno": 9,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ws_series": {
  "lineno": 205,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ws_series._ws_series": {
  "lineno": 207,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.core.test_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.core.test_subset.TestDistance": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.core.test_subset.TestDistance.test_broadcasting": {
  "lineno": 796,
  "symbols_in_volume": [
   "clisops.core.subset.distance",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.unravel_index",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestDistance.test_values": {
  "lineno": 783,
  "symbols_in_volume": [
   "clisops.core.subset.distance",
   "numpy.testing.assert_almost_equal",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox": {
  "lineno": 298,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetBbox.test_badly_named_latlons": {
  "lineno": 436,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_dataset": {
  "lineno": 311,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_inverted_coords": {
  "lineno": 418,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.asarray",
   "numpy.flip",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.random.rand",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular": {
  "lineno": 381,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.isnan",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular_dataset": {
  "lineno": 397,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_positive_lons": {
  "lineno": 489,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.array",
   "numpy.asarray",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_raise": {
  "lineno": 549,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_simple": {
  "lineno": 323,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_curvilinear": {
  "lineno": 472,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.isnan",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_rectilinear": {
  "lineno": 455,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_time": {
  "lineno": 505,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_warnings": {
  "lineno": 564,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "pytest.raises",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint": {
  "lineno": 135,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_dataset": {
  "lineno": 161,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_irregular": {
  "lineno": 187,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.transpose",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_positive_lons": {
  "lineno": 263,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_raise": {
  "lineno": 275,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_simple": {
  "lineno": 173,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_time_simple": {
  "lineno": 144,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_tolerance": {
  "lineno": 288,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape": {
  "lineno": 587,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetShape.compare_vals": {
  "lineno": 603,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.arange",
   "numpy.isnan",
   "numpy.random.RandomState",
   "numpy.random.randint",
   "numpy.testing.assert_array_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_all_neglons": {
  "lineno": 695,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_mask_multiregions": {
  "lineno": 762,
  "symbols_in_volume": [
   "clisops.core.subset.create_mask",
   "geopandas.read_file",
   "numpy.unique",
   "pytest.mark.xfail",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_no_wraps": {
  "lineno": 662,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_rotated_pole_with_time": {
  "lineno": 714,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_allclose",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_small_poly_buffer": {
  "lineno": 740,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_subset_multiregions": {
  "lineno": 774,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "geopandas.read_file",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_wraps": {
  "lineno": 629,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "geopandas.read_file",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetTime.test_simple": {
  "lineno": 18,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_dates_outofbounds": {
  "lineno": 34,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_end_only": {
  "lineno": 98,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_incomplete_years": {
  "lineno": 117,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_start_only": {
  "lineno": 73,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_warnings": {
  "lineno": 55,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "pytest.raises",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_average": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_regrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_subset.test_subset_invalid_space": {
  "lineno": 50,
  "symbols_in_volume": [
   "clisops.exceptions.InvalidParameterValue",
   "clisops.ops.subset.subset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_invalid_time": {
  "lineno": 32,
  "symbols_in_volume": [
   "clisops.exceptions.InvalidParameterValue",
   "clisops.ops.subset.subset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_missing_param": {
  "lineno": 14,
  "symbols_in_volume": [
   "clisops.exceptions.MissingParameterValue",
   "clisops.ops.subset.subset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_space": {
  "lineno": 42,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_space_with_meridian": {
  "lineno": 58,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_time": {
  "lineno": 22,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_rh": {
  "lineno": 99,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_tas": {
  "lineno": 78,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_zostoga": {
  "lineno": 89,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_tas_series": {
  "lineno": 109,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_time_and_space": {
  "lineno": 67,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_utils.test_map_params": {
  "lineno": 22,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_space": {
  "lineno": 57,
  "symbols_in_volume": [
   "clisops.exceptions.InvalidParameterValue",
   "clisops.utils.map_params",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_time": {
  "lineno": 40,
  "symbols_in_volume": [
   "clisops.exceptions.InvalidParameterValue",
   "clisops.utils.map_params",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_missing_param": {
  "lineno": 64,
  "symbols_in_volume": [
   "clisops.exceptions.MissingParameterValue",
   "clisops.utils.map_params",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_space": {
  "lineno": 47,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_time": {
  "lineno": 34,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 },
 "tests.test_utils.test_parse_date": {
  "lineno": 9,
  "symbols_in_volume": [
   "clisops.utils.parse_date",
   "dateutil.parser.ParserError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_utils.test_parse_date_year": {
  "lineno": 16,
  "symbols_in_volume": [
   "clisops.utils.parse_date_year",
   "dateutil.parser.ParserError",
   "pytest.raises"
  ],
  "type": "function"
 }
}