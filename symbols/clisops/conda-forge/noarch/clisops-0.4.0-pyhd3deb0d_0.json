{
 "clisops": {
  "lineno": null,
  "symbols_in_volume": [
   "clisops",
   "os.environ",
   "os.path.dirname",
   "os.path.join",
   "roocs_utils.config.get_config"
  ],
  "type": "module"
 },
 "clisops.__version__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core.subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.core.subset._check_crs_compatibility": {
  "lineno": 970,
  "symbols_in_volume": [
   "pyproj.crs.CRS",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_desc_coords": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.flip"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps": {
  "lineno": 946,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps_old": {
  "lineno": 959,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset.assign_bounds": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.flip",
   "typing.Optional",
   "typing.Tuple",
   "xarray.Coordinate"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames.func_checker": {
  "lineno": 240,
  "symbols_in_volume": [
   "functools.wraps",
   "logging.info",
   "warnings.warn",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_lons": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_lons.func_checker": {
  "lineno": 197,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.all",
   "numpy.any",
   "numpy.asarray",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates.func_checker": {
  "lineno": 35,
  "symbols_in_volume": [
   "functools.wraps",
   "roocs_utils.utils.time_utils.to_isoformat",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels.func_checker": {
  "lineno": 112,
  "symbols_in_volume": [
   "functools.wraps",
   "numbers.Number",
   "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da.func_checker": {
  "lineno": 289,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn",
   "xarray.DataArray",
   "xarray.core.utils.get_temp_dimname"
  ],
  "type": "function"
 },
 "clisops.core.subset.create_mask": {
  "lineno": 492,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.tools.sjoin",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.meshgrid",
   "pandas.DataFrame",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_string",
   "shapely.geometry.Point",
   "warnings.warn",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "clisops.core.subset.create_mask_vectorize": {
  "lineno": 409,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "numpy.asarray",
   "numpy.meshgrid",
   "numpy.nan",
   "numpy.zeros",
   "shapely.vectorized.contains",
   "warnings.warn",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "clisops.core.subset.distance": {
  "lineno": 1226,
  "symbols_in_volume": [
   "pyproj.Geod",
   "typing.Sequence",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.apply_ufunc",
   "xarray.broadcast"
  ],
  "type": "function"
 },
 "clisops.core.subset.distance.func": {
  "lineno": 1264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.in_bounds": {
  "lineno": 933,
  "symbols_in_volume": [
   "typing.Tuple",
   "xarray.Coordinate"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_bbox": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_gridpoint": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.concat"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_level": {
  "lineno": 1175,
  "symbols_in_volume": [
   "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_shape": {
  "lineno": 588,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.GeoDataFrame.from_file",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "pathlib.Path",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_cf",
   "pyproj.crs.CRS.from_string",
   "pyproj.crs.CRS.from_user_input",
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.subset_time": {
  "lineno": 1119,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich.func_checker": {
  "lineno": 325,
  "symbols_in_volume": [
   "functools.wraps",
   "geopandas.GeoDataFrame",
   "numpy.max",
   "numpy.min",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_string",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon",
   "shapely.ops.cascaded_union",
   "shapely.ops.split",
   "warnings.warn"
  ],
  "type": "function"
 },
 "clisops.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.exceptions.InvalidParameterValue": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.exceptions.MissingParameterValue": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.average": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.regrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.ops.subset": {
  "lineno": null,
  "symbols_in_volume": [
   "clisops.logging.getLogger"
  ],
  "type": "module"
 },
 "clisops.ops.subset._subset": {
  "lineno": 19,
  "symbols_in_volume": [
   "clisops.core.subset_bbox",
   "clisops.core.subset_level",
   "clisops.core.subset_time"
  ],
  "type": "function"
 },
 "clisops.ops.subset.subset": {
  "lineno": 52,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "clisops.utils.map_params",
   "clisops.utils.output_utils.get_output",
   "clisops.utils.output_utils.get_time_slices",
   "datetime.datetime",
   "pathlib.Path",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "xarray.Dataset",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "clisops.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.utils.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.utils.common.map_params": {
  "lineno": 4,
  "symbols_in_volume": [
   "roocs_utils.parameter.parameterise"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "clisops.utils.file_namers.SimpleFileNamer": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_project": {
  "lineno": 45,
  "symbols_in_volume": [
   "roocs_utils.project_utils.get_project_name"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_template": {
  "lineno": 72,
  "symbols_in_volume": [
   "clisops.CONFIG"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_time_range": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._resolve_derived_attrs": {
  "lineno": 79,
  "symbols_in_volume": [
   "clisops.utils.output_utils.get_format_extension",
   "roocs_utils.xarray_utils.xarray_utils.get_main_variable"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer.get_file_name": {
  "lineno": 53,
  "symbols_in_volume": [
   "clisops.CONFIG"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "clisops.utils.file_namers._BaseFileNamer.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer.get_file_name": {
  "lineno": 21,
  "symbols_in_volume": [
   "clisops.utils.output_utils.get_format_extension"
  ],
  "type": "function"
 },
 "clisops.utils.file_namers.get_file_namer": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "clisops.logging.getLogger"
  ],
  "type": "module"
 },
 "clisops.utils.output_utils._format_time": {
  "lineno": 46,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime",
   "typing.Union"
  ],
  "type": "function"
 },
 "clisops.utils.output_utils._get_chunked_dataset": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils.check_format": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils.filter_times_within": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils.get_chunk_length": {
  "lineno": 157,
  "symbols_in_volume": [
   "clisops.chunk_memory_limit",
   "math.ceil",
   "roocs_utils.utils.common.parse_size"
  ],
  "type": "function"
 },
 "clisops.utils.output_utils.get_da": {
  "lineno": 72,
  "symbols_in_volume": [
   "roocs_utils.xarray_utils.xarray_utils.get_main_variable",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_extension": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_writer": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "clisops.utils.output_utils.get_output": {
  "lineno": 188,
  "symbols_in_volume": [
   "dask.config.set",
   "os.path.join"
  ],
  "type": "function"
 },
 "clisops.utils.output_utils.get_time_slices": {
  "lineno": 83,
  "symbols_in_volume": [
   "clisops.CONFIG",
   "roocs_utils.utils.common.parse_size",
   "typing.List",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests._common": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "tempfile.gettempdir"
  ],
  "type": "module"
 },
 "tests._common.cmip5_archive_base": {
  "lineno": 45,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "tests._common.cmip6_archive_base": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "tests._common.write_roocs_cfg": {
  "lineno": 18,
  "symbols_in_volume": [
   "jinja2.Template",
   "os.environ"
  ],
  "type": "function"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "tests._common.write_roocs_cfg"
  ],
  "type": "module"
 },
 "tests.conftest.areacella": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.convolve",
   "numpy.cos",
   "numpy.diff",
   "numpy.newaxis",
   "numpy.radians",
   "pytest.fixture",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.huss_series": {
  "lineno": 231,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.huss_series._huss_series": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.ndq_series": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.lognormal",
   "pandas.DateOffset",
   "pandas.date_range",
   "pytest.fixture",
   "xarray.DataArray",
   "xarray.IndexVariable"
  ],
  "type": "function"
 },
 "tests.conftest.pr_ndseries": {
  "lineno": 95,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.pr_ndseries._pr_series": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.atleast_3d",
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.pr_series": {
  "lineno": 76,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.pr_series._pr_series": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.ps_series": {
  "lineno": 249,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ps_series._ps_series": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.q_series": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.q_series._q_series": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.rh_series": {
  "lineno": 195,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.rh_series._rh_series": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tas_series": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tas_series._tas_series": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tasmax_series": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tasmax_series._tasmax_series": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tasmin_series": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.tasmin_series._tasmin_series": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.conftest.tmp_netcdf_filename": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ws_series": {
  "lineno": 213,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.ws_series._ws_series": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.core.test_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.core.test_subset.TestDistance": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.core.test_subset.TestDistance.test_broadcasting": {
  "lineno": 804,
  "symbols_in_volume": [
   "clisops.core.subset.distance",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.unravel_index",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestDistance.test_values": {
  "lineno": 791,
  "symbols_in_volume": [
   "clisops.core.subset.distance",
   "numpy.testing.assert_almost_equal",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox": {
  "lineno": 309,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetBbox.test_badly_named_latlons": {
  "lineno": 447,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_dataset": {
  "lineno": 322,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_inverted_coords": {
  "lineno": 429,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.asarray",
   "numpy.flip",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.random.rand",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular": {
  "lineno": 392,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.isnan",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular_dataset": {
  "lineno": 408,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_positive_lons": {
  "lineno": 500,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.array",
   "numpy.asarray",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_raise": {
  "lineno": 560,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_simple": {
  "lineno": 334,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_curvilinear": {
  "lineno": 483,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.isnan",
   "numpy.max",
   "numpy.min",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_rectilinear": {
  "lineno": 466,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_time": {
  "lineno": 516,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "numpy.all",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_warnings": {
  "lineno": 575,
  "symbols_in_volume": [
   "clisops.core.subset.subset_bbox",
   "pytest.raises",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint": {
  "lineno": 146,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_dataset": {
  "lineno": 172,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_irregular": {
  "lineno": 198,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.arange",
   "numpy.linspace",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.transpose",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_positive_lons": {
  "lineno": 274,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_raise": {
  "lineno": 286,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_simple": {
  "lineno": 184,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_time_simple": {
  "lineno": 155,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_tolerance": {
  "lineno": 299,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel": {
  "lineno": 824,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetLevel.test_level_first_only": {
  "lineno": 903,
  "symbols_in_volume": [
   "clisops.core.subset.subset_level",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_level_outofbounds": {
  "lineno": 863,
  "symbols_in_volume": [
   "clisops.core.subset.subset_level",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_nudge_levels": {
  "lineno": 914,
  "symbols_in_volume": [
   "clisops.core.subset.subset_level",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_simple": {
  "lineno": 852,
  "symbols_in_volume": [
   "clisops.core.subset.subset_level",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_warnings": {
  "lineno": 883,
  "symbols_in_volume": [
   "clisops.core.subset.subset_level",
   "pytest.raises",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape": {
  "lineno": 598,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetShape.compare_vals": {
  "lineno": 614,
  "symbols_in_volume": [
   "clisops.core.subset.subset_gridpoint",
   "numpy.arange",
   "numpy.isnan",
   "numpy.random.RandomState",
   "numpy.random.randint",
   "numpy.testing.assert_array_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_all_neglons": {
  "lineno": 704,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_mask_multiregions": {
  "lineno": 771,
  "symbols_in_volume": [
   "clisops.core.subset.create_mask",
   "geopandas.read_file",
   "numpy.unique",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_no_wraps": {
  "lineno": 672,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_rotated_pole_with_time": {
  "lineno": 723,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "numpy.mean",
   "numpy.testing.assert_allclose",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_small_poly_buffer": {
  "lineno": 749,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "pytest.raises",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_subset_multiregions": {
  "lineno": 782,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "geopandas.read_file",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_wraps": {
  "lineno": 640,
  "symbols_in_volume": [
   "clisops.core.subset.subset_shape",
   "geopandas.read_file",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetTime.test_simple": {
  "lineno": 18,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_dates_outofbounds": {
  "lineno": 34,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_end_only": {
  "lineno": 109,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_incomplete_years": {
  "lineno": 128,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_start_only": {
  "lineno": 84,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "numpy.testing.assert_array_equal",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_warnings": {
  "lineno": 55,
  "symbols_in_volume": [
   "clisops.core.subset.subset_time",
   "pytest.raises",
   "pytest.warns",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "tests.mini-esgf-data.generate_test_data": {
  "lineno": null,
  "symbols_in_volume": [
   "glob.glob",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "subprocess.call"
  ],
  "type": "module"
 },
 "tests.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_average": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_regrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.ops.test_subset._check_output_nc": {
  "lineno": 30,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "tests.ops.test_subset._load_ds": {
  "lineno": 34,
  "symbols_in_volume": [
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_area_within_area_subset": {
  "lineno": 291,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_area_within_area_subset_chunked": {
  "lineno": 307,
  "symbols_in_volume": [
   "clisops.CONFIG",
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_aux_variables": {
  "lineno": 347,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_exist": {
  "lineno": 367,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "os.path.isdir",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_subsetted_i_j": {
  "lineno": 391,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "os.path.isdir",
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_subsetted_rlat_rlon": {
  "lineno": 426,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "os.path.isdir",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_project_file_name": {
  "lineno": 126,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_simple_file_name": {
  "lineno": 114,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_with_meridian": {
  "lineno": 148,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_args_as_parameter_classes": {
  "lineno": 62,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "roocs_utils.parameter.area_parameter.AreaParameter",
   "roocs_utils.parameter.time_parameter.TimeParameter"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_ds_is_none": {
  "lineno": 93,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.raises",
   "roocs_utils.exceptions.MissingParameterValue"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_invalid_area": {
  "lineno": 138,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.raises",
   "roocs_utils.exceptions.InvalidParameterValue"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_invalid_time": {
  "lineno": 80,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.raises",
   "roocs_utils.exceptions.InvalidParameterValue"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_level": {
  "lineno": 329,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_no_ds": {
  "lineno": 104,
  "symbols_in_volume": [
   "clisops.ops.subset.subset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_no_params": {
  "lineno": 38,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_time": {
  "lineno": 49,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_rh": {
  "lineno": 199,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_tas": {
  "lineno": 174,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_zostoga": {
  "lineno": 187,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_tas_series": {
  "lineno": 212,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_time_and_area": {
  "lineno": 161,
  "symbols_in_volume": [
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_time_slices_in_subset_rh": {
  "lineno": 259,
  "symbols_in_volume": [
   "clisops.CONFIG",
   "clisops.ops.subset.subset",
   "clisops.utils.output_utils._format_time"
  ],
  "type": "function"
 },
 "tests.ops.test_subset.test_time_slices_in_subset_tas": {
  "lineno": 224,
  "symbols_in_volume": [
   "clisops.CONFIG",
   "clisops.ops.subset.subset",
   "clisops.utils.output_utils._format_time"
  ],
  "type": "function"
 },
 "tests.ops.test_xarray_mean": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "module"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_keep_attrs_false": {
  "lineno": 43,
  "symbols_in_volume": [
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_keep_attrs_true": {
  "lineno": 29,
  "symbols_in_volume": [
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_false": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_none": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_true": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "tests.test_file_namers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_file_namers.test_SimpleFileNamer": {
  "lineno": 11,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_SimpleFileNamer_no_fmt": {
  "lineno": 24,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_SimpleFileNamer_with_chunking": {
  "lineno": 34,
  "symbols_in_volume": [
   "clisops.CONFIG",
   "clisops.ops.subset.subset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_c3s_cordex": {
  "lineno": 144,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_c3s_cordex_use_default_attr_names": {
  "lineno": 166,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip5": {
  "lineno": 71,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip5_use_default_attr_names": {
  "lineno": 88,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip6": {
  "lineno": 106,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip6_use_default_attr_names": {
  "lineno": 123,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_no_project_match": {
  "lineno": 58,
  "symbols_in_volume": [
   "clisops.utils.file_namers.get_file_namer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_no_project_match.Thing": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_output_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_output_utils._open": {
  "lineno": 8,
  "symbols_in_volume": [
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "tests.test_output_utils.test_get_time_slices_multiple_slices": {
  "lineno": 39,
  "symbols_in_volume": [
   "clisops.utils.output_utils.get_time_slices"
  ],
  "type": "function"
 },
 "tests.test_output_utils.test_get_time_slices_single_slice": {
  "lineno": 13,
  "symbols_in_volume": [
   "clisops.utils.output_utils.get_time_slices"
  ],
  "type": "function"
 },
 "tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_utils.test_dask_env_variables": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "tests.test_utils.test_local_config_loads": {
  "lineno": 12,
  "symbols_in_volume": [
   "clisops.CONFIG"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params": {
  "lineno": 23,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_area": {
  "lineno": 57,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_area": {
  "lineno": 73,
  "symbols_in_volume": [
   "clisops.utils.map_params",
   "pytest.raises",
   "roocs_utils.exceptions.InvalidParameterValue"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_time": {
  "lineno": 46,
  "symbols_in_volume": [
   "clisops.utils.map_params",
   "pytest.raises",
   "roocs_utils.exceptions.InvalidParameterValue"
  ],
  "type": "function"
 },
 "tests.test_utils.test_map_params_time": {
  "lineno": 38,
  "symbols_in_volume": [
   "clisops.utils.map_params"
  ],
  "type": "function"
 }
}