{
 "clisops": {
  "data": {
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.clisops",
    "clisops.os",
    "roocs_utils.config.get_config"
   ]
  },
  "type": "module"
 },
 "clisops.CONFIG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.__version__": {
  "data": {},
  "type": "module"
 },
 "clisops.__version__.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "clisops.__version__.__email__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "clisops.__version__.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "clisops.chunk_memory_limit": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "clisops.clisops": {
  "data": {
   "shadows": "clisops"
  },
  "type": "import"
 },
 "clisops.core": {
  "data": {},
  "type": "module"
 },
 "clisops.core.subset": {
  "data": {},
  "type": "module"
 },
 "clisops.core.subset.CRS": {
  "data": {
   "shadows": "pyproj.crs.CRS"
  },
  "type": "import"
 },
 "clisops.core.subset.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "clisops.core.subset.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "clisops.core.subset.MultiPolygon": {
  "data": {
   "shadows": "shapely.geometry.MultiPolygon"
  },
  "type": "import"
 },
 "clisops.core.subset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "clisops.core.subset.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.core.subset.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "clisops.core.subset.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "clisops.core.subset.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "clisops.core.subset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.core.subset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.core.subset.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "clisops.core.subset._check_crs_compatibility": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "UserWarning",
    "clisops.core.subset.warnings",
    "pyproj.crs.CRS"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_desc_coords": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.flip"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "clisops.core.subset.warnings",
    "enumerate",
    "geopandas.GeoDataFrame",
    "len"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps_old": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "UserWarning",
    "clisops.core.subset.warnings",
    "enumerate",
    "geopandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.assign_bounds": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "clisops.core.subset.xarray",
    "float",
    "numpy.flip",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.cascaded_union": {
  "data": {
   "shadows": "shapely.ops.cascaded_union"
  },
  "type": "import"
 },
 "clisops.core.subset.check_latlon_dimnames": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames.func_checker": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "clisops.core.subset.logging",
    "clisops.core.subset.warnings",
    "clisops.core.subset.xarray",
    "dict",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_lons": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "clisops.core.subset.check_lons.func_checker": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "NotImplementedError",
    "clisops.core.subset.xarray",
    "float",
    "func",
    "functools.wraps",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates.func_checker": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "ValueError",
    "clisops.core.subset.warnings",
    "func",
    "functools.wraps",
    "int",
    "isinstance",
    "roocs_utils.utils.time_utils.to_isoformat",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels.func_checker": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "clisops.core.subset.numbers",
    "clisops.core.subset.warnings",
    "float",
    "func",
    "functools.wraps",
    "isinstance",
    "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
    "slice"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da.func_checker": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "clisops.core.subset.warnings",
    "clisops.core.subset.xarray",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "type",
    "xarray.core.utils.get_temp_dimname"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.create_mask": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "_check_has_overlaps",
    "bool",
    "clisops.core.subset.warnings",
    "clisops.core.subset.wrap_lons_and_split_at_greenwich",
    "clisops.core.subset.xarray",
    "dict",
    "geopandas.GeoDataFrame",
    "geopandas.tools.sjoin",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.meshgrid",
    "pandas.DataFrame",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_string",
    "shapely.geometry.Point",
    "zip"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.create_mask_vectorize": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "_check_has_overlaps",
    "bool",
    "clisops.core.subset.warnings",
    "clisops.core.subset.wrap_lons_and_split_at_greenwich",
    "clisops.core.subset.xarray",
    "dict",
    "geopandas.GeoDataFrame",
    "len",
    "numpy.asarray",
    "numpy.meshgrid",
    "numpy.nan",
    "numpy.zeros",
    "shapely.vectorized.contains"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.distance": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "clisops.core.subset.convert_lat_lon_to_da",
    "clisops.core.subset.xarray",
    "float",
    "func",
    "pyproj.Geod",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.distance.func": {
  "data": {
   "lineno": 1264
  },
  "type": "function"
 },
 "clisops.core.subset.get_temp_dimname": {
  "data": {
   "shadows": "xarray.core.utils.get_temp_dimname"
  },
  "type": "import"
 },
 "clisops.core.subset.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "clisops.core.subset.in_bounds": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "bool",
    "clisops.core.subset.xarray",
    "float",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "clisops.core.subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "clisops.core.subset.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "clisops.core.subset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "clisops.core.subset.split": {
  "data": {
   "shadows": "shapely.ops.split"
  },
  "type": "import"
 },
 "clisops.core.subset.subset_bbox": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "Exception",
    "_check_desc_coords",
    "assign_bounds",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.check_lons",
    "clisops.core.subset.xarray",
    "dict",
    "enumerate",
    "float",
    "in_bounds",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.where",
    "set",
    "slice",
    "str",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_gridpoint": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "bool",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.check_lons",
    "clisops.core.subset.convert_lat_lon_to_da",
    "clisops.core.subset.xarray",
    "distance",
    "float",
    "hasattr",
    "int",
    "len",
    "list",
    "numpy.unravel_index",
    "str",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_level": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "clisops.core.subset.check_start_end_levels",
    "clisops.core.subset.xarray",
    "float",
    "int",
    "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
    "slice",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_shape": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "_check_crs_compatibility",
    "bool",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.create_mask",
    "clisops.core.subset.create_mask_vectorize",
    "clisops.core.subset.xarray",
    "float",
    "geopandas.GeoDataFrame",
    "geopandas.GeoDataFrame.from_file",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "pathlib.Path",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_cf",
    "pyproj.crs.CRS.from_string",
    "pyproj.crs.CRS.from_user_input",
    "set",
    "set.issubset",
    "str",
    "subset_bbox",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_time": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "clisops.core.subset.check_start_end_dates",
    "clisops.core.subset.xarray",
    "slice",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.to_isoformat": {
  "data": {
   "shadows": "roocs_utils.utils.time_utils.to_isoformat"
  },
  "type": "import"
 },
 "clisops.core.subset.vectorized": {
  "data": {
   "shadows": "shapely.vectorized"
  },
  "type": "import"
 },
 "clisops.core.subset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich.func_checker": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "clisops.core.subset.warnings",
    "func",
    "functools.wraps",
    "geopandas.GeoDataFrame",
    "isinstance",
    "numpy.max",
    "numpy.min",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_string",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "shapely.ops.cascaded_union",
    "shapely.ops.split"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "clisops.core.subset.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.core.subset.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "clisops.exceptions": {
  "data": {},
  "type": "module"
 },
 "clisops.exceptions.InvalidParameterValue": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "clisops.exceptions.MissingParameterValue": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "clisops.get_config": {
  "data": {
   "shadows": "roocs_utils.config.get_config"
  },
  "type": "import"
 },
 "clisops.logging.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "clisops.ops": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.average": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.regrid": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.subset": {
  "data": {
   "symbols_in_volume": [
    "clisops.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "clisops.ops.subset.LOGGER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.ops.subset.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "clisops.ops.subset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "clisops.ops.subset.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.ops.subset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.ops.subset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.ops.subset.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "clisops.ops.subset._subset": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "any",
    "clisops.core.subset_bbox",
    "clisops.core.subset_level",
    "clisops.core.subset_time",
    "clisops.ops.subset.LOGGER"
   ]
  },
  "type": "function"
 },
 "clisops.ops.subset.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_file_namer": {
  "data": {
   "shadows": "clisops.utils.file_namers.get_file_namer"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_output": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_output"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_time_slices": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_time_slices"
  },
  "type": "import"
 },
 "clisops.ops.subset.logging": {
  "data": {
   "shadows": "clisops.logging"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "clisops.ops.subset.LOGGER",
    "clisops.ops.subset._subset",
    "clisops.utils.file_namers.get_file_namer",
    "clisops.utils.map_params",
    "clisops.utils.output_utils.get_output",
    "clisops.utils.output_utils.get_time_slices",
    "datetime.datetime",
    "float",
    "int",
    "isinstance",
    "list",
    "pathlib.Path",
    "slice",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "xarray.Dataset",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "clisops.ops.subset.subset_bbox": {
  "data": {
   "shadows": "clisops.core.subset_bbox"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset_level": {
  "data": {
   "shadows": "clisops.core.subset_level"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset_time": {
  "data": {
   "shadows": "clisops.core.subset_time"
  },
  "type": "import"
 },
 "clisops.ops.subset.utils": {
  "data": {
   "shadows": "clisops.utils"
  },
  "type": "import"
 },
 "clisops.ops.subset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "clisops.utils": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.common": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.common.map_params": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "dict",
    "roocs_utils.parameter.parameterise"
   ]
  },
  "type": "function"
 },
 "clisops.utils.common.parameterise": {
  "data": {
   "shadows": "roocs_utils.parameter.parameterise"
  },
  "type": "import"
 },
 "clisops.utils.file_namers": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.file_namers.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.SimpleFileNamer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "clisops.utils.file_namers._BaseFileNamer"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "clisops.utils.file_namers.SimpleFileNamer"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_project": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "roocs_utils.project_utils.get_project_name"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_template": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "clisops.CONFIG"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_time_range": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._resolve_derived_attrs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_format_extension",
    "roocs_utils.xarray_utils.xarray_utils.get_main_variable"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer.get_file_name": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "super"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers._BaseFileNamer.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer.get_file_name": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_format_extension"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.get_file_namer": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "clisops.utils.file_namers.get_format_extension": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_format_extension"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.get_project_name": {
  "data": {
   "shadows": "roocs_utils.project_utils.get_project_name"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "clisops.utils.output_utils": {
  "data": {
   "symbols_in_volume": [
    "clisops.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "clisops.utils.output_utils.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.LOGGER": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.SUPPORTED_FORMATS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.SUPPORTED_SPLIT_METHODS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.utils.output_utils._format_time": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datetime.datetime",
    "hasattr",
    "pandas.to_datetime",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils._get_chunked_dataset": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_chunk_length",
    "clisops.utils.output_utils.get_da"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.check_format": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "KeyError",
    "clisops.utils.output_utils.SUPPORTED_FORMATS"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.chunk_memory_limit": {
  "data": {
   "shadows": "clisops.chunk_memory_limit"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.filter_times_within": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "clisops.utils.output_utils._format_time"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_chunk_length": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "clisops.chunk_memory_limit",
    "clisops.utils.output_utils.math",
    "len",
    "roocs_utils.utils.common.parse_size"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_da": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "roocs_utils.xarray_utils.xarray_utils.get_main_variable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_extension": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "clisops.utils.output_utils.SUPPORTED_FORMATS",
    "clisops.utils.output_utils.check_format"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_writer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clisops.utils.output_utils.SUPPORTED_FORMATS",
    "clisops.utils.output_utils.check_format"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_output": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "clisops.utils.output_utils.LOGGER",
    "clisops.utils.output_utils._get_chunked_dataset",
    "clisops.utils.output_utils.dask",
    "clisops.utils.output_utils.get_format_writer",
    "clisops.utils.output_utils.os",
    "getattr",
    "type",
    "writer"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_time_slices": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "clisops.CONFIG",
    "clisops.utils.output_utils.SUPPORTED_SPLIT_METHODS",
    "clisops.utils.output_utils._format_time",
    "clisops.utils.output_utils.filter_times_within",
    "clisops.utils.output_utils.get_da",
    "int",
    "len",
    "roocs_utils.utils.common.parse_size",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.logging": {
  "data": {
   "shadows": "clisops.logging"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.parse_size": {
  "data": {
   "shadows": "roocs_utils.utils.common.parse_size"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests._common": {
  "data": {
   "symbols_in_volume": [
    "tests._common.CMIP5_ARCHIVE_BASE",
    "tests._common.REAL_C3S_CMIP5_ARCHIVE_BASE",
    "tests._common.TESTS_HOME",
    "tests._common.XCLIM_TESTS_DATA",
    "tests._common.cmip5_archive_base",
    "tests._common.cmip6_archive_base",
    "tests._common.os",
    "tests._common.tempfile"
   ]
  },
  "type": "module"
 },
 "tests._common.C3S_CMIP5_TOS": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "tests._common.C3S_CMIP5_TSICE": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "tests._common.CMIP5_ARCHIVE_BASE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tests._common.CMIP5_RH": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tests._common.CMIP5_TAS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tests._common.CMIP5_TAS_FILE": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tests._common.CMIP5_ZOSTOGA": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tests._common.CMIP6_ARCHIVE_BASE": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "tests._common.CMIP6_O3": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "tests._common.DEFAULT_CMIP5_ARCHIVE_BASE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests._common.DEFAULT_CMIP6_ARCHIVE_BASE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tests._common.REAL_C3S_CMIP5_ARCHIVE_BASE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests._common.ROOCS_CFG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "tests._common.TESTS_HOME": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tests._common.Template": {
  "data": {
   "shadows": "jinja2.Template"
  },
  "type": "import"
 },
 "tests._common.XCLIM_TESTS_DATA": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests._common.cmip5_archive_base": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tests._common.DEFAULT_CMIP5_ARCHIVE_BASE",
    "tests._common.os"
   ]
  },
  "type": "function"
 },
 "tests._common.cmip6_archive_base": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tests._common.DEFAULT_CMIP6_ARCHIVE_BASE",
    "tests._common.os"
   ]
  },
  "type": "function"
 },
 "tests._common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests._common.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tests._common.write_roocs_cfg": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "jinja2.Template",
    "open",
    "tests._common.ROOCS_CFG",
    "tests._common.TESTS_HOME",
    "tests._common.os"
   ]
  },
  "type": "function"
 },
 "tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "tests._common.write_roocs_cfg"
   ]
  },
  "type": "module"
 },
 "tests.conftest.areacella": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.convolve",
    "numpy.cos",
    "numpy.diff",
    "numpy.newaxis",
    "numpy.radians",
    "tests.conftest.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.huss_series": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.huss_series._huss_series": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.ndq_series": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.lognormal",
    "pandas.DateOffset",
    "pandas.date_range",
    "tests.conftest.pytest",
    "xarray.DataArray",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.conftest.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.conftest.pr_ndseries": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.pr_ndseries._pr_series": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.atleast_3d",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.pr_series": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.pr_series._pr_series": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.ps_series": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.ps_series._ps_series": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.q_series": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.q_series._q_series": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.rh_series": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.rh_series._rh_series": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tas_series": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tas_series._tas_series": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tasmax_series": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tasmax_series._tasmax_series": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tasmin_series": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tasmin_series._tasmin_series": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.tmp_netcdf_filename": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.write_roocs_cfg": {
  "data": {
   "shadows": "tests._common.write_roocs_cfg"
  },
  "type": "import"
 },
 "tests.conftest.ws_series": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.ws_series._ws_series": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.conftest.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.core": {
  "data": {},
  "type": "module"
 },
 "tests.core.test_subset": {
  "data": {},
  "type": "module"
 },
 "tests.core.test_subset.TESTS_DATA": {
  "data": {
   "shadows": "XCLIM_TESTS_DATA"
  },
  "type": "import"
 },
 "tests.core.test_subset.TestDistance": {
  "data": {
   "lineno": 790
  },
  "type": "class"
 },
 "tests.core.test_subset.TestDistance.test_broadcasting": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "clisops.core.subset.distance",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.unravel_index",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestDistance.test_values": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "clisops.core.subset.distance",
    "numpy.testing.assert_almost_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tests.core.test_subset.os"
   ]
  },
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetBbox.test_badly_named_latlons": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_dataset": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_inverted_coords": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.asarray",
    "numpy.flip",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_irregular_dataset": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "list",
    "numpy.testing.assert_array_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_positive_lons": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_raise": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "clisops.core.subset.subset_bbox",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_simple": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "str",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_curvilinear": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_single_bounds_rectilinear": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_time": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "clisops.core.subset.subset_bbox",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetBbox.test_warnings": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "TypeError",
    "clisops.core.subset.subset_bbox",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tests.core.test_subset.os"
   ]
  },
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_dataset": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_irregular": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "dict",
    "list",
    "numpy.arange",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.transpose",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_positive_lons": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "numpy.testing.assert_almost_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_raise": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "clisops.core.subset.subset_gridpoint",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_simple": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "len",
    "numpy.testing.assert_almost_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_time_simple": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "int",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetGridPoint.test_tolerance": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "tests.core.test_subset.os"
   ]
  },
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetLevel.test_level_first_only": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "clisops.core.subset.subset_level",
    "numpy.testing.assert_array_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_level_outofbounds": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "clisops.core.subset.subset_level",
    "numpy.testing.assert_array_equal",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_nudge_levels": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "clisops.core.subset.subset_level",
    "numpy.testing.assert_array_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_simple": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "clisops.core.subset.subset_level",
    "numpy.testing.assert_array_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetLevel.test_warnings": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "TypeError",
    "clisops.core.subset.subset_level",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "tests.core.test_subset.os"
   ]
  },
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetShape.compare_vals": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "clisops.core.subset.subset_gridpoint",
    "len",
    "numpy.arange",
    "numpy.isnan",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_all_neglons": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "clisops.core.subset.subset_shape",
    "float",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_mask_multiregions": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "all",
    "clisops.core.subset.create_mask",
    "geopandas.read_file",
    "numpy.unique",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_no_wraps": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "clisops.core.subset.subset_shape",
    "float",
    "len",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "set",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_rotated_pole_with_time": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "clisops.core.subset.subset_shape",
    "float",
    "len",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "slice",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_small_poly_buffer": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "clisops.core.subset.subset_shape",
    "len",
    "set",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_subset_multiregions": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "clisops.core.subset.subset_shape",
    "geopandas.read_file",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetShape.test_wraps": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "UserWarning",
    "clisops.core.subset.subset_shape",
    "float",
    "geopandas.read_file",
    "len",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "set",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "tests.core.test_subset.os"
   ]
  },
  "type": "class"
 },
 "tests.core.test_subset.TestSubsetTime.test_simple": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "clisops.core.subset.subset_time",
    "int",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_dates_outofbounds": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clisops.core.subset.subset_time",
    "numpy.testing.assert_array_equal",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_end_only": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "clisops.core.subset.subset_time",
    "int",
    "numpy.testing.assert_array_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_incomplete_years": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "clisops.core.subset.subset_time",
    "int",
    "numpy.testing.assert_array_equal",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_time_start_only": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "clisops.core.subset.subset_time",
    "int",
    "numpy.testing.assert_array_equal",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.TestSubsetTime.test_warnings": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "clisops.core.subset.subset_time",
    "str",
    "tests.core.test_subset.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.core.test_subset.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "tests.core.test_subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.core.test_subset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.core.test_subset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.core.test_subset.subset": {
  "data": {
   "shadows": "clisops.core.subset"
  },
  "type": "import"
 },
 "tests.core.test_subset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.mini-esgf-data.generate_test_data": {
  "data": {
   "symbols_in_volume": [
    "glob.glob",
    "print",
    "tests.mini-esgf-data.generate_test_data.cmd",
    "tests.mini-esgf-data.generate_test_data.cmip6_Cl_2",
    "tests.mini-esgf-data.generate_test_data.extra",
    "tests.mini-esgf-data.generate_test_data.f",
    "tests.mini-esgf-data.generate_test_data.filelist",
    "tests.mini-esgf-data.generate_test_data.fpath",
    "tests.mini-esgf-data.generate_test_data.lat_selector",
    "tests.mini-esgf-data.generate_test_data.lon_selector",
    "tests.mini-esgf-data.generate_test_data.os",
    "tests.mini-esgf-data.generate_test_data.output_file",
    "tests.mini-esgf-data.generate_test_data.path",
    "tests.mini-esgf-data.generate_test_data.subprocess",
    "tests.mini-esgf-data.generate_test_data.var_id"
   ]
  },
  "type": "module"
 },
 "tests.mini-esgf-data.generate_test_data.Amon_file_path": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.CMIP6_siconc": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.cmd": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.cmip5_tas": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.cmip6_Cl": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.cmip6_Cl_2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.cordex_IPSL_file_path": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.day_data": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.extra": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.f": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.filelist": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.fpath": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "tests.mini-esgf-data.generate_test_data.lat_selector": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.lon_selector": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.no_time_name": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.mini-esgf-data.generate_test_data.output_file": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.output_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.plevs_file_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "tests.mini-esgf-data.generate_test_data.var_id": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tests.mini-esgf-data.generate_test_data.zostoga_file_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.ops": {
  "data": {},
  "type": "module"
 },
 "tests.ops.test_average": {
  "data": {},
  "type": "module"
 },
 "tests.ops.test_regrid": {
  "data": {},
  "type": "module"
 },
 "tests.ops.test_subset": {
  "data": {},
  "type": "module"
 },
 "tests.ops.test_subset.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "tests.ops.test_subset.InvalidParameterValue": {
  "data": {
   "shadows": "roocs_utils.exceptions.InvalidParameterValue"
  },
  "type": "import"
 },
 "tests.ops.test_subset.MissingParameterValue": {
  "data": {
   "shadows": "roocs_utils.exceptions.MissingParameterValue"
  },
  "type": "import"
 },
 "tests.ops.test_subset.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "tests.ops.test_subset._check_output_nc": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tests.ops.test_subset.os"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset._format_time": {
  "data": {
   "shadows": "clisops.utils.output_utils._format_time"
  },
  "type": "import"
 },
 "tests.ops.test_subset._load_ds": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset._subset": {
  "data": {
   "shadows": "clisops.ops.subset._subset"
  },
  "type": "import"
 },
 "tests.ops.test_subset.area_parameter": {
  "data": {
   "shadows": "roocs_utils.parameter.area_parameter"
  },
  "type": "import"
 },
 "tests.ops.test_subset.clisops": {
  "data": {
   "shadows": "clisops"
  },
  "type": "import"
 },
 "tests.ops.test_subset.get_file_namer": {
  "data": {
   "shadows": "clisops.utils.file_namers.get_file_namer"
  },
  "type": "import"
 },
 "tests.ops.test_subset.get_output": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_output"
  },
  "type": "import"
 },
 "tests.ops.test_subset.get_time_slices": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_time_slices"
  },
  "type": "import"
 },
 "tests.ops.test_subset.map_params": {
  "data": {
   "shadows": "clisops.utils.map_params"
  },
  "type": "import"
 },
 "tests.ops.test_subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.ops.test_subset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.ops.test_subset.output_utils": {
  "data": {
   "shadows": "clisops.utils.output_utils"
  },
  "type": "import"
 },
 "tests.ops.test_subset.parse_size": {
  "data": {
   "shadows": "roocs_utils.utils.common.parse_size"
  },
  "type": "import"
 },
 "tests.ops.test_subset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.ops.test_subset.subset": {
  "data": {
   "shadows": "clisops.ops.subset.subset"
  },
  "type": "import"
 },
 "tests.ops.test_subset.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.ops.test_subset.test_area_within_area_subset": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "clisops.ops.subset.subset"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_area_within_area_subset_chunked": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.ops.subset.subset"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_aux_variables": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._load_ds"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_exist": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._load_ds",
    "tests.ops.test_subset.os",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_subsetted_i_j": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "clisops.ops.subset.subset",
    "float",
    "tests.ops.test_subset._load_ds",
    "tests.ops.test_subset.os",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_coord_variables_subsetted_rlat_rlon": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "abs",
    "clisops.ops.subset.subset",
    "float",
    "tests.ops.test_subset._load_ds",
    "tests.ops.test_subset.os",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_project_file_name": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_simple_file_name": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_area_with_meridian": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_args_as_parameter_classes": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "roocs_utils.parameter.area_parameter.AreaParameter",
    "roocs_utils.parameter.time_parameter.TimeParameter",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_ds_is_none": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "roocs_utils.exceptions.MissingParameterValue",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_invalid_area": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "roocs_utils.exceptions.InvalidParameterValue",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_invalid_time": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "roocs_utils.exceptions.InvalidParameterValue",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_level": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "numpy.testing.assert_array_equal",
    "tests.ops.test_subset._load_ds"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_no_ds": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "clisops.ops.subset.subset",
    "tests.ops.test_subset.pytest"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_no_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_time": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_rh": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_tas": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_multiple_files_zostoga": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_tas_series": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tas_series",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_subset_with_time_and_area": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "clisops.ops.subset.subset",
    "tests.ops.test_subset._check_output_nc"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_time_slices_in_subset_rh": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.ops.subset.subset",
    "clisops.utils.output_utils._format_time"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.test_time_slices_in_subset_tas": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.ops.subset.subset",
    "clisops.utils.output_utils._format_time"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_subset.time_parameter": {
  "data": {
   "shadows": "roocs_utils.parameter.time_parameter"
  },
  "type": "import"
 },
 "tests.ops.test_subset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.ops.test_xarray_mean": {
  "data": {
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "tests.ops.test_xarray_mean.nan": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "tests.ops.test_xarray_mean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_keep_attrs_false": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_keep_attrs_true": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_false": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "tests.ops.test_xarray_mean.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_none": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.array",
    "print",
    "tests.ops.test_xarray_mean.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_xarray_mean.test_xarray_da_mean_skipna_true": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.array",
    "tests.ops.test_xarray_mean.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.ops.test_xarray_mean.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_file_namers": {
  "data": {},
  "type": "module"
 },
 "tests.test_file_namers.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "tests.test_file_namers.get_file_namer": {
  "data": {
   "shadows": "clisops.utils.file_namers.get_file_namer"
  },
  "type": "import"
 },
 "tests.test_file_namers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_file_namers.subset": {
  "data": {
   "shadows": "clisops.ops.subset.subset"
  },
  "type": "import"
 },
 "tests.test_file_namers.test_SimpleFileNamer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_SimpleFileNamer_no_fmt": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "KeyError",
    "clisops.utils.file_namers.get_file_namer",
    "tests.test_file_namers.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_SimpleFileNamer_with_chunking": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.ops.subset.subset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_c3s_cordex": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_c3s_cordex_use_default_attr_names": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip5": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip5_use_default_attr_names": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip6": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_cmip6_use_default_attr_names": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "clisops.utils.file_namers.get_file_namer",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_no_project_match": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KeyError",
    "Thing",
    "clisops.utils.file_namers.get_file_namer",
    "tests.test_file_namers.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_file_namers.test_StandardFileNamer_no_project_match.Thing": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_file_namers.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_output_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_output_utils._open": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "tests.test_output_utils.get_time_slices": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_time_slices"
  },
  "type": "import"
 },
 "tests.test_output_utils.test_get_time_slices_multiple_slices": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_time_slices",
    "tests.test_output_utils._open"
   ]
  },
  "type": "function"
 },
 "tests.test_output_utils.test_get_time_slices_single_slice": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_time_slices",
    "tests.test_output_utils._open"
   ]
  },
  "type": "function"
 },
 "tests.test_output_utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_utils.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "tests.test_utils.InvalidParameterValue": {
  "data": {
   "shadows": "roocs_utils.exceptions.InvalidParameterValue"
  },
  "type": "import"
 },
 "tests.test_utils.MissingParameterValue": {
  "data": {
   "shadows": "roocs_utils.exceptions.MissingParameterValue"
  },
  "type": "import"
 },
 "tests.test_utils.ParserError": {
  "data": {
   "shadows": "dateutil.parser.ParserError"
  },
  "type": "import"
 },
 "tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_utils.test_dask_env_variables": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "tests.test_utils.os"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_local_config_loads": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "clisops.CONFIG"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_map_params": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "clisops.utils.map_params"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_map_params_area": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "clisops.utils.map_params"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_area": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "clisops.utils.map_params",
    "roocs_utils.exceptions.InvalidParameterValue",
    "tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_map_params_invalid_time": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "clisops.utils.map_params",
    "roocs_utils.exceptions.InvalidParameterValue",
    "tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.test_map_params_time": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "clisops.utils.map_params"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.utils": {
  "data": {
   "shadows": "clisops.utils"
  },
  "type": "import"
 }
}