{
 "clisops": {
  "data": {
   "symbols_in_volume": [
    "clisops.CONFIG",
    "clisops.clisops",
    "clisops.os",
    "roocs_utils.config.get_config"
   ]
  },
  "type": "module"
 },
 "clisops.CONFIG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.__version__": {
  "data": {},
  "type": "module"
 },
 "clisops.__version__.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "clisops.__version__.__email__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "clisops.__version__.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "clisops.chunk_memory_limit": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "clisops.clisops": {
  "data": {
   "shadows": "clisops"
  },
  "type": "import"
 },
 "clisops.core": {
  "data": {},
  "type": "module"
 },
 "clisops.core.subset": {
  "data": {},
  "type": "module"
 },
 "clisops.core.subset.CRS": {
  "data": {
   "shadows": "pyproj.crs.CRS"
  },
  "type": "import"
 },
 "clisops.core.subset.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "clisops.core.subset.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "clisops.core.subset.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "clisops.core.subset.MultiPolygon": {
  "data": {
   "shadows": "shapely.geometry.MultiPolygon"
  },
  "type": "import"
 },
 "clisops.core.subset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "clisops.core.subset.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.core.subset.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "clisops.core.subset.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "clisops.core.subset.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "clisops.core.subset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.core.subset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.core.subset.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "clisops.core.subset._check_crs_compatibility": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "UserWarning",
    "clisops.core.subset.warnings",
    "pyproj.crs.CRS"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_desc_coords": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.flip"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "clisops.core.subset.warnings",
    "enumerate",
    "geopandas.GeoDataFrame",
    "len"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset._check_has_overlaps_old": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "UserWarning",
    "clisops.core.subset.warnings",
    "enumerate",
    "geopandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.assign_bounds": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "clisops.core.subset.xarray",
    "float",
    "numpy.flip",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.cascaded_union": {
  "data": {
   "shadows": "shapely.ops.cascaded_union"
  },
  "type": "import"
 },
 "clisops.core.subset.check_latlon_dimnames": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "clisops.core.subset.check_latlon_dimnames.func_checker": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "clisops.core.subset.logging",
    "clisops.core.subset.warnings",
    "clisops.core.subset.xarray",
    "dict",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_lons": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "clisops.core.subset.check_lons.func_checker": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError",
    "clisops.core.subset.xarray",
    "float",
    "func",
    "functools.wraps",
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_dates.func_checker": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "ValueError",
    "clisops.core.subset.warnings",
    "func",
    "functools.wraps",
    "int",
    "isinstance",
    "roocs_utils.utils.time_utils.to_isoformat",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "clisops.core.subset.check_start_end_levels.func_checker": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "clisops.core.subset.numbers",
    "clisops.core.subset.warnings",
    "float",
    "func",
    "functools.wraps",
    "isinstance",
    "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
    "slice"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "clisops.core.subset.convert_lat_lon_to_da.func_checker": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "clisops.core.subset.warnings",
    "clisops.core.subset.xarray",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "type",
    "xarray.core.utils.get_temp_dimname"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.create_mask": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "_check_has_overlaps",
    "bool",
    "clisops.core.subset.warnings",
    "clisops.core.subset.wrap_lons_and_split_at_greenwich",
    "clisops.core.subset.xarray",
    "dict",
    "geopandas.GeoDataFrame",
    "len",
    "numpy.asarray",
    "numpy.logical_or",
    "numpy.meshgrid",
    "numpy.nan",
    "numpy.zeros",
    "reversed",
    "shapely.vectorized.contains",
    "shapely.vectorized.touches"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.distance": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "clisops.core.subset.convert_lat_lon_to_da",
    "clisops.core.subset.xarray",
    "float",
    "func",
    "pyproj.Geod",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.distance.func": {
  "data": {
   "lineno": 1179
  },
  "type": "function"
 },
 "clisops.core.subset.get_temp_dimname": {
  "data": {
   "shadows": "xarray.core.utils.get_temp_dimname"
  },
  "type": "import"
 },
 "clisops.core.subset.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "clisops.core.subset.in_bounds": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "bool",
    "clisops.core.subset.xarray",
    "float",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "clisops.core.subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "clisops.core.subset.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "clisops.core.subset.split": {
  "data": {
   "shadows": "shapely.ops.split"
  },
  "type": "import"
 },
 "clisops.core.subset.subset_bbox": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "Exception",
    "_check_desc_coords",
    "assign_bounds",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.check_lons",
    "clisops.core.subset.xarray",
    "dict",
    "enumerate",
    "float",
    "in_bounds",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.where",
    "set",
    "slice",
    "str",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_gridpoint": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "bool",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.check_lons",
    "clisops.core.subset.convert_lat_lon_to_da",
    "clisops.core.subset.xarray",
    "distance",
    "float",
    "hasattr",
    "int",
    "len",
    "list",
    "numpy.unravel_index",
    "str",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_level": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "clisops.core.subset.check_start_end_levels",
    "clisops.core.subset.xarray",
    "float",
    "int",
    "roocs_utils.xarray_utils.xarray_utils.get_coord_by_type",
    "slice",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_shape": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "_check_crs_compatibility",
    "clisops.core.subset.check_latlon_dimnames",
    "clisops.core.subset.create_mask",
    "clisops.core.subset.xarray",
    "float",
    "geopandas.GeoDataFrame",
    "geopandas.GeoDataFrame.from_file",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.max",
    "numpy.min",
    "pathlib.Path",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_cf",
    "pyproj.crs.CRS.from_string",
    "pyproj.crs.CRS.from_user_input",
    "pyproj.exceptions.CRSError",
    "set",
    "set.issubset",
    "str",
    "subset_bbox",
    "subset_level",
    "subset_time",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.subset_time": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "clisops.core.subset.check_start_end_dates",
    "clisops.core.subset.xarray",
    "slice",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.to_isoformat": {
  "data": {
   "shadows": "roocs_utils.utils.time_utils.to_isoformat"
  },
  "type": "import"
 },
 "clisops.core.subset.vectorized": {
  "data": {
   "shadows": "shapely.vectorized"
  },
  "type": "import"
 },
 "clisops.core.subset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "clisops.core.subset.wrap_lons_and_split_at_greenwich.func_checker": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "clisops.core.subset.warnings",
    "func",
    "functools.wraps",
    "geopandas.GeoDataFrame",
    "isinstance",
    "numpy.max",
    "numpy.min",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_string",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "shapely.ops.cascaded_union",
    "shapely.ops.split"
   ]
  },
  "type": "function"
 },
 "clisops.core.subset.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "clisops.core.subset.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.core.subset.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "clisops.exceptions": {
  "data": {},
  "type": "module"
 },
 "clisops.exceptions.InvalidParameterValue": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "clisops.exceptions.MissingParameterValue": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "clisops.get_config": {
  "data": {
   "shadows": "roocs_utils.config.get_config"
  },
  "type": "import"
 },
 "clisops.logging.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "clisops.ops": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.average": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.regrid": {
  "data": {},
  "type": "module"
 },
 "clisops.ops.subset": {
  "data": {
   "symbols_in_volume": [
    "clisops.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "clisops.ops.subset.LOGGER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.ops.subset.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "clisops.ops.subset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "clisops.ops.subset.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.ops.subset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.ops.subset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.ops.subset.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "clisops.ops.subset._subset": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "any",
    "clisops.core.subset_bbox",
    "clisops.core.subset_level",
    "clisops.core.subset_time",
    "clisops.ops.subset.LOGGER"
   ]
  },
  "type": "function"
 },
 "clisops.ops.subset.expand_wildcards": {
  "data": {
   "shadows": "clisops.utils.common.expand_wildcards"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_file_namer": {
  "data": {
   "shadows": "clisops.utils.file_namers.get_file_namer"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_output": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_output"
  },
  "type": "import"
 },
 "clisops.ops.subset.get_time_slices": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_time_slices"
  },
  "type": "import"
 },
 "clisops.ops.subset.logging": {
  "data": {
   "shadows": "clisops.logging"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "clisops.ops.subset.LOGGER",
    "clisops.ops.subset._subset",
    "clisops.utils.common.expand_wildcards",
    "clisops.utils.file_namers.get_file_namer",
    "clisops.utils.map_params",
    "clisops.utils.output_utils.get_output",
    "clisops.utils.output_utils.get_time_slices",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "pathlib.Path",
    "slice",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "xarray.Dataset",
    "xarray.open_dataset",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "clisops.ops.subset.subset_bbox": {
  "data": {
   "shadows": "clisops.core.subset_bbox"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset_level": {
  "data": {
   "shadows": "clisops.core.subset_level"
  },
  "type": "import"
 },
 "clisops.ops.subset.subset_time": {
  "data": {
   "shadows": "clisops.core.subset_time"
  },
  "type": "import"
 },
 "clisops.ops.subset.utils": {
  "data": {
   "shadows": "clisops.utils"
  },
  "type": "import"
 },
 "clisops.ops.subset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "clisops.utils": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.common": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.common.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.utils.common.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.utils.common.expand_wildcards": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "list",
    "pathlib.Path",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.utils.common.map_params": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict",
    "roocs_utils.parameter.parameterise"
   ]
  },
  "type": "function"
 },
 "clisops.utils.common.parameterise": {
  "data": {
   "shadows": "roocs_utils.parameter.parameterise"
  },
  "type": "import"
 },
 "clisops.utils.file_namers": {
  "data": {},
  "type": "module"
 },
 "clisops.utils.file_namers.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.SimpleFileNamer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "clisops.utils.file_namers._BaseFileNamer"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "clisops.utils.file_namers.SimpleFileNamer"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_project": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "roocs_utils.project_utils.get_project_name"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_template": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "clisops.CONFIG"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._get_time_range": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer._resolve_derived_attrs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_format_extension",
    "roocs_utils.xarray_utils.xarray_utils.get_main_variable"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.StandardFileNamer.get_file_name": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "clisops.CONFIG",
    "super"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "clisops.utils.file_namers._BaseFileNamer.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "clisops.utils.file_namers._BaseFileNamer.get_file_name": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_format_extension"
   ]
  },
  "type": "function"
 },
 "clisops.utils.file_namers.get_file_namer": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "clisops.utils.file_namers.get_format_extension": {
  "data": {
   "shadows": "clisops.utils.output_utils.get_format_extension"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.get_project_name": {
  "data": {
   "shadows": "roocs_utils.project_utils.get_project_name"
  },
  "type": "import"
 },
 "clisops.utils.file_namers.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "clisops.utils.output_utils": {
  "data": {
   "symbols_in_volume": [
    "clisops.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "clisops.utils.output_utils.CONFIG": {
  "data": {
   "shadows": "clisops.CONFIG"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.LOGGER": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.SUPPORTED_FORMATS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.SUPPORTED_SPLIT_METHODS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "clisops.utils.output_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.utils.output_utils._format_time": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datetime.datetime",
    "hasattr",
    "pandas.to_datetime",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils._get_chunked_dataset": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "clisops.utils.output_utils.get_chunk_length",
    "clisops.utils.output_utils.get_da"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.check_format": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "KeyError",
    "clisops.utils.output_utils.SUPPORTED_FORMATS"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.chunk_memory_limit": {
  "data": {
   "shadows": "clisops.chunk_memory_limit"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.filter_times_within": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "clisops.utils.output_utils._format_time"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_chunk_length": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "clisops.chunk_memory_limit",
    "clisops.utils.output_utils.math",
    "len",
    "roocs_utils.utils.common.parse_size"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_da": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "roocs_utils.xarray_utils.xarray_utils.get_main_variable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_extension": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "clisops.utils.output_utils.SUPPORTED_FORMATS",
    "clisops.utils.output_utils.check_format"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_format_writer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clisops.utils.output_utils.SUPPORTED_FORMATS",
    "clisops.utils.output_utils.check_format"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_output": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "clisops.utils.output_utils.LOGGER",
    "clisops.utils.output_utils._get_chunked_dataset",
    "clisops.utils.output_utils.dask",
    "clisops.utils.output_utils.get_format_writer",
    "clisops.utils.output_utils.os",
    "getattr",
    "type",
    "writer"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.get_time_slices": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "clisops.CONFIG",
    "clisops.utils.output_utils.SUPPORTED_SPLIT_METHODS",
    "clisops.utils.output_utils._format_time",
    "clisops.utils.output_utils.filter_times_within",
    "clisops.utils.output_utils.get_da",
    "int",
    "len",
    "roocs_utils.utils.common.parse_size",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "clisops.utils.output_utils.logging": {
  "data": {
   "shadows": "clisops.logging"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.parse_size": {
  "data": {
   "shadows": "roocs_utils.utils.common.parse_size"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "clisops.utils.output_utils.xu": {
  "data": {
   "shadows": "roocs_utils.xarray_utils.xarray_utils"
  },
  "type": "import"
 },
 "clisops.utils.tutorial": {
  "data": {
   "symbols_in_volume": [
    "clisops.utils.tutorial.logging",
    "pathlib.Path.home"
   ]
  },
  "type": "module"
 },
 "clisops.utils.tutorial.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.LOGGER": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "clisops.utils.tutorial.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "clisops.utils.tutorial._default_cache_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "clisops.utils.tutorial._get": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "clisops.utils.tutorial.LOGGER",
    "open",
    "pathlib.Path",
    "str",
    "urllib.error.HTTPError",
    "urllib.request.urlretrieve",
    "xarray.tutorial.file_md5_checksum"
   ]
  },
  "type": "function"
 },
 "clisops.utils.tutorial._open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.file_md5_checksum": {
  "data": {
   "shadows": "xarray.tutorial.file_md5_checksum"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.get_file": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "clisops.utils.tutorial._default_cache_dir",
    "clisops.utils.tutorial._get",
    "isinstance",
    "len",
    "list",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "clisops.utils.tutorial.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.open_dataset": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "clisops.utils.tutorial.LOGGER",
    "clisops.utils.tutorial._default_cache_dir",
    "clisops.utils.tutorial._get",
    "pathlib.Path",
    "str",
    "typing.Optional",
    "urllib.parse.urljoin",
    "xarray.Dataset",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "clisops.utils.tutorial.query_folder": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "clisops.utils.tutorial.re",
    "clisops.utils.tutorial.requests",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "clisops.utils.tutorial.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "clisops.utils.tutorial.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 }
}