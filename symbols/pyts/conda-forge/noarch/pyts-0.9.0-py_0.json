{
 "pyts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.dft": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.dft.DiscreteFourierTransform": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._anova": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.isclose",
   "numpy.where",
   "numpy.zeros_like",
   "sklearn.feature_selection.f_classif",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._check_params": {
  "lineno": 213,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit_transform": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.transform": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning": {
  "lineno": 50,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_consistent_lengths": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_constant": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_params": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.integer",
   "numpy.ndarray",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._compute_bins": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.diff",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.percentile",
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._entropy_bins": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.sort",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.fit": {
  "lineno": 107,
  "symbols_in_volume": [
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.transform": {
  "lineno": 134,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_1d": {
  "lineno": 25,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_2d": {
  "lineno": 33,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._uniform_bins": {
  "lineno": 15,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.approximation.paa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation._check_params": {
  "lineno": 114,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.fit": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.transform": {
  "lineno": 88,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.paa._paa": {
  "lineno": 14,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pyts.approximation.sax": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation._check_params": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.integer",
   "numpy.ndarray",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.fit": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.transform": {
  "lineno": 68,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit": {
  "lineno": 103,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit_transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.transform": {
  "lineno": 129,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_dft": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.approximation.tests.test_dft._compute_expected_results": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.asarray",
   "numpy.fft.rfft",
   "numpy.hstack",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.test_actual_results": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.DiscreteFourierTransform"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.test_fit_transform": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.DiscreteFourierTransform"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.test_parameter_check": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.approximation.DiscreteFourierTransform",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.approximation.tests.test_mcb.test_actual_results": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.repeat",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_consistent_length": {
  "lineno": 101,
  "symbols_in_volume": [
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_constant_sample": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_digitize": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.approximation.mcb._digitize"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_fit_transform": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_high_n_bins_entropy": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_identical_bin_edges": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros",
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_parameter_check": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_uniform_bins": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.approximation.mcb._uniform_bins"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_y_none_entropy": {
  "lineno": 124,
  "symbols_in_volume": [
   "pytest.raises",
   "pyts.approximation.MultipleCoefficientBinning"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_paa": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.approximation.tests.test_paa.test_actual_results": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.approximation.PiecewiseAggregateApproximation"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_actual_results_paa": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.approximation.paa._paa"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_parameter_check": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.approximation.PiecewiseAggregateApproximation",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sax": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.approximation.tests.test_sax.test_actual_results": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.SymbolicAggregateApproximation"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sax.test_parameter_check": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.approximation.SymbolicAggregateApproximation",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.approximation.tests.test_sfa._compute_expected_results": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.asarray",
   "numpy.fft.rfft",
   "numpy.hstack",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "pyts.approximation.MultipleCoefficientBinning",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa.test_actual_results": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.SymbolicFourierApproximation"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa.test_fit_transform": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.approximation.SymbolicFourierApproximation"
  ],
  "type": "function"
 },
 "pyts.bag_of_words": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.bow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.bow.BagOfWords": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.bag_of_words.bow.BagOfWords.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords._check_params": {
  "lineno": 104,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.fit": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.transform": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.bag_of_words.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow.test_actual_results": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.bag_of_words.BagOfWords"
  ],
  "type": "function"
 },
 "pyts.bag_of_words.tests.test_bow.test_parameter_check": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.bag_of_words.BagOfWords",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.bossvs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.bossvs.BOSSVS": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.bossvs.BOSSVS.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS._check_params": {
  "lineno": 268,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.decision_function": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.fit": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.predict": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.knn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.knn.KNeighborsClassifier": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.knn.KNeighborsClassifier.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict": {
  "lineno": 222,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict_proba": {
  "lineno": 205,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.saxvsm.SAXVSM": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.saxvsm.SAXVSM.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM._check_params": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.decision_function": {
  "lineno": 166,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.fit": {
  "lineno": 116,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.predict": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs.test_actual_results_no_numerosity_reduction": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pyts.approximation.SymbolicFourierApproximation",
   "pyts.classification.BOSSVS",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_bossvs.test_actual_results_numerosity_reduction": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pyts.approximation.SymbolicFourierApproximation",
   "pyts.classification.BOSSVS",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_bossvs.test_parameter_check": {
  "lineno": 20,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.classification.BOSSVS",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_knn": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.vstack"
  ],
  "type": "module"
 },
 "pyts.classification.tests.test_knn.test_actual_results": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.classification.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_saxvsm.test_actual_results_strategy_quantile": {
  "lineno": 63,
  "symbols_in_volume": [
   "math.log",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pyts.classification.SAXVSM",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm.test_actual_results_strategy_uniform": {
  "lineno": 32,
  "symbols_in_volume": [
   "math.log",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pyts.classification.SAXVSM",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm.test_parameter_check": {
  "lineno": 20,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.classification.SAXVSM",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.load._load_dataset": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyts.datasets.load.load_basic_motions": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.load.load_coffee": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.load.load_gunpoint": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.load.load_pig_central_venous_pressure": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.make": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.make.make_cylinder_bell_funnel": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.arange",
   "numpy.asarray",
   "numpy.integer",
   "numpy.logical_and",
   "numpy.tile",
   "sklearn.utils.check_array",
   "sklearn.utils.check_random_state",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "pyts.datasets.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.tests.test_load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.tests.test_load.test_load_functions": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_make": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.tests.test_make.test_class_balance_make_cylinder_bell_funnel": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.datasets.make_cylinder_bell_funnel"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_parameter_check_make_cylinder_bell_funnel": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.datasets.make_cylinder_bell_funnel",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_return_params_make_cylinder_bell_funnel": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "pyts.datasets.make_cylinder_bell_funnel"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_shuffle_make_cylinder_bell_funnel": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array_equal",
   "numpy.repeat",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.datasets.make_cylinder_bell_funnel"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.tests.test_ucr.test_correct_ucr_name_description": {
  "lineno": 86,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.ucr._correct_ucr_name_description"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_correct_ucr_name_download": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.ucr._correct_ucr_name_download"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_dictionary_keys_ucr_dataset_info": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.ucr_dataset_info"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_dictionary_length_uea_dataset_info": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.ucr_dataset_info"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_length_ucr_dataset_list": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyts.datasets.ucr_dataset_list"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_parameter_check_uea_dataset_info": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.datasets.ucr_dataset_info",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_uea": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.tests.test_uea.test_correct_uea_name_download": {
  "lineno": 70,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.uea._correct_uea_name_download"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_dictionary_keys_uea_dataset_info": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.uea_dataset_info"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_dictionary_length_uea_dataset_info": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.datasets.uea_dataset_info"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_length_uea_dataset_list": {
  "lineno": 65,
  "symbols_in_volume": [
   "pyts.datasets.uea_dataset_list"
  ],
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_parameter_check_uea_dataset_info": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.datasets.uea_dataset_info",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.datasets.ucr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.ucr._correct_ucr_name_description": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.ucr._correct_ucr_name_download": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.ucr._load_ucr_dataset": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.genfromtxt",
   "scipy.io.arff.loadarff",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "pyts.datasets.ucr.fetch_ucr_dataset": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.remove",
   "pyts.__file__.split",
   "urllib.request.urlretrieve",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pyts.datasets.ucr.ucr_dataset_info": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.setdiff1d",
   "os.path.dirname",
   "os.path.join",
   "pickle.load"
  ],
  "type": "function"
 },
 "pyts.datasets.ucr.ucr_dataset_list": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "pickle.load"
  ],
  "type": "function"
 },
 "pyts.datasets.uea": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.datasets.uea._correct_uea_name_download": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.datasets.uea._load_uea_dataset": {
  "lineno": 214,
  "symbols_in_volume": [
   "os.listdir",
   "scipy.io.arff.loadarff",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "pyts.datasets.uea._parse_relational_arff": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pyts.datasets.uea.fetch_uea_dataset": {
  "lineno": 113,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.remove",
   "pyts.__file__.split",
   "urllib.request.urlretrieve",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pyts.datasets.uea.uea_dataset_info": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.setdiff1d",
   "os.path.dirname",
   "os.path.join",
   "pickle.load"
  ],
  "type": "function"
 },
 "pyts.datasets.uea.uea_dataset_list": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "pickle.load"
  ],
  "type": "function"
 },
 "pyts.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.ssa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis": {
  "lineno": 39,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._check_params": {
  "lineno": 164,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.floating",
   "numpy.integer",
   "numpy.ndarray",
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._grouping": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.fit": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.transform": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.linalg.eigh",
   "numpy.matmul",
   "numpy.squeeze",
   "numpy.transpose",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa._diagonal_averaging": {
  "lineno": 23,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.diag",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa._outer_dot": {
  "lineno": 14,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.dot",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa.test_actual_results": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.decomposition.SingularSpectrumAnalysis"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_diagonal_averaging": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.decomposition.ssa._diagonal_averaging"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_outer_dot": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pyts.decomposition.ssa._outer_dot"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_parameter_check": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.decomposition.SingularSpectrumAnalysis",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.gaf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.gaf.GramianAngularField": {
  "lineno": 31,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.gaf.GramianAngularField.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField._check_params": {
  "lineno": 134,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.fit": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.transform": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.max",
   "numpy.min",
   "numpy.sqrt",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.gaf._gadf": {
  "lineno": 23,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.image.gaf._gasf": {
  "lineno": 15,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.image.mtf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.mtf.MarkovTransitionField": {
  "lineno": 49,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.mtf.MarkovTransitionField.__init__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField._check_params": {
  "lineno": 165,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.fit": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.transform": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.place",
   "numpy.reshape",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.mtf._aggregated_markov_transition_field": {
  "lineno": 36,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_field": {
  "lineno": 24,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_matrix": {
  "lineno": 15,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.image.recurrence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.recurrence.RecurrencePlot": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.recurrence.RecurrencePlot.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot._check_params": {
  "lineno": 159,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.fit": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.transform": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.percentile",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.recurrence._trajectories": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "pyts.image.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_gaf": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.pi"
  ],
  "type": "module"
 },
 "pyts.image.tests.test_gaf.test_actual_results": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.GramianAngularField"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_actual_results_gadf": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.gaf._gadf"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_actual_results_gasf": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.gaf._gasf"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_parameter_check": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.image.GramianAngularField",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_mtf.test_actual_results": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.MarkovTransitionField"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_aggregated_markov_transition_field": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.mtf._aggregated_markov_transition_field"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_field": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.mtf._markov_transition_field"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_matrix": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.mtf._markov_transition_matrix"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_parameter_check": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.image.MarkovTransitionField",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_recurrence": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "module"
 },
 "pyts.image.tests.test_recurrence.test_actual_results_recurrence_plot": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.RecurrencePlot"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_actual_results_trajectories": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.recurrence._trajectories"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_parameter_check": {
  "lineno": 44,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.image.RecurrencePlot",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.boss.boss": {
  "lineno": 11,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.isclose",
   "numpy.sum",
   "numpy.zeros_like",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.dtw._absolute": {
  "lineno": 17,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_no_region": {
  "lineno": 136,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.cumsum",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_region": {
  "lineno": 116,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.cumsum",
   "numpy.inf",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._check_input_dtw": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_no_region": {
  "lineno": 32,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_region": {
  "lineno": 22,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.full",
   "numpy.inf"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._multiscale_region": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.clip",
   "numpy.empty",
   "numpy.max",
   "numpy.min",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._return_path": {
  "lineno": 192,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.argmin",
   "numpy.array",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._return_results": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw._square": {
  "lineno": 12,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.accumulated_cost_matrix": {
  "lineno": 152,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.cost_matrix": {
  "lineno": 54,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_classic": {
  "lineno": 234,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_fast": {
  "lineno": 776,
  "symbols_in_volume": [
   "math.ceil",
   "math.log2",
   "math.sqrt",
   "numpy.append",
   "numpy.integer",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_itakura": {
  "lineno": 569,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_multiscale": {
  "lineno": 673,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.append",
   "numpy.integer",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_region": {
  "lineno": 300,
  "symbols_in_volume": [
   "math.sqrt",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_sakoechiba": {
  "lineno": 436,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.itakura_parallelogram": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.empty",
   "numpy.floating",
   "numpy.floor",
   "numpy.integer",
   "numpy.max",
   "numpy.min",
   "numpy.round"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.sakoe_chiba_band": {
  "lineno": 379,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.arange",
   "numpy.array",
   "numpy.clip",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.show_options": {
  "lineno": 979,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pyts.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.tests.test_boss": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.metrics.tests.test_boss.test_actual_results": {
  "lineno": 30,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.boss"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_boss.test_parameter_check": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.boss",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyts.metrics.tests.test_dtw.power_four": {
  "lineno": 30,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_absolute": {
  "lineno": 48,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.metrics.dtw._absolute"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_accumulated_cost_matrix": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw.accumulated_cost_matrix"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_cost_matrix": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw.cost_matrix"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw",
   "pyts.metrics.dtw_classic",
   "pyts.metrics.dtw_fast",
   "pyts.metrics.dtw_itakura",
   "pyts.metrics.dtw_multiscale",
   "pyts.metrics.dtw_sakoechiba"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_classic": {
  "lineno": 186,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw_classic"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_itakura": {
  "lineno": 381,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw_itakura"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_multiscale": {
  "lineno": 458,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw_multiscale"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_region": {
  "lineno": 225,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw_region"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_sakoechiba": {
  "lineno": 302,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw_sakoechiba"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_itakura_parallelogram": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.itakura_parallelogram"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_multiscale_region": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw._multiscale_region"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_return_path": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw._return_path"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_return_results": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.dtw._return_results"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_sakoe_chiba_band": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.metrics.sakoe_chiba_band"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_show_options": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pyts.metrics.show_options"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_check_input_dtw": {
  "lineno": 60,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw._check_input_dtw",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_accumulated_cost_matrix": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw.accumulated_cost_matrix",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_cost_matrix": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw.cost_matrix",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw": {
  "lineno": 506,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw_multiscale": {
  "lineno": 444,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw_multiscale",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw_region": {
  "lineno": 213,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.dtw_region",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_itakura_parallelogram": {
  "lineno": 349,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.itakura_parallelogram",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_sakoe_chiba_band": {
  "lineno": 264,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.sakoe_chiba_band",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_show_options": {
  "lineno": 556,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.metrics.show_options",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_square": {
  "lineno": 36,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.metrics.dtw._square"
  ],
  "type": "function"
 },
 "pyts.multivariate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.classification.multivariate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier._check_params": {
  "lineno": 125,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.fit": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.predict": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.empty",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate._hard_vote": {
  "lineno": 15,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.argmax",
   "numpy.bincount",
   "numpy.empty",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.classification.tests.test_multivariate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_actual_results_with_weights": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.testing.assert_allclose",
   "pyts.classification.SAXVSM",
   "pyts.multivariate.classification.MultivariateClassifier"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_actual_results_without_weights": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.testing.assert_allclose",
   "pyts.classification.SAXVSM",
   "pyts.multivariate.classification.MultivariateClassifier"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_input_check": {
  "lineno": 40,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.multivariate.classification.MultivariateClassifier",
   "pyts.transformation.BOSS",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_parameter_check": {
  "lineno": 20,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.classification.SAXVSM",
   "pyts.multivariate.classification.MultivariateClassifier",
   "pyts.transformation.BOSS",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.image": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.image.joint_rp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.__init__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot._check_params": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot._joint_recurrence_plot": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.fit": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.transform": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.product"
  ],
  "type": "function"
 },
 "pyts.multivariate.image.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.image.tests.test_joint_rp": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_actual_results_lists": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.image.JointRecurrencePlot"
  ],
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_actual_results_single_value": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.image.JointRecurrencePlot"
  ],
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_parameter_check": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.multivariate.image.JointRecurrencePlot",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_shapes": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.multivariate.image.JointRecurrencePlot"
  ],
  "type": "function"
 },
 "pyts.multivariate.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.transformation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.transformation.multivariate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer._check_params": {
  "lineno": 122,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer._convert_to_array": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.fit": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.transform": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.transpose",
   "numpy.unique",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_multivariate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_actual_results_with_flatten": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.testing.assert_allclose",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.transformation.MultivariateTransformer"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_actual_results_without_flatten": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.transpose",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.transformation.MultivariateTransformer"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_array_conversion": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.multivariate.transformation.MultivariateTransformer._convert_to_array",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_array_conversion_error": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.multivariate.transformation.MultivariateTransformer._convert_to_array",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_ndim": {
  "lineno": 87,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.transformation.MultivariateTransformer",
   "pyts.transformation.BOSS"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_parameter_check": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.classification.SAXVSM",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.transformation.MultivariateTransformer",
   "pyts.transformation.BOSS",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_shapes": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.image.RecurrencePlot",
   "pyts.multivariate.transformation.MultivariateTransformer"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_fit_transform": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.multivariate.transformation.WEASELMUSE"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_n_estimators": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyts.multivariate.transformation.WEASELMUSE"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_output_dtype": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "pyts.multivariate.transformation.WEASELMUSE",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_output_ndim": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pyts.multivariate.transformation.WEASELMUSE"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE._update_vocabulary": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.fit": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diff",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.fit_transform": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diff",
   "numpy.hstack",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.transform": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diff",
   "numpy.hstack",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.multivariate.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.utils.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.multivariate.utils.tests.test_utils.test_3d_input": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.multivariate.utils.check_3d_array",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.multivariate.utils.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.multivariate.utils.utils.check_3d_array": {
  "lineno": 9,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.discretizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_constant": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_params": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._compute_bins": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.diff",
   "numpy.full",
   "numpy.isclose",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.percentile",
   "numpy.r_",
   "numpy.where",
   "scipy.stats.norm.ppf",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.fit": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.transform": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_1d": {
  "lineno": 23,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_2d": {
  "lineno": 31,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._uniform_bins": {
  "lineno": 14,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.imputer.InterpolationImputer": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._check_params": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._impute_one_sample": {
  "lineno": 127,
  "symbols_in_volume": [
   "scipy.interpolate.interp1d"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.fit": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.transform": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "sklearn.impute.MissingIndicator",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler": {
  "lineno": 141,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.fit": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.transform": {
  "lineno": 177,
  "symbols_in_volume": [
   "sklearn.preprocessing.MaxAbsScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.fit": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.transform": {
  "lineno": 121,
  "symbols_in_volume": [
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler": {
  "lineno": 197,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.RobustScaler.__init__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.fit": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.transform": {
  "lineno": 264,
  "symbols_in_volume": [
   "sklearn.preprocessing.RobustScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.StandardScaler.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.fit": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.transform": {
  "lineno": 59,
  "symbols_in_volume": [
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer.test_actual_results": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_constant_sample": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "pyts.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_digitize": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.preprocessing.discretizer._digitize"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_parameter_check": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.preprocessing.KBinsDiscretizer",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_uniform_bins": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.preprocessing.discretizer._uniform_bins"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_warning_smaller_n_bins": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.r_",
   "numpy.zeros",
   "pytest.warns",
   "pyts.preprocessing.KBinsDiscretizer",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_imputer.test_actual_results": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.preprocessing.InterpolationImputer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer.test_parameter_check": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.preprocessing.InterpolationImputer",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_max_abs_scaler": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.testing.assert_allclose",
   "pyts.preprocessing.MaxAbsScaler"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_min_max_scaler": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.preprocessing.MinMaxScaler"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_robust_scaler": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.preprocessing.RobustScaler"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_standard_scaler": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pyts.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_power_transformer_box_cox": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyts.preprocessing.PowerTransformer",
   "pyts.preprocessing.StandardScaler",
   "scipy.stats.boxcox"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_power_transformer_yeo_johnson": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pyts.preprocessing.PowerTransformer",
   "pyts.preprocessing.StandardScaler",
   "scipy.stats.yeojohnson"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_quantile_transformer_normal": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linspace",
   "numpy.round",
   "numpy.testing.assert_allclose",
   "pyts.preprocessing.QuantileTransformer",
   "scipy.stats.norm.pdf",
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_quantile_transformer_uniform": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "pyts.preprocessing.QuantileTransformer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.transformer.PowerTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.transformer.PowerTransformer.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.fit": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.transform": {
  "lineno": 90,
  "symbols_in_volume": [
   "sklearn.preprocessing.PowerTransformer",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer": {
  "lineno": 112,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.fit": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.transform": {
  "lineno": 181,
  "symbols_in_volume": [
   "sklearn.preprocessing.QuantileTransformer",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.boss.BOSS": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.transformation.boss.BOSS.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS._check_params": {
  "lineno": 289,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit_transform": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.transform": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.transformation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.tests.test_boss": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.transformation.tests.test_boss.test_accurate_results_floats": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pyts.approximation.SymbolicFourierApproximation",
   "pyts.transformation.BOSS",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_accurate_results_without_numerosity_reduction": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pyts.approximation.SymbolicFourierApproximation",
   "pyts.transformation.BOSS",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_parameter_check": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.transformation.BOSS",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_sparse_dense": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "pyts.transformation.BOSS",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "pyts.transformation.tests.test_weasel.test_accurate_results": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "numpy.where",
   "pyts.approximation.SymbolicFourierApproximation",
   "pyts.transformation.WEASEL",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel.test_parameter_check": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.transformation.WEASEL",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel.test_sparse_dense": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "pyts.transformation.WEASEL",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.weasel.WEASEL": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.transformation.weasel.WEASEL.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL._check_params": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floating",
   "numpy.integer",
   "numpy.max",
   "numpy.min",
   "numpy.ndarray",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.repeat",
   "numpy.where",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit_transform": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "numpy.repeat",
   "numpy.where",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.transform": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests.test_segmentation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests.test_segmentation.test_accurate_results": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pyts.utils.segmentation"
  ],
  "type": "function"
 },
 "pyts.utils.tests.test_segmentation.test_parameter_check": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.utils.segmentation",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.utils.tests.test_windowed_view": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "pyts.utils.tests.test_windowed_view.test_accurate_results": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "pyts.utils.windowed_view"
  ],
  "type": "function"
 },
 "pyts.utils.tests.test_windowed_view.test_parameter_check": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pyts.utils.windowed_view",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.utils.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.utils.segmentation": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.integer",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.utils.utils.windowed_view": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.lib.stride_tricks.as_strided",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 }
}