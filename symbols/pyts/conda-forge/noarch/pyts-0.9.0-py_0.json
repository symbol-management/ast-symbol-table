{
 "pyts": {
  "data": {},
  "type": "module"
 },
 "pyts.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.approximation": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.approximation.dft": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.dft.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.dft.DiscreteFourierTransform": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._anova": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.argsort",
    "numpy.isclose",
    "numpy.where",
    "numpy.zeros_like",
    "sklearn.feature_selection.f_classif",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._check_params": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.arange",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit_transform": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.arange",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.dft.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.dft.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "pyts.approximation.dft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.dft.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyts.approximation.mcb": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.mcb.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_consistent_lengths": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_constant": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_params": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "chr",
    "int",
    "isinstance",
    "list",
    "min",
    "numpy.array",
    "numpy.integer",
    "numpy.ndarray",
    "range",
    "sklearn.utils.validation.check_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._compute_bins": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.diff",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.percentile",
    "pyts.approximation.mcb._uniform_bins",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._entropy_bins": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.sort",
    "range",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.fit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.transform": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "pyts.approximation.mcb._digitize",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.mcb._digitize": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyts.approximation.mcb._digitize_1d",
    "pyts.approximation.mcb._digitize_2d"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_1d": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_2d": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._uniform_bins": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.approximation.paa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.paa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation._check_params": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "divmod",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.fit": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.transform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyts.approximation.paa._paa",
    "segmentation",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.paa._paa": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.approximation.paa.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.paa.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.approximation.paa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.paa.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.approximation.sax": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.sax.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation._check_params": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "chr",
    "int",
    "isinstance",
    "list",
    "min",
    "numpy.array",
    "numpy.integer",
    "numpy.ndarray",
    "range",
    "sklearn.utils.validation.check_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.fit": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.transform": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "KBinsDiscretizer",
    "isinstance",
    "sklearn.utils.validation.check_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sax.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.sax.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.sax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.sfa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.sfa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "DiscreteFourierTransform",
    "MultipleCoefficientBinning",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit_transform": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "DiscreteFourierTransform",
    "MultipleCoefficientBinning",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.transform": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_dft": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.approximation.tests.test_dft.rng"
   ]
  },
  "type": "module"
 },
 "pyts.approximation.tests.test_dft.DiscreteFourierTransform": {
  "data": {
   "shadows": "pyts.approximation.DiscreteFourierTransform"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_dft._compute_expected_results": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.asarray",
    "numpy.fft.rfft",
    "numpy.hstack",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "pyts.approximation.tests.test_dft.X",
    "pyts.approximation.tests.test_dft.y",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_dft.test_actual_results": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.DiscreteFourierTransform",
    "pyts.approximation.tests.test_dft.X",
    "pyts.approximation.tests.test_dft._compute_expected_results",
    "pyts.approximation.tests.test_dft.pytest",
    "pyts.approximation.tests.test_dft.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.test_fit_transform": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.DiscreteFourierTransform",
    "pyts.approximation.tests.test_dft.X",
    "pyts.approximation.tests.test_dft.pytest",
    "pyts.approximation.tests.test_dft.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.test_parameter_check": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.approximation.DiscreteFourierTransform",
    "pyts.approximation.tests.test_dft.X",
    "pyts.approximation.tests.test_dft.pytest",
    "pyts.approximation.tests.test_dft.re",
    "pyts.approximation.tests.test_dft.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_dft.y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_mcb": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.approximation.tests.test_mcb.MultipleCoefficientBinning": {
  "data": {
   "shadows": "pyts.approximation.MultipleCoefficientBinning"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_mcb._digitize": {
  "data": {
   "shadows": "pyts.approximation.mcb._digitize"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb._uniform_bins": {
  "data": {
   "shadows": "pyts.approximation.mcb._uniform_bins"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.test_actual_results": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_consistent_length": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.re",
    "pyts.approximation.tests.test_mcb.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_constant_sample": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_digitize": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.approximation.mcb._digitize",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_fit_transform": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_high_n_bins_entropy": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_identical_bin_edges": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_parameter_check": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.re",
    "pyts.approximation.tests.test_mcb.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_uniform_bins": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.approximation.mcb._uniform_bins",
    "pyts.approximation.tests.test_mcb.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_y_none_entropy": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_mcb.X",
    "pyts.approximation.tests.test_mcb.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.y": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_paa": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.approximation.tests.test_paa.PiecewiseAggregateApproximation": {
  "data": {
   "shadows": "pyts.approximation.PiecewiseAggregateApproximation"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_paa._paa": {
  "data": {
   "shadows": "pyts.approximation.paa._paa"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.test_actual_results": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.approximation.PiecewiseAggregateApproximation",
    "pyts.approximation.tests.test_paa.X",
    "pyts.approximation.tests.test_paa.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_actual_results_paa": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.approximation.paa._paa",
    "pyts.approximation.tests.test_paa.X",
    "pyts.approximation.tests.test_paa.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_parameter_check": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.approximation.PiecewiseAggregateApproximation",
    "pyts.approximation.tests.test_paa.X",
    "pyts.approximation.tests.test_paa.pytest",
    "pyts.approximation.tests.test_paa.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sax": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.approximation.tests.test_sax.SymbolicAggregateApproximation": {
  "data": {
   "shadows": "pyts.approximation.SymbolicAggregateApproximation"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_sax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.test_actual_results": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.SymbolicAggregateApproximation",
    "pyts.approximation.tests.test_sax.X",
    "pyts.approximation.tests.test_sax.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sax.test_parameter_check": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.approximation.SymbolicAggregateApproximation",
    "pyts.approximation.tests.test_sax.X",
    "pyts.approximation.tests.test_sax.pytest",
    "pyts.approximation.tests.test_sax.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.approximation.tests.test_sfa.rng"
   ]
  },
  "type": "module"
 },
 "pyts.approximation.tests.test_sfa.MultipleCoefficientBinning": {
  "data": {
   "shadows": "pyts.approximation.MultipleCoefficientBinning"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.SymbolicFourierApproximation": {
  "data": {
   "shadows": "pyts.approximation.SymbolicFourierApproximation"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_sfa._compute_expected_results": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.asarray",
    "numpy.fft.rfft",
    "numpy.hstack",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "pyts.approximation.MultipleCoefficientBinning",
    "pyts.approximation.tests.test_sfa.X",
    "pyts.approximation.tests.test_sfa.y",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.approximation.tests.test_sfa.test_actual_results": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.approximation.tests.test_sfa.X",
    "pyts.approximation.tests.test_sfa._compute_expected_results",
    "pyts.approximation.tests.test_sfa.pytest",
    "pyts.approximation.tests.test_sfa.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa.test_fit_transform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.approximation.tests.test_sfa.X",
    "pyts.approximation.tests.test_sfa.pytest",
    "pyts.approximation.tests.test_sfa.y"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa.y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyts.bag_of_words": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyts.bag_of_words.bow": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.bow.BagOfWords": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.bag_of_words.bow.BagOfWords.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords._check_params": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.fit": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.transform": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow.BagOfWords": {
  "data": {
   "shadows": "pyts.bag_of_words.BagOfWords"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.bag_of_words.tests.test_bow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.test_actual_results": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.bag_of_words.BagOfWords",
    "pyts.bag_of_words.tests.test_bow.X",
    "pyts.bag_of_words.tests.test_bow.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words.tests.test_bow.test_parameter_check": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.bag_of_words.BagOfWords",
    "pyts.bag_of_words.tests.test_bow.X",
    "pyts.bag_of_words.tests.test_bow.pytest",
    "pyts.bag_of_words.tests.test_bow.re"
   ]
  },
  "type": "function"
 },
 "pyts.classification": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pyts.classification.bossvs": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.bossvs.BOSSVS": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.bossvs.BOSSVS.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS._check_params": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.decision_function": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.fit": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.array",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.predict": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.knn": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.knn.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.knn.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.knn.KNeighborsClassifier": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.knn.KNeighborsClassifier.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "itakura_parallelogram",
    "sakoe_chiba_band",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.classification.knn.SklearnKNN": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "pyts.classification.knn.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.knn.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.saxvsm.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.SAXVSM": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.saxvsm.SAXVSM.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM._check_params": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.decision_function": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.fit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "BagOfWords",
    "SymbolicAggregateApproximation",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.predict": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs": {
  "data": {
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.random.RandomState",
    "pyts.classification.tests.test_bossvs.rng"
   ]
  },
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs.BOSSVS": {
  "data": {
   "shadows": "pyts.classification.BOSSVS"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.SymbolicFourierApproximation": {
  "data": {
   "shadows": "pyts.approximation.SymbolicFourierApproximation"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_bossvs.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.rng": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_bossvs.test_actual_results_no_numerosity_reduction": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.classification.BOSSVS",
    "pyts.classification.tests.test_bossvs.X",
    "pyts.classification.tests.test_bossvs.y",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_bossvs.test_actual_results_numerosity_reduction": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.classification.BOSSVS",
    "pyts.classification.tests.test_bossvs.X",
    "pyts.classification.tests.test_bossvs.y",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_bossvs.test_parameter_check": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.classification.BOSSVS",
    "pyts.classification.tests.test_bossvs.X",
    "pyts.classification.tests.test_bossvs.pytest",
    "pyts.classification.tests.test_bossvs.re",
    "pyts.classification.tests.test_bossvs.y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_bossvs.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_knn": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.vstack",
    "pyts.classification.tests.test_knn.X",
    "pyts.classification.tests.test_knn.y"
   ]
  },
  "type": "module"
 },
 "pyts.classification.tests.test_knn.KNeighborsClassifier": {
  "data": {
   "shadows": "pyts.classification.KNeighborsClassifier"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_knn.X": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_knn.X_test": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_knn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_knn.test_actual_results": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.classification.KNeighborsClassifier",
    "pyts.classification.tests.test_knn.X",
    "pyts.classification.tests.test_knn.X_test",
    "pyts.classification.tests.test_knn.pytest",
    "pyts.classification.tests.test_knn.y",
    "pyts.classification.tests.test_knn.y_proba"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_knn.y": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_knn.y_proba": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_saxvsm": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_saxvsm.SAXVSM": {
  "data": {
   "shadows": "pyts.classification.SAXVSM"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.classification.tests.test_saxvsm.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.test_actual_results_strategy_quantile": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "math.log",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "pyts.classification.SAXVSM",
    "pyts.classification.tests.test_saxvsm.X",
    "pyts.classification.tests.test_saxvsm.y",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm.test_actual_results_strategy_uniform": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "math.log",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "pyts.classification.SAXVSM",
    "pyts.classification.tests.test_saxvsm.X",
    "pyts.classification.tests.test_saxvsm.y",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm.test_parameter_check": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.classification.SAXVSM",
    "pyts.classification.tests.test_saxvsm.X",
    "pyts.classification.tests.test_saxvsm.pytest",
    "pyts.classification.tests.test_saxvsm.re",
    "pyts.classification.tests.test_saxvsm.y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.datasets": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.datasets.load": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.load._load_dataset": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_load_ucr_dataset",
    "_load_uea_dataset",
    "pyts.datasets.load.os"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.load.load_basic_motions": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyts.datasets.load._load_dataset"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.load.load_coffee": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyts.datasets.load._load_dataset"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.load.load_gunpoint": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyts.datasets.load._load_dataset"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.load.load_pig_central_venous_pressure": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyts.datasets.load._load_dataset"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.load.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyts.datasets.make": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.make.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.datasets.make.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "pyts.datasets.make.make_cylinder_bell_funnel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "numpy.append",
    "numpy.arange",
    "numpy.asarray",
    "numpy.integer",
    "numpy.logical_and",
    "numpy.tile",
    "range",
    "sklearn.utils.check_array",
    "sklearn.utils.check_random_state",
    "sklearn.utils.shuffle",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.datasets.make.utils_shuffle": {
  "data": {
   "shadows": "sklearn.utils.shuffle"
  },
  "type": "import"
 },
 "pyts.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.tests.test_load": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.tests.test_load.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_load.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_load.test_load_functions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "function",
    "isinstance",
    "numpy.ndarray",
    "numpy.unique",
    "pyts.datasets.tests.test_load.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_make": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.tests.test_make.make_cylinder_bell_funnel": {
  "data": {
   "shadows": "pyts.datasets.make_cylinder_bell_funnel"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_make.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_make.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_make.test_class_balance_make_cylinder_bell_funnel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bincount",
    "numpy.testing.assert_array_equal",
    "pyts.datasets.make_cylinder_bell_funnel",
    "pyts.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_parameter_check_make_cylinder_bell_funnel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.datasets.make_cylinder_bell_funnel",
    "pyts.datasets.tests.test_make.pytest",
    "pyts.datasets.tests.test_make.re"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_return_params_make_cylinder_bell_funnel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "isinstance",
    "numpy.floating",
    "numpy.integer",
    "numpy.ndarray",
    "pyts.datasets.make_cylinder_bell_funnel",
    "pyts.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_make.test_shuffle_make_cylinder_bell_funnel": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array_equal",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "pyts.datasets.make_cylinder_bell_funnel",
    "pyts.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.tests.test_ucr._correct_ucr_name_description": {
  "data": {
   "shadows": "pyts.datasets.ucr._correct_ucr_name_description"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_ucr._correct_ucr_name_download": {
  "data": {
   "shadows": "pyts.datasets.ucr._correct_ucr_name_download"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_ucr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_ucr.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_ucr.test_correct_ucr_name_description": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyts.datasets.tests.test_ucr.pytest",
    "pyts.datasets.ucr._correct_ucr_name_description"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_correct_ucr_name_download": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyts.datasets.tests.test_ucr.pytest",
    "pyts.datasets.ucr._correct_ucr_name_download"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_dictionary_keys_ucr_dataset_info": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "list",
    "pyts.datasets.tests.test_ucr.pytest",
    "pyts.datasets.ucr_dataset_info",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_dictionary_length_uea_dataset_info": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "pyts.datasets.tests.test_ucr.pytest",
    "pyts.datasets.ucr_dataset_info"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_length_ucr_dataset_list": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "pyts.datasets.ucr_dataset_list"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.test_parameter_check_uea_dataset_info": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "pyts.datasets.tests.test_ucr.pytest",
    "pyts.datasets.tests.test_ucr.re",
    "pyts.datasets.ucr_dataset_info"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_ucr.ucr_dataset_info": {
  "data": {
   "shadows": "pyts.datasets.ucr_dataset_info"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_ucr.ucr_dataset_list": {
  "data": {
   "shadows": "pyts.datasets.ucr_dataset_list"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_uea": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.tests.test_uea._correct_uea_name_download": {
  "data": {
   "shadows": "pyts.datasets.uea._correct_uea_name_download"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_uea.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_uea.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_uea.test_correct_uea_name_download": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyts.datasets.tests.test_uea.pytest",
    "pyts.datasets.uea._correct_uea_name_download"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_dictionary_keys_uea_dataset_info": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "list",
    "pyts.datasets.tests.test_uea.pytest",
    "pyts.datasets.uea_dataset_info",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_dictionary_length_uea_dataset_info": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "pyts.datasets.tests.test_uea.pytest",
    "pyts.datasets.uea_dataset_info"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_length_uea_dataset_list": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "pyts.datasets.uea_dataset_list"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.test_parameter_check_uea_dataset_info": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "pyts.datasets.tests.test_uea.pytest",
    "pyts.datasets.tests.test_uea.re",
    "pyts.datasets.uea_dataset_info"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.tests.test_uea.uea_dataset_info": {
  "data": {
   "shadows": "pyts.datasets.uea_dataset_info"
  },
  "type": "import"
 },
 "pyts.datasets.tests.test_uea.uea_dataset_list": {
  "data": {
   "shadows": "pyts.datasets.uea_dataset_list"
  },
  "type": "import"
 },
 "pyts.datasets.ucr": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.ucr.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "pyts.datasets.ucr._correct_ucr_name_description": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pyts.datasets.ucr._correct_ucr_name_download": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pyts.datasets.ucr._load_ucr_dataset": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "IndexError",
    "UnicodeDecodeError",
    "ValueError",
    "numpy.asarray",
    "numpy.genfromtxt",
    "open",
    "scipy.io.arff.loadarff",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.ucr.fetch_ucr_dataset": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "pyts.datasets.ucr._correct_ucr_name_download",
    "pyts.datasets.ucr._load_ucr_dataset",
    "pyts.datasets.ucr.os",
    "pyts.datasets.ucr.pyts",
    "pyts.datasets.ucr.ucr_dataset_list",
    "pyts.datasets.ucr.zipfile",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.ucr.loadarff": {
  "data": {
   "shadows": "scipy.io.arff.loadarff"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.pyts": {
  "data": {
   "shadows": "pyts"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.ucr_dataset_info": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.setdiff1d",
    "open",
    "pyts.datasets.ucr.os",
    "pyts.datasets.ucr.pickle",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.ucr.ucr_dataset_list": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list",
    "open",
    "pyts.datasets.ucr.os",
    "pyts.datasets.ucr.pickle"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.ucr.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "pyts.datasets.ucr.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pyts.datasets.uea": {
  "data": {},
  "type": "module"
 },
 "pyts.datasets.uea.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "pyts.datasets.uea._correct_uea_name_download": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pyts.datasets.uea._load_uea_dataset": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "IndexError",
    "UnicodeDecodeError",
    "open",
    "pyts.datasets.uea._parse_relational_arff",
    "pyts.datasets.uea.os",
    "scipy.io.arff.loadarff",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.uea._parse_relational_arff": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.uea.fetch_uea_dataset": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "pyts.datasets.uea._correct_uea_name_download",
    "pyts.datasets.uea._load_uea_dataset",
    "pyts.datasets.uea.os",
    "pyts.datasets.uea.pyts",
    "pyts.datasets.uea.uea_dataset_list",
    "pyts.datasets.uea.zipfile",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.uea.loadarff": {
  "data": {
   "shadows": "scipy.io.arff.loadarff"
  },
  "type": "import"
 },
 "pyts.datasets.uea.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.datasets.uea.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyts.datasets.uea.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyts.datasets.uea.pyts": {
  "data": {
   "shadows": "pyts"
  },
  "type": "import"
 },
 "pyts.datasets.uea.uea_dataset_info": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.setdiff1d",
    "open",
    "pyts.datasets.uea.os",
    "pyts.datasets.uea.pickle",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.uea.uea_dataset_list": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "list",
    "open",
    "pyts.datasets.uea.os",
    "pyts.datasets.uea.pickle"
   ]
  },
  "type": "function"
 },
 "pyts.datasets.uea.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "pyts.datasets.uea.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pyts.decomposition": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.decomposition.ssa": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.ssa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.__init__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._check_params": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "float",
    "int",
    "isinstance",
    "list",
    "math.ceil",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.floating",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.setdiff1d",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._grouping": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.linspace",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.fit": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.transform": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.linalg.eigh",
    "numpy.matmul",
    "numpy.squeeze",
    "numpy.transpose",
    "pyts.decomposition.ssa._diagonal_averaging",
    "pyts.decomposition.ssa._outer_dot",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa._diagonal_averaging": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.diag",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa._outer_dot": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.dot",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.decomposition.tests.test_ssa.rng"
   ]
  },
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa.SingularSpectrumAnalysis": {
  "data": {
   "shadows": "pyts.decomposition.SingularSpectrumAnalysis"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.decomposition.tests.test_ssa._diagonal_averaging": {
  "data": {
   "shadows": "pyts.decomposition.ssa._diagonal_averaging"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa._outer_dot": {
  "data": {
   "shadows": "pyts.decomposition.ssa._outer_dot"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.decomposition.tests.test_ssa.test_actual_results": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.decomposition.SingularSpectrumAnalysis",
    "pyts.decomposition.tests.test_ssa.X",
    "pyts.decomposition.tests.test_ssa.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_diagonal_averaging": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "max",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.decomposition.ssa._diagonal_averaging",
    "pyts.decomposition.tests.test_ssa.X",
    "pyts.decomposition.tests.test_ssa.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_outer_dot": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyts.decomposition.ssa._outer_dot",
    "pyts.decomposition.tests.test_ssa.X",
    "pyts.decomposition.tests.test_ssa.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_parameter_check": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.decomposition.SingularSpectrumAnalysis",
    "pyts.decomposition.tests.test_ssa.X",
    "pyts.decomposition.tests.test_ssa.pytest",
    "pyts.decomposition.tests.test_ssa.re"
   ]
  },
  "type": "function"
 },
 "pyts.image": {
  "data": {},
  "type": "module"
 },
 "pyts.image.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.image.gaf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.gaf.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.gaf.GramianAngularField": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.gaf.GramianAngularField.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField._check_params": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "math.ceil",
    "numpy.floating",
    "numpy.integer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.fit": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.transform": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "MinMaxScaler",
    "PiecewiseAggregateApproximation",
    "ValueError",
    "numpy.clip",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "pyts.image.gaf._gadf",
    "pyts.image.gaf._gasf",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.gaf._gadf": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf._gasf": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.gaf.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.gaf.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.image.gaf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.gaf.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.image.mtf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.mtf.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.mtf.MarkovTransitionField": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.mtf.MarkovTransitionField.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField._check_params": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.fit": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "KBinsDiscretizer",
    "divmod",
    "numpy.place",
    "numpy.reshape",
    "pyts.image.mtf._aggregated_markov_transition_field",
    "pyts.image.mtf._markov_transition_field",
    "pyts.image.mtf._markov_transition_matrix",
    "segmentation",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.mtf._aggregated_markov_transition_field": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_field": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_matrix": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.mtf.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.mtf.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.image.mtf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.mtf.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.image.recurrence": {
  "data": {},
  "type": "module"
 },
 "pyts.image.recurrence.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.recurrence.RecurrencePlot": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.recurrence.RecurrencePlot.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot._check_params": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.fit": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.transform": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.percentile",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "pyts.image.recurrence._trajectories",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.recurrence._trajectories": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "pyts.image.recurrence.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.recurrence.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.recurrence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_gaf": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "pyts.image.tests.test_gaf.GramianAngularField": {
  "data": {
   "shadows": "pyts.image.GramianAngularField"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.image.tests.test_gaf._gadf": {
  "data": {
   "shadows": "pyts.image.gaf._gadf"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf._gasf": {
  "data": {
   "shadows": "pyts.image.gaf._gasf"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.pi_6": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.image.tests.test_gaf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.test_actual_results": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "pyts.image.GramianAngularField",
    "pyts.image.tests.test_gaf.X",
    "pyts.image.tests.test_gaf.pi_6",
    "pyts.image.tests.test_gaf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_actual_results_gadf": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.gaf._gadf",
    "pyts.image.tests.test_gaf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_actual_results_gasf": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.gaf._gasf",
    "pyts.image.tests.test_gaf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_parameter_check": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.image.GramianAngularField",
    "pyts.image.tests.test_gaf.X",
    "pyts.image.tests.test_gaf.pytest",
    "pyts.image.tests.test_gaf.re"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_mtf.MarkovTransitionField": {
  "data": {
   "shadows": "pyts.image.MarkovTransitionField"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.image.tests.test_mtf._aggregated_markov_transition_field": {
  "data": {
   "shadows": "pyts.image.mtf._aggregated_markov_transition_field"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf._markov_transition_field": {
  "data": {
   "shadows": "pyts.image.mtf._markov_transition_field"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf._markov_transition_matrix": {
  "data": {
   "shadows": "pyts.image.mtf._markov_transition_matrix"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.test_actual_results": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "pyts.image.MarkovTransitionField",
    "pyts.image.tests.test_mtf.X",
    "pyts.image.tests.test_mtf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_aggregated_markov_transition_field": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.mtf._aggregated_markov_transition_field",
    "pyts.image.tests.test_mtf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_field": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.mtf._markov_transition_field",
    "pyts.image.tests.test_mtf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_matrix": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.mtf._markov_transition_matrix",
    "pyts.image.tests.test_mtf.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_parameter_check": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.image.MarkovTransitionField",
    "pyts.image.tests.test_mtf.X",
    "pyts.image.tests.test_mtf.pytest",
    "pyts.image.tests.test_mtf.re"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_recurrence": {
  "data": {
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "module"
 },
 "pyts.image.tests.test_recurrence.RecurrencePlot": {
  "data": {
   "shadows": "pyts.image.RecurrencePlot"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.X": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.image.tests.test_recurrence._trajectories": {
  "data": {
   "shadows": "pyts.image.recurrence._trajectories"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.test_actual_results_recurrence_plot": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.image.RecurrencePlot",
    "pyts.image.tests.test_recurrence.X",
    "pyts.image.tests.test_recurrence.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_actual_results_trajectories": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.recurrence._trajectories",
    "pyts.image.tests.test_recurrence.X",
    "pyts.image.tests.test_recurrence.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_parameter_check": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.image.RecurrencePlot",
    "pyts.image.tests.test_recurrence.X",
    "pyts.image.tests.test_recurrence.pytest",
    "pyts.image.tests.test_recurrence.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyts.metrics.boss": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.boss.boss": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "math.sqrt",
    "numpy.isclose",
    "numpy.sum",
    "numpy.zeros_like",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.boss.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.metrics.boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.boss.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.dtw": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.dtw._absolute": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abs",
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_no_region": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "min",
    "numba.njit",
    "numpy.cumsum",
    "numpy.empty",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_region": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "min",
    "numba.njit",
    "numpy.cumsum",
    "numpy.inf",
    "numpy.ones",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._check_input_dtw": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_no_region": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dist",
    "numba.njit",
    "numba.prange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_region": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dist",
    "numba.njit",
    "numba.prange",
    "numpy.full",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._multiscale_region": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.clip",
    "numpy.empty",
    "numpy.max",
    "numpy.min",
    "numpy.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._return_path": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.argmin",
    "numpy.array",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._return_results": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "pyts.metrics.dtw._return_path"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._square": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.accumulated_cost_matrix": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw._accumulated_cost_matrix_no_region",
    "pyts.metrics.dtw._accumulated_cost_matrix_region",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.cost_matrix": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "dist",
    "float",
    "int",
    "isinstance",
    "pyts.metrics.dtw._absolute",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._cost_matrix_no_region",
    "pyts.metrics.dtw._cost_matrix_region",
    "pyts.metrics.dtw._square",
    "sklearn.utils.check_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "dist",
    "pyts.metrics.dtw.dtw_classic",
    "pyts.metrics.dtw.dtw_fast",
    "pyts.metrics.dtw.dtw_itakura",
    "pyts.metrics.dtw.dtw_multiscale",
    "pyts.metrics.dtw.dtw_sakoechiba"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_classic": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dist",
    "math.sqrt",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_fast": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dist",
    "int",
    "isinstance",
    "math.ceil",
    "math.log2",
    "math.sqrt",
    "numpy.append",
    "numpy.integer",
    "numpy.repeat",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._multiscale_region",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_itakura": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "dist",
    "math.sqrt",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.dtw.itakura_parallelogram"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_multiscale": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dist",
    "int",
    "isinstance",
    "math.sqrt",
    "numpy.append",
    "numpy.integer",
    "numpy.repeat",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._multiscale_region",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_region": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "dist",
    "math.sqrt",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_sakoechiba": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "dist",
    "math.sqrt",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.dtw.sakoe_chiba_band"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.itakura_parallelogram": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.empty",
    "numpy.floating",
    "numpy.floor",
    "numpy.integer",
    "numpy.max",
    "numpy.min",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.log2": {
  "data": {
   "shadows": "math.log2"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.sakoe_chiba_band": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.arange",
    "numpy.array",
    "numpy.clip",
    "numpy.floating",
    "numpy.integer",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.show_options": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "pyts.metrics.dtw.dtw_classic",
    "pyts.metrics.dtw.dtw_fast",
    "pyts.metrics.dtw.dtw_itakura",
    "pyts.metrics.dtw.dtw_multiscale",
    "pyts.metrics.dtw.dtw_sakoechiba",
    "pyts.metrics.dtw.textwrap"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyts.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.tests.test_boss": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.metrics.tests.test_boss.boss": {
  "data": {
   "shadows": "pyts.metrics.boss"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.test_actual_results": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "pyts.metrics.boss",
    "pyts.metrics.tests.test_boss.pytest",
    "pyts.metrics.tests.test_boss.x",
    "pyts.metrics.tests.test_boss.y",
    "pyts.metrics.tests.test_boss.z"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_boss.test_parameter_check": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.boss",
    "pyts.metrics.tests.test_boss.pytest",
    "pyts.metrics.tests.test_boss.re",
    "pyts.metrics.tests.test_boss.x",
    "pyts.metrics.tests.test_boss.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_boss.x": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.metrics.tests.test_boss.y": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.metrics.tests.test_boss.z": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.metrics.tests.test_dtw": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "pyts.metrics.tests.test_dtw._absolute": {
  "data": {
   "shadows": "pyts.metrics.dtw._absolute"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw._check_input_dtw": {
  "data": {
   "shadows": "pyts.metrics.dtw._check_input_dtw"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw._multiscale_region": {
  "data": {
   "shadows": "pyts.metrics.dtw._multiscale_region"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw._return_path": {
  "data": {
   "shadows": "pyts.metrics.dtw._return_path"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw._return_results": {
  "data": {
   "shadows": "pyts.metrics.dtw._return_results"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw._square": {
  "data": {
   "shadows": "pyts.metrics.dtw._square"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.accumulated_cost_matrix": {
  "data": {
   "shadows": "pyts.metrics.dtw.accumulated_cost_matrix"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.cost_matrix": {
  "data": {
   "shadows": "pyts.metrics.dtw.cost_matrix"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw": {
  "data": {
   "shadows": "pyts.metrics.dtw"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_classic": {
  "data": {
   "shadows": "pyts.metrics.dtw_classic"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_fast": {
  "data": {
   "shadows": "pyts.metrics.dtw_fast"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_itakura": {
  "data": {
   "shadows": "pyts.metrics.dtw_itakura"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_multiscale": {
  "data": {
   "shadows": "pyts.metrics.dtw_multiscale"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_region": {
  "data": {
   "shadows": "pyts.metrics.dtw_region"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.dtw_sakoechiba": {
  "data": {
   "shadows": "pyts.metrics.dtw_sakoechiba"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.itakura_parallelogram": {
  "data": {
   "shadows": "pyts.metrics.itakura_parallelogram"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.params_return": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyts.metrics.tests.test_dtw.power_four": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numba.njit",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.sakoe_chiba_band": {
  "data": {
   "shadows": "pyts.metrics.sakoe_chiba_band"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.show_options": {
  "data": {
   "shadows": "pyts.metrics.show_options"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.test_absolute": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyts.metrics.dtw._absolute",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_accumulated_cost_matrix": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_cost_matrix": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.tests.test_dtw.power_four",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw",
    "pyts.metrics.dtw_classic",
    "pyts.metrics.dtw_fast",
    "pyts.metrics.dtw_itakura",
    "pyts.metrics.dtw_multiscale",
    "pyts.metrics.dtw_sakoechiba",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_classic": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw_classic",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_itakura": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw_itakura",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_multiscale": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw_multiscale",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_region": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw_region",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_dtw_sakoechiba": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.inf",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw_sakoechiba",
    "pyts.metrics.tests.test_dtw.params_return",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_itakura_parallelogram": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.metrics.itakura_parallelogram",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_multiscale_region": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.dtw._multiscale_region",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_return_path": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_return_results": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.metrics.dtw._return_results",
    "pyts.metrics.tests.test_dtw.pytest",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_sakoe_chiba_band": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.metrics.sakoe_chiba_band",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_actual_results_show_options": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyts.metrics.show_options",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_check_input_dtw": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_accumulated_cost_matrix": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_cost_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw_multiscale": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.metrics.dtw_multiscale",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_dtw_region": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw_region",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_itakura_parallelogram": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.metrics.itakura_parallelogram",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_sakoe_chiba_band": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.metrics.sakoe_chiba_band",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_parameter_check_show_options": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.show_options",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_square": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyts.metrics.dtw._square",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.x",
    "pyts.metrics.tests.test_dtw.y"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.x": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyts.metrics.tests.test_dtw.y": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyts.multivariate": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.multivariate.classification": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.classification.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pyts.multivariate.classification.multivariate": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.classification.multivariate.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier._check_params": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "range",
    "sklearn.base.BaseEstimator",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.fit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "check_3d_array",
    "enumerate",
    "numpy.asarray",
    "sklearn.preprocessing.LabelEncoder"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.MultivariateClassifier.predict": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "check_3d_array",
    "enumerate",
    "numpy.empty",
    "pyts.multivariate.classification.multivariate._hard_vote",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate._hard_vote": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.argmax",
    "numpy.bincount",
    "numpy.empty",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.multivariate.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.multivariate.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.classification.tests.test_multivariate": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.multivariate.classification.tests.test_multivariate.rng"
   ]
  },
  "type": "module"
 },
 "pyts.multivariate.classification.tests.test_multivariate.BOSS": {
  "data": {
   "shadows": "pyts.transformation.BOSS"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.MultivariateClassifier": {
  "data": {
   "shadows": "pyts.multivariate.classification.MultivariateClassifier"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.SAXVSM": {
  "data": {
   "shadows": "pyts.classification.SAXVSM"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.X": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyts.multivariate.classification.tests.test_multivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.multivariate.classification.tests.test_multivariate.rng": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_actual_results_with_weights": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.testing.assert_allclose",
    "pyts.classification.SAXVSM",
    "pyts.multivariate.classification.MultivariateClassifier",
    "pyts.multivariate.classification.tests.test_multivariate.X",
    "pyts.multivariate.classification.tests.test_multivariate.y",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_actual_results_without_weights": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.testing.assert_allclose",
    "pyts.classification.SAXVSM",
    "pyts.multivariate.classification.MultivariateClassifier",
    "pyts.multivariate.classification.tests.test_multivariate.X",
    "pyts.multivariate.classification.tests.test_multivariate.y",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_input_check": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "pyts.multivariate.classification.MultivariateClassifier",
    "pyts.multivariate.classification.tests.test_multivariate.X",
    "pyts.multivariate.classification.tests.test_multivariate.pytest",
    "pyts.multivariate.classification.tests.test_multivariate.re",
    "pyts.multivariate.classification.tests.test_multivariate.y",
    "pyts.transformation.BOSS"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.test_parameter_check": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.classification.SAXVSM",
    "pyts.multivariate.classification.MultivariateClassifier",
    "pyts.multivariate.classification.tests.test_multivariate.X",
    "pyts.multivariate.classification.tests.test_multivariate.pytest",
    "pyts.multivariate.classification.tests.test_multivariate.re",
    "pyts.multivariate.classification.tests.test_multivariate.y",
    "pyts.transformation.BOSS"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.classification.tests.test_multivariate.y": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.multivariate.image": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.image.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pyts.multivariate.image.joint_rp": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.image.joint_rp.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot._check_params": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot._joint_recurrence_plot": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RecurrencePlot",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.fit": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.JointRecurrencePlot.transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "check_3d_array",
    "numpy.product",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.joint_rp.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.multivariate.image.joint_rp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.image.tests.test_joint_rp": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.multivariate.image.tests.test_joint_rp.rng"
   ]
  },
  "type": "module"
 },
 "pyts.multivariate.image.tests.test_joint_rp.JointRecurrencePlot": {
  "data": {
   "shadows": "pyts.multivariate.image.JointRecurrencePlot"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests.test_joint_rp.RecurrencePlot": {
  "data": {
   "shadows": "pyts.image.RecurrencePlot"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests.test_joint_rp.X": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.multivariate.image.tests.test_joint_rp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests.test_joint_rp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests.test_joint_rp.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.multivariate.image.tests.test_joint_rp.rng": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_actual_results_lists": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "enumerate",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.image.JointRecurrencePlot",
    "pyts.multivariate.image.tests.test_joint_rp.X",
    "pyts.multivariate.image.tests.test_joint_rp.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_actual_results_single_value": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.image.JointRecurrencePlot",
    "pyts.multivariate.image.tests.test_joint_rp.X",
    "pyts.multivariate.image.tests.test_joint_rp.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_parameter_check": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "pyts.multivariate.image.JointRecurrencePlot",
    "pyts.multivariate.image.tests.test_joint_rp.X",
    "pyts.multivariate.image.tests.test_joint_rp.pytest",
    "pyts.multivariate.image.tests.test_joint_rp.re"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.image.tests.test_joint_rp.test_shapes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyts.multivariate.image.JointRecurrencePlot",
    "pyts.multivariate.image.tests.test_joint_rp.X",
    "pyts.multivariate.image.tests.test_joint_rp.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.transformation": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.transformation.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.multivariate": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.transformation.multivariate.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer._check_params": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "range",
    "sklearn.base.BaseEstimator",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer._convert_to_array": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.csr_matrix",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.fit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "check_3d_array",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.MultivariateTransformer.transform": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "check_3d_array",
    "enumerate",
    "isinstance",
    "numpy.all",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.transpose",
    "numpy.unique",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.multivariate.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.multivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_multivariate": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.multivariate.transformation.tests.test_multivariate.rng"
   ]
  },
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.BOSS": {
  "data": {
   "shadows": "pyts.transformation.BOSS"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.MultivariateTransformer": {
  "data": {
   "shadows": "pyts.multivariate.transformation.MultivariateTransformer"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.RecurrencePlot": {
  "data": {
   "shadows": "pyts.image.RecurrencePlot"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.SAXVSM": {
  "data": {
   "shadows": "pyts.classification.SAXVSM"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_actual_results_with_flatten": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.transformation.MultivariateTransformer",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_actual_results_without_flatten": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.transpose",
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.transformation.MultivariateTransformer",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_array_conversion": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "pyts.multivariate.transformation.MultivariateTransformer._convert_to_array",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "pyts.multivariate.transformation.tests.test_multivariate.pytest",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_array_conversion_error": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "pyts.multivariate.transformation.MultivariateTransformer._convert_to_array",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "pyts.multivariate.transformation.tests.test_multivariate.pytest",
    "pyts.multivariate.transformation.tests.test_multivariate.re"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_ndim": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.transformation.MultivariateTransformer",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "pyts.multivariate.transformation.tests.test_multivariate.pytest",
    "pyts.transformation.BOSS"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_parameter_check": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.classification.SAXVSM",
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.transformation.MultivariateTransformer",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "pyts.multivariate.transformation.tests.test_multivariate.pytest",
    "pyts.multivariate.transformation.tests.test_multivariate.re",
    "pyts.transformation.BOSS"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_multivariate.test_shapes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyts.image.RecurrencePlot",
    "pyts.multivariate.transformation.MultivariateTransformer",
    "pyts.multivariate.transformation.tests.test_multivariate.X",
    "pyts.multivariate.transformation.tests.test_multivariate.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.multivariate.transformation.tests.test_weasel_muse.rng"
   ]
  },
  "type": "module"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.WEASELMUSE": {
  "data": {
   "shadows": "pyts.multivariate.transformation.WEASELMUSE"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_fit_transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.multivariate.transformation.WEASELMUSE",
    "pyts.multivariate.transformation.tests.test_weasel_muse.X",
    "pyts.multivariate.transformation.tests.test_weasel_muse.pytest",
    "pyts.multivariate.transformation.tests.test_weasel_muse.y"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_n_estimators": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "pyts.multivariate.transformation.WEASELMUSE",
    "pyts.multivariate.transformation.tests.test_weasel_muse.X",
    "pyts.multivariate.transformation.tests.test_weasel_muse.y"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_output_dtype": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pyts.multivariate.transformation.WEASELMUSE",
    "pyts.multivariate.transformation.tests.test_weasel_muse.X",
    "pyts.multivariate.transformation.tests.test_weasel_muse.pytest",
    "pyts.multivariate.transformation.tests.test_weasel_muse.y",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.test_output_ndim": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyts.multivariate.transformation.WEASELMUSE",
    "pyts.multivariate.transformation.tests.test_weasel_muse.X",
    "pyts.multivariate.transformation.tests.test_weasel_muse.pytest",
    "pyts.multivariate.transformation.tests.test_weasel_muse.y"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.tests.test_weasel_muse.y": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyts.multivariate.transformation.weasel_muse": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.transformation.weasel_muse.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE._update_vocabulary": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.fit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "WEASEL",
    "check_3d_array",
    "enumerate",
    "numpy.abs",
    "numpy.diff",
    "range",
    "sklearn.base.clone",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.fit_transform": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "WEASEL",
    "check_3d_array",
    "enumerate",
    "numpy.abs",
    "numpy.diff",
    "numpy.hstack",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.base.clone",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.WEASELMUSE.transform": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "check_3d_array",
    "enumerate",
    "numpy.abs",
    "numpy.diff",
    "numpy.hstack",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.transformation.weasel_muse.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.multivariate.transformation.weasel_muse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.utils.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pyts.multivariate.utils.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.utils.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.multivariate.utils.tests.test_utils.rng"
   ]
  },
  "type": "module"
 },
 "pyts.multivariate.utils.tests.test_utils.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.multivariate.utils.tests.test_utils.check_3d_array": {
  "data": {
   "shadows": "pyts.multivariate.utils.check_3d_array"
  },
  "type": "import"
 },
 "pyts.multivariate.utils.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.multivariate.utils.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.multivariate.utils.tests.test_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.multivariate.utils.tests.test_utils.rng": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyts.multivariate.utils.tests.test_utils.test_3d_input": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "pyts.multivariate.utils.check_3d_array",
    "pyts.multivariate.utils.tests.test_utils.X",
    "pyts.multivariate.utils.tests.test_utils.pytest",
    "pyts.multivariate.utils.tests.test_utils.re"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.utils.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.multivariate.utils.utils.check_3d_array": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.multivariate.utils.utils.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyts.preprocessing.discretizer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.discretizer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.__init__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_constant": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_params": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._compute_bins": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.asarray",
    "numpy.diff",
    "numpy.full",
    "numpy.isclose",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.percentile",
    "numpy.r_",
    "numpy.where",
    "pyts.preprocessing.discretizer._uniform_bins",
    "range",
    "scipy.stats.norm.ppf",
    "tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.fit": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.transform": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyts.preprocessing.discretizer._digitize",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer._digitize": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "pyts.preprocessing.discretizer._digitize_1d",
    "pyts.preprocessing.discretizer._digitize_2d",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_1d": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_2d": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._uniform_bins": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.imputer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.InterpolationImputer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._check_params": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.floating",
    "numpy.integer",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._impute_one_sample": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "f",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.fit": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.transform": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "range",
    "sklearn.impute.MissingIndicator",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.MissingIndicator": {
  "data": {
   "shadows": "sklearn.impute.MissingIndicator"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.scaler.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.__init__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.fit": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.__init__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.fit": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.transform": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.RobustScaler.__init__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.fit": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.transform": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.preprocessing.RobustScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.SklearnMaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnMinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnRobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnStandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.StandardScaler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.StandardScaler.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.fit": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.transform": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer.KBinsDiscretizer": {
  "data": {
   "shadows": "pyts.preprocessing.KBinsDiscretizer"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.X": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyts.preprocessing.tests.test_discretizer._digitize": {
  "data": {
   "shadows": "pyts.preprocessing.discretizer._digitize"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer._uniform_bins": {
  "data": {
   "shadows": "pyts.preprocessing.discretizer._uniform_bins"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.test_actual_results": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.KBinsDiscretizer",
    "pyts.preprocessing.tests.test_discretizer.X",
    "pyts.preprocessing.tests.test_discretizer.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_constant_sample": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "pyts.preprocessing.KBinsDiscretizer",
    "pyts.preprocessing.tests.test_discretizer.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_digitize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyts.preprocessing.discretizer._digitize",
    "pyts.preprocessing.tests.test_discretizer.X",
    "pyts.preprocessing.tests.test_discretizer.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_parameter_check": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.preprocessing.KBinsDiscretizer",
    "pyts.preprocessing.tests.test_discretizer.X",
    "pyts.preprocessing.tests.test_discretizer.pytest",
    "pyts.preprocessing.tests.test_discretizer.re"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_uniform_bins": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pyts.preprocessing.discretizer._uniform_bins",
    "pyts.preprocessing.tests.test_discretizer.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_warning_smaller_n_bins": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.r_",
    "numpy.zeros",
    "pyts.preprocessing.KBinsDiscretizer",
    "pyts.preprocessing.tests.test_discretizer.X",
    "pyts.preprocessing.tests.test_discretizer.pytest",
    "pyts.preprocessing.tests.test_discretizer.re"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer": {
  "data": {
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "pyts.preprocessing.tests.test_imputer.InterpolationImputer": {
  "data": {
   "shadows": "pyts.preprocessing.InterpolationImputer"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.preprocessing.tests.test_imputer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.test_actual_results": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.InterpolationImputer",
    "pyts.preprocessing.tests.test_imputer.X",
    "pyts.preprocessing.tests.test_imputer.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer.test_parameter_check": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "pyts.preprocessing.InterpolationImputer",
    "pyts.preprocessing.tests.test_imputer.X",
    "pyts.preprocessing.tests.test_imputer.pytest",
    "pyts.preprocessing.tests.test_imputer.re"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.preprocessing.tests.test_scaler.MaxAbsScaler": {
  "data": {
   "shadows": "pyts.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.MinMaxScaler": {
  "data": {
   "shadows": "pyts.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.RobustScaler": {
  "data": {
   "shadows": "pyts.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.StandardScaler": {
  "data": {
   "shadows": "pyts.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.preprocessing.tests.test_scaler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_max_abs_scaler": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.MaxAbsScaler",
    "pyts.preprocessing.tests.test_scaler.X"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_min_max_scaler": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.MinMaxScaler",
    "pyts.preprocessing.tests.test_scaler.X",
    "pyts.preprocessing.tests.test_scaler.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_robust_scaler": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.RobustScaler",
    "pyts.preprocessing.tests.test_scaler.X",
    "pyts.preprocessing.tests.test_scaler.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_actual_results_standard_scaler": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.StandardScaler",
    "pyts.preprocessing.tests.test_scaler.X",
    "pyts.preprocessing.tests.test_scaler.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.preprocessing.tests.test_transformer.PowerTransformer": {
  "data": {
   "shadows": "pyts.preprocessing.PowerTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.QuantileTransformer": {
  "data": {
   "shadows": "pyts.preprocessing.QuantileTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.StandardScaler": {
  "data": {
   "shadows": "pyts.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.preprocessing.tests.test_transformer.boxcox": {
  "data": {
   "shadows": "scipy.stats.boxcox"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_power_transformer_box_cox": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.PowerTransformer",
    "pyts.preprocessing.StandardScaler",
    "pyts.preprocessing.tests.test_transformer.X",
    "range",
    "scipy.stats.boxcox"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_power_transformer_yeo_johnson": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.PowerTransformer",
    "pyts.preprocessing.StandardScaler",
    "pyts.preprocessing.tests.test_transformer.X",
    "range",
    "scipy.stats.yeojohnson"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_quantile_transformer_normal": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linspace",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.QuantileTransformer",
    "pyts.preprocessing.tests.test_transformer.X",
    "scipy.stats.norm.pdf",
    "scipy.stats.norm.ppf",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_actual_results_quantile_transformer_uniform": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.QuantileTransformer",
    "pyts.preprocessing.tests.test_transformer.X",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.yeojohnson": {
  "data": {
   "shadows": "scipy.stats.yeojohnson"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.PowerTransformer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.transformer.PowerTransformer.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.fit": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "sklearn.preprocessing.PowerTransformer",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.fit": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.transform": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "sklearn.preprocessing.QuantileTransformer",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.SklearnPowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.PowerTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.SklearnQuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.QuantileTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.transformation.boss": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.boss.BOSS": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.transformation.boss.BOSS.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS._check_params": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit_transform": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.transform": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "scipy.sparse.csr_matrix",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.transformation.boss.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.boss.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.transformation.boss.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.transformation.boss.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.tests.test_boss": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.transformation.tests.test_boss.rng"
   ]
  },
  "type": "module"
 },
 "pyts.transformation.tests.test_boss.BOSS": {
  "data": {
   "shadows": "pyts.transformation.BOSS"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.SymbolicFourierApproximation": {
  "data": {
   "shadows": "pyts.approximation.SymbolicFourierApproximation"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.X": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.transformation.tests.test_boss.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.rng": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyts.transformation.tests.test_boss.test_accurate_results_floats": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.transformation.BOSS",
    "pyts.transformation.tests.test_boss.X",
    "pyts.transformation.tests.test_boss.y",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_accurate_results_without_numerosity_reduction": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.transformation.BOSS",
    "pyts.transformation.tests.test_boss.X",
    "pyts.transformation.tests.test_boss.y",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_parameter_check": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.transformation.BOSS",
    "pyts.transformation.tests.test_boss.X",
    "pyts.transformation.tests.test_boss.pytest",
    "pyts.transformation.tests.test_boss.re",
    "pyts.transformation.tests.test_boss.y"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.test_sparse_dense": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pyts.transformation.BOSS",
    "pyts.transformation.tests.test_boss.X",
    "pyts.transformation.tests.test_boss.pytest",
    "pyts.transformation.tests.test_boss.y",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_boss.y": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyts.transformation.tests.test_weasel": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "pyts.transformation.tests.test_weasel.rng"
   ]
  },
  "type": "module"
 },
 "pyts.transformation.tests.test_weasel.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.SymbolicFourierApproximation": {
  "data": {
   "shadows": "pyts.approximation.SymbolicFourierApproximation"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.WEASEL": {
  "data": {
   "shadows": "pyts.transformation.WEASEL"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyts.transformation.tests.test_weasel.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.rng": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyts.transformation.tests.test_weasel.test_accurate_results": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.int64",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.where",
    "pyts.approximation.SymbolicFourierApproximation",
    "pyts.transformation.WEASEL",
    "pyts.transformation.tests.test_weasel.X",
    "pyts.transformation.tests.test_weasel.y",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel.test_parameter_check": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.ones",
    "pyts.transformation.WEASEL",
    "pyts.transformation.tests.test_weasel.X",
    "pyts.transformation.tests.test_weasel.pytest",
    "pyts.transformation.tests.test_weasel.re",
    "pyts.transformation.tests.test_weasel.y"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel.test_sparse_dense": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pyts.transformation.WEASEL",
    "pyts.transformation.tests.test_weasel.X",
    "pyts.transformation.tests.test_weasel.pytest",
    "pyts.transformation.tests.test_weasel.y",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel.y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyts.transformation.weasel": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.weasel.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.WEASEL": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.transformation.weasel.WEASEL.__init__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL._check_params": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "issubclass",
    "list",
    "numpy.ceil",
    "numpy.floating",
    "numpy.integer",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "sklearn.utils.validation.check_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.repeat",
    "numpy.where",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "str",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit_transform": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.int64",
    "numpy.repeat",
    "numpy.where",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "str",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.transform": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int64",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.utils.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.tests.test_segmentation": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.tests.test_segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_segmentation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_segmentation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_segmentation.segmentation": {
  "data": {
   "shadows": "pyts.utils.segmentation"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_segmentation.test_accurate_results": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "pyts.utils.segmentation",
    "pyts.utils.tests.test_segmentation.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.utils.tests.test_segmentation.test_parameter_check": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.utils.segmentation",
    "pyts.utils.tests.test_segmentation.pytest",
    "pyts.utils.tests.test_segmentation.re"
   ]
  },
  "type": "function"
 },
 "pyts.utils.tests.test_windowed_view": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "module"
 },
 "pyts.utils.tests.test_windowed_view.X": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.utils.tests.test_windowed_view.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_windowed_view.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_windowed_view.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_windowed_view.test_accurate_results": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyts.utils.tests.test_windowed_view.X",
    "pyts.utils.tests.test_windowed_view.pytest",
    "pyts.utils.windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.utils.tests.test_windowed_view.test_parameter_check": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyts.utils.tests.test_windowed_view.X",
    "pyts.utils.tests.test_windowed_view.pytest",
    "pyts.utils.tests.test_windowed_view.re",
    "pyts.utils.windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.utils.tests.test_windowed_view.windowed_view": {
  "data": {
   "shadows": "pyts.utils.windowed_view"
  },
  "type": "import"
 },
 "pyts.utils.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.utils.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "pyts.utils.utils.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.utils.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils.utils.segmentation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "divmod",
    "int",
    "isinstance",
    "numpy.arange",
    "numpy.integer",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.utils.utils.windowed_view": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer",
    "numpy.lib.stride_tricks.as_strided",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 }
}