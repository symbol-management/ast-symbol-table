{
 "pyts": {
  "data": {},
  "type": "module"
 },
 "pyts.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyts.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.approximation": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.approximation.dft": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.dft.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.dft.DiscreteFourierTransform": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._anova": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.argsort",
    "numpy.isclose",
    "numpy.where",
    "numpy.zeros_like",
    "sklearn.feature_selection.f_classif",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._check_params": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.arange",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit_transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.arange",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.transform": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.c_",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.real",
    "numpy.vstack",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.dft.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.dft.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.dft.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.dft.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "pyts.approximation.dft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.dft.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyts.approximation.mcb": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.mcb.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_consistent_lengths": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_constant": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_params": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "chr",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.integer",
    "numpy.ndarray",
    "range",
    "sklearn.utils.validation.check_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._compute_bins": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.diff",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.percentile",
    "pyts.approximation.mcb._uniform_bins",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._entropy_bins": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.sort",
    "range",
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.fit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.transform": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "pyts.approximation.mcb._digitize",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.mcb._digitize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyts.approximation.mcb._digitize_1d",
    "pyts.approximation.mcb._digitize_2d"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_1d": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_2d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb._uniform_bins": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.mcb.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.mcb.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.approximation.paa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.paa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation._check_params": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "divmod",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.fit": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.transform": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyts.approximation.paa._paa",
    "segmentation",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.paa._paa": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.paa.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.approximation.paa.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.paa.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.approximation.paa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.paa.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.approximation.sax": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.sax.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation._check_params": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "chr",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.integer",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.fit": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.transform": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KBinsDiscretizer",
    "isinstance",
    "sklearn.utils.validation.check_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sax.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.sax.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.approximation.sax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.sfa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.sfa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "DiscreteFourierTransform",
    "MultipleCoefficientBinning",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit_transform": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "DiscreteFourierTransform",
    "MultipleCoefficientBinning",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.transform": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.sfa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.approximation.sfa.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.approximation.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_dft": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_dft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_dft.test_DiscreteFourierTransform": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "DiscreteFourierTransform",
    "TypeError",
    "ValueError",
    "numpy.fft.rfft",
    "numpy.hstack",
    "numpy.imag",
    "numpy.random.RandomState",
    "numpy.real",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "pyts.approximation.tests.test_dft.pytest",
    "pyts.approximation.tests.test_dft.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_mcb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_mcb.test_MultipleCoefficientBinning": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "MultipleCoefficientBinning",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.ones",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyts.approximation.tests.test_mcb.pytest",
    "pyts.approximation.tests.test_mcb.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_digitize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_digitize",
    "numpy.arange",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.repeat",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_uniform_bins": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_uniform_bins",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_paa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_paa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_paa.test_PiecewiseAggregateApproximation": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PiecewiseAggregateApproximation",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "print",
    "pyts.approximation.tests.test_paa.pytest",
    "pyts.approximation.tests.test_paa.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_paa": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_paa",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sax": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_sax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sax.test_SymbolicAggregateApproximation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "SymbolicAggregateApproximation",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyts.approximation.tests.test_sax.pytest",
    "pyts.approximation.tests.test_sax.re"
   ]
  },
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa": {
  "data": {},
  "type": "module"
 },
 "pyts.approximation.tests.test_sfa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.approximation.tests.test_sfa.test_SymbolicFourierApproximation": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.digitize",
    "numpy.empty",
    "numpy.fft.rfft",
    "numpy.imag",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.real",
    "numpy.testing.assert_array_equal",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyts.bag_of_words.bow": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.bow.BagOfWords": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.bag_of_words.bow.BagOfWords.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords._check_params": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.fit": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.transform": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.bag_of_words.bow.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.bag_of_words.bow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow": {
  "data": {},
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.bag_of_words.tests.test_bow.test_BagOfWords": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "BagOfWords",
    "TypeError",
    "ValueError",
    "numpy.testing.assert_array_equal",
    "pyts.bag_of_words.tests.test_bow.pytest",
    "pyts.bag_of_words.tests.test_bow.re"
   ]
  },
  "type": "function"
 },
 "pyts.classification": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pyts.classification.bossvs": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.bossvs.BOSSVS": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.bossvs.BOSSVS.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS._check_params": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.decision_function": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.fit": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.array",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.predict": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyts.classification.bossvs.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.bossvs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.knn": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.knn.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.knn.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.knn.KNeighborsClassifier": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.knn.KNeighborsClassifier.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.fit": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "itakura_parallelogram",
    "sakoe_chiba_band",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict_proba": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.knn.SklearnKNN": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "pyts.classification.knn.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.knn.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.saxvsm.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.SAXVSM": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "pyts.classification.saxvsm.SAXVSM.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM._check_params": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.decision_function": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "BagOfWords",
    "SymbolicAggregateApproximation",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.predict": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyts.classification.saxvsm.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.saxvsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_bossvs.test_BOSSVS": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "BOSSVS",
    "SymbolicFourierApproximation",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.classification.tests.test_bossvs.pytest",
    "pyts.classification.tests.test_bossvs.re",
    "range",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_knn": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_knn.test_KNeighborsClassifier": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "KNeighborsClassifier",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm": {
  "data": {},
  "type": "module"
 },
 "pyts.classification.tests.test_saxvsm.cosine_similarity": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.cosine_similarity"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.classification.tests.test_saxvsm.test_SAXVSM": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "SAXVSM",
    "TypeError",
    "ValueError",
    "math.log",
    "numpy.asarray",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyts.classification.tests.test_saxvsm.pytest",
    "sklearn.metrics.pairwise.cosine_similarity"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.decomposition.ssa": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.ssa.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._check_params": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "float",
    "int",
    "isinstance",
    "list",
    "math.ceil",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.floating",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.setdiff1d",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._grouping": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.linspace",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.fit": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.transform": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.linalg.eigh",
    "numpy.matmul",
    "numpy.squeeze",
    "numpy.transpose",
    "pyts.decomposition.ssa._diagonal_averaging",
    "pyts.decomposition.ssa._outer_dot",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa._diagonal_averaging": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.diag",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa._outer_dot": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.dot",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.ssa.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.decomposition.ssa.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa": {
  "data": {},
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.decomposition.tests.test_ssa.test_SingularSpectrumAnalysis": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "SingularSpectrumAnalysis",
    "TypeError",
    "ValueError",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "pyts.decomposition.tests.test_ssa.pytest",
    "pyts.decomposition.tests.test_ssa.re",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_diagonal_averaging": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_diagonal_averaging",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_outer_dot": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_outer_dot",
    "numpy.arange",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.outer",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.image": {
  "data": {},
  "type": "module"
 },
 "pyts.image.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyts.image.gaf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.gaf.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.gaf.GramianAngularField": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.gaf.GramianAngularField.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField._check_params": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "math.ceil",
    "numpy.floating",
    "numpy.integer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.fit": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.transform": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "MinMaxScaler",
    "PiecewiseAggregateApproximation",
    "ValueError",
    "numpy.clip",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "pyts.image.gaf._gadf",
    "pyts.image.gaf._gasf",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.gaf._gadf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf._gasf": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyts.image.gaf.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.gaf.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.gaf.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.image.gaf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.gaf.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.image.mtf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.mtf.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.mtf.MarkovTransitionField": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.mtf.MarkovTransitionField.__init__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField._check_params": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.fit": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "KBinsDiscretizer",
    "divmod",
    "numpy.place",
    "numpy.reshape",
    "pyts.image.mtf._aggregated_markov_transition_field",
    "pyts.image.mtf._markov_transition_field",
    "pyts.image.mtf._markov_transition_matrix",
    "segmentation",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.mtf._aggregated_markov_transition_field": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_field": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_matrix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyts.image.mtf.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.mtf.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.mtf.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.image.mtf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.mtf.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.image.recurrence": {
  "data": {},
  "type": "module"
 },
 "pyts.image.recurrence.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.image.recurrence.RecurrencePlot": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.image.recurrence.RecurrencePlot.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot._check_params": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.fit": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.transform": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.percentile",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "pyts.image.recurrence._trajectories",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.image.recurrence._trajectories": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pyts.image.recurrence.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "pyts.image.recurrence.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.image.recurrence.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.image.recurrence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_gaf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_gaf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_gaf.test_GramianAngularField": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "GramianAngularField",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "pyts.image.tests.test_gaf.pytest",
    "pyts.image.tests.test_gaf.re"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_gadf": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_gadf",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_gasf": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_gasf",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_mtf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_mtf.test_MarkovTransitionField": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "MarkovTransitionField",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "pyts.image.tests.test_mtf.pytest",
    "pyts.image.tests.test_mtf.re"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_aggregated_markov_transition_field": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_aggregated_markov_transition_field",
    "numpy.asarray",
    "numpy.empty",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_field": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_markov_transition_field",
    "numpy.asarray",
    "numpy.empty",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_matrix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_markov_transition_matrix",
    "numpy.asarray",
    "numpy.empty",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_recurrence": {
  "data": {},
  "type": "module"
 },
 "pyts.image.tests.test_recurrence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.image.tests.test_recurrence.test_ReccurencePlot": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RecurrencePlot",
    "TypeError",
    "ValueError",
    "math.sqrt",
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyts.image.tests.test_recurrence.pytest",
    "pyts.image.tests.test_recurrence.re"
   ]
  },
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_trajectories": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_trajectories",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.metrics": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyts.metrics.boss": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.boss.boss": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "math.sqrt",
    "numpy.isclose",
    "numpy.sum",
    "numpy.zeros_like",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.boss.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.metrics.boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.boss.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.dtw": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.dtw._absolute": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abs",
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_no_region": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "min",
    "numba.njit",
    "numpy.cumsum",
    "numpy.empty",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_region": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "min",
    "numba.njit",
    "numpy.cumsum",
    "numpy.inf",
    "numpy.ones",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._check_input_dtw": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_no_region": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dist",
    "numba.njit",
    "numba.prange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_region": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dist",
    "numba.njit",
    "numba.prange",
    "numpy.full",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._multiscale_region": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.clip",
    "numpy.empty",
    "numpy.max",
    "numpy.min",
    "numpy.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._return_path": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.argmin",
    "numpy.array",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw._square": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.accumulated_cost_matrix": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "pyts.metrics.dtw._accumulated_cost_matrix_no_region",
    "pyts.metrics.dtw._accumulated_cost_matrix_region",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.cost_matrix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "dist",
    "float",
    "int",
    "isinstance",
    "pyts.metrics.dtw._absolute",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._cost_matrix_no_region",
    "pyts.metrics.dtw._cost_matrix_region",
    "pyts.metrics.dtw._square",
    "sklearn.utils.check_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "dist",
    "pyts.metrics.dtw.dtw_classic",
    "pyts.metrics.dtw.dtw_fast",
    "pyts.metrics.dtw.dtw_itakura",
    "pyts.metrics.dtw.dtw_multiscale",
    "pyts.metrics.dtw.dtw_sakoechiba"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_classic": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dist",
    "len",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_fast": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dist",
    "int",
    "isinstance",
    "len",
    "math.ceil",
    "math.log2",
    "numpy.append",
    "numpy.integer",
    "numpy.repeat",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._multiscale_region",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_itakura": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "dist",
    "len",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.dtw.itakura_parallelogram"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_multiscale": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dist",
    "int",
    "isinstance",
    "len",
    "numpy.append",
    "numpy.integer",
    "numpy.repeat",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._multiscale_region",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_region": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "dist",
    "len",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_sakoechiba": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "dist",
    "len",
    "pyts.metrics.dtw._check_input_dtw",
    "pyts.metrics.dtw._return_path",
    "pyts.metrics.dtw.accumulated_cost_matrix",
    "pyts.metrics.dtw.cost_matrix",
    "pyts.metrics.dtw.sakoe_chiba_band"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.itakura_parallelogram": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.empty",
    "numpy.floating",
    "numpy.floor",
    "numpy.integer",
    "numpy.max",
    "numpy.min",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.log2": {
  "data": {
   "shadows": "math.log2"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.metrics.dtw.sakoe_chiba_band": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.arange",
    "numpy.array",
    "numpy.clip",
    "numpy.floating",
    "numpy.integer",
    "range"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.show_options": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "pyts.metrics.dtw.dtw_classic",
    "pyts.metrics.dtw.dtw_fast",
    "pyts.metrics.dtw.dtw_itakura",
    "pyts.metrics.dtw.dtw_multiscale",
    "pyts.metrics.dtw.dtw_sakoechiba",
    "pyts.metrics.dtw.textwrap"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.dtw.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyts.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.tests.test_boss": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.tests.test_boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_boss.test_boss": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "boss",
    "math.sqrt",
    "numpy.arange",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "pyts.metrics.tests.test_boss.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw": {
  "data": {},
  "type": "module"
 },
 "pyts.metrics.tests.test_dtw.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.metrics.tests.test_dtw.test_absolute": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_absolute"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_accumulated_cost_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "accumulated_cost_matrix",
    "numpy.asarray",
    "numpy.inf",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_check_input_dtw": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "_check_input_dtw",
    "numpy.arange",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "cost_matrix",
    "numpy.arange",
    "numpy.asarray",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix._dist": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix.dist": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "dtw",
    "dtw_classic",
    "dtw_fast",
    "dtw_itakura",
    "dtw_multiscale",
    "dtw_sakoechiba",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_classic": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "cost_matrix",
    "dtw_classic",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_fast": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "cost_matrix",
    "dtw_fast",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_itakura": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "cost_matrix",
    "dtw_itakura",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_multiscale": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cost_matrix",
    "dtw_multiscale",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_region": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "cost_matrix",
    "dtw_region",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest",
    "pyts.metrics.tests.test_dtw.re"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_sakoechiba": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "cost_matrix",
    "dtw_sakoechiba",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_itakura_parallelogram": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "itakura_parallelogram",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_multiscale_region": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "_multiscale_region",
    "numpy.asarray",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_return_path": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_return_path",
    "numpy.asarray",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_sakoe_chiba_band": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.testing.assert_array_equal",
    "pyts.metrics.tests.test_dtw.pytest",
    "sakoe_chiba_band"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_show_options": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "show_options",
    "str"
   ]
  },
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_square": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_square"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyts.preprocessing.discretizer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.discretizer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_constant": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_params": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._compute_bins": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.asarray",
    "numpy.diff",
    "numpy.full",
    "numpy.isclose",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.percentile",
    "numpy.r_",
    "numpy.where",
    "pyts.preprocessing.discretizer._uniform_bins",
    "range",
    "scipy.stats.norm.ppf",
    "tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.fit": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.transform": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyts.preprocessing.discretizer._digitize",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer._digitize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "pyts.preprocessing.discretizer._digitize_1d",
    "pyts.preprocessing.discretizer._digitize_2d",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_1d": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_2d": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.digitize",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer._uniform_bins": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numba.njit",
    "numba.prange",
    "numpy.empty",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.discretizer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "pyts.preprocessing.discretizer.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.imputer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.InterpolationImputer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._check_params": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "numpy.floating",
    "numpy.integer",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._impute_one_sample": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "f",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.fit": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.transform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "range",
    "sklearn.impute.MissingIndicator",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.imputer.MissingIndicator": {
  "data": {
   "shadows": "sklearn.impute.MissingIndicator"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "pyts.preprocessing.imputer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.scaler.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.fit": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.transform": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.fit": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.transform": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.RobustScaler.__init__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.fit": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.transform": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "sklearn.preprocessing.RobustScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.SklearnMaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnMinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnRobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.SklearnStandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.StandardScaler": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.scaler.StandardScaler.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.fit": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.scaler.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.scaler.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_discretizer.test_KBinsDiscretizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "KBinsDiscretizer",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "pyts.preprocessing.tests.test_discretizer.pytest",
    "pyts.preprocessing.tests.test_discretizer.re",
    "str",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_digitize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_digitize",
    "numpy.arange",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.repeat",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_uniform_bins": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_uniform_bins",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_imputer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_imputer.test_InterpolationImputer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "InterpolationImputer",
    "ValueError",
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "pyts.preprocessing.tests.test_imputer.pytest",
    "pyts.preprocessing.tests.test_imputer.re"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_scaler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_scaler.test_MaxAbsScaler": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "MaxAbsScaler",
    "numpy.abs",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_MinMaxScaler": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "MinMaxScaler",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_RobustScaler": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RobustScaler",
    "numpy.arange",
    "numpy.diff",
    "numpy.percentile",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_StandardScaler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "StandardScaler",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.tests.test_transformer.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyts.preprocessing.tests.test_transformer.test_PowerTransformer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "PowerTransformer",
    "itertools.product",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_QuantileTransformer": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "QuantileTransformer",
    "numpy.arange",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "scipy.stats.norm.pdf",
    "scipy.stats.norm.ppf",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer": {
  "data": {},
  "type": "module"
 },
 "pyts.preprocessing.transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.PowerTransformer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.transformer.PowerTransformer.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.fit": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.transform": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sklearn.preprocessing.PowerTransformer",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.fit": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.transform": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "sklearn.preprocessing.QuantileTransformer",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "pyts.preprocessing.transformer.SklearnPowerTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.PowerTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.SklearnQuantileTransformer": {
  "data": {
   "shadows": "sklearn.preprocessing.QuantileTransformer"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.preprocessing.transformer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.transformation.boss": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.boss.BOSS": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.transformation.boss.BOSS.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS._check_params": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "math.ceil",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit_transform": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.repeat",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_array",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.transform": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "range",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.boss.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.transformation.boss.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.boss.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.transformation.boss.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.transformation.boss.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.transformation.boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.tests.test_boss": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.tests.test_boss.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_boss.test_BOSS": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "BOSS",
    "SymbolicFourierApproximation",
    "TypeError",
    "ValueError",
    "numpy.asarray",
    "numpy.c_",
    "numpy.full",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "pyts.transformation.tests.test_boss.pytest",
    "pyts.transformation.tests.test_boss.re",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.tests.test_weasel.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.transformation.tests.test_weasel.test_WEASEL": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "TypeError",
    "ValueError",
    "WEASEL",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.where",
    "pyts.transformation.tests.test_weasel.pytest",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.hstack",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel": {
  "data": {},
  "type": "module"
 },
 "pyts.transformation.weasel.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.WEASEL": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyts.transformation.weasel.WEASEL.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL._check_params": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "issubclass",
    "list",
    "numpy.ceil",
    "numpy.floating",
    "numpy.integer",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "sklearn.utils.validation.check_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.repeat",
    "numpy.where",
    "range",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "str",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit_transform": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "SymbolicFourierApproximation",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.int64",
    "numpy.repeat",
    "numpy.where",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.hstack",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_selection.chi2",
    "sklearn.utils.multiclass.check_classification_targets",
    "sklearn.utils.validation.check_X_y",
    "str",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.transform": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int64",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.hstack",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "windowed_view",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyts.transformation.weasel.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_classification_targets": {
  "data": {
   "shadows": "sklearn.utils.multiclass.check_classification_targets"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.chi2": {
  "data": {
   "shadows": "sklearn.feature_selection.chi2"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pyts.transformation.weasel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyts.utils.tests": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyts.utils.tests.test_utils.test_segmentation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "pyts.utils.tests.test_utils.pytest",
    "pyts.utils.tests.test_utils.re",
    "segmentation"
   ]
  },
  "type": "function"
 },
 "pyts.utils.tests.test_utils.test_windowed_view": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pyts.utils.tests.test_utils.pytest",
    "windowed_view"
   ]
  },
  "type": "function"
 },
 "pyts.utils.utils": {
  "data": {},
  "type": "module"
 },
 "pyts.utils.utils.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "pyts.utils.utils.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyts.utils.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyts.utils.utils.segmentation": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "divmod",
    "int",
    "isinstance",
    "numpy.arange",
    "numpy.integer",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "pyts.utils.utils.windowed_view": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer",
    "numpy.lib.stride_tricks.as_strided",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 }
}