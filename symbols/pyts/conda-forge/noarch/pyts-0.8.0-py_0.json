{
 "pyts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.dft": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.dft.DiscreteFourierTransform": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._anova": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.isclose",
   "numpy.where",
   "numpy.zeros_like",
   "sklearn.feature_selection.f_classif",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform._check_params": {
  "lineno": 201,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.fit_transform": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.dft.DiscreteFourierTransform.transform": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.real",
   "numpy.vstack",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning": {
  "lineno": 47,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_consistent_lengths": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_constant": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._check_params": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.integer",
   "numpy.ndarray",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._compute_bins": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.diff",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.percentile",
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning._entropy_bins": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.sort",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.fit": {
  "lineno": 91,
  "symbols_in_volume": [
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb.MultipleCoefficientBinning.transform": {
  "lineno": 118,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_1d": {
  "lineno": 22,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._digitize_2d": {
  "lineno": 30,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.approximation.mcb._uniform_bins": {
  "lineno": 12,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.approximation.paa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation._check_params": {
  "lineno": 101,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.fit": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.paa.PiecewiseAggregateApproximation.transform": {
  "lineno": 75,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.paa._paa": {
  "lineno": 11,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pyts.approximation.sax": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation": {
  "lineno": 9,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation._check_params": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.integer",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.fit": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sax.SymbolicAggregateApproximation.transform": {
  "lineno": 58,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit": {
  "lineno": 90,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.fit_transform": {
  "lineno": 133,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "pyts.approximation.sfa.SymbolicFourierApproximation.transform": {
  "lineno": 116,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.approximation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_dft": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_dft.test_DiscreteFourierTransform": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.fft.rfft",
   "numpy.hstack",
   "numpy.imag",
   "numpy.random.RandomState",
   "numpy.real",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_mcb.test_MultipleCoefficientBinning": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.r_",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_digitize": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.repeat",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_mcb.test_uniform_bins": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_paa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_paa.test_PiecewiseAggregateApproximation": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_paa.test_paa": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sax": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_sax.test_SymbolicAggregateApproximation": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.approximation.tests.test_sfa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.approximation.tests.test_sfa.test_SymbolicFourierApproximation": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.digitize",
   "numpy.empty",
   "numpy.fft.rfft",
   "numpy.imag",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.random.RandomState",
   "numpy.real",
   "numpy.testing.assert_array_equal",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "pyts.bag_of_words": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.bow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.bow.BagOfWords": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.bag_of_words.bow.BagOfWords.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords._check_params": {
  "lineno": 90,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.fit": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.bag_of_words.bow.BagOfWords.transform": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.bag_of_words.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.bag_of_words.tests.test_bow.test_BagOfWords": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.bossvs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.bossvs.BOSSVS": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.bossvs.BOSSVS.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS._check_params": {
  "lineno": 251,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.decision_function": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.fit": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.bossvs.BOSSVS.predict": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.knn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.knn.KNeighborsClassifier": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.knn.KNeighborsClassifier.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.fit": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.knn.KNeighborsClassifier.predict_proba": {
  "lineno": 183,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.saxvsm.SAXVSM": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "pyts.classification.saxvsm.SAXVSM.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM._check_params": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.decision_function": {
  "lineno": 150,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.classification.saxvsm.SAXVSM.predict": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.classification.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_bossvs.test_BOSSVS": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_knn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_knn.test_KNeighborsClassifier": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.classification.tests.test_saxvsm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.classification.tests.test_saxvsm.test_SAXVSM": {
  "lineno": 10,
  "symbols_in_volume": [
   "math.log",
   "numpy.asarray",
   "numpy.c_",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.metrics.pairwise.cosine_similarity"
  ],
  "type": "function"
 },
 "pyts.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.ssa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis": {
  "lineno": 36,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._check_params": {
  "lineno": 151,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.floating",
   "numpy.integer",
   "numpy.ndarray",
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis._grouping": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.fit": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.decomposition.ssa.SingularSpectrumAnalysis.transform": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.linalg.eigh",
   "numpy.matmul",
   "numpy.squeeze",
   "numpy.transpose",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa._diagonal_averaging": {
  "lineno": 20,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.diag",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.decomposition.ssa._outer_dot": {
  "lineno": 11,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.dot",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.decomposition.tests.test_ssa.test_SingularSpectrumAnalysis": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_diagonal_averaging": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.decomposition.tests.test_ssa.test_outer_dot": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.dot",
   "numpy.empty",
   "numpy.outer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.image": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.gaf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.gaf.GramianAngularField": {
  "lineno": 28,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.gaf.GramianAngularField.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField._check_params": {
  "lineno": 121,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.fit": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.gaf.GramianAngularField.transform": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.max",
   "numpy.min",
   "numpy.sqrt",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.gaf._gadf": {
  "lineno": 20,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.image.gaf._gasf": {
  "lineno": 12,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.outer"
  ],
  "type": "function"
 },
 "pyts.image.mtf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.mtf.MarkovTransitionField": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.mtf.MarkovTransitionField.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField._check_params": {
  "lineno": 152,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.fit": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.mtf.MarkovTransitionField.transform": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.place",
   "numpy.reshape",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.mtf._aggregated_markov_transition_field": {
  "lineno": 33,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_field": {
  "lineno": 21,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.image.mtf._markov_transition_matrix": {
  "lineno": 12,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyts.image.recurrence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.recurrence.RecurrencePlot": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.image.recurrence.RecurrencePlot.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot._check_params": {
  "lineno": 144,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.fit": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.image.recurrence.RecurrencePlot.transform": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.percentile",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.image.recurrence._trajectories": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "pyts.image.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_gaf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_gaf.test_GramianAngularField": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.sin",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_gadf": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_gaf.test_gasf": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_mtf.test_MarkovTransitionField": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.testing.assert_array_equal",
   "numpy.tile",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_aggregated_markov_transition_field": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_field": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_mtf.test_markov_transition_matrix": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_recurrence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.image.tests.test_recurrence.test_ReccurencePlot": {
  "lineno": 24,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.image.tests.test_recurrence.test_trajectories": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.boss.boss": {
  "lineno": 8,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.isclose",
   "numpy.sum",
   "numpy.zeros_like",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.dtw._absolute": {
  "lineno": 14,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_no_region": {
  "lineno": 120,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.cumsum",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._accumulated_cost_matrix_region": {
  "lineno": 100,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.cumsum",
   "numpy.inf",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._check_input_dtw": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_no_region": {
  "lineno": 29,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._cost_matrix_region": {
  "lineno": 19,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.full",
   "numpy.inf"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._multiscale_region": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.clip",
   "numpy.empty",
   "numpy.max",
   "numpy.min",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._return_path": {
  "lineno": 176,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.argmin",
   "numpy.array",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw._square": {
  "lineno": 9,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.accumulated_cost_matrix": {
  "lineno": 136,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.cost_matrix": {
  "lineno": 39,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_classic": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_fast": {
  "lineno": 740,
  "symbols_in_volume": [
   "math.ceil",
   "math.log2",
   "numpy.append",
   "numpy.integer",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_itakura": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_multiscale": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.integer",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_region": {
  "lineno": 277,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.dtw_sakoechiba": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.dtw.itakura_parallelogram": {
  "lineno": 483,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.empty",
   "numpy.floating",
   "numpy.floor",
   "numpy.integer",
   "numpy.max",
   "numpy.min",
   "numpy.round"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.sakoe_chiba_band": {
  "lineno": 360,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.arange",
   "numpy.array",
   "numpy.clip",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.metrics.dtw.show_options": {
  "lineno": 931,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pyts.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.tests.test_boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.tests.test_boss.test_boss": {
  "lineno": 9,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.arange",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.metrics.tests.test_dtw.test_absolute": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_accumulated_cost_matrix": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.inf",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_check_input_dtw": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix._dist": {
  "lineno": 50,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_cost_matrix.dist": {
  "lineno": 78,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_classic": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_fast": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_itakura": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_multiscale": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_region": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_dtw_sakoechiba": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_itakura_parallelogram": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_multiscale_region": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_return_path": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.inf",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_sakoe_chiba_band": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_show_options": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.metrics.tests.test_dtw.test_square": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.discretizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_constant": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._check_params": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer._compute_bins": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.diff",
   "numpy.full",
   "numpy.isclose",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "numpy.percentile",
   "numpy.r_",
   "numpy.where",
   "scipy.stats.norm.ppf",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.fit": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer.KBinsDiscretizer.transform": {
  "lineno": 89,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_1d": {
  "lineno": 20,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._digitize_2d": {
  "lineno": 28,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.digitize",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyts.preprocessing.discretizer._uniform_bins": {
  "lineno": 11,
  "symbols_in_volume": [
   "numba.njit",
   "numba.prange",
   "numpy.empty",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.imputer.InterpolationImputer": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._check_params": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer._impute_one_sample": {
  "lineno": 114,
  "symbols_in_volume": [
   "scipy.interpolate.interp1d"
  ],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.fit": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.imputer.InterpolationImputer.transform": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "sklearn.impute.MissingIndicator",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler": {
  "lineno": 118,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.fit": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MaxAbsScaler.transform": {
  "lineno": 142,
  "symbols_in_volume": [
   "sklearn.preprocessing.MaxAbsScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.fit": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.MinMaxScaler.transform": {
  "lineno": 98,
  "symbols_in_volume": [
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler": {
  "lineno": 162,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.RobustScaler.__init__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.fit": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.RobustScaler.transform": {
  "lineno": 217,
  "symbols_in_volume": [
   "sklearn.preprocessing.RobustScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.scaler.StandardScaler.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.fit": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.scaler.StandardScaler.transform": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_discretizer.test_KBinsDiscretizer": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_digitize": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.repeat",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_discretizer.test_uniform_bins": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_imputer.test_InterpolationImputer": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_scaler.test_MaxAbsScaler": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_MinMaxScaler": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_RobustScaler": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.percentile",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_scaler.test_StandardScaler": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.tests.test_transformer.test_PowerTransformer": {
  "lineno": 9,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange"
  ],
  "type": "function"
 },
 "pyts.preprocessing.tests.test_transformer.test_QuantileTransformer": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.linspace",
   "numpy.round",
   "numpy.testing.assert_allclose",
   "scipy.stats.norm.pdf",
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "pyts.preprocessing.transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.preprocessing.transformer.PowerTransformer": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.transformer.PowerTransformer.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.fit": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.PowerTransformer.transform": {
  "lineno": 77,
  "symbols_in_volume": [
   "sklearn.preprocessing.PowerTransformer",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer": {
  "lineno": 99,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.__init__": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.fit": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.preprocessing.transformer.QuantileTransformer.transform": {
  "lineno": 159,
  "symbols_in_volume": [
   "sklearn.preprocessing.QuantileTransformer",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.boss.BOSS": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.transformation.boss.BOSS.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS._check_params": {
  "lineno": 257,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.fit_transform": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.repeat",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.boss.BOSS.transform": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.transformation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.tests.test_boss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.tests.test_boss.test_BOSS": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "re.escape",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "pyts.transformation.tests.test_weasel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.tests.test_weasel.test_WEASEL": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "numpy.where",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.hstack",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.transformation.weasel.WEASEL": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "pyts.transformation.weasel.WEASEL.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL._check_params": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floating",
   "numpy.integer",
   "numpy.max",
   "numpy.min",
   "numpy.ndarray",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.repeat",
   "numpy.where",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.fit_transform": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "numpy.repeat",
   "numpy.where",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.hstack",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_selection.chi2",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "pyts.transformation.weasel.WEASEL.transform": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.hstack",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "pyts.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.tests.test_utils.test_segmentation": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "pytest.raises",
   "re.escape"
  ],
  "type": "function"
 },
 "pyts.utils.tests.test_utils.test_windowed_view": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyts.utils.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyts.utils.utils.segmentation": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.integer",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "pyts.utils.utils.windowed_view": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.lib.stride_tricks.as_strided",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 }
}