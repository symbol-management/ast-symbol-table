{
 "monkeytype": {
  "data": {},
  "type": "module"
 },
 "monkeytype.Config": {
  "data": {
   "shadows": "monkeytype.config.Config"
  },
  "type": "import"
 },
 "monkeytype.ContextManager": {
  "data": {
   "shadows": "typing.ContextManager"
  },
  "type": "import"
 },
 "monkeytype.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.__main__": {
  "data": {
   "symbols_in_volume": [
    "monkeytype.cli.entry_point_main"
   ]
  },
  "type": "module"
 },
 "monkeytype.__main__.entry_point_main": {
  "data": {
   "shadows": "monkeytype.cli.entry_point_main"
  },
  "type": "import"
 },
 "monkeytype.__version__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "monkeytype.cli": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "monkeytype.cli.ApplyTypeAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.ApplyTypeAnnotationsVisitor"
  },
  "type": "import"
 },
 "monkeytype.cli.CallTrace": {
  "data": {
   "shadows": "monkeytype.tracing.CallTrace"
  },
  "type": "import"
 },
 "monkeytype.cli.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "monkeytype.cli.Config": {
  "data": {
   "shadows": "monkeytype.config.Config"
  },
  "type": "import"
 },
 "monkeytype.cli.ExistingAnnotationStrategy": {
  "data": {
   "shadows": "monkeytype.stubs.ExistingAnnotationStrategy"
  },
  "type": "import"
 },
 "monkeytype.cli.HandlerError": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "monkeytype.cli.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "monkeytype.cli.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "monkeytype.cli.MonkeyTypeError": {
  "data": {
   "shadows": "monkeytype.exceptions.MonkeyTypeError"
  },
  "type": "import"
 },
 "monkeytype.cli.NoOpRewriter": {
  "data": {
   "shadows": "monkeytype.typing.NoOpRewriter"
  },
  "type": "import"
 },
 "monkeytype.cli.NoReturn": {
  "data": {
   "shadows": "typing.NoReturn"
  },
  "type": "import"
 },
 "monkeytype.cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.cli.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "monkeytype.cli.Stub": {
  "data": {
   "shadows": "monkeytype.stubs.Stub"
  },
  "type": "import"
 },
 "monkeytype.cli.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "monkeytype.cli.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "monkeytype.cli.apply_stub_handler": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "monkeytype.cli.apply_stub_using_libcst",
    "monkeytype.cli.argparse",
    "monkeytype.cli.complain_about_no_traces",
    "monkeytype.cli.get_stub",
    "monkeytype.cli.importlib",
    "monkeytype.cli.inspect",
    "monkeytype.stubs.ExistingAnnotationStrategy.REPLICATE",
    "pathlib.Path",
    "print",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.apply_stub_using_libcst": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.visitors.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors.ApplyTypeAnnotationsVisitor.add_stub_to_context",
    "libcst.parse_module",
    "monkeytype.cli.HandlerError",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "monkeytype.cli.build_module_stubs_from_traces": {
  "data": {
   "shadows": "monkeytype.stubs.build_module_stubs_from_traces"
  },
  "type": "import"
 },
 "monkeytype.cli.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "monkeytype.cli.complain_about_no_traces": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.os",
    "print",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "monkeytype.cli.display_sample_count": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "monkeytype.cli.collections",
    "monkeytype.tracing.CallTrace",
    "print",
    "typing.IO",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.entry_point_main": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "monkeytype.cli.main",
    "monkeytype.cli.os",
    "monkeytype.cli.sys"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.get_diff": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.difflib",
    "monkeytype.cli.get_stub",
    "monkeytype.stubs.ExistingAnnotationStrategy.IGNORE",
    "monkeytype.stubs.ExistingAnnotationStrategy.REPLICATE",
    "str",
    "typing.IO",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.get_monkeytype_config": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "config",
    "monkeytype.cli.argparse",
    "monkeytype.cli.module_path_with_qualname",
    "monkeytype.config.Config",
    "monkeytype.exceptions.MonkeyTypeError",
    "monkeytype.util.get_name_in_module",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.get_name_in_module": {
  "data": {
   "shadows": "monkeytype.util.get_name_in_module"
  },
  "type": "import"
 },
 "monkeytype.cli.get_stub": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.display_sample_count",
    "monkeytype.exceptions.MonkeyTypeError",
    "monkeytype.stubs.Stub",
    "monkeytype.stubs.build_module_stubs_from_traces",
    "monkeytype.typing.NoOpRewriter",
    "print",
    "typing.IO",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "monkeytype.cli.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "monkeytype.cli.list_modules_handler": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "print",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.main": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "getattr",
    "handler",
    "int",
    "monkeytype.cli.HandlerError",
    "monkeytype.cli.apply_stub_handler",
    "monkeytype.cli.argparse",
    "monkeytype.cli.get_monkeytype_config",
    "monkeytype.cli.list_modules_handler",
    "monkeytype.cli.module_path",
    "monkeytype.cli.print_stub_handler",
    "monkeytype.cli.run_handler",
    "monkeytype.cli.update_args_from_config",
    "monkeytype.stubs.ExistingAnnotationStrategy.IGNORE",
    "monkeytype.stubs.ExistingAnnotationStrategy.OMIT",
    "monkeytype.stubs.ExistingAnnotationStrategy.REPLICATE",
    "print",
    "str",
    "typing.IO",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.module_path": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.os",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.module_path_with_qualname": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.module_path",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "monkeytype.cli.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "monkeytype.cli.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "monkeytype.cli.print_stub_handler": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.complain_about_no_traces",
    "monkeytype.cli.get_diff",
    "monkeytype.cli.get_stub",
    "print",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.run_handler": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "monkeytype.cli.argparse",
    "monkeytype.cli.runpy",
    "monkeytype.cli.sys",
    "monkeytype.trace",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "monkeytype.cli.runpy": {
  "data": {
   "shadows": "runpy"
  },
  "type": "import"
 },
 "monkeytype.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "monkeytype.cli.trace": {
  "data": {
   "shadows": "monkeytype.trace"
  },
  "type": "import"
 },
 "monkeytype.cli.update_args_from_config": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "monkeytype.cli.argparse"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "monkeytype.compat.__are_typed_dict_types_equal",
    "mypy_extensions._TypedDictMeta.__eq__"
   ]
  },
  "type": "module"
 },
 "monkeytype.compat.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "monkeytype.compat.ForwardRef": {
  "data": {
   "shadows": "typing.ForwardRef"
  },
  "type": "import"
 },
 "monkeytype.compat.GenericMeta": {
  "data": {
   "shadows": "typing.GenericMeta"
  },
  "type": "import"
 },
 "monkeytype.compat.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "monkeytype.compat._Any": {
  "data": {
   "shadows": "typing._Any"
  },
  "type": "import"
 },
 "monkeytype.compat._ForwardRef": {
  "data": {
   "shadows": "typing._ForwardRef"
  },
  "type": "import"
 },
 "monkeytype.compat._GenericAlias": {
  "data": {
   "shadows": "typing._GenericAlias"
  },
  "type": "import"
 },
 "monkeytype.compat._TypedDictMeta": {
  "data": {
   "shadows": "mypy_extensions._TypedDictMeta"
  },
  "type": "import"
 },
 "monkeytype.compat._Union": {
  "data": {
   "shadows": "typing._Union"
  },
  "type": "import"
 },
 "monkeytype.compat.__are_typed_dict_types_equal": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "all",
    "bool",
    "getattr",
    "monkeytype.compat.is_typed_dict",
    "monkeytype.compat.types_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_any": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typing.Any",
    "typing._Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_forward_ref": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typing.Any",
    "typing._ForwardRef"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_generic": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typing.Any",
    "typing.GenericMeta",
    "typing._Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_generic_of": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "issubclass",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_typed_dict": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy_extensions._TypedDictMeta",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.is_union": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typing.Any",
    "typing._Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.make_forward_ref": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "str",
    "type",
    "typing._ForwardRef"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.name_of_generic": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.qualname_of_generic": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.repr_forward_ref": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.compat.types_equal": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "all",
    "bool",
    "getattr",
    "len",
    "monkeytype.compat.is_any",
    "monkeytype.compat.is_generic",
    "monkeytype.compat.is_typed_dict",
    "monkeytype.compat.is_union",
    "monkeytype.compat.name_of_generic",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "monkeytype.config": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "monkeytype.config.lib_paths",
    "monkeytype.config.pathlib",
    "monkeytype.config.sys",
    "monkeytype.config.sysconfig",
    "monkeytype.config.venv_real_prefix",
    "tuple"
   ]
  },
  "type": "module"
 },
 "monkeytype.config.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "monkeytype.config.CallTraceLogger": {
  "data": {
   "shadows": "monkeytype.tracing.CallTraceLogger"
  },
  "type": "import"
 },
 "monkeytype.config.CallTraceStore": {
  "data": {
   "shadows": "monkeytype.db.base.CallTraceStore"
  },
  "type": "import"
 },
 "monkeytype.config.CallTraceStoreLogger": {
  "data": {
   "shadows": "monkeytype.db.base.CallTraceStoreLogger"
  },
  "type": "import"
 },
 "monkeytype.config.CodeFilter": {
  "data": {
   "shadows": "monkeytype.tracing.CodeFilter"
  },
  "type": "import"
 },
 "monkeytype.config.CodeType": {
  "data": {
   "shadows": "types.CodeType"
  },
  "type": "import"
 },
 "monkeytype.config.Config": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "monkeytype.config.Config.cli_context": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.code_filter": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "monkeytype.tracing.CodeFilter",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.max_typed_dict_size": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.query_limit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.sample_rate": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.trace_logger": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "monkeytype.db.base.CallTraceStoreLogger",
    "monkeytype.tracing.CallTraceLogger"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.trace_store": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "monkeytype.db.base.CallTraceStore"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Config.type_rewriter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "monkeytype.typing.NoOpRewriter",
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.DEFAULT_REWRITER": {
  "data": {
   "shadows": "monkeytype.typing.DEFAULT_REWRITER"
  },
  "type": "import"
 },
 "monkeytype.config.DefaultConfig": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "monkeytype.config.Config"
   ]
  },
  "type": "class"
 },
 "monkeytype.config.DefaultConfig.code_filter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "monkeytype.config.default_code_filter",
    "monkeytype.tracing.CodeFilter"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.DefaultConfig.trace_store": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "monkeytype.config.os",
    "monkeytype.db.base.CallTraceStore",
    "monkeytype.db.sqlite.SQLiteStore.make_store"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.DefaultConfig.type_rewriter": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "monkeytype.typing.DEFAULT_REWRITER",
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "monkeytype.config.LIB_PATHS": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "monkeytype.config.NoOpRewriter": {
  "data": {
   "shadows": "monkeytype.typing.NoOpRewriter"
  },
  "type": "import"
 },
 "monkeytype.config.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.config.SQLiteStore": {
  "data": {
   "shadows": "monkeytype.db.sqlite.SQLiteStore"
  },
  "type": "import"
 },
 "monkeytype.config.TypeRewriter": {
  "data": {
   "shadows": "monkeytype.typing.TypeRewriter"
  },
  "type": "import"
 },
 "monkeytype.config._startswith": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "monkeytype.config.pathlib"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "monkeytype.config.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "monkeytype.config.default_code_filter": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "monkeytype.config.LIB_PATHS",
    "monkeytype.config._startswith",
    "monkeytype.config.functools",
    "monkeytype.config.os",
    "monkeytype.config.pathlib",
    "types.CodeType"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "monkeytype.config.get_default_config": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ImportError",
    "monkeytype.config.Config",
    "monkeytype.config.DefaultConfig",
    "monkeytype.config.monkeytype_config"
   ]
  },
  "type": "function"
 },
 "monkeytype.config.lib_paths": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "monkeytype.config.monkeytype_config": {
  "data": {
   "shadows": "monkeytype_config"
  },
  "type": "import"
 },
 "monkeytype.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "monkeytype.config.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "monkeytype.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "monkeytype.config.sysconfig": {
  "data": {
   "shadows": "sysconfig"
  },
  "type": "import"
 },
 "monkeytype.config.venv_real_prefix": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "monkeytype.db": {
  "data": {},
  "type": "module"
 },
 "monkeytype.db.base": {
  "data": {},
  "type": "module"
 },
 "monkeytype.db.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "monkeytype.db.base.CallTrace": {
  "data": {
   "shadows": "monkeytype.tracing.CallTrace"
  },
  "type": "import"
 },
 "monkeytype.db.base.CallTraceLogger": {
  "data": {
   "shadows": "monkeytype.tracing.CallTraceLogger"
  },
  "type": "import"
 },
 "monkeytype.db.base.CallTraceStore": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "monkeytype.db.base.CallTraceStore.add": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "monkeytype.tracing.CallTrace",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStore.filter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "monkeytype.db.base.CallTraceThunk",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStore.list_modules": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStore.make_store": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStoreLogger": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "monkeytype.tracing.CallTraceLogger"
   ]
  },
  "type": "class"
 },
 "monkeytype.db.base.CallTraceStoreLogger.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "monkeytype.db.base.CallTraceStore",
    "monkeytype.tracing.CallTrace",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStoreLogger.flush": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceStoreLogger.log": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "monkeytype.tracing.CallTrace"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.CallTraceThunk": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "monkeytype.db.base.CallTraceThunk.to_trace": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "monkeytype.tracing.CallTrace"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.base.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "monkeytype.db.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "monkeytype.db.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.db.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "monkeytype.db.sqlite.QueryValue",
    "monkeytype.db.sqlite.logging",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "monkeytype.db.sqlite.CallTrace": {
  "data": {
   "shadows": "monkeytype.tracing.CallTrace"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.CallTraceRow": {
  "data": {
   "shadows": "monkeytype.encoding.CallTraceRow"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.CallTraceStore": {
  "data": {
   "shadows": "monkeytype.db.base.CallTraceStore"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.CallTraceThunk": {
  "data": {
   "shadows": "monkeytype.db.base.CallTraceThunk"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.DEFAULT_TABLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "monkeytype.db.sqlite.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.ParameterizedQuery": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "monkeytype.db.sqlite.QueryValue": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "monkeytype.db.sqlite.SQLiteStore": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "monkeytype.db.base.CallTraceStore"
   ]
  },
  "type": "class"
 },
 "monkeytype.db.sqlite.SQLiteStore.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "monkeytype.db.sqlite.DEFAULT_TABLE",
    "monkeytype.db.sqlite.sqlite3",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.SQLiteStore.add": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "monkeytype.db.sqlite.datetime",
    "monkeytype.encoding.serialize_traces",
    "monkeytype.tracing.CallTrace",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.SQLiteStore.filter": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "monkeytype.db.base.CallTraceThunk",
    "monkeytype.db.sqlite.make_query",
    "monkeytype.encoding.CallTraceRow",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.SQLiteStore.list_modules": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.SQLiteStore.make_store": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "monkeytype.db.sqlite.create_call_trace_table",
    "monkeytype.db.sqlite.sqlite3",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.create_call_trace_table": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "monkeytype.db.sqlite.DEFAULT_TABLE",
    "monkeytype.db.sqlite.sqlite3",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "monkeytype.db.sqlite.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.make_query": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "monkeytype.db.sqlite.ParameterizedQuery",
    "monkeytype.db.sqlite.QueryValue",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.db.sqlite.serialize_traces": {
  "data": {
   "shadows": "monkeytype.encoding.serialize_traces"
  },
  "type": "import"
 },
 "monkeytype.db.sqlite.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "monkeytype.encoding": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "monkeytype.encoding.logging",
    "monkeytype.typing.NoneType",
    "monkeytype.typing.NotImplementedType",
    "monkeytype.typing.mappingproxy",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "monkeytype.encoding.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "monkeytype.encoding.CallTrace": {
  "data": {
   "shadows": "monkeytype.tracing.CallTrace"
  },
  "type": "import"
 },
 "monkeytype.encoding.CallTraceRow": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "monkeytype.db.base.CallTraceThunk"
   ]
  },
  "type": "class"
 },
 "monkeytype.encoding.CallTraceRow.__eq__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "monkeytype.encoding.CallTraceRow",
    "object"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.CallTraceRow.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.CallTraceRow.from_trace": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "monkeytype.encoding.CallTraceRowT",
    "monkeytype.encoding.arg_types_to_json",
    "monkeytype.encoding.maybe_encode_type",
    "monkeytype.encoding.type_to_json",
    "monkeytype.tracing.CallTrace",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.CallTraceRow.to_trace": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "monkeytype.encoding.arg_types_from_json",
    "monkeytype.encoding.maybe_decode_type",
    "monkeytype.encoding.type_from_json",
    "monkeytype.tracing.CallTrace",
    "monkeytype.util.get_func_in_module"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.CallTraceRowT": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "monkeytype.encoding.CallTraceThunk": {
  "data": {
   "shadows": "monkeytype.db.base.CallTraceThunk"
  },
  "type": "import"
 },
 "monkeytype.encoding.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "monkeytype.encoding.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "monkeytype.encoding.InvalidTypeError": {
  "data": {
   "shadows": "monkeytype.exceptions.InvalidTypeError"
  },
  "type": "import"
 },
 "monkeytype.encoding.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "monkeytype.encoding.NoneType": {
  "data": {
   "shadows": "monkeytype.typing.NoneType"
  },
  "type": "import"
 },
 "monkeytype.encoding.NotImplementedType": {
  "data": {
   "shadows": "monkeytype.typing.NotImplementedType"
  },
  "type": "import"
 },
 "monkeytype.encoding.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.encoding.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "monkeytype.encoding.TypeDecoder": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "monkeytype.encoding.TypeDict": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "monkeytype.encoding.TypeEncoder": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "monkeytype.encoding.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "monkeytype.encoding.TypedDict": {
  "data": {
   "shadows": "mypy_extensions.TypedDict"
  },
  "type": "import"
 },
 "monkeytype.encoding.arg_types_from_json": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "monkeytype.encoding.json",
    "monkeytype.encoding.type_from_dict",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.arg_types_to_json": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "monkeytype.encoding.json",
    "monkeytype.encoding.type_to_dict",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.get_func_in_module": {
  "data": {
   "shadows": "monkeytype.util.get_func_in_module"
  },
  "type": "import"
 },
 "monkeytype.encoding.get_name_in_module": {
  "data": {
   "shadows": "monkeytype.util.get_name_in_module"
  },
  "type": "import"
 },
 "monkeytype.encoding.is_any": {
  "data": {
   "shadows": "monkeytype.compat.is_any"
  },
  "type": "import"
 },
 "monkeytype.encoding.is_generic": {
  "data": {
   "shadows": "monkeytype.compat.is_generic"
  },
  "type": "import"
 },
 "monkeytype.encoding.is_typed_dict": {
  "data": {
   "shadows": "monkeytype.typing.is_typed_dict"
  },
  "type": "import"
 },
 "monkeytype.encoding.is_union": {
  "data": {
   "shadows": "monkeytype.compat.is_union"
  },
  "type": "import"
 },
 "monkeytype.encoding.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "monkeytype.encoding.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "monkeytype.encoding.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "monkeytype.encoding.mappingproxy": {
  "data": {
   "shadows": "monkeytype.typing.mappingproxy"
  },
  "type": "import"
 },
 "monkeytype.encoding.maybe_decode_type": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "decode",
    "monkeytype.encoding.TypeDecoder",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.maybe_encode_type": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "encode",
    "monkeytype.encoding.TypeEncoder",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.qualname_of_generic": {
  "data": {
   "shadows": "monkeytype.compat.qualname_of_generic"
  },
  "type": "import"
 },
 "monkeytype.encoding.serialize_traces": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "monkeytype.encoding.CallTraceRow",
    "monkeytype.encoding.logger",
    "monkeytype.tracing.CallTrace",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.type_from_dict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "monkeytype.compat.is_any",
    "monkeytype.compat.is_generic",
    "monkeytype.encoding.TypeDict",
    "monkeytype.encoding.typed_dict_from_dict",
    "monkeytype.exceptions.InvalidTypeError",
    "monkeytype.util.get_name_in_module",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.type_from_json": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "monkeytype.encoding.json",
    "monkeytype.encoding.type_from_dict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.type_to_dict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "getattr",
    "monkeytype.compat.is_any",
    "monkeytype.compat.is_generic",
    "monkeytype.compat.is_union",
    "monkeytype.compat.qualname_of_generic",
    "monkeytype.encoding.TypeDict",
    "monkeytype.encoding.typed_dict_to_dict",
    "monkeytype.typing.is_typed_dict",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.type_to_json": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "monkeytype.encoding.json",
    "monkeytype.encoding.type_to_dict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.typed_dict_from_dict": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "monkeytype.encoding.TypeDict",
    "monkeytype.encoding.type_from_dict",
    "mypy_extensions.TypedDict",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.encoding.typed_dict_to_dict": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "monkeytype.encoding.TypeDict",
    "monkeytype.encoding.type_to_dict",
    "str",
    "type",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.exceptions": {
  "data": {},
  "type": "module"
 },
 "monkeytype.exceptions.InvalidTypeError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "monkeytype.exceptions.MonkeyTypeError"
   ]
  },
  "type": "class"
 },
 "monkeytype.exceptions.MonkeyTypeError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "monkeytype.exceptions.NameLookupError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "monkeytype.exceptions.MonkeyTypeError"
   ]
  },
  "type": "class"
 },
 "monkeytype.get_default_config": {
  "data": {
   "shadows": "monkeytype.config.get_default_config"
  },
  "type": "import"
 },
 "monkeytype.trace": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "monkeytype.config.Config",
    "monkeytype.config.get_default_config",
    "monkeytype.tracing.trace_calls",
    "typing.ContextManager",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.trace_calls": {
  "data": {
   "shadows": "monkeytype.tracing.trace_calls"
  },
  "type": "import"
 },
 "monkeytype.tracing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "bool",
    "django.utils.functional.cached_property",
    "monkeytype.tracing.EVENT_CALL",
    "monkeytype.tracing.EVENT_RETURN",
    "monkeytype.tracing.logging",
    "monkeytype.tracing.opcode",
    "types.CodeType",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "monkeytype.tracing.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "monkeytype.tracing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "monkeytype.tracing.CallTrace": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "monkeytype.tracing.CallTrace.__eq__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTrace.__hash__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "frozenset",
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTrace.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTrace.__repr__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTrace.add_yield_type": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTrace.funcname": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "monkeytype.util.get_func_fqname",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTraceLogger": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "monkeytype.tracing.CallTraceLogger.flush": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTraceLogger.log": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "monkeytype.tracing.CallTrace"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTracer": {
  "data": {
   "lineno": 176
  },
  "type": "class"
 },
 "monkeytype.tracing.CallTracer.__call__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Exception",
    "monkeytype.tracing.EVENT_CALL",
    "monkeytype.tracing.EVENT_RETURN",
    "monkeytype.tracing.SUPPORTED_EVENTS",
    "monkeytype.tracing.logger",
    "str",
    "types.FrameType",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTracer.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "int",
    "monkeytype.tracing.CallTrace",
    "monkeytype.tracing.CallTraceLogger",
    "monkeytype.tracing.CodeFilter",
    "monkeytype.tracing.logger",
    "types.CodeType",
    "types.FrameType",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTracer._get_func": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "monkeytype.tracing.get_func",
    "types.FrameType",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTracer.handle_call": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "monkeytype.tracing.CallTrace",
    "monkeytype.tracing.YIELD_VALUE_OPCODE",
    "monkeytype.tracing.random",
    "monkeytype.typing.get_type",
    "types.FrameType"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.CallTracer.handle_return": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "monkeytype.tracing.RETURN_VALUE_OPCODE",
    "monkeytype.tracing.YIELD_VALUE_OPCODE",
    "monkeytype.typing.get_type",
    "types.FrameType",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "monkeytype.tracing.CodeFilter": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "monkeytype.tracing.CodeType": {
  "data": {
   "shadows": "types.CodeType"
  },
  "type": "import"
 },
 "monkeytype.tracing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "monkeytype.tracing.EVENT_CALL": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "monkeytype.tracing.EVENT_RETURN": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "monkeytype.tracing.FrameType": {
  "data": {
   "shadows": "types.FrameType"
  },
  "type": "import"
 },
 "monkeytype.tracing.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "monkeytype.tracing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "monkeytype.tracing.RETURN_VALUE_OPCODE": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "monkeytype.tracing.SUPPORTED_EVENTS": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "monkeytype.tracing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "monkeytype.tracing.YIELD_VALUE_OPCODE": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "monkeytype.tracing._has_code": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "getattr",
    "types.CodeType",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "monkeytype.tracing.cached_property": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "monkeytype.tracing.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "monkeytype.tracing.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "monkeytype.tracing.get_func": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance",
    "monkeytype.tracing._has_code",
    "monkeytype.tracing.get_func_in_mro",
    "type",
    "types.FrameType",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.get_func_fqname": {
  "data": {
   "shadows": "monkeytype.util.get_func_fqname"
  },
  "type": "import"
 },
 "monkeytype.tracing.get_func_in_mro": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "classmethod",
    "django.utils.functional.cached_property",
    "isinstance",
    "monkeytype.tracing._has_code",
    "monkeytype.tracing.inspect",
    "property",
    "staticmethod",
    "types.CodeType",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "monkeytype.tracing.get_type": {
  "data": {
   "shadows": "monkeytype.typing.get_type"
  },
  "type": "import"
 },
 "monkeytype.tracing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "monkeytype.tracing.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "monkeytype.tracing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "monkeytype.tracing.opcode": {
  "data": {
   "shadows": "opcode"
  },
  "type": "import"
 },
 "monkeytype.tracing.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "monkeytype.tracing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "monkeytype.tracing.trace_calls": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "int",
    "monkeytype.tracing.CallTraceLogger",
    "monkeytype.tracing.CallTracer",
    "monkeytype.tracing.CodeFilter",
    "monkeytype.tracing.logger",
    "monkeytype.tracing.sys",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing": {
  "data": {
   "symbols_in_volume": [
    "NotImplemented",
    "monkeytype.typing.ChainedRewriter",
    "monkeytype.typing.RemoveEmptyContainers",
    "monkeytype.typing.RewriteConfigDict",
    "monkeytype.typing.RewriteGenerator",
    "monkeytype.typing.RewriteLargeUnion",
    "monkeytype.typing.types",
    "range.__dict__",
    "type",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "monkeytype.typing.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "monkeytype.typing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "monkeytype.typing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "monkeytype.typing.ChainedRewriter": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.ChainedRewriter.__init__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.ChainedRewriter.rewrite": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "monkeytype.typing.DEFAULT_REWRITER": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "monkeytype.typing.DUMMY_OPTIONAL_TYPED_DICT_NAME": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "monkeytype.typing.DUMMY_REQUIRED_TYPED_DICT_NAME": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "monkeytype.typing.DUMMY_TYPED_DICT_NAME": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "monkeytype.typing.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "monkeytype.typing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "monkeytype.typing.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "monkeytype.typing.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "monkeytype.typing.GenericTypeRewriter": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abc.ABC",
    "monkeytype.typing.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.GenericTypeRewriter._rewrite_container": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.generic_rewrite": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.make_anonymous_typed_dict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.make_builtin_tuple": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.make_builtin_typed_dict": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.make_container_type": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "getattr",
    "monkeytype.compat.is_any",
    "monkeytype.compat.is_generic",
    "monkeytype.compat.is_typed_dict",
    "monkeytype.compat.is_union",
    "monkeytype.compat.name_of_generic",
    "rewriter"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_Dict": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_Generator": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_List": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_Set": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_Tuple": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_TypedDict": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "monkeytype.typing.is_anonymous_typed_dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_Union": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_anonymous_TypedDict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "monkeytype.typing.field_annotations",
    "monkeytype.typing.is_anonymous_typed_dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_container_type": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.GenericTypeRewriter.rewrite_malformed_container": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "monkeytype.typing.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "monkeytype.typing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "monkeytype.typing.NoOpRewriter": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.NoOpRewriter.rewrite": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "monkeytype.typing.NoneType": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "monkeytype.typing.NotImplementedType": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "monkeytype.typing.RemoveEmptyContainers": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.RemoveEmptyContainers._is_empty": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "all",
    "getattr",
    "monkeytype.compat.is_any"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RemoveEmptyContainers.rewrite_Union": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteAnonymousTypedDictToDict": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.RewriteAnonymousTypedDictToDict.rewrite_anonymous_TypedDict": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "monkeytype.typing.field_annotations",
    "monkeytype.typing.is_anonymous_typed_dict",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteConfigDict": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.RewriteConfigDict.rewrite_Union": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "monkeytype.compat.is_generic_of",
    "tuple",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteGenerator": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.RewriteGenerator.rewrite_Generator": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "monkeytype.typing.NoneType",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteLargeUnion": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "monkeytype.typing.TypeRewriter"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.RewriteLargeUnion.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteLargeUnion._rewrite_to_tuple": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "all",
    "monkeytype.compat.is_generic_of",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.RewriteLargeUnion.rewrite_Union": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "all",
    "issubclass",
    "len",
    "monkeytype.typing.inspect",
    "object",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "monkeytype.typing.T": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "monkeytype.typing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "monkeytype.typing.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "monkeytype.typing.TypeRewriter": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "monkeytype.typing.GenericTypeRewriter",
    "type"
   ]
  },
  "type": "class"
 },
 "monkeytype.typing.TypeRewriter.generic_rewrite": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.make_anonymous_typed_dict": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "monkeytype.typing.make_typed_dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.make_builtin_tuple": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.make_builtin_typed_dict": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "mypy_extensions.TypedDict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.make_container_type": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.rewrite_container_type": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "monkeytype.typing.TypeRewriter.rewrite_malformed_container": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "monkeytype.typing.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "monkeytype.typing.TypedDict": {
  "data": {
   "shadows": "mypy_extensions.TypedDict"
  },
  "type": "import"
 },
 "monkeytype.typing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "monkeytype.typing._BUILTIN_CALLABLE_TYPES": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "monkeytype.typing.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "monkeytype.typing.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "monkeytype.typing.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "monkeytype.typing.field_annotations": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.get_dict_type": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "monkeytype.typing.get_type",
    "monkeytype.typing.make_typed_dict",
    "monkeytype.typing.shrink_types",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.get_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "isinstance",
    "list",
    "monkeytype.typing._BUILTIN_CALLABLE_TYPES",
    "monkeytype.typing.get_dict_type",
    "monkeytype.typing.shrink_types",
    "monkeytype.typing.types",
    "set",
    "tuple",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.DefaultDict",
    "typing.Iterator",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "monkeytype.typing.is_anonymous_typed_dict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "monkeytype.compat.is_typed_dict",
    "monkeytype.typing.DUMMY_TYPED_DICT_NAME",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.is_any": {
  "data": {
   "shadows": "monkeytype.compat.is_any"
  },
  "type": "import"
 },
 "monkeytype.typing.is_generic": {
  "data": {
   "shadows": "monkeytype.compat.is_generic"
  },
  "type": "import"
 },
 "monkeytype.typing.is_generic_of": {
  "data": {
   "shadows": "monkeytype.compat.is_generic_of"
  },
  "type": "import"
 },
 "monkeytype.typing.is_typed_dict": {
  "data": {
   "shadows": "monkeytype.compat.is_typed_dict"
  },
  "type": "import"
 },
 "monkeytype.typing.is_union": {
  "data": {
   "shadows": "monkeytype.compat.is_union"
  },
  "type": "import"
 },
 "monkeytype.typing.make_generator": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.make_iterator": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.make_typed_dict": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "monkeytype.typing.DUMMY_OPTIONAL_TYPED_DICT_NAME",
    "monkeytype.typing.DUMMY_REQUIRED_TYPED_DICT_NAME",
    "monkeytype.typing.DUMMY_TYPED_DICT_NAME",
    "mypy_extensions.TypedDict",
    "type"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.mappingproxy": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "monkeytype.typing.name_of_generic": {
  "data": {
   "shadows": "monkeytype.compat.name_of_generic"
  },
  "type": "import"
 },
 "monkeytype.typing.shrink_typed_dict_types": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "itertools.chain",
    "itertools.chain.from_iterable",
    "len",
    "list",
    "monkeytype.typing.field_annotations",
    "monkeytype.typing.make_typed_dict",
    "monkeytype.typing.shrink_types",
    "str",
    "type",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.shrink_types": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "all",
    "len",
    "monkeytype.compat.types_equal",
    "monkeytype.typing.RewriteAnonymousTypedDictToDict",
    "monkeytype.typing.is_anonymous_typed_dict",
    "monkeytype.typing.shrink_typed_dict_types",
    "monkeytype.typing.types",
    "tuple",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "monkeytype.typing.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "monkeytype.typing.types_equal": {
  "data": {
   "shadows": "monkeytype.compat.types_equal"
  },
  "type": "import"
 },
 "monkeytype.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "django.utils.functional.cached_property"
   ]
  },
  "type": "module"
 },
 "monkeytype.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "monkeytype.util.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "monkeytype.util.InvalidTypeError": {
  "data": {
   "shadows": "monkeytype.exceptions.InvalidTypeError"
  },
  "type": "import"
 },
 "monkeytype.util.NameLookupError": {
  "data": {
   "shadows": "monkeytype.exceptions.NameLookupError"
  },
  "type": "import"
 },
 "monkeytype.util.cached_property": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "monkeytype.util.get_func_fqname": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "monkeytype.util.get_func_in_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "django.utils.functional.cached_property",
    "isinstance",
    "monkeytype.exceptions.InvalidTypeError",
    "monkeytype.util.get_name_in_module",
    "monkeytype.util.inspect",
    "monkeytype.util.types",
    "property",
    "str",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "monkeytype.util.get_name_in_module": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AttributeError",
    "ModuleNotFoundError",
    "attr_getter",
    "getattr",
    "monkeytype.exceptions.NameLookupError",
    "monkeytype.util.importlib",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "monkeytype.util.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "monkeytype.util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "monkeytype.util.pascal_case": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "monkeytype.util.re",
    "str"
   ]
  },
  "type": "function"
 },
 "monkeytype.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "monkeytype.util.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 }
}