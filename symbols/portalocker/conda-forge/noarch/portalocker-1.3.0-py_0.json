{
 "portalocker": {
  "data": {},
  "type": "module"
 },
 "portalocker.AlreadyLocked": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "portalocker.LOCK_EX": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "portalocker.LOCK_NB": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "portalocker.LOCK_SH": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "portalocker.LOCK_UN": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "portalocker.Lock": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "portalocker.LockException": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "portalocker.RLock": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "portalocker.TemporaryFileLock": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "portalocker.__about__": {
  "data": {},
  "type": "module"
 },
 "portalocker.__about__.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "portalocker.__about__.__description__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "portalocker.__about__.__email__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "portalocker.__about__.__package_name__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "portalocker.__about__.__url__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "portalocker.__about__.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "portalocker.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "portalocker.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "portalocker.__description__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "portalocker.__email__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "portalocker.__package_name__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "portalocker.__url__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "portalocker.__version__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "portalocker.constants": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "portalocker.constants.fcntl",
    "portalocker.constants.msvcrt",
    "portalocker.constants.os"
   ]
  },
  "type": "module"
 },
 "portalocker.constants.LOCK_EX": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "portalocker.constants.LOCK_NB": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "portalocker.constants.LOCK_SH": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "portalocker.constants.LOCK_UN": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "portalocker.constants.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "portalocker.constants.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "portalocker.constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "portalocker.exceptions": {
  "data": {},
  "type": "module"
 },
 "portalocker.exceptions.AlreadyLocked": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "portalocker.exceptions.BaseLockException"
   ]
  },
  "type": "class"
 },
 "portalocker.exceptions.BaseLockException": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "portalocker.exceptions.BaseLockException.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "portalocker.exceptions.FileToLarge": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "portalocker.exceptions.BaseLockException"
   ]
  },
  "type": "class"
 },
 "portalocker.exceptions.LockException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "portalocker.exceptions.BaseLockException"
   ]
  },
  "type": "class"
 },
 "portalocker.lock": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "portalocker.open_atomic": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "portalocker.portalocker": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "portalocker.portalocker.os",
    "portalocker.portalocker.pywintypes",
    "portalocker.portalocker.sys"
   ]
  },
  "type": "module"
 },
 "portalocker.portalocker.__overlapped": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "portalocker.portalocker.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "portalocker.portalocker.lock": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "BlockingIOError",
    "IOError",
    "NameError",
    "portalocker.portalocker.fcntl"
   ]
  },
  "type": "function"
 },
 "portalocker.portalocker.lock_length": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "portalocker.portalocker.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "portalocker.portalocker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "portalocker.portalocker.pywintypes": {
  "data": {
   "shadows": "pywintypes"
  },
  "type": "import"
 },
 "portalocker.portalocker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "portalocker.portalocker.unlock": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "portalocker.portalocker.fcntl"
   ]
  },
  "type": "function"
 },
 "portalocker.portalocker.win32con": {
  "data": {
   "shadows": "win32con"
  },
  "type": "import"
 },
 "portalocker.portalocker.win32file": {
  "data": {
   "shadows": "win32file"
  },
  "type": "import"
 },
 "portalocker.portalocker.winerror": {
  "data": {
   "shadows": "winerror"
  },
  "type": "import"
 },
 "portalocker.unlock": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "portalocker.utils": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "portalocker.utils.time"
   ]
  },
  "type": "module"
 },
 "portalocker.utils.DEFAULT_CHECK_INTERVAL": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "portalocker.utils.DEFAULT_TIMEOUT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "portalocker.utils.LOCK_METHOD": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "portalocker.utils.Lock": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "portalocker.utils.Lock.__delete__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "portalocker.utils.Lock.__enter__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "portalocker.utils.Lock.__exit__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "portalocker.utils.Lock.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "portalocker.utils.DEFAULT_CHECK_INTERVAL",
    "portalocker.utils.DEFAULT_TIMEOUT",
    "portalocker.utils.LOCK_METHOD"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.Lock._get_fh": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.Lock._get_lock": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "portalocker.utils.Lock._prepare_fh": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "portalocker.utils.Lock.acquire": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "portalocker.utils.current_time",
    "portalocker.utils.time"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.Lock.release": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "portalocker.utils.RLock": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "portalocker.utils.Lock"
   ]
  },
  "type": "class"
 },
 "portalocker.utils.RLock.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "portalocker.utils.DEFAULT_CHECK_INTERVAL",
    "portalocker.utils.DEFAULT_TIMEOUT",
    "portalocker.utils.LOCK_METHOD",
    "portalocker.utils.RLock",
    "super"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.RLock.acquire": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "portalocker.utils.RLock",
    "super"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.RLock.release": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "portalocker.utils.RLock",
    "super"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.TemporaryFileLock": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "portalocker.utils.Lock"
   ]
  },
  "type": "class"
 },
 "portalocker.utils.TemporaryFileLock.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "portalocker.utils.DEFAULT_CHECK_INTERVAL",
    "portalocker.utils.DEFAULT_TIMEOUT",
    "portalocker.utils.LOCK_METHOD",
    "portalocker.utils.Lock",
    "portalocker.utils.atexit"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.TemporaryFileLock.release": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "portalocker.utils.Lock",
    "portalocker.utils.os"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "portalocker.utils.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "portalocker.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "portalocker.utils.current_time": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "portalocker.utils.open_atomic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "portalocker.utils.contextlib",
    "portalocker.utils.os",
    "portalocker.utils.tempfile"
   ]
  },
  "type": "function"
 },
 "portalocker.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "portalocker.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "portalocker.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.conftest": {
  "data": {},
  "type": "module"
 },
 "tests.conftest.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.tmpfile": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "str",
    "tests.conftest.py",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.temporary_file_lock": {
  "data": {},
  "type": "module"
 },
 "tests.temporary_file_lock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.temporary_file_lock.portalocker": {
  "data": {
   "shadows": "portalocker"
  },
  "type": "import"
 },
 "tests.temporary_file_lock.test_temporary_file_lock": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "tests.temporary_file_lock.os",
    "tests.temporary_file_lock.portalocker"
   ]
  },
  "type": "function"
 },
 "tests.test_combined": {
  "data": {},
  "type": "module"
 },
 "tests.test_combined.combined": {
  "data": {
   "shadows": "combined"
  },
  "type": "import"
 },
 "tests.test_combined.dist": {
  "data": {
   "shadows": "distutils.dist"
  },
  "type": "import"
 },
 "tests.test_combined.setup": {
  "data": {
   "shadows": "setup"
  },
  "type": "import"
 },
 "tests.test_combined.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.test_combined.test_combined": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "distutils.dist.Distribution",
    "str",
    "tests.test_combined.combined",
    "tests.test_combined.setup",
    "tests.test_combined.sys"
   ]
  },
  "type": "function"
 },
 "tests.tests": {
  "data": {},
  "type": "module"
 },
 "tests.tests.portalocker": {
  "data": {
   "shadows": "portalocker"
  },
  "type": "import"
 },
 "tests.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tests.tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.tests.test_acquire_release": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_class": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_exceptions": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "open",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_exlusive": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "open",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_release_unacquired": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_rlock_acquire_release": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_rlock_acquire_release_count": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tests.tests.portalocker"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_shared": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "open",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_simple": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "open",
    "tests.tests.portalocker"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_truncate": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "open",
    "tests.tests.portalocker"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_with_timeout": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "print",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_without_fail": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "print",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.test_without_timeout": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "print",
    "tests.tests.portalocker",
    "tests.tests.pytest"
   ]
  },
  "type": "function"
 },
 "tests.tests.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 }
}