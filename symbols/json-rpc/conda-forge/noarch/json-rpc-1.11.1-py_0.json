{
 "jsonrpc": {
  "data": {
   "symbols_in_volume": [
    "Dispatcher",
    "__name__",
    "jsonrpc.__version",
    "map",
    "str"
   ]
  },
  "type": "module"
 },
 "jsonrpc.__version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "jsonrpc.backend": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.backend.django": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "jsonrpc.backend.django.JSONRPCAPI",
    "jsonrpc.backend.django.logging"
   ]
  },
  "type": "module"
 },
 "jsonrpc.backend.django.HttpResponse": {
  "data": {
   "shadows": "django.http.HttpResponse"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.HttpResponseNotAllowed": {
  "data": {
   "shadows": "django.http.HttpResponseNotAllowed"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.JSONRPCAPI": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "jsonrpc.backend.django.JSONRPCAPI.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.django.JSONRPCAPI.jsonrpc": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "django.http.HttpResponse",
    "django.http.HttpResponseNotAllowed",
    "django.views.decorators.csrf.csrf_exempt",
    "isinstance",
    "jsonrpc.backend.django.copy",
    "jsonrpc.backend.django.logger",
    "jsonrpc.backend.django.response_serialize",
    "jsonrpc.backend.django.time"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.django.JSONRPCAPI.jsonrpc_map": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "django.http.HttpResponse"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.django.JSONRPCAPI.urls": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "django.conf.settings",
    "django.conf.settings.DEBUG",
    "django.conf.urls.url",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.django.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.api": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "jsonrpc.backend.django.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.csrf_exempt": {
  "data": {
   "shadows": "django.views.decorators.csrf.csrf_exempt"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "jsonrpc.backend.django.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.response_serialize": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "jsonrpc.backend.django.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.django.settings": {
  "data": {
   "shadows": "django.conf.settings"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "jsonrpc.backend.django.url": {
  "data": {
   "shadows": "django.conf.urls.url"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "jsonrpc.backend.flask.JSONRPCAPI",
    "jsonrpc.backend.flask.logging"
   ]
  },
  "type": "module"
 },
 "jsonrpc.backend.flask.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.JSONRPCAPI": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "jsonrpc.backend.flask.JSONRPCAPI.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI._get_request_str": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "flask.request.data",
    "flask.request.form.keys",
    "list"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI._serialize": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "jsonrpc.backend.flask.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI.as_blueprint": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "__name__",
    "flask.Blueprint",
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI.as_view": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI.jsonrpc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "flask.Response",
    "jsonrpc.backend.flask.copy",
    "jsonrpc.backend.flask.logger",
    "jsonrpc.backend.flask.time"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.JSONRPCAPI.jsonrpc_map": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask.Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.backend.flask.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.api": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "jsonrpc.backend.flask.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "jsonrpc.backend.flask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "jsonrpc.backend.flask.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "jsonrpc.base": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.base.JSONRPCBaseRequest": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "jsonrpc.base.JSONRPCBaseRequest.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseRequest.args": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseRequest.data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseRequest.json": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseRequest.kwargs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseResponse": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "jsonrpc.base.JSONRPCBaseResponse.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseResponse.data": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.base.JSONRPCBaseResponse.json": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "jsonrpc.dispatcher.Dispatcher": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "jsonrpc.dispatcher.collections"
   ]
  },
  "type": "class"
 },
 "jsonrpc.dispatcher.Dispatcher.__delitem__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__getitem__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__iter__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__len__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__repr__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.__setitem__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.add_class": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cls"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.add_dict": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.add_method": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.add_object": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.Dispatcher.build_method_map": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "callable",
    "dict",
    "dir",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.dispatcher.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "jsonrpc.exceptions": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.exceptions.JSONRPCDispatchException": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCException"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCDispatchException.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCDispatchException",
    "jsonrpc.exceptions.JSONRPCError",
    "super"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "jsonrpc.exceptions.json",
    "object",
    "property",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCError.__get_code": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__get_data": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__get_message": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__set_code": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__set_data": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.__set_message": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.from_json": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCError.json": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.exceptions.JSONRPCException": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCInternalError": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCInvalidParams": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCInvalidRequest": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCInvalidRequestException": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCException"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCMethodNotFound": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCParseError": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.JSONRPCServerError": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "jsonrpc.exceptions.JSONRPCError"
   ]
  },
  "type": "class"
 },
 "jsonrpc.exceptions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.jsonrpc1": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request._id": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.from_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "JSONRPCInvalidRequestException",
    "ValueError",
    "classmethod",
    "cls",
    "cls.POSSIBLE_FIELDS",
    "cls.REQUIRED_FIELDS",
    "dict",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.from_json": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.is_notification": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.method": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Request.params": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Response": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Response._id": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Response.data": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Response.error": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.jsonrpc1.JSONRPC10Response.result": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "jsonrpc.manager.logging"
   ]
  },
  "type": "module"
 },
 "jsonrpc.manager.JSONRPCResponseManager": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "jsonrpc.manager.JSONRPCResponseManager._get_responses": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "JSONRPCInvalidParams",
    "JSONRPCMethodNotFound",
    "JSONRPCServerError",
    "KeyError",
    "TypeError",
    "classmethod",
    "is_invalid_params",
    "isinstance",
    "jsonrpc.manager.logger",
    "make_response",
    "method",
    "str"
   ]
  },
  "type": "function"
 },
 "jsonrpc.manager.JSONRPCResponseManager._get_responses.make_response": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "jsonrpc.manager.JSONRPCResponseManager.handle": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "JSONRPCInvalidRequest",
    "JSONRPCParseError",
    "TypeError",
    "ValueError",
    "bytes",
    "classmethod",
    "isinstance",
    "jsonrpc.manager.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.manager.JSONRPCResponseManager.handle_request": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "JSONRPC20BatchResponse",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.manager.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "jsonrpc.manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "jsonrpc.tests": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.py35_utils": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.py35_utils.distance": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.test_backend_django.settings": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.test_backend_django.settings.ALLOWED_HOSTS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.settings.DATABASES": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.settings.DATABASE_ENGINE": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.settings.JSONRPC_MAP_VIEW_ENABLED": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.settings.ROOT_URLCONF": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.settings.SECRET_KEY": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_django.tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "jsonrpc.tests.test_backend_django.tests.unittest"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_backend_django.tests.RegexURLPattern": {
  "data": {
   "shadows": "django.core.urlresolvers.RegexURLPattern"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.tests.TestCase": {
  "data": {
   "shadows": "django.test.TestCase"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "django.test.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.setUpClass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "classmethod",
    "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend",
    "jsonrpc.tests.test_backend_django.tests.os",
    "super"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_client": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_django.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_client.dummy": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_empty_initial_dispatcher": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "JSONRPCAPI",
    "SubDispatcher",
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_empty_initial_dispatcher.SubDispatcher": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_invalid_request": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_django.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_method_not_allowed": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_method_not_allowed_prefix": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_resource_map": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_resource_map_prefix": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.TestDjangoBackend.test_urls": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "django.core.urlresolvers.RegexURLPattern",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_django.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.tests.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.tests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.urls": {
  "data": {
   "symbols_in_volume": [
    "django.conf.urls.include",
    "django.conf.urls.url",
    "jsonrpc.backend.django.api.urls"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_backend_django.urls.api": {
  "data": {
   "shadows": "jsonrpc.backend.django.api"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.urls.include": {
  "data": {
   "shadows": "django.conf.urls.include"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.urls.url": {
  "data": {
   "shadows": "django.conf.urls.url"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_django.urls.urlpatterns": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "jsonrpc.tests.test_backend_flask": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.test_backend_flask.tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "jsonrpc.tests.test_backend_flask.tests.sys",
    "unittest2.SkipTest"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_backend_flask.tests.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json",
    "jsonrpc.tests.test_backend_flask.tests.sys",
    "unittest2.TestCase",
    "unittest2.skipIf"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend._get_test_client": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend._get_test_client.dummy": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "JSONRPCAPI"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_as_view": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "JSONRPCAPI",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_check_content_type": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "JSONRPCAPI",
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_client": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_empty_initial_dispatcher": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "JSONRPCAPI",
    "SubDispatcher",
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_empty_initial_dispatcher.SubDispatcher": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_invalid_parameters": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_invalid_request": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_method_not_allowed": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_method_not_allowed_prefix": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_method_not_found": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_not_check_content_type": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "JSONRPCAPI",
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_parse_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_resource_map": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_resource_map_prefix": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.TestFlaskBackend.test_wrong_content_type": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "jsonrpc.tests.test_backend_flask.tests.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.dummy": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "jsonrpc.tests.test_backend_flask.tests.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_flask.tests.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_flask.tests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_backend_flask.tests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_base.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_base.TestJSONRPCBaseRequest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_base.TestJSONRPCBaseRequest.test_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "JSONRPCBaseRequest",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_base.TestJSONRPCBaseResponse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_base.TestJSONRPCBaseResponse.test_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "JSONRPCBaseResponse",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_base.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_bug29": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_bug29.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_bug29.TestJSONRPCExamples": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_bug29.TestJSONRPCExamples.setUp": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "jsonrpc.tests.test_bug29.TestJSONRPCExamples.test_none_as_result": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "jsonrpc.tests.test_bug29.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_bug29.isjsonequal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "jsonrpc.tests.test_bug29.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_bug29.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_bug29.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_bug29.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_dispatcher": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_dispatcher.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_dispatcher.Math": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "jsonrpc.tests.test_dispatcher.Math.diff": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.Math.sum": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_class": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Dispatcher",
    "jsonrpc.tests.test_dispatcher.Math"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_dict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Dispatcher",
    "sum"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_method.add": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_method_keep_function_definitions": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_method_keep_function_definitions.one": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_add_object": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Dispatcher",
    "jsonrpc.tests.test_dispatcher.Math"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_del_method": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_dispatcher_representation": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Dispatcher",
    "repr"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_getter": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Dispatcher",
    "KeyError",
    "sum"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_in": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_init_from_dictionary": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Dispatcher"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_init_from_object_instance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Dispatcher",
    "Dummy"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_init_from_object_instance.Dummy": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_init_from_object_instance.Dummy.one": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_init_from_object_instance.Dummy.two": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_to_dict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Dispatcher",
    "dict"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.TestDispatcher.test_to_dict.func": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "jsonrpc.tests.test_dispatcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_dispatcher.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_examples20": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.setUp": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_notification": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_batch": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_batch_all_notifications": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_batch_invalid_json": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_of_non_existent_method": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_response_request": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "isinstance",
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_response_request_batch": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "isinstance",
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_an_empty_array": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_invalid_batch": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_invalid_json": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_invalid_request_object": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_named_parameters": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal",
    "sum"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_named_parameters.subtract": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_positional_parameters": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.TestJSONRPCExamples.test_rpc_call_with_rpc_call_with_an_invalid_batch_but_not_empty": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.isjsonequal"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.isjsonequal": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "jsonrpc.tests.test_examples20.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_examples20.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_examples20.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_examples20.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.tests.test_jsonrpc1": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_jsonrpc1.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.setUp": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_correct_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_1": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_1_notification": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_2": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_2_notification": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_3": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_3_notification": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_4": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_id_4_notification": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_method_1": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_method_2": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_params_1": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_params_2": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_params_3": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_data_setter": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_error_if_notification_true_but_id_none": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_invalid_request_extra_data": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "JSONRPC10Request.from_json",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_invalid_request_id": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "JSONRPC10Request.from_json",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_invalid_request_method": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "JSONRPC10Request.from_json",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_invalid_request_params": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "JSONRPC10Request.from_json",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_request": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "JSONRPC10Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_request_notification": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "JSONRPC10Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_from_json_string_not_dict": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "JSONRPC10Request.from_json",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_default_id_none": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_float": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_int": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_list_tuple": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_none": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_null": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_id_validation_string": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_is_notification": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_method_validation_not_str": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_method_validation_str": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_params_validation_dict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_params_validation_incorrect": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_params_validation_list": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_params_validation_none": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_params_validation_tuple": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "tuple"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_request_args": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_set_unset_notification_keep_id": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "JSONRPC10Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Request.test_validation_incorrect_no_parameters": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response._test_validation_incorrect_result_and_error": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.setUp": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_correct_init": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "JSONRPC10Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_data": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "jsonrpc.tests.test_jsonrpc1.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_data_setter": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_validation_error_incorrect": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_validation_id": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "JSONRPC10Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_validation_incorrect_no_parameters": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.TestJSONRPC10Response.test_validation_success_incorrect": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "JSONRPC10Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc1.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc1.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc1.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc2": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_jsonrpc2.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchRequest": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchRequest.test_batch_request": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "JSONRPC20BatchRequest",
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchRequest.test_from_json_batch": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "JSONRPC20BatchRequest",
    "JSONRPC20BatchRequest.from_json",
    "JSONRPC20Request",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchRequest.test_from_json_batch_one": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "JSONRPC20BatchRequest",
    "JSONRPC20Request",
    "JSONRPC20Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchRequest.test_response_iterator": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "JSONRPC20BatchRequest",
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchResponse": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchResponse.test_batch_response": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "JSONRPC20BatchResponse",
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchResponse.test_batch_response_data": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "JSONRPC20BatchResponse",
    "JSONRPC20Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20BatchResponse.test_response_iterator": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "JSONRPC20BatchResponse",
    "JSONRPC20Response",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.setUp": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_correct_init": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_1": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_1_notification": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_2": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_2_notification": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_3": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_3_notification": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_4": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_id_4_notification": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_method_1": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_method_2": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_method_3": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_params_1": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_params_2": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_params_3": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_params_4": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_params_5": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_data_setter": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_invalid_request_extra_data": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "JSONRPC20Request.from_json",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_invalid_request_jsonrpc": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "JSONRPC20Request.from_json",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_invalid_request_method": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "JSONRPC20Request.from_json",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_request": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "JSONRPC20Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_request_no_id": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "JSONRPC20Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_request_no_params": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "JSONRPC20Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_from_json_request_null_id": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "JSONRPC20Request.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_float": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_incorrect": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_int": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_none": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_null": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_id_validation_string": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_is_notification": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_method_validation_not_str": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_method_validation_str": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_method_validation_str_rpc_prefix": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_params_validation_dict": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_params_validation_incorrect": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_params_validation_list": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_params_validation_none": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_params_validation_tuple": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "tuple"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_request_args": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_request_kwargs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_id_1": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_id_2": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_id_3": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_id_4": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_method_1": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_method_2": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_method_3": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_params_1": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_params_2": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_params_3": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_params_4": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_serialize_params_5": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_set_unset_notification_keep_id": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Request.test_validation_incorrect_no_parameters": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.setUp": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_correct_init": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "JSONRPC20Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_error": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_error_id": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_error_id_none": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_result": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_result_id": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_result_id_none": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "jsonrpc.tests.test_jsonrpc2.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_data_setter": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_error_correct": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "JSONRPC20Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_error_incorrect": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_error_incorrect_message_not_str": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_error_incorrect_no_code": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_error_incorrect_no_message": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_id": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "JSONRPC20Response"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_id_incorrect_type": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_incorrect_no_parameters": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.TestJSONRPC20Response.test_validation_incorrect_result_and_error": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "JSONRPC20Response",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc2.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc_errors": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_jsonrpc_errors.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCDispatchException": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCDispatchException.test_code_message": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "JSONRPCDispatchException"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.setUp": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_code_validation_int": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_code_validation_no_code": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "JSONRPCError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_code_validation_str": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "JSONRPCError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_correct_init": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_data_validation": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_data_validation_none": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_from_json": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "JSONRPCError",
    "JSONRPCError.from_json",
    "isinstance",
    "jsonrpc.tests.test_jsonrpc_errors.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_json": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "JSONRPCError",
    "jsonrpc.tests.test_jsonrpc_errors.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_message_validation_int": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "JSONRPCError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_message_validation_none": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "JSONRPCError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_message_validation_str": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "JSONRPCError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCError.test_validation_incorrect_no_parameters": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "JSONRPCError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInternalError": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInternalError.test_code_message": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "JSONRPCInternalError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInvalidParams": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInvalidParams.test_code_message": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "JSONRPCInvalidParams"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInvalidRequest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCInvalidRequest.test_code_message": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "JSONRPCInvalidRequest"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCMethodNotFound": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCMethodNotFound.test_code_message": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "JSONRPCMethodNotFound"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCParseError": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCParseError.test_code_message": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "JSONRPCParseError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCServerError": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_jsonrpc_errors.TestJSONRPCServerError.test_code_message": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "JSONRPCServerError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_jsonrpc_errors.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc_errors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_jsonrpc_errors.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_manager": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_manager.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_manager.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "JSONRPCDispatchException",
    "KeyError",
    "TypeError",
    "int",
    "len",
    "raise_",
    "sum",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.setUp.raise_": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_dispatch_error": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_invalid_params": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_invalid_params_before_dispatcher_error": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_invalid_params_custom_function": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_invalid_request": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_method_not_found": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_notification_calls_method": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_notification_does_not_return_error": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_notification_does_not_return_error_does_not_exist": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_notification_does_not_return_error_invalid_params": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "JSONRPC20Request"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_parse_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_returned_type_butch_response": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "JSONRPC20BatchRequest",
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_returned_type_response": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_returned_type_response_rpc10": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "JSONRPC10Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_server_error": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.TestJSONRPCResponseManager.test_type_error_inside_method": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "JSONRPC20Request",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_manager.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_pep3107": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_pep3107.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_pep3107.TestJSONRPCResponseManager": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_pep3107.TestJSONRPCResponseManager.test_typeerror_with_annotations": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "jsonrpc.tests.test_pep3107.sys",
    "unittest2.skipIf"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_pep3107.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_pep3107.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "jsonrpc.tests.test_utils.sys"
   ]
  },
  "type": "module"
 },
 "jsonrpc.tests.test_utils.TestDatetimeDecimalEncoder": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_utils.TestDatetimeDecimalEncoder.test_date_encoder": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "jsonrpc.tests.test_utils.datetime",
    "jsonrpc.tests.test_utils.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestDatetimeDecimalEncoder.test_datetime_encoder": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "jsonrpc.tests.test_utils.datetime",
    "jsonrpc.tests.test_utils.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestDatetimeDecimalEncoder.test_decimal_encoder": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "isinstance",
    "jsonrpc.tests.test_utils.decimal",
    "jsonrpc.tests.test_utils.json",
    "str"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestDatetimeDecimalEncoder.test_default": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "DatetimeDecimalEncoder",
    "jsonrpc.tests.test_utils.json",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.setUp": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.setUp.A": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.setUp.A.json": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.test_abstract_class": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "JSONSerializable",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.test_definse_serialize_deserialize": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.test_from_json": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestJSONSerializable.test_from_json_incorrect": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "jsonrpc.tests.test_utils.TestUtils.test_invalid_params_correct": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "is_invalid_params"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestUtils.test_is_invalid_params_args": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "is_invalid_params"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestUtils.test_is_invalid_params_builtin": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "is_invalid_params",
    "sum"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.TestUtils.test_is_invalid_params_kwargs": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "is_invalid_params"
   ]
  },
  "type": "function"
 },
 "jsonrpc.tests.test_utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "jsonrpc.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "jsonrpc.utils": {
  "data": {},
  "type": "module"
 },
 "jsonrpc.utils.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "jsonrpc.utils.DatetimeDecimalEncoder": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "jsonrpc.utils.json"
   ]
  },
  "type": "class"
 },
 "jsonrpc.utils.DatetimeDecimalEncoder.default": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "jsonrpc.utils.datetime",
    "jsonrpc.utils.decimal",
    "jsonrpc.utils.json"
   ]
  },
  "type": "function"
 },
 "jsonrpc.utils.JSONSerializable": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "jsonrpc.utils.json",
    "object",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "jsonrpc.utils.JSONSerializable.from_json": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "jsonrpc.utils.JSONSerializable.json": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "jsonrpc.utils.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "jsonrpc.utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "jsonrpc.utils.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "jsonrpc.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "jsonrpc.utils.is_invalid_params": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "jsonrpc.utils.inspect",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "jsonrpc.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 }
}