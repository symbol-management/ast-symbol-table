{
 "*": {
  "data": {
   "imports": [
    "pandas_msgpack.msgpack.exceptions"
   ]
  },
  "type": "star-import"
 },
 "pandas_msgpack": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "get_versions",
    "len",
    "pandas_msgpack.pandas",
    "pandas_msgpack.pv",
    "pandas_msgpack.versions"
   ]
  },
  "type": "module"
 },
 "pandas_msgpack.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas_msgpack.__git_revision__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas_msgpack.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas_msgpack._is_pandas_legacy_version": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas_msgpack._version": {
  "data": {},
  "type": "module"
 },
 "pandas_msgpack._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas_msgpack._version.json",
    "pandas_msgpack._version.version_json"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandas_msgpack._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack": {
  "data": {
   "symbols_in_volume": [
    "pandas_msgpack.msgpack._unpacker.unpack",
    "pandas_msgpack.msgpack._unpacker.unpackb",
    "pandas_msgpack.msgpack.pack",
    "pandas_msgpack.msgpack.packb"
   ]
  },
  "type": "module"
 },
 "pandas_msgpack.msgpack.ExtType": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.ExtType.__new__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "int",
    "isinstance",
    "pandas_msgpack.msgpack.ExtType",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.msgpack.Packer": {
  "data": {
   "shadows": "pandas_msgpack.msgpack._packer.Packer"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack.Unpacker": {
  "data": {
   "shadows": "pandas_msgpack.msgpack._unpacker.Unpacker"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack._version": {
  "data": {},
  "type": "module"
 },
 "pandas_msgpack.msgpack._version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack.dump": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack.dumps": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack.exceptions": {
  "data": {},
  "type": "module"
 },
 "pandas_msgpack.msgpack.exceptions.BufferFull": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData.__str__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pandas_msgpack.msgpack.exceptions.OutOfData": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.PackException": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.PackValueError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "pandas_msgpack.msgpack.exceptions.PackException"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.UnpackException": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.UnpackValueError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "pandas_msgpack.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.msgpack.load": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack.loads": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas_msgpack.msgpack.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack.pack": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.msgpack.packb": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.msgpack.unpack": {
  "data": {
   "shadows": "pandas_msgpack.msgpack._unpacker.unpack"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack.unpackb": {
  "data": {
   "shadows": "pandas_msgpack.msgpack._unpacker.unpackb"
  },
  "type": "import"
 },
 "pandas_msgpack.msgpack.version": {
  "data": {
   "shadows": "pandas_msgpack.msgpack._version.version"
  },
  "type": "import"
 },
 "pandas_msgpack.packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "numpy",
    "numpy.dtype",
    "numpy.float128",
    "numpy.float32",
    "numpy.float64",
    "pandas.NaT",
    "pandas.compat.u",
    "pandas_msgpack.packers._check_blosc",
    "pandas_msgpack.packers._check_zlib",
    "pandas_msgpack.packers.c2f_dict",
    "textwrap.dedent",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas_msgpack.packers.BlockIndex": {
  "data": {
   "shadows": "pandas.sparse.array.BlockIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.ExtType": {
  "data": {
   "shadows": "pandas_msgpack.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.IntIndex": {
  "data": {
   "shadows": "pandas.sparse.array.IntIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Iterator": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.packers.Iterator.__init__": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "pandas_msgpack.packers.Iterator.__iter__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas_msgpack.packers.os",
    "pandas_msgpack.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.NaTType": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandas_msgpack.packers.Packer": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.Packer"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.packers.Packer.__init__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.Packer",
    "pandas_msgpack.packers.encode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.Unpacker": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.Unpacker"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.packers.Unpacker.__init__": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.ExtType",
    "pandas_msgpack.msgpack.Unpacker",
    "pandas_msgpack.packers.decode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers._BadMove": {
  "data": {
   "shadows": "pandas_msgpack._move.BadMove"
  },
  "type": "import"
 },
 "pandas_msgpack.packers._Packer": {
  "data": {
   "shadows": "pandas_msgpack.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas_msgpack.packers._Unpacker": {
  "data": {
   "shadows": "pandas_msgpack.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas_msgpack.packers._check_blosc": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers._check_zlib": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers._is_pandas_legacy_version": {
  "data": {
   "shadows": "pandas_msgpack._is_pandas_legacy_version"
  },
  "type": "import"
 },
 "pandas_msgpack.packers._move_into_mutable_buffer": {
  "data": {
   "shadows": "pandas_msgpack._move.move_into_mutable_buffer"
  },
  "type": "import"
 },
 "pandas_msgpack.packers._safe_reshape": {
  "data": {
   "shadows": "pandas.core.internals._safe_reshape"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.c2f": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ftype",
    "numpy.typeDict",
    "pandas_msgpack.packers.c2f_dict"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.c2f_dict": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "pandas_msgpack.packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.compressor": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "pandas_msgpack.packers.convert": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.types.common.is_categorical_dtype",
    "pandas.types.common.is_object_dtype",
    "pandas.types.common.needs_i8_conversion",
    "pandas_msgpack.msgpack.ExtType",
    "pandas_msgpack.packers._check_blosc",
    "pandas_msgpack.packers._check_zlib",
    "pandas_msgpack.packers.blosc",
    "pandas_msgpack.packers.compressor",
    "pandas_msgpack.packers.zlib"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.decode": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "complex",
    "create_block",
    "datetime.timedelta",
    "dateutil.parser.parse",
    "dict",
    "dtype",
    "dtype.type",
    "from_codes",
    "globals",
    "int",
    "isinstance",
    "list",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.timedelta64",
    "numpy.typeDict",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.core.internals.BlockManager",
    "pandas.types.common.pandas_dtype",
    "pandas_msgpack._is_pandas_legacy_version",
    "pandas_msgpack.packers.c2f",
    "pandas_msgpack.packers.dtype_for",
    "pandas_msgpack.packers.unconvert",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.decode.create_block": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.internals",
    "pandas.core.internals._safe_reshape",
    "pandas.core.internals.make_block",
    "pandas_msgpack.packers.dtype_for",
    "pandas_msgpack.packers.unconvert"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.dtype_dict": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "pandas_msgpack.packers.dtype_for": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.typeDict.get",
    "pandas_msgpack.packers.dtype_dict"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.encode": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "complex",
    "datetime.date",
    "datetime.datetime",
    "datetime.timedelta",
    "getattr",
    "isinstance",
    "issubclass",
    "numpy.datetime64",
    "numpy.iscomplexobj",
    "numpy.ndarray",
    "numpy.number",
    "numpy.timedelta64",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.u",
    "pandas.compat.u_safe",
    "pandas.core.generic.NDFrame",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.array.IntIndex",
    "pandas_msgpack.packers.NaTType",
    "pandas_msgpack.packers.compressor",
    "pandas_msgpack.packers.convert",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.internals": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.types.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.is_object_dtype": {
  "data": {
   "shadows": "pandas.types.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.types.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.pack": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.Packer",
    "pandas_msgpack.packers.encode"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.pandas_dtype": {
  "data": {
   "shadows": "pandas.types.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.read_msgpack": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.binary_type",
    "pandas.compat.callable",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas_msgpack.packers.Iterator",
    "pandas_msgpack.packers.os",
    "read"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.read_msgpack.read": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas_msgpack.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.to_msgpack": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas.compat.u",
    "pandas_msgpack.packers.compressor",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.to_msgpack.writer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas_msgpack.packers.pack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.u_safe": {
  "data": {
   "shadows": "pandas.compat.u_safe"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.unconvert": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "decompress",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.frombuffer",
    "numpy.fromstring",
    "object",
    "pandas.core.common.PerformanceWarning",
    "pandas.types.common.is_categorical_dtype",
    "pandas.types.common.is_object_dtype",
    "pandas.types.common.pandas_dtype",
    "pandas_msgpack._move.BadMove",
    "pandas_msgpack._move.move_into_mutable_buffer",
    "pandas_msgpack.msgpack.ExtType",
    "pandas_msgpack.packers._check_blosc",
    "pandas_msgpack.packers._check_zlib",
    "pandas_msgpack.packers.blosc",
    "pandas_msgpack.packers.warnings",
    "pandas_msgpack.packers.zlib"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.unpack": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas_msgpack.msgpack.ExtType",
    "pandas_msgpack.msgpack.Unpacker",
    "pandas_msgpack.packers.decode"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.packers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas_msgpack.packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas_msgpack.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_msgpack.pv": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas_msgpack.tests": {
  "data": {},
  "type": "module"
 },
 "pandas_msgpack.tests.test_packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "pandas_msgpack.tests.test_packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.TestAPI": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "pandas.util.testing.assertRaises",
    "pandas_msgpack.read_msgpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg.A": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg.A.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_iterator_with_string_io": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas_msgpack.read_msgpack",
    "pandas_msgpack.to_msgpack",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_string_io": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas_msgpack.read_msgpack",
    "pandas_msgpack.to_msgpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_datetimes": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.datetime64",
    "pandas_msgpack.tests.test_packers.datetime",
    "pandas_msgpack.tests.test_packers.pytest",
    "pandas_msgpack.tests.test_packers.sys"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_nat": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_timedeltas": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas_msgpack.tests.test_packers.datetime"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_timestamp": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical.setUp": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas_msgpack.tests.test_packers.TestCategorical",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical.test_basic": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.util.testing.assert_categorical_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "globals",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.core.common.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.patch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches.decompress": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "bytearray",
    "real_decompress"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_small_strings_no_warn": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.array",
    "ord",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.setUp": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "list",
    "numpy.arange",
    "numpy.float64",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas_msgpack.tests.test_packers.TestCompression",
    "pandas_msgpack.tests.test_packers.datetime",
    "range",
    "sqlalchemy.create_engine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_blosc": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_blosc": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_zlib": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._ZLIB_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_zlib": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._ZLIB_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_plain": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_blosc": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_blosc_to_sql": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED",
    "pandas_msgpack.tests.test_packers.pandas",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_zlib": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_zlib_to_sql": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas_msgpack.tests.test_packers._ZLIB_INSTALLED",
    "pandas_msgpack.tests.test_packers.pandas",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_small_strings_no_warn_blosc": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_small_strings_no_warn_zlib": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers._ZLIB_INSTALLED",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.setUp": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.arange",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas_msgpack.tests.test_packers.TestEncoding",
    "pandas_msgpack.tests.test_packers.datetime",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.test_default_encoding": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.test_utf": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.categorical_index": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.setUp": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.bdate_range",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas_msgpack.tests.test_packers.TestIndex",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_basic_index": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_multi_index": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_unicode": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.check_min_structure": {
  "data": {
   "lineno": 845
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "KeyError",
    "comparator",
    "distutils.version.LooseVersion",
    "getattr",
    "pandas_msgpack.read_msgpack",
    "pandas_msgpack.tests.test_packers.check_arbitrary"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare_frame_dt_mixed_tzs": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare_series_dt_tz": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.test_msgpacks_legacy": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.PY3",
    "pandas.util.testing.get_data_path",
    "pandas_msgpack.tests.test_packers.all_packers_data",
    "pandas_msgpack.tests.test_packers.current_packers_data",
    "pandas_msgpack.tests.test_packers.legacy_packers_versions",
    "pandas_msgpack.tests.test_packers.os",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.setUp": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas_msgpack.tests.test_packers.TestNDFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_basic_frame": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_basic_panel": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_dataframe_duplicate_column_names": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_iterator": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.ensure_clean",
    "pandas_msgpack.read_msgpack",
    "pandas_msgpack.tests.test_packers.check_arbitrary",
    "pandas_msgpack.to_msgpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_multi": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas_msgpack.tests.test_packers.check_arbitrary",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.tests_datetimeindex_freq_issue": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_complex": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_float": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_numpy_complex": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.complex128",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_numpy_float": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_float": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_float_complex": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_mixed": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.float32",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_numpy_float": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_numpy_float_complex": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "hasattr",
    "numpy",
    "numpy.allclose",
    "numpy.complex128",
    "numpy.float32",
    "numpy.random.rand",
    "pandas_msgpack.tests.test_packers.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_array_complex": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "all",
    "map",
    "numpy.complex128",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_array_float": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_scalar_complex": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.complex64",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_scalar_float": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_scalar_complex": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_scalar_float": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.encode_decode": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.util.testing.ensure_clean",
    "pandas_msgpack.read_msgpack",
    "pandas_msgpack.to_msgpack"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.setUp": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.tearDown": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSeries": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestSeries.setUp": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.lib.iNaT",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas_msgpack.tests.test_packers.TestSeries",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSeries.test_basic": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.api.types.is_datetime64tz_dtype",
    "pandas.util.testing.assert_series_equal",
    "pandas_msgpack._is_pandas_legacy_version",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "pandas_msgpack.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestSparse._check_roundtrip": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse.test_sparse_frame": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse.test_sparse_series": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers._BLOSC_INSTALLED": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas_msgpack.tests.test_packers._ZLIB_INSTALLED": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas_msgpack.tests.test_packers._is_pandas_legacy_version": {
  "data": {
   "shadows": "pandas_msgpack._is_pandas_legacy_version"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.all_packers_data": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.tests.io.generate_legacy_storage_files.create_data",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.assert_categorical_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_categorical_equal"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.check_arbitrary": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Panel",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.create_data": {
  "data": {
   "shadows": "pandas.tests.io.generate_legacy_storage_files.create_data"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.create_msgpack_data": {
  "data": {
   "shadows": "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.current_packers_data": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data",
    "pandas_msgpack.tests.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.iNaT": {
  "data": {
   "shadows": "pandas.lib.iNaT"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.legacy_packers_versions": {
  "data": {
   "lineno": 815
  },
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.nan": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas_msgpack.tests.test_packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.patch": {
  "data": {
   "shadows": "pandas.util.testing.patch"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.read_msgpack": {
  "data": {
   "shadows": "pandas_msgpack.read_msgpack"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.to_msgpack": {
  "data": {
   "shadows": "pandas_msgpack.to_msgpack"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas_msgpack.tests.test_packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas_msgpack.versions": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 }
}