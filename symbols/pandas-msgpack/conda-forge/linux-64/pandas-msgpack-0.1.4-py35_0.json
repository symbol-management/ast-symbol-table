{
 "pandas_msgpack": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas",
   "pandas.__version__"
  ],
  "type": "module"
 },
 "pandas_msgpack._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_msgpack._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pandas_msgpack.msgpack": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack._unpacker.unpack",
   "pandas_msgpack.msgpack._unpacker.unpackb"
  ],
  "type": "module"
 },
 "pandas_msgpack.msgpack.ExtType": {
  "lineno": 9,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pandas_msgpack.msgpack.ExtType.__new__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.msgpack._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_msgpack.msgpack.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_msgpack.msgpack.exceptions.BufferFull": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.msgpack.exceptions.ExtraData.__str__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.msgpack.exceptions.OutOfData": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.PackException": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.PackValueError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.UnpackException": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.exceptions.UnpackValueError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.msgpack.pack": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack._packer.Packer"
  ],
  "type": "function"
 },
 "pandas_msgpack.msgpack.packb": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack._packer.Packer"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy",
   "numpy.dtype",
   "numpy.float128",
   "numpy.float32",
   "numpy.float64",
   "pandas.NaT",
   "pandas.compat.u",
   "textwrap.dedent"
  ],
  "type": "module"
 },
 "pandas_msgpack.packers.Iterator": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.packers.Iterator.__init__": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.packers.Iterator.__iter__": {
  "lineno": 759,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.BytesIO",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.Packer": {
  "lineno": 716,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.Packer"
  ],
  "type": "class"
 },
 "pandas_msgpack.packers.Packer.__init__": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.Packer"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.Unpacker": {
  "lineno": 732,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.Unpacker"
  ],
  "type": "class"
 },
 "pandas_msgpack.packers.Unpacker.__init__": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.ExtType",
   "pandas_msgpack.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers._check_blosc": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.packers._check_zlib": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.packers.c2f": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.typeDict"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.convert": {
  "lineno": 261,
  "symbols_in_volume": [
   "blosc.compress",
   "numpy.object_",
   "pandas.types.common.is_categorical_dtype",
   "pandas.types.common.is_object_dtype",
   "pandas.types.common.needs_i8_conversion",
   "pandas_msgpack.msgpack.ExtType",
   "zlib.compress"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.decode": {
  "lineno": 543,
  "symbols_in_volume": [
   "datetime.timedelta",
   "dateutil.parser.parse",
   "numpy.datetime64",
   "numpy.int64",
   "numpy.timedelta64",
   "numpy.typeDict",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.core.internals.BlockManager",
   "pandas.types.common.pandas_dtype",
   "pandas_msgpack._is_pandas_legacy_version"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.decode.create_block": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.core.internals",
   "pandas.core.internals._safe_reshape",
   "pandas.core.internals.make_block"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.dtype_for": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.typeDict.get"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.encode": {
  "lineno": 357,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.iscomplexobj",
   "numpy.ndarray",
   "numpy.number",
   "numpy.timedelta64",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.u",
   "pandas.compat.u_safe",
   "pandas.core.generic.NDFrame",
   "pandas.sparse.api.SparseDataFrame",
   "pandas.sparse.api.SparseSeries",
   "pandas.sparse.array.BlockIndex",
   "pandas.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.pack": {
  "lineno": 684,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.Packer"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.read_msgpack": {
  "lineno": 163,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.BytesIO",
   "pandas.compat.binary_type",
   "pandas.compat.callable",
   "pandas.compat.string_types",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.read_msgpack.read": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.packers.to_msgpack": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.string_types",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.to_msgpack.writer": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.packers.unconvert": {
  "lineno": 302,
  "symbols_in_volume": [
   "blosc.decompress",
   "numpy.array",
   "numpy.frombuffer",
   "numpy.fromstring",
   "pandas.core.common.PerformanceWarning",
   "pandas.types.common.is_categorical_dtype",
   "pandas.types.common.is_object_dtype",
   "pandas.types.common.pandas_dtype",
   "pandas_msgpack._move.BadMove",
   "pandas_msgpack._move.move_into_mutable_buffer",
   "pandas_msgpack.msgpack.ExtType",
   "warnings.warn",
   "zlib.decompress"
  ],
  "type": "function"
 },
 "pandas_msgpack.packers.unpack": {
  "lineno": 698,
  "symbols_in_volume": [
   "pandas_msgpack.msgpack.ExtType",
   "pandas_msgpack.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_msgpack.tests.test_packers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "module"
 },
 "pandas_msgpack.tests.test_packers.TestAPI": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_msgpack.read_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg.A": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_invalid_arg.A.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_iterator_with_string_io": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_msgpack.read_msgpack",
   "pandas_msgpack.to_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestAPI.test_string_io": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas_msgpack.read_msgpack",
   "pandas_msgpack.to_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_datetimes": {
  "lineno": 279,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "distutils.version.LooseVersion",
   "numpy.datetime64",
   "pytest.skip",
   "sys.version"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_nat": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_timedeltas": {
  "lineno": 293,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestBasic.test_timestamp": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical.setUp": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCategorical.test_basic": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.timedelta64",
   "pandas.core.common.PerformanceWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.patch"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches.decompress": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression._test_small_strings_no_warn": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.setUp": {
  "lineno": 586,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.arange",
   "numpy.float64",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.date_range",
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_blosc": {
  "lineno": 629,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_blosc": {
  "lineno": 693,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_zlib": {
  "lineno": 688,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_compression_zlib": {
  "lineno": 624,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_plain": {
  "lineno": 609,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_blosc": {
  "lineno": 735,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_blosc_to_sql": {
  "lineno": 751,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_zlib": {
  "lineno": 744,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_readonly_axis_zlib_to_sql": {
  "lineno": 765,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_small_strings_no_warn_blosc": {
  "lineno": 730,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestCompression.test_small_strings_no_warn_zlib": {
  "lineno": 725,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.setUp": {
  "lineno": 782,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.arange",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.test_default_encoding": {
  "lineno": 806,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestEncoding.test_utf": {
  "lineno": 799,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.categorical_index": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.setUp": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.bdate_range",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeRangeIndex",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_basic_index": {
  "lineno": 328,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_multi_index": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestIndex.test_unicode": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.check_min_structure": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare": {
  "lineno": 852,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas_msgpack.read_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare_frame_dt_mixed_tzs": {
  "lineno": 891,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.compare_series_dt_tz": {
  "lineno": 882,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestMsgpack.test_msgpacks_legacy": {
  "lineno": 900,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "pandas.compat.PY3",
   "pandas.util.testing.get_data_path",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.setUp": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_basic_frame": {
  "lineno": 468,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_basic_panel": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_dataframe_duplicate_column_names": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_iterator": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.util.testing.ensure_clean",
   "pandas_msgpack.read_msgpack",
   "pandas_msgpack.to_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.test_multi": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNDFrame.tests_datetimeindex_freq_issue": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_complex": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_float": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_numpy_complex": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.complex128"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_dict_numpy_float": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_float": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_float_complex": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_mixed": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.float32",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_numpy_float": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_list_numpy_float_complex": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy",
   "numpy.allclose",
   "numpy.complex128",
   "numpy.float32",
   "numpy.random.rand",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_array_complex": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_array_float": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_scalar_complex": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.complex64",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_numpy_scalar_float": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_scalar_complex": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestNumpy.test_scalar_float": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.encode_decode": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.util.testing.ensure_clean",
   "pandas_msgpack.read_msgpack",
   "pandas_msgpack.to_msgpack"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.setUp": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestPackers.tearDown": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSeries": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestSeries.setUp": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.lib.iNaT",
   "pandas.util.testing.makeObjectSeries",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSeries.test_basic": {
  "lineno": 404,
  "symbols_in_volume": [
   "pandas.api.types.is_datetime64tz_dtype",
   "pandas.util.testing.assert_series_equal",
   "pandas_msgpack._is_pandas_legacy_version"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_msgpack.tests.test_packers.TestSparse._check_roundtrip": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse.test_sparse_frame": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.TestSparse.test_sparse_series": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.all_packers_data": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.tests.io.generate_legacy_storage_files.create_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.check_arbitrary": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Panel",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.current_packers_data": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_msgpack.tests.test_packers.legacy_packers_versions": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 }
}