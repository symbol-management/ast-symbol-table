{
 "reciprocalspaceship": {
  "lineno": null,
  "symbols_in_volume": [
   "getVersionNumber"
  ],
  "type": "module"
 },
 "reciprocalspaceship.algorithms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.algorithms.merge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.algorithms.merge.merge": {
  "lineno": 3,
  "symbols_in_volume": [
   "ValueError",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "reciprocalspaceship.algorithms.scale_merged_intensities": {
  "lineno": null,
  "symbols_in_volume": [
   "IPython.embed",
   "__name__",
   "reciprocalspaceship.read_mtz",
   "scale_merged_intensities",
   "sys.argv"
  ],
  "type": "module"
 },
 "reciprocalspaceship.algorithms.scale_merged_intensities._french_wilson_posterior_quad": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.expand_dims",
   "numpy.float64",
   "numpy.inf",
   "numpy.log",
   "numpy.maximum",
   "numpy.nan_to_num",
   "numpy.polynomial.chebyshev.chebgauss",
   "numpy.sqrt",
   "numpy.where",
   "scipy.special.logsumexp",
   "scipy.stats.gamma.logpdf",
   "scipy.stats.norm.logpdf"
  ],
  "type": "function"
 },
 "reciprocalspaceship.algorithms.scale_merged_intensities.mean_intensity_by_miller_index": {
  "lineno": 84,
  "symbols_in_volume": [
   "len",
   "numpy.array",
   "numpy.exp",
   "numpy.float32",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "reciprocalspaceship.algorithms.scale_merged_intensities.mean_intensity_by_resolution": {
  "lineno": 114,
  "symbols_in_volume": [
   "int",
   "numpy.array",
   "numpy.exp",
   "numpy.float64",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "reciprocalspaceship.algorithms.scale_merged_intensities.scale_merged_intensities": {
  "lineno": 162,
  "symbols_in_volume": [
   "ValueError",
   "_french_wilson_posterior_quad",
   "mean_intensity_by_miller_index",
   "mean_intensity_by_resolution",
   "numpy.float64",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.commandline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.commandline.mtzdump": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "main"
  ],
  "type": "module"
 },
 "reciprocalspaceship.commandline.mtzdump.main": {
  "lineno": 64,
  "symbols_in_volume": [
   "IPython.embed",
   "dict",
   "len",
   "locals",
   "map",
   "parse_arguments",
   "print",
   "reciprocalspaceship.read_mtz",
   "summarize",
   "zip"
  ],
  "type": "function"
 },
 "reciprocalspaceship.commandline.mtzdump.parse_arguments": {
  "lineno": 34,
  "symbols_in_volume": [
   "__doc__",
   "argparse.ArgumentParser",
   "argparse.RawTextHelpFormatter",
   "int"
  ],
  "type": "function"
 },
 "reciprocalspaceship.commandline.mtzdump.summarize": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.option_context",
   "print"
  ],
  "type": "function"
 },
 "reciprocalspaceship.concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.concat.concat": {
  "lineno": 4,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "pandas.RangeIndex",
   "pandas.concat",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dataseries.DataSeries": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dataseries.DataSeries._constructor": {
  "lineno": 36,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataseries.DataSeries._constructor_expanddim": {
  "lineno": 40,
  "symbols_in_volume": [
   "property",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataseries.DataSeries.from_friedel_dtype": {
  "lineno": 100,
  "symbols_in_volume": [
   "isinstance",
   "reciprocalspaceship.FriedelIntensityDtype",
   "reciprocalspaceship.FriedelStructureFactorAmplitudeDtype",
   "reciprocalspaceship.IntensityDtype",
   "reciprocalspaceship.StandardDeviationDtype",
   "reciprocalspaceship.StandardDeviationFriedelIDtype",
   "reciprocalspaceship.StandardDeviationFriedelSFDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataseries.DataSeries.infer_mtz_dtype": {
  "lineno": 154,
  "symbols_in_volume": [
   "reciprocalspaceship.dtypes.inference.infer_mtz_dtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataseries.DataSeries.to_friedel_dtype": {
  "lineno": 44,
  "symbols_in_volume": [
   "isinstance",
   "reciprocalspaceship.FriedelIntensityDtype",
   "reciprocalspaceship.FriedelStructureFactorAmplitudeDtype",
   "reciprocalspaceship.IntensityDtype",
   "reciprocalspaceship.StandardDeviationDtype",
   "reciprocalspaceship.StandardDeviationFriedelIDtype",
   "reciprocalspaceship.StandardDeviationFriedelSFDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dataset.DataSet": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dataset.DataSet.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "gemmi.Mtz",
   "isinstance",
   "reciprocalspaceship.io.from_gemmi",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet._constructor": {
  "lineno": 114,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet._constructor_sliced": {
  "lineno": 118,
  "symbols_in_volume": [
   "property",
   "reciprocalspaceship.dataseries.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet._index_from_names": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.acentrics": {
  "lineno": 168,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.append": {
  "lineno": 396,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "list",
   "pandas.RangeIndex",
   "super",
   "tuple"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.apply_symop": {
  "lineno": 564,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.Op",
   "isinstance",
   "numpy.conjugate",
   "numpy.exp",
   "numpy.rad2deg",
   "reciprocalspaceship.HKLIndexDtype",
   "reciprocalspaceship.utils.apply_to_hkl",
   "reciprocalspaceship.utils.canonicalize_phases",
   "reciprocalspaceship.utils.phase_shift",
   "str"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.assign_resolution_bins": {
  "lineno": 723,
  "symbols_in_volume": [
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.utils.bin_by_percentile"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.canonicalize_phases": {
  "lineno": 1126,
  "symbols_in_volume": [
   "reciprocalspaceship.utils.canonicalize_phases"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.cell": {
  "lineno": 142,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.UnitCell",
   "isinstance",
   "len",
   "list",
   "numpy.ndarray",
   "tuple"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.centrics": {
  "lineno": 161,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.compute_dHKL": {
  "lineno": 690,
  "symbols_in_volume": [
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.utils.compute_dHKL"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.compute_multiplicity": {
  "lineno": 705,
  "symbols_in_volume": [
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.utils.compute_structurefactor_multiplicity"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.expand_anomalous": {
  "lineno": 1113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.expand_to_p1": {
  "lineno": 1093,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "reciprocalspaceship.concat"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.from_gemmi": {
  "lineno": 301,
  "symbols_in_volume": [
   "classmethod",
   "cls"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.from_structurefactor": {
  "lineno": 374,
  "symbols_in_volume": [
   "reciprocalspaceship.utils.from_structurefactor"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.get_complex_keys": {
  "lineno": 540,
  "symbols_in_volume": [
   "pandas.api.types.is_complex_dtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.get_hkls": {
  "lineno": 610,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.get_m_isym_keys": {
  "lineno": 552,
  "symbols_in_volume": [
   "isinstance",
   "reciprocalspaceship.M_IsymDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.get_phase_keys": {
  "lineno": 528,
  "symbols_in_volume": [
   "isinstance",
   "reciprocalspaceship.PhaseDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.hkl_to_asu": {
  "lineno": 957,
  "symbols_in_volume": [
   "numpy.unique",
   "reciprocalspaceship.dataseries.DataSeries",
   "reciprocalspaceship.utils.hkl_to_asu"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.hkl_to_observed": {
  "lineno": 1022,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "isinstance",
   "len",
   "numpy.concatenate",
   "numpy.int32",
   "numpy.unique",
   "reciprocalspaceship.M_IsymDtype",
   "reciprocalspaceship.utils.hkl_to_observed",
   "str"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.infer_mtz_dtypes": {
  "lineno": 650,
  "symbols_in_volume": [
   "filter",
   "list"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.is_isomorphous": {
  "lineno": 915,
  "symbols_in_volume": [
   "AttributeError",
   "gemmi.SpaceGroup",
   "gemmi.UnitCell",
   "isinstance",
   "numpy.abs"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.join": {
  "lineno": 470,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "list",
   "super",
   "tuple"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.label_absences": {
  "lineno": 636,
  "symbols_in_volume": [
   "reciprocalspaceship.utils.is_absent"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.label_centrics": {
  "lineno": 622,
  "symbols_in_volume": [
   "reciprocalspaceship.utils.is_centric"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.merge": {
  "lineno": 440,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.merged": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.reset_index": {
  "lineno": 240,
  "symbols_in_volume": [
   "_handle_cached_dtypes",
   "list",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.reset_index._handle_cached_dtypes": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.set_index": {
  "lineno": 190,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "list",
   "numpy.ndarray",
   "pandas.Index",
   "pandas.Series",
   "str",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.spacegroup": {
  "lineno": 127,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "int",
   "isinstance",
   "str"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.stack_anomalous": {
  "lineno": 752,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "gemmi.Op",
   "isinstance",
   "len",
   "list",
   "str",
   "type",
   "zip"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.to_gemmi": {
  "lineno": 326,
  "symbols_in_volume": [
   "reciprocalspaceship.io.to_gemmi"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.to_reciprocalgrid": {
  "lineno": 1147,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.to_structurefactor": {
  "lineno": 350,
  "symbols_in_volume": [
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.utils.to_structurefactor"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.unstack_anomalous": {
  "lineno": 839,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "len",
   "list",
   "set",
   "str",
   "tuple",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.DataSet.write_mtz": {
  "lineno": 506,
  "symbols_in_volume": [
   "reciprocalspaceship.io.write_mtz"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.inplace": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.inplace.wrapped": {
  "lineno": 30,
  "symbols_in_volume": [
   "KeyError",
   "f",
   "functools.wraps",
   "inspect.signature"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dataset.range_indexed": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dataset.range_indexed.wrapped": {
  "lineno": 54,
  "symbols_in_volume": [
   "f",
   "functools.wraps"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.dtypes.base.registry.dtypes"
  ],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.anomalousdifference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.anomalousdifference.AnomalousDifferenceArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "AnomalousDifferenceDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.anomalousdifference.AnomalousDifferenceDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.anomalousdifference.AnomalousDifferenceDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.base.MTZDtype": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.api.extensions.ExtensionDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.base.MTZDtype.construct_from_string": {
  "lineno": 22,
  "symbols_in_volume": [
   "TypeError",
   "classmethod",
   "cls",
   "isinstance",
   "str",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZInt32Dtype": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.Int32Dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.base.MTZInt32Dtype.__repr__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZInt32Dtype._get_common_dtype": {
  "lineno": 33,
  "symbols_in_volume": [
   "len",
   "pandas.Int32Dtype",
   "set",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.core.arrays.integer.IntegerArray"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray._from_factorized": {
  "lineno": 54,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "pandas.core.arrays.integer.coerce_to_array"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray._from_sequence": {
  "lineno": 49,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "pandas.core.arrays.integer.coerce_to_array"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray.dtype": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray.reshape": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray.to_numpy": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.int32",
   "object",
   "pandas._libs.lib.no_default",
   "pandas._libs.missing.NA"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.MTZIntegerArray.value_counts": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.concatenate",
   "object",
   "pandas.Index",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.api.extensions.ExtensionArray",
   "pandas.api.extensions.ExtensionScalarOpsMixin"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__array__": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__getitem__": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas._libs.lib.is_scalar",
   "pandas.core.indexers.check_array_indexer",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__init__": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__iter__": {
  "lineno": 307,
  "symbols_in_volume": [
   "iter"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__len__": {
  "lineno": 213,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.__setitem__": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.lib.is_scalar",
   "pandas.core.construction.extract_array",
   "pandas.core.indexers.check_array_indexer"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._box_scalar": {
  "lineno": 260,
  "symbols_in_volume": [
   "staticmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._coerce_to_ndarray": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._concat_same_type": {
  "lineno": 295,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._formatter": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._formatter.fmt": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.isnan",
   "str"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._from_factorized": {
  "lineno": 197,
  "symbols_in_volume": [
   "classmethod",
   "cls"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._from_ndarray": {
  "lineno": 201,
  "symbols_in_volume": [
   "classmethod",
   "cls"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._from_sequence": {
  "lineno": 188,
  "symbols_in_volume": [
   "classmethod",
   "cls"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._from_sequence_of_strings": {
  "lineno": 192,
  "symbols_in_volume": [
   "classmethod",
   "cls._from_sequence",
   "pandas.core.tools.numeric.to_numeric"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray._reduce": {
  "lineno": 310,
  "symbols_in_volume": [
   "getattr",
   "op",
   "pandas.core.nanops"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.astype": {
  "lineno": 264,
  "symbols_in_volume": [
   "isinstance",
   "pandas.core.dtypes.common.is_dtype_equal",
   "super"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.copy": {
  "lineno": 238,
  "symbols_in_volume": [
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.dtype": {
  "lineno": 184,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.isna": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.na_value": {
  "lineno": 209,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.nbytes": {
  "lineno": 224,
  "symbols_in_volume": [
   "len",
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.reshape": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.shape": {
  "lineno": 205,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.take": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.api.extensions.take",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.tolist": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.unique": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyExtensionArray.value_counts": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.concatenate",
   "numpy.isnan",
   "object",
   "pandas.Index",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyFloat32ExtensionDtype": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "type"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.base.NumpyFloat32ExtensionDtype._is_numeric": {
  "lineno": 157,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyFloat32ExtensionDtype.itemsize": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.base.NumpyFloat32ExtensionDtype.numpy_dtype": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.batch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.batch.BatchArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "BatchDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.batch.BatchDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.batch.BatchDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.hklindex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.hklindex.HKLIndexArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "HKLIndexDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.hklindex.HKLIndexDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.hklindex.HKLIndexDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.inference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.inference.infer_mtz_dtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "any",
   "isinstance",
   "pandas.api.types.is_float_dtype",
   "pandas.api.types.is_integer_dtype",
   "pandas.api.types.is_object_dtype",
   "reciprocalspaceship.dtypes.base.MTZDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.intensity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.intensity.FriedelIntensityArray": {
  "lineno": 29,
  "symbols_in_volume": [
   "FriedelIntensityDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.intensity.FriedelIntensityDtype": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.intensity.FriedelIntensityDtype.construct_array_type": {
  "lineno": 25,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.intensity.IntensityArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "IntensityDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.intensity.IntensityDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.intensity.IntensityDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.m_isym": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.m_isym.M_IsymArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "M_IsymDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.m_isym.M_IsymDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.m_isym.M_IsymDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.mtzint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.mtzint.MTZIntArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "MTZIntDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.mtzint.MTZIntDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.mtzint.MTZIntDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.mtzreal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.mtzreal.MTZRealArray": {
  "lineno": 15,
  "symbols_in_volume": [
   "MTZRealDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.mtzreal.MTZRealDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.mtzreal.MTZRealDtype.construct_array_type": {
  "lineno": 11,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.phase": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.phase.HendricksonLattmanArray": {
  "lineno": 32,
  "symbols_in_volume": [
   "HendricksonLattmanDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.phase.HendricksonLattmanDtype": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.phase.HendricksonLattmanDtype.construct_array_type": {
  "lineno": 28,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.phase.PhaseArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "PhaseDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.phase.PhaseDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.phase.PhaseDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.stddev": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "StandardDeviationDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelIArray": {
  "lineno": 44,
  "symbols_in_volume": [
   "StandardDeviationFriedelIDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelIDtype": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelIDtype.construct_array_type": {
  "lineno": 40,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelSFArray": {
  "lineno": 29,
  "symbols_in_volume": [
   "StandardDeviationFriedelSFDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelSFDtype": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.stddev.StandardDeviationFriedelSFDtype.construct_array_type": {
  "lineno": 25,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.structurefactor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.structurefactor.FriedelStructureFactorAmplitudeArray": {
  "lineno": 32,
  "symbols_in_volume": [
   "FriedelStructureFactorAmplitudeDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.FriedelStructureFactorAmplitudeDtype": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.FriedelStructureFactorAmplitudeDtype.construct_array_type": {
  "lineno": 28,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.structurefactor.NormalizedStructureFactorAmplitudeArray": {
  "lineno": 47,
  "symbols_in_volume": [
   "NormalizedStructureFactorAmplitudeDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.NormalizedStructureFactorAmplitudeDtype": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.NormalizedStructureFactorAmplitudeDtype.construct_array_type": {
  "lineno": 43,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.structurefactor.StructureFactorAmplitudeArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "StructureFactorAmplitudeDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.StructureFactorAmplitudeDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.structurefactor.StructureFactorAmplitudeDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.summarize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.summarize.summarize_mtz_dtypes": {
  "lineno": 5,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.isclass",
   "pandas.DataFrame",
   "print",
   "reciprocalspaceship.dtypes"
  ],
  "type": "function"
 },
 "reciprocalspaceship.dtypes.weight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.dtypes.weight.WeightArray": {
  "lineno": 14,
  "symbols_in_volume": [
   "WeightDtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.weight.WeightDtype": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.register_extension_dtype"
  ],
  "type": "class"
 },
 "reciprocalspaceship.dtypes.weight.WeightDtype.construct_array_type": {
  "lineno": 10,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "reciprocalspaceship.getVersionNumber": {
  "lineno": 2,
  "symbols_in_volume": [
   "pkg_resources.require"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.io.ccp4map": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.io.ccp4map.write_ccp4_map": {
  "lineno": 4,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.Ccp4Map",
   "gemmi.FloatGrid",
   "isinstance",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.csv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.io.csv.read_csv": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.read_csv",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.mtz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.io.mtz.from_gemmi": {
  "lineno": 7,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "len",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.mtz.read_mtz": {
  "lineno": 116,
  "symbols_in_volume": [
   "from_gemmi",
   "gemmi.read_mtz_file"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.mtz.to_gemmi": {
  "lineno": 55,
  "symbols_in_volume": [
   "AttributeError",
   "ValueError",
   "gemmi.Mtz",
   "isinstance",
   "reciprocalspaceship.dtypes.base.MTZDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.mtz.write_mtz": {
  "lineno": 142,
  "symbols_in_volume": [
   "to_gemmi"
  ],
  "type": "function"
 },
 "reciprocalspaceship.io.precognition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.io.precognition.read_precognition": {
  "lineno": 5,
  "symbols_in_volume": [
   "ValueError",
   "enumerate",
   "float",
   "gemmi.SpaceGroup",
   "gemmi.UnitCell",
   "len",
   "map",
   "open",
   "os.path.basename",
   "pandas.read_csv",
   "range",
   "reciprocalspaceship.DataSet",
   "zip"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.asu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.asu.hkl_to_asu": {
  "lineno": 53,
  "symbols_in_volume": [
   "enumerate",
   "in_asu",
   "int",
   "len",
   "numpy.argwhere",
   "numpy.cumsum",
   "numpy.ones",
   "numpy.rad2deg",
   "numpy.vstack",
   "numpy.zeros",
   "range",
   "reciprocalspaceship.utils.apply_to_hkl",
   "reciprocalspaceship.utils.phase_shift"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.asu.hkl_to_observed": {
  "lineno": 122,
  "symbols_in_volume": [
   "enumerate",
   "int",
   "len",
   "numpy.array",
   "numpy.float32",
   "numpy.rad2deg",
   "numpy.zeros",
   "numpy.zeros_like",
   "reciprocalspaceship.utils.apply_to_hkl",
   "reciprocalspaceship.utils.phase_shift"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.asu.in_asu": {
  "lineno": 29,
  "symbols_in_volume": [
   "enumerate",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.binning.bin_by_percentile": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.digitize",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.where",
   "zip"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.cell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.cell.compute_dHKL": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.inv",
   "numpy.linalg.norm",
   "numpy.unique"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.phases": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.phases.canonicalize_phases": {
  "lineno": 4,
  "symbols_in_volume": [
   "TypeError",
   "numpy.pi",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.phases.get_phase_restrictions": {
  "lineno": 16,
  "symbols_in_volume": [
   "canonicalize_phases",
   "gemmi.Op",
   "numpy.array",
   "numpy.rad2deg",
   "reciprocalspaceship.utils.structurefactors.is_absent",
   "reciprocalspaceship.utils.structurefactors.is_centric"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.rfree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.rfree.add_rfree": {
  "lineno": 5,
  "symbols_in_volume": [
   "len",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.random.random",
   "numpy.vstack",
   "range",
   "reciprocalspaceship.dtypes.MTZIntDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.rfree.copy_rfree": {
  "lineno": 49,
  "symbols_in_volume": [
   "reciprocalspaceship.dtypes.MTZIntDtype"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.structurefactors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.structurefactors.compute_structurefactor_multiplicity": {
  "lineno": 51,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.GroupOps",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "numpy.all",
   "numpy.zeros",
   "reciprocalspaceship.utils.apply_to_hkl",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.structurefactors.from_structurefactor": {
  "lineno": 28,
  "symbols_in_volume": [
   "isinstance",
   "numpy.abs",
   "numpy.angle",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.structurefactors.is_absent": {
  "lineno": 125,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.GroupOps",
   "gemmi.SpaceGroup",
   "isinstance",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.structurefactors.is_centric": {
  "lineno": 97,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.GroupOps",
   "gemmi.SpaceGroup",
   "isinstance",
   "numpy.unique",
   "type"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.structurefactors.to_structurefactor": {
  "lineno": 5,
  "symbols_in_volume": [
   "isinstance",
   "numpy.deg2rad",
   "numpy.exp",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.symop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "reciprocalspaceship.utils.symop.apply_to_hkl": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.floor_divide",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "reciprocalspaceship.utils.symop.phase_shift": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.matmul",
   "numpy.pi"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "reciprocalspaceship.AnomalousDifferenceDtype",
   "reciprocalspaceship.BatchDtype",
   "reciprocalspaceship.FriedelIntensityDtype",
   "reciprocalspaceship.FriedelStructureFactorAmplitudeDtype",
   "reciprocalspaceship.HKLIndexDtype",
   "reciprocalspaceship.HendricksonLattmanDtype",
   "reciprocalspaceship.IntensityDtype",
   "reciprocalspaceship.MTZIntDtype",
   "reciprocalspaceship.MTZRealDtype",
   "reciprocalspaceship.M_IsymDtype",
   "reciprocalspaceship.NormalizedStructureFactorAmplitudeDtype",
   "reciprocalspaceship.PhaseDtype",
   "reciprocalspaceship.StandardDeviationDtype",
   "reciprocalspaceship.StandardDeviationFriedelIDtype",
   "reciprocalspaceship.StandardDeviationFriedelSFDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype",
   "reciprocalspaceship.WeightDtype"
  ],
  "type": "module"
 },
 "tests.conftest.data_fmodel": {
  "lineno": 64,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.data_fmodel_P1": {
  "lineno": 72,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.data_gemmi": {
  "lineno": 56,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.data_hewl": {
  "lineno": 48,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.data_merged": {
  "lineno": 32,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.data_unmerged": {
  "lineno": 40,
  "symbols_in_volume": [
   "load_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.dataset_hkl": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.mgrid.reshape",
   "pytest.fixture",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.conftest.dtype_all": {
  "lineno": 126,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.dtype_floats": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.dtype_ints": {
  "lineno": 118,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.get_mtz_by_spacegroup": {
  "lineno": 80,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "re.match"
  ],
  "type": "function"
 },
 "tests.conftest.load_dataset": {
  "lineno": 21,
  "symbols_in_volume": [
   "gemmi.read_mtz_file",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.conftest.mtz_by_spacegroup": {
  "lineno": 90,
  "symbols_in_volume": [
   "get_mtz_by_spacegroup",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_dataseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataseries.test_constructor": {
  "lineno": 5,
  "symbols_in_volume": [
   "float",
   "isinstance",
   "len",
   "numpy.array",
   "numpy.array_equal",
   "numpy.linspace",
   "object",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.PhaseDtype"
  ],
  "type": "function"
 },
 "tests.test_dataseries.test_constructor_expanddim": {
  "lineno": 27,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "numpy.linspace",
   "object",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.DataSet",
   "reciprocalspaceship.PhaseDtype",
   "type"
  ],
  "type": "function"
 },
 "tests.test_dataseries.test_from_friedel_dtype": {
  "lineno": 68,
  "symbols_in_volume": [
   "isinstance",
   "numpy.arange",
   "numpy.array_equal",
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.FriedelIntensityDtype",
   "reciprocalspaceship.FriedelStructureFactorAmplitudeDtype",
   "reciprocalspaceship.IntensityDtype",
   "reciprocalspaceship.StandardDeviationDtype",
   "reciprocalspaceship.StandardDeviationFriedelIDtype",
   "reciprocalspaceship.StandardDeviationFriedelSFDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype"
  ],
  "type": "function"
 },
 "tests.test_dataseries.test_to_friedel_dtype": {
  "lineno": 48,
  "symbols_in_volume": [
   "isinstance",
   "numpy.arange",
   "numpy.array_equal",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.FriedelIntensityDtype",
   "reciprocalspaceship.FriedelStructureFactorAmplitudeDtype",
   "reciprocalspaceship.IntensityDtype",
   "reciprocalspaceship.StandardDeviationDtype",
   "reciprocalspaceship.StandardDeviationFriedelIDtype",
   "reciprocalspaceship.StandardDeviationFriedelSFDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype"
  ],
  "type": "function"
 },
 "tests.test_dataset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset.test_acentrics": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_apply_symop_hkl": {
  "lineno": 377,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.Op",
   "id",
   "isinstance",
   "numpy.array",
   "numpy.array_equal",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.HKLIndexDtype",
   "str"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_apply_symop_roundtrip": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.isclose",
   "reciprocalspaceship.read_mtz",
   "reciprocalspaceship.utils.to_structurefactor"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_assign_resolution_bins": {
  "lineno": 348,
  "symbols_in_volume": [
   "id",
   "len",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_canonicalize_phases": {
  "lineno": 508,
  "symbols_in_volume": [
   "id",
   "len",
   "numpy.allclose",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "reciprocalspaceship.utils.to_structurefactor"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_cell": {
  "lineno": 59,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.UnitCell",
   "isinstance",
   "numpy.array",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_centrics": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_compute_dHKL": {
  "lineno": 292,
  "symbols_in_volume": [
   "enumerate",
   "gemmi.UnitCell",
   "id",
   "isinstance",
   "len",
   "numpy.allclose",
   "numpy.float32",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "reciprocalspaceship.MTZRealDtype"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_compute_multiplicity": {
  "lineno": 317,
  "symbols_in_volume": [
   "enumerate",
   "gemmi.SpaceGroup",
   "id",
   "isinstance",
   "len",
   "numpy.all",
   "numpy.int32",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "reciprocalspaceship.MTZIntDtype"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_constructor_dataset": {
  "lineno": 16,
  "symbols_in_volume": [
   "gemmi.SpaceGroup",
   "gemmi.UnitCell",
   "isinstance",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_constructor_empty": {
  "lineno": 8,
  "symbols_in_volume": [
   "len",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_constructor_gemmi": {
  "lineno": 88,
  "symbols_in_volume": [
   "gemmi.SpaceGroup",
   "gemmi.UnitCell",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_from_gemmi": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "reciprocalspaceship.DataSet",
   "reciprocalspaceship.DataSet.from_gemmi"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_from_structurefactor": {
  "lineno": 115,
  "symbols_in_volume": [
   "isinstance",
   "numpy.allclose",
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.sin",
   "reciprocalspaceship.DataSeries",
   "reciprocalspaceship.PhaseDtype",
   "reciprocalspaceship.StructureFactorAmplitudeDtype"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_get_hkls": {
  "lineno": 177,
  "symbols_in_volume": [
   "isinstance",
   "numpy.array_equal",
   "numpy.int32"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_get_m_isym_keys": {
  "lineno": 165,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "list",
   "reciprocalspaceship.M_IsymDtype"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_get_phase_keys": {
  "lineno": 151,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_hkl_to_observed_2_m_isym": {
  "lineno": 477,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_hkl_to_observed_no_m_isym": {
  "lineno": 468,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_hkl_to_observed_phase": {
  "lineno": 452,
  "symbols_in_volume": [
   "gemmi.SpaceGroup",
   "numpy.allclose",
   "reciprocalspaceship.utils.to_structurefactor"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_hklmapping_roundtrip": {
  "lineno": 424,
  "symbols_in_volume": [
   "KeyError",
   "ValueError",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_infer_mtz_dtypes": {
  "lineno": 263,
  "symbols_in_volume": [
   "id",
   "object",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_infer_mtz_dtypes_rangeindex": {
  "lineno": 277,
  "symbols_in_volume": [
   "id",
   "object",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_is_isomorphous": {
  "lineno": 526,
  "symbols_in_volume": [
   "AttributeError",
   "gemmi.SpaceGroup",
   "gemmi.UnitCell",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_label_absences": {
  "lineno": 207,
  "symbols_in_volume": [
   "ValueError",
   "id",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_label_centrics": {
  "lineno": 185,
  "symbols_in_volume": [
   "ValueError",
   "id",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_spacegroup": {
  "lineno": 46,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "int",
   "isinstance",
   "pytest.mark.parametrize",
   "pytest.raises",
   "str"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_to_gemmi_roundtrip": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.array_equal",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSet.from_gemmi",
   "zip"
  ],
  "type": "function"
 },
 "tests.test_dataset.test_to_structurefactor": {
  "lineno": 105,
  "symbols_in_volume": [
   "isinstance",
   "numpy.allclose",
   "numpy.deg2rad",
   "numpy.exp",
   "reciprocalspaceship.DataSeries"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset_anomalous.test_roundtrip_merged": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_stack_anomalous": {
  "lineno": 6,
  "symbols_in_volume": [
   "check_ValueError",
   "isinstance",
   "len",
   "list",
   "pytest.mark.parametrize",
   "str",
   "zip"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_stack_anomalous.check_ValueError": {
  "lineno": 22,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_stack_anomalous_unmerged": {
  "lineno": 55,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_unstack_anomalous": {
  "lineno": 63,
  "symbols_in_volume": [
   "check_ValueError",
   "isinstance",
   "len",
   "list",
   "pytest.mark.parametrize",
   "reciprocalspaceship.utils.in_asu",
   "str",
   "tuple"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_unstack_anomalous.check_ValueError": {
  "lineno": 81,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset_anomalous.test_unstack_anomalous_unmerged": {
  "lineno": 106,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset_grid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset_grid.test_to_reciprocalgrid_complex": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pytest.mark.parametrize",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_dataset_grid.test_to_reciprocalgrid_float": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pytest.mark.parametrize",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_dataset_index": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset_index.test_reset_index": {
  "lineno": 6,
  "symbols_in_volume": [
   "id",
   "list",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_dataset_index.test_set_index_cache": {
  "lineno": 52,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "list",
   "numpy.arange",
   "numpy.ndarray",
   "pandas.Index",
   "pandas.Series",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSeries",
   "str",
   "sum"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset_preserve_attributes.test_append": {
  "lineno": 31,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_append_list": {
  "lineno": 56,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_concat": {
  "lineno": 5,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet",
   "reciprocalspaceship.concat"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_join": {
  "lineno": 104,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_join_list_dataseries": {
  "lineno": 152,
  "symbols_in_volume": [
   "enumerate",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "reciprocalspaceship.DataSet",
   "str"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_join_list_datasets": {
  "lineno": 127,
  "symbols_in_volume": [
   "ValueError",
   "enumerate",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet",
   "str"
  ],
  "type": "function"
 },
 "tests.test_dataset_preserve_attributes.test_merge": {
  "lineno": 82,
  "symbols_in_volume": [
   "ValueError",
   "gemmi.SpaceGroup",
   "isinstance",
   "len",
   "pytest.mark.parametrize",
   "pytest.raises",
   "reciprocalspaceship.DataSet"
  ],
  "type": "function"
 },
 "tests.test_dataset_symops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataset_symops.test_expand_anomalous": {
  "lineno": 94,
  "symbols_in_volume": [
   "len",
   "numpy.allclose",
   "numpy.array_equal",
   "numpy.conjugate",
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_dataset_symops.test_expand_to_p1": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.testing.assert_index_equal",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_dataset_symops.test_expand_to_p1_unmerged": {
  "lineno": 88,
  "symbols_in_volume": [
   "ValueError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_dataset_symops.test_hkl_to_asu": {
  "lineno": 6,
  "symbols_in_volume": [
   "float",
   "id",
   "len",
   "numpy.allclose",
   "numpy.deg2rad",
   "numpy.exp",
   "pytest.mark.parametrize",
   "reciprocalspaceship.read_mtz"
  ],
  "type": "function"
 },
 "tests.test_summarize_mtz_dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_summarize_mtz_dtypes.test_summarize_mtz_dtypes": {
  "lineno": 5,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "reciprocalspaceship.summarize_mtz_dtypes"
  ],
  "type": "function"
 }
}