{
 "*": {
  "data": {
   "imports": [
    "nipy.labs.mask"
   ]
  },
  "type": "star-import"
 },
 "nipy": {
  "data": {
   "symbols_in_volume": [
    "nipy._test_local_install",
    "nipy.os",
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.__config__": {
  "data": {},
  "type": "module"
 },
 "nipy.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "nipy.__config__.get_info": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "globals"
   ]
  },
  "type": "function"
 },
 "nipy.__config__.lapack_opt_info": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "nipy.__config__.nipy_info": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "nipy.__config__.openblas_lapack_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.__config__.show": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "globals",
    "len",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.__doc__": {
  "data": {
   "shadows": "LONG_DESCRIPTION"
  },
  "type": "import"
 },
 "nipy.__status__": {
  "data": {
   "shadows": "STATUS"
  },
  "type": "import"
 },
 "nipy.__url__": {
  "data": {
   "shadows": "URL"
  },
  "type": "import"
 },
 "nipy._get_pkg_info": {
  "data": {
   "shadows": "get_pkg_info"
  },
  "type": "import"
 },
 "nipy._test_local_install": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nipy.os",
    "nipy.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.__docformat__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "nipy.algorithms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.bench": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.clustering": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bench": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.clustering.bgmm": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.bgmm.BGMM": {
  "data": {
   "lineno": 349
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.__init__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.bayes_factor": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.generate_perm",
    "numpy.argsort",
    "numpy.array",
    "numpy.log",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.check": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.conditional_posterior_proba": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "enumerate",
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.dirichlet_eval",
    "nipy.algorithms.clustering.bgmm.normal_eval",
    "nipy.algorithms.clustering.bgmm.wishart_eval",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.reshape",
    "numpy.sum",
    "range",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.evidence": {
  "data": {
   "lineno": 813
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.guess_priors": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.math",
    "numpy.diag",
    "numpy.dot",
    "numpy.exp",
    "numpy.ones",
    "numpy.repeat",
    "numpy.reshape",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.initialize": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "kmeans",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.pop": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.probability_under_prior": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.dirichlet_eval",
    "nipy.algorithms.clustering.bgmm.normal_eval",
    "nipy.algorithms.clustering.bgmm.wishart_eval",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.sample": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.int",
    "numpy.log",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.sample_and_average": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.sample_indicator": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.multinomial"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.set_priors": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "numpy.array",
    "range",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.update": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.update_means": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.generate_normals",
    "numpy.reshape",
    "numpy.shape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.update_precisions": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.generate_Wishart",
    "numpy.dot",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.BGMM.update_weights": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.BGMM"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM._Estep": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.clustering.bgmm.detsh",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM._Mstep": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.maximum",
    "numpy.reshape",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.__init__": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.BGMM"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.estimate": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.evidence": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.dkl_dirichlet",
    "nipy.algorithms.clustering.bgmm.dkl_gaussian",
    "nipy.algorithms.clustering.bgmm.dkl_wishart",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.log",
    "numpy.maximum",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sum",
    "numpy.trace",
    "numpy.zeros",
    "print",
    "range",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.initialize": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "kmeans",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.likelihood": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.map_label": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.VBGMM.pop": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.detsh": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.prod",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.dirichlet_eval": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "numpy.exp",
    "numpy.log",
    "numpy.shape",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.dkl_dirichlet": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum",
    "scipy.special.gammaln",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.dkl_gaussian": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "nipy.algorithms.clustering.bgmm.detsh",
    "numpy.dot",
    "numpy.log",
    "numpy.size",
    "numpy.trace",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.dkl_wishart": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.math",
    "numpy.dot",
    "numpy.pi",
    "numpy.trace",
    "range",
    "scipy.linalg.inv",
    "scipy.special.gammaln",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.eigvalsh": {
  "data": {
   "shadows": "scipy.linalg.eigvalsh"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.generate_Wishart": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.chisquare",
    "numpy.random.randn",
    "numpy.sqrt",
    "range",
    "scipy.linalg.cholesky"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.generate_normals": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.randn",
    "scipy.linalg.cholesky",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.generate_perm": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.int",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.zeros",
    "range",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.multinomial": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.cumsum",
    "numpy.random.rand",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.normal_eval": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.math",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.bgmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.psi": {
  "data": {
   "shadows": "scipy.special.psi"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.bgmm.wishart_eval": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.bgmm.detsh",
    "nipy.algorithms.clustering.bgmm.math",
    "numpy.arange",
    "numpy.dot",
    "numpy.float",
    "numpy.trace",
    "scipy.linalg.inv",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.Estep": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.Mstep": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._gam_param",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.__init__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.component_likelihood": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._gam_dens",
    "nipy.algorithms.clustering.ggmixture._gaus_dens"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.estimate": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.maximum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.init": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pylab",
    "numpy.mean",
    "numpy.nonzero",
    "numpy.ravel",
    "numpy.size",
    "numpy.sum",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.init_fdr": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "fdr",
    "nipy.algorithms.clustering.ggmixture._gam_param",
    "numpy.maximum",
    "numpy.nonzero",
    "numpy.ravel",
    "numpy.size",
    "scipy.stats.norm.cdf",
    "scipy.stats.norm.sf",
    "scipy.stats.t.cdf",
    "scipy.stats.t.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.parameters": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.posterior": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGGM.show": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "int",
    "matplotlib.pylab.figure",
    "matplotlib.pylab.subplot",
    "max",
    "nipy.algorithms.clustering.ggmixture._gam_dens",
    "nipy.algorithms.clustering.ggmixture._gaus_dens",
    "numpy.exp",
    "numpy.float",
    "numpy.histogram",
    "numpy.log",
    "numpy.size",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.Estep": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._gam_dens",
    "nipy.algorithms.clustering.ggmixture._gaus_dens",
    "numpy.array",
    "numpy.log",
    "numpy.maximum",
    "numpy.size",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.Mstep": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._gam_param",
    "numpy.dot",
    "numpy.maximum",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.__init__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.estimate": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.mean",
    "numpy.pi",
    "numpy.var",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.parameters": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.posterior": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._gam_dens",
    "nipy.algorithms.clustering.ggmixture._gaus_dens"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.GGM.show": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "int",
    "matplotlib.pylab.figure",
    "matplotlib.pylab.legend",
    "matplotlib.pylab.plot",
    "matplotlib.pylab.title",
    "max",
    "nipy.algorithms.clustering.ggmixture._gam_dens",
    "nipy.algorithms.clustering.ggmixture._gaus_dens",
    "numpy.exp",
    "numpy.float",
    "numpy.histogram",
    "numpy.log",
    "numpy.size",
    "numpy.std",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.Gamma": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.ggmixture.Gamma.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.Gamma.check": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.Gamma.estimate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._psi_solve",
    "numpy.log",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.Gamma.parameters": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._compute_c": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._psi_solve",
    "numpy.dot",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._dichopsi_log": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.log",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._gam_dens": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.nonzero",
    "numpy.ravel",
    "numpy.size",
    "numpy.zeros",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._gam_param": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.ggmixture._compute_c",
    "numpy.dot",
    "numpy.nonzero",
    "numpy.ravel",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._gaus_dens": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture._psi_solve": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.clustering.ggmixture._dichopsi_log",
    "numpy.log",
    "print",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.ggmixture.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.ggmixture.mp": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.ggmixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.ggmixture.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.ggmixture.sp": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.ggmixture.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.gmm.GMM": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.gmm.GMM._Estep": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM._Mstep": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.maximum",
    "numpy.reshape",
    "numpy.shape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.average_log_like": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.bic": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.maximum",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.check": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.check_x": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.estimate": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.log",
    "numpy.maximum",
    "numpy.mean",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.evidence": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.guess_regularizing": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "numpy.repeat",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.initialize": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "kmeans",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.initialize_and_estimate": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.gmm.GMM",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.likelihood": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.map_label": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.mixture_likelihood": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.plugin": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.pop": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.show": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "numpy.reshape",
    "numpy.size",
    "smoothed_histogram_from_samples"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.show_components": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "max",
    "numpy.exp",
    "numpy.histogram",
    "numpy.log",
    "numpy.size",
    "numpy.std",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.test": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.train": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.unweighted_likelihood": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.unweighted_likelihood_": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GMM.update": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GridDescriptor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.gmm.GridDescriptor.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ravel",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GridDescriptor.make_grid": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.isscalar",
    "numpy.prod",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.GridDescriptor.set": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.ravel",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm.best_fitting_GMM": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.gmm.GMM",
    "numpy.inf",
    "numpy.reshape",
    "numpy.size",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.eigvalsh": {
  "data": {
   "shadows": "scipy.linalg.eigvalsh"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm.plot2D": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.cm.hsv",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.imshow",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.subplot",
    "nipy.algorithms.clustering.gmm.GridDescriptor",
    "numpy.log",
    "numpy.reshape",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.gmm.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.gmm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.reshape",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.check_compatible_height": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.get_height": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.list_of_subtrees": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "numpy.int",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.partition": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.plot": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "matplotlib.pylab.axis",
    "matplotlib.pylab.figure",
    "matplotlib.pylab.plot",
    "matplotlib.pylab.subplot",
    "nipy.algorithms.clustering.hierarchical_clustering._label",
    "numpy.arange",
    "numpy.argsort",
    "numpy.mean",
    "numpy.nonzero",
    "numpy.size",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.plot_height": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "matplotlib.pylab.bar",
    "matplotlib.pylab.figure",
    "numpy.arange",
    "numpy.sort",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.set_height": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest.split": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "int",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._auxiliary_graph": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "WeightedGraph",
    "nipy.algorithms.clustering.hierarchical_clustering._initial_inertia",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._inertia": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._inertia_": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.size",
    "numpy.var",
    "numpy.vstack",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._initial_inertia": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.hierarchical_clustering._inertia",
    "numpy.inf",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._label": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.hierarchical_clustering._label_",
    "numpy.arange",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.size",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._label_": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "numpy.nonzero",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering._remap": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.clustering.hierarchical_clustering._inertia",
    "numpy.argsort",
    "numpy.array",
    "numpy.inf",
    "numpy.int",
    "numpy.size",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.average_link_graph": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "FutureWarning",
    "WeightedGraph",
    "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest",
    "nipy.algorithms.clustering.hierarchical_clustering.fusion",
    "numpy.arange",
    "numpy.inf",
    "numpy.int",
    "numpy.isinf",
    "numpy.nonzero",
    "numpy.ones",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.average_link_graph_segment": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "nipy.algorithms.clustering.hierarchical_clustering.average_link_graph",
    "numpy.int",
    "numpy.minimum",
    "numpy.zeros",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.fusion": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "float",
    "numpy.argsort",
    "numpy.inf",
    "numpy.nonzero",
    "numpy.size",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.mp": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.ward": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "int",
    "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest",
    "nipy.algorithms.clustering.hierarchical_clustering._auxiliary_graph",
    "nipy.algorithms.clustering.hierarchical_clustering._remap",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.inf",
    "numpy.int",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.ward_field_segment": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.hierarchical_clustering.ward_quick_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.ward_quick": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "int",
    "nipy.algorithms.clustering.hierarchical_clustering.WeightedForest",
    "nipy.algorithms.clustering.hierarchical_clustering._auxiliary_graph",
    "nipy.algorithms.clustering.hierarchical_clustering._remap",
    "numpy.arange",
    "numpy.argsort",
    "numpy.flatnonzero",
    "numpy.inf",
    "numpy.int",
    "numpy.maximum",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.reshape",
    "numpy.size",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.ward_quick_segment": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nipy.algorithms.clustering.hierarchical_clustering.ward_quick",
    "numpy.inf",
    "numpy.int",
    "numpy.minimum",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.ward_segment": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nipy.algorithms.clustering.hierarchical_clustering.ward",
    "numpy.inf",
    "numpy.int",
    "numpy.minimum",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.hierarchical_clustering.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.imm.main"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.imm.IMM": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.imm.IMM.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.cross_validated_update": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "min",
    "nipy.algorithms.clustering.imm.math",
    "numpy.argsort",
    "numpy.array",
    "numpy.int",
    "numpy.isscalar",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.likelihood": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.likelihood_under_the_prior": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "detsh",
    "numpy.exp",
    "numpy.linalg.inv",
    "numpy.log",
    "numpy.ones",
    "numpy.pi",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.reduce": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "enumerate",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.sample": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.sample_indicator": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.set_constant_densities": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.set_priors": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "detsh",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.maximum",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.simple_update": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.update": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.repeat",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.IMM.update_weights": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.imm.IMM"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.imm.IMM"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.cross_validated_update": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "min",
    "nipy.algorithms.clustering.imm.math",
    "numpy.argsort",
    "numpy.array",
    "numpy.int",
    "numpy.isscalar",
    "numpy.logical_not",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.sample": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.imm.co_labelling",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.sample_indicator": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.set_constant_densities": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.MixedIMM.simple_update": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.co_labelling": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.ravel",
    "numpy.repeat",
    "numpy.tile",
    "numpy.unique",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.main": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.imm.IMM",
    "numpy.dot",
    "numpy.random.randn",
    "plot2D",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.imm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.imm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.test": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.algorithms.clustering.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_bgmm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_bgmm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_bgmm_gibbs": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "BGMM",
    "nose.tools.assert_true",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_dirichlet_eval": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dirichlet_eval",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_dkln1": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dkl_gaussian",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_dkln2": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dkl_gaussian",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_dkln3": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dkl_gaussian",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.log",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_evidence": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "BGMM",
    "VBGMM",
    "nose.tools.assert_true",
    "numpy.int",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_gmm_bf": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "BGMM",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.int",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_multinomial": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "multinomial",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.rand",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_vbgmm": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "VBGMM",
    "nose.tools.assert_true",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_bgmm.test_vbgmm_select": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "VBGMM",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_clustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_clustering.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_clustering.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_clustering.TestClustering": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.tests.test_clustering.TestClustering.testkmeans1": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "kmeans",
    "numpy.array",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_clustering.TestClustering.testkmeans2": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "kmeans",
    "numpy.concatenate",
    "numpy.float",
    "numpy.int",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_clustering.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_clustering.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_clustering.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_ggm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_ggm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGGM0": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "GGGM",
    "numpy.absolute",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGGM1": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "GGGM",
    "float",
    "numpy.absolute",
    "numpy.array",
    "range",
    "scipy.stats.t.rvs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGGM2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "GGGM",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGGM3": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "GGGM",
    "float",
    "numpy.absolute",
    "numpy.array",
    "range",
    "scipy.stats.t.rvs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGM1": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "GGM",
    "numpy.absolute",
    "numpy.random.randn",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_GGM2": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "GGM",
    "numpy.absolute",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_gamma_parameters1": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Gamma",
    "numpy.absolute",
    "numpy.random.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_ggm.test_gamma_parameters2": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Gamma",
    "numpy.absolute",
    "numpy.random.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_gmm.nose",
    "nipy.algorithms.clustering.tests.test_gmm.seed",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_gmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_gmm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_gmm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_gmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_gmm.nr": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.clustering.tests.test_gmm.seed": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_cv": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_diag": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_full": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_heterosc": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_largedim": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.dot",
    "numpy.std",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_gmm_multi": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike0": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike1": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike3": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike4": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike5": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_loglike6": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "GMM",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_gmm.test_em_selection": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "best_fitting_GMM",
    "list",
    "nipy.algorithms.clustering.tests.test_gmm.nr",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_hierarchical_clustering.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.WeightedGraph": {
  "data": {
   "shadows": "nipy.algorithms.graph.graph.WeightedGraph"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.alg_test_2": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "average_link_graph",
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.alg_test_3": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "average_link_graph_segment",
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.alg_test_basic": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "average_link_graph",
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.cost_test": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.var",
    "ward_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.field_from_graph_and_data": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.field_from_graph_and_data"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.knn": {
  "data": {
   "shadows": "nipy.algorithms.graph.graph.knn"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.ward_test_basic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "ward"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.ward_test_more": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.clustering.tests.test_hierarchical_clustering.math",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_equal",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "ward_quick_segment",
    "ward_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.wardf_test": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.field.field_from_graph_and_data",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_equal",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "ward_field_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.wardq_test_2": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_equal",
    "numpy.random.randn",
    "numpy.random.seed",
    "ward_quick"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.wardq_test_basic": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "ward_quick"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.wards_test_3": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_equal",
    "numpy.random.randn",
    "numpy.random.seed",
    "ward_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_hierarchical_clustering.wards_test_basic": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.graph.knn",
    "nose.tools.assert_equal",
    "numpy.absolute",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "ward_segment"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_imm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_imm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_colabel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "co_labelling",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_1D": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_1D_k10": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_2D": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_2D_a0_1": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.random.randn",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_2D_fast": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.log",
    "numpy.pi",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_loglike_known_groups": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IMM",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.floor",
    "numpy.int",
    "numpy.log",
    "numpy.pi",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_wnc": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "MixedIMM",
    "int",
    "nose.tools.assert_true",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_wnc1": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "MixedIMM",
    "int",
    "nose.tools.assert_true",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_wnc2": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "MixedIMM",
    "int",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_imm.test_imm_wnc3": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "MixedIMM",
    "int",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_vmm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.clustering.tests.test_vmm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.tests.test_vmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_vmm.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_vmm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_vmm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_vmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.tests.test_vmm.test_dimension_selection_bic": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "select_vmm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_vmm.test_dimension_selection_cv": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.argmax",
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "range",
    "select_vmm_cv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_vmm.test_spherical_area": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.pi",
    "sphere_density"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.tests.test_vmm.test_von_mises_fisher_density": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "VonMisesMixture",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "sphere_density"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.clustering.utils._EStep": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.int",
    "numpy.minimum",
    "numpy.ones",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.utils._MStep": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.utils._kmeans": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.utils._EStep",
    "nipy.algorithms.clustering.utils._MStep",
    "numpy.argsort",
    "numpy.inf",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.var",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.utils.kmeans": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "nipy.algorithms.clustering.utils._kmeans",
    "numpy.int",
    "numpy.maximum",
    "numpy.reshape",
    "numpy.size",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.utils.voronoi": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.clustering.utils._EStep",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.density_per_component": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.estimate": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "numpy.isnan",
    "numpy.log",
    "numpy.ones",
    "numpy.random.shuffle",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.estimate_means": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.estimate_weights": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.log_density_per_component": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp",
    "numpy.hstack",
    "numpy.log",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.log_weighted_density": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.mixture_density": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.responsibilities": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.show": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "mpl_toolkits.mplot3d.axes3d.Axes3D",
    "nipy.algorithms.clustering.von_mises_fisher_mixture.pylab",
    "numpy.argmax",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture.weighted_density": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.estimate_robust_vmm": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.von_mises_fisher_mixture.VonMisesMixture",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.example_cv_nonoise": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.clustering.von_mises_fisher_mixture.select_vmm_cv",
    "nipy.algorithms.clustering.von_mises_fisher_mixture.sphere_density",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.example_noisy": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.clustering.von_mises_fisher_mixture.select_vmm",
    "nipy.algorithms.clustering.von_mises_fisher_mixture.sphere_density",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.p3": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.axes3d"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.select_vmm": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.von_mises_fisher_mixture.estimate_robust_vmm",
    "numpy.inf",
    "numpy.log",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.select_vmm_cv": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.von_mises_fisher_mixture.estimate_robust_vmm",
    "numpy.float",
    "numpy.inf",
    "numpy.log",
    "numpy.unique",
    "numpy.zeros_like",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.sphere_density": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.outer",
    "numpy.pi",
    "numpy.ravel",
    "numpy.sin",
    "numpy.size",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.clustering.von_mises_fisher_mixture.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.commands": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.commands.AnalyzeHeader": {
  "data": {
   "shadows": "nibabel.AnalyzeHeader"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.diagnose": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nibabel.filename_parser.splitext_addext",
    "nipy.algorithms.diagnostics.commands.parse_fname_axes",
    "os.path.split",
    "screen",
    "write_screen_res"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.commands.nipy": {
  "data": {
   "shadows": "nipy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.parse_fname_axes": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "nibabel.AnalyzeHeader",
    "nipy.algorithms.diagnostics.commands.nipy"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.commands.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.splitext_addext": {
  "data": {
   "shadows": "nibabel.filename_parser.splitext_addext"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.commands.tsdiffana": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.filename_parser.splitext_addext",
    "nipy.algorithms.diagnostics.commands.nipy",
    "nipy.algorithms.diagnostics.commands.parse_fname_axes",
    "numpy.savez",
    "os.path.join",
    "os.path.split",
    "plot_tsdiffs",
    "time_slice_diffs_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.screens": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.screens.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.screens.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.screens.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.screens.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.screens.screen": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "FutureWarning",
    "Image",
    "ValueError",
    "drop_io_dim",
    "input_axis_index",
    "nipy.algorithms.diagnostics.screens.warnings",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "time_slice_diffs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.screens.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.screens.write_screen_res": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.suptitle",
    "numpy.savez",
    "os.path.join",
    "plot_tsdiffs",
    "range",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.diagnostics.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.diagnostics.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.tests.test_commands": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.AnalyzeImage": {
  "data": {
   "shadows": "nibabel.AnalyzeImage"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.Args": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.Nifti1Pair": {
  "data": {
   "shadows": "nibabel.Nifti1Pair"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.NiftiError": {
  "data": {
   "shadows": "nipy.io.nifti_ref.NiftiError"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.Spm2AnalyzeImage": {
  "data": {
   "shadows": "nibabel.Spm2AnalyzeImage"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.check_axes": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.check_diag_results": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "list",
    "nipy.load_image",
    "nose.tools.assert_equal",
    "numpy.load",
    "os.path.join",
    "range",
    "set",
    "tuple",
    "vars",
    "vars.shape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.load_image": {
  "data": {
   "shadows": "nipy.load_image"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.needs_mpl_agg": {
  "data": {
   "shadows": "nipy.testing.decorators.needs_mpl_agg"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.test_diagnose": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "diagnose",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.algorithms.diagnostics.tests.test_commands.Args",
    "nipy.algorithms.diagnostics.tests.test_commands.check_diag_results",
    "nipy.algorithms.diagnostics.tests.test_commands.os",
    "nipy.algorithms.diagnostics.tests.test_commands.shutil",
    "nipy.io.nifti_ref.NiftiError",
    "nipy.load_image",
    "nipy.testing.decorators.needs_mpl_agg",
    "nipy.testing.funcfile",
    "nose.tools.assert_raises",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.test_parse_fname_axes": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "img_class",
    "nibabel.AnalyzeImage",
    "nibabel.Nifti1Image",
    "nibabel.Nifti1Pair",
    "nibabel.Spm2AnalyzeImage",
    "nibabel.__file__",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nose.SkipTest",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float64",
    "numpy.prod",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "parse_fname_axes",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_commands.test_tsdiffana": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.algorithms.diagnostics.tests.test_commands.Args",
    "nipy.algorithms.diagnostics.tests.test_commands.check_axes",
    "nipy.algorithms.diagnostics.tests.test_commands.os",
    "nipy.algorithms.diagnostics.tests.test_commands.shutil",
    "nipy.load_image",
    "nipy.testing.decorators.needs_mpl_agg",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.load",
    "numpy.testing.assert_array_equal",
    "os.path.isfile",
    "os.path.join",
    "time_slice_diffs_image",
    "tsdiffana"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen._check_pca": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "res2pos1"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen._check_ts": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "time_slice_diffs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.decorators": {
  "data": {
   "shadows": "numpy.testing.decorators"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.needs_mpl_agg": {
  "data": {
   "shadows": "nipy.testing.decorators.needs_mpl_agg"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.ni": {
  "data": {
   "shadows": "nipy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.pca_pos": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.rollimg": {
  "data": {
   "shadows": "nipy.core.api.rollimg"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.simplefilter": {
  "data": {
   "shadows": "warnings.simplefilter"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.test_screen": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AssertionError",
    "nipy.algorithms.diagnostics.tests.test_screen._check_pca",
    "nipy.algorithms.diagnostics.tests.test_screen._check_ts",
    "nipy.core.api.rollimg",
    "nipy.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.rollaxis",
    "numpy.std",
    "numpy.testing.assert_array_equal",
    "pca",
    "res2pos1",
    "screen",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.test_screen_slice_axis": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "FutureWarning",
    "nipy.algorithms.diagnostics.tests.test_screen.pca_pos",
    "nipy.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_raises",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "screen",
    "warnings.catch_warnings",
    "warnings.simplefilter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_screen.test_write_screen_res": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.algorithms.diagnostics.tests.test_screen.os",
    "nipy.load_image",
    "nipy.testing.decorators.needs_mpl_agg",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "os.path.join",
    "screen",
    "write_screen_res"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.TEST_DATA_PATH": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_arr_img_res": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.load_image": {
  "data": {
   "shadows": "nipy.load_image"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.test_against_matlab_results": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nipy.algorithms.diagnostics.tests.test_time_difference.TEST_DATA_PATH",
    "nipy.load_image",
    "nipy.testing.funcfile",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.test_time_slice_axes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "nipy.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_raises",
    "numpy.rollaxis",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.test_time_slice_diffs": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argmax",
    "numpy.diff",
    "numpy.empty",
    "numpy.mean",
    "numpy.prod",
    "numpy.random.normal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.test_tsd_image": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.diagnostics.tests.test_time_difference.assert_arr_img_res",
    "nipy.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "range",
    "rollimg",
    "tsda",
    "tsdi",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tests.test_time_difference.tsd": {
  "data": {
   "shadows": "timediff"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.timediff": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.timediff.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.timediff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.timediff.time_slice_diffs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "numpy.asarray",
    "numpy.empty",
    "numpy.rollaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.timediff.time_slice_diffs_image": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AxisError",
    "as_image",
    "drop_io_dim",
    "img_class",
    "io_axis_indices",
    "nipy.algorithms.diagnostics.timediff.time_slice_diffs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tsdiffplot": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.nipy": {
  "data": {
   "shadows": "nipy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.plot_tsdiffs": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.cm.hsv",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "numpy.arange",
    "numpy.max",
    "numpy.mean",
    "numpy.meshgrid",
    "numpy.min",
    "range",
    "xmax_labels"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.plot_tsdiffs.xmax_labels": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.plot_tsdiffs_image": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.pyplot.show",
    "nipy.algorithms.diagnostics.tsdiffplot.nipy",
    "nipy.algorithms.diagnostics.tsdiffplot.plot_tsdiffs",
    "nipy.externals.six.string_types",
    "numpy.deprecate_with_doc",
    "time_slice_diffs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.algorithms.diagnostics.tsdiffplot.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.algorithms.fwhm": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.fwhm.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.algorithms.fwhm.ReselImage": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "nipy.algorithms.fwhm.Resels"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.fwhm.ReselImage.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.fwhm.Resels",
    "nipy.core.api.Image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.ReselImage.__iter__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.Resels": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "nipy.algorithms.fwhm.Resels.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.fabs",
    "numpy.linalg.det",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.Resels.__iter__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nipy.core.api.Image",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.Resels.fwhm2resel": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.power",
    "numpy.sqrt",
    "pos_recipr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.Resels.integrate": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.Resels.resel2fwhm": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.power",
    "numpy.sqrt",
    "pos_recipr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.__docformat__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.algorithms.fwhm._calc_detlam": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "nipy.algorithms.fwhm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.fwhm.det": {
  "data": {
   "shadows": "numpy.linalg.det"
  },
  "type": "import"
 },
 "nipy.algorithms.fwhm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.bench": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.algorithms.graph.bipartite_graph": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.copy": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "nipy.algorithms.graph.bipartite_graph.BipartiteGraph"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.set_edges": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "numpy.shape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.set_weights": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.subgraph_left": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.graph.bipartite_graph.BipartiteGraph",
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.BipartiteGraph.subgraph_right": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.graph.bipartite_graph.BipartiteGraph",
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.bipartite_graph.bipartite_graph_from_adjacency": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nipy.algorithms.graph.bipartite_graph.bipartite_graph_from_coo_matrix",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.bipartite_graph_from_coo_matrix": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nipy.algorithms.graph.bipartite_graph.BipartiteGraph",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.check_feature_matrices": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.bipartite_graph.cross_eps": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "nipy.algorithms.graph.bipartite_graph.bipartite_graph_from_coo_matrix",
    "nipy.algorithms.graph.bipartite_graph.check_feature_matrices",
    "numpy.asanyarray",
    "numpy.hstack",
    "numpy.int",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.maximum",
    "numpy.ones",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.cross_knn": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "min",
    "nipy.algorithms.graph.bipartite_graph.bipartite_graph_from_coo_matrix",
    "nipy.algorithms.graph.bipartite_graph.check_feature_matrices",
    "numpy.argsort",
    "numpy.hstack",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.maximum",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sum",
    "numpy.vstack",
    "numpy.zeros",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.bipartite_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.forest": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.graph.forest.Forest": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "nipy.algorithms.graph.forest.Forest.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.int",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.all_distances": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "hasattr",
    "numpy.absolute",
    "numpy.inf",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.check": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.compute_children": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.define_graph_attributes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "numpy.int",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.size",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.depth_from_leaves": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.maximum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.get_children": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.get_descendants": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.isleaf": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.isroot": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.leaves_of_a_subtree": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nonzero",
    "numpy.size",
    "numpy.squeeze",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.merge_simple_branches": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.size",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.propagate_upward": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.size",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.propagate_upward_and": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.size",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.reorder_from_leaves_to_roots": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.subforest": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "nipy.algorithms.graph.forest.Forest",
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.nonzero",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.Forest.tree_depth": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "nipy.algorithms.graph.forest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "nipy.algorithms.graph.setup.numpy",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.test": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.algorithms.graph.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.graph.tests.test_bipartite_graph.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_copy": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_cross_eps_1": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "cross_eps",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_cross_knn_1": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_cross_knn_2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_feature_matrices": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "check_feature_matrices",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_subraph_left": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_subraph_left2": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_subraph_right": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_bipartite_graph.test_subraph_right2": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "cross_knn",
    "nipy.algorithms.graph.tests.test_bipartite_graph.basicdata",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.graph.tests.test_field.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.tests.test_field.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.basic_field": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.float",
    "numpy.indices",
    "numpy.reshape",
    "numpy.sum",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.basic_field_2": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.array",
    "numpy.indices",
    "numpy.reshape",
    "numpy.sum",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.basic_field_3": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.abs",
    "numpy.array",
    "numpy.indices",
    "numpy.reshape",
    "numpy.sum",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.basic_field_random": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.float",
    "numpy.indices",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.sum",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.basic_graph": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.indices",
    "numpy.reshape",
    "numpy.zeros",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.sps": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_field.test_bifurcations_1": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_bifurcations_2": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_2",
    "nose.tools.assert_true",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_closing": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_constrained_voronoi": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_constrained_voronoi_2": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_dilation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_dilation2": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_erosion": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_field_from_coo_matrix": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "field_from_coo_matrix_and_data",
    "nose.tools.assert_equal",
    "numpy.random.rand",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_geodesic_kmeans": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_max_1": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.int",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_max_2": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_max_3": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_equal",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_max_4": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_equal",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_opening": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_smooth_1": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_graph",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_smooth_2": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_graph",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_subfield": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_equal",
    "numpy.random.rand",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_subfield2": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_true",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_type_local_max": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_ward1": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_ward2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_random",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_watershed_1": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field",
    "nose.tools.assert_equal",
    "numpy.size",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_watershed_2": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_2",
    "nose.tools.assert_true",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_watershed_3": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_2",
    "nose.tools.assert_true",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_field.test_watershed_4": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_field.basic_field_3",
    "nose.tools.assert_true",
    "numpy.size",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.graph.tests.test_forest.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.tests.test_forest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_forest.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_forest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_forest.simple_forest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Forest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_all_distances": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_children": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_depth": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_descendants": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_forest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_forest_trivial": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Forest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_leaves": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_merge_simple_branches": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Forest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_reorder": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_root": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_upward": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_forest.test_upward_and": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_forest.simple_forest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.graph.tests.test_graph.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.graph.tests.test_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.basic_graph": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "knn",
    "numpy.column_stack",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.basic_graph_2": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "knn",
    "numpy.column_stack",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.basicdata": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.spp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "nipy.algorithms.graph.tests.test_graph.test_3d_grid": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.vstack",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_adjacency": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_anti_symmeterize": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.float",
    "numpy.random.rand",
    "numpy.sum",
    "wgraph_from_adjacency"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_cc": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_cliques": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "knn",
    "len",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_compact_representation": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_complete": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "complete_graph",
    "numpy.indices",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_concatenate1": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "concatenate_graphs",
    "knn",
    "nose.tools.assert_true",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_concatenate2": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "complete_graph",
    "concatenate_graphs",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_concatenate3": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "concatenate_graphs",
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_cut_redundancies": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_equal",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_degrees": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_dijkstra": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_dijkstra2": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_dijkstra_multiseed": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_eps_1": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "eps_nn",
    "nipy.algorithms.graph.tests.test_graph.basicdata",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_floyd_1": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.diag",
    "numpy.pi",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_floyd_2": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_graph_create_from_array": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "wgraph_from_adjacency"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_graph_create_from_coo_matrix": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.coo_matrix",
    "wgraph_from_coo_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_1": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.mgrid",
    "numpy.reshape",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_2": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.mgrid",
    "numpy.reshape",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_3": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.mgrid",
    "numpy.reshape",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_4": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.indices",
    "numpy.reshape",
    "numpy.size",
    "sum",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_5": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.indices",
    "numpy.reshape",
    "numpy.testing.assert_array_almost_equal",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_6": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.indices",
    "numpy.reshape",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_grid_3d_7": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.rand",
    "numpy.where",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_isconnected": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_knn_1": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "knn",
    "nipy.algorithms.graph.tests.test_graph.basicdata",
    "nose.tools.assert_equal",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_kruskal": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "eps_nn",
    "mst",
    "nipy.algorithms.graph.tests.test_graph.basicdata",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_list_neighbours": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_main_cc": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "knn",
    "nipy.algorithms.graph.tests.test_graph.basicdata",
    "nose.tools.assert_equal",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_mst_1": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "mst",
    "nipy.algorithms.graph.tests.test_graph.basicdata",
    "nose.tools.assert_equal",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_normalize": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_normalize_2": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_normalize_3": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_set_euclidian": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph_2",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_set_gaussian": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nipy.algorithms.graph.tests.test_graph.basic_graph_2",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_set_gaussian_2": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.graph.tests.test_graph.basic_graph_2",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_subgraph_1": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "WeightedGraph",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_subgraph_2": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "knn",
    "nose.tools.assert_true",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_symmeterize": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "WeightedGraph",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.ones",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_to_coo_matrix": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "wgraph_from_adjacency"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_voronoi": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "WeightedGraph",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.transpose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_voronoi2": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "WeightedGraph",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.graph.tests.test_graph.test_voronoi3": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "WeightedGraph",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.group.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.group.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.group.bench": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.group.parcel_analysis": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.group.parcel_analysis.NDIM": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fwhm2sigma",
    "int",
    "io_orientation",
    "len",
    "list",
    "make_xyz_image",
    "nipy.algorithms.group.parcel_analysis.SIGMA_MIN",
    "numpy.abs",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.ones",
    "numpy.unique",
    "range",
    "resample",
    "str",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis._parcel_level_inference": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "float",
    "histogram",
    "int",
    "len",
    "numpy.argsort",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.stats.t.cdf",
    "two_level_glm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis._smooth_images": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "nipy.algorithms.group.parcel_analysis._save_image",
    "nipy.algorithms.group.parcel_analysis._smooth_image_pair",
    "numpy.array",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis._voxel_level_inference": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.sum",
    "two_level_glm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis.dump_results": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.savez",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis.parcel_maps": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.group.parcel_analysis._save_image",
    "numpy.zeros",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ParcelAnalysis.t_map": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.group.parcel_analysis._save_image",
    "numpy.sqrt",
    "numpy.zeros",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.SIGMA_MIN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.algorithms.group.parcel_analysis._gaussian_energy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nipy.algorithms.group.parcel_analysis.NDIM",
    "nipy.algorithms.group.parcel_analysis._gaussian_energy_1d",
    "numpy.asarray",
    "numpy.prod",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._gaussian_energy_1d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.sum",
    "numpy.zeros",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._gaussian_filter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._save_image": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "UserWarning",
    "nipy.algorithms.group.parcel_analysis.warnings",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._smooth": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nipy.algorithms.group.parcel_analysis._gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._smooth_image_pair": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "make_xyz_image",
    "nipy.algorithms.group.parcel_analysis._smooth",
    "nipy.algorithms.group.parcel_analysis._smooth_spm",
    "numpy.isnan",
    "smooth_fn",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis._smooth_spm": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nipy.algorithms.group.parcel_analysis._gaussian_energy",
    "nipy.algorithms.group.parcel_analysis._gaussian_filter",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.group.parcel_analysis.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.algorithms.group.parcel_analysis.nd": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.algorithms.group.parcel_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.group.parcel_analysis.parcel_analysis": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "nipy.algorithms.group.parcel_analysis.ParcelAnalysis"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.parcel_analysis.ss": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.group.parcel_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.group.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.group.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.group.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.group.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.group.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.group.test": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.group.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis": {
  "data": {
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.diag",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.NLABELS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.NSUBJ": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.SIZE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ParcelAnalysis",
    "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE",
    "nipy.algorithms.group.tests.test_parcel_analysis.SIZE",
    "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data",
    "numpy.testing.assert_array_equal",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis_error": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ParcelAnalysis",
    "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE",
    "nipy.algorithms.group.tests.test_parcel_analysis.NLABELS",
    "nipy.algorithms.group.tests.test_parcel_analysis.NSUBJ",
    "nipy.algorithms.group.tests.test_parcel_analysis.SIZE",
    "numpy.random.normal",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.group.tests.test_parcel_analysis.NLABELS",
    "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_error": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "nipy.algorithms.group.tests.test_parcel_analysis.NSUBJ",
    "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis_error",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_function": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE",
    "nipy.algorithms.group.tests.test_parcel_analysis.SIZE",
    "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data",
    "numpy.testing.assert_array_equal",
    "parcel_analysis",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_nonstandard": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_nosmooth": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ParcelAnalysis",
    "float",
    "make_xyz_image",
    "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE",
    "nipy.algorithms.group.tests.test_parcel_analysis.NSUBJ",
    "nipy.algorithms.group.tests.test_parcel_analysis.SIZE",
    "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data",
    "numpy.abs",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.var",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_spm": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "nipy.algorithms.group.tests.test_parcel_analysis._test_parcel_analysis"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_parcel_analysis_write_mode": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "IOError",
    "ParcelAnalysis",
    "nipy.algorithms.group.tests.test_parcel_analysis.make_fake_data",
    "nipy.algorithms.group.tests.test_parcel_analysis.os",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.group.tests.test_parcel_analysis.test_smooth_image_pair": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "_smooth_image_pair",
    "make_xyz_image",
    "nipy.algorithms.group.tests.test_parcel_analysis.AFFINE",
    "nipy.algorithms.group.tests.test_parcel_analysis.SIZE",
    "numpy.random.normal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.interpolation": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.interpolation.ImageInterpolator": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.interpolation.ImageInterpolator.__del__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nipy.algorithms.interpolation.os"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.interpolation.ImageInterpolator.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "nipy.algorithms.interpolation.ImageInterpolator._buildknots": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nipy.algorithms.interpolation.tempfile",
    "numpy.float64",
    "numpy.memmap",
    "numpy.nan_to_num",
    "open",
    "scipy.ndimage.spline_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.interpolation.ImageInterpolator.evaluate": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "cmapi",
    "map_coordinates",
    "numpy.array",
    "numpy.float64",
    "seq_prod"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.interpolation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.interpolation.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.algorithms.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.interpolation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.interpolation.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.kernel_smooth.AffineTransform": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.less_equal",
    "numpy.minimum",
    "self._normsq"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter._normsq": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.kernel_smooth.fwhm2sigma",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.cholesky",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.rollaxis",
    "numpy.sum",
    "range",
    "self.bshape",
    "self.cov",
    "self.fwhm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter._presmooth": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "numpy.fft.rfftn",
    "numpy.zeros",
    "range",
    "self.bshape",
    "self.shape",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter._setup_kernel": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "nipy.algorithms.kernel_smooth._crop",
    "nipy.core.api.AffineTransform",
    "nipy.utils.seq_prod",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.fabs",
    "numpy.fft.rfftn",
    "numpy.float64",
    "numpy.floor",
    "numpy.indices",
    "numpy.intp",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "self",
    "self._kernel",
    "self.bshape",
    "self.fkernel",
    "self.norms",
    "self.shape",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.LinearFilter.smooth": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "nipy.algorithms.kernel_smooth.gc",
    "nipy.core.api.AffineTransform.identity",
    "nipy.core.api.Image",
    "nipy.core.reference.coordinate_map.product",
    "numpy.fft.irfftn",
    "numpy.nan_to_num",
    "numpy.zeros",
    "range",
    "self._kernel.shape",
    "self._presmooth",
    "self.bshape",
    "self.coordmap",
    "self.fkernel",
    "self.location",
    "self.normalization",
    "self.norms",
    "self.scale",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth._crop": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "numpy.fabs",
    "numpy.greater",
    "numpy.indices",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.fft": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.fwhm2sigma": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.kernel_smooth.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.product": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_map.product"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.seq_prod": {
  "data": {
   "shadows": "nipy.utils.seq_prod"
  },
  "type": "import"
 },
 "nipy.algorithms.kernel_smooth.sigma2fwhm": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.optimize": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.optimize._linesearch_brent": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "iter",
    "numpy.squeeze",
    "scipy.optimize.brent"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.optimize._linesearch_brent.myfunc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.optimize._wrap": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "nipy.algorithms.optimize._wrap.wrapper": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "function"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.optimize.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.optimize.approx_fprime": {
  "data": {
   "shadows": "scipy.optimize.approx_fprime"
  },
  "type": "import"
 },
 "nipy.algorithms.optimize.brent": {
  "data": {
   "shadows": "scipy.optimize.brent"
  },
  "type": "import"
 },
 "nipy.algorithms.optimize.fmin_steepest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abs",
    "callback",
    "f",
    "myfprime",
    "nipy.algorithms.optimize._linesearch_brent",
    "nipy.algorithms.optimize._wrap",
    "numpy.asarray",
    "numpy.sqrt",
    "numpy.squeeze",
    "numpy.sum",
    "print",
    "scipy.optimize.approx_fprime"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.optimize.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.registration": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.affine": {
  "data": {
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.registration.affine.Affine",
    "nipy.algorithms.registration.affine.Affine2D",
    "nipy.algorithms.registration.affine.MAX_DIST",
    "nipy.algorithms.registration.affine.Rigid",
    "nipy.algorithms.registration.affine.Rigid2D",
    "nipy.algorithms.registration.affine.Similarity",
    "nipy.algorithms.registration.affine.Similarity2D",
    "numpy.double",
    "numpy.finfo",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.affine.Affine": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "list",
    "property",
    "range"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.Affine.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.affine.RADIUS",
    "nipy.algorithms.registration.affine.preconditioner",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.__str__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_direct": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_param": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_pre_rotation": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_precond": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_rotation": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_scaling": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._get_translation": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._set_param": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._set_pre_rotation": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._set_rotation": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._set_scaling": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine._set_translation": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.apply": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "nibabel.affines.apply_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.as_affine": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.to_matrix44"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.compose": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "Transform",
    "hasattr",
    "klass",
    "nipy.algorithms.registration.affine.Affine",
    "numpy.dot",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.copy": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.from_matrix44": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.TINY",
    "nipy.algorithms.registration.affine.rotation_mat2vec",
    "numpy.log",
    "numpy.maximum",
    "numpy.zeros",
    "scipy.linalg.det",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine.inv": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Affine2D": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.Affine"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.LOG_MAX_DIST": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.MAX_ANGLE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.MAX_DIST": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.RADIUS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.Rigid": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.registration.affine.Affine",
    "range"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.Rigid.__str__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Rigid.from_matrix44": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.rotation_mat2vec",
    "numpy.zeros",
    "scipy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Rigid2D": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.Rigid"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.SMALL_ANGLE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.Similarity": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.registration.affine.Affine",
    "property",
    "range"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.Similarity.__str__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Similarity._set_param": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Similarity.from_matrix44": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.TINY",
    "nipy.algorithms.registration.affine.rotation_mat2vec",
    "numpy.abs",
    "numpy.log",
    "numpy.maximum",
    "numpy.zeros",
    "scipy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.Similarity2D": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.Similarity",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.affine.Similarity2D._set_param": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.TINY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.affine.affine_transforms": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.affine.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.affine.inverse_affine": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.affine.preconditioner": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.rotation_mat2vec": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mat2quat",
    "quat2axangle"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.rotation_vec2mat": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.MAX_ANGLE",
    "nipy.algorithms.registration.affine.SMALL_ANGLE",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.eye",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.slices2aff": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.affine.subgrid_affine": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.affine.slices2aff",
    "numpy.all",
    "numpy.dot",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.threshold": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.affine.to_matrix44": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "nipy.algorithms.registration.affine.LOG_MAX_DIST",
    "nipy.algorithms.registration.affine.MAX_DIST",
    "nipy.algorithms.registration.affine.rotation_vec2mat",
    "nipy.algorithms.registration.affine.threshold",
    "numpy.diag",
    "numpy.dot",
    "numpy.double",
    "numpy.exp",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.bench": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.chain_transform": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.chain_transform.ChainTransform": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.chain_transform.ChainTransform.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Affine",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.chain_transform.ChainTransform._get_param": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "nipy.algorithms.registration.chain_transform.ChainTransform._set_param": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "nipy.algorithms.registration.chain_transform.ChainTransform.apply": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.os"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.groupwise_registration.FTOL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.FmriRealign4d": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.Realign4d"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.FmriRealign4d.__init__": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "affine_class",
    "as_xyz_image",
    "float",
    "isinstance",
    "len",
    "list",
    "nipy.algorithms.registration.groupwise_registration.guess_slice_axis_and_direction",
    "nipy.algorithms.registration.groupwise_registration.warnings",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "range",
    "slice_times",
    "tuple",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.GTOL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.INTERLEAVED": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "nipy.algorithms.registration.groupwise_registration.guess_slice_axis_and_direction",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d._init_timing_parameters": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d._load_data": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.free_data": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.get_data": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.get_shape": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.scanner_time": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.interp_slice_times"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Image4d.z_to_slice": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.MAXFUN": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.MAXITER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4d": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4d.__init__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "affine_class"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4d._init": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "affine_class",
    "as_xyz_image",
    "isinstance",
    "list",
    "nipy.algorithms.registration.groupwise_registration.Image4d",
    "numpy.ndarray",
    "tuple",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4d.estimate": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.FTOL",
    "nipy.algorithms.registration.groupwise_registration.GTOL",
    "nipy.algorithms.registration.groupwise_registration.MAXFUN",
    "nipy.algorithms.registration.groupwise_registration.MAXITER",
    "nipy.algorithms.registration.groupwise_registration.STEPSIZE",
    "nipy.algorithms.registration.groupwise_registration.XTOL",
    "nipy.algorithms.registration.groupwise_registration.realign4d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4d.resample": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "len",
    "make_xyz_image",
    "nipy.algorithms.registration.groupwise_registration.resample4d",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "_cspline_transform",
    "affine_class",
    "check_type",
    "check_type_and_shape",
    "float",
    "int",
    "min",
    "nipy.algorithms.registration.groupwise_registration.FTOL",
    "nipy.algorithms.registration.groupwise_registration.GTOL",
    "nipy.algorithms.registration.groupwise_registration.MAXFUN",
    "nipy.algorithms.registration.groupwise_registration.MAXITER",
    "nipy.algorithms.registration.groupwise_registration.STEPSIZE",
    "nipy.algorithms.registration.groupwise_registration.XTOL",
    "nipy.algorithms.registration.groupwise_registration.make_grid",
    "numpy.arange",
    "numpy.linalg.inv",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm._energy": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm._energy_gradient": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm._energy_hessian": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.SMALL",
    "numpy.dot",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm._init_energy": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.registration.groupwise_registration.SMALL",
    "numpy.dot",
    "numpy.eye",
    "numpy.maximum",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.align_to_refscan": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.estimate_instant_motion": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "configure_optimizer",
    "fmin",
    "nipy.algorithms.registration.groupwise_registration.VERBOSE",
    "nipy.algorithms.registration.groupwise_registration.warnings",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.estimate_instant_motion.f": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.estimate_instant_motion.fhess": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.estimate_instant_motion.fprime": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.estimate_motion": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.registration.groupwise_registration.VERBOSE",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.init_instant_motion": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.resample": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_cspline_sample3d",
    "_cspline_sample4d",
    "nipy.algorithms.registration.groupwise_registration.scanner_coords"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.resample_full_data": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "_cspline_sample3d",
    "_cspline_sample4d",
    "nipy.algorithms.registration.groupwise_registration.VERBOSE",
    "nipy.algorithms.registration.groupwise_registration.make_grid",
    "nipy.algorithms.registration.groupwise_registration.scanner_coords",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.set_fmin": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.FTOL",
    "nipy.algorithms.registration.groupwise_registration.GTOL",
    "nipy.algorithms.registration.groupwise_registration.MAXFUN",
    "nipy.algorithms.registration.groupwise_registration.MAXITER",
    "nipy.algorithms.registration.groupwise_registration.XTOL",
    "use_derivatives"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm.set_transform": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.SMALL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.STEPSIZE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.SpaceRealign": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.Realign4d"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.SpaceRealign.__init__": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "affine_class"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.SpaceTimeRealign": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.Realign4d"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.groupwise_registration.SpaceTimeRealign.__init__": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "affine_class",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "nipy.algorithms.registration.groupwise_registration.tr_from_header",
    "slice_times",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.VERBOSE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.XTOL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.groupwise_registration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.groupwise_registration.adjust_subsampling": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.maximum",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.groupwise_registration.guess_slice_axis_and_direction": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "io_orientation",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.interp_slice_times": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.asarray",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.make_grid": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.mgrid",
    "numpy.prod",
    "numpy.reshape",
    "numpy.rollaxis",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.groupwise_registration.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.groupwise_registration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.groupwise_registration.realign4d": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "Affine",
    "affine_class",
    "is_same_affine",
    "len",
    "list",
    "nipy.algorithms.registration.groupwise_registration.FTOL",
    "nipy.algorithms.registration.groupwise_registration.GTOL",
    "nipy.algorithms.registration.groupwise_registration.Image4d",
    "nipy.algorithms.registration.groupwise_registration.MAXFUN",
    "nipy.algorithms.registration.groupwise_registration.MAXITER",
    "nipy.algorithms.registration.groupwise_registration.STEPSIZE",
    "nipy.algorithms.registration.groupwise_registration.XTOL",
    "nipy.algorithms.registration.groupwise_registration.resample4d",
    "nipy.algorithms.registration.groupwise_registration.single_run_realign4d",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.max",
    "numpy.zeros",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.resample4d": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.scanner_coords": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nibabel.affines.apply_affine",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.single_run_realign4d": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "affine_class",
    "format_arg",
    "len",
    "list",
    "nipy.algorithms.registration.groupwise_registration.FTOL",
    "nipy.algorithms.registration.groupwise_registration.GTOL",
    "nipy.algorithms.registration.groupwise_registration.MAXFUN",
    "nipy.algorithms.registration.groupwise_registration.MAXITER",
    "nipy.algorithms.registration.groupwise_registration.Realign4dAlgorithm",
    "nipy.algorithms.registration.groupwise_registration.STEPSIZE",
    "nipy.algorithms.registration.groupwise_registration.XTOL",
    "nipy.algorithms.registration.groupwise_registration.adjust_subsampling",
    "numpy.array",
    "range",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.single_run_realign4d.format_arg": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.tr_from_header": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "get_header",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.groupwise_registration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.intp"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.histogram_registration.CLAMP_DTYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.FTOL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.GTOL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "as_xyz_image",
    "float",
    "inverse_affine",
    "make_xyz_image",
    "nipy.algorithms.registration.histogram_registration.CLAMP_DTYPE",
    "nipy.algorithms.registration.histogram_registration.NPOINTS",
    "nipy.algorithms.registration.histogram_registration.clamp",
    "nipy.algorithms.registration.histogram_registration.smallest_bounding_box",
    "nipy.algorithms.registration.histogram_registration.smooth_image",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._eval": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_joint_histogram",
    "nipy.algorithms.registration.histogram_registration.MAX_INT",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._get_interp": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.registration.histogram_registration.interp_methods"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._get_similarity": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._set_interp": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nipy.algorithms.registration.histogram_registration.interp_methods"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._set_similarity": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration._slicer": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.eval": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ChainTransform"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.eval_gradient": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.registration.histogram_registration.approx_gradient"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.eval_gradient.simi": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.eval_hessian": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.registration.histogram_registration.approx_hessian",
    "nipy.algorithms.registration.histogram_registration.approx_hessian_diag",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.eval_hessian.simi": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.explore": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ChainTransform",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.mgrid",
    "numpy.prod",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.optimize": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ChainTransform",
    "configure_optimizer",
    "fmin",
    "nipy.algorithms.registration.histogram_registration.FTOL",
    "nipy.algorithms.registration.histogram_registration.GTOL",
    "nipy.algorithms.registration.histogram_registration.MAXFUN",
    "nipy.algorithms.registration.histogram_registration.MAXITER",
    "nipy.algorithms.registration.histogram_registration.OPTIMIZER",
    "nipy.algorithms.registration.histogram_registration.VERBOSE",
    "nipy.algorithms.registration.histogram_registration.XTOL",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.optimize.callback": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.optimize.cost": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.set_fov": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "nipy.algorithms.registration.histogram_registration.ideal_spacing",
    "numpy.indices",
    "subgrid_affine",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.HistogramRegistration.subsample": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.MAXFUN": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.MAXITER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.MAX_INT": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.NPOINTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.OPTIMIZER": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.VERBOSE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.XTOL": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration._clamp": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "issubclass",
    "numpy.integer",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration._sms": {
  "data": {
   "shadows": "similarity_measures"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration.approx_gradient": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.approx_hessian": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "f",
    "len",
    "nipy.algorithms.registration.histogram_registration.approx_gradient",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.approx_hessian_diag": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.clamp": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.histogram_registration.CLAMP_DTYPE",
    "nipy.algorithms.registration.histogram_registration._clamp",
    "numpy.iinfo",
    "numpy.ones",
    "numpy.short"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.ideal_spacing": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "dir",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.interp_methods": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.histogram_registration.nd": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.histogram_registration.smallest_bounding_box": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.histogram_registration.smooth_image": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.optimizer": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.configure_optimizer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.optimizer.subdict",
    "scipy.optimize.fmin",
    "scipy.optimize.fmin_bfgs",
    "scipy.optimize.fmin_cg",
    "scipy.optimize.fmin_ncg",
    "scipy.optimize.fmin_powell"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.optimizer.fmin_bfgs": {
  "data": {
   "shadows": "scipy.optimize.fmin_bfgs"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.fmin_cg": {
  "data": {
   "shadows": "scipy.optimize.fmin_cg"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.fmin_ncg": {
  "data": {
   "shadows": "scipy.optimize.fmin_ncg"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.fmin_powell": {
  "data": {
   "shadows": "scipy.optimize.fmin_powell"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.fmin_simplex": {
  "data": {
   "shadows": "scipy.optimize.fmin"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.optimizer.subdict": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "nipy.algorithms.registration.optimizer.use_derivatives": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "nipy.algorithms.registration.polyaffine.TINY_SIGMA",
    "numpy.array",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.affine": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.affines": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.apply": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_apply_polyaffine",
    "apply_affine",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.compose": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Transform",
    "hasattr",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.PolyAffine.left_compose": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Transform",
    "hasattr",
    "len",
    "numpy.dot",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.polyaffine.TINY_SIGMA": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.polyaffine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.polyaffine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.resample": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.resample.INTERP_ORDER": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.resample.cast_array": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "nibabel.casting.shared_range",
    "numpy.clip",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.resample.resample": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Affine",
    "ValueError",
    "_cspline_resample3d",
    "_cspline_sample3d",
    "_cspline_transform",
    "affine_transform",
    "as_xyz_image",
    "hasattr",
    "inverse_affine",
    "isinstance",
    "len",
    "list",
    "make_xyz_image",
    "map_coordinates",
    "nipy.algorithms.registration.resample.INTERP_ORDER",
    "nipy.algorithms.registration.resample.cast_array",
    "numpy.dot",
    "numpy.indices",
    "numpy.prod",
    "numpy.reshape",
    "numpy.zeros",
    "tuple",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.resample.shared_range": {
  "data": {
   "shadows": "nibabel.casting.shared_range"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting": {
  "data": {
   "symbols_in_volume": [
    "nibabel.optpkg.optional_package",
    "nipy.algorithms.slicetiming.timefuncs.SLICETIME_FUNCTIONS"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.scripting.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.scripting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.aff2euler": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nibabel.eulerangles.mat2euler",
    "nipy.algorithms.registration.scripting.aff2rot_zooms"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.scripting.aff2rot_zooms": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.svd",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.scripting.euler": {
  "data": {
   "shadows": "nibabel.eulerangles"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.optional_package": {
  "data": {
   "shadows": "nibabel.optpkg.optional_package"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.save_image": {
  "data": {
   "shadows": "nipy.io.api.save_image"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.space_time_realign": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "SpaceTimeRealign",
    "ValueError",
    "enumerate",
    "input",
    "input.endswith",
    "isinstance",
    "matplotlib.pyplot.subplots",
    "nibabel.filename_parser.splitext_addext",
    "nibabel.load",
    "nipy.algorithms.registration.scripting.os",
    "nipy.algorithms.registration.scripting.timefuncs",
    "nipy.io.api.save_image",
    "numpy.array",
    "numpy.diag",
    "numpy.sort",
    "numpy.squeeze",
    "os.path.isfile",
    "os.path.join",
    "os.path.split",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.scripting.splitext_addext": {
  "data": {
   "shadows": "nibabel.filename_parser.splitext_addext"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.st": {
  "data": {
   "shadows": "nipy.algorithms.slicetiming"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.scripting.timefuncs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "nipy.algorithms.registration.setup.os",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.similarity_measures": {
  "data": {
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.registration.similarity_measures.CorrelationCoefficient",
    "nipy.algorithms.registration.similarity_measures.CorrelationRatio",
    "nipy.algorithms.registration.similarity_measures.CorrelationRatioL1",
    "nipy.algorithms.registration.similarity_measures.DiscreteParzenMutualInformation",
    "nipy.algorithms.registration.similarity_measures.MutualInformation",
    "nipy.algorithms.registration.similarity_measures.NormalizedMutualInformation",
    "nipy.algorithms.registration.similarity_measures.ParzenMutualInformation",
    "nipy.algorithms.registration.similarity_measures.SupervisedLikelihoodRatio",
    "nipy.algorithms.registration.similarity_measures.TINY",
    "numpy.double",
    "numpy.finfo",
    "numpy.maximum"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationCoefficient": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationCoefficient.__call__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.correlation2loglikelihood",
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.sqrt",
    "numpy.sum",
    "self.I",
    "self.J",
    "self.npoints",
    "self.renormalize"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationCoefficient.loss": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.log",
    "numpy.sqrt",
    "self",
    "self.I",
    "self.J",
    "self.mI",
    "self.mJ",
    "self.rho",
    "self.vI",
    "self.vJ"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationRatio": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationRatio.__call__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.correlation2loglikelihood",
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.sum",
    "self.I",
    "self.renormalize"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationRatioL1": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.CorrelationRatioL1.__call__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_L1_moments",
    "nipy.algorithms.registration.similarity_measures.correlation2loglikelihood",
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.array",
    "numpy.sum",
    "range",
    "self.renormalize"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.DiscreteParzenMutualInformation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.DiscreteParzenMutualInformation.loss": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.registration.similarity_measures.SIGMA_FACTOR",
    "nipy.algorithms.registration.similarity_measures.dist2loss",
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.array",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.MutualInformation": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.MutualInformation.loss": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.dist2loss",
    "nipy.algorithms.registration.similarity_measures.nonzero"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.NormalizedMutualInformation": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.NormalizedMutualInformation.__call__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.ParzenMutualInformation": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.ParzenMutualInformation.loss": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.registration.similarity_measures.SIGMA_FACTOR",
    "nipy.algorithms.registration.similarity_measures.dist2loss",
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.array",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.SIGMA_FACTOR": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.similarity_measures.SimilarityMeasure": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.SimilarityMeasure.__call__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.SimilarityMeasure.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.SimilarityMeasure.loss": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.SimilarityMeasure.npoints": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.SupervisedLikelihoodRatio": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.SimilarityMeasure"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.similarity_measures.SupervisedLikelihoodRatio.loss": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "nipy.algorithms.registration.similarity_measures.dist2loss"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.TINY": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.similarity_measures.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.similarity_measures.correlation2loglikelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.dist2loss": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nipy.algorithms.registration.similarity_measures.nonzero",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.similarity_measures.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.similarity_measures.nonzero": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.similarity_measures.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.similarity_measures.similarity_measures": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.test": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_affine": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_affine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_affine.random_vec12": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_affine_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Affine",
    "klass",
    "list",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_composed_affines": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Affine",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_indirect_affines": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Affine",
    "nose.tools.assert_false",
    "numpy.eye",
    "numpy.linalg.det",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_mat2vec": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Affine",
    "assert_almost_equal",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.det",
    "numpy.linalg.svd",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_rotation_mat2vec": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "numpy.diag",
    "numpy.isnan",
    "rotation_mat2vec"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_slices2aff": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "range",
    "slice",
    "slices2aff"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_affine.test_subgrid_affine": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "slice",
    "subgrid_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms": {
  "data": {
   "symbols_in_volume": [
    "Affine",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF1",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF2",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF3",
    "nipy.algorithms.registration.tests.test_chain_transforms.tmp",
    "numpy.arange",
    "numpy.diag",
    "numpy.eye",
    "numpy.linalg.det",
    "numpy.random.normal",
    "numpy.sign"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.AFF1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.AFF2": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.AFF3": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.POINTS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.test_creation": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Affine",
    "ChainTransform",
    "nibabel.affines.apply_affine",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF1",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF2",
    "nipy.algorithms.registration.tests.test_chain_transforms.AFF3",
    "nipy.algorithms.registration.tests.test_chain_transforms.POINTS",
    "nipy.algorithms.registration.tests.test_chain_transforms.tmp",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_chain_transforms.tmp": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.test_sample1d": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_cspline_sample1d",
    "_cspline_transform",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_cubic_spline.test_sample4d": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_cspline_sample4d",
    "_cspline_transform",
    "list",
    "numpy.mgrid",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d": {
  "data": {
   "symbols_in_volume": [
    "enumerate",
    "get_header",
    "load_image",
    "nibabel.Nifti1Image",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IMS",
    "numpy.eye",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.IM": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.IMS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "make_grid",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "float",
    "int",
    "max",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_futurewarning": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "FmriRealign4d",
    "FutureWarning",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.warnings",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_lowlevel_params": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Realign4dAlgorithm",
    "SpaceTimeRealign",
    "ValueError",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim",
    "numpy.array",
    "numpy.prod",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_make_grid_default": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid",
    "numpy.prod",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_make_grid_full_monthy": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim",
    "numpy.array",
    "numpy.minimum",
    "numpy.prod",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_make_grid_funfile": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim",
    "numpy.array",
    "numpy.prod",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_make_grid_random_borders": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim",
    "numpy.array",
    "numpy.minimum",
    "numpy.prod",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_make_grid_random_subsampling": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_fmri_realign4d._test_make_grid",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.reduced_dim",
    "numpy.array",
    "numpy.prod",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "SpaceTimeRealign",
    "float",
    "int",
    "io_orientation",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_ascending": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_ascending_interleaved": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_descending": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_descending_interleaved": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_incompatible_args": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.wrong_call",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_no_time_interp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_params": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Realign4d",
    "ValueError",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IMS",
    "nose.tools.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_realign4d_runs_with_different_affines": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "SpaceTimeRealign",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.testing.assert_array_equal",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_scanner_time": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Image4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_single_image": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Realign4d",
    "SpaceRealign",
    "SpaceTimeRealign",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_slice_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Image4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_slice_timing": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Image4d",
    "Rigid",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "resample4d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_spacerealign": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "SpaceRealign",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.test_spacetimerealign_params": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "SpaceTimeRealign",
    "ValueError",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IMS",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_fmri_realign4d.wrong_call": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "FmriRealign4d",
    "nipy.algorithms.registration.tests.test_fmri_realign4d.IM"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.registration.tests.test_histogram_registration.nose",
    "numpy.eye"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "HistogramRegistration",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization1": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization2": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "assert_almost_equal",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration._test_similarity_measure": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "assert_almost_equal",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.make_data_bool": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.make_data_float64": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.make_data_uint8": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_float64": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_float64"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_float64_nonstd": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_float64"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_int16": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_int16_nonstd": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_uint8": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_uint8"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_clamping_uint8_nonstd": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_uint8"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_correlation_coefficient": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_similarity_measure"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_correlation_ratio": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_similarity_measure"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_correlation_ratio_L1": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_similarity_measure"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_explore": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_histogram_masked_registration": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "assert_equal",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_histogram_registration": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "HistogramRegistration",
    "ValueError",
    "assert_raises",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_joint_hist_eval": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "assert_almost_equal",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_joint_hist_raw": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_joint_histogram",
    "assert_almost_equal",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.diag",
    "numpy.double",
    "numpy.indices",
    "numpy.random.randint",
    "numpy.short",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_masked_clamping_int16": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_clamping",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_bool",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_normalized_mutual_information": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_similarity_measure"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_renormalized_correlation_coefficient": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization1",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization2"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_renormalized_correlation_ratio": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization1",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization2"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_renormalized_correlation_ratio_l1": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization1",
    "nipy.algorithms.registration.tests.test_histogram_registration._test_renormalization2"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_set_fov": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "HistogramRegistration",
    "assert_equal",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.prod",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_similarity_derivatives": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "HistogramRegistration",
    "Rigid",
    "assert_equal",
    "float",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_smoothing": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "HistogramRegistration",
    "Rigid",
    "ValueError",
    "assert_almost_equal",
    "assert_raises",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_histogram_registration.test_supervised_likelihood_ratio": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Affine",
    "HistogramRegistration",
    "ValueError",
    "assert_almost_equal",
    "assert_raises",
    "make_xyz_image",
    "nipy.algorithms.registration.tests.test_histogram_registration.dummy_affine",
    "nipy.algorithms.registration.tests.test_histogram_registration.make_data_int16",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_polyaffine": {
  "data": {
   "symbols_in_volume": [
    "Affine",
    "PolyAffine",
    "nipy.algorithms.registration.tests.test_polyaffine.A",
    "nipy.algorithms.registration.tests.test_polyaffine.AT",
    "nipy.algorithms.registration.tests.test_polyaffine.NCENTERS",
    "nipy.algorithms.registration.tests.test_polyaffine.NPTS",
    "nipy.algorithms.registration.tests.test_polyaffine.T",
    "nipy.algorithms.registration.tests.test_polyaffine.affines",
    "nipy.algorithms.registration.tests.test_polyaffine.c",
    "nipy.algorithms.registration.tests.test_polyaffine.centers",
    "nipy.algorithms.registration.tests.test_polyaffine.raf",
    "nipy.algorithms.registration.tests.test_polyaffine.random_affine",
    "nipy.algorithms.registration.tests.test_polyaffine.sigma",
    "nipy.algorithms.registration.tests.test_polyaffine.xyz",
    "numpy.array",
    "numpy.dot",
    "numpy.random.rand",
    "range",
    "zip"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.A": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.AT": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.NCENTERS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.NPTS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.T": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.TA": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.affines": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.c": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.centers": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.id_affine": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.qc": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.raf": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.random_affine": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.sigma": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.t": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.tc": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.xyz": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.z": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_polyaffine.za": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_register": {
  "data": {
   "symbols_in_volume": [
    "load_image"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_register.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_register.anat_img": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_register.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_register.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_register.test_registers": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "HistogramRegistration",
    "nipy.algorithms.registration.tests.test_register.anat_img",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_resample.AUX": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.registration.tests.test_resample.ApplyAffine": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Transform"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.tests.test_resample.ApplyAffine.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nibabel.affines.apply_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample._test_resample": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Image",
    "as_xyz_image",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "resample",
    "vox2mni",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_resample.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_resample.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_resample.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_float": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cast_array",
    "float",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_int16": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_int32": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.round",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_int8": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_uint16": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_uint32": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.maximum",
    "numpy.round",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_cast_array_uint8": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "cast_array",
    "nipy.algorithms.registration.tests.test_resample.AUX",
    "numpy.dtype",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_resample_dtypes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Affine",
    "Transform",
    "nipy.algorithms.registration.tests.test_resample._test_resample",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_resample_outvalue": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Image",
    "nipy.algorithms.registration.tests.test_resample.ApplyAffine",
    "numpy.arange",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "resample",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_resample.test_resample_uint_data": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Affine",
    "Image",
    "nipy.algorithms.registration.tests.test_resample.ApplyAffine",
    "numpy.eye",
    "numpy.max",
    "numpy.min",
    "numpy.random.randint",
    "resample",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_scripting": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_scripting.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.euler": {
  "data": {
   "shadows": "nibabel.eulerangles"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.reg": {
  "data": {
   "shadows": "nipy.algorithms.registration"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.save_image": {
  "data": {
   "shadows": "nipy.io.api.save_image"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_scripting.test_aff2euler": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nibabel.eulerangles.euler2mat",
    "nipy.algorithms.registration.aff2euler",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_scripting.test_space_time_realign": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.algorithms.registration.space_time_realign",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_slice_timing": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.check_stc": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.allclose",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.gaussian_filter1d": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter1d"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.test_slice_time_correction": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "SpaceTimeRealign",
    "enumerate",
    "list",
    "nipy.algorithms.registration.tests.test_slice_timing.check_stc",
    "nipy.core.api.Image",
    "nipy.core.api.vox2scanner",
    "nose.tools.assert_false",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.eye",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "scipy.ndimage.gaussian_filter",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_slice_timing.vox2scanner": {
  "data": {
   "shadows": "nipy.core.api.vox2scanner"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.tests.test_transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.registration.tests.test_transform.test_transform": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AttributeError",
    "Transform",
    "getattr",
    "nose.tools.assert_raises",
    "numpy.random.normal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_transform.test_transform_other_init": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "C",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.tests.test_transform.test_transform_other_init.C": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Transform"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.tests.test_transform.test_transform_other_init.C.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "nipy.algorithms.registration.transform": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.transform.Transform": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.registration.transform.Transform.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "nipy.algorithms.registration.transform.Transform.apply": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "nipy.algorithms.registration.transform.Transform.compose": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nipy.algorithms.registration.transform.Transform"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.transform.Transform.param": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.type_check": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.registration.type_check._check_type": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "t"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.type_check.check_type": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.registration.type_check._check_type",
    "t"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.type_check.check_type_and_shape": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nipy.algorithms.registration.type_check._check_type",
    "numpy.asarray",
    "t",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.registration.type_check.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.resample": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.resample.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.algorithms.resample.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.algorithms.resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.resample.resample": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "Image",
    "ImageInterpolator",
    "affine_transform",
    "callable",
    "compose",
    "isinstance",
    "nibabel.affines.from_matvec",
    "nibabel.affines.to_matvec",
    "nipy.algorithms.resample.copy",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.resample.resample_img2img": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.resample.resample",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.resample.to_matvec": {
  "data": {
   "shadows": "nibabel.affines.to_matvec"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.segmentation.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.bench": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.brain_segmentation": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.brain_segmentation.T1_ref_params",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.segmentation.brain_segmentation.BrainT1Segmentation": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.segmentation.brain_segmentation.BrainT1Segmentation.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "map_from_ppm",
    "nipy.algorithms.segmentation.brain_segmentation.T1_ref_params",
    "numpy.array",
    "numpy.asarray",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.brain_segmentation.BrainT1Segmentation._init_parameters": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "moment_matching",
    "numpy.linspace",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.brain_segmentation.BrainT1Segmentation._run": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Segmentation"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.brain_segmentation.BrainT1Segmentation.convert": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "map_from_ppm",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.brain_segmentation.T1_ref_params": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.brain_segmentation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.brain_segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.segmentation": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.segmentation.nonzero",
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.segmentation.segmentation.BETA": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.segmentation.NGB_SIZE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.segmentation.NITERS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "nipy.algorithms.segmentation.segmentation.BETA",
    "nipy.algorithms.segmentation.segmentation.NGB_SIZE",
    "numpy.array",
    "numpy.asarray",
    "numpy.ones",
    "numpy.reshape",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.free_energy": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_interaction_energy",
    "nipy.algorithms.segmentation.segmentation.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.log_external_field": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.segmentation.log",
    "nipy.algorithms.segmentation.segmentation.nonzero",
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.inv",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.map": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.segmentation.map_from_ppm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.normalized_external_field": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.run": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.segmentation.NITERS",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.set_markov_prior": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.segmentation.segmentation._diag_indices",
    "numpy.asarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.ve_step": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_ve_step",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.Segmentation.vm_step": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "list",
    "nipy.algorithms.segmentation.segmentation.nonzero",
    "numpy.dot",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation._diag_indices": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.segmentation.binarize_ppm": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.log": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.segmentation.map_from_ppm": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.moment_matching": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "float",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.segmentation.nonzero": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.segmentation.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.setup.os",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.test": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation.anat_img"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.DIMS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation._check_dims": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "nose.tools.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "BrainT1Segmentation",
    "list",
    "nipy.algorithms.segmentation.tests.test_segmentation._check_dims",
    "nipy.algorithms.segmentation.tests.test_segmentation.anat_img",
    "nipy.algorithms.segmentation.tests.test_segmentation.anat_mask",
    "nose.tools.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation._test_segmentation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "nose.tools.assert_equal",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.anat_img": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.anat_mask": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.load_image": {
  "data": {
   "shadows": "load"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg2": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg3": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg4": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg5": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg6": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_brain_seg7": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "nipy.algorithms.segmentation.tests.test_segmentation._test_brain_seg",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_segmentation_3d": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Segmentation",
    "nipy.algorithms.segmentation.tests.test_segmentation.DIMS",
    "nipy.algorithms.segmentation.tests.test_segmentation._test_segmentation",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_segmentation_3d_multichannel": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Segmentation",
    "list",
    "nipy.algorithms.segmentation.tests.test_segmentation.DIMS",
    "nipy.algorithms.segmentation.tests.test_segmentation._test_segmentation",
    "numpy.eye",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_segmentation_3d_with_MRF": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Segmentation",
    "nipy.algorithms.segmentation.tests.test_segmentation.DIMS",
    "nipy.algorithms.segmentation.tests.test_segmentation._test_segmentation",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.segmentation.tests.test_segmentation.test_segmentation_3d_with_mask": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Segmentation",
    "nipy.algorithms.segmentation.tests.test_segmentation.DIMS",
    "nipy.algorithms.segmentation.tests.test_segmentation._test_segmentation",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.slicetiming.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.slicetiming.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.setup.configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.setup.os",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_asc_alt_2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_asc_alt_2_1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_asc_alt_half": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_asc_alt_siemens": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_ascending": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_desc_alt_2": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_desc_alt_half": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_descending": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.argsort",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.test_number_names": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.tests.test_timefuncs.tf": {
  "data": {
   "shadows": "timefuncs"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.timefuncs": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._derived_func",
    "nipy.algorithms.slicetiming.timefuncs.st_01234",
    "nipy.algorithms.slicetiming.timefuncs.st_02413",
    "nipy.algorithms.slicetiming.timefuncs.st_03142",
    "nipy.algorithms.slicetiming.timefuncs.st_13024",
    "nipy.algorithms.slicetiming.timefuncs.st_41302",
    "nipy.algorithms.slicetiming.timefuncs.st_42031",
    "nipy.algorithms.slicetiming.timefuncs.st_43210",
    "nipy.algorithms.slicetiming.timefuncs.st_odd0_even1"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.slicetiming.timefuncs.SLICETIME_FUNCTIONS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs._dec_filldoc": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs._dec_register_stf": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.slicetiming.timefuncs.SLICETIME_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs._dec_stfunc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_filldoc",
    "nipy.algorithms.slicetiming.timefuncs._dec_register_stf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs._derived_func": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "func._doc_template",
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs._derived_func.derived": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.timefuncs.asc_alt_2": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.asc_alt_2_1": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.asc_alt_half": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.asc_alt_siemens": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.ascending": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.desc_alt_2": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.desc_alt_half": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.descending": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "nipy.algorithms.slicetiming.timefuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.timefuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.timefuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_01234": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_02413": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "numpy.argsort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_03142": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_13024": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "numpy.argsort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_41302": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "nipy.algorithms.slicetiming.timefuncs.st_03142"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_42031": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "nipy.algorithms.slicetiming.timefuncs.st_02413"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_43210": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.slicetiming.timefuncs.st_odd0_even1": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "nipy.algorithms.slicetiming.timefuncs._dec_stfunc",
    "nipy.algorithms.slicetiming.timefuncs.st_02413",
    "nipy.algorithms.slicetiming.timefuncs.st_13024"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.api": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.bayesian_mixed_effects": {
  "data": {
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.bayesian_mixed_effects.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bayesian_mixed_effects.nonzero": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.bayesian_mixed_effects.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bayesian_mixed_effects.two_level_glm": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "list",
    "nipy.algorithms.statistics.bayesian_mixed_effects.nonzero",
    "numpy.dot",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.bench": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.bench.bench_intvol": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.bench_lips1d": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.bench.bench_intvol.sys",
    "nonintersecting_boxes",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.random.seed",
    "numpy.random.standard_normal",
    "numpy.testing.measure",
    "print",
    "randorth"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.bench_lips2d": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.bench.bench_intvol.sys",
    "nonintersecting_boxes",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.random.seed",
    "numpy.random.standard_normal",
    "numpy.testing.measure",
    "print",
    "randorth"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.bench_lips3d": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.bench.bench_intvol.sys",
    "nonintersecting_boxes",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.random.seed",
    "numpy.random.standard_normal",
    "numpy.testing.measure",
    "print",
    "randorth"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.bench.bench_intvol.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.size",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.fdr": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isscalar",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.sum",
    "numpy.where",
    "scipy.stats.norm.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.fdrcurve": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argsort",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.size",
    "range",
    "scipy.stats.norm.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.learn": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "numpy.dot",
    "numpy.exp",
    "numpy.float",
    "numpy.histogram",
    "numpy.linalg.pinv",
    "numpy.log",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.plot": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int",
    "len",
    "matplotlib.pylab.figure",
    "matplotlib.pylab.subplot",
    "max",
    "numpy.exp",
    "numpy.histogram",
    "numpy.log",
    "numpy.minimum",
    "numpy.size",
    "scipy.stats.norm.pdf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.threshold": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.argmin",
    "numpy.inf",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.NormalEmpiricalNull.uncorrected_threshold": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite",
    "scipy.stats.norm.isf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.check_p_values": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.isnan",
    "numpy.ravel",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.fdr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "matplotlib.pylab.figure",
    "matplotlib.pylab.plot",
    "matplotlib.pylab.xlabel",
    "matplotlib.pylab.ylabel",
    "min",
    "nipy.algorithms.statistics.empirical_pvalue.check_p_values",
    "numpy.arange",
    "numpy.minimum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.fdr_threshold": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.empirical_pvalue.check_p_values",
    "numpy.arange",
    "numpy.size",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.gamma_gaussian_fit": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.gaussian_fdr": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.empirical_pvalue.fdr",
    "numpy.squeeze",
    "scipy.stats.norm.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.gaussian_fdr_threshold": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.empirical_pvalue.fdr_threshold",
    "scipy.stats.norm.isf",
    "scipy.stats.norm.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.gaussian_filter1d": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter1d"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.mp": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.smoothed_histogram_from_samples": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.histogram",
    "numpy.log",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.empirical_pvalue.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.empirical_pvalue.three_classes_GMM_fit": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "GridDescriptor",
    "VBGMM",
    "int",
    "max",
    "numpy.array",
    "numpy.mean",
    "numpy.ones",
    "numpy.reshape",
    "numpy.size",
    "numpy.sort",
    "numpy.sum",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.formula.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.formula.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.formula.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.F": {
  "data": {
   "shadows": "formulae"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.VisibleDeprecationWarning": {
  "data": {
   "shadows": "nipy.utils.VisibleDeprecationWarning"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.asbytes": {
  "data": {
   "shadows": "nibabel.py3k.asbytes"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_dt_equal": {
  "data": {
   "shadows": "nibabel.testing.assert_dt_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_starr_equal": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "nibabel.testing.assert_dt_equal",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.fromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.simplefilter": {
  "data": {
   "shadows": "warnings.simplefilter"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_Rintercept": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_alias": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "f",
    "g",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_contrast1": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_design": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.dtype",
    "numpy.float",
    "numpy.recarray",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_design_expression": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_design_inputs": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_factor_add_sub": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_factor_getterm": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_factor_term": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.asscalar",
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_formula_from_recarray": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.rec.array",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_formula_inputs": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "nibabel.py3k.asbytes",
    "nose.tools.assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_formula_params": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_formula_property": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_getparams_terms": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_equal",
    "numpy.array",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_intercept": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_make_recarray": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "hasattr",
    "int",
    "nipy.algorithms.statistics.formula.tests.test_formula.assert_starr_equal",
    "nipy.utils.VisibleDeprecationWarning",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.core.records.fromrecords",
    "numpy.float",
    "numpy.int",
    "numpy.reshape",
    "range",
    "tuple",
    "warnings.catch_warnings",
    "warnings.simplefilter"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_make_recarray_axes": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_mul": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_natural_spline": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.greater_equal",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_nonlin1": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "f",
    "f.design",
    "f.mean",
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "print",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_nonlin2": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "f.design",
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_random_effects": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_true",
    "numpy.alltrue",
    "numpy.array",
    "numpy.equal",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_return_float": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "f",
    "f.design",
    "nose.tools.assert_equal",
    "numpy.float",
    "numpy.linspace",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_str_formula": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_stratify": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "nipy.algorithms.statistics.formula.tests.test_formula.sympy",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_subs": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "f",
    "f.subs",
    "g",
    "g.terms",
    "list",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_subtract": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_term_order_sub": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "terms"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.formula.tests.test_formula.test_terms": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Term",
    "TypeError",
    "isinstance",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "terms"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.median": {
  "data": {
   "shadows": "_median"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.__docformat__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.family.family": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.family.family.Binomial": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Family"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.Binomial.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Binomial.devresid": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.inf",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.Family.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family._getlink": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family._setlink": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family.deviance": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family.devresid": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family.fitted": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family.predict": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Family.weights": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Gamma": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Family"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.Gamma.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Gaussian": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Family"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.Gaussian.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Gaussian"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Gaussian.devresid": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.InverseGaussian": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Family"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.InverseGaussian.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.InverseGaussian"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.L": {
  "data": {
   "shadows": "links"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.family.Poisson": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Family",
    "numpy.inf"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.family.Poisson.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.family.Poisson"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.Poisson.devresid": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.family.V": {
  "data": {
   "shadows": "varfuncs"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.family.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.family.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.links": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.CDFLink",
    "nipy.algorithms.statistics.models.family.links.CLogLog",
    "nipy.algorithms.statistics.models.family.links.Log",
    "nipy.algorithms.statistics.models.family.links.Logit",
    "nipy.algorithms.statistics.models.family.links.Power",
    "nipy.algorithms.statistics.models.family.links.cauchy",
    "nipy.algorithms.statistics.models.family.links.identity",
    "nipy.algorithms.statistics.models.family.links.inverse",
    "nipy.algorithms.statistics.models.family.links.inverse_squared",
    "nipy.algorithms.statistics.models.family.links.probit",
    "nipy.algorithms.statistics.models.family.links.sqrt"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.family.links.CDFLink": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Logit"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.CDFLink.__call__": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CDFLink.__init__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CDFLink.deriv": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CDFLink.inverse": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CLogLog": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Logit"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.CLogLog.__call__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.log",
    "self.clean"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CLogLog.deriv": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.log",
    "self.clean"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.CLogLog.inverse": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Link": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.Link.__call__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Link.deriv": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Link.initialize": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Link.inverse": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Log": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Link"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.Log.__call__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Log.clean": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Logit",
    "numpy.clip",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Log.deriv": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Log.inverse": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Logit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Link"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.Logit.__call__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Logit.clean": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Logit",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Logit.deriv": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Logit.inverse": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Power": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.links.Link"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.links.Power.__call__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Power.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Power.deriv": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.Power.inverse": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.links.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.links.cauchy": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.cloglog": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.identity": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.inverse": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.inverse_squared": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.log": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.logit": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.links.probit": {
  "data": {
   "lineno": 319
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.links.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.links.sqrt": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.varfuncs.Binomial",
    "nipy.algorithms.statistics.models.family.varfuncs.Power",
    "nipy.algorithms.statistics.models.family.varfuncs.VarianceFunction"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Binomial": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Binomial.__call__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Binomial.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Binomial.clean": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.family.varfuncs.Binomial",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Power": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Power.__call__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.fabs",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.Power.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.VarianceFunction": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.VarianceFunction.__call__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.__docformat__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.binary": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.constant": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.mu": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.mu_cubed": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.mu_squared": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.family.varfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.glm": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.glm.Iterator": {
  "data": {
   "shadows": "nipy.externals.six.Iterator"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.glm.Model": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "nipy.externals.six.Iterator"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.glm.Model.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.glm.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.__iter__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.__next__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.glm.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.cont": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.glm.Model",
    "numpy.fabs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.deviance": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.estimate_scale": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.Model.fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "iter",
    "next",
    "nipy.algorithms.statistics.models.glm.Model",
    "numpy.asarray",
    "numpy.float64",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.info": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.info.__docformat__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.info.depends": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.info.postpone_import": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.model": {
  "data": {
   "symbols_in_volume": [
    "scipy.stats.t.ppf"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.model.FContrastResults": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.model.FContrastResults.__array__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.FContrastResults.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.FContrastResults.__str__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModel": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.model.Model"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModel.information": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModel.logL": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModel.score": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.AIC": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.BIC": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.Fcontrast": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.model.FContrastResults",
    "numpy.add.reduce",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.squeeze",
    "pos_recipr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.Tcontrast": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.model.TContrastResults",
    "numpy.asarray",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.squeeze",
    "pos_recipr",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.conf_int": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "list",
    "nipy.algorithms.statistics.models.model.inv_t_cdf",
    "numpy.asarray",
    "numpy.diag",
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.logL": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.t": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.diag",
    "numpy.sqrt",
    "pos_recipr",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.LikelihoodModelResults.vcov": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.isscalar",
    "numpy.newaxis",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.Model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.model.Model.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.Model.fit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.Model.initialize": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.Model.predict": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.TContrastResults": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.model.TContrastResults.__array__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.TContrastResults.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.inf",
    "scipy.stats.t"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.TContrastResults.__str__": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.model.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.model.inv_t_cdf": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.model.setattr_on_read": {
  "data": {
   "shadows": "nibabel.onetime.setattr_on_read"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.model.t_distribution": {
  "data": {
   "shadows": "scipy.stats.t"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.nlsmodel": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.nlsmodel.Iterator": {
  "data": {
   "shadows": "nipy.externals.six.Iterator"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nipy.externals.six.Iterator"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.SSE": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel._Y_changed": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.__iter__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.__next__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "StopIteration",
    "numpy.dot",
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel._design_changed": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.getZ": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.getomega": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.NLSModel.predict": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.nlsmodel.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.nlsmodel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.nlsmodel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.nlsmodel.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.regression.AREstimator": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.AREstimator.__call__": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.ar_bias_correct"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.AREstimator.__init__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.ar_bias_corrector"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.ARModel": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.OLSModel"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.ARModel.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nipy.algorithms.statistics.models.regression.ARModel",
    "numpy.asarray",
    "numpy.float64",
    "numpy.squeeze",
    "numpy.zeros",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.ARModel.iterative_fit": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.yule_walker",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.ARModel.whiten": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.GLSModel": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.OLSModel"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.GLSModel.__init__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.GLSModel",
    "numpy.linalg.cholesky",
    "numpy.linalg.pinv",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.GLSModel.whiten": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.OLSModel",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.fit": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.RegressionResults",
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.has_intercept": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "numpy.allclose",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.information": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.initialize": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nipy.algorithms.utils.matrices.matrix_rank",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.logL": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.rank": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "nipy.algorithms.utils.matrices.matrix_rank"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.score": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.OLSModel.whiten": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults": {
  "data": {
   "lineno": 696
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.F_overall": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "scipy.stats.f.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.MSE": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.MSR": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.MST": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.R2": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.R2_adj": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "nipy.algorithms.statistics.models.regression.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.SSE": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.SSR": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.SST": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "nipy.algorithms.statistics.models.regression.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.__init__": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.norm_resid": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "nipy.algorithms.utils.matrices.pos_recipr",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.predicted": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.RegressionResults.resid": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.WLSModel": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.OLSModel"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.regression.WLSModel.__init__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.regression.WLSModel",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.WLSModel.whiten": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.__docformat__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.ar_bias_correct": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "hasattr",
    "nipy.algorithms.statistics.models.regression.ar_bias_corrector",
    "nipy.algorithms.utils.matrices.pos_recipr",
    "numpy.dot",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.ar_bias_corrector": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.toeplitz"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.isestimable": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.utils.matrices.matrix_rank",
    "numpy.asarray",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.regression.matrix_rank": {
  "data": {
   "shadows": "nipy.algorithms.utils.matrices.matrix_rank"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.pos_recipr": {
  "data": {
   "shadows": "nipy.algorithms.utils.matrices.pos_recipr"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.setattr_on_read": {
  "data": {
   "shadows": "nibabel.onetime.setattr_on_read"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.regression.yule_walker": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "den",
    "numpy.asarray",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.solve",
    "scipy.linalg.toeplitz",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.models.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.models.setupscons.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.setupscons.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.setupscons.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.test": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.exampledata": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.exampledata.data",
    "nipy.algorithms.statistics.models.tests.exampledata.filename",
    "nipy.algorithms.statistics.models.tests.exampledata.os",
    "numpy.fromfile"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.data": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.filename": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.x": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.exampledata.y": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova": {
  "data": {
   "symbols_in_volume": [
    "Factor",
    "float",
    "io.StringIO",
    "make_recarray",
    "matrix_rank",
    "nipy.algorithms.statistics.models.tests.test_anova.D",
    "nipy.algorithms.statistics.models.tests.test_anova.F",
    "nipy.algorithms.statistics.models.tests.test_anova.MS",
    "nipy.algorithms.statistics.models.tests.test_anova.SS",
    "nipy.algorithms.statistics.models.tests.test_anova.XTXinv",
    "nipy.algorithms.statistics.models.tests.test_anova.Y",
    "nipy.algorithms.statistics.models.tests.test_anova.beta",
    "nipy.algorithms.statistics.models.tests.test_anova.cbeta",
    "nipy.algorithms.statistics.models.tests.test_anova.contrasts",
    "nipy.algorithms.statistics.models.tests.test_anova.cov_cbeta",
    "nipy.algorithms.statistics.models.tests.test_anova.data",
    "nipy.algorithms.statistics.models.tests.test_anova.df",
    "nipy.algorithms.statistics.models.tests.test_anova.df_resid",
    "nipy.algorithms.statistics.models.tests.test_anova.f1",
    "nipy.algorithms.statistics.models.tests.test_anova.f2",
    "nipy.algorithms.statistics.models.tests.test_anova.p",
    "nipy.algorithms.statistics.models.tests.test_anova.resid",
    "nipy.algorithms.statistics.models.tests.test_anova.sigmasq",
    "nipy.algorithms.statistics.models.tests.test_anova.twoway",
    "nipy.externals.six.u",
    "numpy.dot",
    "numpy.linalg.pinv"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.D": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.F": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.MS": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.SS": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.XTXinv": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.Y": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.assert_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.assert_equal": {
  "data": {
   "shadows": "nipy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.beta": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.cbeta": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.contrasts": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.cov_cbeta": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.data": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.df": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.df_resid": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.f1": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.f2": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.p": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.resid": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.routput": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.sigmasq": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.six": {
  "data": {
   "shadows": "nipy.externals.six"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.test_Ragreement": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_anova.F",
    "nipy.algorithms.statistics.models.tests.test_anova.MS",
    "nipy.algorithms.statistics.models.tests.test_anova.SS",
    "nipy.algorithms.statistics.models.tests.test_anova.df",
    "nipy.algorithms.statistics.models.tests.test_anova.p",
    "nipy.testing.assert_almost_equal",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.test_names": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_anova.D",
    "nipy.algorithms.statistics.models.tests.test_anova.twoway",
    "nipy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.test_scipy_stats": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "OLSModel",
    "nipy.algorithms.statistics.models.tests.test_anova.D",
    "nipy.algorithms.statistics.models.tests.test_anova.F",
    "nipy.algorithms.statistics.models.tests.test_anova.Y",
    "nipy.algorithms.statistics.models.tests.test_anova.contrasts",
    "nipy.algorithms.statistics.models.tests.test_anova.df",
    "nipy.algorithms.statistics.models.tests.test_anova.p",
    "nipy.algorithms.statistics.models.tests.test_anova.twoway",
    "nipy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_anova.twoway": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_ar": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_ar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_ar.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_ar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_ar.test_armodel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_estimable.test_estimable": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "isestimable",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_glm": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.GLM": {
  "data": {
   "shadows": "Model"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.VARS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.setup": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_glm.VARS",
    "numpy.greater",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.test_Logistic": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_glm.VARS",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.test_Logisticdegenerate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_glm.VARS",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_glm.test_cont": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_glm.VARS",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model": {
  "data": {
   "symbols_in_volume": [
    "OLSModel",
    "nipy.algorithms.statistics.models.tests.test_model.MODEL",
    "nipy.algorithms.statistics.models.tests.test_model.N",
    "nipy.algorithms.statistics.models.tests.test_model.X",
    "nipy.algorithms.statistics.models.tests.test_model.Y",
    "numpy.c_",
    "numpy.linspace",
    "numpy.ones",
    "numpy.r_"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_model.MODEL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_model.N": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_model.RESULTS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_model.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.X": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_model.Y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_conf_int": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_f_output": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_f_output_new_api": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_model": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError",
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "nipy.algorithms.statistics.models.tests.test_model.Y",
    "nose.SkipTest",
    "numpy.mean",
    "numpy.percentile",
    "numpy.testing.assert_array_almost_equal",
    "percentile"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_t_contrast": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_model.test_t_output": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_model.RESULTS",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.Rdata": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.Rresults": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.Rscript": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.niptest": {
  "data": {
   "shadows": "nipy.testing"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_olsR.test_results": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "OLSModel",
    "enumerate",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_array_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "numpy.array",
    "numpy.fabs",
    "numpy.identity",
    "numpy.log",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.tests.test_regression.RNG",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.RNG": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.X": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.Y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_AR": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ARModel",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_AR_degenerate": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ARModel",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_OLS": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "OLSModel",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_OLS_degenerate": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "OLSModel",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_ar_estimator": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "AREstimator",
    "OLSModel",
    "abs",
    "ar_bias_correct",
    "ar_bias_corrector",
    "are",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.c_",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_yule_walker_R": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.models.tests.test_regression.X",
    "nipy.algorithms.statistics.models.tests.test_regression.Y",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "r_fudge",
    "scipy.linalg.pinv",
    "yule_walker"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_regression.test_yule_walker_R.r_fudge": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.test_StepFunction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.tests.test_utils.test_StepFunctionBadShape": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.models.utils.ECDF": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.utils.StepFunction",
    "numpy.arange",
    "numpy.array",
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils.StepFunction": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.models.utils.StepFunction.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils.StepFunction.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.inf",
    "numpy.take",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils.__docformat__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.models.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.utils.mad": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.fabs",
    "numpy.median",
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils.monotone_fn_inverter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fn",
    "numpy.argsort",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.models.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.models.utils.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.onesample": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.onesample.__docformat__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.onesample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.onesample.estimate_mean": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_stretch",
    "numpy.add.reduce",
    "numpy.multiply.outer",
    "numpy.ones",
    "numpy.power",
    "numpy.sqrt",
    "numpy.squeeze",
    "pos_recipr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.onesample.estimate_varatio": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_stretch",
    "list",
    "numpy.dot",
    "numpy.multiply.outer",
    "numpy.nan_to_num",
    "numpy.ones",
    "numpy.product",
    "numpy.squeeze",
    "pos_recipr",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.onesample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.quantile": {
  "data": {
   "shadows": "_quantile"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.rft.ChiBarSquared": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ChiSquared"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.ChiBarSquared.__call__": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.FStat",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "self",
    "self.stat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ChiBarSquared.__init__": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ChiSquared",
    "self",
    "self._getmu"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ChiBarSquared._getmu": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.Gaussian",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "nipy.algorithms.statistics.rft.binomial",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.linspace",
    "numpy.power",
    "numpy.sqrt",
    "range",
    "scipy.stats.chi.sf",
    "self.dfn",
    "self.mu"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ChiSquared": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.ChiSquared.__call__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "numpy.sqrt",
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ChiSquared.__init__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.spherical_search",
    "numpy.inf",
    "self",
    "self.dfn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.IntrinsicVolumes"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.ECcone.__call__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "P",
    "float",
    "nipy.algorithms.statistics.rft.ECquasi",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.pi",
    "numpy.poly1d",
    "numpy.power",
    "q",
    "q_even",
    "q_odd",
    "range",
    "scipy.stats.norm.sf",
    "scipy.stats.t.sf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone._quasi_polynomials": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.statistics.rft.ECquasi",
    "nipy.algorithms.statistics.rft.Q",
    "numpy.arange",
    "numpy.pi",
    "numpy.power",
    "range",
    "self.dfd",
    "self.mu",
    "self.order"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone.density": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone.integ": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone.pvalue": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECcone.quasi": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.isfinite",
    "numpy.poly1d",
    "q_even",
    "q_even.coeffs",
    "q_odd",
    "range",
    "self._quasi_polynomials",
    "self.dfd"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.poly1d"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__add__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "max",
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.isfinite",
    "numpy.poly1d.__add__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__call__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.poly1d.__call__",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__div__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__eq__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.poly1d.__eq__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "hasattr",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.poly1d.__init__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__mul__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.isscalar",
    "numpy.poly1d.__mul__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__ne__": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__pow__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.poly1d.__pow__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__repr__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.isfinite",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__setattr__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.inf",
    "numpy.poly1d.__setattr__"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.__sub__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.change_exponent": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.isfinite",
    "numpy.polymul"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.compatible": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.denom_poly": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.ECquasi.deriv": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECquasi",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.poly1d.__mul__",
    "numpy.poly1d.deriv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.FStat": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.FStat.__call__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "numpy.sqrt",
    "self",
    "self.dfn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.FStat.__init__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.spherical_search",
    "numpy.inf",
    "self",
    "self.dfn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.Gaussian": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.rft.Hotelling": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.Hotelling.__call__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "numpy.sqrt",
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.Hotelling.__init__": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.spherical_search",
    "numpy.inf",
    "self",
    "self.k"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.IntrinsicVolumes": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.IntrinsicVolumes.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "isinstance",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.asarray",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.IntrinsicVolumes.__mul__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.IntrinsicVolumes.__str__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.MultilinearForm": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.MultilinearForm.__init__": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "nipy.algorithms.statistics.rft.spherical_search",
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.OneSidedF": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.OneSidedF.__call__": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.sqrt",
    "self",
    "self.dfn",
    "self.mu",
    "self.regions",
    "self.regions.mu"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.OneSidedF.__init__": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.spherical_search",
    "numpy.inf",
    "self",
    "self.dfn",
    "self.regions"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.Q": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "numpy.around",
    "numpy.exp",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.poly1d",
    "range",
    "scipy.special.gammaln",
    "scipy.special.hermitenorm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.Roy": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.Roy.__call__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "numpy.sqrt",
    "self",
    "self.dfn"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.Roy.__init__": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "nipy.algorithms.statistics.rft.spherical_search",
    "numpy.inf",
    "self",
    "self.dfn",
    "self.k"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.TStat": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.TStat.__init__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.ECcone",
    "numpy.inf",
    "self"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.ball_search": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "nipy.algorithms.statistics.rft.mu_ball",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.beta": {
  "data": {
   "shadows": "scipy.special.beta"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.binomial": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "scipy.special.beta"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.factorial": {
  "data": {
   "shadows": "scipy.misc.factorial"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.fnsum": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.algorithms.statistics.rft.fnsum.__call__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "q"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.fnsum.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.hermitenorm": {
  "data": {
   "shadows": "scipy.special.hermitenorm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.mu_ball": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.binomial",
    "numpy.pi",
    "numpy.power",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.mu_sphere": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.binomial",
    "numpy.pi",
    "numpy.power",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.scale_space": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "numpy.floor",
    "numpy.log",
    "numpy.pi",
    "numpy.zeros",
    "range",
    "scipy.misc.factorial"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.spherical_search": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "nipy.algorithms.statistics.rft.mu_sphere",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.rft.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.rft.volume2ball": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.rft.IntrinsicVolumes",
    "nipy.algorithms.statistics.rft.ball_search",
    "nipy.algorithms.statistics.rft.mu_ball",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.setup.configuration": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.setup.os",
    "numpy.distutils.misc_util.Configuration",
    "numpy.get_include"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.setup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.test": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.nipy.algorithms.statistics.tests.test_intrinsic_volumes": {
  "data": {
   "shadows": "nipy.algorithms.statistics.tests.test_intrinsic_volumes"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.nipy.algorithms.statistics.tests.test_rft": {
  "data": {
   "shadows": "nipy.algorithms.statistics.tests.test_rft"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.tests.test_empirical_pvalue.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.setup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_empirical_pvalue.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.teardown": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_empirical_pvalue.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_efdr": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NormalEmpiricalNull",
    "numpy.random.randn",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_fdr_neg": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fdr",
    "fdr_threshold",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_fdr_pos": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "fdr",
    "fdr_threshold",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_gaussian_fdr": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "fdr",
    "fdr.max",
    "fdr.min",
    "gaussian_fdr",
    "nose.tools.assert_true",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_gaussian_fdr_threshold": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gaussian_fdr_threshold",
    "nose.tools.assert_true",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.test_smooth_histo": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.absolute",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sqrt",
    "smoothed_histogram_from_samples"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_empirical_pvalue.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_histogram": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_histogram.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_histogram.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_histogram.test_histogram": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "histogram",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.box": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "numpy.int",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.elsym": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "itertools.combinations",
    "len",
    "numpy.product",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.nonintersecting_boxes": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "max",
    "min",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.box",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randombox",
    "numpy.unique",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2dots": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2mu1_tet": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2dots"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2mu3_tet": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2dots"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randombox": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.box",
    "numpy.random.random_integers",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randorth": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.symnormal",
    "numpy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.symnormal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.random.standard_normal",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test__mu1_tetface": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "_mu1_tetface",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_ec": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "f",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randombox",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_ec_disjoint": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "e",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.nonintersecting_boxes",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_ec_wrapping": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_lips1_disjoint": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "e",
    "e.shape",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.elsym",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.nonintersecting_boxes",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randorth",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.product",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "phi",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_lips2_disjoint": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "e",
    "e.shape",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.elsym",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.nonintersecting_boxes",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randorth",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.product",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "phi",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_lips3_disjoint": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "e",
    "e.shape",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.elsym",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.nonintersecting_boxes",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randorth",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.product",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "phi",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_lips3_nans": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "e",
    "e.shape",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.randorth",
    "numpy.dot",
    "numpy.float",
    "numpy.indices",
    "numpy.int",
    "numpy.isnan",
    "numpy.product",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "phi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_lips_wrapping": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ec_func",
    "len",
    "lips_func",
    "nose.tools.assert_equal",
    "numpy.float",
    "numpy.indices",
    "numpy.int",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_mu1_tet": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2mu1_tet",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_mu1tri": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_mu2tet": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_mu2tri": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_mu3tet": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.pts2mu3_tet",
    "nipy.algorithms.statistics.tests.test_intrinsic_volumes.wiki_tet_vol",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.test_slices": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "e",
    "numpy.float",
    "numpy.indices",
    "numpy.int",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "p"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_intrinsic_volumes.wiki_tet_vol": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.tests.test_mixed_effects.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_mfx": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "generate_data",
    "mfx_stat",
    "nose.tools.assert_true",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_mfx_ftest": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "generate_data",
    "numpy.abs",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "one_sample_ftest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_mfx_ttest": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "generate_data",
    "numpy.abs",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "one_sample_ttest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_t_test": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.random.randn",
    "numpy.sqrt",
    "t_stat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_two_level_glm": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.random.random",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "two_level_glm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_two_level_glm_error": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "two_level_glm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_two_level_glm_novar": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.mean",
    "numpy.random.normal",
    "numpy.zeros",
    "print",
    "two_level_glm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_two_sample_ftest": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "generate_data",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "two_sample_ftest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_mixed_effects.test_two_sample_ttest": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "generate_data",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "two_sample_ttest"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_onesample": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_onesample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_onesample.assert_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_onesample.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_onesample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_onesample.onesample": {
  "data": {
   "shadows": "nipy.algorithms.statistics.onesample"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_onesample.test_estimate_varatio": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.onesample.estimate_mean",
    "nipy.algorithms.statistics.onesample.estimate_varatio",
    "nipy.testing.assert_almost_equal",
    "numpy.fabs",
    "numpy.linspace",
    "numpy.multiply.outer",
    "numpy.ones",
    "numpy.random.standard_normal",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_quantile": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.tests.test_quantile.nose",
    "numpy.sctypes",
    "sum"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_quantile.NUMERIC_TYPES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.tests.test_quantile.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.another_percentile": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "float",
    "numpy.apply_along_axis",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_quantile.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.np_median": {
  "data": {
   "shadows": "numpy.median"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.sp_percentile": {
  "data": {
   "shadows": "scipy.stats.scoreatpercentile"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_quantile.test_median": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_median",
    "nipy.algorithms.statistics.tests.test_quantile.NUMERIC_TYPES",
    "numpy.float64",
    "numpy.median",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_quantile.test_quantile": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_quantile",
    "nipy.algorithms.statistics.tests.test_quantile.NUMERIC_TYPES",
    "nipy.algorithms.statistics.tests.test_quantile.another_percentile",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_rft.F": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.statistics.tests.test_rft.K",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.pi",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.F_alternative": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.statistics.tests.test_rft.polyF",
    "numpy.asarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.pi",
    "numpy.power",
    "numpy.sqrt",
    "p"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.K": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "lbinom",
    "numpy.arange",
    "numpy.exp",
    "numpy.floor",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.log",
    "numpy.poly1d",
    "numpy.power",
    "range",
    "scipy.misc.factorial",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.K.lbinom": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.factorial": {
  "data": {
   "shadows": "scipy.misc.factorial"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.hermitenorm": {
  "data": {
   "shadows": "scipy.special.hermitenorm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.polyF": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "float",
    "nipy.algorithms.statistics.tests.test_rft.K",
    "numpy.exp",
    "numpy.hstack",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.pi",
    "numpy.poly1d",
    "numpy.power",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_F1": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_rft.F",
    "nipy.algorithms.statistics.tests.test_rft.F_alternative",
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_F2": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_rft.F_alternative",
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_F3": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_rft.F",
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_Q": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.testing.assert_almost_equal",
    "range",
    "res",
    "scipy.special.hermitenorm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_T1": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "t"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_T2": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range",
    "t",
    "t.density"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_chi1": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_chi2": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.tests.test_rft.polyF",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_chi3": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_hotelling1": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_hotelling2": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "p",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_hotelling4": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "p",
    "range",
    "t"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_multivariate_forms": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_onesidedF": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_polynomial1": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.special.hermitenorm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_polynomial2": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "range",
    "scipy.special.hermitenorm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_polynomial3": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_roy1": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_scale": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.pi",
    "numpy.power",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "stat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search1": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.dec.slow",
    "range",
    "stat",
    "stat.density"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search2": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "len",
    "numpy.inf",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.dec.slow",
    "range",
    "stat"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search3": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "g1",
    "g2",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search4": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "g1",
    "g2",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_rft.test_search5": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "g1",
    "g1.density",
    "g2",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.statistics.tests.test_utils.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.tests.test_utils.test_mahalanobis": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "multiple_mahalanobis",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_utils.test_mahalanobis2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "multiple_mahalanobis",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_utils.test_multiple_fast_inv": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "multiple_fast_inv",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.tests.test_utils.test_z_score": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "scipy.stats.norm.sf",
    "z_score"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.test_EC2",
    "nipy.algorithms.statistics.utils.test_EC3"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.statistics.utils.TINY": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.algorithms.statistics.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.calc_lwork": {
  "data": {
   "shadows": "scipy.linalg.calc_lwork"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.complex": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "itertools.combinations",
    "len",
    "list",
    "numpy.max",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.cube_with_strides_center": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nipy.algorithms.statistics.utils.complex",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.decompose2d": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.cube_with_strides_center",
    "nipy.algorithms.statistics.utils.join_complexes",
    "numpy.bool",
    "numpy.empty",
    "numpy.product",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.decompose3d": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.cube_with_strides_center",
    "nipy.algorithms.statistics.utils.join_complexes",
    "numpy.bool",
    "numpy.empty",
    "numpy.product",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.get_lapack_funcs": {
  "data": {
   "shadows": "scipy.linalg.lapack.get_lapack_funcs"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.join_complexes": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.multiple_fast_inv": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "enumerate",
    "getrf",
    "getri",
    "getri_lwork",
    "int",
    "numpy.asarray_chkfinite",
    "numpy.linalg.LinAlgError",
    "scipy.linalg.calc_lwork.getri",
    "scipy.linalg.lapack.get_lapack_funcs"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.multiple_mahalanobis": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.utils.multiple_fast_inv",
    "numpy.ascontiguousarray",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.statistics.utils.test_EC2": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.decompose2d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.test_EC3": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.decompose3d"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.statistics.utils.z_score": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.TINY",
    "numpy.maximum",
    "numpy.minimum",
    "scipy.stats.norm.isf"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.test": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.algorithms.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.tests.test_interpolator": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.tests.test_interpolator.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_interpolator.test_interpolator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImageInterpolator",
    "nipy.core.api.Image",
    "nipy.core.api.vox2mni",
    "numpy.arange",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_interpolator.vox2mni": {
  "data": {
   "shadows": "nipy.core.api.vox2mni"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.tests.test_kernel_smooth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.randint": {
  "data": {
   "shadows": "numpy.random.random_integers"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_anat_smooth": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "LinearFilter",
    "load_image",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_func_smooth": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "LinearFilter",
    "NotImplementedError",
    "load_image",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_funny_coordmap": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "LinearFilter",
    "compose",
    "drop_io_dim",
    "euler2mat",
    "load_image",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_kernel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AffineTransform.from_start_step",
    "Image",
    "LinearFilter",
    "_indices",
    "coordmap",
    "kernel",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.corrcoef",
    "numpy.indices",
    "numpy.product",
    "numpy.random.random_integers",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_kernel._indices": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_kernel_smooth.test_sigma_fwhm": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "fwhm2sigma",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.arange",
    "sigma2fwhm"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.tests.test_resample.AffineTransform": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.ArrayCoordMap": {
  "data": {
   "shadows": "nipy.core.api.ArrayCoordMap"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.CoordinateMap": {
  "data": {
   "shadows": "nipy.core.api.CoordinateMap"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.anatfile": {
  "data": {
   "shadows": "nipy.testing.anatfile"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.gui_review": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.algorithms.tests.test_resample.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.resample": {
  "data": {
   "shadows": "nipy.algorithms.resample.resample"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.resample_img2img": {
  "data": {
   "shadows": "nipy.algorithms.resample.resample_img2img"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.slices": {
  "data": {
   "shadows": "nipy.core.reference.slices"
  },
  "type": "import"
 },
 "nipy.algorithms.tests.test_resample.test_2d_from_3d": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.ArrayCoordMap.from_shape",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_nonaffine": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "curve",
    "nipy.algorithms.resample.resample",
    "nipy.algorithms.tests.test_resample.gui_review",
    "nipy.algorithms.tests.test_resample.pylab",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.AffineTransform.from_start_step",
    "nipy.core.api.Image",
    "numpy.identity",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_nonaffine.curve": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample2d": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample2d1": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample2d1.mapper": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample2d2": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample2d3": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample3d": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample_img2img": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.resample.resample_img2img",
    "nipy.io.api.load_image",
    "nipy.testing.anatfile",
    "nipy.testing.funcfile",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample_outvalue": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "itertools.product",
    "nipy.algorithms.resample.resample",
    "nipy.algorithms.resample.resample_img2img",
    "nipy.core.api.Image",
    "nipy.core.api.vox2mni",
    "numpy.arange",
    "numpy.eye",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.intp",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_resample_outvalue.func": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_rotate2d": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.array",
    "numpy.diag",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_rotate2d2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.array",
    "numpy.diag",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_rotate2d3": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.array",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_rotate3d": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "numpy.array",
    "numpy.diag",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.test_slice_from_3d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "nipy.algorithms.resample.resample",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.api.Image",
    "nipy.core.reference.slices.xslice",
    "nipy.core.reference.slices.yslice",
    "nipy.core.reference.slices.zslice",
    "numpy.diag",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.tests.test_resample.vox2mni": {
  "data": {
   "shadows": "nipy.core.api.vox2mni"
  },
  "type": "import"
 },
 "nipy.algorithms.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.fast_distance": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.fast_distance.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.fast_distance.euclidean_distance": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.maximum",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.fast_distance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.matrices": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.matrices.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.matrices.full_rank": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "nipy.algorithms.utils.matrices.matrix_rank",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.float64",
    "numpy.transpose",
    "range",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.matrices.matrix_rank": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "max",
    "numpy.all",
    "numpy.asarray",
    "numpy.finfo",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.matrices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.matrices.pos_recipr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.matrices.recipr0": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.matrices.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.pca": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.pca._get_basis_projections": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "range",
    "rmse_scales_func"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.pca._get_covariance": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dot",
    "numpy.nan_to_num",
    "numpy.sctypes",
    "numpy.zeros",
    "range",
    "rmse_scales_func",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.pca.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.pca.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.pca.pca": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.utils.pca._get_basis_projections",
    "nipy.algorithms.utils.pca._get_covariance",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.eigh",
    "numpy.linalg.pinv",
    "numpy.linalg.svd",
    "numpy.rollaxis",
    "project_resid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.pca.pca.project_resid": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.pca.pca.rmse_scales_func": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.square",
    "numpy.where",
    "project_resid"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.pca.pca_image": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "AxisError",
    "ValueError",
    "drop_io_dim",
    "img_klass",
    "io_axis_indices",
    "nipy.algorithms.utils.pca.pca",
    "orth_axes",
    "rollimg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.utils.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.setup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.tests.test_fast_distance": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.algorithms.utils.tests.test_fast_distance.nose"
   ]
  },
  "type": "module"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.ed": {
  "data": {
   "shadows": "euclidean_distance"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.test_euclidean_1": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_fast_distance.test_euclidean_2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_matrices": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.tests.test_matrices.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_matrices.test_full_rank": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "full_rank",
    "matrix_rank",
    "nose.tools.assert_equal",
    "numpy.random.RandomState",
    "numpy.sign",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_matrices.test_matrix_rank": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "matrix_rank",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.finfo",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_matrices.test_pos_recipr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float64",
    "numpy.int8",
    "numpy.testing.assert_array_almost_equal",
    "pos_recipr"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_matrices.test_recipr0": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "recipr0"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.tests.test_pca.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_array_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_array_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_equal": {
  "data": {
   "shadows": "nipy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_raises": {
  "data": {
   "shadows": "nipy.testing.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.assert_true": {
  "data": {
   "shadows": "nipy.testing.assert_true"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.algorithms.utils.tests.test_pca.diagonal_covariance": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca.pos1pca": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.res2pos1",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.reconstruct": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.prod",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.res2pos1": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.sign",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.root_mse": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.setup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.io.api.load_image",
    "nipy.testing.funcfile",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_2D": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.diagonal_covariance",
    "nipy.algorithms.utils.tests.test_pca.reconstruct",
    "nipy.algorithms.utils.tests.test_pca.root_mse",
    "nipy.testing.assert_array_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "numpy.random.uniform",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_2d_eq_4d": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.pos1pca",
    "nipy.testing.assert_array_almost_equal",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_PCAMask": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_raises",
    "numpy.bool_",
    "numpy.sctypes",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_PCAMask_nostandardize": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_PCANoMask": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_PCANoMask_nostandardize": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_both": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "numpy.random.standard_normal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_diagonality": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.diagonal_covariance",
    "nipy.testing.assert_true",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_input_effects": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.pos1pca",
    "nipy.algorithms.utils.tests.test_pca.reconstruct",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_raises",
    "numpy.rollaxis",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_keep": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "numpy.random.standard_normal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_resid": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.reconstruct",
    "nipy.algorithms.utils.tests.test_pca.root_mse",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "numpy.allclose",
    "numpy.random.standard_normal",
    "pca"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca.test_same_basis": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca.data",
    "nipy.algorithms.utils.tests.test_pca.pos1pca",
    "nipy.testing.assert_almost_equal",
    "numpy.prod",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image": {
  "data": {},
  "type": "module"
 },
 "nipy.algorithms.utils.tests.test_pca_image.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image._rank": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.cm_product": {
  "data": {
   "shadows": "product"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.data_dict": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.algorithms.utils.tests.test_pca_image.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.img_res2pos1": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Image",
    "numpy.sign",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.pca_array": {
  "data": {
   "shadows": "pca"
  },
  "type": "import"
 },
 "nipy.algorithms.utils.tests.test_pca_image.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Image",
    "drop_io_dim",
    "load_image",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.float64",
    "numpy.greater",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "rollimg"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_5d": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_PCAMask": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_PCAMask_nostandardize": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_PCANoMask": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_PCANoMask_nostandardize": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_both": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_keep": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_mask_match": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "nose.tools.assert_raises",
    "pca_image",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_other_axes": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "enumerate",
    "list",
    "nibabel.affines.from_matvec",
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "nipy.algorithms.utils.tests.test_pca_image.img_res2pos1",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image",
    "res2pos1"
   ]
  },
  "type": "function"
 },
 "nipy.algorithms.utils.tests.test_pca_image.test_resid": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "nipy.algorithms.utils.tests.test_pca_image._rank",
    "nipy.algorithms.utils.tests.test_pca_image.data_dict",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "pca_image"
   ]
  },
  "type": "function"
 },
 "nipy.as_image": {
  "data": {
   "shadows": "nipy.io.api.as_image"
  },
  "type": "import"
 },
 "nipy.bench": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.core": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.core.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.core.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.api": {
  "data": {},
  "type": "module"
 },
 "nipy.core.api.img_rollaxis": {
  "data": {
   "shadows": "rollaxis"
  },
  "type": "import"
 },
 "nipy.core.bench": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.core.image": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.core.image.__docformat__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.core.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.bench": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.core.image.image": {
  "data": {
   "symbols_in_volume": [
    "nipy.core.image.image.SliceMaker"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.image.Image": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "numpy.diag",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.core.image.image.Image.__array__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__eq__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__getitem__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ArrayCoordMap"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "AffineTransform",
    "ValueError",
    "copy.copy",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__iter__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__ne__": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__repr__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.__setitem__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image._getheader": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image._setheader": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.affine": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.axes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.from_image": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "classmethod",
    "copy.copy",
    "klass"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.get_data": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.ndim": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.reference": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.renamed_axes": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.renamed_reference": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.reordered_axes": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "list",
    "numpy.transpose",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.reordered_reference": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "list",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.Image.shape": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nibabel.onetime.setattr_on_read"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.SliceMaker": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.image.image.SliceMaker.__getitem__": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "nipy.core.image.image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.image.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "nipy.core.image.image.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "nipy.core.image.image.fromarray": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "AffineTransform.from_start_step",
    "DeprecationWarning",
    "len",
    "nipy.core.image.image.Image",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.is_image": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.iter_axis": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "nipy.core.image.image.rollimg",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.core.image.image.rollaxis": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "itertools.chain",
    "list",
    "numpy.deprecate_with_doc",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.rollimg": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "input_axis_index",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.setattr_on_read": {
  "data": {
   "shadows": "nibabel.onetime.setattr_on_read"
  },
  "type": "import"
 },
 "nipy.core.image.image.slice_maker": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "nipy.core.image.image.subsample": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.core.image.image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image.synchronized_order": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "nipy.core.image.image.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.core.image.image_list": {
  "data": {},
  "type": "module"
 },
 "nipy.core.image.image_list.ImageList": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "nipy.core.image.image_list.ImageList.__array__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.core.image.image_list.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__getitem__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "is_image",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__iter__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__len__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__next__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.__setitem__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.from_image": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AxisError",
    "Image",
    "ValueError",
    "classmethod",
    "drop_io_dim",
    "io_axis_indices",
    "iter_axis",
    "klass"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.ImageList.get_list_data": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_list.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.image_list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.image_list.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.core.image.image_spaces": {
  "data": {},
  "type": "module"
 },
 "nipy.core.image.image_spaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.image_spaces.as_xyz_image": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "io_orientation",
    "list",
    "nipy.core.image.image_spaces.sys",
    "nipy.core.image.image_spaces.xyz_affine",
    "numpy.argsort",
    "numpy.inf",
    "numpy.isnan",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_spaces.is_xyz_affable": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nipy.core.image.image_spaces.xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_spaces.make_xyz_image": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "TypeError",
    "ValueError",
    "len",
    "nipy.core.image.image_spaces.xyz_affine",
    "numpy.asarray",
    "numpy.diag",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.image_spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.image_spaces.rsp": {
  "data": {
   "shadows": "spaces"
  },
  "type": "import"
 },
 "nipy.core.image.image_spaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.core.image.image_spaces.xyz_affine": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.roi": {
  "data": {},
  "type": "module"
 },
 "nipy.core.image.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.core.image.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.core.image.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.core.image.test": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.core.image.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.core.image.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "nipy.core.image.tests.test_image._data",
    "numpy.arange",
    "numpy.eye"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.tests.test_image.ArrayLikeObj": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.image.tests.test_image.ArrayLikeObj.__array__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.ArrayLikeObj.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.ArrayLikeObj.shape": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image._data": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nipy.core.image.tests.test_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.gimg": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nipy.core.image.tests.test_image.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.teardown": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_ArrayLikeObj": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "nipy.core.image.tests.test_image.ArrayLikeObj",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_defaults_ND": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "AffineTransform",
    "AttributeError",
    "Image",
    "getattr",
    "isinstance",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_from_image": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "Image",
    "Image.from_image",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.arange",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_generator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "iter_axis",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_get_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "isinstance",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_header": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "Image",
    "nibabel.Nifti1Header",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "numpy.arange",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Image",
    "TypeError",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_is_image": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "AffineTransform",
    "C",
    "CoordinateSystem",
    "Image",
    "is_image",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.eye",
    "object"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_is_image.C": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.image.tests.test_image.test_is_image.C.get_data": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_iter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "enumerate",
    "iter_axis",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "write_data"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_iter_axis": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "enumerate",
    "iter_axis",
    "len",
    "list",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_maxmin_values": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_parcels1": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "data_generator",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "numpy.int32",
    "numpy.product",
    "numpy.zeros",
    "parcels"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_parcels3": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "data_generator",
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "numpy.int32",
    "numpy.product",
    "numpy.unique",
    "numpy.zeros",
    "parcels"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_rollaxis": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "Image",
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_rollaxis_inverse": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "AT",
    "AffineTransform",
    "Image",
    "itertools.chain",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.rollaxis",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_rollimg": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "AT",
    "AffineTransform",
    "Image",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.rollaxis",
    "numpy.testing.assert_array_equal",
    "range",
    "rollimg",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_rollimg_rollaxis": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "AT",
    "AffineTransform",
    "Image",
    "itertools.chain",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.rollaxis",
    "numpy.testing.assert_array_equal",
    "range",
    "rollimg"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slice_block": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slice_plane": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slice_step": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slice_steps": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.floor",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slice_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_image.gimg",
    "nose.tools.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_slicing_returns_image": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "isinstance",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.test_synchronized_order": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "Image",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_list": {
  "data": {
   "symbols_in_volume": [
    "load_image"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.tests.test_image_list.FIMG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.core.image.tests.test_image_list.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_list.test_il_from_image": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "Image",
    "ImageList.from_image",
    "ValueError",
    "assert_almost_equal",
    "assert_equal",
    "assert_raises",
    "len",
    "list",
    "nipy.core.image.tests.test_image_list.FIMG",
    "numpy.identity",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_list.test_il_init": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ImageList",
    "ValueError",
    "assert_equal",
    "assert_raises",
    "iter_axis",
    "len",
    "list",
    "nipy.core.image.tests.test_image_list.FIMG",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_list.test_il_slicing_dicing": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Image",
    "ImageList",
    "ImageList.from_image",
    "ImageList.get_list_data",
    "ValueError",
    "assert_equal",
    "assert_raises",
    "assert_true",
    "isinstance",
    "load_image",
    "nipy.core.image.tests.test_image_list.FIMG",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_spaces": {
  "data": {},
  "type": "module"
 },
 "nipy.core.image.tests.test_image_spaces.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_image_spaces.test_image_as_xyz_image": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "as_xyz_image",
    "dict",
    "is_xyz_affable",
    "nibabel.Nifti1Image",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "rollimg",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_spaces.test_image_xyz_affine": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "dict",
    "is_xyz_affable",
    "nibabel.Nifti1Image",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "vox2mni",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_spaces.test_image_xyza_slices": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Image",
    "as_xyz_image",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.diag",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_image_spaces.test_make_xyz_image": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AffineTransform",
    "ValueError",
    "XYZSpace",
    "csm",
    "is_xyz_affable",
    "make_xyz_image",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "vox2mni",
    "vox2talairach",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg": {
  "data": {
   "symbols_in_volume": [
    "mni_csm"
   ]
  },
  "type": "module"
 },
 "nipy.core.image.tests.test_rollimg.AT": {
  "data": {
   "shadows": "AffineTransform"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.MNI3": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "nipy.core.image.tests.test_rollimg.MNI4": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "nipy.core.image.tests.test_rollimg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.image_call": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Image",
    "function",
    "rollimg"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.image_modify": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Image",
    "modify",
    "nipy.core.image.tests.test_rollimg.copy",
    "rollimg",
    "synchronized_order"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.image_reduce": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Image",
    "drop_io_dim",
    "list",
    "reduce_op",
    "rollimg"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.need_specific_axis_reduce": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "nipy.core.image.tests.test_rollimg.image_reduce",
    "reduce_op"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.image.tests.test_rollimg.test_call": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Image",
    "nipy.core.image.tests.test_rollimg.MNI4",
    "nipy.core.image.tests.test_rollimg.image_call",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "tuple",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.test_modify": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "Image",
    "nipy.core.image.tests.test_rollimg.MNI3",
    "nipy.core.image.tests.test_rollimg.MNI4",
    "nipy.core.image.tests.test_rollimg.image_modify",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.random.standard_normal",
    "numpy.rollaxis",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "xyz_affine",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.test_modify.meanmodify": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.test_modify.nullmodify": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.test_reduce": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Image",
    "nipy.core.image.tests.test_rollimg.MNI3",
    "nipy.core.image.tests.test_rollimg.MNI4",
    "nipy.core.image.tests.test_rollimg.image_reduce",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "tuple",
    "xyz_affine",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.image.tests.test_rollimg.test_specific_reduce": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Image",
    "nipy.core.image.tests.test_rollimg.MNI4",
    "nipy.core.image.tests.test_rollimg.need_specific_axis_reduce",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "tuple",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.core.reference.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "nipy.core.reference.__docformat__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nipy.core.reference.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.array_coords": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap.__getitem__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "nipy.core.reference.array_coords._slice",
    "numpy.ndarray",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap.__repr__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap._evaluate": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.indices",
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap._getindices_values": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap._getvalues": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.ArrayCoordMap.from_shape": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nipy.core.reference.array_coords.Grid",
    "slice",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.Grid": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.array_coords.Grid.__getitem__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "ValueError",
    "compose",
    "enumerate",
    "len",
    "nipy.core.reference.array_coords.ArrayCoordMap",
    "numpy.array",
    "numpy.ogrid",
    "numpy.zeros",
    "shifted_range_origin",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.Grid.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "AffineTransform",
    "AffineTransform.identity",
    "CoordinateSystem",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords._slice": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "IndexError",
    "TypeError",
    "ValueError",
    "compose",
    "enumerate",
    "int",
    "len",
    "list",
    "nipy.core.reference.array_coords.ArrayCoordMap",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "shifted_range_origin",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.array_coords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.array_coords.cmap_product": {
  "data": {
   "shadows": "product"
  },
  "type": "import"
 },
 "nipy.core.reference.array_coords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.array_coords.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.core.reference.bench": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "nipy.core.reference.coordinate_system": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.coordinate_system.CoordSysMaker": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "nipy.core.reference.coordinate_system.CoordinateSystem",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.coordinate_system.CoordSysMaker.__call__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len",
    "nipy.core.reference.coordinate_system.CoordSysMakerError"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordSysMaker.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.float",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordSysMakerError": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float",
    "numpy.float64",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.__eq__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dtype",
    "numpy.float",
    "numpy.object",
    "numpy.sctypes",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.__ne__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.__repr__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.__setattr__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AttributeError",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem._checked_values": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "nipy.core.reference.coordinate_system.CoordinateSystemError",
    "numpy.atleast_2d",
    "numpy.can_cast",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.index": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystem.similar_to": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.CoordinateSystemError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.coordinate_system.__docformat__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.core.reference.coordinate_system.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.coordinate_system.is_coordsys": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.is_coordsys_maker": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.coordinate_system.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.core.reference.coordinate_system.product": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "TypeError",
    "nipy.core.reference.coordinate_system.CoordinateSystem",
    "nipy.core.reference.coordinate_system.safe_dtype"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.coordinate_system.safe_dtype": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.zeros",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.core.reference.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.core.reference.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.core.reference.slices": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.slices.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.slices.bounding_box": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.slices.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.core.reference.slices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.slices.xslice": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "get_world_cs",
    "nibabel.affines.from_matvec",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.slices.yslice": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "get_world_cs",
    "nibabel.affines.from_matvec",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.slices.zslice": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "get_world_cs",
    "nibabel.affines.from_matvec",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces": {
  "data": {
   "symbols_in_volume": [
    "CoordMapMaker",
    "CoordSysMaker",
    "exec",
    "nipy.core.reference.spaces.XYZSpace",
    "nipy.core.reference.spaces._csm",
    "nipy.core.reference.spaces._space",
    "nipy.core.reference.spaces.known_names",
    "nipy.core.reference.spaces.known_spaces",
    "nipy.core.reference.spaces.voxel_csm"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.spaces.AffineError": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "nipy.core.reference.spaces.SpaceError"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.spaces.AxesError": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "nipy.core.reference.spaces.SpaceError"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.spaces.SpaceError": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.spaces.SpaceTypeError": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "nipy.core.reference.spaces.SpaceError"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.spaces.XYZSpace": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.spaces.XYZSpace.__contains__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AttributeError",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.__eq__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.__ne__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.__repr__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.__str__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.as_map": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.as_tuple": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.register_to": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.to_coordsys_maker": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "CoordSysMaker",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.x": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.y": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.XYZSpace.z": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces._cmm": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces._csm": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces._space": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.spaces.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.core.reference.spaces.get_world_cs": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "is_coordsys",
    "is_coordsys_maker",
    "isinstance",
    "nipy.core.reference.spaces.SpaceError",
    "nipy.core.reference.spaces.is_xyz_space",
    "nipy.core.reference.spaces.known_spaces",
    "world_id"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.is_xyz_affable": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "nipy.core.reference.spaces.SpaceError",
    "nipy.core.reference.spaces.xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.is_xyz_space": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.known_names": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces.known_space": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "nipy.core.reference.spaces.known_spaces"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.known_spaces": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.spaces.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.core.reference.spaces.voxel_csm": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "nipy.core.reference.spaces.xyz_affine": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "AttributeError",
    "io_orientation",
    "nibabel.affines.from_matvec",
    "nipy.core.reference.spaces.AffineError",
    "nipy.core.reference.spaces.AxesError",
    "nipy.core.reference.spaces.SpaceTypeError",
    "nipy.core.reference.spaces.known_names",
    "nipy.core.reference.spaces.xyz_order",
    "numpy.allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.spaces.xyz_order": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "int",
    "len",
    "list",
    "nipy.core.reference.spaces.AxesError",
    "nipy.core.reference.spaces.known_names",
    "numpy.argsort",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.test": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "nipy.core.reference.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.tests.matrix_groups": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.tests.matrix_groups.AffineTransform": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.CoordinateSystem": {
  "data": {
   "shadows": "nipy.core.api.CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.GLC": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.MatrixGroup",
    "numpy.complex"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.GLC.validate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.GLR": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.GLC",
    "numpy.float"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.GLZ": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.GLR",
    "numpy.int"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.GLZ.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.GLR",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.GLZ.validate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.fabs",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.Linear": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nipy.core.api.AffineTransform",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.Linear.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nipy.core.api.AffineTransform.__init__",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.Linear._getmatrix": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.MatrixGroup": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.Linear",
    "numpy.float",
    "property"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.MatrixGroup.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.reference.tests.matrix_groups.Linear"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.MatrixGroup._getcoords": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.MatrixGroup.inverse": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.MatrixGroup.validate": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.O": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.GLR",
    "numpy.float"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.O.validate": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.dot",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.SLR": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.GLR"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.SLR.validate": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.SO": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.O",
    "nipy.core.reference.tests.matrix_groups.SLR",
    "numpy.float"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.matrix_groups.SO.validate": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.O",
    "numpy.allclose",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.change_basis": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.coordinate_map.compose"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.cmap_product": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_map.product"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.compose": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_map.compose"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.matrix_groups.product": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.coordinate_map.compose",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.product_homomorphism": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.coordinate_map.product",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.matrix_groups.same_transformation": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.change_basis",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_array_coords": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.tests.test_array_coords.AffineTransform": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.ArrayCoordMap": {
  "data": {
   "shadows": "nipy.core.api.ArrayCoordMap"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.CoordinateMap": {
  "data": {
   "shadows": "nipy.core.api.CoordinateMap"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.CoordinateSystem": {
  "data": {
   "shadows": "nipy.core.api.CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.Grid": {
  "data": {
   "shadows": "nipy.core.api.Grid"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.acs": {
  "data": {
   "shadows": "nipy.core.reference.array_coords"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_array_coords.test_array_coord_map": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Ellipsis",
    "ValueError",
    "nipy.core.api.AffineTransform.from_params",
    "nipy.core.reference.array_coords.ArrayCoordMap",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_array_coords.test_eval_slice": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "input",
    "nipy.core.api.CoordinateMap",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.api.Grid",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_array_coords.test_eval_slice.f": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_array_coords.test_grid": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "eval",
    "eval.values",
    "input",
    "nipy.core.api.ArrayCoordMap.from_shape",
    "nipy.core.api.CoordinateMap",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.api.Grid",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_array_coords.test_grid.f": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map": {
  "data": {
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_map.empty"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.tests.test_coordinate_map.CS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_coordinate_map.E": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_coordinate_map.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.affine_v2w": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "CoordinateSystem",
    "aff",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.empty": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_map.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_map.setup": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "CoordinateMap",
    "CoordinateSystem",
    "nipy.core.reference.tests.test_coordinate_map.E",
    "numpy.array",
    "numpy.identity",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.setup.f": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.setup.g": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test__eq__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test__fix0": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "_fix0",
    "aff",
    "numpy.diag",
    "numpy.finfo",
    "numpy.float64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_bottom_row": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_copy": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "AffineTransform",
    "aff",
    "cm",
    "cm.affine",
    "cm.function_domain",
    "cm.function_range",
    "copy.copy.copy",
    "nipy.core.reference.tests.test_coordinate_map.affine_v2w",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_from_params": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "ValueError",
    "aff",
    "cm",
    "cm.affine",
    "nipy.core.reference.tests.test_coordinate_map.affine_v2w",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_identity": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "AffineTransform.identity",
    "aff",
    "aff.affine",
    "aff.function_domain",
    "aff.function_range",
    "hasattr",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_init": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "AffineTransform",
    "ValueError",
    "aff",
    "nipy.core.reference.tests.test_coordinate_map.affine_v2w",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_inverse": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "aff",
    "cm",
    "cm.inverse",
    "inv",
    "nipy.core.reference.tests.test_coordinate_map.affine_v2w",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.float",
    "numpy.linalg.inv",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_affine_start_step": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "AffineTransform.from_start_step",
    "ValueError",
    "aff",
    "aff.diagonal",
    "cm",
    "cm.affine",
    "nipy.core.reference.tests.test_coordinate_map.affine_v2w",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_append_io_dim": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "aff",
    "append_io_dim",
    "cm",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_as_coordinate_map": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "CoordinateSystem",
    "ValueError",
    "_as_coordinate_map",
    "aff",
    "isinstance",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_axmap": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "AffineTransform",
    "ValueError",
    "axmap",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_call": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_calling_shapes": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "nipy.core.reference.tests.test_coordinate_map.CS",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "xfm1d2d",
    "xfm2d"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_cm__setattr__raise_error": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "AttributeError",
    "CoordinateMap",
    "CoordinateSystem",
    "cm",
    "cm.__setattr__",
    "nose.tools.assert_raises",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_cmap_coord_types": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "CoordinateSystem",
    "cmap",
    "cmap.reordered_domain",
    "copy.copy",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.eye",
    "numpy.object",
    "numpy.sctypes",
    "numpy.testing.assert_array_equal",
    "rcmap"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_comap_copy": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "CoordinateMap",
    "copy.copy.copy",
    "inv",
    "map",
    "nipy.core.reference.tests.test_coordinate_map.voxel_to_world",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_comap_cosys": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "CoordinateSystem",
    "aff",
    "nose.tools.assert_equal",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_comap_init": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "CoordinateMap",
    "ValueError",
    "inv",
    "map",
    "nipy.core.reference.tests.test_coordinate_map.voxel_to_world",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_compose": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "CoordinateMap",
    "CoordinateSystem",
    "ValueError",
    "aa",
    "ab",
    "ac",
    "compose",
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_compose_cmap": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "b",
    "compose",
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_drop_io_dim": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "aff",
    "drop_io_dim",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_dtype_cmap_inverses": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "_as_coordinate_map",
    "cm_cmap",
    "cm_cmap.inverse",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.eye",
    "numpy.float64",
    "numpy.object",
    "numpy.sctypes",
    "numpy.testing.assert_array_equal",
    "r_cmap",
    "rcm_cmap"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_equivalent": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "AffineTransform",
    "AttributeError",
    "CoordinateSystem",
    "ImportError",
    "equivalent",
    "nipy.core.reference.tests.test_coordinate_map.itertools",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_input_axis_index": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "AffineTransform",
    "input_axis_index",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_inverse1": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "compose",
    "ident_b",
    "ident_d",
    "inv",
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_inverse2": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_io_axis_indices": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "AffineTransform",
    "io_axis_indices",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_isinvertible": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_map.E",
    "nose.tools.assert_false",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_make_cmap": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordMapMaker",
    "CoordSysMaker",
    "CoordinateMap",
    "aff",
    "cmm",
    "cmm.make_affine",
    "list",
    "nipy.core.reference.tests.test_coordinate_map.CS",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.diag",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_orth_axes": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "aff",
    "aff.shape",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.diag",
    "numpy.eye",
    "orth_axes",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_product": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "CoordinateMap",
    "CoordinateSystem",
    "TypeError",
    "cm",
    "cm.function",
    "cm.function_domain.name",
    "cm.function_range.name",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.log",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "product"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_renamed": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "AffineTransform.from_params",
    "CoordinateMap",
    "CoordinateSystem",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.identity",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_reordered_domain": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "CoordinateMap",
    "cm",
    "cm.reordered_domain",
    "inv",
    "map",
    "nipy.core.reference.tests.test_coordinate_map.voxel_to_world",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_reordered_range": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "CoordinateMap",
    "cm",
    "cm.reordered_range",
    "inv",
    "map",
    "nipy.core.reference.tests.test_coordinate_map.voxel_to_world",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_shift_origin": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateSystem",
    "_as_coordinate_map",
    "aff",
    "nipy.core.reference.tests.test_coordinate_map.CS",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "shifted_aff",
    "shifted_domain_origin",
    "shifted_range_origin"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_similar_to": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "CoordinateSystem",
    "klass",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.diag",
    "numpy.eye",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_str": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "CoordinateSystem",
    "nose.tools.assert_equal",
    "numpy.exp",
    "numpy.identity",
    "numpy.log",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_subtype_equalities": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "AT2",
    "AffineTransform",
    "CM2",
    "CoordinateMap",
    "CoordinateSystem",
    "nose.tools.assert_equal",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_subtype_equalities.AT2": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "AffineTransform"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_map.test_subtype_equalities.CM2": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "CoordinateMap"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_map.voxel_to_world": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "CoordinateSystem",
    "inv",
    "map"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system": {
  "data": {
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_system.empty"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.tests.test_coordinate_system.E": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_coordinate_system.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.empty": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_system.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_coordinate_system.setup": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nipy.core.reference.tests.test_coordinate_system.E",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_CoordinateSystem": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_system.E",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test___eq__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test___str__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_coordinate_system.E",
    "nose.tools.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test__ne__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_checked_values": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nose.tools.assert_raises",
    "numpy.allclose",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_coordsys_maker": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "CoordSysMaker",
    "CoordinateSystem",
    "cs_maker",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.float",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_dtypes": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "CoordinateSystem",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.dtype",
    "numpy.float",
    "numpy.object",
    "numpy.sctypes",
    "product",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_index": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "CoordinateSystem",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "C",
    "CoordSysMaker",
    "CoordinateSystem",
    "is_coordsys",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys.C": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.float",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys.C.__call__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys_maker": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "C",
    "CoordSysMaker",
    "CoordinateSystem",
    "is_coordsys_maker",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys_maker.C": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.float",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_is_coordsys_maker.C.__call__": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_iterator_coordinate": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "CoordinateSystem",
    "gen",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_iterator_coordinate.gen": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_ndim": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_product": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "CoordinateSystem",
    "TypeError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "product"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_readonly_attrs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AttributeError",
    "nipy.core.reference.tests.test_coordinate_system.E",
    "nose.tools.assert_raises",
    "numpy.dtype",
    "numpy.int32",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_safe_dtype": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int64",
    "numpy.sctypes",
    "numpy.uint32",
    "safe_dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_similar_to": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "CoordinateSystem",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_coordinate_system.test_unique_coord_names": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "CoordinateSystem",
    "ValueError",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.tests.test_matrix_groups.A": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_matrix_groups.ArrayCoordMap": {
  "data": {
   "shadows": "nipy.core.api.ArrayCoordMap"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.B": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_matrix_groups.D": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_matrix_groups.MG": {
  "data": {
   "shadows": "nipy.core.reference.tests.matrix_groups"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.expm": {
  "data": {
   "shadows": "scipy.linalg.expm"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_matrix_groups.random_orth": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nipy.core.reference.tests.matrix_groups.O",
    "numpy.random.standard_normal",
    "range",
    "scipy.linalg.expm"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test2": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.tests.matrix_groups.GLR",
    "nipy.core.reference.tests.matrix_groups.O",
    "nipy.core.reference.tests.matrix_groups.SLR",
    "nipy.core.reference.tests.matrix_groups.SO",
    "nose.tools.assert_raises",
    "numpy.fabs",
    "numpy.linalg.det",
    "numpy.random.standard_normal",
    "scipy.linalg.expm"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_32": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "O32",
    "nipy.core.api.ArrayCoordMap.from_shape",
    "nipy.core.reference.tests.matrix_groups.product",
    "nipy.core.reference.tests.test_matrix_groups.A",
    "nipy.core.reference.tests.test_matrix_groups.B",
    "nipy.core.reference.tests.test_matrix_groups.random_orth",
    "nose.tools.assert_equal",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_32.O32": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.O",
    "numpy.float32"
   ]
  },
  "type": "class"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_32.O32.validate": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.dot",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_basis_change": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.Linear",
    "nipy.core.reference.tests.matrix_groups.change_basis",
    "nipy.core.reference.tests.matrix_groups.same_transformation",
    "nipy.core.reference.tests.test_matrix_groups.random_orth",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_homomorphism": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.tests.matrix_groups.GLZ",
    "nipy.core.reference.tests.matrix_groups.product",
    "nipy.core.reference.tests.matrix_groups.product_homomorphism",
    "nipy.core.reference.tests.test_matrix_groups.B",
    "nipy.core.reference.tests.test_matrix_groups.D",
    "nipy.core.reference.tests.test_matrix_groups.test2",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_init": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.tests.matrix_groups.GLR",
    "nipy.core.reference.tests.matrix_groups.GLZ",
    "nipy.core.reference.tests.matrix_groups.O",
    "nipy.core.reference.tests.matrix_groups.SO",
    "nipy.core.reference.tests.test_matrix_groups.A",
    "nipy.core.reference.tests.test_matrix_groups.B",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.cos",
    "numpy.identity",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_product": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.reference.tests.matrix_groups.GLZ",
    "nipy.core.reference.tests.matrix_groups.product",
    "nipy.core.reference.tests.test_matrix_groups.A",
    "nipy.core.reference.tests.test_matrix_groups.B",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_matrix_groups.test_product2": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nipy.core.reference.tests.matrix_groups.product",
    "nipy.core.reference.tests.test_matrix_groups.random_orth"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface": {
  "data": {
   "symbols_in_volume": [
    "nipy.core.api.CoordinateMap",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.reference.tests.test_parametrized_surface.parametric_mapping",
    "nipy.core.reference.tests.test_parametrized_surface.uv",
    "nipy.core.reference.tests.test_parametrized_surface.xyz"
   ]
  },
  "type": "module"
 },
 "nipy.core.reference.tests.test_parametrized_surface.CoordinateMap": {
  "data": {
   "shadows": "nipy.core.api.CoordinateMap"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.CoordinateSystem": {
  "data": {
   "shadows": "nipy.core.api.CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.Grid": {
  "data": {
   "shadows": "nipy.core.api.Grid"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.implicit": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.mlab": {
  "data": {
   "shadows": "enthought.mayavi.mlab"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_parametrized_surface.parametric_mapping": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.surface_param": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_parametrized_surface.test_grid": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nipy.core.api.Grid",
    "nipy.core.reference.tests.test_parametrized_surface.surface_param",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.test_grid32": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nipy.core.api.CoordinateMap",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.api.Grid",
    "nipy.core.reference.tests.test_parametrized_surface.parametric_mapping",
    "nose.tools.assert_equal",
    "numpy.dtype",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.test_grid32_c128": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nipy.core.api.CoordinateMap",
    "nipy.core.api.CoordinateSystem",
    "nipy.core.api.Grid",
    "nose.tools.assert_equal",
    "numpy.complex128",
    "numpy.dtype",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.test_grid32_c128.par_c128": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_parametrized_surface.parametric_mapping",
    "numpy.complex128"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.test_surface": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nipy.core.reference.tests.test_parametrized_surface.implicit",
    "nipy.core.reference.tests.test_parametrized_surface.parametric_mapping",
    "numpy.allclose",
    "numpy.random.standard_normal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.uv": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_parametrized_surface.view_surface": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "enthought.mayavi.mlab.draw",
    "enthought.mayavi.mlab.mesh",
    "nipy.core.api.Grid",
    "nipy.core.reference.tests.test_parametrized_surface.surface_param"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_parametrized_surface.xyz": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_slices": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.tests.test_slices.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_slices.names": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_slices.test_bounding_box": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bounding_box",
    "nipy.core.reference.tests.test_slices.names",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_slices.test_box_slice": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mni_csm",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal",
    "scanner_csm",
    "xslice",
    "yslice",
    "zslice"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces": {
  "data": {},
  "type": "module"
 },
 "nipy.core.reference.tests.test_spaces.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.VARS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.core.reference.tests.test_spaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.reference.tests.test_spaces.setup": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "locals",
    "nipy.core.reference.tests.test_spaces.VARS"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_default_makers": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AffineTransform",
    "csm",
    "list",
    "nipy.core.reference.tests.test_spaces.VARS",
    "nose.tools.assert_equal",
    "numpy.diag",
    "range",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_get_world_cs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "XYZSpace",
    "get_world_cs",
    "maker",
    "mni_csm",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_image_creation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "nipy.core.reference.tests.test_spaces.VARS",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_is_xyz_affable": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AffineTransform",
    "dict",
    "is_xyz_affable",
    "nibabel.affines.from_matvec",
    "nipy.core.reference.tests.test_spaces.VARS",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_is_xyz_space": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "XYZSpace",
    "is_xyz_space",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "object"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_known_space": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "XYZSpace",
    "known_space",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_xyz_affine": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AffineTransform",
    "CoordinateMap",
    "Image",
    "dict",
    "nibabel.affines.from_matvec",
    "nipy.core.reference.tests.test_spaces.VARS",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "range",
    "vox2mni",
    "xyz_affine"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_xyz_order": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "dict",
    "nipy.core.reference.tests.test_spaces.VARS",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "xyz_order"
   ]
  },
  "type": "function"
 },
 "nipy.core.reference.tests.test_spaces.test_xyz_space": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AffineTransform",
    "Image",
    "XYZSpace",
    "csm",
    "dict",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.zeros",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.core.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.core.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.core.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.core.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.core.test": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.core.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.core.utils.generators": {
  "data": {},
  "type": "module"
 },
 "nipy.core.utils.generators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.utils.generators.data_generator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.f_generator": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "f",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.matrix_generator": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.utils.generators.parcels": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "numpy.asarray",
    "numpy.equal",
    "numpy.unique",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.core.utils.generators.seq_prod": {
  "data": {
   "shadows": "nipy.utils.seq_prod"
  },
  "type": "import"
 },
 "nipy.core.utils.generators.shape_generator": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "nipy.core.utils.generators.slice_generator": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int",
    "list",
    "nipy.utils.seq_prod",
    "numpy.asarray",
    "numpy.cumprod",
    "range",
    "slice",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.slice_parcels": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "nipy.core.utils.generators.parcels",
    "nipy.core.utils.generators.slice_generator"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.generators.write_data": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "nipy.core.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.core.utils.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.core.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.core.utils.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.utils.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.core.utils.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.core.utils.tests.test_generators": {
  "data": {
   "symbols_in_volume": [
    "nipy.core.utils.tests.test_generators.shape",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "nipy.core.utils.tests.test_generators.DATA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.core.utils.tests.test_generators.DATA2": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.core.utils.tests.test_generators.DATA3": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.core.utils.tests.test_generators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.gen": {
  "data": {
   "shadows": "generators"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.core.utils.tests.test_generators.shape": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.core.utils.tests.test_generators.test_multi_slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "list",
    "nipy.core.utils.tests.test_generators.DATA",
    "nose.tools.assert_equal",
    "slice",
    "slice_generator"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_multi_slice_write": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nipy.core.utils.tests.test_generators.DATA",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "slice_generator",
    "write_data"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_parcel": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "enumerate",
    "nipy.core.utils.tests.test_generators.DATA3",
    "nose.tools.assert_equal",
    "numpy.product",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_parcel_copy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "enumerate",
    "nipy.core.utils.tests.test_generators.DATA3",
    "nose.tools.assert_equal",
    "numpy.product",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_parcel_exclude": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_parcel_write": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "enumerate",
    "nipy.core.utils.tests.test_generators.DATA3",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.product",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_read_slices": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "nipy.core.utils.tests.test_generators.DATA",
    "nose.tools.assert_equal",
    "slice_generator"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_sliceparcel": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.core.utils.tests.test_generators.test_write_slices": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nipy.core.utils.tests.test_generators.DATA",
    "numpy.asarray",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "slice_generator",
    "write_data"
   ]
  },
  "type": "function"
 },
 "nipy.externals": {
  "data": {},
  "type": "module"
 },
 "nipy.externals.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.argparse": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "NameError",
    "nipy.externals.argparse.warnings",
    "set",
    "sorted",
    "str",
    "sys.version_info"
   ]
  },
  "type": "module"
 },
 "nipy.externals.argparse.Action": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "nipy.externals.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.Action.__call__": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "NotImplementedError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.Action.__init__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "help",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.Action._get_kwargs": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentDefaultsHelpFormatter": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "nipy.externals.argparse.HelpFormatter"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.ArgumentDefaultsHelpFormatter._get_help_string": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse.ZERO_OR_MORE"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentError": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.ArgumentError.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "nipy.externals.argparse._get_action_name"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentError.__str__": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "dict",
    "format"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "nipy.externals.argparse._ActionsContainer",
    "nipy.externals.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.ArgumentParser.__init__": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "AttributeError",
    "add_group",
    "conflict_handler",
    "gettext.gettext",
    "nipy.externals.argparse.ArgumentParser",
    "nipy.externals.argparse.HelpFormatter",
    "nipy.externals.argparse.SUPPRESS",
    "os.path.basename",
    "super",
    "superinit",
    "sys.argv"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.__init__.identity": {
  "data": {
   "lineno": 1569
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._add_action": {
  "data": {
   "lineno": 1643
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._check_value": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": [
    "action",
    "action.choices",
    "gettext.gettext",
    "map",
    "nipy.externals.argparse.ArgumentError",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_formatter": {
  "data": {
   "lineno": 2240
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_kwargs": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_nargs_pattern": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "action.nargs",
    "action.option_strings",
    "nipy.externals.argparse.ONE_OR_MORE",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse.PARSER",
    "nipy.externals.argparse.ZERO_OR_MORE"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_option_tuples": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "action",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_optional_actions": {
  "data": {
   "lineno": 1650
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_positional_actions": {
  "data": {
   "lineno": 1655
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_value": {
  "data": {
   "lineno": 2176,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "action",
    "action.type",
    "getattr",
    "gettext.gettext",
    "hasattr",
    "nipy.externals.argparse.ArgumentError",
    "repr",
    "type_func"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._get_values": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "action",
    "action.const",
    "action.default",
    "action.nargs",
    "action.option_strings",
    "isinstance",
    "len",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse.PARSER",
    "nipy.externals.argparse.ZERO_OR_MORE",
    "nipy.externals.argparse._basestring"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._match_argument": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "action",
    "action.nargs",
    "gettext.gettext",
    "len",
    "nipy.externals.argparse.ArgumentError",
    "nipy.externals.argparse.ONE_OR_MORE",
    "nipy.externals.argparse.OPTIONAL",
    "re.match"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._match_arguments_partial": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "action",
    "len",
    "range",
    "re.match"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._parse_known_args": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "action",
    "action.help",
    "action.required",
    "consume_optional",
    "consume_positionals",
    "enumerate",
    "gettext.gettext",
    "iter",
    "max",
    "min",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._get_action_name",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._parse_known_args.consume_optional": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "action",
    "gettext.gettext",
    "match_argument",
    "nipy.externals.argparse.ArgumentError",
    "take_action"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._parse_known_args.consume_positionals": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "action",
    "len",
    "match_partial",
    "take_action",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._parse_known_args.take_action": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "action",
    "gettext.gettext",
    "nipy.externals.argparse.ArgumentError",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._get_action_name"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._parse_optional": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "action",
    "gettext.gettext",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._print_message": {
  "data": {
   "lineno": 2255,
   "symbols_in_volume": [
    "sys.stderr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser._read_args_from_files": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "IOError",
    "open",
    "str",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.add_subparsers": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "gettext.gettext",
    "parsers_class",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.error": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "gettext.gettext",
    "sys.stderr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.exit": {
  "data": {
   "lineno": 2264,
   "symbols_in_volume": [
    "sys.exit",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.format_help": {
  "data": {
   "lineno": 2212
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.format_usage": {
  "data": {
   "lineno": 2206
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.format_version": {
  "data": {
   "lineno": 2235
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.parse_args": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.parse_known_args": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "nipy.externals.argparse.ArgumentError",
    "nipy.externals.argparse.Namespace",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._basestring",
    "setattr",
    "str",
    "sys.argv",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.print_help": {
  "data": {
   "lineno": 2249
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.print_usage": {
  "data": {
   "lineno": 2246
  },
  "type": "function"
 },
 "nipy.externals.argparse.ArgumentParser.print_version": {
  "data": {
   "lineno": 2252
  },
  "type": "function"
 },
 "nipy.externals.argparse.FileType": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.FileType.__call__": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext",
    "open",
    "sys.stdin",
    "sys.stdout"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.FileType.__init__": {
  "data": {
   "lineno": 1122
  },
  "type": "function"
 },
 "nipy.externals.argparse.FileType.__repr__": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.HelpFormatter._Section": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.HelpFormatter._Section.__init__": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._Section.format_help": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "func",
    "join",
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "int",
    "os.environ",
    "re.compile"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._add_item": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._dedent": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._expand_help": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "dict",
    "list",
    "nipy.externals.argparse.SUPPRESS",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._fill_text": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "textwrap.fill"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_action": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_action_invocation": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_actions_usage": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._sorted",
    "open",
    "range",
    "re.sub",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_args": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "get_metavar",
    "gettext.gettext",
    "nipy.externals.argparse.ONE_OR_MORE",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse.PARSER",
    "nipy.externals.argparse.ZERO_OR_MORE",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_text": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_usage": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "dict",
    "format",
    "get_lines",
    "gettext.gettext",
    "len",
    "re.findall"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._format_usage.get_lines": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._get_help_string": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._indent": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._iter_indented_subactions": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "AttributeError",
    "get_subactions"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._join_parts": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._metavar_formatter": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "format",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._metavar_formatter.format": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter._split_lines": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.add_argument": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "get_invocation",
    "len",
    "max",
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.add_arguments": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.add_text": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.add_usage": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.end_section": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.format_help": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "help",
    "help.strip"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.HelpFormatter.start_section": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "nipy.externals.argparse.Namespace": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "nipy.externals.argparse._AttributeHolder"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.Namespace.__eq__": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.Namespace.__init__": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.Namespace.__ne__": {
  "data": {
   "lineno": 1166
  },
  "type": "function"
 },
 "nipy.externals.argparse.ONE_OR_MORE": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "nipy.externals.argparse.OPTIONAL": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "nipy.externals.argparse.PARSER": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "nipy.externals.argparse.RawDescriptionHelpFormatter": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "nipy.externals.argparse.HelpFormatter"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.RawDescriptionHelpFormatter._fill_text": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "nipy.externals.argparse.RawTextHelpFormatter": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "nipy.externals.argparse.RawDescriptionHelpFormatter"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse.RawTextHelpFormatter._split_lines": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "nipy.externals.argparse.SUPPRESS": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "nipy.externals.argparse.ZERO_OR_MORE": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "nipy.externals.argparse._": {
  "data": {
   "shadows": "gettext.gettext"
  },
  "type": "import"
 },
 "nipy.externals.argparse._ActionsContainer": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._ActionsContainer.__init__": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "nipy.externals.argparse._ActionsContainer",
    "nipy.externals.argparse._AppendAction",
    "nipy.externals.argparse._AppendConstAction",
    "nipy.externals.argparse._CountAction",
    "nipy.externals.argparse._HelpAction",
    "nipy.externals.argparse._StoreAction",
    "nipy.externals.argparse._StoreConstAction",
    "nipy.externals.argparse._StoreFalseAction",
    "nipy.externals.argparse._StoreTrueAction",
    "nipy.externals.argparse._SubParsersAction",
    "nipy.externals.argparse._VersionAction",
    "re.compile",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._add_action": {
  "data": {
   "lineno": 1286
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._add_container_actions": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._check_conflict": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "conflict_handler"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._get_handler": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._get_optional_kwargs": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "gettext.gettext",
    "len",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._get_positional_kwargs": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "gettext.gettext",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse.ZERO_OR_MORE"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._handle_conflict_error": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "gettext.gettext",
    "nipy.externals.argparse.ArgumentError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._handle_conflict_resolve": {
  "data": {
   "lineno": 1444
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._pop_action_class": {
  "data": {
   "lineno": 1410
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._registry_get": {
  "data": {
   "lineno": 1228
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer._remove_action": {
  "data": {
   "lineno": 1307
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer.add_argument": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "action_class",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer.add_argument_group": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "nipy.externals.argparse._ArgumentGroup"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer.add_mutually_exclusive_group": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "nipy.externals.argparse._MutuallyExclusiveGroup"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer.register": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ActionsContainer.set_defaults": {
  "data": {
   "lineno": 1234
  },
  "type": "function"
 },
 "nipy.externals.argparse._AppendAction": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._AppendAction.__call__": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "copy.copy",
    "nipy.externals.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._AppendAction.__init__": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "ValueError",
    "help",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse._AppendAction",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._AppendConstAction": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._AppendConstAction.__call__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "copy.copy",
    "nipy.externals.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._AppendConstAction.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._AppendConstAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ArgumentGroup": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "nipy.externals.argparse._ActionsContainer"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._ArgumentGroup.__init__": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "nipy.externals.argparse._ArgumentGroup",
    "super",
    "super_init",
    "update"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ArgumentGroup._add_action": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "nipy.externals.argparse._ArgumentGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._ArgumentGroup._remove_action": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "nipy.externals.argparse._ArgumentGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._AttributeHolder": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._AttributeHolder.__repr__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._AttributeHolder._get_args": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "nipy.externals.argparse._AttributeHolder._get_kwargs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "nipy.externals.argparse._sorted"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._CountAction": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._CountAction.__call__": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "nipy.externals.argparse._ensure_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._CountAction.__init__": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._CountAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._HelpAction": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._HelpAction.__call__": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "nipy.externals.argparse._HelpAction.__init__": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._HelpAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._MutuallyExclusiveGroup": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "nipy.externals.argparse._ArgumentGroup"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._MutuallyExclusiveGroup.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "nipy.externals.argparse._MutuallyExclusiveGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._MutuallyExclusiveGroup._add_action": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "ValueError",
    "gettext.gettext"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._MutuallyExclusiveGroup._remove_action": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreAction": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._StoreAction.__call__": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreAction.__init__": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "help",
    "nipy.externals.argparse.OPTIONAL",
    "nipy.externals.argparse._StoreAction",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreConstAction": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._StoreConstAction.__call__": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreConstAction.__init__": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._StoreConstAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreFalseAction": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "nipy.externals.argparse._StoreConstAction"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._StoreFalseAction.__init__": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._StoreFalseAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._StoreTrueAction": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "nipy.externals.argparse._StoreConstAction"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._StoreTrueAction.__init__": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._StoreTrueAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._SubParsersAction": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._SubParsersAction._ChoicesPseudoAction": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._SubParsersAction._ChoicesPseudoAction.__init__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse._SubParsersAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._SubParsersAction.__call__": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "KeyError",
    "gettext.gettext",
    "nipy.externals.argparse.ArgumentError",
    "nipy.externals.argparse.SUPPRESS",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._SubParsersAction.__init__": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse.PARSER",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._SubParsersAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._SubParsersAction._get_subactions": {
  "data": {
   "lineno": 1082
  },
  "type": "function"
 },
 "nipy.externals.argparse._SubParsersAction.add_parser": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "help"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._VersionAction": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "nipy.externals.argparse.Action"
   ]
  },
  "type": "class"
 },
 "nipy.externals.argparse._VersionAction.__call__": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "nipy.externals.argparse._VersionAction.__init__": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "help",
    "nipy.externals.argparse.SUPPRESS",
    "nipy.externals.argparse._VersionAction",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse.__all__": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "nipy.externals.argparse.__version__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "nipy.externals.argparse._basestring": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "nipy.externals.argparse._copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.externals.argparse._ensure_value": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._get_action_name": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "nipy.externals.argparse.SUPPRESS"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.externals.argparse._re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nipy.externals.argparse._set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "nipy.externals.argparse._sorted": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.argparse._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.externals.argparse._textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "nipy.externals.argparse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.externals.configobj": {
  "data": {
   "symbols_in_volume": [
    "codecs.BOM_UTF16",
    "codecs.BOM_UTF16_BE",
    "codecs.BOM_UTF16_LE",
    "codecs.BOM_UTF8",
    "nipy.externals.configobj.Builder",
    "nipy.externals.configobj.ConfigParserInterpolation",
    "nipy.externals.configobj.TemplateInterpolation",
    "object"
   ]
  },
  "type": "module"
 },
 "nipy.externals.configobj.BOMS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.externals.configobj.BOM_LIST": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.externals.configobj.BOM_SET": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "nipy.externals.configobj.BOM_UTF16": {
  "data": {
   "shadows": "codecs.BOM_UTF16"
  },
  "type": "import"
 },
 "nipy.externals.configobj.BOM_UTF16_BE": {
  "data": {
   "shadows": "codecs.BOM_UTF16_BE"
  },
  "type": "import"
 },
 "nipy.externals.configobj.BOM_UTF16_LE": {
  "data": {
   "shadows": "codecs.BOM_UTF16_LE"
  },
  "type": "import"
 },
 "nipy.externals.configobj.BOM_UTF8": {
  "data": {
   "shadows": "codecs.BOM_UTF8"
  },
  "type": "import"
 },
 "nipy.externals.configobj.Builder": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.Builder.build": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "m",
    "nipy.externals.configobj.UnknownType"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Add": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "float",
    "isinstance",
    "list",
    "map",
    "nipy.externals.configobj.UnknownType"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Const": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Dict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "iter",
    "map",
    "next"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Getattr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_List": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Name": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nipy.externals.configobj.UnknownType"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_Tuple": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_UnaryAdd": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "nipy.externals.configobj.Builder.build_UnarySub": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "nipy.externals.configobj.Section",
    "nipy.externals.configobj.re"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.ConfigObj.__init__": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "list",
    "nipy.externals.configobj.OPTION_DEFAULTS",
    "nipy.externals.configobj.Section",
    "nipy.externals.configobj.unrepr",
    "nipy.externals.configobj.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.__repr__": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "_getval",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.__repr__._getval": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "dict.__getitem__",
    "nipy.externals.configobj.MissingInterpolationOption"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._a_to_u": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._decode": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._decode_element": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._get_single_quote": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError",
    "nipy.externals.configobj.dquot",
    "nipy.externals.configobj.squot"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._get_triple_quote": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError",
    "nipy.externals.configobj.tdquot",
    "nipy.externals.configobj.tsquot"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._handle_bom": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "nipy.externals.configobj.BOMS",
    "nipy.externals.configobj.BOM_LIST",
    "nipy.externals.configobj.BOM_SET",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._handle_comment": {
  "data": {
   "lineno": 2007
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._handle_configspec": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "IOError",
    "isinstance",
    "nipy.externals.configobj.ConfigObj",
    "nipy.externals.configobj.ConfigObjError",
    "nipy.externals.configobj.ConfigspecError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._handle_error": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "ErrorClass"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._handle_value": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._initialise": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "nipy.externals.configobj.OPTION_DEFAULTS",
    "nipy.externals.configobj.Section"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._load": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "all",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "list",
    "nipy.externals.configobj.ConfigObj",
    "nipy.externals.configobj.ConfigObjError",
    "nipy.externals.configobj.MISSING",
    "nipy.externals.configobj.os",
    "open",
    "repr",
    "set_section",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._load.set_section": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "set_section"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._match_depth": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._multiline": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "SyntaxError",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._parse": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "isinstance",
    "len",
    "nipy.externals.configobj.DuplicateError",
    "nipy.externals.configobj.NestingError",
    "nipy.externals.configobj.ParseError",
    "nipy.externals.configobj.Section",
    "nipy.externals.configobj.UnknownType",
    "nipy.externals.configobj.UnreprError",
    "nipy.externals.configobj.unrepr",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._quote": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "nipy.externals.configobj.ConfigObjError",
    "nipy.externals.configobj.noquot",
    "nipy.externals.configobj.wspace_plus",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._set_configspec": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "nipy.externals.configobj.Section"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._str": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._unquote": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._write_line": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj._write_marker": {
  "data": {
   "lineno": 1998
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.reload": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "nipy.externals.configobj.OPTION_DEFAULTS",
    "nipy.externals.configobj.ReloadError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.reset": {
  "data": {
   "lineno": 2340
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.validate": {
  "data": {
   "lineno": 2133,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "validate.VdtMissingValue",
    "validate_entry"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.validate.validate_entry": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObj.write": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "codecs.BOM_UTF8",
    "getattr",
    "isinstance",
    "nipy.externals.configobj.BOM_LIST",
    "nipy.externals.configobj.DEFAULT_INDENT_TYPE",
    "nipy.externals.configobj.Section",
    "nipy.externals.configobj.match_utf8",
    "nipy.externals.configobj.os",
    "nipy.externals.configobj.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigObjError": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.ConfigObjError.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "SyntaxError.__init__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigParserInterpolation": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationEngine",
    "nipy.externals.configobj.re"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.ConfigParserInterpolation._parse_match": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "nipy.externals.configobj.ConfigspecError": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.DEFAULT_INDENT_TYPE": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "nipy.externals.configobj.DEFAULT_INTERPOLATION": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "nipy.externals.configobj.DuplicateError": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.InterpolationEngine": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "nipy.externals.configobj.re",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.InterpolationEngine.__init__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "nipy.externals.configobj.InterpolationEngine._fetch": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "isinstance",
    "nipy.externals.configobj.MissingInterpolationOption"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.InterpolationEngine._parse_match": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.InterpolationEngine.interpolate": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "recursive_interpolate"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.InterpolationEngine.interpolate.recursive_interpolate": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "nipy.externals.configobj.InterpolationLoopError",
    "recursive_interpolate"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.InterpolationError": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.InterpolationLoopError": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.InterpolationLoopError.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.MAX_INTERPOL_DEPTH": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "nipy.externals.configobj.MISSING": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "nipy.externals.configobj.MissingInterpolationOption": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.MissingInterpolationOption.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.NestingError": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.OPTION_DEFAULTS": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "nipy.externals.configobj.ParseError": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.ReloadError": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.ReloadError.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "IOError.__init__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.RepeatSectionError": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.Section": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.Section.__delitem__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "dict.__delitem__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__getitem__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_check",
    "dict.__getitem__",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__getitem__._check": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__init__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__reduce__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "dict",
    "nipy.externals.configobj.__newobj__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__repr__": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "_getval",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__repr__._getval": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "dict.__getitem__",
    "nipy.externals.configobj.MissingInterpolationOption"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__setitem__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "dict.__setitem__",
    "isinstance",
    "list",
    "nipy.externals.configobj.Section",
    "nipy.externals.configobj.unrepr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.__setstate__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "dict.update"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section._initialise": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section._interpolate": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AttributeError",
    "class_",
    "nipy.externals.configobj.DEFAULT_INTERPOLATION",
    "nipy.externals.configobj.interpolation_engines"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.as_bool": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.as_float": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.as_int": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.as_list": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.clear": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "dict.clear"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.dict": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "nipy.externals.configobj.Section",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.get": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.items": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.iteritems": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.iterkeys": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.itervalues": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.keys": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.merge": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.pop": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "KeyError",
    "nipy.externals.configobj.MISSING"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.popitem": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.rename": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "KeyError",
    "dict.__delitem__",
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.restore_default": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.restore_defaults": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.setdefault": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.update": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.values": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "nipy.externals.configobj.Section.walk": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "Exception",
    "function",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.SimpleVal": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.SimpleVal.__init__": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.SimpleVal.check": {
  "data": {
   "lineno": 2392
  },
  "type": "function"
 },
 "nipy.externals.configobj.TemplateInterpolation": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "nipy.externals.configobj.InterpolationEngine",
    "nipy.externals.configobj.re"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.TemplateInterpolation._parse_match": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "nipy.externals.configobj.UnknownType": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.UnreprError": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "nipy.externals.configobj.ConfigObjError"
   ]
  },
  "type": "class"
 },
 "nipy.externals.configobj.VdtMissingValue": {
  "data": {
   "shadows": "validate.VdtMissingValue"
  },
  "type": "import"
 },
 "nipy.externals.configobj.__all__": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "nipy.externals.configobj.__newobj__": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "nipy.externals.configobj.__test__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.externals.configobj.__version__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.externals.configobj._builder": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "nipy.externals.configobj.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "nipy.externals.configobj.compiler": {
  "data": {
   "shadows": "compiler"
  },
  "type": "import"
 },
 "nipy.externals.configobj.dquot": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "nipy.externals.configobj.flatten_errors": {
  "data": {
   "lineno": 2399,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.getObj": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nipy.externals.configobj.compiler"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.get_extra_values": {
  "data": {
   "lineno": 2459
  },
  "type": "function"
 },
 "nipy.externals.configobj.interpolation_engines": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "nipy.externals.configobj.match_utf8": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nipy.externals.configobj.BOM_LIST"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.noquot": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "nipy.externals.configobj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.externals.configobj.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nipy.externals.configobj.squot": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "nipy.externals.configobj.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.externals.configobj.tdquot": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "nipy.externals.configobj.tsquot": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "nipy.externals.configobj.unrepr": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "nipy.externals.configobj.ast"
   ]
  },
  "type": "function"
 },
 "nipy.externals.configobj.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.externals.configobj.wspace_plus": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "nipy.externals.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.externals.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.externals.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.externals.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.externals.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d": {
  "data": {},
  "type": "module"
 },
 "nipy.externals.transforms3d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.quaternions": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float",
    "numpy.maximum_sctype"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.quaternions._FLOAT_EPS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.quaternions._MAX_FLOAT": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.quaternions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.quaternions.axangle2quat": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.quaternions.math",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.axangle2rmat": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.quaternions.math",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.conjugate": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.eye": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.fillpositive": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "nipy.externals.transforms3d.quaternions._FLOAT_EPS",
    "nipy.externals.transforms3d.quaternions._MAX_FLOAT",
    "numpy.asarray",
    "numpy.dot",
    "numpy.finfo",
    "numpy.r_",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.inverse": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.quaternions.conjugate",
    "nipy.externals.transforms3d.quaternions.norm"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.isunit": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.quaternions.norm",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.mat2quat": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.quaternions.mult": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.nearly_equivalent": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.norm": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.quaternions.quat2axangle": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "max",
    "min",
    "nipy.externals.transforms3d.quaternions._FLOAT_EPS",
    "nipy.externals.transforms3d.quaternions.math",
    "numpy.array",
    "numpy.asarray",
    "numpy.finfo",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.quat2mat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.quaternions.rotate_vector": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.quaternions.conjugate",
    "nipy.externals.transforms3d.quaternions.mult",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.externals.transforms3d.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.taitbryan": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.taitbryan._FLOAT_EPS_4": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.taitbryan.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.taitbryan.axangle2euler": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.taitbryan.mat2euler"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.euler2axangle": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.taitbryan.euler2quat"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.euler2mat": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "functools.reduce",
    "nipy.externals.transforms3d.taitbryan.math",
    "numpy.array",
    "numpy.dot",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.euler2quat": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.taitbryan.math",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.mat2euler": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "nipy.externals.transforms3d.taitbryan._FLOAT_EPS_4",
    "nipy.externals.transforms3d.taitbryan.math",
    "numpy.asarray",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.taitbryan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.taitbryan.nq": {
  "data": {
   "shadows": "quaternions"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.taitbryan.quat2euler": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.taitbryan.mat2euler"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.taitbryan.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.externals.transforms3d.tests.samples": {
  "data": {
   "symbols_in_volume": [
    "euler2mat",
    "inique",
    "nipy.externals.transforms3d.tests.samples._r12",
    "nipy.externals.transforms3d.tests.samples._r13",
    "nipy.externals.transforms3d.tests.samples.euler_tuples",
    "nipy.externals.transforms3d.tests.samples.params",
    "numpy.arange",
    "numpy.pi",
    "numpy.sqrt",
    "permuted_signs",
    "permuted_with_signs",
    "tuple"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.tests.samples._r12": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.samples._r13": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.samples.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.samples.euler_mats": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.samples.euler_tuples": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.samples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.samples.params": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.samples.sphere_points": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "list",
    "nipy.externals.transforms3d.tests.test_quaternions.Nq",
    "nipy.externals.transforms3d.tests.test_quaternions.euler_quats",
    "nipy.externals.transforms3d.tests.test_quaternions.params",
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "nipy.externals.transforms3d.tests.test_quaternions.unit_quats",
    "numpy.dot",
    "numpy.sqrt",
    "range",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.Nq": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.eg_pairs": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.euler_quats": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.params": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.q": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.slow": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.sympy_aa2mat": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "cos",
    "nipy.externals.transforms3d.tests.test_quaternions.math",
    "numpy.array",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.sympy_aa2mat2": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "cos",
    "nipy.externals.transforms3d.tests.test_quaternions.math",
    "numpy.array",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_angle_axis2quat": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_axis_angle": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.eg_pairs",
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "nipy.externals.transforms3d.tests.test_quaternions.sympy_aa2mat",
    "nipy.externals.transforms3d.tests.test_quaternions.sympy_aa2mat2",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_conjugate": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_eye": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.allclose",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_fillpos": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_inverse": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.eg_pairs",
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_mult": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.eg_pairs",
    "numpy.dot",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_norm": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_qrotate": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.eg_pairs",
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_quat2mat": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.test_quaternion_reconstruction": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_quaternions.q",
    "nipy.externals.transforms3d.tests.test_quaternions.unit_quats",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.tq": {
  "data": {
   "shadows": "quaternions"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_quaternions.unit_quats": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan": {
  "data": {
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float"
   ]
  },
  "type": "module"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.FLOAT_EPS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.crude_mat2euler": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_taitbryan.math"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.is_valid_rotation": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.sympy_euler": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "cos",
    "nipy.externals.transforms3d.tests.test_taitbryan.math",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.sympy_euler2quat": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "cos",
    "nipy.externals.transforms3d.tests.test_taitbryan.math",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.test_basic_euler": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_taitbryan.is_valid_rotation",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.allclose",
    "numpy.dot",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.test_euler_instability": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_taitbryan.FLOAT_EPS",
    "nipy.externals.transforms3d.tests.test_taitbryan.crude_mat2euler",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.test_euler_mat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_taitbryan.sympy_euler",
    "nipy.externals.transforms3d.tests.test_taitbryan.x_only",
    "nipy.externals.transforms3d.tests.test_taitbryan.y_only",
    "nipy.externals.transforms3d.tests.test_taitbryan.z_only",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.test_quats": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.tests.test_taitbryan.sympy_euler2quat",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.tq": {
  "data": {
   "shadows": "quaternions"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.ttb": {
  "data": {
   "shadows": "taitbryan"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.x_only": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.y_only": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.tests.test_taitbryan.z_only": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.externals.transforms3d.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.utils.inique": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.utils.normalized_vector": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.utils.math",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.utils.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "nipy.externals.transforms3d.utils.permuted_signs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "itertools.permutations",
    "len",
    "nipy.externals.transforms3d.utils.inique",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.utils.permuted_with_signs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "itertools.permutations",
    "nipy.externals.transforms3d.utils.permuted_signs"
   ]
  },
  "type": "function"
 },
 "nipy.externals.transforms3d.utils.vector_norm": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nipy.externals.transforms3d.utils.math",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.fixes": {
  "data": {
   "symbols_in_volume": [
    "nipy.fixes.test"
   ]
  },
  "type": "module"
 },
 "nipy.fixes.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.fixes._tester": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.fixes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.fixes.nibabel": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.nibabel.orientations": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.nibabel.orientations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.nibabel.orientations.io_orientation": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.alltrue",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.dot",
    "numpy.equal",
    "numpy.finfo",
    "numpy.int8",
    "numpy.linalg.svd",
    "numpy.nan",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.nibabel.orientations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.fixes.nibabel.orientations.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.fixes.numpy": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.numpy.testing": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.numpy.testing.noseclasses": {
  "data": {
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.numpy"
   ]
  },
  "type": "module"
 },
 "nipy.fixes.numpy.testing.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.KnownFailure": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.KnownFailureTest",
    "nose.plugins.errorclass.ErrorClass",
    "nose.plugins.errorclass.ErrorClassPlugin"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.KnownFailure.configure": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.KnownFailure.options": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.KnownFailureTest": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "nose.plugins.doctests.DocTestCase"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "inspect.isclass",
    "inspect.isfunction",
    "inspect.ismethod",
    "inspect.ismodule",
    "inspect.isroutine",
    "isinstance",
    "nipy.fixes.numpy.testing.noseclasses.doctest",
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "nipy.fixes.numpy.testing.noseclasses.inspect",
    "object",
    "object.__globals__",
    "object.__module__",
    "object.__self__.__class__.__module__",
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestCase",
    "nipy.fixes.numpy.testing.noseclasses.NumpyDocTestFinder",
    "nipy.fixes.numpy.testing.noseclasses.NumpyOutputChecker",
    "nipy.fixes.numpy.testing.noseclasses.doctest",
    "nose.plugins.doctests.Doctest"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.numpy",
    "nipy.fixes.numpy.testing.noseclasses.print_state"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.doctest",
    "nose.plugins.base.Plugin.configure"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AttributeError",
    "nose.plugins.doctests.log.debug",
    "nose.util.src"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.os",
    "nose.plugins.base.Plugin.options"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.set_test_context": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "__import__",
    "get_package_name",
    "nipy.fixes.numpy.testing.noseclasses.numpy",
    "nipy.fixes.numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.os",
    "nose.plugins.doctests.Doctest.wantFile"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.nose"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.noseclasses.nose"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.Unplugger": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.noseclasses.Unplugger.__init__": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.Unplugger.configure": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.Unplugger.options": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.noseclasses.print_state": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "nipy.fixes.numpy.testing.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "isinstance",
    "nipy.fixes.numpy.testing.nosetester.get_package_name",
    "nipy.fixes.numpy.testing.nosetester.os",
    "nipy.fixes.numpy.testing.nosetester.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "NumpyDoctest"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.nosetester.import_nose",
    "nipy.fixes.numpy.testing.nosetester.nose",
    "nipy.fixes.numpy.testing.nosetester.numpy",
    "nipy.fixes.numpy.testing.nosetester.os",
    "nipy.fixes.numpy.testing.nosetester.scipy",
    "nipy.fixes.numpy.testing.nosetester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "nipy.externals.six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester.bench": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Unplugger",
    "nipy.fixes.numpy.testing.nosetester.import_nose",
    "nipy.fixes.numpy.testing.nosetester.nose",
    "nipy.fixes.numpy.testing.nosetester.os",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester.prepare_test_args": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "KnownFailure",
    "Unplugger",
    "nipy.fixes.numpy.testing.nosetester.import_nose",
    "nipy.fixes.numpy.testing.nosetester.nose",
    "p"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.NoseTester.test": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "NumpyTestProgram",
    "min",
    "nipy.fixes.numpy.testing.nosetester.doctest",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.get_package_name": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nipy.fixes.numpy.testing.nosetester.os"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.import_nose": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ImportError",
    "nipy.fixes.numpy.testing.nosetester.nose"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.nose.plugins.builtin": {
  "data": {
   "shadows": "nose.plugins.builtin"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.run_module_suite": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AssertionError",
    "nipy.fixes.numpy.testing.nosetester.import_nose",
    "nipy.fixes.numpy.testing.nosetester.sys"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.numpy.testing.nosetester.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.fixes.numpy.testing.utils": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.numpy.testing.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.scipy": {
  "data": {},
  "type": "module"
 },
 "nipy.fixes.scipy.ndimage": {
  "data": {
   "symbols_in_volume": [
    "nipy.fixes.scipy.ndimage.affine_transform",
    "nipy.fixes.scipy.ndimage.map_coordinates",
    "numpy.dtype",
    "numpy.int32",
    "numpy.int64",
    "numpy.intp",
    "scipy.ndimage.affine_transform.__doc__",
    "scipy.ndimage.map_coordinates.__doc__"
   ]
  },
  "type": "module"
 },
 "nipy.fixes.scipy.ndimage._INT_DTYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.fixes.scipy.ndimage.__test__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.fixes.scipy.ndimage._proc_array": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nipy.fixes.scipy.ndimage._INT_DTYPE",
    "numpy.dtype",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.scipy.ndimage._proc_output": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "hasattr",
    "nipy.fixes.scipy.ndimage._INT_DTYPE",
    "nipy.fixes.scipy.ndimage._proc_array",
    "numpy.dtype",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.scipy.ndimage.affine_transform": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "input",
    "nipy.fixes.scipy.ndimage._proc_array",
    "nipy.fixes.scipy.ndimage._proc_output",
    "scipy.ndimage.affine_transform"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.scipy.ndimage.map_coordinates": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "input",
    "nipy.fixes.scipy.ndimage._proc_array",
    "nipy.fixes.scipy.ndimage._proc_output",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.scipy.ndimage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.fixes.scipy.ndimage.spnd": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.fixes.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.fixes.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.fixes.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.fixes.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.fixes.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.fixes.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.fixes.test": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "nipy.fixes._tester",
    "nipy.testing.Tester",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "nipy.get_info": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nipy.info": {
  "data": {
   "symbols_in_volume": [
    "nipy.info.DATA_PKGS",
    "nipy.info.NIPY_DATA_URL",
    "nipy.info.NIPY_INSTALL_HINT",
    "nipy.info.__version__",
    "nipy.info._version_extra",
    "nipy.info._version_major",
    "nipy.info._version_micro",
    "nipy.info._version_minor",
    "nipy.info.description",
    "nipy.info.long_description",
    "nipy.info.url"
   ]
  },
  "type": "module"
 },
 "nipy.info.AUTHOR": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "nipy.info.AUTHOR_EMAIL": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "nipy.info.CLASSIFIERS": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "nipy.info.CYTHON_MIN_VERSION": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "nipy.info.DATA_PKGS": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "nipy.info.DESCRIPTION": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "nipy.info.DOWNLOAD_URL": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "nipy.info.ISRELEASE": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "nipy.info.LICENSE": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "nipy.info.LONG_DESCRIPTION": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "nipy.info.MAINTAINER": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "nipy.info.MAINTAINER_EMAIL": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "nipy.info.MAJOR": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "nipy.info.MAYAVI_MIN_VERSION": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "nipy.info.MICRO": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "nipy.info.MINOR": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "nipy.info.NAME": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "nipy.info.NIBABEL_MIN_VERSION": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "nipy.info.NIPY_DATA_URL": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "nipy.info.NIPY_INSTALL_HINT": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "nipy.info.NUMPY_MIN_VERSION": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "nipy.info.PLATFORMS": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "nipy.info.REQUIRES": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "nipy.info.SCIPY_MIN_VERSION": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "nipy.info.STATUS": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "nipy.info.SYMPY_MIN_VERSION": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "nipy.info.URL": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "nipy.info.VERSION": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "nipy.info.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.info._version_extra": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.info._version_major": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.info._version_micro": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.info._version_minor": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.info.description": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.info.long_description": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.info.url": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "nipy.interfaces": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.interfaces.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.interfaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.interfaces.bench": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.interfaces.matlab": {
  "data": {},
  "type": "module"
 },
 "nipy.interfaces.matlab.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.interfaces.matlab.matlab_cmd": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.interfaces.matlab.mlab_tempfile": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "dir",
    "nipy.interfaces.matlab.os",
    "nipy.interfaces.matlab.re",
    "nipy.interfaces.matlab.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.matlab.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.interfaces.matlab.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nipy.interfaces.matlab.run_matlab": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nipy.interfaces.matlab.matlab_cmd",
    "nipy.interfaces.matlab.subprocess"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.matlab.run_matlab_script": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nipy.interfaces.matlab.run_matlab",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.matlab.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nipy.interfaces.matlab.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.interfaces.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.interfaces.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.interfaces.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.interfaces.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.interfaces.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.interfaces.spm": {
  "data": {
   "symbols_in_volume": [
    "nipy.interfaces.spm.SpmInfo"
   ]
  },
  "type": "module"
 },
 "nipy.interfaces.spm.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.SpmInfo": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.interfaces.spm.SpmInfo.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "nipy.interfaces.spm.SpmInfo._set_properties": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "open",
    "run_matlab_script"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.SpmInfo.spm_path": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.SpmInfo.spm_ver": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.fltcols": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.fname_presuffix": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nipy.interfaces.spm.os"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.fnames_presuffix": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nipy.interfaces.spm.fname_presuffix"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.make_job": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "nipy.interfaces.spm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.run_jobdef": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.interfaces.spm.spm_info",
    "run_matlab_script",
    "scipy.io.savemat"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "nipy.interfaces.spm.scans_for_fname": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nibabel.load",
    "numpy.zeros",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.scans_for_fnames": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "nipy.interfaces.spm.scans_for_fname",
    "numpy.zeros",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.spm.spm_info": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "nipy.interfaces.spm.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.interfaces.test": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.interfaces.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.interfaces.tests.test_mlabtemp": {
  "data": {},
  "type": "module"
 },
 "nipy.interfaces.tests.test_mlabtemp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.interfaces.tests.test_mlabtemp.check_mlab_tempfile": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "OSError",
    "dir",
    "nipy.interfaces.matlab.mlab_tempfile",
    "nipy.interfaces.tests.test_mlabtemp.os"
   ]
  },
  "type": "function"
 },
 "nipy.interfaces.tests.test_mlabtemp.mlab_tempfile": {
  "data": {
   "shadows": "nipy.interfaces.matlab.mlab_tempfile"
  },
  "type": "import"
 },
 "nipy.interfaces.tests.test_mlabtemp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.interfaces.tests.test_mlabtemp.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.interfaces.tests.test_mlabtemp.test_mlab_tempfile": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dir",
    "nipy.interfaces.tests.test_mlabtemp.check_mlab_tempfile",
    "nipy.interfaces.tests.test_mlabtemp.tempfile"
   ]
  },
  "type": "function"
 },
 "nipy.io": {
  "data": {},
  "type": "module"
 },
 "nipy.io.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.io.api": {
  "data": {},
  "type": "module"
 },
 "nipy.io.api.load_image": {
  "data": {
   "shadows": "load"
  },
  "type": "import"
 },
 "nipy.io.api.save_image": {
  "data": {
   "shadows": "save"
  },
  "type": "import"
 },
 "nipy.io.files": {
  "data": {},
  "type": "module"
 },
 "nipy.io.files.HeaderDataError": {
  "data": {
   "shadows": "nibabel.spatialimages.HeaderDataError"
  },
  "type": "import"
 },
 "nipy.io.files._type_from_filename": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "nipy.io.files.os"
   ]
  },
  "type": "function"
 },
 "nipy.io.files.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.files.as_image": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "is_image",
    "isinstance",
    "nipy.io.files.load"
   ]
  },
  "type": "function"
 },
 "nipy.io.files.load": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "get_affine",
    "get_dataobj",
    "get_header",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nifti2nipy"
   ]
  },
  "type": "function"
 },
 "nipy.io.files.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.io.files.save": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nibabel.Spm2AnalyzeImage.from_image",
    "nibabel.spatialimages.HeaderDataError",
    "nipy.io.files._type_from_filename",
    "nipy2nifti",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "nipy.io.imageformats": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.io.imageformats.warnings"
   ]
  },
  "type": "module"
 },
 "nipy.io.imageformats.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.io.imageformats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.imageformats.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.io.imageformats.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.io.imageformats.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.io.nibcompat": {
  "data": {},
  "type": "module"
 },
 "nipy.io.nibcompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.nibcompat.get_affine": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "nipy.io.nibcompat.get_dataobj": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "nipy.io.nibcompat.get_header": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "nipy.io.nibcompat.get_unscaled_data": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "nibabel.AnalyzeImage.ImageArrayProxy",
    "nibabel.loadsave.read_img_data",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.io.nibcompat.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.nibcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "nipy.io.nifti_ref.TIME_LIKE_AXES",
    "nipy.io.nifti_ref.TIME_LIKE_MAP"
   ]
  },
  "type": "module"
 },
 "nipy.io.nifti_ref.AT": {
  "data": {
   "shadows": "AffineTransform"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.NiftiError": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.io.nifti_ref.TIME_LIKE_AXES": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref.TIME_LIKE_MAP": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref.TIME_LIKE_ORDERED": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref.TIME_LIKE_UNITS": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref.TINY": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref.XFORM2SPACE": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "nipy.io.nifti_ref._find_time_like": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "axmap",
    "enumerate",
    "list",
    "nipy.io.nifti_ref.NiftiError",
    "nipy.io.nifti_ref.TIME_LIKE_MAP",
    "nipy.io.nifti_ref.TIME_LIKE_ORDERED"
   ]
  },
  "type": "function"
 },
 "nipy.io.nifti_ref.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.cm_product": {
  "data": {
   "shadows": "product"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.ncrs": {
  "data": {
   "shadows": "spaces"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.nifti2nipy": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "Image",
    "UserWarning",
    "get_affine",
    "get_header",
    "len",
    "list",
    "nibabel.affines.from_matvec",
    "nipy.io.nifti_ref.NiftiError",
    "nipy.io.nifti_ref.TIME_LIKE_UNITS",
    "nipy.io.nifti_ref.XFORM2SPACE",
    "nipy.io.nifti_ref.warnings",
    "numpy.diag",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.nifti_ref.nipy2nifti": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "FutureWarning",
    "as_xyz_image",
    "copy.copy",
    "list",
    "nibabel.Nifti1Header.from_header",
    "nibabel.Nifti1Image",
    "nibabel.affines.to_matvec",
    "nipy.io.nifti_ref.NiftiError",
    "nipy.io.nifti_ref.TIME_LIKE_AXES",
    "nipy.io.nifti_ref.TINY",
    "nipy.io.nifti_ref.XFORM2SPACE",
    "nipy.io.nifti_ref._find_time_like",
    "nipy.io.nifti_ref.sys",
    "nipy.io.nifti_ref.warnings",
    "numpy.abs",
    "numpy.allclose",
    "numpy.any",
    "numpy.dtype",
    "numpy.rollaxis",
    "numpy.sqrt",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.io.nifti_ref.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.to_matvec": {
  "data": {
   "shadows": "nibabel.affines.to_matvec"
  },
  "type": "import"
 },
 "nipy.io.nifti_ref.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.io.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.io.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.io.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.io.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.io.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.io.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.io.tests.test_image_io": {
  "data": {},
  "type": "module"
 },
 "nipy.io.tests.test_image_io.AfT": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.DataError": {
  "data": {
   "shadows": "nipy.utils.DataError"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.HeaderDataError": {
  "data": {
   "shadows": "nibabel.spatialimages.HeaderDataError"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.ImageFileError": {
  "data": {
   "shadows": "nibabel.spatialimages.ImageFileError"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.Nifti1Header": {
  "data": {
   "shadows": "nibabel.Nifti1Header"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.anatfile": {
  "data": {
   "shadows": "nipy.testing.anatfile"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_array_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_array_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_dt_no_end_equal": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nipy.testing.assert_equal",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.assert_equal": {
  "data": {
   "shadows": "nipy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_raises": {
  "data": {
   "shadows": "nipy.testing.assert_raises"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.assert_true": {
  "data": {
   "shadows": "nipy.testing.assert_true"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.big_bad_ulp": {
  "data": {
   "shadows": "nibabel.tests.test_round_trip.big_bad_ulp"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.gimg": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.io.tests.test_image_io.if_templates": {
  "data": {
   "shadows": "nipy.testing.decorators.if_templates"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.load_template_img": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "load_image",
    "nipy.utils.templates.get_filename"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.randimg_in2out": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "nipy.core.api.Image",
    "nipy.core.api.vox2mni",
    "numpy.array",
    "numpy.dtype",
    "numpy.eye",
    "numpy.finfo",
    "numpy.iinfo",
    "numpy.prod",
    "numpy.uint16",
    "random.randint",
    "range",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.randint": {
  "data": {
   "shadows": "random.randint"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.setup_module": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nipy.io.tests.test_image_io.gimg",
    "nipy.io.tests.test_image_io.load_template_img",
    "nipy.utils.DataError"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.six": {
  "data": {
   "shadows": "nipy.externals.six"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.templates": {
  "data": {
   "shadows": "nipy.utils.templates"
  },
  "type": "import"
 },
 "nipy.io.tests.test_image_io.test_as_image": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "as_image",
    "nipy.externals.six.text_type",
    "nipy.testing.assert_array_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "nipy.testing.funcfile"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_badfile": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "IOError",
    "load_image",
    "nibabel.spatialimages.ImageFileError",
    "nipy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_file_roundtrip": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "load_image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.anatfile",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_header_roundtrip": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "load_image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.anatfile",
    "nipy.testing.assert_array_almost_equal",
    "nipy.testing.assert_equal",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_maxminmean_values": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nipy.io.tests.test_image_io.gimg",
    "nipy.testing.assert_array_almost_equal",
    "nipy.testing.assert_equal",
    "nipy.testing.decorators.if_templates",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_no_minc": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "load_image",
    "nibabel.__file__",
    "nipy.testing.assert_raises",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_nondiag": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "load_image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.tests.test_image_io.gimg",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.decorators.if_templates",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_output_dtypes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "load_image",
    "nibabel.Nifti1Header",
    "nibabel.spatialimages.HeaderDataError",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.Image",
    "nipy.core.api.vox2mni",
    "nipy.io.tests.test_image_io.assert_dt_no_end_equal",
    "nipy.testing.assert_raises",
    "numpy.diag",
    "numpy.dtype",
    "numpy.float",
    "numpy.int16",
    "numpy.random.RandomState",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_roundtrip_from_array": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "load_image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.AffineTransform",
    "nipy.core.api.Image",
    "nipy.testing.assert_almost_equal",
    "nipy.testing.assert_equal",
    "numpy.eye",
    "numpy.random.rand",
    "save_image"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.test_scaling_io_dtype": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "load_image",
    "nibabel.tests.test_round_trip.big_bad_ulp",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.tests.test_image_io.randimg_in2out",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.dtype",
    "numpy.finfo",
    "numpy.float32",
    "numpy.int16",
    "numpy.int32",
    "numpy.random.RandomState",
    "numpy.uint16",
    "numpy.uint8",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_image_io.vox2mni": {
  "data": {
   "shadows": "nipy.core.api.vox2mni"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat": {
  "data": {},
  "type": "module"
 },
 "nipy.io.tests.test_nibcompat.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nibcompat.test_funcs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NewNib",
    "OldNib",
    "get_affine",
    "get_dataobj",
    "get_header",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nibcompat.test_funcs.NewNib": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "class"
 },
 "nipy.io.tests.test_nibcompat.test_funcs.OldNib": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "nipy.io.tests.test_nibcompat.test_funcs.OldNib.get_affine": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nibcompat.test_funcs.OldNib.get_header": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "nipy.io.tests.test_nibcompat.test_unscaled_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "get_dataobj",
    "get_header",
    "get_unscaled_data",
    "img_class",
    "nibabel.Nifti1Image",
    "nibabel.Nifti1Pair",
    "nibabel.load",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array",
    "numpy.dtype",
    "numpy.eye",
    "numpy.int16",
    "numpy.isnan",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref": {
  "data": {},
  "type": "module"
 },
 "nipy.io.tests.test_nifti_ref.AT": {
  "data": {
   "shadows": "AffineTransform"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.CS": {
  "data": {
   "shadows": "CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.HeaderDataError": {
  "data": {
   "shadows": "nibabel.spatialimages.HeaderDataError"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.copy_of": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Image",
    "copy.copy",
    "load"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.tests.test_nifti_ref.setup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nipy.io.tests.test_nifti_ref.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.teardown": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nipy.io.tests.test_nifti_ref.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_basic_load": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nifti2nipy",
    "numpy.diag",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_basic_nipy2nifti": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "get_header",
    "nipy.io.tests.test_nifti_ref.copy_of",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_dim_info": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Image",
    "dict",
    "enumerate",
    "get_header",
    "nipy.io.tests.test_nifti_ref.copy_of",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_expand_to_3d": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "get_header",
    "nibabel.Nifti1Image",
    "nifti2nipy",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_load_cmaps": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "aligned_csm",
    "get_header",
    "list",
    "nibabel.Nifti1Image",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_load_dim_info": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "aligned_csm",
    "get_header",
    "list",
    "nibabel.Nifti1Image",
    "nibabel.affines.from_matvec",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.random.normal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_load_no_time": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "aligned_csm",
    "nibabel.Nifti1Image",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.random.normal",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_load_spaces": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "aligned_csm",
    "csm",
    "get_header",
    "list",
    "mni_csm",
    "nibabel.Nifti1Image",
    "nibabel.affines.from_matvec",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.diag",
    "numpy.random.normal",
    "talairach_csm",
    "unknown_csm"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_load_toffset": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "aligned_csm",
    "get_header",
    "list",
    "nibabel.Nifti1Image",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.random.normal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_mm_scaling": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "aligned_csm",
    "get_header",
    "list",
    "nibabel.Nifti1Image",
    "nibabel.affines.from_matvec",
    "nifti2nipy",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.dot",
    "numpy.random.normal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_no_time": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Image",
    "nipy2nifti",
    "numpy.diag",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal",
    "talairach_csm"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_orthogonal_dims": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Image",
    "as3d",
    "get_affine",
    "nibabel.affines.from_matvec",
    "nipy2nifti",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.normal",
    "numpy.testing.assert_array_equal",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_orthogonal_dims.as3d": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nibabel.affines.from_matvec"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_save_dtype": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Image",
    "TypeError",
    "get_header",
    "nibabel.Nifti1Header",
    "nibabel.spatialimages.HeaderDataError",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.dtype",
    "numpy.int16",
    "numpy.int32",
    "numpy.random.normal",
    "numpy.zeros",
    "vox2mni"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_save_spaces": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "Image",
    "csm",
    "get_header",
    "mni_csm",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.random.normal",
    "talairach_csm"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_save_toffset": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Image",
    "get_header",
    "nibabel.affines.from_matvec",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.normal",
    "talairach_csm"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_time_axes_4th": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "Image",
    "get_header",
    "nipy2nifti",
    "numpy.diag",
    "numpy.random.normal",
    "numpy.rollaxis",
    "numpy.testing.assert_array_equal",
    "talairach_csm"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_time_like_matching": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "Image",
    "aliases",
    "aliases.values",
    "dict",
    "enumerate",
    "mni_csm",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.random.normal",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_time_pixdims": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Image",
    "get_header",
    "mni_csm",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.random.normal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_too_many_dims": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "Image",
    "list",
    "nipy2nifti",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.zeros",
    "range",
    "talairach_csm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_unknown": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dict",
    "get_affine",
    "nifti2nipy",
    "nipy.io.tests.test_nifti_ref.copy_of",
    "nipy2nifti",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.testing.assert_array_equal",
    "unknown_csm",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_xyz_affines": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "nipy.io.tests.test_nifti_ref.copy_of",
    "nipy2nifti",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.test_xyzt_units": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Image",
    "get_header",
    "nipy.io.tests.test_nifti_ref.copy_of",
    "nipy2nifti",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_nifti_ref.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save": {
  "data": {},
  "type": "module"
 },
 "nipy.io.tests.test_save.AT": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_map.AffineTransform"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.CS": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_system.CoordinateSystem"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.TMP_FNAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nipy.io.tests.test_save.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.api": {
  "data": {
   "shadows": "nipy.core.api"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.from_matvec": {
  "data": {
   "shadows": "nibabel.affines.from_matvec"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.mni_csm": {
  "data": {
   "shadows": "nipy.core.reference.spaces.mni_csm"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.save_image": {
  "data": {
   "shadows": "nipy.io.api.save_image"
  },
  "type": "import"
 },
 "nipy.io.tests.test_save.test_save1": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.io.tests.test_save.TMP_FNAME",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_save.test_save2": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.AffineTransform.from_start_step",
    "nipy.core.api.Image",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.io.tests.test_save.TMP_FNAME",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.random.standard_normal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_save.test_save2b": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "list",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.Image",
    "nipy.core.api.vox2mni",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.io.tests.test_save.TMP_FNAME",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_save.test_save3": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nibabel.affines.from_matvec",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.Image",
    "nipy.core.reference.coordinate_map.AffineTransform",
    "nipy.core.reference.coordinate_system.CoordinateSystem",
    "nipy.core.reference.spaces.mni_csm",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.io.tests.test_save.TMP_FNAME",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.array",
    "numpy.diag",
    "numpy.random.standard_normal",
    "numpy.transpose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_save.test_save4": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nibabel.affines.from_matvec",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.Image",
    "nipy.core.reference.coordinate_map.AffineTransform",
    "nipy.core.reference.coordinate_system.CoordinateSystem",
    "nipy.core.reference.spaces.mni_csm",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.io.tests.test_save.TMP_FNAME",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.random.standard_normal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "nipy.io.tests.test_save.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.is_image": {
  "data": {
   "shadows": "nipy.core.api.is_image"
  },
  "type": "import"
 },
 "nipy.labs": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.labs.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.__config__": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.__config__.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "nipy.labs.__config__.get_info": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "globals"
   ]
  },
  "type": "function"
 },
 "nipy.labs.__config__.lapack_opt_info": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "nipy.labs.__config__.nipy_info": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "nipy.labs.__config__.openblas_lapack_info": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.labs.__config__.show": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "globals",
    "len",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bench": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.labs.bindings": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "nipy.testing.Tester",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.bindings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.bench": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.labs.bindings.benchmarks": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.bench_copy_vector_contiguous": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nipy.labs.bindings.benchmarks.bench_numpy.time_copy_vector",
    "numpy.random.rand",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.bench_copy_vector_strided": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nipy.labs.bindings.benchmarks.bench_numpy.time_copy_vector",
    "numpy.random.rand",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.time_copy_vector": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "copy_vector",
    "nipy.labs.bindings.benchmarks.bench_numpy.time",
    "nipy.labs.bindings.benchmarks.bench_numpy.time_ratio",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.benchmarks.bench_numpy.time_ratio": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.bindings.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.bindings.test": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.bindings.tests.test_array.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_array.MAX_TEST_SIZE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_array._test_array_add": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "array_add",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array._test_array_div": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "array_div",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array._test_array_get": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "array_get",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array._test_array_get_block": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "array_get_block",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array._test_array_mul": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "array_mul",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array._test_array_sub": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "array_sub",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_array.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_array.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_array.random_shape": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array.MAX_TEST_SIZE",
    "numpy.random.randint",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_add": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_add",
    "nipy.labs.bindings.tests.test_array.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_div": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_div",
    "nipy.labs.bindings.tests.test_array.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_get": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_get",
    "nipy.labs.bindings.tests.test_array.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_get_block": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_get_block",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_mul": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_mul",
    "nipy.labs.bindings.tests.test_array.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_array.test_array_sub": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_array._test_array_sub",
    "nipy.labs.bindings.tests.test_array.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas1": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.bindings.tests.test_blas1.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_blas1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas1.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas1.n": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_blas1.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas1.test_dasum": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "blas_dasum",
    "nipy.labs.bindings.tests.test_blas1.n",
    "numpy.abs",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas1.test_daxpy": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "blas_daxpy",
    "nipy.labs.bindings.tests.test_blas1.n",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas1.test_ddot": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "blas_ddot",
    "nipy.labs.bindings.tests.test_blas1.n",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas1.test_dnrm2": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "blas_dnrm2",
    "nipy.labs.bindings.tests.test_blas1.n",
    "numpy.random.rand",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas1.test_dscal": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "blas_dscal",
    "nipy.labs.bindings.tests.test_blas1.n",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.bindings.tests.test_blas3.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_blas3._test_dtrXm": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "blasfn",
    "numpy.dot",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas3.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas3.n1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_blas3.n2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_blas3.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas3.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dgemm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "blas_dgemm",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "nipy.labs.bindings.tests.test_blas3.n2",
    "numpy.dot",
    "numpy.double",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dsymm": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "blas_dsymm",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "nipy.labs.bindings.tests.test_blas3.n2",
    "numpy.dot",
    "numpy.double",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dsyr2k": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "blas_dsyr2k",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "numpy.dot",
    "numpy.double",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dsyrk": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "blas_dsyrk",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "numpy.dot",
    "numpy.double",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dtrmm": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_blas3._test_dtrXm",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "numpy.double",
    "numpy.random.rand",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_blas3.test_dtrsm": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_blas3._test_dtrXm",
    "nipy.labs.bindings.tests.test_blas3.n1",
    "numpy.double",
    "numpy.linalg.inv",
    "numpy.random.rand",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_linalg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.bindings.tests.test_linalg.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_linalg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_linalg.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_linalg.n": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_linalg.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_linalg.test_vector_get": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_linalg.n",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "vector_get"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_linalg.test_vector_get_int32": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_linalg.n",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "vector_get"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_linalg.test_vector_set": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_linalg.n",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "vector_set"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_linalg.test_vector_set_int32": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_linalg.n",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "vector_set"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.bindings.tests.test_numpy.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.bindings.tests.test_numpy.MAX_TEST_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.labs.bindings.tests.test_numpy._test_copy_vector": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "copy_vector",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_copy_via_iterators": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "copy_via_iterators",
    "nose.tools.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_pass_array": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "pass_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_pass_matrix": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "pass_matrix"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_pass_vector": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pass_vector"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "pass_vector_via_iterator"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy._test_sum_via_iterators": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "range",
    "sum_via_iterators"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.bindings.tests.test_numpy.random_shape": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy.MAX_TEST_SIZE",
    "numpy.random.randint",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_copy_vector_contiguous": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int",
    "nipy.labs.bindings.tests.test_numpy._test_copy_vector",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_copy_vector_strided": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "nipy.labs.bindings.tests.test_numpy._test_copy_vector",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_copy_via_iterators": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_copy_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_copy_via_iterators_int32": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_copy_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_copy_via_iterators_uint8": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_copy_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_array": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_array",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_array_int32": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_array",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_array_uint8": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_array",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_matrix": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_matrix",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_matrix_int32": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_matrix",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_matrix_uint8": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_matrix",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_int32": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_uint8": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator_int32": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator_shift": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator_shift_int32": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator_shift_uint8": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_pass_vector_via_iterator_uint8": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_pass_vector_via_iterator",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_sum_via_iterators": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_sum_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_sum_via_iterators_int32": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_sum_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_sum_via_iterators_uint8": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "nipy.labs.bindings.tests.test_numpy._test_sum_via_iterators",
    "nipy.labs.bindings.tests.test_numpy.random_shape",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_type_conversions_in_C": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "npy_type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.tests.test_numpy.test_type_conversions_to_fff": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fff_type",
    "nose.tools.assert_equal",
    "numpy.dtype",
    "numpy.sctypes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.bindings.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.datasets": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.datasets.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.labs.datasets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.bench": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.labs.datasets.converters": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.converters.SpatialImage": {
  "data": {
   "shadows": "nibabel.spatialimages.SpatialImage"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.as_volume_img": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "VolumeImg",
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "nibabel.load",
    "nibabel.spatialimages.SpatialImage",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine",
    "nipy.io.nibcompat.get_header",
    "nipy.labs.datasets.converters.os",
    "numpy.asanyarray",
    "numpy.reshape",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.converters.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.get_header": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_header"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.labs.datasets.converters.save": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nibabel.Nifti1Header",
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nipy.labs.datasets.converters.as_volume_img"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.converters.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.labs.datasets.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.datasets.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.datasets.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.labs.datasets.test": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.labs.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.tests.test_converters": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nibabel.__path__",
    "nipy.labs.datasets.tests.test_converters.os"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.tests.test_converters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.data_file": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.datasets.tests.test_converters.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.nifti": {
  "data": {
   "shadows": "nifti"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.labs.datasets.tests.test_converters.test_basics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "as_volume_img",
    "nipy.labs.datasets.tests.test_converters.nose"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.tests.test_converters.test_conversion": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "as_volume_img",
    "nibabel.load",
    "nipy.labs.datasets.tests.test_converters.data_file",
    "nipy.labs.datasets.tests.test_converters.nose"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.tests.test_converters.test_from_nifti": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "as_volume_img",
    "nipy.labs.datasets.tests.test_converters.data_file",
    "nipy.labs.datasets.tests.test_converters.nifti",
    "nipy.labs.datasets.tests.test_converters.nose"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.tests.test_converters.test_save": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "as_volume_img",
    "nipy.labs.datasets.tests.test_converters.data_file",
    "nipy.labs.datasets.tests.test_converters.os",
    "nipy.labs.datasets.tests.test_converters.tempfile",
    "save"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.affine_transform": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.__copy__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.__deepcopy__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.__eq__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.__repr__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.composed_with": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "nipy.labs.datasets.transforms.affine_transform.AffineTransform",
    "numpy.dot",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.get_inverse": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nipy.labs.datasets.transforms.affine_transform.AffineTransform",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.inverse_mapping": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "apply_affine",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.AffineTransform.mapping": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "apply_affine"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.affine_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.affine_utils": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.affine_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.affine_utils.apply_affine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.c_.T",
    "numpy.dot",
    "numpy.ones",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_utils.from_matrix_vector": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_utils.get_bounds": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.affine_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.affine_utils.to_matrix_vector": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.datasets.transforms.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.transforms.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.test_compose_with_inverse": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AffineTransform",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_transform.test_misc": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AffineTransform",
    "isinstance",
    "nipy.labs.datasets.transforms.tests.test_affine_transform.copy",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.random.random",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.assert_equal": {
  "data": {
   "shadows": "nipy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.build_xform": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.test_from_matrix_vector": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "from_matrix_vector",
    "nipy.labs.datasets.transforms.tests.test_affine_utils.build_xform",
    "nipy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_affine_utils.test_to_matrix_vector": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nipy.labs.datasets.transforms.tests.test_affine_utils.build_xform",
    "nipy.testing.assert_equal",
    "to_matrix_vector"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_transform": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.id": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.mapping": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.test_composition": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Transform",
    "nipy.labs.datasets.transforms.tests.test_transform.id",
    "nipy.labs.datasets.transforms.tests.test_transform.mapping",
    "nose.tools.assert_raises",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.test_inverse": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Transform",
    "nipy.labs.datasets.transforms.tests.test_transform.id",
    "nipy.labs.datasets.transforms.tests.test_transform.mapping",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.tests.test_transform.test_misc": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "isinstance",
    "nipy.labs.datasets.transforms.tests.test_transform.copy",
    "nipy.labs.datasets.transforms.tests.test_transform.mapping",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.transforms.transform.CompositionError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nipy.labs.datasets.transforms.transform.Transform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.datasets.transforms.transform.Transform.__copy__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.__eq__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.__repr__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform._check_composition": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "nipy.labs.datasets.transforms.transform.CompositionError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.composed_with": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nipy.labs.datasets.transforms.transform.CompositionError",
    "nipy.labs.datasets.transforms.transform.Transform"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.composed_with.new_inverse_mapping": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "first_inverse_mapping",
    "second_inverse_mapping"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.composed_with.new_mapping": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "first_mapping",
    "second_mapping"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.transforms.transform.Transform.get_inverse": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.volumes.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.__docformat__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.labs.datasets.volumes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.bench": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.labs.datasets.volumes.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.datasets.volumes.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.labs.datasets.volumes.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.test": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.datasets.volumes.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_data": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_data.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_data.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_data.test_volume_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "VolumeData",
    "nipy.labs.datasets.volumes.tests.test_volume_data.copy",
    "nipy.labs.datasets.volumes.tests.test_volume_data.nose",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_field": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_field.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_field.test_interface": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "Transform",
    "VolumeField",
    "getattr",
    "map",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.id": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.inverse_mapping": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.mapping": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.test_as_volume_image": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "VolumeGrid",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.id",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.nose",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.test_constructor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.test_transformation": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Transform",
    "VolumeGrid",
    "VolumeImg",
    "isinstance",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.id",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.inverse_mapping",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.mapping",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.nose",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.test_trivial_grid": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "VolumeGrid",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.id",
    "numpy.random.random",
    "numpy.random.random_integers",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_grid.test_volume_grid": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "VolumeGrid",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.copy",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.mapping",
    "nipy.labs.datasets.volumes.tests.test_volume_grid.nose",
    "numpy.random.random",
    "numpy.testing.assert_raises",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.id": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.rotation": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cos",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_constructor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "numpy.eye",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_downsample": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "VolumeImg",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_eq": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Exception",
    "VolumeImg",
    "isinstance",
    "nipy.labs.datasets.volumes.tests.test_volume_img.copy",
    "nipy.labs.datasets.volumes.tests.test_volume_img.nose",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.random.random",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_get_affine": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "VolumeImg",
    "numpy.eye",
    "numpy.random.randint",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_identity_resample": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "VolumeImg",
    "numpy.array",
    "numpy.eye",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_reordering": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "VolumeImg",
    "from_matrix_vector",
    "nipy.labs.datasets.volumes.tests.test_volume_img.copy",
    "nipy.labs.datasets.volumes.tests.test_volume_img.nose",
    "nipy.labs.datasets.volumes.tests.test_volume_img.rotation",
    "numpy.abs",
    "numpy.array",
    "numpy.eye",
    "numpy.pi",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_resampled_to_img": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "VolumeImg",
    "nipy.labs.datasets.volumes.tests.test_volume_img.nose",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_resampling_with_affine": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "VolumeImg",
    "nipy.labs.datasets.volumes.tests.test_volume_img.rotation",
    "numpy.eye",
    "numpy.max",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_transformation": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "AffineTransform",
    "Transform",
    "VolumeImg",
    "nipy.labs.datasets.volumes.tests.test_volume_img.id",
    "nipy.labs.datasets.volumes.tests.test_volume_img.nose",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.tests.test_volume_img.test_values_in_world": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "VolumeImg",
    "numpy.eye",
    "numpy.indices",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.__copy__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.__deepcopy__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "nipy.labs.datasets.volumes.volume_data.copy"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.__eq__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.__repr__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData._apply_transform": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "nipy.labs.datasets.volumes.volume_data.copy"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData._get_interpolation_order": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.get_data": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.like_from_data": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.VolumeData.resampled_to_img": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "CompositionError",
    "as_volume_img",
    "hasattr",
    "nipy.labs.datasets.volumes.volume_data.copy"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_data.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_field": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField._apply_transform": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField.as_volume_img": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField.composed_with_transform": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "CompositionError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField.get_transform": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField.resampled_to_img": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_field.VolumeField.values_in_world": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.as_volume_img": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "VolumeImg",
    "apply_affine",
    "from_matrix_vector",
    "int",
    "len",
    "numpy.array",
    "numpy.ceil",
    "numpy.dot",
    "numpy.eye",
    "numpy.indices",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.get_transform": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.get_world_coords": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.like_from_data": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "nipy.labs.datasets.volumes.volume_grid.copy"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.VolumeGrid.values_in_world": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.c_.T",
    "numpy.dtype",
    "numpy.intp",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.swapaxes",
    "scipy.ndimage.map_coordinates",
    "slice"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_grid.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_grid.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_img": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "as_volume_img.__doc__",
    "numpy.eye"
   ]
  },
  "type": "class"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.__eq__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.__repr__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg._apply_transform": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "VolumeGrid",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg._swapaxes": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "nipy.labs.datasets.volumes.volume_img.VolumeImg",
    "numpy.array",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.as_volume_img": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "from_matrix_vector",
    "get_bounds",
    "int",
    "len",
    "list",
    "nipy.labs.datasets.volumes.volume_img.copy",
    "numpy.all",
    "numpy.array",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.rollaxis",
    "scipy.ndimage.affine_transform",
    "slice",
    "to_matrix_vector"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.get_affine": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.get_transform": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AffineTransform"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.like_from_data": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "nipy.labs.datasets.volumes.volume_img.copy"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.resampled_to_img": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "CompositionError",
    "as_volume_img",
    "hasattr",
    "isinstance",
    "nipy.labs.datasets.volumes.volume_img.VolumeImg",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.VolumeImg.xyz_ordered": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "CompositionError",
    "from_matrix_vector",
    "nipy.labs.datasets.volumes.volume_img.copy",
    "numpy.abs",
    "numpy.all",
    "numpy.argmax",
    "numpy.diag",
    "numpy.diff",
    "numpy.linalg.qr",
    "numpy.sort",
    "slice",
    "to_matrix_vector"
   ]
  },
  "type": "function"
 },
 "nipy.labs.datasets.volumes.volume_img.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_img.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_img.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.datasets.volumes.volume_img.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.glm": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "nipy.testing.Tester",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.glm.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.glm.bench": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.labs.glm.benchmarks": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.glm.benchmarks.bench_glm": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.glm.benchmarks.bench_glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.glm.benchmarks.bench_glm.bench_ols_axis0": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nipy.labs.glm.benchmarks.bench_glm.make_data",
    "nipy.labs.glm.benchmarks.bench_glm.ols"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.bench_ols_axis1": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nipy.labs.glm.benchmarks.bench_glm.make_data",
    "nipy.labs.glm.benchmarks.bench_glm.ols"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.bench_ols_axis2": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nipy.labs.glm.benchmarks.bench_glm.make_data",
    "nipy.labs.glm.benchmarks.bench_glm.ols"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.bench_ols_axis3": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nipy.labs.glm.benchmarks.bench_glm.make_data",
    "nipy.labs.glm.benchmarks.bench_glm.ols"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.make_data": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.glm.benchmarks.bench_glm.ols": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abs",
    "glm",
    "numpy.abs",
    "numpy.rollaxis",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.benchmarks.bench_glm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.glm.glm": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.glm.glm.DEF_DOFMAX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.glm.glm.DEF_TINY": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.labs.glm.glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.glm.glm.contrast": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.glm.glm.contrast.__add__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "nipy.labs.glm.glm.contrast"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.__div__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nipy.labs.glm.glm.DEF_DOFMAX",
    "nipy.labs.glm.glm.DEF_TINY",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.__rmul__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "float",
    "nipy.labs.glm.glm.contrast"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.pvalue": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "numpy.minimum",
    "scipy.stats.f.sf",
    "scipy.stats.t.sf"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.stat": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mahalanobis",
    "numpy.maximum",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.summary": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.contrast.zscore": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.z_score"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.glm": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.glm.glm.glm.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.glm.contrast": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "nipy.labs.glm.glm.DEF_DOFMAX",
    "nipy.labs.glm.glm.DEF_TINY",
    "nipy.labs.glm.glm.contrast",
    "numpy.asarray",
    "numpy.dot",
    "numpy.inner",
    "numpy.resize",
    "numpy.rollaxis",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.glm.fit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "nipy.labs.glm.glm.models",
    "nipy.labs.glm.glm.ols",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.glm.save": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.savez"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.load": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "list",
    "nipy.labs.glm.glm.glm",
    "numpy.load",
    "os.path.splitext",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.models": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.labs.glm.glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.glm.glm.ols": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.inner",
    "numpy.linalg.pinv",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.glm.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "nipy.labs.glm.glm.sps": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.glm.glm.zscore": {
  "data": {
   "shadows": "nipy.algorithms.statistics.utils.z_score"
  },
  "type": "import"
 },
 "nipy.labs.glm.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.glm.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.glm.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.glm.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.glm.test": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.glm.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.glm.tests.test_glm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.glm.tests.test_glm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.glm.tests.test_glm.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.make_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.ols": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "glm",
    "numpy.rollaxis",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.test_ols_axis0": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.test_ols_axis1": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.test_ols_axis2": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.TestFitting.test_ols_axis3": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "nipy.labs.glm.tests.test_glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.glm.tests.test_glm.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.glm.tests.test_glm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.glm.tests.test_glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.glm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.group": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "nipy.testing.Tester",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.group.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.group.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.group.bench": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test": {
  "data": {
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "module"
 },
 "nipy.labs.group.permutation_test.DEF_NDRAWS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test.DEF_NITER": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test.DEF_NPERMS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test.DEF_STAT_ONESAMPLE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test.DEF_STAT_TWOSAMPLE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.labs.group.permutation_test.Field": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.Field"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test._extract_clusters_from_diam": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "nipy.algorithms.graph.field.field_from_graph_and_data",
    "nipy.algorithms.graph.wgraph_from_3d_grid",
    "nipy.labs.group.permutation_test.extract_clusters_from_diam",
    "nipy.labs.group.permutation_test.max_dist",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.reshape",
    "numpy.size",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.compute_cluster_stats": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "max",
    "numpy.array",
    "numpy.log",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.compute_region_stat": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.log",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.extract_clusters_from_diam": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "len",
    "nipy.labs.group.permutation_test._extract_clusters_from_diam",
    "nipy.labs.group.permutation_test.extract_clusters_from_thresh",
    "nipy.labs.group.permutation_test.warnings",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.extract_clusters_from_graph": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.extract_clusters_from_thresh": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "len",
    "nipy.algorithms.graph.wgraph_from_3d_grid",
    "numpy.ones",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.field_from_graph_and_data": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.field_from_graph_and_data"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.max_dist": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.shape",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.onesample_stat": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "nipy.labs.group.permutation_test.DEF_NITER"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.os_stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.os_stat_mfx": {
  "data": {
   "shadows": "stat_mfx"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.peak_XYZ": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.argmax",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.group.permutation_test.permutation_test.calibrate": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "max",
    "nipy.labs.group.permutation_test.DEF_NPERMS",
    "nipy.labs.group.permutation_test.compute_cluster_stats",
    "nipy.labs.group.permutation_test.compute_region_stat",
    "nipy.labs.group.permutation_test.extract_clusters_from_diam",
    "nipy.labs.group.permutation_test.extract_clusters_from_graph",
    "nipy.labs.group.permutation_test.extract_clusters_from_thresh",
    "nipy.labs.group.permutation_test.onesample_stat",
    "nipy.labs.group.permutation_test.peak_XYZ",
    "nipy.labs.group.permutation_test.sorted_values",
    "nipy.labs.group.permutation_test.twosample_stat",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.uniform",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.squeeze",
    "numpy.zeros",
    "print",
    "range",
    "scipy.misc.comb"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test.height_threshold": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.ceil",
    "numpy.inf",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test.pvalue": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "float",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test.zscore": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "zscore"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test_onesample": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "nipy.labs.group.permutation_test.permutation_test"
   ]
  },
  "type": "class"
 },
 "nipy.labs.group.permutation_test.permutation_test_onesample.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "float",
    "nipy.labs.group.permutation_test.DEF_NDRAWS",
    "nipy.labs.group.permutation_test.DEF_NITER",
    "nipy.labs.group.permutation_test.DEF_STAT_ONESAMPLE",
    "nipy.labs.group.permutation_test.onesample_stat",
    "numpy.random.binomial",
    "numpy.random.randint",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test_onesample_graph": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "nipy.labs.group.permutation_test.permutation_test"
   ]
  },
  "type": "class"
 },
 "nipy.labs.group.permutation_test.permutation_test_onesample_graph.__init__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "float",
    "nipy.labs.group.permutation_test.DEF_NDRAWS",
    "nipy.labs.group.permutation_test.DEF_NITER",
    "nipy.labs.group.permutation_test.DEF_STAT_ONESAMPLE",
    "nipy.labs.group.permutation_test.onesample_stat",
    "numpy.random.binomial",
    "numpy.random.randint",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.permutation_test_twosample": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "nipy.labs.group.permutation_test.permutation_test"
   ]
  },
  "type": "class"
 },
 "nipy.labs.group.permutation_test.permutation_test_twosample.__init__": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "float",
    "nipy.labs.group.permutation_test.DEF_NDRAWS",
    "nipy.labs.group.permutation_test.DEF_NITER",
    "nipy.labs.group.permutation_test.DEF_STAT_TWOSAMPLE",
    "nipy.labs.group.permutation_test.twosample_stat",
    "numpy.arange",
    "numpy.array",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.sm": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.sorted_values": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.ts_stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.ts_stat_mfx": {
  "data": {
   "shadows": "stat_mfx"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.twosample_stat": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "nipy.labs.group.permutation_test.DEF_NITER"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.permutation_test.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.labs.group.permutation_test.wgraph_from_3d_grid": {
  "data": {
   "shadows": "nipy.algorithms.graph.wgraph_from_3d_grid"
  },
  "type": "import"
 },
 "nipy.labs.group.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.group.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.group.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.group.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.group.test": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.labs.group.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.group.tests.test_onesample_stat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.group.tests.test_onesample_stat.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.group.tests.test_onesample_stat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_onesample_stat.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_onesample_stat.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_onesample_stat.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_onesample_stat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_onesample_stat.test_onesample_stat": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "numpy.ones",
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.group.tests.test_permutation_test.unittest"
   ]
  },
  "type": "module"
 },
 "nipy.labs.group.tests.test_permutation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.make_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.random.randn",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.ndraws": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.group.tests.test_permutation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.nperms": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.labs.group.tests.test_permutation_test.pt": {
  "data": {
   "shadows": "permutation_test"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nipy.labs.group.tests.test_permutation_test.unittest"
   ]
  },
  "type": "class"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test.test_onesample": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "nipy.labs.group.tests.test_permutation_test.make_data",
    "nipy.labs.group.tests.test_permutation_test.ndraws",
    "nipy.labs.group.tests.test_permutation_test.nperms",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test.test_onesample_graph": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.graph.wgraph_from_3d_grid",
    "nipy.labs.group.tests.test_permutation_test.make_data",
    "nipy.labs.group.tests.test_permutation_test.ndraws",
    "nipy.labs.group.tests.test_permutation_test.nperms",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test.test_twosample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "nipy.labs.group.tests.test_permutation_test.make_data",
    "nipy.labs.group.tests.test_permutation_test.ndraws",
    "nipy.labs.group.tests.test_permutation_test.nperms",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test.test_twosample_non_null": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "nipy.labs.group.tests.test_permutation_test.make_data",
    "nipy.labs.group.tests.test_permutation_test.ndraws",
    "nipy.labs.group.tests.test_permutation_test.nperms",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.test_permutation_test.test_twosample_null": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "nipy.labs.group.tests.test_permutation_test.make_data",
    "nipy.labs.group.tests.test_permutation_test.ndraws",
    "nipy.labs.group.tests.test_permutation_test.nperms",
    "nose.tools.assert_true",
    "numpy.ones_like",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.group.tests.test_permutation_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nipy.labs.group.tests.test_permutation_test.wgraph_from_3d_grid": {
  "data": {
   "shadows": "nipy.algorithms.graph.wgraph_from_3d_grid"
  },
  "type": "import"
 },
 "nipy.labs.group.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.mask": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.mask.compute_mask": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "nipy.labs.mask.largest_cc",
    "nipy.labs.mask.math",
    "numpy.int",
    "numpy.sort",
    "scipy.ndimage.binary_opening"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.compute_mask_files": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "get_affine",
    "get_header",
    "get_unscaled_data",
    "isinstance",
    "len",
    "list",
    "nibabel.load",
    "nibabel.nifti1.Nifti1Image",
    "nibabel.save",
    "nipy.labs.mask.compute_mask",
    "numpy.array",
    "numpy.float32",
    "numpy.isnan",
    "numpy.memmap",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.compute_mask_sessions": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "len",
    "list",
    "nipy.labs.mask.compute_mask",
    "nipy.labs.mask.compute_mask_files",
    "nipy.labs.mask.largest_cc",
    "numpy.bool",
    "numpy.float",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.intersect_masks": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "get_affine",
    "get_header",
    "isinstance",
    "len",
    "list",
    "min",
    "nibabel.load",
    "nibabel.nifti1.Nifti1Image",
    "nibabel.save",
    "nipy.labs.mask.largest_cc",
    "numpy.any",
    "numpy.eye",
    "numpy.int",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.largest_cc": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.bool",
    "numpy.int",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.mask.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nipy.labs.mask.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.mask.nifti1": {
  "data": {
   "shadows": "nibabel.nifti1"
  },
  "type": "import"
 },
 "nipy.labs.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.mask.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.labs.mask.series_from_mask": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "enumerate",
    "get_affine",
    "get_header",
    "isinstance",
    "len",
    "list",
    "nibabel.load",
    "numpy.asarray",
    "numpy.bool",
    "numpy.float32",
    "numpy.isfinite",
    "numpy.log",
    "numpy.logical_not",
    "numpy.memmap",
    "numpy.rollaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "scipy.ndimage.gaussian_filter",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.mask.threshold_connect_components": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enumerate",
    "map",
    "map.copy",
    "numpy.bincount",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "nipy.labs.setup": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nipy.labs.setup.os",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.setup.ConfigParser": {
  "data": {
   "shadows": "ConfigParser.ConfigParser"
  },
  "type": "import"
 },
 "nipy.labs.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.setup.EXTERNAL_LAPACK_VAR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.labs.setup.KEY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.labs.setup.LIBS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.labs.setup.NoOptionError": {
  "data": {
   "shadows": "ConfigParser.NoOptionError"
  },
  "type": "import"
 },
 "nipy.labs.setup.NoSectionError": {
  "data": {
   "shadows": "ConfigParser.NoSectionError"
  },
  "type": "import"
 },
 "nipy.labs.setup.SECTION": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.labs.setup.SETUP_FILE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.labs.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.setup.configuration": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeError",
    "distutils.log.warn",
    "nipy.labs.setup.EXTERNAL_LAPACK_VAR",
    "nipy.labs.setup.LIBS",
    "nipy.labs.setup.get_link_external",
    "nipy.labs.setup.os",
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.misc_util.get_numpy_include_dirs",
    "numpy.distutils.system_info.get_info",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.setup.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "nipy.labs.setup.get_link_external": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ConfigParser.ConfigParser",
    "ConfigParser.NoOptionError",
    "ConfigParser.NoSectionError",
    "IOError",
    "KeyError",
    "nipy.labs.setup.EXTERNAL_LAPACK_VAR",
    "nipy.labs.setup.KEY",
    "nipy.labs.setup.SECTION",
    "nipy.labs.setup.SETUP_FILE",
    "nipy.labs.setup.os"
   ]
  },
  "type": "function"
 },
 "nipy.labs.setup.get_numpy_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_numpy_include_dirs"
  },
  "type": "import"
 },
 "nipy.labs.setup.log": {
  "data": {
   "shadows": "distutils.log"
  },
  "type": "import"
 },
 "nipy.labs.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.labs.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.MixedIMM": {
  "data": {
   "shadows": "nipy.algorithms.clustering.imm.MixedIMM"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis._bsa_dpmm": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "build_landmarks",
    "len",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "nipy.algorithms.graph.wgraph_from_coo_matrix",
    "nipy.labs.spatial_models.bayesian_structural_analysis._dpmm",
    "nipy.labs.spatial_models.bayesian_structural_analysis._update_hroi_labels",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis._compute_individual_regions": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "HROI_as_discrete_domain_blobs",
    "id",
    "nipy.labs.spatial_models.bayesian_structural_analysis._stat_to_proba",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.int",
    "numpy.mean",
    "numpy.ones",
    "numpy.reshape",
    "numpy.squeeze",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis._dpmm": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "nipy.algorithms.clustering.imm.MixedIMM",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis._stat_to_proba": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NormalEmpiricalNull",
    "ValueError",
    "gamma_gaussian_fit",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.size",
    "scipy.stats.gamma.pdf",
    "scipy.stats.norm.pdf",
    "three_classes_GMM_fit"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis._update_hroi_labels": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.compute_landmarks": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.bayesian_structural_analysis._bsa_dpmm",
    "nipy.labs.spatial_models.bayesian_structural_analysis._compute_individual_regions"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.field_from_coo_matrix_and_data": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.field_from_coo_matrix_and_data"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bayesian_structural_analysis.wgraph_from_coo_matrix": {
  "data": {
   "shadows": "nipy.algorithms.graph.wgraph_from_coo_matrix"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bench": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.bsa_io": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.spatial_models.bsa_io.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bsa_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bsa_io.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bsa_io.make_bsa_image": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "compute_landmarks",
    "domain_from_image",
    "get_affine",
    "get_header",
    "intersect_masks",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "numpy.array",
    "numpy.float",
    "numpy.int16",
    "numpy.ones",
    "numpy.reshape",
    "numpy.zeros",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.bsa_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bsa_io.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.bsa_io.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.Field": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.Field"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._exclusion_map": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.reshape",
    "numpy.size",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._exclusion_map_dep": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.min",
    "numpy.size",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._field_gradient_jac": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.pinv",
    "numpy.size",
    "numpy.squeeze",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._field_gradient_jac_Map": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.minimum",
    "numpy.nonzero",
    "numpy.size",
    "numpy.squeeze",
    "numpy.zeros",
    "range",
    "scipy.linalg.det",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._field_gradient_jac_Map_": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.size",
    "numpy.squeeze",
    "numpy.zeros",
    "range",
    "scipy.linalg.det",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._jointly_reduce_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.argsort",
    "numpy.minimum",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._optim_hparcel": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.clustering.utils.kmeans",
    "nipy.algorithms.graph.field.Field",
    "nipy.labs.spatial_models.hierarchical_parcellation._exclusion_map",
    "nipy.labs.spatial_models.hierarchical_parcellation._field_gradient_jac",
    "nipy.labs.spatial_models.hierarchical_parcellation._reduce_and_concatenate",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.array",
    "numpy.inf",
    "numpy.int",
    "numpy.isinf",
    "numpy.mean",
    "numpy.nonzero",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.size",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation._reduce_and_concatenate": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "nipy.labs.spatial_models.hierarchical_parcellation._jointly_reduce_data",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.hparcel": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "len",
    "nipy.algorithms.clustering.utils.voronoi",
    "nipy.algorithms.graph.graph.wgraph_from_coo_matrix",
    "nipy.labs.spatial_models.hierarchical_parcellation._optim_hparcel",
    "nipy.labs.spatial_models.hierarchical_parcellation.perm_prfx",
    "numpy.array",
    "numpy.hstack",
    "numpy.int",
    "numpy.ones",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.std",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.kmeans": {
  "data": {
   "shadows": "nipy.algorithms.clustering.utils.kmeans"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.nl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.perm_prfx": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "len",
    "nipy.algorithms.clustering.utils.voronoi",
    "nipy.labs.spatial_models.hierarchical_parcellation._optim_hparcel",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.rollaxis",
    "numpy.squeeze",
    "print",
    "range",
    "ttest"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.voronoi": {
  "data": {
   "shadows": "nipy.algorithms.clustering.utils.voronoi"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.hierarchical_parcellation.wgraph_from_coo_matrix": {
  "data": {
   "shadows": "nipy.algorithms.graph.graph.wgraph_from_coo_matrix"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.spatial_models.mroi.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.SubDomains": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains._init": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "len",
    "numpy.arange",
    "numpy.int",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.copy": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.mroi.SubDomains",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.feature_to_voxel_map": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_coord": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_feature": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_id": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_local_volume": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_roi_feature": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "id",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_size": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.get_volume": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "id",
    "numpy.asarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.integrate": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "id",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.plot_feature": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "matplotlib.pylab.figure",
    "matplotlib.pylab.subplot",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.recompute_labels": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "enumerate",
    "numpy.amax",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.remove_feature": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.remove_roi_feature": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.representative_feature": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "id",
    "numpy.array",
    "numpy.dot",
    "numpy.isnan",
    "numpy.max",
    "numpy.maximum",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.select_id": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "int",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.select_roi": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "id",
    "len",
    "list",
    "numpy.ones",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.set_feature": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.set_roi_feature": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.SubDomains.to_image": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "nibabel.Nifti1Image",
    "nipy.io.nibcompat.get_affine",
    "nipy.io.nibcompat.get_header",
    "numpy.int32",
    "numpy.ones",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.ddom": {
  "data": {
   "shadows": "discrete_domain"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.get_header": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_header"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.mp": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.mroi.subdomain_from_array": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.mroi.SubDomains",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.subdomain_from_balls": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "nipy.labs.spatial_models.mroi.SubDomains",
    "numpy.ones",
    "numpy.reshape",
    "numpy.size",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.subdomain_from_image": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "isinstance",
    "nibabel.load",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine",
    "nipy.labs.spatial_models.mroi.subdomain_from_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.mroi.subdomain_from_position_and_image": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "nipy.io.nibcompat.get_affine",
    "nipy.labs.spatial_models.mroi.subdomain_from_array",
    "nipy.labs.spatial_models.mroi.subdomain_from_image",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcel_io": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.parcel_io.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.field_from_coo_matrix_and_data": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.field_from_coo_matrix_and_data"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.fixed_parcellation": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "SubDomains",
    "ValueError",
    "grid_domain_from_image",
    "len",
    "nibabel.save",
    "nipy.algorithms.clustering.utils.kmeans",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.random.rand",
    "numpy.squeeze",
    "numpy.std",
    "numpy.var",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcel_io.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.get_header": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_header"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.kmeans": {
  "data": {
   "shadows": "nipy.algorithms.clustering.utils.kmeans"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.mask_parcellation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "SubDomains",
    "grid_domain_from_image",
    "intersect_masks",
    "isinstance",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nipy.algorithms.clustering.utils.kmeans",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcel_io.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.nl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.parcel_input": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "grid_domain_from_image",
    "intersect_masks",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.mean",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcel_io.parcellation_based_analysis": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "SubDomains",
    "ValueError",
    "len",
    "nibabel.save",
    "nipy.io.nibcompat.get_header",
    "numpy.array",
    "ttest"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcel_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcel_io.write_parcellation_images": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "SubDomains",
    "ValueError",
    "len",
    "nibabel.save",
    "numpy.int16",
    "range",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.check": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.copy": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.get_feature": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.make_feature": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.mean",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.population": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.set_feature": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.set_individual_labels": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.MultiSubjectParcellation.set_template_labels": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.parcellation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcellation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.parcellation.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.structural_bfls": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.centers": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.kernel_density": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "nipy.algorithms.utils.fast_distance.euclidean_distance",
    "numpy.exp",
    "numpy.pi",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.map_label": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.structural_bfls._threshold_weight_map",
    "numpy.argmax",
    "numpy.max",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.roi_prevalence": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.prod",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.LandmarkRegions.show": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.unique",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls._threshold_weight_map": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.sort",
    "numpy.where",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.structural_bfls.build_landmarks": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int",
    "max",
    "nipy.labs.spatial_models.structural_bfls.LandmarkRegions",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.int",
    "numpy.ones",
    "numpy.prod",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.vstack",
    "numpy.zeros",
    "scipy.stats.norm.sf",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.structural_bfls.euclidean_distance": {
  "data": {
   "shadows": "nipy.algorithms.utils.fast_distance.euclidean_distance"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.structural_bfls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.structural_bfls.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.structural_bfls.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.test": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_bsa": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_bsa.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_bsa.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.assert_array_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.dec": {
  "data": {
   "shadows": "nipy.testing.dec"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.make_bsa_2d": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "compute_landmarks",
    "domain_from_binary_array",
    "numpy.array",
    "numpy.ones",
    "numpy.ravel",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_bsa.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa.test_bsa_methods": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "float",
    "nipy.labs.spatial_models.tests.test_bsa.make_bsa_2d",
    "nipy.testing.dec.slow",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.prod",
    "scipy.stats.t.isf",
    "surrogate_2d_dataset",
    "test_func"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_bsa.test_pproba": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_stat_to_proba",
    "nipy.testing.assert_array_equal",
    "nose.tools.assert_true",
    "numpy.argsort",
    "numpy.random.rand",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_bsa_io.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_bsa_io.test_parcel_intra_from_3d_images_list": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "make_bsa_image",
    "nibabel.Nifti1Image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "range",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "hasattr",
    "nibabel.gifti",
    "nipy.labs.spatial_models.tests.test_discrete_domain.nose",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.GOOD_GIFTI": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.indices",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.nbg": {
  "data": {
   "shadows": "nibabel.gifti"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.shape": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.skipif": {
  "data": {
   "shadows": "nipy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_array_domain": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_array_grid_domain": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "grid_domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_connected_components": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_domain_from_mesh": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "domain_from_mesh",
    "nibabel.gifti.GiftiDataArray",
    "nibabel.gifti.GiftiImage",
    "nipy.labs.spatial_models.tests.test_discrete_domain.GOOD_GIFTI",
    "nipy.testing.decorators.skipif",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_domain_mask": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_feature": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_grid_domain_mask": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "grid_domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_image_domain": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "domain_from_image",
    "nibabel.Nifti1Image",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.absolute",
    "numpy.linalg.det",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_image_feature": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "grid_domain_from_image",
    "nibabel.Nifti1Image",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.eye",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_image_grid_domain": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "grid_domain_from_image",
    "nibabel.Nifti1Image",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.absolute",
    "numpy.linalg.det",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_integrate_1d": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_integrate_2d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_mask_feature": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_matrix_from_3d_array": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "print",
    "range",
    "smatrix_from_3d_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_representative": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.median",
    "numpy.random.rand",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_shape_grid_domain": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "grid_domain_from_shape",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.prod",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_1d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.testing.assert_equal",
    "smatrix_from_nd_idx"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "smatrix_from_nd_idx"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_3d": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "smatrix_from_nd_idx"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_4d": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "smatrix_from_nd_idx"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_5d": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.generate_dataset",
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "smatrix_from_nd_idx"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_discrete_domain.test_smatrix_5d_bis": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_discrete_domain.shape",
    "numpy.ones",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "range",
    "smatrix_from_nd_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_hroi.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_hroi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_hroi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_hroi.make_domain": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "nipy.labs.spatial_models.tests.test_hroi.shape",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.make_hroi": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "make_hroi_from_subdomain",
    "nipy.labs.spatial_models.tests.test_hroi.shape",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "subdomain_from_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_hroi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_hroi.shape": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_asc_merge": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "id",
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_asc_merge_2": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_asc_merge_3": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_asc_merge_4": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "list",
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_desc_merge": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_desc_merge_2": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_desc_merge_3": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.minimum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_hroi": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_hroi_from_domain": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "HROI_as_discrete_domain_blobs",
    "nipy.labs.spatial_models.tests.test_hroi.make_domain",
    "nipy.labs.spatial_models.tests.test_hroi.shape",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_hroi_isleaf": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list",
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_hroi_isleaf_2": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "list",
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.int",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_leaves": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_leaves_empty": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_hroi.test_sd_representative": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_hroi.make_hroi",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_mroi.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_mroi.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.make_subdomain": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.zeros",
    "subdomain_from_array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_mroi.shape": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_copy_subdomain": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "enumerate",
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_example": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "HROI_as_discrete_domain_blobs",
    "bool",
    "grid_domain_from_image",
    "id",
    "len",
    "list",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nipy.io.nibcompat.get_affine",
    "numpy.int32",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_get_coord": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_roi_features": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_sd_from_ball": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "domain_from_binary_array",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "subdomain_from_balls"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_sd_integrate": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_sd_integrate2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_sd_representative": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_select_roi": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "list",
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_set_feature": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len",
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_set_feature2": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.asarray",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_subdomain": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_subdomain2": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_mroi.test_subdomain_feature": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nipy.labs.spatial_models.tests.test_mroi.make_subdomain",
    "nipy.labs.spatial_models.tests.test_mroi.shape",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_parcel.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_parcel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel.field_from_coo_matrix_and_data": {
  "data": {
   "shadows": "nipy.algorithms.graph.field.field_from_coo_matrix_and_data"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_parcel_feature": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "grid_domain_from_binary_array",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "numpy.ones",
    "numpy.prod",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_parcel_feature_multi_subj": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "grid_domain_from_binary_array",
    "list",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "numpy.array",
    "numpy.ones",
    "numpy.prod",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_parcel_hierarchical": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "grid_domain_from_binary_array",
    "hparcel",
    "numpy.arange",
    "numpy.eye",
    "numpy.prod",
    "numpy.reshape",
    "numpy.unique",
    "range",
    "surrogate_2d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_parcel_interface": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "grid_domain_from_binary_array",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "numpy.array",
    "numpy.ones",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_parcel_interface_multi_subj": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "MultiSubjectParcellation",
    "grid_domain_from_binary_array",
    "nipy.algorithms.graph.field.field_from_coo_matrix_and_data",
    "numpy.array",
    "numpy.ones",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel.test_prfx": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "grid_domain_from_binary_array",
    "hparcel",
    "numpy.array",
    "numpy.eye",
    "numpy.prod",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.shape",
    "numpy.squeeze",
    "surrogate_2d_dataset",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.spatial_models.tests.test_parcel_io.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_mask_parcel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mask_parcellation",
    "nibabel.Nifti1Image",
    "numpy.arange",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_mask_parcel_multi_subj": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mask_parcellation",
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.arange",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_parcel_based_analysis": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "grid_domain_from_shape",
    "hparcel",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.abs",
    "numpy.prod",
    "numpy.random.randn",
    "os.path.exists",
    "parcellation_based_analysis",
    "range",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_parcel_intra_from_3d_image": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "fixed_parcellation",
    "nibabel.Nifti1Image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_parcel_intra_from_3d_images_list": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "fixed_parcellation",
    "nibabel.Nifti1Image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "range",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.test_parcel_intra_from_4d_image": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "fixed_parcellation",
    "nibabel.Nifti1Image",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.spatial_models.tests.test_parcel_io.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping": {
  "data": {
   "symbols_in_volume": [
    "nipy.labs.statistical_mapping.onesample_test",
    "nipy.labs.statistical_mapping.twosample_test"
   ]
  },
  "type": "module"
 },
 "nipy.labs.statistical_mapping.Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping.LinearModel": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.statistical_mapping.LinearModel.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "get_affine",
    "glm",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.LinearModel.contrast": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "affect_inmask",
    "nibabel.Nifti1Image",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.LinearModel.contrast.affect_inmask": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.LinearModel.dump": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping.apply_affine": {
  "data": {
   "shadows": "nibabel.affines.apply_affine"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping.bonferroni": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.cluster_stats": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "get_affine",
    "isinstance",
    "len",
    "nibabel.affines.apply_affine",
    "nipy.labs.statistical_mapping.bonferroni",
    "nipy.labs.statistical_mapping.simulated_pvalue",
    "numpy.array",
    "numpy.ndarray",
    "numpy.size",
    "numpy.sum",
    "numpy.where",
    "range",
    "scipy.stats.norm.isf",
    "scipy.stats.norm.sf",
    "sorted",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.get_3d_peaks": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "field_from_graph_and_data",
    "get_affine",
    "len",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.hstack",
    "numpy.indices",
    "numpy.ones",
    "numpy.prod",
    "numpy.reshape",
    "numpy.where",
    "range",
    "wgraph_from_3d_grid"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.linear_model_fit": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "get_affine",
    "glm",
    "list",
    "nibabel.Nifti1Image",
    "nipy.labs.statistical_mapping.prepare_arrays",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping.onesample_test": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "get_affine",
    "list",
    "nibabel.Nifti1Image",
    "nipy.labs.statistical_mapping.prepare_arrays",
    "numpy.int8",
    "numpy.zeros",
    "permutation_test_onesample"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.prepare_arrays": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "intersect_masks",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.simulated_pvalue": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "numpy.searchsorted",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.labs.statistical_mapping.sp_stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.statistical_mapping.twosample_test": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "get_affine",
    "list",
    "nibabel.Nifti1Image",
    "nipy.labs.statistical_mapping.prepare_arrays",
    "numpy.zeros",
    "permutation_test_twosample"
   ]
  },
  "type": "function"
 },
 "nipy.labs.test": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.tests.test_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.tests.test_mask.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.tests.test_mask.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.anatfile": {
  "data": {
   "shadows": "nipy.testing.anatfile"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.assert_array_equal": {
  "data": {
   "shadows": "nipy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.assert_equal": {
  "data": {
   "shadows": "nipy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.assert_false": {
  "data": {
   "shadows": "nipy.testing.assert_false"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.assert_true": {
  "data": {
   "shadows": "nipy.testing.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.nnm": {
  "data": {
   "shadows": "mask"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_mask.test_compute_mask_sessions": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.anatfile",
    "nipy.testing.assert_array_equal",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.test_largest_cc": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "largest_cc",
    "nipy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.test_mask": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nipy.testing.assert_array_equal",
    "nipy.testing.assert_false",
    "nipy.testing.assert_true",
    "numpy.allclose",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.test_mask_files": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.anatfile",
    "nipy.testing.assert_array_equal",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.test_series_from_mask": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.assert_equal",
    "nipy.testing.assert_true",
    "numpy.NaN",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.bool",
    "numpy.diag",
    "numpy.eye",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.zeros",
    "series_from_mask"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.test_threshold_connect_components": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nipy.testing.assert_true",
    "numpy.all",
    "numpy.zeros",
    "threshold_connect_components"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_mask.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.tests.test_statistical_mapping.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.tests.test_statistical_mapping.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping.make_surrogate_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "numpy.array",
    "numpy.eye",
    "numpy.reshape",
    "surrogate_2d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.tests.test_statistical_mapping.test1": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test2": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test3": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test7": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cluster_stats",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test_4": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test_5": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test_6": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cluster_stats",
    "len",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data",
    "print",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.tests.test_statistical_mapping.test_8": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cluster_stats",
    "nipy.labs.tests.test_statistical_mapping.make_surrogate_data",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.labs.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.bench": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.labs.utils.mask": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "nipy.labs.utils.mask.warnings"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.mask.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.labs.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.utils.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset._cone2d": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nipy.labs.utils.simul_multisubject_fmri_dataset.ampli",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.pos",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset._cone3d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "nipy.labs.utils.simul_multisubject_fmri_dataset.ampli",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.pos",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.ampli": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.nd": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.pos": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.surrogate_2d_dataset": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nipy.labs.utils.simul_multisubject_fmri_dataset._cone2d",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.ampli",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.pos",
    "numpy.array",
    "numpy.eye",
    "numpy.maximum",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.size",
    "numpy.std",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.surrogate_3d_dataset": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nipy.labs.utils.simul_multisubject_fmri_dataset._cone3d",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.ampli",
    "nipy.labs.utils.simul_multisubject_fmri_dataset.pos",
    "numpy.array",
    "numpy.eye",
    "numpy.maximum",
    "numpy.ones",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.size",
    "numpy.std",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.simul_multisubject_fmri_dataset.surrogate_4d_dataset": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "nibabel.Nifti1Image",
    "nibabel.save",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine",
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.rollaxis",
    "numpy.std",
    "numpy.zeros",
    "range",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.test": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.labs.utils.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.utils.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.utils.tests.test_misc.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.tests.test_misc.TestAll": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_gamln": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gamln",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_mahalanobis": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mahalanobis",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_mahalanobis2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mahalanobis",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_median": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "median",
    "numpy.median",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_median2": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "median",
    "numpy.median",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_median3": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "median",
    "numpy.median",
    "numpy.random.rand",
    "numpy.squeeze",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestAll.test_psi": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "psi",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_misc.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_misc.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_repro": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.utils.tests.test_repro.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.tests.test_repro.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_repro.apply_repro_analysis": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "cluster_reproducibility",
    "nipy.labs.spatial_models.discrete_domain.grid_domain_from_binary_array",
    "numpy.array",
    "numpy.ones",
    "numpy.reshape",
    "peak_reproducibility",
    "range",
    "voxel_reproducibility"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.grid_domain_from_binary_array": {
  "data": {
   "shadows": "nipy.labs.spatial_models.discrete_domain.grid_domain_from_binary_array"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_repro.make_dataset": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "surrogate_2d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_repro.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_repro.test_repro1": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "nipy.labs.utils.tests.test_repro.apply_repro_analysis",
    "nipy.labs.utils.tests.test_repro.make_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.test_repro2": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nipy.labs.utils.tests.test_repro.apply_repro_analysis",
    "nipy.labs.utils.tests.test_repro.make_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.test_repro3": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nipy.labs.utils.tests.test_repro.apply_repro_analysis",
    "nipy.labs.utils.tests.test_repro.make_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.test_repro5": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nipy.labs.utils.tests.test_repro.apply_repro_analysis",
    "nipy.labs.utils.tests.test_repro.make_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_repro.test_repro7": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "nipy.labs.utils.tests.test_repro.apply_repro_analysis",
    "nipy.labs.utils.tests.test_repro.make_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "surrogate_2d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_3d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_3d_mask": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.random.rand",
    "numpy.uint8",
    "surrogate_3d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_3d_write": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "os.path.isfile",
    "os.path.join",
    "surrogate_3d_dataset",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_4d_dmtx": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.asarray",
    "numpy.random.randn",
    "surrogate_4d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_4d_mask": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.random.rand",
    "numpy.uint8",
    "surrogate_4d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_4d_shape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.asarray",
    "surrogate_4d_dataset"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset.test_surrogate_array_4d_write": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "os.path.isfile",
    "os.path.join",
    "range",
    "surrogate_4d_dataset",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nipy.labs.utils.zscore": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.utils.zscore.TINY": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.labs.utils.zscore.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.utils.zscore.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.utils.zscore.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.utils.zscore.zscore": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "nipy.labs.utils.zscore.TINY",
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz3d": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.activation_maps": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nipy.utils.skip_test.skip_if_running_nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.activation_maps._plot_anat": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "OSError",
    "_xyz_order",
    "nipy.labs.viz_tools.activation_maps.warnings",
    "nipy.utils.is_numlike",
    "numpy.zeros",
    "pylab.cm.gray",
    "repr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.activation_maps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.demo_plot_map": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "coord_transform",
    "int",
    "map",
    "nipy.labs.viz_tools.activation_maps.plot_map",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.activation_maps.is_numlike": {
  "data": {
   "shadows": "nipy.utils.is_numlike"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.mlab": {
  "data": {
   "shadows": "enthought.mayavi.mlab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.plot_anat": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.activation_maps._plot_anat",
    "pylab.cm.gray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.activation_maps.plot_map": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ImportError",
    "_fast_abs_percentile",
    "_xyz_order",
    "enthought.mayavi.core.registry.registry.engines.items",
    "enthought.mayavi.core.registry.registry.engines.pop",
    "enthought.mayavi.mlab.clf",
    "enthought.mayavi.mlab.get_engine",
    "enthought.mayavi.version",
    "enthought.mayavi.version.version",
    "enthought.mayavi.version.vtk_major_version",
    "enthought.mayavi.version.vtk_minor_version",
    "enthought.tvtk.api.tvtk.Version",
    "find_maxsep_cut_coords",
    "int",
    "isinstance",
    "list",
    "m2screenshot",
    "map",
    "map.copy",
    "map.max",
    "map.min",
    "nipy.labs.viz_tools.activation_maps._plot_anat",
    "nipy.labs.viz_tools.activation_maps.numbers",
    "nipy.labs.viz_tools.activation_maps.warnings",
    "numpy.any",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ma.masked_inside",
    "plot_map_3d",
    "pylab.cm.cmap_d",
    "pylab.rcParams"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.activation_maps.registry": {
  "data": {
   "shadows": "enthought.mayavi.core.registry.registry"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.skip_if_running_nose": {
  "data": {
   "shadows": "nipy.utils.skip_test.skip_if_running_nose"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.tvtk": {
  "data": {
   "shadows": "enthought.tvtk.api.tvtk"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.version": {
  "data": {
   "shadows": "enthought.mayavi.version"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.activation_maps.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache": {
  "data": {
   "symbols_in_volume": [
    "nipy.labs.viz_tools.anat_cache.mni_sform",
    "numpy.array",
    "numpy.linalg.inv"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.anat_cache.DataError": {
  "data": {
   "shadows": "nipy.utils.DataError"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache._AnatCache": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.anat_cache._AnatCache.get_anat": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "nibabel.load",
    "nipy.io.nibcompat.get_affine",
    "nipy.labs.viz_tools.anat_cache.find_mni_template",
    "numpy.float",
    "numpy.logical_not",
    "numpy.ma.masked_array",
    "scipy.ndimage.morphology.binary_fill_holes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.anat_cache._AnatCache.get_blurred": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "numpy.float",
    "scipy.ndimage.gaussian_filter",
    "scipy.ndimage.morphology.binary_fill_holes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.anat_cache.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.find_mni_template": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.anat_cache.os",
    "nipy.utils.DataError",
    "nipy.utils.templates.get_filename"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.anat_cache.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.mni_sform": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.anat_cache.mni_sform_inv": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.anat_cache.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.anat_cache.templates": {
  "data": {
   "shadows": "nipy.utils.templates"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.cm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "hasattr",
    "len",
    "list",
    "locals",
    "matplotlib.cm",
    "matplotlib.cm.Blues_r",
    "matplotlib.cm.Greens_r",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.cm.Oranges_r",
    "matplotlib.cm.Reds_r",
    "matplotlib.cm.YlOrBr_r",
    "matplotlib.cm.afmhot",
    "matplotlib.cm.afmhot_r",
    "matplotlib.cm.bone",
    "matplotlib.cm.bone_r",
    "matplotlib.cm.copper",
    "matplotlib.cm.hot",
    "matplotlib.cm.hot._segmentdata.copy",
    "matplotlib.cm.hot_r",
    "matplotlib.cm.ocean",
    "matplotlib.cm.revcmap",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "nipy.labs.viz_tools.cm._cmap_d",
    "nipy.labs.viz_tools.cm._cmapname_r",
    "nipy.labs.viz_tools.cm._cmaps_data",
    "nipy.labs.viz_tools.cm._cmapspec",
    "nipy.labs.viz_tools.cm._concat_cmap",
    "nipy.labs.viz_tools.cm._pigtailed_cmap",
    "nipy.labs.viz_tools.cm._revspec",
    "nipy.labs.viz_tools.cm._rotate_cmap",
    "nipy.labs.viz_tools.cm.alpha_cmap",
    "nipy.utils.skip_test.skip_if_running_nose",
    "reversed"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.cm._cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.cm._cmap_d": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.cm._cmapname_r": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.cm._cmaps_data": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.cm._cmapspec": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.cm._colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.cm._concat_cmap": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cmap1",
    "cmap2",
    "dict",
    "hasattr",
    "matplotlib.colors",
    "numpy.linspace",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.cm._pigtailed_cmap": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "reversed"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm._revspec": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.cm._rotate_cmap": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.cm.alpha_cmap": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm.dim_cmap": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "dimmer",
    "enumerate",
    "list",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors.LinearSegmentedColormap"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm.replace_inside": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "cmap",
    "dict",
    "enumerate",
    "hasattr",
    "inner_cmap",
    "inner_cmap.name",
    "list",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors",
    "matplotlib.colors.LinearSegmentedColormap",
    "numpy.linspace",
    "outer_cmap",
    "outer_cmap.name",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.cm.skip_if_running_nose": {
  "data": {
   "shadows": "nipy.utils.skip_test.skip_if_running_nose"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.coord_tools": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.coord_tools._maximally_separated_subset": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.argmin",
    "numpy.array",
    "numpy.delete",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.coord_tools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.coord_tools.coord_transform": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.c_.T",
    "numpy.dot",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.coord_tools.find_cut_coords": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "hasattr",
    "largest_cc",
    "map",
    "map.copy",
    "map.mask",
    "map.shape",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.mean",
    "numpy.zeros",
    "scipy.ndimage.center_of_mass",
    "scipy.ndimage.find_objects",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.coord_tools.find_maxsep_cut_coords": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "nipy.labs.viz_tools.coord_tools._maximally_separated_subset",
    "numpy.abs",
    "numpy.argsort",
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.nonzero",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.coord_tools.get_mask_bounds": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "get_bounds",
    "len",
    "nipy.labs.viz_tools.coord_tools.warnings",
    "scipy.ndimage.find_objects"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.coord_tools.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.coord_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.coord_tools.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.coord_tools.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.edge_detect": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nipy.algorithms.statistics.quantile",
    "nipy.labs.viz_tools.edge_detect.warnings"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.edge_detect._edge_detect": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.edge_detect._fast_abs_percentile",
    "nipy.labs.viz_tools.edge_detect._orientation_kernel",
    "numpy.arange",
    "numpy.arctan2",
    "numpy.bool",
    "numpy.float",
    "numpy.isnan",
    "numpy.ones",
    "numpy.pi",
    "numpy.seterr",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.maximum_filter",
    "scipy.ndimage.sobel",
    "scipy.signal.wiener"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.edge_detect._edge_map": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.edge_detect._edge_detect",
    "numpy.float",
    "numpy.ma.masked_less",
    "numpy.sqrt",
    "scipy.ndimage.distance_transform_cdt"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.edge_detect._fast_abs_percentile": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "hasattr",
    "map",
    "map.mask",
    "map.ravel",
    "map.size",
    "map.sort",
    "nipy.algorithms.statistics.quantile",
    "numpy.abs",
    "numpy.asarray",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.edge_detect._orientation_kernel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "numpy.pi",
    "numpy.round",
    "numpy.sin",
    "sin"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.edge_detect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.edge_detect.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.edge_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.edge_detect.quantile": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.edge_detect.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.edge_detect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.maps_3d.ArraySource": {
  "data": {
   "shadows": "enthought.mayavi.sources.api.ArraySource"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.OffScreenEngine": {
  "data": {
   "shadows": "enthought.mayavi.core.off_screen_engine.OffScreenEngine"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.affine_img_src": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "enthought.mayavi.sources.api.ArraySource",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.float",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.autocrop_img": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.demo_plot_map_3d": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "coord_transform",
    "map",
    "nipy.labs.viz_tools.maps_3d.plot_map_3d",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.m2screenshot": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ImportError",
    "enthought.mayavi.mlab.figure",
    "enthought.mayavi.mlab.gcf",
    "enthought.mayavi.mlab.savefig",
    "nipy.labs.viz_tools.maps_3d.autocrop_img",
    "nipy.labs.viz_tools.maps_3d.os",
    "nipy.labs.viz_tools.maps_3d.tempfile",
    "pylab.axes",
    "pylab.axis",
    "pylab.imread",
    "pylab.imshow"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.mlab": {
  "data": {
   "shadows": "enthought.mayavi.mlab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.off_screen_engine": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.maps_3d.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.plot_anat_3d": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ImportError",
    "enthought.mayavi.mlab.gcf",
    "enthought.mayavi.mlab.pipeline.contour",
    "enthought.mayavi.mlab.pipeline.iso_surface",
    "enthought.mayavi.mlab.pipeline.set_active_attribute",
    "enthought.mayavi.mlab.pipeline.surface",
    "enthought.tvtk.api.tvtk.Version",
    "nipy.labs.viz_tools.maps_3d.affine_img_src",
    "numpy.float",
    "numpy.sqrt",
    "scipy.ndimage.gaussian_filter",
    "scipy.ndimage.morphology.binary_fill_holes",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.plot_map_3d": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ImportError",
    "cmap",
    "enthought.mayavi.core.off_screen_engine.OffScreenEngine",
    "enthought.mayavi.mlab.clf",
    "enthought.mayavi.mlab.figure",
    "enthought.mayavi.mlab.gcf",
    "enthought.mayavi.mlab.pipeline.iso_surface",
    "enthought.mayavi.mlab.plot3d",
    "enthought.mayavi.mlab.view",
    "hasattr",
    "len",
    "map",
    "map.min",
    "nipy.labs.viz_tools.maps_3d.affine_img_src",
    "nipy.labs.viz_tools.maps_3d.off_screen_engine",
    "nipy.labs.viz_tools.maps_3d.plot_anat_3d",
    "numpy.abs",
    "numpy.any",
    "numpy.int",
    "numpy.linspace",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.maps_3d.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.maps_3d.tvtk": {
  "data": {
   "shadows": "enthought.tvtk.api.tvtk"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.labs.viz_tools.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "matplotlib.__version__",
    "nipy.labs.viz_tools.slicers.OrthoSlicer",
    "nipy.labs.viz_tools.slicers.XSlicer",
    "nipy.labs.viz_tools.slicers.YSlicer",
    "nipy.labs.viz_tools.slicers.ZSlicer",
    "nipy.utils.skip_test.skip_if_running_nose"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pylab.axes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer._map_show": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "IndexError",
    "get_bounds",
    "get_mask_bounds",
    "hasattr",
    "map",
    "map.mask",
    "map.max",
    "map.min",
    "map.shape",
    "nipy.labs.viz_tools.slicers._xyz_order",
    "numpy.any",
    "numpy.asarray",
    "numpy.logical_not",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.annotate": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.contour_map": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.edge_map": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "IndexError",
    "_edge_map",
    "dict",
    "get_bounds",
    "map",
    "map.shape",
    "nipy.labs.viz_tools.slicers._xyz_order"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.find_cut_coords": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.init_with_figure": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "nipy.utils.is_iterable",
    "pylab.Axes",
    "pylab.Figure",
    "pylab.figure"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.plot_map": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "map",
    "numpy.ma.masked_equal",
    "numpy.ma.masked_inside"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseSlicer.title": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseStackedSlicer": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.slicers.BaseSlicer"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.BaseStackedSlicer._init_axes": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "len",
    "nipy.labs.viz_tools.slicers.CutAxes",
    "pylab.axes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseStackedSlicer._locator": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "dict",
    "float",
    "matplotlib.transforms.Bbox",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseStackedSlicer.draw_cross": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.BaseStackedSlicer.find_cut_coords": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "classmethod",
    "cls._direction",
    "float",
    "get_mask_bounds",
    "hasattr",
    "numpy.abs",
    "numpy.linspace",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CMapProxy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "matplotlib.colors.Colormap"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.CMapProxy.__call__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CMapProxy.__getattr__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CMapProxy.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.do_cut": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "coord_transform",
    "int",
    "map",
    "numpy.linalg.inv",
    "numpy.rot90",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.draw_cut": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "matplotlib.__version__",
    "nipy.labs.viz_tools.slicers.CMapProxy",
    "pylab.cm.cmap_d",
    "pylab.rcParams",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.draw_left_right": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.draw_position": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.CutAxes.get_object_bounds": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.OrthoSlicer": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.slicers.BaseSlicer"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.OrthoSlicer._init_axes": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "nipy.labs.viz_tools.slicers.CutAxes",
    "pylab.axes"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.OrthoSlicer._locator": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "dict",
    "float",
    "matplotlib.transforms.Bbox",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.OrthoSlicer.draw_cross": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.OrthoSlicer.find_cut_coords": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "coord_transform",
    "find_cut_coords",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.SLICERS": {
  "data": {
   "lineno": 722
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.slicers.XSlicer": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.slicers.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.YSlicer": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.slicers.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers.ZSlicer": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "nipy.labs.viz_tools.slicers.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nipy.labs.viz_tools.slicers._xyz_order": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "VolumeImg",
    "map"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.demo_ortho_slicer": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "map",
    "nipy.labs.viz_tools.slicers.OrthoSlicer",
    "pylab.clf",
    "pylab.cm.gray"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.slicers.is_iterable": {
  "data": {
   "shadows": "nipy.utils.is_iterable"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.skip_if_running_nose": {
  "data": {
   "shadows": "nipy.utils.skip_test.skip_if_running_nose"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.slicers.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_activation_maps": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.use",
    "mock.patch",
    "nose.SkipTest",
    "pylab.switch_backend"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.mp": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.patch": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.skipif": {
  "data": {
   "shadows": "nipy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_anat_cache": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_demo_plot_map": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "demo_plot_map",
    "matplotlib.use",
    "pylab.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_plot_anat": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "matplotlib.use",
    "nipy.labs.viz_tools.test.test_activation_maps.tempfile",
    "numpy.ma.masked_equal",
    "numpy.zeros",
    "plot_anat",
    "plot_map",
    "pylab.savefig",
    "pylab.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_plot_anat_kwargs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mock.patch",
    "nipy.testing.decorators.skipif",
    "numpy.zeros",
    "plot_anat"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_plot_map_empty": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "matplotlib.use",
    "numpy.zeros",
    "plot_anat",
    "plot_map",
    "pylab.close",
    "pylab.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_activation_maps.test_plot_map_with_auto_cut_coords": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.zeros",
    "plot_map",
    "pylab.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_cm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.use",
    "nose.SkipTest",
    "pylab.switch_backend"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_cm.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_cm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_cm.mp": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_cm.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_cm.test_dim_cmap": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dim_cmap",
    "matplotlib.use",
    "pylab.cm.jet"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_cm.test_replace_inside": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.use",
    "pylab.cm",
    "pylab.cm.gnuplot",
    "pylab.cm.gnuplot2",
    "pylab.cm.hsv",
    "pylab.cm.jet",
    "pylab.switch_backend",
    "replace_inside"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_coord_tools": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.test_coord_transform_trivial": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "coord_transform",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.test_find_cut_coords": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "find_cut_coords",
    "int",
    "map",
    "map.shape",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "round"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_coord_tools.test_find_maxsep_cut_coords": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "find_maxsep_cut_coords",
    "list",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_edge_detect": {
  "data": {},
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_edge_detect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_edge_detect.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_edge_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_edge_detect.test_edge_detect": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_edge_detect",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_edge_detect.test_fast_abs_percentile": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_fast_abs_percentile",
    "nipy.labs.viz_tools.test.test_edge_detect.nose",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.labs.viz_tools.test.test_slicers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.use",
    "nipy.labs.viz_tools.test.test_slicers.nose",
    "pylab.switch_backend"
   ]
  },
  "type": "module"
 },
 "nipy.labs.viz_tools.test.test_slicers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_slicers.mp": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_slicers.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_slicers.pl": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nipy.labs.viz_tools.test.test_slicers.test_demo_ortho_slicer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "demo_ortho_slicer",
    "find_mni_template",
    "matplotlib.use",
    "nipy.labs.viz_tools.test.test_slicers.nose",
    "pylab.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.modalities": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.modalities.__docformat__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nipy.modalities.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.bench": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.modalities.fmri": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.__docformat__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.api": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.bench": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.design": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.design.Factor": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Factor"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.Formula": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Formula"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.Term": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Term"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design._build_formula_contrasts": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "min",
    "nipy.algorithms.statistics.formula.formulae.Factor",
    "nipy.algorithms.statistics.formula.formulae.I.design",
    "nipy.algorithms.statistics.utils.combinations",
    "numpy.product",
    "numpy.unique",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.block_amplitudes": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "blocks",
    "convolve_functions",
    "len",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "numpy.array",
    "numpy.asarray",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.block_design": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "blocks",
    "convolve_functions",
    "enumerate",
    "h",
    "len",
    "list",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "nipy.modalities.fmri.design._build_formula_contrasts",
    "nipy.modalities.fmri.design.itertools",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.combinations": {
  "data": {
   "shadows": "nipy.algorithms.statistics.utils.combinations"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.event_design": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "len",
    "list",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "nipy.modalities.fmri.design._build_formula_contrasts",
    "nipy.modalities.fmri.design.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.formulae": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.fourier_basis": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.formulae.make_recarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.fourier_basis_sym": {
  "data": {
   "shadows": "fourier_basis"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.make_recarray": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.make_recarray"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.natural_spline": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.formulae.Term",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "nipy.algorithms.statistics.formula.formulae.natural_spline"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design.openfmri2nipy": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "isinstance",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "numpy.column_stack",
    "numpy.loadtxt",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.stack2designs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.zeros",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.stack_contrasts": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design.stack_designs": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nipy.modalities.fmri.design.stack2designs",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.design_matrix.DesignMatrix": {
  "data": {
   "lineno": 241
  },
  "type": "class"
 },
 "nipy.modalities.fmri.design_matrix.DesignMatrix.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.DesignMatrix.show": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "numpy.sqrt",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.DesignMatrix.show_contrast": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "numpy.atleast_2d",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.DesignMatrix.write_csv": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "nipy.modalities.fmri.design_matrix.csv",
    "open4csv"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._blank_drift": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.ones_like",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._convolve_regressors": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "compute_regressor",
    "numpy.hstack",
    "numpy.ones",
    "numpy.size",
    "numpy.unique",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._cosine_drift": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.cos",
    "numpy.floor",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._full_rank": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.svd",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._make_drift": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError",
    "nipy.modalities.fmri.design_matrix._blank_drift",
    "nipy.modalities.fmri.design_matrix._cosine_drift",
    "nipy.modalities.fmri.design_matrix._poly_drift",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix._poly_drift": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "_orthogonalize",
    "float",
    "int",
    "numpy.hstack",
    "numpy.size",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design_matrix.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design_matrix.dmtx_from_csv": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "float",
    "len",
    "nipy.modalities.fmri.design_matrix.DesignMatrix",
    "nipy.modalities.fmri.design_matrix.csv",
    "numpy.array",
    "open4csv",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.dmtx_light": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "nipy.modalities.fmri.design_matrix.make_dmtx"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.make_dmtx": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nipy.modalities.fmri.design_matrix.DesignMatrix",
    "nipy.modalities.fmri.design_matrix._convolve_regressors",
    "nipy.modalities.fmri.design_matrix._full_rank",
    "nipy.modalities.fmri.design_matrix._make_drift",
    "numpy.asarray",
    "numpy.float",
    "numpy.hstack",
    "numpy.reshape",
    "numpy.size",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.design_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design_matrix.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.design_matrix.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.experimental_paradigm": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.experimental_paradigm.BlockParadigm": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nipy.modalities.fmri.experimental_paradigm.Paradigm"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.experimental_paradigm.BlockParadigm.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nipy.modalities.fmri.experimental_paradigm.Paradigm",
    "numpy.array",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.EventRelatedParadigm": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "nipy.modalities.fmri.experimental_paradigm.Paradigm"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.experimental_paradigm.EventRelatedParadigm.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nipy.modalities.fmri.experimental_paradigm.Paradigm"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.Paradigm": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.experimental_paradigm.Paradigm.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.float",
    "numpy.ravel",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.Paradigm.write_to_csv": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nipy.modalities.fmri.experimental_paradigm.csv",
    "numpy.hstack",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.size",
    "numpy.vstack",
    "numpy.zeros",
    "open4csv"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.experimental_paradigm.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.experimental_paradigm.load_paradigm_from_csv_file": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float",
    "len",
    "nipy.modalities.fmri.experimental_paradigm.csv",
    "numpy.array",
    "numpy.unique",
    "open4csv",
    "read_session"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.load_paradigm_from_csv_file.read_session": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "nipy.modalities.fmri.experimental_paradigm.BlockParadigm",
    "nipy.modalities.fmri.experimental_paradigm.EventRelatedParadigm",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.experimental_paradigm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.experimental_paradigm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmri": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmri.FmriImageList": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "nipy.modalities.fmri.fmri.FmriImageList.__getitem__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmri.FmriImageList.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmri.FmriImageList.from_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "klass"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmri.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmri.axis0_generator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmri.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmri.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat": {
  "data": {
   "symbols_in_volume": [
    "nipy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.api": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.api.delay_hrf": {
  "data": {
   "shadows": "canonical"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.bench": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.hrf": {
  "data": {
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.hrf.spectral_decomposition",
    "nipy.modalities.fmri.fmristat.hrf.taylor_approx"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.hrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.hrf.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.hrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.hrf.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.hrf.spectral_decomposition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Interp1dNumeric",
    "b",
    "b.y",
    "enumerate",
    "hrf2decompose",
    "hrft",
    "invertR",
    "lambdify_t",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.fabs",
    "numpy.linalg.pinv",
    "numpy.linalg.svd",
    "numpy.linspace",
    "numpy.nan_to_num",
    "range",
    "str",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.hrf.spectral_decomposition.approx": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.hrf.taylor_approx": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Interp1dNumeric",
    "dhrft",
    "hrf2decompose",
    "hrft",
    "invertR",
    "lambdify_t",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.gradient",
    "numpy.linalg.pinv",
    "numpy.linspace",
    "str",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.hrf.taylor_approx.approx": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dhrft",
    "hrft"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.invert.NLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.nlsmodel.NLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.invert.__docformat__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.invert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "next",
    "nipy.algorithms.statistics.models.nlsmodel.NLSModel",
    "numpy.array",
    "numpy.pi",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR._ddeltahat": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR._ddeltahatinv": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR._deltahat": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.arctan"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR._deltahatinv": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR.f": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.arctan"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.invertR.grad": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.arctan",
    "numpy.power",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.invert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.outputters": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutput": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutput.__call__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutput.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutput.__setitem__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutputList": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutputList.__call__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutputList.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.RegressionOutputList.__setitem__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.TOutput": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.outputters.RegressionOutputList"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.fmristat.outputters.TOutput.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.outputters.output_T"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.__docformat__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.outputters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.outputters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.outputters.output_AR1": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.add.reduce"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.output_F": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.output_T": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.outputters.output_resid": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.fmristat.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.test": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns": {
  "data": {
   "symbols_in_volume": [
    "conv",
    "enumerate",
    "float",
    "len",
    "list",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.N_ROWS",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.altdescr",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.converters",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.descriptions",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.dtype",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.event_dict",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.fmristat",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.full_def",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.lines",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.names",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.rec",
    "nipy.modalities.fmri.fmristat.tests.FIACdesigns.vals",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float",
    "numpy.fromstring",
    "numpy.recarray",
    "numpy.zeros",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.N_ROWS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.altdescr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.converters": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.descriptions": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.dtype": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.event_dict": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.fmristat": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.full_def": {
  "data": {
   "lineno": 518
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.lines": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.names": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.rec": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.time_vector": {
  "data": {
   "lineno": 919
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.FIACdesigns.vals": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.formulae.make_recarray"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.altprotocol": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "nipy.algorithms.statistics.formula.formulae.Factor",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.I",
    "nipy.algorithms.statistics.formula.formulae.natural_spline",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.t",
    "numpy.arange",
    "numpy.greater",
    "numpy.not_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.assert_almost_equal": {
  "data": {
   "shadows": "nipy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.assert_true": {
  "data": {
   "shadows": "nipy.testing.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.create_protocols": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.protocol",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.t"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.dec": {
  "data": {
   "shadows": "nipy.testing.dec"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.delay": {
  "data": {
   "shadows": "hrf"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.formulae": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.matchcol": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.nan_to_num",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.protocol": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "list",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.natural_spline",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.t",
    "nipy.utils.compat3.to_str",
    "numpy.arange",
    "numpy.array",
    "numpy.greater",
    "numpy.not_equal",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.t": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.test_agreement": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.create_protocols",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.matchcol",
    "nipy.testing.assert_true",
    "numpy.abs",
    "numpy.greater",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.test_altprotocol": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "isinstance",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.models.regression.OLSModel",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.altprotocol",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.protocol",
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.t",
    "nipy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.test_event_design": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_FIAC.t",
    "nipy.testing.dec.slow",
    "numpy.arange",
    "numpy.greater",
    "numpy.not_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_FIAC.to_str": {
  "data": {
   "shadows": "nipy.utils.compat3.to_str"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_hrf.test_spectral_decomposition": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "def_func",
    "lambdify_t",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.linspace",
    "spectral_decomposition",
    "val_maker"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.OLSModel",
    "nipy.core.image.image.rollimg",
    "nipy.io.api.load_image",
    "nipy.modalities.fmri.api.FmriImageList.from_image",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.DESIGN",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.FDATA",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.FIMG",
    "nipy.testing.funcfile",
    "numpy.array",
    "numpy.random.standard_normal"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.CMATRIX": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.DESIGN": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.FDATA": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.FIL": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.FIMG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.FmriImageList": {
  "data": {
   "shadows": "nipy.modalities.fmri.api.FmriImageList"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.MODEL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.axis0_generator": {
  "data": {
   "shadows": "nipy.modalities.fmri.api.axis0_generator"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.contrast": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.CMATRIX"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.contrast_generator": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.contrast",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.f_generator": {
  "data": {
   "shadows": "nipy.core.utils.generators.f_generator"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "input",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.MODEL"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.flatten_generator": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.noise": {
  "data": {
   "shadows": "numpy.random.standard_normal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.parcels": {
  "data": {
   "shadows": "nipy.core.utils.generators.parcels"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.result_generator": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.MODEL"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.rollimg": {
  "data": {
   "shadows": "nipy.core.image.image.rollimg"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.setup": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.teardown": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.test_iterate_over_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nipy.core.utils.generators.f_generator",
    "nipy.core.utils.generators.parcels",
    "nipy.core.utils.generators.write_data",
    "nipy.modalities.fmri.api.axis0_generator",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.FDATA",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.contrast",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.contrast_generator",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.flatten_generator",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.result_generator",
    "nipy.modalities.fmri.fmristat.tests.test_iterables.unflatten_generator",
    "numpy.asarray",
    "numpy.greater",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.unflatten_generator": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_iterables.FIMG"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_iterables.write_data": {
  "data": {
   "shadows": "nipy.core.utils.generators.write_data"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.Formula": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Formula"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.Term": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Term"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.anatfile": {
  "data": {
   "shadows": "nipy.testing.anatfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.ar_bias_correct": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.ar_bias_correct"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.ar_bias_corrector": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.ar_bias_corrector"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.make_recarray": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.make_recarray"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.rollimg": {
  "data": {
   "shadows": "nipy.core.image.image.rollimg"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.test_ar_modeling": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "estimateAR",
    "nipy.algorithms.statistics.models.regression.OLSModel",
    "nipy.algorithms.statistics.models.regression.ar_bias_correct",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.c_",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.reshape",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.test_model_out_img": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ModelOutputImage",
    "ValueError",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.api.load_image",
    "nipy.testing.anatfile",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.test_run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.algorithms.statistics.formula.formulae.Term",
    "nipy.algorithms.statistics.formula.formulae.make_recarray",
    "nipy.core.image.image.rollimg",
    "nipy.io.api.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_model.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.api.OLSModel",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.MODEL",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.N",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.RNG",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.X",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.Y",
    "numpy.c_",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.C1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.MODEL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.N": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.api.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.RESULTS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.RNG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.X": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.Y": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.test_model": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_outputters.RESULTS",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.Y",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.test_output_F": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.api.OLSModel",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.N",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.X",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.Y",
    "numpy.c_",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "ord",
    "output_F"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.fmristat.tests.test_outputters.test_output_T": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.modalities.fmri.fmristat.tests.test_outputters.C1",
    "nipy.modalities.fmri.fmristat.tests.test_outputters.RESULTS",
    "numpy.testing.assert_array_almost_equal",
    "output_T"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.glm.ARModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.ARModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.Contrast": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.glm.Contrast.__add__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "nipy.modalities.fmri.glm.Contrast"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.__div__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "nipy.modalities.fmri.glm.DEF_DOFMAX",
    "nipy.modalities.fmri.glm.DEF_TINY",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.__rmul__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "float",
    "nipy.modalities.fmri.glm.Contrast"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.p_value": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isnan",
    "numpy.minimum",
    "scipy.stats.f.sf",
    "scipy.stats.t.sf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.stat": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "nipy.algorithms.statistics.utils.multiple_mahalanobis",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Contrast.z_score": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.utils.z_score",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.DEF_DOFMAX": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.glm.DEF_TINY": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.glm.FMRILinearModel": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.glm.FMRILinearModel.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nipy.externals.six.string_types",
    "nipy.io.nibcompat.get_affine",
    "nipy.labs.mask.compute_mask_sessions",
    "numpy.int8",
    "numpy.load",
    "numpy.ndarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.FMRILinearModel.contrast": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nipy.io.nibcompat.get_header",
    "numpy.all",
    "numpy.bool",
    "numpy.float",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.squeeze",
    "numpy.tile",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.FMRILinearModel.fit": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nipy.modalities.fmri.glm.GeneralLinearModel",
    "nipy.modalities.fmri.glm.data_scaling",
    "numpy.bool",
    "numpy.int16",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.__init__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.contrast": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "nipy.modalities.fmri.glm.Contrast",
    "numpy.asarray",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "nipy.algorithms.statistics.models.regression.ARModel",
    "nipy.algorithms.statistics.models.regression.OLSModel",
    "numpy.int",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.get_beta": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.get_logL": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.GeneralLinearModel.get_mse": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.compute_mask_sessions": {
  "data": {
   "shadows": "nipy.labs.mask.compute_mask_sessions"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.data_scaling": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "nipy.modalities.fmri.glm.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.get_header": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_header"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.multiple_mahalanobis": {
  "data": {
   "shadows": "nipy.algorithms.statistics.utils.multiple_mahalanobis"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.sps": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.glm.z_score": {
  "data": {
   "shadows": "nipy.algorithms.statistics.utils.z_score"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.hemodynamic_models._gamma_difference_hrf": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "numpy.linspace",
    "scipy.stats.gamma.pdf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models._hrf_kernel": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "nipy.modalities.fmri.hemodynamic_models.glover_hrf",
    "nipy.modalities.fmri.hemodynamic_models.glover_time_derivative",
    "nipy.modalities.fmri.hemodynamic_models.spm_dispersion_derivative",
    "nipy.modalities.fmri.hemodynamic_models.spm_hrf",
    "nipy.modalities.fmri.hemodynamic_models.spm_time_derivative",
    "numpy.hstack",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models._orthogonalize": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.pinv",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models._regressor_names": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models._resample_regressor": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "f",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models._sample_condition": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "UserWarning",
    "enumerate",
    "float",
    "len",
    "nipy.externals.six.moves.map",
    "nipy.modalities.fmri.hemodynamic_models.warnings",
    "numpy.asanyarray",
    "numpy.cumsum",
    "numpy.float",
    "numpy.linspace",
    "numpy.minimum",
    "numpy.searchsorted",
    "numpy.zeros_like",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.compute_regressor": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "float",
    "nipy.modalities.fmri.hemodynamic_models._hrf_kernel",
    "nipy.modalities.fmri.hemodynamic_models._orthogonalize",
    "nipy.modalities.fmri.hemodynamic_models._regressor_names",
    "nipy.modalities.fmri.hemodynamic_models._resample_regressor",
    "nipy.modalities.fmri.hemodynamic_models._sample_condition",
    "numpy.array",
    "numpy.convolve",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.gamma": {
  "data": {
   "shadows": "scipy.stats.gamma"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.glover_hrf": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hemodynamic_models._gamma_difference_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.glover_time_derivative": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hemodynamic_models.glover_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.map": {
  "data": {
   "shadows": "nipy.externals.six.moves.map"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hemodynamic_models.spm_dispersion_derivative": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hemodynamic_models._gamma_difference_hrf",
    "nipy.modalities.fmri.hemodynamic_models.spm_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.spm_hrf": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hemodynamic_models._gamma_difference_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.spm_time_derivative": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hemodynamic_models.spm_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hemodynamic_models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "lambdify_t",
    "nipy.modalities.fmri.hrf._aexpr",
    "nipy.modalities.fmri.hrf._dgexpr",
    "nipy.modalities.fmri.hrf._dpos",
    "nipy.modalities.fmri.hrf._get_num_int",
    "nipy.modalities.fmri.hrf._get_sym_int",
    "nipy.modalities.fmri.hrf._gexpr",
    "nipy.modalities.fmri.hrf._spm_dd_func",
    "nipy.modalities.fmri.hrf.afnit",
    "nipy.modalities.fmri.hrf.ddspmt",
    "nipy.modalities.fmri.hrf.dglovert",
    "nipy.modalities.fmri.hrf.dspmt",
    "nipy.modalities.fmri.hrf.gamma_expr",
    "nipy.modalities.fmri.hrf.glovert",
    "nipy.modalities.fmri.hrf.spm_hrf_compat",
    "nipy.modalities.fmri.hrf.spmt",
    "nipy.modalities.fmri.hrf.sympy",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.hrf._aexpr": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._dgexpr": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._dpos": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._get_num_int": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "lf",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf._get_sym_int": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "lambdify_t",
    "nipy.modalities.fmri.hrf._get_num_int"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf._gexpr": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._spm_can_int": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._spm_dd_func": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf._spm_dd_func_int": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.afni": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.afnit": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.ddspm": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.ddspmt": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hrf._spm_dd_func",
    "nipy.modalities.fmri.hrf._spm_dd_func_int",
    "nipy.modalities.fmri.hrf.spmt"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.dglover": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.dglovert": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.dspm": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.dspmt": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hrf.spmt",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.gamma_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hrf.gamma_params",
    "nipy.modalities.fmri.hrf.sympy"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.gamma_params": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.glover": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.glovert": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.spm": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.hrf.spm_hrf_compat": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.float",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.gamma.pdf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.spmt": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "nipy.modalities.fmri.hrf._spm_can_int",
    "nipy.modalities.fmri.hrf.spm_hrf_compat"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.hrf.sps": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.hrf.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.realfuncs": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.realfuncs.dct_ii_basis": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.allclose",
    "numpy.arange",
    "numpy.cos",
    "numpy.diff",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.realfuncs.dct_ii_cut_basis": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len",
    "nipy.modalities.fmri.realfuncs.dct_ii_basis",
    "numpy.floor",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.realfuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.realfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.spm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.correlation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "nipy.modalities.fmri.spm.correlation.ARcomponents",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.spm.correlation.ARcomponents": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nipy.modalities.fmri.spm.correlation.ARcovariance",
    "numpy.asarray",
    "numpy.diag",
    "numpy.float",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.correlation.ARcovariance": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.multiply.outer",
    "numpy.ones",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.correlation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.correlation.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.correlation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.spm.model.FDbn": {
  "data": {
   "shadows": "scipy.stats.f"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.Fmask": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "nipy.core.api.Image",
    "numpy.asarray",
    "numpy.greater",
    "print",
    "scipy.stats.f.ppf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.GLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.GLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.L": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.OLS": {
  "data": {
   "shadows": "nipy.modalities.fmri.fmristat.model.OLS"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.OLSModel": {
  "data": {
   "shadows": "nipy.algorithms.statistics.models.regression.OLSModel"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.SecondStage": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.spm.model.SecondStage.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.SecondStage.execute": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.models.regression.GLSModel",
    "nipy.modalities.fmri.fmristat.model.generate_output",
    "nipy.modalities.fmri.fmristat.model.model_generator",
    "nipy.modalities.fmri.fmristat.model.results_generator"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.SecondStage.execute.model_params": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.SecondStage.execute.reshape": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.estimate_pooled_covariance": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dot",
    "numpy.product",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.model.fmristat": {
  "data": {
   "shadows": "nipy.modalities.fmri.fmristat.model"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.model.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.spm.reml.Q",
    "nipy.modalities.fmri.spm.reml.X",
    "nipy.modalities.fmri.spm.reml.reml",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.identity",
    "numpy.random.standard_normal",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.spm.reml.Q": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.spm.reml.R": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml.X": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.spm.reml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml.orth": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.greater",
    "numpy.int",
    "numpy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.reml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.reml.reml": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nipy.modalities.fmri.spm.reml.orth",
    "numpy.array",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.exp",
    "numpy.fabs",
    "numpy.identity",
    "numpy.inf",
    "numpy.linalg.inv",
    "numpy.linalg.solve",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.trace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.spm.trace.V",
    "nipy.modalities.fmri.spm.trace.X",
    "nipy.modalities.fmri.spm.trace.trRV",
    "nipy.modalities.fmri.spm.trace.u",
    "numpy.dot",
    "numpy.identity",
    "numpy.random.standard_normal",
    "orth",
    "print"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.spm.trace.V": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.spm.trace.X": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.spm.trace._frobenius": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.trace._trace": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.trace.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.trace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.trace.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.trace.standard_normal": {
  "data": {
   "shadows": "numpy.random.standard_normal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.trace.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.spm.trace.trRV": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nipy.modalities.fmri.spm.trace._frobenius",
    "nipy.modalities.fmri.spm.trace._trace",
    "numpy.dot",
    "numpy.identity",
    "orth"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.spm.trace.u": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.test": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_aliases": {
  "data": {
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_aliases.sympy"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_aliases.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.gen_BrownianMotion": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cumsum",
    "numpy.random.standard_normal",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_aliases.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.lambdify": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdify"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_aliases.test_1d": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Bs",
    "ee_vec",
    "nipy.modalities.fmri.tests.test_aliases.gen_BrownianMotion",
    "nipy.modalities.fmri.tests.test_aliases.sympy",
    "numpy.exp",
    "numpy.testing.assert_almost_equal",
    "sympy.utilities.lambdify.implemented_function",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_aliases.test_2d": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "B1s",
    "B2s",
    "ee",
    "nipy.modalities.fmri.tests.test_aliases.gen_BrownianMotion",
    "nipy.modalities.fmri.tests.test_aliases.sympy",
    "numpy.testing.assert_almost_equal",
    "range",
    "sympy.utilities.lambdify.implemented_function",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_aliases.test_implemented_function": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "f",
    "g",
    "hasattr",
    "l1",
    "l2",
    "nipy.modalities.fmri.tests.test_aliases.sympy",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "str",
    "sympy.utilities.lambdify.implemented_function",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_aliases.test_lambdify": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "f2",
    "lam",
    "nipy.modalities.fmri.tests.test_aliases.sympy",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal",
    "sympy.utilities.lambdify.implemented_function",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_design.THIS_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_design.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_des_con_equal": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.assert_dict_almost_equal": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "numpy.testing.assert_almost_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.make_recarray": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.make_recarray"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_design.test_block_amplitudes": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "block_amplitudes",
    "glover",
    "list",
    "mk_blk_tc",
    "nipy.algorithms.statistics.formula.make_recarray",
    "nipy.modalities.fmri.tests.test_design.assert_dict_almost_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_block_amplitudes.mk_blk_tc": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "blocks",
    "convolve_functions",
    "glover",
    "hrf",
    "lambdify_t",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_event_design": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "d_maker",
    "dict",
    "nipy.algorithms.statistics.formula.make_recarray",
    "nipy.modalities.fmri.tests.test_design.assert_dict_almost_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.testing.assert_almost_equal",
    "spec_maker",
    "tc_maker",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_event_design.mk_blk_spec": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.make_recarray",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_event_design.mk_blk_tc": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "blocks",
    "convolve_functions",
    "glover",
    "lambdify_t",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_event_design.mk_ev_spec": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "nipy.algorithms.statistics.formula.make_recarray",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_event_design.mk_ev_tc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "events",
    "lambdify_t"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_openfmri2nipy": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_design.THIS_DIR",
    "nose.tools.assert_equal",
    "numpy.loadtxt",
    "numpy.testing.assert_array_equal",
    "openfmri2nipy",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_design.test_stack_designs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dict",
    "nipy.modalities.fmri.tests.test_design.assert_des_con_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.eye",
    "numpy.ones",
    "stack2designs",
    "stack_designs"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nipy.modalities.fmri.tests.test_dmtx.full_path_dmtx_file",
    "nipy.modalities.fmri.tests.test_dmtx.my_path",
    "nipy.modalities.fmri.tests.test_dmtx.nose",
    "numpy.load",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_dmtx.DMTX": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_dmtx.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "EventRelatedParadigm"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.block_paradigm": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "BlockParadigm",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.full_path_dmtx_file": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_dmtx.have_mpl": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_dmtx.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.modulated_block_paradigm": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "BlockParadigm",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.modulated_event_paradigm": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.my_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_dmtx.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.osp": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_convolve_regressors": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "_convolve_regressors",
    "nose.tools.assert_equal",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_cosine_drift": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_cosine_drift",
    "nipy.modalities.fmri.tests.test_dmtx.DMTX",
    "numpy.arange",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_csv_io": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "dmtx_from_csv",
    "make_dmtx",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.modalities.fmri.tests.test_dmtx.modulated_event_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx0": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx0b": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dmtx_light",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx0c": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dmtx_light",
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx0d": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nose.tools.assert_equal",
    "numpy.linspace",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx1": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx10": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx11": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx12": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx13": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx14": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx15": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx16": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx17": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.modulated_event_paradigm",
    "nose.tools.assert_true",
    "numpy.int",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx18": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.modulated_block_paradigm",
    "nose.tools.assert_true",
    "numpy.int",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx19": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.modulated_event_paradigm",
    "numpy.int",
    "numpy.linspace",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx1b": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx1c": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx1d": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.isnan",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx2": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx20": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "dmtx_light",
    "nipy.modalities.fmri.tests.test_dmtx.modulated_event_paradigm",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.arange",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx3": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx4": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx5": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.block_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx6": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.block_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx7": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "dmtx_light",
    "len",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx8": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_dmtx9": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "dmtx_light",
    "len",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "nose.tools.assert_equal",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_fir_block": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "dmtx_light",
    "list",
    "nipy.modalities.fmri.tests.test_dmtx.block_paradigm",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.int",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_frametimes_as_a_list": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "list",
    "make_dmtx",
    "nipy.modalities.fmri.tests.test_dmtx.basic_paradigm",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_show_constrast": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "make_dmtx",
    "nipy.modalities.fmri.tests.test_dmtx.have_mpl",
    "numpy.linspace",
    "numpy.random.standard_normal",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_show_dmtx": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "make_dmtx",
    "nipy.modalities.fmri.tests.test_dmtx.have_mpl",
    "numpy.linspace",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_spm_1": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "make_dmtx",
    "nipy.modalities.fmri.tests.test_dmtx.DMTX",
    "nose.tools.assert_true",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.test_spm_2": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "BlockParadigm",
    "make_dmtx",
    "nipy.modalities.fmri.tests.test_dmtx.DMTX",
    "nose.tools.assert_true",
    "numpy.linspace",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_dmtx.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_fmri.AfT": {
  "data": {
   "shadows": "nipy.core.api.AffineTransform"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.FmriImageList": {
  "data": {
   "shadows": "nipy.modalities.fmri.api.FmriImageList"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.axis0_generator": {
  "data": {
   "shadows": "nipy.modalities.fmri.api.axis0_generator"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.load_image": {
  "data": {
   "shadows": "nipy.io.api.load_image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.parcels": {
  "data": {
   "shadows": "nipy.core.api.parcels"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.save_image": {
  "data": {
   "shadows": "nipy.io.api.save_image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_fmri.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.teardown": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_fmri.warnings"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.test_iter": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nipy.io.api.load_image",
    "nipy.modalities.fmri.api.axis0_generator",
    "nipy.modalities.fmri.tests.test_fmri.gc",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.test_labels1": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nipy.core.api.AffineTransform",
    "nipy.core.api.Image",
    "nipy.core.api.parcels",
    "nipy.io.api.load_image",
    "nipy.modalities.fmri.api.axis0_generator",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.test_subcoordmap": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nipy.io.api.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.test_write": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.api.load_image",
    "nipy.io.api.save_image",
    "nipy.modalities.fmri.api.FmriImageList.from_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_fmri.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_fmri.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.tests.test_glm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_glm.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.ar1_glm": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "GeneralLinearModel",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.example_data": {
  "data": {
   "shadows": "nipy.utils.example_data"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.generate_fake_fmri_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "enumerate",
    "nibabel.Nifti1Image",
    "numpy.eye",
    "numpy.int8",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.get_affine": {
  "data": {
   "shadows": "nipy.io.nibcompat.get_affine"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.if_example_data": {
  "data": {
   "shadows": "nipy.testing.decorators.if_example_data"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.load": {
  "data": {
   "shadows": "nibabel.load"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.ols_glm": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "GeneralLinearModel",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.save": {
  "data": {
   "shadows": "nibabel.save"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_glm.test_F_contrast_add": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_F_contrast_calues": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "list",
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.eye",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_F_contrast_mul": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_Fcontrast_1d": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_Fcontrast_1d_old": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_Fcontrast_nd": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_Fcontrast_nd_ols": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_Tcontrast": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_fmri_example": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "FMRILinearModel",
    "nipy.testing.decorators.if_example_data",
    "nipy.utils.example_data.get_filename",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_fmri_inputs": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "FMRILinearModel",
    "ValueError",
    "nibabel.load",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.testing.funcfile",
    "nose.tools.assert_raises",
    "numpy.ones",
    "numpy.savez"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_glm_ar": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_glm_beta": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_glm_logL": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_glm_mse": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_glm_ols": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "list",
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "nose.tools.assert_equal",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_high_level_glm_contrasts": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "FMRILinearModel",
    "nipy.modalities.fmri.tests.test_glm.write_fake_fmri_data",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_high_level_glm_null_contrasts": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "FMRILinearModel",
    "nipy.modalities.fmri.tests.test_glm.generate_fake_fmri_data",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_high_level_glm_with_data": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FMRILinearModel",
    "nibabel.load",
    "nipy.modalities.fmri.tests.test_glm.write_fake_fmri_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.sum",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_high_level_glm_with_paths": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "FMRILinearModel",
    "nibabel.load",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.io.nibcompat.get_affine",
    "nipy.modalities.fmri.tests.test_glm.write_fake_fmri_data",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_scaling": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "data_scaling",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_t_contrast_add": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ols_glm",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_t_contrast_mul": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.eye",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_t_contrast_values": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "list",
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "numpy.eye",
    "numpy.ravel",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.test_tmin": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "min",
    "nipy.modalities.fmri.tests.test_glm.ar1_glm",
    "nose.tools.assert_equal",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_glm.write_fake_fmri_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "enumerate",
    "nibabel.Nifti1Image",
    "nibabel.save",
    "numpy.eye",
    "numpy.int8",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.savez"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.tests.test_hemodynamic_models.nose"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_design_warnings": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "UserWarning",
    "compute_regressor",
    "nipy.modalities.fmri.tests.test_hemodynamic_models.warnings",
    "numpy.linspace",
    "numpy.testing.assert_warns"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_glover_hrf": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "glover_hrf",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_glover_time_derivative": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "glover_time_derivative",
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_hkernel": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_hrf_kernel",
    "glover_hrf",
    "glover_time_derivative",
    "len",
    "numpy.arange",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "spm_dispersion_derivative",
    "spm_hrf",
    "spm_time_derivative"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_make_regressor_1": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "compute_regressor",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_make_regressor_2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "compute_regressor",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_make_regressor_3": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "compute_regressor",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_names": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_regressor_names",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_orthogonalize": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_orthogonalize",
    "numpy.diag",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_orthogonalize_trivial": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_orthogonalize",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_resample_regressor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_resample_regressor",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_resample_regressor_nl": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_resample_regressor",
    "numpy.cos",
    "numpy.linspace",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_sample_condition_1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_sample_condition",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_sample_condition_2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_sample_condition",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_sample_condition_3": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_sample_condition",
    "numpy.linspace",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_sample_condition_4": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_sample_condition",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_sample_condition_5": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_sample_condition",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_spm_hrf": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "spm_hrf"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.test_spm_hrf_derivative": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "spm_dispersion_derivative",
    "spm_time_derivative"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hemodynamic_models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_hrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.gamma": {
  "data": {
   "shadows": "scipy.stats.gamma"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_hrf.test_gamma": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gamma_expr",
    "gamma_params",
    "gf",
    "lambdify_t",
    "numpy.abs",
    "numpy.linspace",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "scipy.stats.gamma"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hrf.test_spm_hrf": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ddspmt",
    "dspmt",
    "numpy.arange",
    "numpy.argmax",
    "numpy.max",
    "numpy.testing.assert_almost_equal",
    "spmt"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hrf.test_spm_hrf_errors": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "numpy.arange",
    "range",
    "spm_hrf_compat"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_hrf.test_spm_hrf_octave": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ddspmt",
    "dspmt",
    "enumerate",
    "numpy.arange",
    "numpy.testing.assert_almost_equal",
    "os.path.dirname",
    "os.path.join",
    "scipy.io.loadmat",
    "spm_hrf_compat",
    "spmt"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_iterators": {
  "data": {},
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_iterators.FmriImageList": {
  "data": {
   "shadows": "nipy.modalities.fmri.api.FmriImageList"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_iterators.Image": {
  "data": {
   "shadows": "nipy.core.api.Image"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_iterators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_iterators.coordinate_map": {
  "data": {
   "shadows": "nipy.core.reference.coordinate_map"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.fmri.tests.test_paradigm.nose"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_paradigm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm.basic_paradigm": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "EventRelatedParadigm"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.block_paradigm": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "BlockParadigm",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.modulated_block_paradigm": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "BlockParadigm",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.modulated_event_paradigm": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_paradigm.test_paradigm_with_int_condition_ids": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "EventRelatedParadigm",
    "nipy.modalities.fmri.tests.test_paradigm.basic_paradigm",
    "nose.tools.assert_true",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.test_read_paradigm": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "load_paradigm_from_csv_file",
    "nipy.modalities.fmri.tests.test_paradigm.basic_paradigm",
    "nipy.modalities.fmri.tests.test_paradigm.block_paradigm",
    "nipy.modalities.fmri.tests.test_paradigm.modulated_block_paradigm",
    "nipy.modalities.fmri.tests.test_paradigm.modulated_event_paradigm",
    "nipy.modalities.fmri.tests.test_paradigm.write_paradigm"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_paradigm.write_paradigm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nipy.modalities.fmri.tests.test_paradigm.tempfile"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_realfuncs": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.HERE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.test_dct_ii_basis": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dct_ii_basis",
    "nipy.modalities.fmri.tests.test_realfuncs.HERE",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.diag",
    "numpy.eye",
    "numpy.loadtxt",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_realfuncs.test_dct_ii_cut_basis": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dct_ii_basis",
    "dct_ii_cut_basis",
    "int",
    "itertools.product",
    "numpy.arange",
    "numpy.floor",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.Term"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.tests.test_utils.DiracDelta": {
  "data": {
   "shadows": "sympy.DiracDelta"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.Dummy": {
  "data": {
   "shadows": "sympy.Dummy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.Function": {
  "data": {
   "shadows": "sympy.Function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.Term": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.Term"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.lambdify": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdify"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.numerical_convolve": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "float",
    "func1",
    "func2",
    "min",
    "numpy.arange",
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.tests.test_utils.t": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.tests.test_utils.test_blocks": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "blocks",
    "lam",
    "nipy.modalities.fmri.tests.test_utils.re",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "str",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_convolve_functions": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "cfunc",
    "ftri",
    "int",
    "nan_ftri",
    "nipy.modalities.fmri.tests.test_utils.numerical_convolve",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.arange",
    "numpy.argmax",
    "numpy.isnan",
    "numpy.nan",
    "numpy.r_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "round",
    "str",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_convolve_functions.kern_conv1": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TimeConvolver"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_convolve_functions.kern_conv2": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TimeConvolver"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_convolve_hrf": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "TimeConvolver",
    "blocks",
    "convolve_functions",
    "events",
    "lambdify_t",
    "nipy.algorithms.statistics.formula.Term",
    "nipy.modalities.fmri.tests.test_utils.t",
    "numpy.arange",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_define": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "define",
    "f",
    "lambdify_t",
    "nipy.modalities.fmri.tests.test_utils.sympy",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_equal",
    "numpy.exp",
    "numpy.random.standard_normal",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_events": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "events",
    "h",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.int64",
    "range",
    "sympy.DiracDelta",
    "sympy.Dummy",
    "sympy.Function",
    "sympy.Symbol"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_interp": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "int_func",
    "linear_interp",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_interp1d_numeric": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Interp1dNumeric",
    "TypeError",
    "f",
    "func",
    "lambdify_t",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_raises",
    "numpy.testing.assert_almost_equal",
    "range",
    "sym_func",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_linear_inter_kind": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "linear_interp",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.tests.test_utils.test_step_function": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "lam",
    "nipy.modalities.fmri.tests.test_utils.re",
    "nipy.modalities.fmri.tests.test_utils.t",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "step_function",
    "str",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils": {
  "data": {
   "symbols_in_volume": [
    "nipy.algorithms.statistics.formula.formulae.Term",
    "nipy.modalities.fmri.utils.interp",
    "nipy.modalities.fmri.utils.step_function"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.fmri.utils.DiracDelta": {
  "data": {
   "shadows": "sympy.DiracDelta"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.Formula": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Formula"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.Interp1dNumeric": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.utils.Interp1dNumeric.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "TypeError",
    "nipy.modalities.fmri.utils.Interp1dNumeric",
    "numpy.asarray",
    "numpy.object_",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.modalities.fmri.utils.Term": {
  "data": {
   "shadows": "nipy.algorithms.statistics.formula.formulae.Term"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.TimeConvolver": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.modalities.fmri.utils.TimeConvolver.__init__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "nipy.modalities.fmri.utils._eval_for"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.TimeConvolver.convolve": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "min",
    "nipy.modalities.fmri.utils._conv_fx_gx",
    "nipy.modalities.fmri.utils._eval_for",
    "nipy.modalities.fmri.utils.interp"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils._conv_fx_gx": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils._eval_for": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "f",
    "float",
    "nipy.modalities.fmri.utils.lambdify_t",
    "numpy.arange",
    "real_f",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.blocks": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "list",
    "nipy.modalities.fmri.utils.itertools",
    "nipy.modalities.fmri.utils.step_function",
    "numpy.inf",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.convolve_functions": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "f",
    "min",
    "nipy.modalities.fmri.utils._conv_fx_gx",
    "nipy.modalities.fmri.utils._eval_for",
    "nipy.modalities.fmri.utils.interp"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.define": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "f",
    "nipy.modalities.fmri.utils.T",
    "sympy.utilities.lambdify.implemented_function",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.events": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "f",
    "nipy.modalities.fmri.utils.T",
    "nipy.modalities.fmri.utils.itertools",
    "sympy.DiracDelta",
    "sympy.Symbol",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.fourier_basis": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "f",
    "nipy.algorithms.statistics.formula.formulae.Formula",
    "nipy.modalities.fmri.utils.T",
    "nipy.modalities.fmri.utils.sympy"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.implemented_function": {
  "data": {
   "shadows": "sympy.utilities.lambdify.implemented_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.interp": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "nipy.modalities.fmri.utils.Interp1dNumeric",
    "nipy.modalities.fmri.utils.T",
    "s",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.lambdify": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdify"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.lambdify_t": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nipy.modalities.fmri.utils.T",
    "sympy.utilities.lambdify.lambdify"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.linear_interp": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "nipy.modalities.fmri.utils.interp"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.modalities.fmri.utils.step_function": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "nipy.modalities.fmri.utils.T",
    "s",
    "sympy.utilities.lambdify.implemented_function"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.step_function._imp": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "f",
    "numpy.asarray",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.fmri.utils.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "nipy.modalities.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.modalities.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.modalities.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.modalities.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.modalities.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.modalities.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.modalities.test": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.pkg_info": {
  "data": {},
  "type": "module"
 },
 "nipy.pkg_info.COMMIT_INFO_FNAME": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "nipy.pkg_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.pkg_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nipy.pkg_info.get_pkg_info": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "nipy.pkg_info.nipy",
    "nipy.pkg_info.numpy",
    "nipy.pkg_info.pkg_commit_hash",
    "nipy.pkg_info.sys"
   ]
  },
  "type": "function"
 },
 "nipy.pkg_info.nipy": {
  "data": {
   "shadows": "nipy"
  },
  "type": "import"
 },
 "nipy.pkg_info.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.pkg_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.pkg_info.pkg_commit_hash": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "IOError",
    "nipy.pkg_info.COMMIT_INFO_FNAME",
    "nipy.pkg_info.os",
    "nipy.pkg_info.subprocess"
   ]
  },
  "type": "function"
 },
 "nipy.pkg_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.pkg_info.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nipy.pkg_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.save_image": {
  "data": {
   "shadows": "nipy.io.api.save_image"
  },
  "type": "import"
 },
 "nipy.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "nipy.setup.PY3",
    "nipy.setup.configuration",
    "nipy.setup.sys",
    "numpy.distutils.core.setup",
    "str"
   ]
  },
  "type": "module"
 },
 "nipy.setup.ConfigParser": {
  "data": {
   "shadows": "ConfigParser.ConfigParser"
  },
  "type": "import"
 },
 "nipy.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.setup.NIPY_DEFAULTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.setup.PY3": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "nipy.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.setup.configuration": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nipy.setup.get_nipy_info",
    "nipy_info",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.setup.configuration.nipy_info": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.distutils.system_info.system_info"
   ]
  },
  "type": "class"
 },
 "nipy.setup.get_nipy_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ConfigParser.ConfigParser",
    "dict",
    "isinstance",
    "nipy.setup.NIPY_DEFAULTS",
    "nipy.setup.os",
    "nipy.setup.string_types",
    "numpy.distutils.system_info.get_standard_file"
   ]
  },
  "type": "function"
 },
 "nipy.setup.get_standard_file": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_standard_file"
  },
  "type": "import"
 },
 "nipy.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.setup.string_types": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.setup.system_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.system_info"
  },
  "type": "import"
 },
 "nipy.test": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nipy.testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nipy.testing.basedir",
    "nipy.testing.filepath",
    "nipy.testing.os"
   ]
  },
  "type": "module"
 },
 "nipy.testing.Tester": {
  "data": {
   "shadows": "NipyNoseTester"
  },
  "type": "import"
 },
 "nipy.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.anatfile": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.testing.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.testing.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.testing.basedir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nipy.testing.bench": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nipy.testing.dec": {
  "data": {
   "shadows": "decorators"
  },
  "type": "import"
 },
 "nipy.testing.decorators": {
  "data": {
   "symbols_in_volume": [
    "nibabel.optpkg.optional_package",
    "nipy.testing.decorators.make_label_dec",
    "skipif"
   ]
  },
  "type": "module"
 },
 "nipy.testing.decorators.DataError": {
  "data": {
   "shadows": "nipy.utils.DataError"
  },
  "type": "import"
 },
 "nipy.testing.decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.decorators.data": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "nipy.testing.decorators.example_data": {
  "data": {
   "shadows": "nipy.utils.example_data"
  },
  "type": "import"
 },
 "nipy.testing.decorators.gui": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "nipy.testing.decorators.if_datasource": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nipy.utils.DataError",
    "skipif"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.if_example_data": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nipy.testing.decorators.if_datasource",
    "nipy.utils.example_data"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.if_templates": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nipy.testing.decorators.if_datasource",
    "nipy.utils.templates"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.knownfailure": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "knownfailureif"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.make_decorator": {
  "data": {
   "shadows": "nose.tools.make_decorator"
  },
  "type": "import"
 },
 "nipy.testing.decorators.make_label_dec": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "nipy.externals.six.string_types",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.make_label_dec.decor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.needs_mpl": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.testing.decorators.needs_mpl_agg": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "func",
    "nipy.testing.decorators.needs_mpl",
    "nose.tools.make_decorator"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.needs_mpl_agg.agg_func": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "func",
    "matplotlib.pyplot.switch_backend"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.needs_review": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "nipy.testing.decorators.needs_review.skip_func": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "skipif"
   ]
  },
  "type": "function"
 },
 "nipy.testing.decorators.optional_package": {
  "data": {
   "shadows": "nibabel.optpkg.optional_package"
  },
  "type": "import"
 },
 "nipy.testing.decorators.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nipy.testing.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.testing.decorators.string_types": {
  "data": {
   "shadows": "nipy.externals.six.string_types"
  },
  "type": "import"
 },
 "nipy.testing.decorators.templates": {
  "data": {
   "shadows": "nipy.utils.templates"
  },
  "type": "import"
 },
 "nipy.testing.doctester": {
  "data": {
   "symbols_in_volume": [
    "doctest.register_optionflag",
    "nipy.testing.doctester.re"
   ]
  },
  "type": "module"
 },
 "nipy.testing.doctester.ARRAY_REG": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "nipy.testing.doctester.DTYPE_REG": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "nipy.testing.doctester.FP_4DP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.testing.doctester.FP_6DP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.testing.doctester.FP_REG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nipy.testing.doctester.IGNORE_DTYPE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nipy.testing.doctester.IGNORE_DTYPE_REG": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "nipy.testing.doctester.IGNORE_OUTPUT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "nipy.testing.doctester.NOT_EQUAL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nipy.testing.doctester.NipyDoctest": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "nipy.testing.doctester.NipyOutputChecker"
   ]
  },
  "type": "class"
 },
 "nipy.testing.doctester.NipyDoctest.set_test_context": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.NipyOutputChecker": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "nipy.testing.doctester.NipyOutputChecker.check_output": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "eval",
    "nipy.testing.doctester.FP_4DP",
    "nipy.testing.doctester.FP_6DP",
    "nipy.testing.doctester.IGNORE_DTYPE",
    "nipy.testing.doctester.IGNORE_OUTPUT",
    "nipy.testing.doctester.NOT_EQUAL",
    "nipy.testing.doctester.STRIP_ARRAY_REPR",
    "nipy.testing.doctester.STRUCTARR_EQUAL",
    "nipy.testing.doctester.SYMPY_EQUAL",
    "nipy.testing.doctester.ignore_dtype",
    "nipy.testing.doctester.round_numbers",
    "nipy.testing.doctester.strip_array_repr",
    "sympy.sympify"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.STRIP_ARRAY_REPR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nipy.testing.doctester.STRUCTARR_EQUAL": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nipy.testing.doctester.SYMPY_EQUAL": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.testing.doctester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.doctester.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "nipy.testing.doctester.ignore_dtype": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "nipy.testing.doctester.IGNORE_DTYPE_REG"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.testing.doctester.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nipy.testing.doctester.register_optionflag": {
  "data": {
   "shadows": "doctest.register_optionflag"
  },
  "type": "import"
 },
 "nipy.testing.doctester.round_numbers": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nipy.testing.doctester.FP_REG"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.round_numbers.dorep": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.strip_array_repr": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nipy.testing.doctester.ARRAY_REG",
    "nipy.testing.doctester.DTYPE_REG"
   ]
  },
  "type": "function"
 },
 "nipy.testing.doctester.sympify": {
  "data": {
   "shadows": "sympy.sympify"
  },
  "type": "import"
 },
 "nipy.testing.filepath": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nipy.testing.funcfile": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nipy.testing.nosetester": {
  "data": {},
  "type": "module"
 },
 "nipy.testing.nosetester.NipyNoseTester": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "nipy.testing.nosetester.NipyNoseTester._get_custom_doctester": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NipyDoctest",
    "import_nose"
   ]
  },
  "type": "function"
 },
 "nipy.testing.nosetester.NipyNoseTester.test": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nipy.testing.nosetester.NipyNoseTester",
    "nipy.testing.nosetester.fpw_opt_str",
    "nipy.testing.nosetester.prepare_imports",
    "super"
   ]
  },
  "type": "function"
 },
 "nipy.testing.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.nosetester.fpw_opt_str": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "RuntimeError",
    "import_nose"
   ]
  },
  "type": "function"
 },
 "nipy.testing.nosetester.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nipy.testing.nosetester.prepare_imports": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.use"
   ]
  },
  "type": "function"
 },
 "nipy.testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.testing.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.testing.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.testing.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.testing.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.testing.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.testing.test": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "nipy.testing.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.testing.tests.test_doctester": {
  "data": {},
  "type": "module"
 },
 "nipy.testing.tests.test_doctester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctester.test_round_numbers": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "round_numbers"
   ]
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctester.test_strip_array_repr": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "eval",
    "int",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "repr",
    "strip_array_repr"
   ]
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.testing.doctester.NipyDoctest",
    "nipy.testing.tests.test_doctesting.argv",
    "nipy.testing.tests.test_doctesting.nose",
    "nipy.testing.tests.test_doctesting.sys"
   ]
  },
  "type": "module"
 },
 "nipy.testing.tests.test_doctesting.NipyDoctest": {
  "data": {
   "shadows": "nipy.testing.doctester.NipyDoctest"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctesting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctesting.argv": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "nipy.testing.tests.test_doctesting.check_array_repr": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_combinations": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_empty_output": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_fails": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_fp_equal": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_have_module_context": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_ignore_dtype": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_ignore_output": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_implicit_np": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_random_directive": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_skip": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_sympy_equal": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.check_whitespace_enabled": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.func": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "nipy.testing.tests.test_doctesting.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_doctesting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images": {
  "data": {},
  "type": "module"
 },
 "nipy.testing.tests.test_images.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.anatfile": {
  "data": {
   "shadows": "nipy.testing.anatfile"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.funcfile": {
  "data": {
   "shadows": "nipy.testing.funcfile"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.load_image": {
  "data": {
   "shadows": "nipy.load_image"
  },
  "type": "import"
 },
 "nipy.testing.tests.test_images.test_dims": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "nipy.load_image",
    "nipy.testing.funcfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "nipy.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.tests.scriptrunner": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "nipy.tests.scriptrunner._get_package",
    "str"
   ]
  },
  "type": "module"
 },
 "nipy.tests.scriptrunner.MY_PACKAGE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.tests.scriptrunner.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.ScriptRunner": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nipy.tests.scriptrunner.ScriptRunner.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nipy.tests.scriptrunner.MY_PACKAGE",
    "nipy.tests.scriptrunner.local_module_dir",
    "nipy.tests.scriptrunner.local_script_dir",
    "nipy.tests.scriptrunner.os"
   ]
  },
  "type": "function"
 },
 "nipy.tests.scriptrunner.ScriptRunner.run_command": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "list",
    "nipy.tests.scriptrunner.os",
    "nipy.tests.scriptrunner.string_types",
    "nipy.tests.scriptrunner.sys",
    "opp",
    "os.path.join",
    "os.path.pathsep",
    "print",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "nipy.tests.scriptrunner._get_package": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "__name__.split",
    "__package__",
    "globals"
   ]
  },
  "type": "function"
 },
 "nipy.tests.scriptrunner.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.local_module_dir": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "__import__",
    "nipy.tests.scriptrunner.os",
    "os.path.dirname",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "nipy.tests.scriptrunner.local_script_dir": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "__import__",
    "nipy.tests.scriptrunner.MY_PACKAGE",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "nipy.tests.scriptrunner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.pathsep": {
  "data": {
   "shadows": "os.path.pathsep"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "nipy.tests.scriptrunner.string_types": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nipy.tests.scriptrunner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts": {
  "data": {
   "symbols_in_volume": [
    "ScriptRunner",
    "nibabel.optpkg.optional_package",
    "nipy.testing.decorators.make_label_dec",
    "nipy.tests.test_scripts.runner",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "module"
 },
 "nipy.tests.test_scripts.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.decorators": {
  "data": {
   "shadows": "numpy.testing.decorators"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.load_image": {
  "data": {
   "shadows": "nipy.load_image"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.make_label_dec": {
  "data": {
   "shadows": "nipy.testing.decorators.make_label_dec"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.needs_mpl": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nipy.tests.test_scripts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.optional_package": {
  "data": {
   "shadows": "nibabel.optpkg.optional_package"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.rollimg": {
  "data": {
   "shadows": "nipy.core.api.rollimg"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.run_command": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.tests.test_scripts.runner": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nipy.tests.test_scripts.save_image": {
  "data": {
   "shadows": "nipy.save_image"
  },
  "type": "import"
 },
 "nipy.tests.test_scripts.script_test": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.tests.test_scripts.test_nipy_3_4d": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.load_image",
    "nipy.tests.test_scripts.run_command",
    "nipy.tests.test_scripts.script_test",
    "nose.tools.assert_true",
    "numpy.testing.assert_almost_equal",
    "os.path.isfile",
    "range"
   ]
  },
  "type": "function"
 },
 "nipy.tests.test_scripts.test_nipy_4d_realign": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.tests.test_scripts.run_command",
    "nipy.tests.test_scripts.script_test",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.tests.test_scripts.test_nipy_diagnose": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.core.api.rollimg",
    "nipy.load_image",
    "nipy.save_image",
    "nipy.tests.test_scripts.needs_mpl",
    "nipy.tests.test_scripts.run_command",
    "nipy.tests.test_scripts.script_test",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.load",
    "numpy.testing.assert_almost_equal",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "nipy.tests.test_scripts.test_nipy_tsdiffana": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.tests.test_scripts.needs_mpl",
    "nipy.tests.test_scripts.os",
    "nipy.tests.test_scripts.run_command",
    "nipy.tests.test_scripts.script_test",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "nipy.utils": {
  "data": {
   "symbols_in_volume": [
    "nibabel.data.DataError",
    "nibabel.data.datasource_or_bomber",
    "nipy.testing.Tester",
    "nipy.utils.example_data",
    "nipy.utils.templates"
   ]
  },
  "type": "module"
 },
 "nipy.utils.DataError": {
  "data": {
   "shadows": "nibabel.data.DataError"
  },
  "type": "import"
 },
 "nipy.utils.HAVE_EXAMPLE_DATA": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nipy.utils.HAVE_TEMPLATES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nipy.utils.Tester": {
  "data": {
   "shadows": "nipy.testing.Tester"
  },
  "type": "import"
 },
 "nipy.utils.VisibleDeprecationWarning": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "nipy.utils._NoValue": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "nipy.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.arrays": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.arrays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.utils.arrays.strides_from": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.cumprod",
    "numpy.dtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nipy.utils.bench": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nipy.utils.compat3": {
  "data": {
   "symbols_in_volume": [
    "nipy.utils.compat3.py3",
    "nipy.utils.compat3.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "nipy.utils.compat3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.compat3.open4csv": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "nipy.utils.compat3.py3",
    "open"
   ]
  },
  "type": "function"
 },
 "nipy.utils.compat3.py3": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nipy.utils.compat3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.utils.compat3.to_str": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nipy.utils.datasource_or_bomber": {
  "data": {
   "shadows": "nibabel.data.datasource_or_bomber"
  },
  "type": "import"
 },
 "nipy.utils.example_data": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nipy.utils.make_datasource": {
  "data": {
   "shadows": "nibabel.data.make_datasource"
  },
  "type": "import"
 },
 "nipy.utils.perlpie": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.perlpie.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "nipy.utils.perlpie.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.perlpie.check_deps": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ImportError",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.utils.perlpie.grin": {
  "data": {
   "shadows": "grin"
  },
  "type": "import"
 },
 "nipy.utils.perlpie.main": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "__doc__.splitlines",
    "nipy.utils.perlpie.check_deps",
    "nipy.utils.perlpie.perl_dash_pie",
    "nipy.utils.perlpie.print_extended_help",
    "nipy.utils.perlpie.usage_doc",
    "optparse.OptionParser"
   ]
  },
  "type": "function"
 },
 "nipy.utils.perlpie.perl_dash_pie": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "nipy.utils.perlpie.subprocess",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "nipy.utils.perlpie.print_extended_help": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "__doc__",
    "print"
   ]
  },
  "type": "function"
 },
 "nipy.utils.perlpie.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "nipy.utils.perlpie.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nipy.utils.perlpie.usage_doc": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "nipy.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nipy.utils.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "nipy.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "nipy.utils.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "nipy.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "nipy.utils.skip_test": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.skip_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.skip_test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nipy.utils.skip_test.loader": {
  "data": {
   "shadows": "nose.loader"
  },
  "type": "import"
 },
 "nipy.utils.skip_test.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.utils.skip_test.skip_if_running_nose": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ImportError",
    "nipy.utils.skip_test.inspect",
    "nipy.utils.skip_test.nose",
    "nipy.utils.skip_test.sys",
    "nose.loader.__file__"
   ]
  },
  "type": "function"
 },
 "nipy.utils.skip_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nipy.utils.templates": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.utils.test": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nipy.utils.tests": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.tests.test_arrays": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.tests.test_arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.binary_type": {
  "data": {
   "shadows": "nipy.externals.six.binary_type"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_arrays.test_strides_from": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "nipy.externals.six.binary_type",
    "nipy.externals.six.text_type",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.empty",
    "numpy.sctypes.values",
    "numpy.void",
    "strides_from",
    "sum"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_arrays.text_type": {
  "data": {
   "shadows": "nipy.externals.six.text_type"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.tests.test_compat3.InTemporaryDirectory": {
  "data": {
   "shadows": "nibabel.tmpdirs.InTemporaryDirectory"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.asbytes": {
  "data": {
   "shadows": "nibabel.py3k.asbytes"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.asstr": {
  "data": {
   "shadows": "nibabel.py3k.asstr"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_compat3.test_open4csv": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "nibabel.tmpdirs.InTemporaryDirectory",
    "nipy.utils.tests.test_compat3.csv",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "open4csv"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_compat3.test_to_str": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nibabel.py3k.asbytes",
    "nibabel.py3k.asstr",
    "nose.tools.assert_equal",
    "to_str"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_compat3.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_skip_test": {
  "data": {
   "symbols_in_volume": [
    "nipy.utils.skip_test.skip_if_running_nose",
    "nipy.utils.tests.test_skip_test.nose"
   ]
  },
  "type": "module"
 },
 "nipy.utils.tests.test_skip_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_skip_test.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_skip_test.skip_if_running_nose": {
  "data": {
   "shadows": "nipy.utils.skip_test.skip_if_running_nose"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_skip_test.skip_test_raised": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nipy.utils.tests.test_skip_test.test_not_raise_at_run_time": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AssertionError",
    "nipy.utils.skip_test.skip_if_running_nose",
    "nipy.utils.tests.test_skip_test.nose"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_skip_test.test_raise_at_load_time": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nipy.utils.tests.test_skip_test.nose",
    "nipy.utils.tests.test_skip_test.skip_test_raised"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.tests.test_utilities.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "C",
    "gen",
    "is_iterable",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable.C": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable.C.__iter__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable.C.__next__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable.func": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_is_iterable.gen": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_is_numlike": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "is_numlike",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.complex128",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "nipy.utils.tests.test_utilities.test_seq_prod": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "seq_prod"
   ]
  },
  "type": "function"
 },
 "nipy.utils.utilities": {
  "data": {},
  "type": "module"
 },
 "nipy.utils.utilities.is_iterable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "nipy.utils.utilities.is_numlike": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "nipy.utils.utilities.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "nipy.utils.utilities.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "nipy.utils.utilities.seq_prod": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "functools.reduce",
    "operator.mul"
   ]
  },
  "type": "function"
 },
 "nipy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}