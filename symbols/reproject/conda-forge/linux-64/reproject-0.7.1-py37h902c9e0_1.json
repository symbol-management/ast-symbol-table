{
 "reproject": {
  "data": {},
  "type": "module"
 },
 "reproject._astropy_init": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "NameError",
    "TypeError",
    "__package__",
    "astropy.config.configuration.ConfigurationDefaultMissingError",
    "astropy.config.configuration.ConfigurationDefaultMissingWarning",
    "astropy.config.configuration.update_default_config",
    "astropy.tests.runner.TestRunner.make_test_runner_in",
    "reproject._astropy_init.__all__",
    "reproject._astropy_init.builtins",
    "reproject._astropy_init.config_dir",
    "reproject._astropy_init.config_template",
    "reproject._astropy_init.os",
    "reproject._astropy_init.test",
    "reproject._astropy_init.wmsg",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "reproject._astropy_init.ConfigurationDefaultMissingError": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingError"
  },
  "type": "import"
 },
 "reproject._astropy_init.ConfigurationDefaultMissingWarning": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingWarning"
  },
  "type": "import"
 },
 "reproject._astropy_init.TestRunner": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunner"
  },
  "type": "import"
 },
 "reproject._astropy_init.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "reproject._astropy_init.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "reproject._astropy_init.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "reproject._astropy_init.config_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "reproject._astropy_init.config_template": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "reproject._astropy_init.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject._astropy_init.test": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "reproject._astropy_init.update_default_config": {
  "data": {
   "shadows": "astropy.config.configuration.update_default_config"
  },
  "type": "import"
 },
 "reproject._astropy_init.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "reproject._astropy_init.wmsg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "reproject.adaptive": {
  "data": {},
  "type": "module"
 },
 "reproject.adaptive.core": {
  "data": {},
  "type": "module"
 },
 "reproject.adaptive.core.CoordinateTransformer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "reproject.adaptive.core.CoordinateTransformer.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "efficient_pixel_to_pixel_with_roundtrip",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.core.CoordinateTransformer.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "reproject.adaptive.core.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "reproject.adaptive.core._reproject_adaptive_2d": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "map_coordinates",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.zeros",
    "reproject.adaptive.core.CoordinateTransformer"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "reproject.adaptive.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "reproject.adaptive.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.adaptive.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "reproject.adaptive.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "reproject.adaptive.high_level": {
  "data": {
   "symbols_in_volume": [
    "reproject.adaptive.high_level.ORDER"
   ]
  },
  "type": "module"
 },
 "reproject.adaptive.high_level.ORDER": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "reproject.adaptive.high_level.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "reproject.adaptive.high_level.reproject_adaptive": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_reproject_adaptive_2d",
    "isinstance",
    "parse_input_data",
    "parse_output_projection",
    "reproject.adaptive.high_level.ORDER",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.adaptive.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "reproject.adaptive.tests.test_core.os"
   ]
  },
  "type": "module"
 },
 "reproject.adaptive.tests.test_core.DATA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "reproject.adaptive.tests.test_core.HighLevelWCSWrapper": {
  "data": {
   "shadows": "astropy.wcs.wcsapi.HighLevelWCSWrapper"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.Map": {
  "data": {
   "shadows": "sunpy.map.Map"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.SlicedLowLevelWCS": {
  "data": {
   "shadows": "astropy.wcs.wcsapi.SlicedLowLevelWCS"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.as_high_level_wcs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Ellipsis",
    "astropy.wcs.wcsapi.HighLevelWCSWrapper",
    "astropy.wcs.wcsapi.SlicedLowLevelWCS"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.get_body_heliographic_stonyhurst": {
  "data": {
   "shadows": "sunpy.coordinates.ephemeris.get_body_heliographic_stonyhurst"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.adaptive.tests.test_core.test_reproject_adaptive_2d": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.wcs.WCS",
    "numpy.nansum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "reproject.adaptive.tests.test_core.as_high_level_wcs",
    "reproject.adaptive.tests.test_core.pytest",
    "reproject_adaptive"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.tests.test_core.test_reproject_adaptive_2d_rotated": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.wcs.WCS",
    "numpy.zeros",
    "reproject.adaptive.tests.test_core.pytest",
    "reproject_adaptive"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.tests.test_core.test_reproject_adaptive_roundtrip": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "array_footprint_to_hdulist",
    "astropy.units.arcsec.to",
    "astropy.units.deg",
    "reproject.adaptive.tests.test_core.DATA",
    "reproject.adaptive.tests.test_core.os",
    "reproject.adaptive.tests.test_core.pytest",
    "reproject_adaptive",
    "sunpy.coordinates.ephemeris.get_body_heliographic_stonyhurst",
    "sunpy.map.Map"
   ]
  },
  "type": "function"
 },
 "reproject.adaptive.tests.test_core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "reproject.array_utils": {
  "data": {},
  "type": "module"
 },
 "reproject.array_utils.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "reproject.array_utils.map_coordinates": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "numpy.zeros",
    "range",
    "reproject.array_utils.pad_edge_1",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "reproject.array_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.array_utils.pad_edge_1": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.pad"
   ]
  },
  "type": "function"
 },
 "reproject.array_utils.scipy_map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "reproject.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "reproject.conftest.os"
   ]
  },
  "type": "module"
 },
 "reproject.conftest.ASTROPY_HEADER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "reproject.conftest.PYTEST_HEADER_MODULES": {
  "data": {
   "shadows": "pytest_astropy_header.display.PYTEST_HEADER_MODULES"
  },
  "type": "import"
 },
 "reproject.conftest.TESTED_VERSIONS": {
  "data": {
   "shadows": "pytest_astropy_header.display.TESTED_VERSIONS"
  },
  "type": "import"
 },
 "reproject.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.conftest.pytest_configure": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pytest_astropy_header.display.PYTEST_HEADER_MODULES",
    "pytest_astropy_header.display.PYTEST_HEADER_MODULES.pop",
    "pytest_astropy_header.display.TESTED_VERSIONS",
    "reproject.conftest.ASTROPY_HEADER",
    "reproject.conftest.os"
   ]
  },
  "type": "function"
 },
 "reproject.healpix": {
  "data": {},
  "type": "module"
 },
 "reproject.healpix.core": {
  "data": {
   "symbols_in_volume": [
    "reproject.healpix.core.ORDER"
   ]
  },
  "type": "module"
 },
 "reproject.healpix.core.HEALPix": {
  "data": {
   "shadows": "astropy_healpix.HEALPix"
  },
  "type": "import"
 },
 "reproject.healpix.core.ORDER": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "reproject.healpix.core.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "reproject.healpix.core.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "reproject.healpix.core.healpix_to_image": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "astropy_healpix.HEALPix",
    "astropy_healpix.npix_to_nside",
    "bool",
    "float",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.indices",
    "numpy.ones",
    "reproject.healpix.core.ORDER",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.core.image_to_healpix": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy_healpix.HEALPix",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.isnan",
    "numpy.nan",
    "reproject.healpix.core.ORDER",
    "scipy.ndimage.map_coordinates",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.core.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "reproject.healpix.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.healpix.core.npix_to_nside": {
  "data": {
   "shadows": "astropy_healpix.npix_to_nside"
  },
  "type": "import"
 },
 "reproject.healpix.high_level": {
  "data": {},
  "type": "module"
 },
 "reproject.healpix.high_level.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "reproject.healpix.high_level.reproject_from_healpix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "healpix_to_image",
    "parse_input_healpix_data",
    "parse_output_projection"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.high_level.reproject_to_healpix": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError",
    "has_celestial",
    "image_to_healpix",
    "parse_coord_system",
    "parse_input_data"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.healpix.tests.test_healpix": {
  "data": {
   "symbols_in_volume": [
    "reproject.healpix.tests.test_healpix.os"
   ]
  },
  "type": "module"
 },
 "reproject.healpix.tests.test_healpix.DATA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "reproject.healpix.tests.test_healpix.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.get_reference_header": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.io.fits.Header"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests.test_healpix.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.nside_to_npix": {
  "data": {
   "shadows": "astropy_healpix.nside_to_npix"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_healpix.test_reproject_file": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.io.fits.getdata",
    "numpy.testing.assert_allclose",
    "reproject.healpix.tests.test_healpix.DATA",
    "reproject.healpix.tests.test_healpix.get_reference_header",
    "reproject.healpix.tests.test_healpix.os",
    "reproject_from_healpix"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests.test_healpix.test_reproject_healpix_to_image_round_trip": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "as_high_level_wcs",
    "astropy.wcs.WCS",
    "astropy_healpix.nside_to_npix",
    "numpy.random.uniform",
    "numpy.testing.assert_array_equal",
    "reproject.healpix.tests.test_healpix.get_reference_header",
    "reproject.healpix.tests.test_healpix.itertools",
    "reproject.healpix.tests.test_healpix.pytest",
    "reproject_from_healpix",
    "reproject_to_healpix"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests.test_healpix.test_reproject_invalid_order": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "reproject.healpix.tests.test_healpix.DATA",
    "reproject.healpix.tests.test_healpix.get_reference_header",
    "reproject.healpix.tests.test_healpix.os",
    "reproject.healpix.tests.test_healpix.pytest",
    "reproject_from_healpix"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "reproject.healpix.tests.test_utils.FK5": {
  "data": {
   "shadows": "astropy.coordinates.FK5"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_utils.Galactic": {
  "data": {
   "shadows": "astropy.coordinates.Galactic"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_utils.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.healpix.tests.test_utils.test_parse_coord_system": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.FK5",
    "astropy.coordinates.Galactic",
    "isinstance",
    "parse_coord_system",
    "reproject.healpix.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.tests.test_utils.test_parse_input_healpix_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.Column",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "parse_input_healpix_data",
    "reproject.healpix.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.utils": {
  "data": {
   "symbols_in_volume": [
    "astropy.coordinates.Galactic",
    "astropy.coordinates.ICRS"
   ]
  },
  "type": "module"
 },
 "reproject.healpix.utils.BaseCoordinateFrame": {
  "data": {
   "shadows": "astropy.coordinates.BaseCoordinateFrame"
  },
  "type": "import"
 },
 "reproject.healpix.utils.BinTableHDU": {
  "data": {
   "shadows": "astropy.io.fits.BinTableHDU"
  },
  "type": "import"
 },
 "reproject.healpix.utils.FRAMES": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "reproject.healpix.utils.Galactic": {
  "data": {
   "shadows": "astropy.coordinates.Galactic"
  },
  "type": "import"
 },
 "reproject.healpix.utils.ICRS": {
  "data": {
   "shadows": "astropy.coordinates.ICRS"
  },
  "type": "import"
 },
 "reproject.healpix.utils.TableHDU": {
  "data": {
   "shadows": "astropy.io.fits.TableHDU"
  },
  "type": "import"
 },
 "reproject.healpix.utils.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.healpix.utils.frame_transform_graph": {
  "data": {
   "shadows": "astropy.coordinates.frame_transform_graph"
  },
  "type": "import"
 },
 "reproject.healpix.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.healpix.utils.parse_coord_system": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.BaseCoordinateFrame",
    "astropy.coordinates.frame_transform_graph.lookup_name",
    "isinstance",
    "reproject.healpix.utils.FRAMES",
    "str",
    "system_new"
   ]
  },
  "type": "function"
 },
 "reproject.healpix.utils.parse_input_healpix_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "astropy.io.fits.BinTableHDU",
    "astropy.io.fits.TableHDU",
    "astropy.io.fits.open",
    "isinstance",
    "numpy.ndarray",
    "reproject.healpix.utils.parse_coord_system",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation": {
  "data": {},
  "type": "module"
 },
 "reproject.interpolation.core": {
  "data": {},
  "type": "module"
 },
 "reproject.interpolation.core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.interpolation.core._reproject_full": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "efficient_pixel_to_pixel_with_roundtrip",
    "float",
    "map_coordinates",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.isnan",
    "numpy.meshgrid",
    "numpy.nan",
    "reproject.interpolation.core._validate_array_out",
    "reproject.interpolation.core._validate_wcs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.core._validate_array_out": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.core._validate_wcs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.WCS",
    "has_celestial",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.interpolation.high_level": {
  "data": {
   "symbols_in_volume": [
    "reproject.interpolation.high_level.ORDER"
   ]
  },
  "type": "module"
 },
 "reproject.interpolation.high_level.ORDER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "reproject.interpolation.high_level.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "reproject.interpolation.high_level.deprecated_renamed_argument": {
  "data": {
   "shadows": "astropy.utils.deprecated_renamed_argument"
  },
  "type": "import"
 },
 "reproject.interpolation.high_level.reproject_interp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_reproject_full",
    "astropy.utils.deprecated_renamed_argument",
    "isinstance",
    "parse_input_data",
    "parse_output_projection",
    "reproject.interpolation.high_level.ORDER",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.interpolation.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "list",
    "reproject.interpolation.tests.test_core.AXIS_ORDER",
    "reproject.interpolation.tests.test_core.COMBINATIONS",
    "reproject.interpolation.tests.test_core.itertools",
    "reproject.interpolation.tests.test_core.os"
   ]
  },
  "type": "module"
 },
 "reproject.interpolation.tests.test_core.AXIS_ORDER": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "reproject.interpolation.tests.test_core.COMBINATIONS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "reproject.interpolation.tests.test_core.DATA": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "reproject.interpolation.tests.test_core.HighLevelWCSWrapper": {
  "data": {
   "shadows": "astropy.wcs.wcsapi.HighLevelWCSWrapper"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.Map": {
  "data": {
   "shadows": "sunpy.map.Map"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.SlicedLowLevelWCS": {
  "data": {
   "shadows": "astropy.wcs.wcsapi.SlicedLowLevelWCS"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.as_high_level_wcs": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Ellipsis",
    "astropy.wcs.wcsapi.HighLevelWCSWrapper",
    "astropy.wcs.wcsapi.SlicedLowLevelWCS"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.get_body_heliographic_stonyhurst": {
  "data": {
   "shadows": "sunpy.coordinates.ephemeris.get_body_heliographic_stonyhurst"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.interpolation.tests.test_core.test_4d_fails": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.zeros",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_celestial_mismatch_2d": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_celestial_mismatch_3d": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_different_wcs_types": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.arange",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_identity_with_offset": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "numpy.nan",
    "numpy.pad",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_inequal_wcs_dims": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.arange",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_mwpan_car_to_mol": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.io.fits.Header",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.wcs.WCS",
    "numpy.float",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_naxis_mismatch": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.WCS",
    "numpy.ones",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_reproject_3d_celestial_correctness_ra2gal": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_reproject_celestial_2d_gal2equ": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.as_high_level_wcs",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_reproject_celestial_3d_equ2gal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "numpy.array",
    "numpy.transpose",
    "reproject.interpolation.tests.test_core.COMBINATIONS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.as_high_level_wcs",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_reproject_roundtrip": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "array_footprint_to_hdulist",
    "astropy.units.arcsec.to",
    "astropy.units.deg",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp",
    "sunpy.coordinates.ephemeris.get_body_heliographic_stonyhurst",
    "sunpy.map.Map"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_reproject_with_output_array": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.empty",
    "numpy.ones",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_slice_reprojection": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_small_cutout": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.as_high_level_wcs",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_small_cutout_outside": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "numpy.isnan",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.test_spectral_mismatch_3d": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "reproject.interpolation.tests.test_core.DATA",
    "reproject.interpolation.tests.test_core.os",
    "reproject.interpolation.tests.test_core.pytest",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.interpolation.tests.test_core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "reproject.mosaicking": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.background": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.background.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "reproject.mosaicking.background.determine_offset_matrix": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.any",
    "numpy.median",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.background.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "reproject.mosaicking.background.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.background.solve_corrections_sgd": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "math.exp",
    "numpy.allclose",
    "numpy.arange",
    "numpy.isnan",
    "numpy.mean",
    "numpy.nanmean",
    "numpy.random.shuffle",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.coadd": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.coadd.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "reproject.mosaicking.coadd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.coadd.reproject_and_coadd": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError",
    "ReprojectedArraySubset",
    "ValueError",
    "determine_offset_matrix",
    "int",
    "len",
    "max",
    "min",
    "numpy.any",
    "numpy.array",
    "numpy.ceil",
    "numpy.errstate",
    "numpy.floor",
    "numpy.isnan",
    "numpy.nan_to_num",
    "numpy.zeros",
    "parse_input_data",
    "parse_input_weights",
    "parse_output_projection",
    "range",
    "reproject_function",
    "solve_corrections_sgd",
    "zip"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__add__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "reproject.mosaicking.subset_array.operator"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__mul__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "reproject.mosaicking.subset_array.operator"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__repr__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__sub__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "reproject.mosaicking.subset_array.operator"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.__truediv__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "reproject.mosaicking.subset_array.operator"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset._operation": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "max",
    "min",
    "op",
    "reproject.mosaicking.subset_array.ReprojectedArraySubset"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.overlaps": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.shape": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.ReprojectedArraySubset.view_in_original_array": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.subset_array.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "reproject.mosaicking.subset_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.tests.test_background": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.tests.test_background.CASES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "reproject.mosaicking.tests.test_background.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_background.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_background.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_background.test_solve_corrections_sgd": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.random.uniform",
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_background.CASES",
    "reproject.mosaicking.tests.test_background.pytest",
    "solve_corrections_sgd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd": {
  "data": {
   "symbols_in_volume": [
    "reproject.mosaicking.tests.test_coadd.os"
   ]
  },
  "type": "module"
 },
 "reproject.mosaicking.tests.test_coadd.ATOL": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "reproject.mosaicking.tests.test_coadd.DATA": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "reproject.mosaicking.tests.test_coadd.HEADER_SOLAR_OUT": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "reproject.mosaicking.tests.test_coadd.Header": {
  "data": {
   "shadows": "astropy.io.fits.Header"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.Map": {
  "data": {
   "shadows": "sunpy.map.Map"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd._get_tiles": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd._nonoverlapping_views": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd._overlapping_views": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.setup_method": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.test_coadd_background_matching": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_coadd.ATOL",
    "reproject.mosaicking.tests.test_coadd.random",
    "reproject.mosaicking.tests.test_coadd.reproject_function",
    "reproject_and_coadd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.test_coadd_background_matching_with_nan": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_coadd.ATOL",
    "reproject.mosaicking.tests.test_coadd.random",
    "reproject.mosaicking.tests.test_coadd.reproject_function",
    "reproject_and_coadd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.test_coadd_no_overlap": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_coadd.ATOL",
    "reproject.mosaicking.tests.test_coadd.pytest",
    "reproject.mosaicking.tests.test_coadd.reproject_function",
    "reproject_and_coadd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.test_coadd_with_overlap": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_coadd.ATOL",
    "reproject.mosaicking.tests.test_coadd.reproject_function",
    "reproject_and_coadd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.TestReprojectAndCoAdd.test_coadd_with_weights": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_coadd.ATOL",
    "reproject.mosaicking.tests.test_coadd.reproject_function",
    "reproject_and_coadd"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.all_coordinates_from_map": {
  "data": {
   "shadows": "sunpy.map.all_coordinates_from_map"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_coadd.reproject_function": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "reproject.mosaicking.tests.test_coadd.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_coadd.test_coadd_solar_map": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "array_footprint_to_hdulist",
    "astropy.io.fits.Header.fromstring",
    "astropy.wcs.WCS",
    "map",
    "numpy.nanmax",
    "reproject.mosaicking.tests.test_coadd.DATA",
    "reproject.mosaicking.tests.test_coadd.HEADER_SOLAR_OUT",
    "reproject.mosaicking.tests.test_coadd.os",
    "reproject.mosaicking.tests.test_coadd.pytest",
    "reproject_and_coadd",
    "sunpy.map.Map",
    "sunpy.map.all_coordinates_from_map",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.setup_method": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ReprojectedArraySubset",
    "int",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_arithmetic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "op",
    "reproject.mosaicking.tests.test_subset_array.operator",
    "reproject.mosaicking.tests.test_subset_array.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_arithmetic_nooverlap": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_overlaps": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_repr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_shape": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.TestReprojectedArraySubset.test_view_in_original_array": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_subset_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_subset_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_subset_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_subset_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.FK5": {
  "data": {
   "shadows": "astropy.coordinates.FK5"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.Galactic": {
  "data": {
   "shadows": "astropy.coordinates.Galactic"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.SHAPELY_INSTALLED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.setup_method": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_auto_rotate": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.coordinates.Galactic",
    "astropy.coordinates.SkyCoord",
    "find_optimal_celestial_wcs",
    "numpy.isnan",
    "numpy.testing.assert_allclose",
    "reproject.mosaicking.tests.test_wcs_helpers.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_auto_rotate_systematic": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.wcs.utils.pixel_to_skycoord",
    "astropy.wcs.utils.skycoord_to_pixel",
    "find_optimal_celestial_wcs",
    "numpy.array",
    "numpy.cos",
    "numpy.linspace",
    "numpy.radians",
    "numpy.sin",
    "numpy.testing.assert_equal",
    "reproject.mosaicking.tests.test_wcs_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_frame_projection": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "astropy.coordinates.Galactic",
    "astropy.coordinates.SkyCoord",
    "find_optimal_celestial_wcs",
    "numpy.isnan",
    "numpy.testing.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_frame_str": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "find_optimal_celestial_wcs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_identity": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.coordinates.FK5",
    "find_optimal_celestial_wcs",
    "numpy.testing.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_invalid_array_shape": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "find_optimal_celestial_wcs",
    "numpy.ones",
    "reproject.mosaicking.tests.test_wcs_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_invalid_not_celestial": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "find_optimal_celestial_wcs",
    "reproject.mosaicking.tests.test_wcs_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_invalid_wcs_shape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.WCS",
    "find_optimal_celestial_wcs",
    "reproject.mosaicking.tests.test_wcs_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_multiple_resolution": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "copy.deepcopy",
    "find_optimal_celestial_wcs",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_multiple_size": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.coordinates.FK5",
    "copy.deepcopy",
    "find_optimal_celestial_wcs",
    "numpy.testing.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.TestOptimalWCS.test_resolution": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "astropy.units.arcmin",
    "find_optimal_celestial_wcs",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.shapely": {
  "data": {
   "shadows": "shapely"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "reproject.mosaicking.tests.test_wcs_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers": {
  "data": {},
  "type": "module"
 },
 "reproject.mosaicking.wcs_helpers.MultiPoint": {
  "data": {
   "shadows": "shapely.geometry.MultiPoint"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "reproject.mosaicking.wcs_helpers.celestial_frame_to_wcs": {
  "data": {
   "shadows": "astropy.wcs.utils.celestial_frame_to_wcs"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.find_optimal_celestial_wcs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.coordinates.SkyCoord",
    "astropy.coordinates.frame_transform_graph.lookup_name",
    "astropy.units.deg",
    "astropy.wcs.utils.celestial_frame_to_wcs",
    "astropy.wcs.utils.pixel_to_skycoord",
    "astropy.wcs.utils.proj_plane_pixel_scales",
    "astropy.wcs.utils.skycoord_to_pixel",
    "astropy.wcs.utils.wcs_to_celestial_frame",
    "int",
    "isinstance",
    "list",
    "numpy.abs",
    "numpy.arctan2",
    "numpy.argsort",
    "numpy.array",
    "numpy.cos",
    "numpy.min",
    "numpy.pi",
    "numpy.sin",
    "parse_input_data",
    "round",
    "shapely.geometry.MultiPoint",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "reproject.mosaicking.wcs_helpers.frame_transform_graph": {
  "data": {
   "shadows": "astropy.coordinates.frame_transform_graph"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.proj_plane_pixel_scales": {
  "data": {
   "shadows": "astropy.wcs.utils.proj_plane_pixel_scales"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "reproject.mosaicking.wcs_helpers.wcs_to_celestial_frame": {
  "data": {
   "shadows": "astropy.wcs.utils.wcs_to_celestial_frame"
  },
  "type": "import"
 },
 "reproject.spherical_intersect": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.core": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.core.Pool": {
  "data": {
   "shadows": "multiprocessing.Pool"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core._init_worker": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "reproject.spherical_intersect.core.signal"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.core._reproject_celestial": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "aca",
    "astropy.units.deg",
    "astropy.wcs.WCS",
    "astropy.wcs.utils.proj_plane_pixel_area",
    "bool",
    "float",
    "int",
    "isinstance",
    "multiprocessing.Pool",
    "multiprocessing.cpu_count",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.errstate",
    "numpy.meshgrid",
    "range",
    "reproject.spherical_intersect.core._init_worker",
    "reproject.spherical_intersect.core._reproject_slice",
    "reproject.spherical_intersect.core.warnings",
    "sum",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.core._reproject_slice": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_reproject_slice_cython"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.core.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.proj_plane_pixel_area": {
  "data": {
   "shadows": "astropy.wcs.utils.proj_plane_pixel_area"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.high_level": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.high_level.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.high_level.reproject_exact": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError",
    "_reproject_celestial",
    "has_celestial",
    "parse_input_data",
    "parse_output_projection"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.overlap": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.overlap.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.overlap.compute_overlap": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "_compute_overlap",
    "numpy.ascontiguousarray",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.overlap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.setup_package": {
  "data": {
   "symbols_in_volume": [
    "reproject.spherical_intersect.setup_package.os"
   ]
  },
  "type": "module"
 },
 "reproject.spherical_intersect.setup_package.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.setup_package.REPROJECT_ROOT": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.setup_package.get_extensions": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.core.Extension",
    "int",
    "numpy.get_include",
    "reproject.spherical_intersect.setup_package.REPROJECT_ROOT",
    "reproject.spherical_intersect.setup_package.os"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.setup_package.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.tests.test_high_level": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.tests.test_high_level.TestReprojectExact": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "reproject.spherical_intersect.tests.test_high_level.TestReprojectExact.setup_class": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.TestReprojectExact.test_array_header": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "reproject_exact"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.TestReprojectExact.test_array_wcs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "reproject_exact"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.TestReprojectExact.test_parallel_option": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "reproject.spherical_intersect.tests.test_high_level.pytest",
    "reproject_exact"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_high_level.test_identity": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "reproject_exact"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.test_reproject_precision_warning": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "UserWarning",
    "astropy.wcs.WCS",
    "len",
    "numpy.zeros",
    "reproject.spherical_intersect.tests.test_high_level.pytest",
    "reproject.spherical_intersect.tests.test_high_level.warnings",
    "reproject_exact"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_high_level.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_overlap": {
  "data": {},
  "type": "module"
 },
 "reproject.spherical_intersect.tests.test_overlap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_overlap.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_overlap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_overlap.test_full_overlap": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "compute_overlap",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_overlap.test_overlap_direction": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "compute_overlap",
    "itertools.product",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose",
    "reproject.spherical_intersect.tests.test_overlap.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_overlap.test_partial_overlap": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compute_overlap",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_reproject": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "reproject.spherical_intersect.tests.test_reproject.DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.tests.test_reproject.INPUT_HDR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.tests.test_reproject.MONTAGE_REF": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.tests.test_reproject.OUTPUT_HDR": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "reproject.spherical_intersect.tests.test_reproject.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_reproject.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_reproject.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_reproject.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_reproject.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.spherical_intersect.tests.test_reproject.test_reproject_celestial_consistency": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_reproject_celestial",
    "astropy.io.fits.Header.fromstring",
    "astropy.wcs.WCS",
    "numpy.testing.assert_allclose",
    "reproject.spherical_intersect.tests.test_reproject.DATA",
    "reproject.spherical_intersect.tests.test_reproject.INPUT_HDR",
    "reproject.spherical_intersect.tests.test_reproject.OUTPUT_HDR"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_reproject.test_reproject_celestial_montage": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_reproject_celestial",
    "as_high_level_wcs",
    "astropy.io.fits.Header.fromstring",
    "astropy.wcs.WCS",
    "numpy.testing.assert_allclose",
    "reproject.spherical_intersect.tests.test_reproject.DATA",
    "reproject.spherical_intersect.tests.test_reproject.INPUT_HDR",
    "reproject.spherical_intersect.tests.test_reproject.MONTAGE_REF",
    "reproject.spherical_intersect.tests.test_reproject.OUTPUT_HDR",
    "reproject.spherical_intersect.tests.test_reproject.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_reproject.test_reproject_celestial_slices_2d": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_reproject_celestial",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "reproject.spherical_intersect.tests.test_reproject.test_reproject_flipping": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_reproject_celestial",
    "astropy.io.fits.Header.fromstring",
    "astropy.wcs.WCS",
    "numpy.testing.assert_allclose",
    "reproject.spherical_intersect.tests.test_reproject.DATA",
    "reproject.spherical_intersect.tests.test_reproject.INPUT_HDR",
    "reproject.spherical_intersect.tests.test_reproject.OUTPUT_HDR"
   ]
  },
  "type": "function"
 },
 "reproject.tests": {
  "data": {},
  "type": "module"
 },
 "reproject.tests.helpers": {
  "data": {},
  "type": "module"
 },
 "reproject.tests.helpers.array_footprint_to_hdulist": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU"
   ]
  },
  "type": "function"
 },
 "reproject.tests.helpers.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level": {
  "data": {
   "symbols_in_volume": [
    "numpy.dtype",
    "reproject.tests.test_high_level.ALL_DTYPES"
   ]
  },
  "type": "module"
 },
 "reproject.tests.test_high_level.ALL_DTYPES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "reproject.tests.test_high_level.ALL_MODES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "reproject.tests.test_high_level.IDENTITY_TEST_HDR": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "reproject.tests.test_high_level.INPUT_HDR": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "reproject.tests.test_high_level.TestReproject": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "reproject.tests.test_high_level.TestReproject.setup_method": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromtextfile",
    "astropy.io.fits.ImageHDU",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_array_header_header": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "reproject.tests.test_high_level.reproject_function"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_array_wcs_header": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "reproject.tests.test_high_level.pytest",
    "reproject.tests.test_high_level.reproject_function"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_array_wcs_wcs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "reproject.tests.test_high_level.reproject_function"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_hdu_header": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "reproject.tests.test_high_level.pytest",
    "reproject.tests.test_high_level.reproject_function",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_hdu_wcs": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "reproject.tests.test_high_level.reproject_function"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.TestReproject.test_return_footprint": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "reproject.tests.test_high_level.reproject_function"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.tests.test_high_level.reproject_function": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "reproject.tests.test_high_level.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.test_identity_projection": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromstring",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "reproject.tests.test_high_level.ALL_MODES",
    "reproject.tests.test_high_level.IDENTITY_TEST_HDR",
    "reproject.tests.test_high_level.pytest",
    "reproject_adaptive",
    "reproject_exact",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_high_level.test_surface_brightness": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "astropy.io.fits.Header.fromstring",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "reproject.tests.test_high_level.ALL_DTYPES",
    "reproject.tests.test_high_level.ALL_MODES",
    "reproject.tests.test_high_level.INPUT_HDR",
    "reproject.tests.test_high_level.itertools",
    "reproject.tests.test_high_level.pytest",
    "reproject_adaptive",
    "reproject_exact",
    "reproject_interp"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "reproject.tests.test_utils.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "reproject.tests.test_utils.test_parse_input_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.io.fits.ImageHDU",
    "astropy.nddata.NDData",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "parse_input_data",
    "reproject.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.tests.test_utils.test_parse_output_projection": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.Header.fromtextfile",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.wcs.WCS",
    "parse_output_projection",
    "reproject.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "reproject.utils": {
  "data": {},
  "type": "module"
 },
 "reproject.utils.BaseHighLevelWCS": {
  "data": {
   "shadows": "astropy.wcs.wcsapi.BaseHighLevelWCS"
  },
  "type": "import"
 },
 "reproject.utils.CompImageHDU": {
  "data": {
   "shadows": "astropy.io.fits.CompImageHDU"
  },
  "type": "import"
 },
 "reproject.utils.HDUList": {
  "data": {
   "shadows": "astropy.io.fits.HDUList"
  },
  "type": "import"
 },
 "reproject.utils.Header": {
  "data": {
   "shadows": "astropy.io.fits.Header"
  },
  "type": "import"
 },
 "reproject.utils.ImageHDU": {
  "data": {
   "shadows": "astropy.io.fits.ImageHDU"
  },
  "type": "import"
 },
 "reproject.utils.PrimaryHDU": {
  "data": {
   "shadows": "astropy.io.fits.PrimaryHDU"
  },
  "type": "import"
 },
 "reproject.utils.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.utils.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "reproject.utils.astropy.nddata": {
  "data": {
   "shadows": "astropy.nddata"
  },
  "type": "import"
 },
 "reproject.utils.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "reproject.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.utils.parse_input_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.CompImageHDU",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.Header",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "isinstance",
    "len",
    "numpy.ndarray",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.utils.parse_input_weights": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.CompImageHDU",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU",
    "astropy.io.fits.open",
    "isinstance",
    "len",
    "numpy.ndarray",
    "reproject.utils.parse_input_data",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.utils.parse_output_projection": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "astropy.io.fits.Header",
    "astropy.io.fits.open",
    "astropy.wcs.WCS",
    "astropy.wcs.wcsapi.BaseHighLevelWCS",
    "isinstance",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "reproject.version": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "setuptools_scm.get_version"
   ]
  },
  "type": "module"
 },
 "reproject.version.get_version": {
  "data": {
   "shadows": "setuptools_scm.get_version"
  },
  "type": "import"
 },
 "reproject.version.version": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "reproject.wcs_utils": {
  "data": {},
  "type": "module"
 },
 "reproject.wcs_utils.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "reproject.wcs_utils.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "reproject.wcs_utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "reproject.wcs_utils.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "reproject.wcs_utils.efficient_pixel_to_pixel": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "numpy.isscalar",
    "range",
    "reproject.wcs_utils.pixel_to_pixel_correlation_matrix",
    "reproject.wcs_utils.split_matrix",
    "reproject.wcs_utils.unbroadcast",
    "tuple"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.efficient_pixel_to_pixel_with_roundtrip": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "reproject.wcs_utils.efficient_pixel_to_pixel"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.has_celestial": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.wcs.WCS",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "reproject.wcs_utils.pixel_to_pixel_correlation_matrix": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.matmul",
    "reproject.wcs_utils.pixel_to_world_correlation_matrix"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.pixel_to_world_correlation_matrix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "range",
    "reproject.wcs_utils.unique_with_order_preserved"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.split_matrix": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.unbroadcast": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "reproject.wcs_utils.unique_with_order_preserved": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 }
}