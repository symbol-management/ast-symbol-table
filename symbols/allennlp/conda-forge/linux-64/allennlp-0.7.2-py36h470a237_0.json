{
 "*": {
  "data": {
   "imports": [
    "allennlp.semparse.contexts.atis_tables"
   ]
  },
  "type": "star-import"
 },
 "allennlp": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "allennlp.sys",
    "allennlp.warnings",
    "print"
   ]
  },
  "type": "module"
 },
 "allennlp.__version__": {
  "data": {
   "shadows": "allennlp.version.VERSION"
  },
  "type": "import"
 },
 "allennlp.commands": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.Configure": {
  "data": {
   "shadows": "allennlp.commands.configure.Configure"
  },
  "type": "import"
 },
 "allennlp.commands.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.DryRun": {
  "data": {
   "shadows": "allennlp.commands.dry_run.DryRun"
  },
  "type": "import"
 },
 "allennlp.commands.Elmo": {
  "data": {
   "shadows": "allennlp.commands.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.commands.Evaluate": {
  "data": {
   "shadows": "allennlp.commands.evaluate.Evaluate"
  },
  "type": "import"
 },
 "allennlp.commands.FindLearningRate": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.FindLearningRate"
  },
  "type": "import"
 },
 "allennlp.commands.FineTune": {
  "data": {
   "shadows": "allennlp.commands.fine_tune.FineTune"
  },
  "type": "import"
 },
 "allennlp.commands.MakeVocab": {
  "data": {
   "shadows": "allennlp.commands.make_vocab.MakeVocab"
  },
  "type": "import"
 },
 "allennlp.commands.Predict": {
  "data": {
   "shadows": "allennlp.commands.predict.Predict"
  },
  "type": "import"
 },
 "allennlp.commands.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.TestInstall": {
  "data": {
   "shadows": "allennlp.commands.test_install.TestInstall"
  },
  "type": "import"
 },
 "allennlp.commands.Train": {
  "data": {
   "shadows": "allennlp.commands.train.Train"
  },
  "type": "import"
 },
 "allennlp.commands.__version__": {
  "data": {
   "shadows": "allennlp.__version__"
  },
  "type": "import"
 },
 "allennlp.commands.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.configure": {
  "data": {},
  "type": "module"
 },
 "allennlp.commands.configure.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "allennlp.commands.configure.Configure": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.configure.Configure.add_subparser": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.commands.configure.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.configure.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.configure.WSGIServer": {
  "data": {
   "shadows": "gevent.pywsgi.WSGIServer"
  },
  "type": "import"
 },
 "allennlp.commands.configure._run_wizard": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.commands.configure.argparse",
    "allennlp.service.config_explorer.make_app",
    "flask_cors.CORS",
    "gevent.pywsgi.WSGIServer",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.configure.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.configure.make_app": {
  "data": {
   "shadows": "allennlp.service.config_explorer.make_app"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.dry_run.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.dry_run.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.DryRun": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.dry_run.DryRun.add_subparser": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.dry_run.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.datasets_from_params": {
  "data": {
   "shadows": "allennlp.commands.train.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.dry_run_from_args": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.argparse",
    "allennlp.commands.dry_run.dry_run_from_params",
    "allennlp.common.params.Params.from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.dry_run.dry_run_from_params": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.logger",
    "allennlp.commands.dry_run.os",
    "allennlp.commands.dry_run.re",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.common.util.get_frozen_and_tunable_parameter_names",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.data.dataset.Batch",
    "allennlp.models.Model.from_params",
    "any",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.dry_run.get_frozen_and_tunable_parameter_names": {
  "data": {
   "shadows": "allennlp.common.util.get_frozen_and_tunable_parameter_names"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "allennlp.commands.dry_run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.dry_run.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.commands.elmo": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "allennlp.commands.elmo.logging",
    "allennlp.commands.elmo.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.elmo.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.DEFAULT_BATCH_SIZE": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "allennlp.commands.elmo.DEFAULT_OPTIONS_FILE": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "allennlp.commands.elmo.DEFAULT_WEIGHT_FILE": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "allennlp.commands.elmo.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.Elmo": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.elmo.Elmo.add_subparser": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.commands.elmo.DEFAULT_BATCH_SIZE",
    "allennlp.commands.elmo.DEFAULT_OPTIONS_FILE",
    "allennlp.commands.elmo.DEFAULT_WEIGHT_FILE",
    "allennlp.commands.elmo.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "allennlp.commands.elmo.ElmoEmbedder.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.commands.elmo.DEFAULT_OPTIONS_FILE",
    "allennlp.commands.elmo.DEFAULT_WEIGHT_FILE",
    "allennlp.commands.elmo.logger",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo._ElmoBiLm",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder.batch_to_embeddings": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "allennlp.commands.elmo.torch",
    "allennlp.modules.elmo.batch_to_ids",
    "allennlp.nn.util.remove_sentence_boundaries",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder.embed_batch": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "allennlp.commands.elmo.empty_embedding",
    "allennlp.commands.elmo.numpy",
    "int",
    "len",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder.embed_file": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.commands.elmo.DEFAULT_BATCH_SIZE",
    "allennlp.commands.elmo.h5py",
    "allennlp.commands.elmo.json",
    "allennlp.commands.elmo.logger",
    "allennlp.commands.elmo.numpy",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "bool",
    "enumerate",
    "int",
    "str",
    "typing.IO",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder.embed_sentence": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.commands.elmo.numpy",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.ElmoEmbedder.embed_sentences": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "allennlp.commands.elmo.DEFAULT_BATCH_SIZE",
    "allennlp.commands.elmo.numpy",
    "allennlp.common.util.lazy_groups_of",
    "int",
    "iter",
    "str",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.commands.elmo._ElmoBiLm": {
  "data": {
   "shadows": "allennlp.modules.elmo._ElmoBiLm"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.batch_to_ids": {
  "data": {
   "shadows": "allennlp.modules.elmo.batch_to_ids"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.elmo_command": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "allennlp.commands.elmo.os",
    "allennlp.commands.elmo.torch",
    "allennlp.common.util.prepare_global_logging"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.empty_embedding": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "allennlp.commands.elmo.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.elmo.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.logger": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "allennlp.commands.elmo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.prepare_global_logging": {
  "data": {
   "shadows": "allennlp.common.util.prepare_global_logging"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.remove_sentence_boundaries": {
  "data": {
   "shadows": "allennlp.nn.util.remove_sentence_boundaries"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.commands.elmo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.evaluate.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.evaluate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.DataIterator"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Evaluate": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.evaluate.Evaluate.add_subparser": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.evaluate.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.evaluate": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.logger",
    "allennlp.commands.evaluate.torch",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.Instance",
    "allennlp.data.iterators.DataIterator",
    "allennlp.models.model.Model",
    "allennlp.nn.util.move_to_device",
    "any",
    "data_iterator",
    "data_iterator.get_num_batches",
    "int",
    "model",
    "model.get_metrics",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.evaluate.evaluate_from_args": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.argparse",
    "allennlp.commands.evaluate.evaluate",
    "allennlp.commands.evaluate.json",
    "allennlp.commands.evaluate.logger",
    "allennlp.commands.evaluate.logging",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.from_params",
    "allennlp.data.iterators.DataIterator.from_params",
    "allennlp.models.archival.load_archive",
    "model",
    "model.eval",
    "model.vocab",
    "open",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.evaluate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "allennlp.commands.evaluate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.find_learning_rate.logging",
    "allennlp.commands.find_learning_rate.matplotlib"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.find_learning_rate.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.DataIterator": {
  "data": {
   "shadows": "allennlp.data.DataIterator"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.FindLearningRate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.find_learning_rate.FindLearningRate.add_subparser": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.argparse",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Trainer": {
  "data": {
   "shadows": "allennlp.training.Trainer"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate._save_plot": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.logger",
    "float",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xscale",
    "matplotlib.pyplot.ylabel",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate._smooth": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.datasets_from_params": {
  "data": {
   "shadows": "allennlp.commands.train.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.find_learning_rate_from_args": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.argparse",
    "allennlp.commands.find_learning_rate.find_learning_rate_model",
    "allennlp.common.Params.from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.find_learning_rate_model": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate._save_plot",
    "allennlp.commands.find_learning_rate._smooth",
    "allennlp.commands.find_learning_rate.logger",
    "allennlp.commands.find_learning_rate.os",
    "allennlp.commands.find_learning_rate.re",
    "allennlp.commands.find_learning_rate.search_learning_rate",
    "allennlp.commands.find_learning_rate.shutil",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.DataIterator.from_params",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.models.Model.from_params",
    "allennlp.training.Trainer.from_params",
    "any",
    "bool",
    "float",
    "int",
    "isinstance",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.logger": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "allennlp.commands.find_learning_rate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.search_learning_rate": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.logger",
    "allennlp.commands.find_learning_rate.math",
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.Trainer",
    "bool",
    "enumerate",
    "float",
    "int",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.fine_tune.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.fine_tune.CONFIG_NAME": {
  "data": {
   "shadows": "allennlp.models.archival.CONFIG_NAME"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.FineTune": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.fine_tune.FineTune.add_subparser": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.fine_tune.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune._DEFAULT_WEIGHTS": {
  "data": {
   "shadows": "allennlp.models.model._DEFAULT_WEIGHTS"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.archive_model": {
  "data": {
   "shadows": "allennlp.models.archive_model"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.datasets_from_params": {
  "data": {
   "shadows": "allennlp.commands.train.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.evaluate": {
  "data": {
   "shadows": "allennlp.commands.evaluate.evaluate"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.fine_tune_model": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "allennlp.commands.evaluate.evaluate",
    "allennlp.commands.fine_tune.json",
    "allennlp.commands.fine_tune.logger",
    "allennlp.commands.fine_tune.logging",
    "allennlp.commands.fine_tune.os",
    "allennlp.commands.fine_tune.re",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.get_frozen_and_tunable_parameter_names",
    "allennlp.common.util.prepare_environment",
    "allennlp.common.util.prepare_global_logging",
    "allennlp.data.iterators.data_iterator.DataIterator.from_params",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archive_model",
    "allennlp.models.model.Model",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "allennlp.training.trainer.Trainer.by_name",
    "allennlp.training.trainer.Trainer.list_available",
    "any",
    "bool",
    "copy.deepcopy",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.fine_tune.fine_tune_model_from_args": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.argparse",
    "allennlp.commands.fine_tune.fine_tune_model_from_file_paths"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.fine_tune.fine_tune_model_from_file_paths": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.fine_tune_model",
    "allennlp.common.Params.from_file",
    "allennlp.models.load_archive",
    "allennlp.models.model.Model",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.fine_tune.get_frozen_and_tunable_parameter_names": {
  "data": {
   "shadows": "allennlp.common.util.get_frozen_and_tunable_parameter_names"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.load_archive": {
  "data": {
   "shadows": "allennlp.models.load_archive"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.commands.fine_tune.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.prepare_global_logging": {
  "data": {
   "shadows": "allennlp.common.util.prepare_global_logging"
  },
  "type": "import"
 },
 "allennlp.commands.fine_tune.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.commands.import_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_submodules"
  },
  "type": "import"
 },
 "allennlp.commands.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.commands.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.main": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.__version__",
    "allennlp.commands.argparse",
    "allennlp.commands.configure.Configure",
    "allennlp.commands.dry_run.DryRun",
    "allennlp.commands.elmo.Elmo",
    "allennlp.commands.evaluate.Evaluate",
    "allennlp.commands.find_learning_rate.FindLearningRate",
    "allennlp.commands.fine_tune.FineTune",
    "allennlp.commands.make_vocab.MakeVocab",
    "allennlp.commands.predict.Predict",
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.test_install.TestInstall",
    "allennlp.commands.train.Train",
    "allennlp.common.util.import_submodules",
    "dir",
    "getattr",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.make_vocab": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.make_vocab.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.make_vocab.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.MakeVocab": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.make_vocab.MakeVocab.add_subparser": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.make_vocab.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.datasets_from_params": {
  "data": {
   "shadows": "allennlp.commands.train.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.commands.make_vocab.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.make_vocab_from_args": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.argparse",
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.common.params.Params.from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.make_vocab.make_vocab_from_params": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.logger",
    "allennlp.commands.make_vocab.os",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.Vocabulary.from_params",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.make_vocab.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.make_vocab.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.predict": {
  "data": {},
  "type": "module"
 },
 "allennlp.commands.predict.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.commands.predict.JsonDict": {
  "data": {
   "shadows": "allennlp.predictors.predictor.JsonDict"
  },
  "type": "import"
 },
 "allennlp.commands.predict.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.predict.Predict.add_subparser": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.commands.predict.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.predict._PredictManager": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "allennlp.commands.predict._PredictManager.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "bool",
    "int",
    "open",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._get_instance_data": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._get_json_data": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.commands.predict.sys",
    "allennlp.predictors.predictor.JsonDict",
    "open",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._maybe_print_to_console_and_file": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._predict_instances": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "len",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._predict_json": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.JsonDict",
    "len",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager.run": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "allennlp.commands.predict.json",
    "allennlp.common.util.lazy_groups_of",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._get_predictor": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.commands.predict.argparse",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._predict": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.commands.predict._PredictManager",
    "allennlp.commands.predict._get_predictor",
    "allennlp.commands.predict.argparse",
    "allennlp.commands.predict.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.predict.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.predict.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.predict.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.commands.predict.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.commands.predict.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand": {
  "data": {},
  "type": "module"
 },
 "allennlp.commands.subcommand.Subcommand": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "allennlp.commands.subcommand.Subcommand.add_subparser": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.commands.subcommand.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.test_install": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.test_install.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.test_install.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.TestInstall": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.test_install.TestInstall.add_subparser": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.commands.test_install.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install._get_module_root": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.commands.test_install.allennlp",
    "allennlp.commands.test_install.pathlib"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install._run_test": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.commands.test_install._get_module_root",
    "allennlp.commands.test_install.argparse",
    "allennlp.commands.test_install.logger",
    "allennlp.commands.test_install.os",
    "allennlp.commands.test_install.pytest",
    "exit"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install.allennlp": {
  "data": {
   "shadows": "allennlp"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.commands.test_install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.commands.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.train.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.train.CONFIG_NAME": {
  "data": {
   "shadows": "allennlp.models.archival.CONFIG_NAME"
  },
  "type": "import"
 },
 "allennlp.commands.train.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.train.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.commands.train.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.commands.train.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.train.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.commands.train.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.commands.train.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.commands.train.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.commands.train.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.train.Train": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.train.Train.add_subparser": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.commands.train.argparse",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.commands.train.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.train._DEFAULT_WEIGHTS": {
  "data": {
   "shadows": "allennlp.models.model._DEFAULT_WEIGHTS"
  },
  "type": "import"
 },
 "allennlp.commands.train.archive_model": {
  "data": {
   "shadows": "allennlp.models.archival.archive_model"
  },
  "type": "import"
 },
 "allennlp.commands.train.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.train.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.train.create_serialization_dir": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.commands.train.logger",
    "allennlp.commands.train.os",
    "allennlp.commands.train.shutil",
    "allennlp.common.Params",
    "allennlp.common.Params.from_file",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.archival.CONFIG_NAME",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.datasets_from_params": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "allennlp.commands.train.logger",
    "allennlp.common.Params",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.from_params",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.dump_metrics": {
  "data": {
   "shadows": "allennlp.common.util.dump_metrics"
  },
  "type": "import"
 },
 "allennlp.commands.train.evaluate": {
  "data": {
   "shadows": "allennlp.commands.evaluate.evaluate"
  },
  "type": "import"
 },
 "allennlp.commands.train.get_frozen_and_tunable_parameter_names": {
  "data": {
   "shadows": "allennlp.common.util.get_frozen_and_tunable_parameter_names"
  },
  "type": "import"
 },
 "allennlp.commands.train.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "allennlp.commands.train.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.train.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.train.prepare_global_logging": {
  "data": {
   "shadows": "allennlp.common.util.prepare_global_logging"
  },
  "type": "import"
 },
 "allennlp.commands.train.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.commands.train.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.commands.train.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.commands.train.train_model": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "allennlp.commands.evaluate.evaluate",
    "allennlp.commands.train.create_serialization_dir",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.commands.train.logger",
    "allennlp.commands.train.logging",
    "allennlp.commands.train.os",
    "allennlp.commands.train.re",
    "allennlp.commands.train.torch",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.util.dump_metrics",
    "allennlp.common.util.get_frozen_and_tunable_parameter_names",
    "allennlp.common.util.prepare_environment",
    "allennlp.common.util.prepare_global_logging",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.data.iterators.data_iterator.DataIterator.from_params",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival.archive_model",
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.from_params",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "allennlp.training.trainer.Trainer.by_name",
    "allennlp.training.trainer.Trainer.list_available",
    "any",
    "bool",
    "isinstance",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.train_model_from_args": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.commands.train.argparse",
    "allennlp.commands.train.train_model_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.train_model_from_file": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params.from_file",
    "allennlp.models.model.Model",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.common.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.common.TeeLogger": {
  "data": {
   "shadows": "allennlp.common.tee_logger.TeeLogger"
  },
  "type": "import"
 },
 "allennlp.common.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.common.checks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.checks.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.common.checks.ConfigurationError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.common.checks.ConfigurationError.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.ConfigurationError.__str__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.ExperimentalFeatureWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "allennlp.common.checks.check_dimensions_match": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.check_for_gpu": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "torch.cuda.device_count"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.check_for_java": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.checks.subprocess",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "allennlp.common.checks.log_pytorch_version_info": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.checks.logger",
    "allennlp.common.checks.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.common.checks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.checks.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.common.checks.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.configuration": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration.ConfigItem",
    "allennlp.common.configuration._NO_DEFAULT",
    "allennlp.data.dataset_readers.DatasetReader",
    "allennlp.data.iterators.DataIterator",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.model.Model",
    "allennlp.training.trainer.Trainer",
    "bool",
    "int",
    "object",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.common.configuration.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.common.configuration.AllenNLPOptimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Config": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.common.configuration.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.common.configuration.Config.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.common.configuration.ConfigItem",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.Config.__repr__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.Config.to_json": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.common.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.ConfigItem": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "allennlp.common.configuration.ConfigItem.to_json": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.common.JsonDict",
    "allennlp.common.configuration.is_configurable",
    "allennlp.common.configuration.is_registrable",
    "allennlp.common.configuration.json",
    "allennlp.common.configuration.json_annotation",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.DEFAULT_NON_PADDED_NAMESPACES": {
  "data": {
   "shadows": "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES"
  },
  "type": "import"
 },
 "allennlp.common.configuration.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.DataIterator"
  },
  "type": "import"
 },
 "allennlp.common.configuration.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Initializer": {
  "data": {
   "shadows": "allennlp.nn.initializers.Initializer"
  },
  "type": "import"
 },
 "allennlp.common.configuration.JsonDict": {
  "data": {
   "shadows": "allennlp.common.JsonDict"
  },
  "type": "import"
 },
 "allennlp.common.configuration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.common.configuration.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.common.configuration.NumpyDocString": {
  "data": {
   "shadows": "numpydoc.docscrape.NumpyDocString"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.Regularizer"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.common.configuration.T": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "allennlp.common.configuration.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.configuration.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.configuration.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.common.configuration._NO_DEFAULT": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "allennlp.common.configuration._Seq2SeqWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper"
  },
  "type": "import"
 },
 "allennlp.common.configuration._Seq2VecWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders._Seq2VecWrapper"
  },
  "type": "import"
 },
 "allennlp.common.configuration._auto_config": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration.ConfigItem",
    "allennlp.common.configuration.T",
    "allennlp.common.configuration._NO_DEFAULT",
    "allennlp.common.configuration._docspec_comments",
    "allennlp.common.configuration._get_config_type",
    "allennlp.common.configuration.inspect",
    "allennlp.common.configuration.torch",
    "allennlp.data.iterators.DataIterator",
    "allennlp.models.model.Model",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.trainer.Trainer",
    "cla55",
    "cla55.__init__",
    "getattr",
    "isinstance",
    "len",
    "list",
    "range",
    "str",
    "type",
    "typing.List",
    "typing.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._docspec_comments": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "numpydoc.docscrape.NumpyDocString",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._get_config_type": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "allennlp.common.Registrable._registry.values",
    "allennlp.common.configuration.torch",
    "cla55",
    "hasattr",
    "str",
    "subclass",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._remove_optional": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "getattr",
    "len",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._remove_prefix": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.configuration.re",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._render": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "allennlp.common.configuration.ConfigItem",
    "allennlp.common.configuration._NO_DEFAULT",
    "allennlp.common.configuration.is_configurable",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration._valid_choices": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.Registrable._registry",
    "allennlp.common.Registrable._registry.items",
    "allennlp.common.configuration.full_name",
    "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper",
    "allennlp.modules.seq2vec_encoders._Seq2VecWrapper",
    "cla55",
    "cla55.items",
    "isinstance",
    "str",
    "subclass",
    "subclass._module_class",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.choices": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "allennlp.common.configuration._valid_choices",
    "allennlp.common.configuration.importlib",
    "cla55",
    "getattr",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "allennlp.common.configuration.configure": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration._auto_config",
    "allennlp.common.configuration.importlib",
    "allennlp.data.vocabulary.Vocabulary",
    "cla55",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.full_name": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.configuration._remove_prefix",
    "allennlp.common.configuration.collections",
    "allennlp.nn.initializers.Initializer",
    "cla55",
    "cla55.__module__",
    "cla55.__name__",
    "dict",
    "getattr",
    "issubclass",
    "len",
    "list",
    "str",
    "tuple",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "allennlp.common.configuration.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "allennlp.common.configuration.is_configurable": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "allennlp.common.configuration._remove_optional",
    "allennlp.nn.regularizers.Regularizer",
    "any",
    "bool",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.is_registrable": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.common.Registrable",
    "allennlp.common.configuration._remove_optional",
    "allennlp.nn.regularizers.Regularizer",
    "bool",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.configuration.json_annotation": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Ellipsis",
    "allennlp.common.configuration._remove_prefix",
    "allennlp.common.configuration.collections",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.initializers.Initializer",
    "cla55",
    "cla55.__module__",
    "cla55.__name__",
    "dict",
    "getattr",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "str",
    "tuple",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.common.configuration.render_config": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration._render",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.configuration.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.file_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "allennlp.common.file_utils.CACHE_ROOT",
    "allennlp.common.file_utils.DEPRECATED_CACHE_DIRECTORY",
    "allennlp.common.file_utils.logger",
    "allennlp.common.file_utils.logging",
    "allennlp.common.file_utils.os",
    "pathlib.Path",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.common.file_utils.CACHE_DIRECTORY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.common.file_utils.CACHE_ROOT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "allennlp.common.file_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.DATASET_CACHE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.common.file_utils.DEPRECATED_CACHE_DIRECTORY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.common.file_utils.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.cached_path": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ValueError",
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "allennlp.common.file_utils.get_from_cache",
    "allennlp.common.file_utils.os",
    "isinstance",
    "pathlib.Path",
    "str",
    "typing.Union",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.filename_to_url": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "allennlp.common.file_utils.json",
    "allennlp.common.file_utils.os",
    "open",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.get_file_extension": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "allennlp.common.file_utils.os",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.get_from_cache": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "IOError",
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "allennlp.common.file_utils.http_get",
    "allennlp.common.file_utils.json",
    "allennlp.common.file_utils.logger",
    "allennlp.common.file_utils.os",
    "allennlp.common.file_utils.requests",
    "allennlp.common.file_utils.s3_etag",
    "allennlp.common.file_utils.s3_get",
    "allennlp.common.file_utils.shutil",
    "allennlp.common.file_utils.tempfile",
    "allennlp.common.file_utils.url_to_filename",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.http_get": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.common.file_utils.requests",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "int",
    "len",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "allennlp.common.file_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.read_set_from_file": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "open",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.s3_etag": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.common.file_utils.boto3",
    "allennlp.common.file_utils.s3_request",
    "allennlp.common.file_utils.split_s3_path",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.s3_get": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.common.file_utils.boto3",
    "allennlp.common.file_utils.s3_request",
    "allennlp.common.file_utils.split_s3_path",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.s3_request": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.s3_request.wrapper": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "FileNotFoundError",
    "botocore.exceptions.ClientError",
    "func",
    "functools.wraps",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.sha256": {
  "data": {
   "shadows": "hashlib.sha256"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.split_s3_path": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "typing.Tuple",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.url_to_filename": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hashlib.sha256",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.file_utils.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "allennlp.common.file_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "allennlp.common.from_params": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.from_params.inspect",
    "allennlp.common.from_params.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.from_params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.from_params.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.from_params.FromParams": {
  "data": {
   "lineno": 225
  },
  "type": "class"
 },
 "allennlp.common.from_params.FromParams.from_params": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.common.from_params.T",
    "allennlp.common.from_params.create_kwargs",
    "allennlp.common.from_params.logger",
    "allennlp.common.from_params.takes_arg",
    "allennlp.common.params.Params",
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.Registrable._registry.get",
    "classmethod",
    "cls",
    "getattr",
    "object.__init__",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.from_params.T": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "allennlp.common.from_params.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.from_params.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.from_params._NO_DEFAULT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "allennlp.common.from_params.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.common.from_params.create_kwargs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params.T",
    "allennlp.common.from_params._NO_DEFAULT",
    "allennlp.common.from_params.inspect",
    "allennlp.common.from_params.remove_optional",
    "allennlp.common.from_params.takes_arg",
    "allennlp.common.params.Params",
    "bool",
    "dict",
    "float",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "set",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "allennlp.common.from_params.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "allennlp.common.from_params.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.from_params.remove_optional": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "getattr",
    "len",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.takes_arg": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params.inspect",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "allennlp.common.params.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.common.params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.params.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.params.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.params.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "allennlp.common.params.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "allennlp.common.params.Params": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "object"
   ]
  },
  "type": "class"
 },
 "allennlp.common.params.Params.__delitem__": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__getitem__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.common.params._replace_none",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__iter__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__len__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__setitem__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "allennlp.common.params.Params._check_is_dict": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.add_file_to_archive": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_dict": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.common.params.logger",
    "log_recursively"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_dict.log_recursively": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "allennlp.common.params.logger",
    "dict",
    "isinstance",
    "log_recursively",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_flat_dict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "recurse"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_flat_dict.recurse": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "recurse"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "order_dict",
    "order_func",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict.order_dict": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "isinstance",
    "order_dict",
    "order_func",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict.order_func": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.assert_empty": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.duplicate": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.common.params.copy"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.from_file": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "_jsonnet.evaluate_file",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.params.Params",
    "allennlp.common.params.json",
    "allennlp.common.params.os",
    "allennlp.common.params.parse_overrides",
    "allennlp.common.params.with_fallback",
    "dict",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.get": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.common.checks.ConfigurationError",
    "overrides.overrides",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.logger",
    "dict",
    "isinstance",
    "overrides.overrides",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_bool": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_choice": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_float": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_int": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.to_file": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "allennlp.common.params.json",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params._replace_none": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.common.params.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.common.params.evaluate_file": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.evaluate_snippet": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.params.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.common.params.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.params.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.params.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.common.params.parse_overrides": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_jsonnet.evaluate_snippet",
    "allennlp.common.params.json",
    "allennlp.common.params.os",
    "allennlp.common.params.unflatten",
    "dict",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.pop_choice": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.unflatten": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.with_fallback": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.common.params.copy",
    "dict",
    "isinstance",
    "set",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.registrable.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.registrable.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.registrable.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.common.registrable.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Registrable": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.from_params.FromParams",
    "collections.defaultdict",
    "dict",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "allennlp.common.registrable.Registrable.by_name": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.T",
    "allennlp.common.registrable.logger",
    "classmethod",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.list_available": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.Registrable",
    "classmethod",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.register": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.T",
    "classmethod",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.register.add_subclass_to_registry": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.T",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.T": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.common.registrable.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.registrable.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.registrable.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.common.registrable.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.common.registrable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.tee_logger": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.tee_logger.TeeLogger": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "allennlp.common.tee_logger.TeeLogger.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.tee_logger.os",
    "bool",
    "open",
    "str",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tee_logger.TeeLogger.flush": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "allennlp.common.tee_logger.TeeLogger.isatty": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "allennlp.common.tee_logger.TeeLogger.write": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.common.tee_logger.replace_cr_with_newline"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tee_logger.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "allennlp.common.tee_logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.tee_logger.replace_cr_with_newline": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.testing.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.model_test_case.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.testing.model_test_case.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.DataIterator": {
  "data": {
   "shadows": "allennlp.data.DataIterator"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.assert_fields_equal": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.torch",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "print",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.check_model_computes_gradients_correctly": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Exception",
    "allennlp.common.testing.model_test_case.torch",
    "allennlp.models.Model",
    "model",
    "model.named_parameters",
    "model.zero_grad",
    "print",
    "staticmethod",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.ensure_batch_predictions_are_consistent": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.torch",
    "allennlp.data.dataset.Batch",
    "enumerate",
    "isinstance",
    "numpy.testing.assert_allclose",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.ensure_model_can_train_save_and_load": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model_from_file",
    "allennlp.common.Params",
    "allennlp.common.Params.from_file",
    "allennlp.common.testing.model_test_case.copy",
    "allennlp.data.DataIterator.from_params",
    "allennlp.data.DatasetReader.from_params",
    "allennlp.models.load_archive",
    "float",
    "hasattr",
    "int",
    "iterator",
    "iterator2",
    "loaded_model",
    "model",
    "next",
    "numpy.testing.assert_allclose",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.set_up_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.data.DatasetReader.from_params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.data.dataset.Batch",
    "allennlp.models.Model.from_params",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.load_archive": {
  "data": {
   "shadows": "allennlp.models.load_archive"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.train_model_from_file": {
  "data": {
   "shadows": "allennlp.commands.train.train_model_from_file"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.tempfile"
   ]
  },
  "type": "module"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.pathlib",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.checks.log_pytorch_version_info",
    "allennlp.common.testing.test_case.TEST_DIR",
    "allennlp.common.testing.test_case.logging",
    "allennlp.common.testing.test_case.os",
    "allennlp.common.testing.test_case.pathlib"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase.tearDown": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.shutil"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.test_case.TEST_DIR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.common.testing.test_case.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.log_pytorch_version_info": {
  "data": {
   "shadows": "allennlp.common.checks.log_pytorch_version_info"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.common.tqdm": {
  "data": {
   "symbols_in_volume": [
    "tqdm.tqdm.monitor_interval"
   ]
  },
  "type": "module"
 },
 "allennlp.common.tqdm.Tqdm": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "class"
 },
 "allennlp.common.tqdm.Tqdm.set_default_mininterval": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm",
    "float",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm.Tqdm.set_slower_interval": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm",
    "bool",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm.Tqdm.tqdm": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm",
    "staticmethod",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm._tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "allennlp.common.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "allennlp.common.util.logging",
    "bool",
    "spacy.language.Language",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.util.A": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "allennlp.common.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.util.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.util.END_SYMBOL": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "allennlp.common.util.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.common.util.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.common.util.JsonDict": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "allennlp.common.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.util.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.util.START_SYMBOL": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "allennlp.common.util.Scatter": {
  "data": {
   "shadows": "torch.nn.parallel._functions.Scatter"
  },
  "type": "import"
 },
 "allennlp.common.util.ScatterableList": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ctypes.c_int64",
    "ctypes.c_void_p",
    "ctypes.sizeof",
    "list"
   ]
  },
  "type": "class"
 },
 "allennlp.common.util.ScatterableList.from_pointer_tensor": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "allennlp.common.util.torch",
    "classmethod",
    "ctypes.c_uint64",
    "ctypes.cast",
    "ctypes.py_object",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.ScatterableList.to_pointer_tensor": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "allennlp.common.util.torch",
    "ctypes.c_int64",
    "id"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.SpacyModelType": {
  "data": {
   "shadows": "spacy.language.Language"
  },
  "type": "import"
 },
 "allennlp.common.util.TeeLogger": {
  "data": {
   "shadows": "allennlp.common.tee_logger.TeeLogger"
  },
  "type": "import"
 },
 "allennlp.common.util.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.common.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.util.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.util.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.util.add_noise_to_dict_values": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.common.util.A",
    "allennlp.common.util.random",
    "float",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.allennlp": {
  "data": {
   "shadows": "allennlp"
  },
  "type": "import"
 },
 "allennlp.common.util.c_int64": {
  "data": {
   "shadows": "ctypes.c_int64"
  },
  "type": "import"
 },
 "allennlp.common.util.c_uint64": {
  "data": {
   "shadows": "ctypes.c_uint64"
  },
  "type": "import"
 },
 "allennlp.common.util.c_void_p": {
  "data": {
   "shadows": "ctypes.c_void_p"
  },
  "type": "import"
 },
 "allennlp.common.util.cast": {
  "data": {
   "shadows": "ctypes.cast"
  },
  "type": "import"
 },
 "allennlp.common.util.dump_metrics": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "allennlp.common.util.json",
    "allennlp.common.util.logger",
    "bool",
    "open",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.ensure_list": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "allennlp.common.util.A",
    "isinstance",
    "list",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.get_frozen_and_tunable_parameter_names": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "allennlp.common.util.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.get_spacy_model": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "OSError",
    "allennlp.common.util.logger",
    "allennlp.common.util.spacy",
    "bool",
    "spacy.cli.download.download",
    "spacy.language.Language",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.gpu_memory_mb": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.util.logger",
    "allennlp.common.util.subprocess",
    "enumerate",
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.group_by_count": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "iter",
    "itertools.zip_longest",
    "list",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.import_submodules": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.common.util.importlib",
    "allennlp.common.util.pkgutil",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "allennlp.common.util.is_lazy": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "allennlp.common.util.A",
    "bool",
    "isinstance",
    "list",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "allennlp.common.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.util.lazy_groups_of": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.common.util.A",
    "int",
    "iter",
    "itertools.islice",
    "list",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.log_pytorch_version_info": {
  "data": {
   "shadows": "allennlp.common.checks.log_pytorch_version_info"
  },
  "type": "import"
 },
 "allennlp.common.util.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.common.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.util.namespace_match": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.common.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.util.pad_sequence_to_length": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "bool",
    "default_value",
    "int",
    "len",
    "range",
    "typing.Any",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.parse_cuda_device": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "allennlp.common.util.re",
    "from_list",
    "int",
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.parse_cuda_device.from_list": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.peak_memory_mb": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "allennlp.common.util.resource",
    "allennlp.common.util.sys",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "allennlp.common.util.prepare_environment": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "allennlp.common.checks.log_pytorch_version_info",
    "allennlp.common.params.Params",
    "allennlp.common.util.numpy",
    "allennlp.common.util.random",
    "allennlp.common.util.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.prepare_global_logging": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "allennlp.common.tee_logger.TeeLogger",
    "allennlp.common.tqdm.Tqdm.set_slower_interval",
    "allennlp.common.util.logging",
    "allennlp.common.util.os",
    "allennlp.common.util.sys",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.py_object": {
  "data": {
   "shadows": "ctypes.py_object"
  },
  "type": "import"
 },
 "allennlp.common.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.common.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.common.util.resource": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.common.util.sanitize": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.util.allennlp",
    "allennlp.common.util.numpy",
    "allennlp.common.util.spacy",
    "allennlp.common.util.torch",
    "bool",
    "dict",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "list",
    "str",
    "tuple",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.scatter": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "scatter_map"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.scatter.scatter_map": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "allennlp.common.util.ScatterableList",
    "allennlp.common.util.torch",
    "dict",
    "isinstance",
    "list",
    "map",
    "scatter_map",
    "torch.nn.parallel._functions.Scatter.apply",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.scatter_kwargs": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "allennlp.common.util.scatter",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.common.util.sizeof": {
  "data": {
   "shadows": "ctypes.sizeof"
  },
  "type": "import"
 },
 "allennlp.common.util.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.common.util.spacy_download": {
  "data": {
   "shadows": "spacy.cli.download.download"
  },
  "type": "import"
 },
 "allennlp.common.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.common.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.common.util.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.util.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "allennlp.custom_extensions": {
  "data": {},
  "type": "module"
 },
 "allennlp.custom_extensions._ext": {
  "data": {},
  "type": "module"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer": {
  "data": {
   "symbols_in_volume": [
    "allennlp.custom_extensions._ext.highway_lstm_layer._import_symbols",
    "locals"
   ]
  },
  "type": "module"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer._ffi": {
  "data": {
   "shadows": "ffi"
  },
  "type": "import"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer._import_symbols": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.custom_extensions._ext.highway_lstm_layer.__all__",
    "dir",
    "getattr",
    "locals",
    "torch.utils.ffi._wrap_function"
   ]
  },
  "type": "function"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer._lib": {
  "data": {
   "shadows": "lib"
  },
  "type": "import"
 },
 "allennlp.custom_extensions._ext.highway_lstm_layer._wrap_function": {
  "data": {
   "shadows": "torch.utils.ffi._wrap_function"
  },
  "type": "import"
 },
 "allennlp.custom_extensions.build": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "allennlp.custom_extensions.build.defines",
    "allennlp.custom_extensions.build.extra_objects",
    "allennlp.custom_extensions.build.ffi",
    "allennlp.custom_extensions.build.headers",
    "allennlp.custom_extensions.build.os",
    "allennlp.custom_extensions.build.sources",
    "allennlp.custom_extensions.build.this_file",
    "allennlp.custom_extensions.build.torch",
    "allennlp.custom_extensions.build.with_cuda",
    "torch.utils.ffi.create_extension"
   ]
  },
  "type": "module"
 },
 "allennlp.custom_extensions.build.create_extension": {
  "data": {
   "shadows": "torch.utils.ffi.create_extension"
  },
  "type": "import"
 },
 "allennlp.custom_extensions.build.defines": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.extra_objects": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.ffi": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.headers": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.custom_extensions.build.sources": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.this_file": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.custom_extensions.build.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.custom_extensions.build.with_cuda": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.data": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.TokenType": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenType"
  },
  "type": "import"
 },
 "allennlp.data.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.dataset": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset.Batch": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset.Batch.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.instance.Instance",
    "super",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch.__iter__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch._check_types": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch.as_tensor_dict": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.data.dataset.logger",
    "allennlp.data.dataset.torch",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch.get_padding_lengths": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int",
    "list",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch.index_instances": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.Batch.print_statistics": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset.numpy",
    "collections.defaultdict",
    "len",
    "list",
    "print",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataset.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataset.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.dataset.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.dataset.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.data.dataset.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.data.dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.dataset.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.AtisDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.AtisDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.CcgBankDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.ccgbank.CcgBankDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.Conll2000DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.Conll2003DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ConllCorefReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.coreference_resolution.ConllCorefReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.Event2MindDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.LanguageModelingReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.language_modeling.LanguageModelingReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.MultiprocessDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.NlvrDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.NlvrDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.OntonotesNamedEntityRecognition": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.QuACReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.QuACReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.QuarelDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.QuoraParaphraseDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.quora_paraphrase.QuoraParaphraseDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SemanticDependenciesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.Seq2SeqDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.seq2seq.Seq2SeqDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.simple_language_modeling.SimpleLanguageModelingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SnliReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.snli.SnliReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SquadReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.SquadReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SrlReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.StanfordSentimentTreeBankDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.TemplateText2SqlDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.TemplateText2SqlDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.TriviaQaReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.TriviaQaReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.UniversalDependenciesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.universal_dependencies.UniversalDependenciesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.WikiTablesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.WikiTablesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.WinobiasReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.coreference_resolution.WinobiasReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.ccgbank.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.ccgbank.CcgBankDatasetReader": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.ccgbank.CcgBankDatasetReader.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.ccgbank._VALID_LABELS",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ccgbank.CcgBankDatasetReader._read": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.ccgbank.logger",
    "allennlp.data.dataset_readers.ccgbank.re",
    "list",
    "open",
    "overrides.overrides",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ccgbank.CcgBankDatasetReader.text_to_instance": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ccgbank.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank._VALID_LABELS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.ccgbank.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.ccgbank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ccgbank.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.conll2000.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.conll2000.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader._read": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.conll2000._is_divider",
    "allennlp.data.dataset_readers.conll2000.itertools",
    "allennlp.data.dataset_readers.conll2000.logger",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "list",
    "open",
    "overrides.overrides",
    "str",
    "typing.Iterable",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader.text_to_instance": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.to_bioul",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2000.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000._is_divider": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2000.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.conll2000.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2000.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.conll2003.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.conll2003.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader._read": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.conll2003._is_divider",
    "allennlp.data.dataset_readers.conll2003.itertools",
    "allennlp.data.dataset_readers.conll2003.logger",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "list",
    "open",
    "overrides.overrides",
    "str",
    "typing.Iterable",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader.text_to_instance": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.to_bioul",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003._is_divider": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.conll2003.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.coreference_resolution.ConllCorefReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.WinobiasReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.coreference_resolution.winobias.WinobiasReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.coreference_resolution.conll.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader._normalize_word": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader._read": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.coreference_resolution.conll.canonicalize_clusters",
    "allennlp.data.dataset_readers.coreference_resolution.conll.collections",
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "str",
    "typing.DefaultDict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ConllCorefReader.text_to_instance": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.enumerate_spans",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.SpanField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Ontonotes": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.Ontonotes"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.SpanField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.canonicalize_clusters": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "list",
    "set",
    "typing.DefaultDict",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.conll.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.coreference_resolution.winobias.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.SpanField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.WinobiasReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.WinobiasReader.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.WinobiasReader._read": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.coreference_resolution.winobias.collections",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "int",
    "list",
    "open",
    "overrides.overrides",
    "str",
    "typing.DefaultDict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.WinobiasReader.text_to_instance": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.enumerate_spans",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.SpanField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "int",
    "overrides.overrides",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.coreference_resolution.winobias.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.dataset_reader.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_reader.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._read": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.read": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_reader._LazyInstances",
    "allennlp.data.dataset_readers.dataset_reader.logger",
    "allennlp.data.instance.Instance",
    "getattr",
    "isinstance",
    "iter",
    "list",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.text_to_instance": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader._LazyInstances": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_reader._LazyInstances.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "super",
    "typing.Callable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader._LazyInstances.__iter__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.instance.Instance",
    "isinstance",
    "list",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.Ontonotes": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.OntonotesSentence": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.bio_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.bioul_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.iob1_to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.logging",
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes._conll_rows_to_sentence": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "all",
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence",
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedSpan",
    "any",
    "collections.defaultdict",
    "enumerate",
    "float",
    "int",
    "list",
    "nltk.Tree.fromstring",
    "str",
    "typing.DefaultDict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes._process_coref_span_annotations_for_word": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "str",
    "typing.DefaultDict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes._process_span_annotations_for_word": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "enumerate",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes.dataset_document_iterator": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence",
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.codecs",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes.dataset_iterator": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes.dataset_path_iterator": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.logger",
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.os",
    "list",
    "staticmethod",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Ontonotes.sentence_iterator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.OntonotesSentence.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedSpan",
    "float",
    "int",
    "nltk.Tree",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedSpan": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.ontonotes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "str",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence.__str__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.T": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils._iob1_start_of_chunk": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "enumerate",
    "int",
    "list",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan",
    "enumerate",
    "extract_bmes_tag_label",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans.extract_bmes_tag_label": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.T",
    "bool",
    "filter_function",
    "int",
    "len",
    "min",
    "range",
    "slice",
    "typing.Callable",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.ontonotes.TypedStringSpan",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils._iob1_start_of_chunk",
    "enumerate",
    "int",
    "list",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_to_bioul": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.warnings",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "len",
    "process_stack",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.pop_replace_append": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "replace_label"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.process_stack": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "len",
    "pop_replace_append"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.replace_label": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.JsonDict": {
  "data": {
   "shadows": "allennlp.common.JsonDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.SqlData": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_and_split_sql": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.split_table_and_column_names",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_unneeded_aliases": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_numeric_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_string_type": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.process_sql_data": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "allennlp.common.JsonDict",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.SqlData",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_and_split_sql",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_unneeded_aliases",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.replace_variables",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.resolve_primary_keys_in_schema",
    "bool",
    "set",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "collections.defaultdict",
    "enumerate",
    "list",
    "open",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.replace_variables": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.resolve_primary_keys_in_schema": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "enumerate",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.split_table_and_column_names": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.event2mind.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.event2mind.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.END_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.END_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader._build_target_field": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "allennlp.common.util.END_SYMBOL",
    "allennlp.common.util.START_SYMBOL",
    "allennlp.data.fields.TextField",
    "allennlp.data.tokenizers.Token",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader._preprocess_string": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader._read": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.event2mind.csv",
    "allennlp.data.dataset_readers.event2mind.json",
    "allennlp.data.dataset_readers.event2mind.logger",
    "enumerate",
    "len",
    "next",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.event2mind.Event2MindDatasetReader.text_to_instance": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "allennlp.common.util.END_SYMBOL",
    "allennlp.common.util.START_SYMBOL",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.event2mind.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.event2mind.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.event2mind.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.language_modeling.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.language_modeling.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.LanguageModelingReader": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.language_modeling.LanguageModelingReader.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "bool",
    "int",
    "isinstance",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.language_modeling.LanguageModelingReader._read": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.dataset_readers.language_modeling.logger",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "len",
    "open",
    "overrides.overrides",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.language_modeling.LanguageModelingReader.text_to_instance": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.language_modeling.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.language_modeling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.language_modeling.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.logger",
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.logging",
    "torch.multiprocessing.log_to_stderr"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Manager": {
  "data": {
   "shadows": "torch.multiprocessing.Manager"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader._instances": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.multiprocess_dataset_reader._worker",
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.glob",
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.logger",
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.random",
    "allennlp.data.instance.Instance",
    "int",
    "isinstance",
    "len",
    "range",
    "str",
    "torch.multiprocessing.Manager",
    "torch.multiprocessing.Process",
    "torch.multiprocessing.Queue",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader._read": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.read": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "QIterable",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.read.QIterable": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.read.QIterable.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "torch.multiprocessing.Manager"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.read.QIterable.__iter__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.MultiprocessDatasetReader.text_to_instance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Process": {
  "data": {
   "shadows": "torch.multiprocessing.Process"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.Queue": {
  "data": {
   "shadows": "torch.multiprocessing.Queue"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader._worker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.multiprocess_dataset_reader.logger",
    "int",
    "torch.multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.log_to_stderr": {
  "data": {
   "shadows": "torch.multiprocessing.log_to_stderr"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.multiprocess_dataset_reader.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.nlvr": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.data.dataset_readers.nlvr.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.nlvr.NlvrDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.nlvr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.ontonotes_ner.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Ontonotes": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.Ontonotes"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition._ontonotes_subset": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "allennlp.data.dataset_readers.dataset_utils.OntonotesSentence",
    "staticmethod",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition._read": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "allennlp.data.dataset_readers.ontonotes_ner._normalize_word",
    "allennlp.data.dataset_readers.ontonotes_ner.logger",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition.text_to_instance": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.to_bioul",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.OntonotesSentence": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.OntonotesSentence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner._normalize_word": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ontonotes_ner.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.penn_tree_bank.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.BracketParseCorpusReader": {
  "data": {
   "shadows": "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader._get_gold_spans": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "nltk.tree.Tree",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader._read": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.penn_tree_bank.logger",
    "allennlp.data.dataset_readers.penn_tree_bank.os",
    "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader._strip_functional_tags": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "nltk.tree.Tree",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.PennTreeBankConstituencySpanDatasetReader.text_to_instance": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.SpanField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "nltk.tree.Tree",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.SpanField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Tree": {
  "data": {
   "shadows": "nltk.tree.Tree"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.penn_tree_bank.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.quora_paraphrase.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.JustSpacesWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.JustSpacesWordSplitter"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.QuoraParaphraseDatasetReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.QuoraParaphraseDatasetReader.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.JustSpacesWordSplitter",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.QuoraParaphraseDatasetReader._read": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.quora_paraphrase.csv",
    "allennlp.data.dataset_readers.quora_paraphrase.logger",
    "len",
    "open",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.QuoraParaphraseDatasetReader.text_to_instance": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.quora_paraphrase.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.reading_comprehension.QuACReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.quac.QuACReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.SquadReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.squad.SquadReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.TriviaQaReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.reading_comprehension.quac.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.QuACReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.QuACReader.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.QuACReader._read": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.reading_comprehension.quac.json",
    "allennlp.data.dataset_readers.reading_comprehension.quac.logger",
    "len",
    "open",
    "overrides.overrides",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.QuACReader.text_to_instance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.quac.logger",
    "allennlp.data.dataset_readers.reading_comprehension.util.char_span_to_token_span",
    "allennlp.data.dataset_readers.reading_comprehension.util.handle_cannot",
    "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance_quac",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.quac.util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.reading_comprehension.squad.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.SquadReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.SquadReader.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.SquadReader._read": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.reading_comprehension.squad.json",
    "allennlp.data.dataset_readers.reading_comprehension.squad.logger",
    "len",
    "open",
    "overrides.overrides",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.SquadReader.text_to_instance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.squad.logger",
    "allennlp.data.dataset_readers.reading_comprehension.util.char_span_to_token_span",
    "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.squad.util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.reading_comprehension.triviaqa.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader._read": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.reading_comprehension.triviaqa.json",
    "allennlp.data.dataset_readers.reading_comprehension.triviaqa.logger",
    "allennlp.data.dataset_readers.reading_comprehension.triviaqa.os",
    "allennlp.data.dataset_readers.reading_comprehension.triviaqa.tarfile",
    "allennlp.data.dataset_readers.reading_comprehension.util.find_valid_answer_spans",
    "allennlp.data.dataset_readers.reading_comprehension.util.normalize_text",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader.pick_paragraphs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.TriviaQaReader.text_to_instance": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.triviaqa.util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.reading_comprehension.util.logging",
    "allennlp.data.dataset_readers.reading_comprehension.util.string"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.IGNORED_TOKENS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.STRIPPED_CHARACTERS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.char_span_to_token_span": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.logger",
    "bool",
    "int",
    "len",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.find_valid_answer_spans": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.IGNORED_TOKENS",
    "allennlp.data.dataset_readers.reading_comprehension.util.STRIPPED_CHARACTERS",
    "allennlp.data.tokenizers.Token",
    "collections.defaultdict",
    "enumerate",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.handle_cannot": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Token",
    "collections.Counter",
    "int",
    "len",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance_quac": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "int",
    "len",
    "mark_tag",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance_quac.get_tag": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance_quac.mark_tag": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "get_tag",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.normalize_text": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.IGNORED_TOKENS",
    "allennlp.data.dataset_readers.reading_comprehension.util.STRIPPED_CHARACTERS",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.reading_comprehension.util.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_dependency_parsing.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.AdjacencyField": {
  "data": {
   "shadows": "allennlp.data.fields.AdjacencyField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.FIELDS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader._read": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.semantic_dependency_parsing.lazy_parse",
    "allennlp.data.dataset_readers.semantic_dependency_parsing.logger",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader.text_to_instance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.data.fields.AdjacencyField",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.lazy_parse": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_dependency_parsing.parse_sentence",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_dependency_parsing.parse_sentence": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_dependency_parsing.FIELDS",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.AtisDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.GrammarBasedText2SqlDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.NlvrDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.TemplateText2SqlDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TemplateText2SqlDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.WikiTablesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.atis.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.ArrayField": {
  "data": {
   "shadows": "allennlp.data.fields.ArrayField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader._is_global_rule": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS",
    "bool",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader._read": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.semantic_parsing.atis._lazy_parse",
    "allennlp.data.dataset_readers.semantic_parsing.atis.logger",
    "copy.deepcopy",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisDatasetReader.text_to_instance": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.atis.END_OF_UTTERANCE_TOKEN",
    "allennlp.data.dataset_readers.semantic_parsing.atis.logger",
    "allennlp.data.fields.ArrayField",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "enumerate",
    "len",
    "min",
    "overrides.overrides",
    "parsimonious.exceptions.ParseError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.atis_world.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.END_OF_UTTERANCE_TOKEN": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.NUMERIC_NONTERMINALS": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis._lazy_parse": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.atis.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.atis.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.sqlite3",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader._read": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.process_sql_data",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema",
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.glob",
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.json",
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.os",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader.text_to_instance": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "overrides.overrides",
    "print",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.Text2SqlWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.read_dataset_schema": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.text2sql_utils": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.nlvr.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader._read": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.nlvr.json",
    "allennlp.data.dataset_readers.semantic_parsing.nlvr.logger",
    "open",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrDatasetReader.text_to_instance": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.semparse.worlds.NlvrWorld",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.nlvr.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.ArrayField": {
  "data": {
   "shadows": "allennlp.data.fields.ArrayField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.KnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.KnowledgeGraphField": {
  "data": {
   "shadows": "allennlp.data.fields.KnowledgeGraphField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.LEXICAL_CUES": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.LEXICAL_CUES"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.PorterStemmer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_stemmer.PorterStemmer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.quarel.logger",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.re",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_stemmer.PorterStemmer",
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "allennlp.semparse.contexts.quarel_utils.LEXICAL_CUES",
    "allennlp.semparse.contexts.quarel_utils.WorldTaggerExtractor",
    "allennlp.semparse.contexts.quarel_utils.words_from_entity_string",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "bool",
    "dict",
    "int",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._check_world_flip": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.contexts.quarel_utils.align_entities",
    "bool",
    "len",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._compatible_question": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._convert_tags_bio": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._fix_question": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.quarel.re",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._get_entity_literals": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._get_entity_tags": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.fields.KnowledgeGraphField",
    "allennlp.data.tokenizers.Token",
    "enumerate",
    "fe",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._get_first": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._read": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.json",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.logger",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.tqdm",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._replace_stemmed_entities": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.re",
    "isinstance",
    "len",
    "list",
    "max",
    "range",
    "sorted",
    "str",
    "substitute",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._replace_stemmed_entities.substitute": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader._stem_phrase": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.quarel.re",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader.preprocess": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.logger",
    "bool",
    "len",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader.text_to_instance": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.logger",
    "allennlp.data.fields.ArrayField",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.KnowledgeGraphField",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "dict",
    "enumerate",
    "int",
    "numpy.array",
    "overrides.overrides",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.quarel_world.QuarelWorld"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.WorldTaggerExtractor": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.WorldTaggerExtractor"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.align_entities": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.align_entities"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.quarel.words_from_entity_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.words_from_entity_string"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TemplateText2SqlDatasetReader": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TemplateText2SqlDatasetReader.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TemplateText2SqlDatasetReader._read": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.process_sql_data",
    "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.glob",
    "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.json",
    "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.os",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TemplateText2SqlDatasetReader.text_to_instance": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.template_text2sql.text2sql_utils": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.util": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.util.parse_example_line": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.KnowledgeGraphField": {
  "data": {
   "shadows": "allennlp.data.fields.KnowledgeGraphField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ParsingError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BASIC_TYPES",
    "bool",
    "int",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._json_blob_to_instance": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.KnowledgeGraphField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_lines",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "enumerate",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._read": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._read_examples_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.util.parse_example_line",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.gzip",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logger",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.os",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._read_preprocessed_file": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.json",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._read_tokens_from_json_list": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader._should_keep_logical_form": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logger",
    "bool",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesDatasetReader.text_to_instance": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logger",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.KnowledgeGraphField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.ProductionRuleField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_lines",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.semparse.worlds.world.ParsingError",
    "enumerate",
    "len",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.wikitables.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_parsing.wikitables.wikitables.wt_types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.semantic_role_labeling.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Ontonotes": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.Ontonotes"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.OntonotesSentence": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.OntonotesSentence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader._ontonotes_subset": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "allennlp.data.dataset_readers.dataset_utils.OntonotesSentence",
    "staticmethod",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader._read": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "allennlp.data.dataset_readers.semantic_role_labeling.logger",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader.text_to_instance": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "all",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.semantic_role_labeling.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.seq2seq.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.seq2seq.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.END_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.END_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.Seq2SeqDatasetReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.seq2seq.Seq2SeqDatasetReader.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.seq2seq.Seq2SeqDatasetReader._read": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.seq2seq.logger",
    "enumerate",
    "len",
    "open",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.seq2seq.Seq2SeqDatasetReader.text_to_instance": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.common.util.END_SYMBOL",
    "allennlp.common.util.START_SYMBOL",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.seq2seq.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.seq2seq.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.seq2seq.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.sequence_tagging.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.sequence_tagging.DEFAULT_WORD_TAG_DELIMITER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.sequence_tagging.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.sequence_tagging.DEFAULT_WORD_TAG_DELIMITER",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader._read": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.sequence_tagging.logger",
    "allennlp.data.tokenizers.Token",
    "open",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader.text_to_instance": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.sequence_tagging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.simple_language_modeling.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.SimpleLanguageModelingDatasetReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.SimpleLanguageModelingDatasetReader.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.simple_language_modeling.logger",
    "allennlp.data.dataset_readers.simple_language_modeling.math",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "float",
    "int",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.SimpleLanguageModelingDatasetReader._read": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.simple_language_modeling.logger",
    "allennlp.data.instance.Instance",
    "open",
    "overrides.overrides",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.SimpleLanguageModelingDatasetReader.text_to_instance": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.simple_language_modeling.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.snli.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.snli.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.SnliReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.snli.SnliReader.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.snli.SnliReader._read": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.snli.json",
    "allennlp.data.dataset_readers.snli.logger",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.snli.SnliReader.text_to_instance": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.snli.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.snli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.snli.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.StanfordSentimentTreeBankDatasetReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.StanfordSentimentTreeBankDatasetReader.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.StanfordSentimentTreeBankDatasetReader._read": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.logger",
    "nltk.tree.Tree.fromstring",
    "open",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.StanfordSentimentTreeBankDatasetReader.text_to_instance": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.Tree": {
  "data": {
   "shadows": "nltk.tree.Tree"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.stanford_sentiment_tree_bank.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.universal_dependencies.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.universal_dependencies.DEFAULT_FIELDS": {
  "data": {
   "shadows": "conllu.parser.DEFAULT_FIELDS"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.UniversalDependenciesDatasetReader": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.universal_dependencies.UniversalDependenciesDatasetReader.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.universal_dependencies.UniversalDependenciesDatasetReader._read": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.universal_dependencies.lazy_parse",
    "allennlp.data.dataset_readers.universal_dependencies.logger",
    "list",
    "open",
    "overrides.overrides",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.universal_dependencies.UniversalDependenciesDatasetReader.text_to_instance": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.universal_dependencies.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.lazy_parse": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "conllu.parser.DEFAULT_FIELDS",
    "conllu.parser.parse_line",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.universal_dependencies.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.universal_dependencies.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.universal_dependencies.parse_line": {
  "data": {
   "shadows": "conllu.parser.parse_line"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.wikitables": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.data.dataset_readers.wikitables.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.wikitables.WikiTablesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.WikiTablesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.wikitables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.fields": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.AdjacencyField": {
  "data": {
   "shadows": "allennlp.data.fields.adjacency_field.AdjacencyField"
  },
  "type": "import"
 },
 "allennlp.data.fields.ArrayField": {
  "data": {
   "shadows": "allennlp.data.fields.array_field.ArrayField"
  },
  "type": "import"
 },
 "allennlp.data.fields.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.index_field.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.fields.KnowledgeGraphField": {
  "data": {
   "shadows": "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField"
  },
  "type": "import"
 },
 "allennlp.data.fields.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.label_field.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.list_field.ListField"
  },
  "type": "import"
 },
 "allennlp.data.fields.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.metadata_field.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.fields.MultiLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.multilabel_field.MultiLabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_label_field.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.span_field.SpanField"
  },
  "type": "import"
 },
 "allennlp.data.fields.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.text_field.TextField"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.adjacency_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.torch",
    "allennlp.data.fields.field.Field",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.as_tensor": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.torch",
    "int",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.count_vocab_items": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.empty_field": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.AdjacencyField",
    "int",
    "overrides.overrides",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.get_padding_lengths": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.index": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.fields.adjacency_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.array_field.ArrayField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "allennlp.data.fields.field.Field"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.array_field.ArrayField.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.__str__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.as_tensor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "allennlp.data.fields.array_field.torch",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "slice",
    "str",
    "tuple",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.empty_field": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.ArrayField",
    "allennlp.data.fields.array_field.numpy",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.get_padding_lengths": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.fields.field.torch",
    "str",
    "typing.Dict",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.field.DataArray": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.data.fields.field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.Field": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.field.Field.as_tensor": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.fields.field.DataArray",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.batch_tensors": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.count_vocab_items": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.empty_field": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.get_padding_lengths": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.index": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.index_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.IndexField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.index_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.index_field.IndexField.__eq__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.__str__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.as_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.fields.index_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.empty_field": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.fields.index_field.IndexField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.get_padding_lengths": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.knowledge_graph_field.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.knowledge_graph_field.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.knowledge_graph_field.TokenList",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "bool",
    "float",
    "getattr",
    "int",
    "set",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._compute_linking_features": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "enumerate",
    "feature_extractor",
    "float",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._contains_exact_token_match": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._contains_lemma_match": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._edit_distance": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "allennlp.data.fields.knowledge_graph_field.editdistance",
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._exact_token_match": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._lemma_match": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._number_token_match": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._related_column": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._related_column_lemma": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._span_lemma_overlap_fraction": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "len",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField._span_overlap_fraction": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "float",
    "int",
    "len",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.as_tensor": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "allennlp.data.fields.knowledge_graph_field.torch",
    "allennlp.nn.util.pad_sequence_to_length",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.batch_tensors": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "allennlp.data.fields.knowledge_graph_field.torch",
    "allennlp.nn.util.batch_tensor_dicts",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.count_vocab_items": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.empty_field": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField",
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "overrides.overrides",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.get_padding_lengths": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.KnowledgeGraphField.index": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "collections.defaultdict",
    "list",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.knowledge_graph_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.TokenList": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.data.fields.knowledge_graph_field.TokenType": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenType"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.editdistance": {
  "data": {
   "shadows": "editdistance"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.knowledge_graph_field.util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.label_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.label_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.LabelField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.label_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.label_field.LabelField.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int",
    "isinstance",
    "str",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.__str__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.as_tensor": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.count_vocab_items": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.empty_field": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.LabelField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.get_padding_lengths": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.index": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.fields.label_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.list_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.ListField": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.sequence_field.SequenceField"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.list_field.ListField.__getitem__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "len",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__iter__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__len__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__str__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.as_tensor": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.fields.field.DataArray",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.batch_tensors": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.count_vocab_items": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.empty_field": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.fields.list_field.ListField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.get_padding_lengths": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "max",
    "overrides.overrides",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.index": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.sequence_length": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "len",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.metadata_field.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.MetadataField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.Field",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__getitem__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__iter__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__len__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__str__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.as_tensor": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.batch_tensors": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.util.ScatterableList",
    "allennlp.data.fields.field.DataArray",
    "classmethod",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.empty_field": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.fields.metadata_field.MetadataField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.get_padding_lengths": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.ScatterableList": {
  "data": {
   "shadows": "allennlp.common.util.ScatterableList"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.multilabel_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.multilabel_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.multilabel_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.__str__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.as_tensor": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.count_vocab_items": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.empty_field": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.MultiLabelField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.get_padding_lengths": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.index": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.fields.multilabel_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.production_rule_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.ProductionRule": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.torch",
    "bool",
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleArray": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.production_rule_field.ProductionRule"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.as_tensor": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.data.fields.production_rule_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.batch_tensors": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.common.util.ScatterableList",
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.count_vocab_items": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.empty_field": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRuleField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.get_padding_lengths": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ProductionRuleField.index": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.production_rule_field.ScatterableList": {
  "data": {
   "shadows": "allennlp.common.util.ScatterableList"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.production_rule_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.sequence_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field.SequenceField": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.Field"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.sequence_field.SequenceField.empty_field": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_field.SequenceField.sequence_length": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.sequence_label_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.sequence_label_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.sequence_label_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__getitem__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "len",
    "str",
    "type",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__iter__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "iter",
    "str",
    "typing.Iterator",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__len__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__str__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.as_tensor": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.fields.sequence_label_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.count_vocab_items": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.empty_field": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.SequenceLabelField",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.get_padding_lengths": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.index": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.fields.sequence_label_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.span_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.SpanField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.span_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.span_field.SpanField.__eq__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "id",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.__str__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.as_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.fields.span_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.empty_field": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.fields.span_field.SpanField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.get_padding_lengths": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.text_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.SpacyToken": {
  "data": {
   "shadows": "spacy.tokens.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.TextField": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_field.SequenceField",
    "allennlp.data.fields.text_field.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.text_field.TextField.__getitem__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.text_field.TokenList",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.tokenizers.token.Token",
    "isinstance",
    "spacy.tokens.Token",
    "str",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__iter__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__len__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__str__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.as_tensor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.batch_tensors": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.torch",
    "allennlp.nn.util.batch_tensor_dicts",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.count_vocab_items": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.empty_field": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.TextField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.get_padding_lengths": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "len",
    "max",
    "overrides.overrides",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.index": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.TokenList",
    "allennlp.data.vocabulary.Vocabulary",
    "list",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.sequence_length": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "int",
    "len",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.TokenList": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.data.fields.text_field.TokenType": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenType"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.data.instance": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.instance.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.instance.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.instance.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.instance.Instance": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "allennlp.data.instance.Instance.__getitem__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str",
    "typing.MutableMapping"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__iter__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__len__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__str__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.add_field": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.vocabulary.Vocabulary",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.as_tensor_dict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.count_vocab_items": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.get_padding_lengths": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.index_fields": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.data.instance.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "allennlp.data.instance.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.iterators": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.iterators.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.basic_iterator.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.BucketIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.bucket_iterator.BucketIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.EpochTrackingBucketIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.epoch_tracking_bucket_iterator.EpochTrackingBucketIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.MultiprocessIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.iterators.basic_iterator.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.iterators.basic_iterator.BasicIterator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.iterators.data_iterator.DataIterator",
    "allennlp.data.iterators.data_iterator.DataIterator.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.iterators.basic_iterator.BasicIterator._create_batches": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.dataset.Batch",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.basic_iterator.random",
    "bool",
    "collections.deque",
    "iter",
    "typing.Deque",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.basic_iterator.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.Deque": {
  "data": {
   "shadows": "typing.Deque"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.iterators.basic_iterator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.iterators.basic_iterator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.iterators.bucket_iterator.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.iterators.bucket_iterator.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.BucketIterator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.data.iterators.data_iterator.DataIterator",
    "allennlp.data.iterators.data_iterator.DataIterator.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.iterators.bucket_iterator.BucketIterator.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.bucket_iterator.BucketIterator._create_batches": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.dataset.Batch",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.bucket_iterator.random",
    "allennlp.data.iterators.bucket_iterator.sort_by_padding",
    "bool",
    "collections.deque",
    "iter",
    "len",
    "overrides.overrides",
    "typing.Deque",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.bucket_iterator.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Deque": {
  "data": {
   "shadows": "typing.Deque"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.add_noise_to_dict_values": {
  "data": {
   "shadows": "allennlp.common.util.add_noise_to_dict_values"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.iterators.bucket_iterator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.iterators.bucket_iterator.sort_by_padding": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.util.add_noise_to_dict_values",
    "allennlp.data.instance.Instance",
    "allennlp.data.vocabulary.Vocabulary",
    "float",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.iterators.data_iterator.logging",
    "allennlp.data.iterators.data_iterator.torch",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.data.iterators.data_iterator.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.DataIterator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.iterators.data_iterator.DataIterator.__call__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.TensorDict",
    "allennlp.data.iterators.data_iterator.add_epoch_number",
    "allennlp.data.iterators.data_iterator.itertools",
    "allennlp.data.iterators.data_iterator.logger",
    "allennlp.data.iterators.data_iterator.random",
    "allennlp.data.iterators.data_iterator.torch",
    "bool",
    "id",
    "int",
    "len",
    "range",
    "str",
    "typing.Iterable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.TensorDict",
    "allennlp.data.vocabulary.Vocabulary",
    "bool",
    "collections.defaultdict",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.Iterator",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator._create_batches": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.dataset.Batch",
    "allennlp.data.instance.Instance",
    "bool",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator._ensure_batch_is_sufficiently_small": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.data.instance.Instance",
    "len",
    "list",
    "max",
    "typing.Deque",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator._memory_sized_lists": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.common.util.is_lazy",
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.instance.Instance",
    "list",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator._take_instances": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "StopIteration",
    "allennlp.data.instance.Instance",
    "id",
    "int",
    "iter",
    "next",
    "typing.Iterable",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator.get_num_batches": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.common.util.is_lazy",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.math",
    "int",
    "len",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.DataIterator.index_with": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.Deque": {
  "data": {
   "shadows": "typing.Deque"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.TensorDict": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.data.iterators.data_iterator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.add_epoch_number": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.MetadataField",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.data_iterator.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.is_lazy": {
  "data": {
   "shadows": "allennlp.common.util.is_lazy"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.data.iterators.data_iterator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.iterators.data_iterator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.iterators.epoch_tracking_bucket_iterator.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.BucketIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.bucket_iterator.BucketIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.EpochTrackingBucketIterator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.iterators.bucket_iterator.BucketIterator",
    "allennlp.data.iterators.data_iterator.DataIterator.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.EpochTrackingBucketIterator.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.data.iterators.epoch_tracking_bucket_iterator.warnings",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.iterators.epoch_tracking_bucket_iterator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.iterators.multiprocess_iterator.logger",
    "allennlp.data.iterators.multiprocess_iterator.logging",
    "torch.multiprocessing.get_logger"
   ]
  },
  "type": "module"
 },
 "allennlp.data.iterators.multiprocess_iterator.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Manager": {
  "data": {
   "shadows": "torch.multiprocessing.Manager"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.iterators.data_iterator.DataIterator",
    "allennlp.data.iterators.data_iterator.DataIterator.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator.__call__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.TensorDict",
    "allennlp.data.iterators.multiprocess_iterator._create_tensor_dicts",
    "allennlp.data.iterators.multiprocess_iterator._queuer",
    "allennlp.data.iterators.multiprocess_iterator.logger",
    "bool",
    "instances",
    "int",
    "isinstance",
    "range",
    "torch.multiprocessing.Manager",
    "torch.multiprocessing.Process",
    "typing.Iterable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.iterators.data_iterator.DataIterator",
    "int",
    "super",
    "torch.multiprocessing.Process",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator._create_batches": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.dataset.Batch",
    "allennlp.data.instance.Instance",
    "bool",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator.MultiprocessIterator.index_with": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Process": {
  "data": {
   "shadows": "torch.multiprocessing.Process"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Queue": {
  "data": {
   "shadows": "torch.multiprocessing.Queue"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.TensorDict": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.TensorDict"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator._create_tensor_dicts": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.iterators.data_iterator.DataIterator",
    "bool",
    "instances",
    "int",
    "iterator",
    "torch.multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator._create_tensor_dicts.instances": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator._queuer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "instances",
    "int",
    "range",
    "torch.multiprocessing.Queue",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.iterators.multiprocess_iterator.get_logger": {
  "data": {
   "shadows": "torch.multiprocessing.get_logger"
  },
  "type": "import"
 },
 "allennlp.data.iterators.multiprocess_iterator.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.data.iterators.multiprocess_iterator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.DepLabelIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.NerTagIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.PosTagIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.PretrainedBertIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.WordpieceIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.dep_label_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.count_vocab_items": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.dep_label_indexer.logger",
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.get_padding_lengths": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.get_padding_token": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.pad_token_sequence": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.DepLabelIndexer.tokens_to_indices": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.dep_label_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.dep_label_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.dep_label_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.elmo_indexer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer._make_bos_eos"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.convert_word_to_char_ids": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper",
    "enumerate",
    "int",
    "len",
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer._default_value_for_padding": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.count_vocab_items": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.get_padding_lengths": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.get_padding_token": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.pad_token_sequence": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.tokens_to_indices": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "any",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer._make_bos_eos": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.ner_tag_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.count_vocab_items": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.get_padding_lengths": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.get_padding_token": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.pad_token_sequence": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.NerTagIndexer.tokens_to_indices": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.ner_tag_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.json",
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.tarfile",
    "enumerate",
    "int",
    "len",
    "next",
    "set",
    "str",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer._add_encoding_to_vocabulary": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.byte_pair_encode": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.tokenizers.token.Token",
    "bool",
    "float",
    "len",
    "min",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.count_vocab_items": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.get_padding_lengths": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.get_padding_token": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.pad_token_sequence": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.OpenaiTransformerBytePairIndexer.tokens_to_indices": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.re"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.pos_tag_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.count_vocab_items": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.pos_tag_indexer.logger",
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.get_padding_lengths": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.get_padding_token": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.pad_token_sequence": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.PosTagIndexer.tokens_to_indices": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pos_tag_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.get_padding_lengths": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.get_padding_token": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.pad_token_sequence": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.single_id_token_indexer.itertools",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.token_characters_indexer.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "int",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer",
    "allennlp.data.tokenizers.token.Token",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.count_vocab_items": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.tokenizers.token.Token",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.get_padding_lengths": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.get_padding_token": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.pad_token_sequence": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.token_characters_indexer.itertools",
    "int",
    "len",
    "list",
    "max",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.tokens_to_indices": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.token_characters_indexer.itertools",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer": {
  "data": {
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.token_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.get_keys": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.get_padding_lengths": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.get_padding_token": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.TokenType"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.pad_token_sequence": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.TokenType",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenType": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.token_indexer.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.wordpiece_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.BertTokenizer": {
  "data": {
   "shadows": "pytorch_pretrained_bert.tokenization.BertTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register",
    "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "int",
    "pytorch_pretrained_bert.tokenization.BertTokenizer.from_pretrained",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer._add_encoding_to_vocabulary": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.count_vocab_items": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.get_keys": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.get_padding_lengths": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.get_padding_token": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.pad_token_sequence": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.WordpieceIndexer.tokens_to_indices": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.wordpiece_indexer.logger",
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.wordpiece_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.SentenceSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_tokenizer.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.batch_tokenize": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.tokenize": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "int",
    "isinstance",
    "list",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.sentence_splitter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter.batch_split_sentences": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter.split_sentences": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.util.get_spacy_model",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.batch_split_sentences": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.split_sentences": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.get_spacy_model": {
  "data": {
   "shadows": "allennlp.common.util.get_spacy_model"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.token": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.token.Token": {
  "data": {
   "lineno": 1
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.token.Token.__eq__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token.Token.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token.Token.__repr__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token.Token.__str__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token.show_token": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.batch_tokenize": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.tokenize": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.word_filter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_filter.PassThroughWordFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.WordFilter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_filter.PassThroughWordFilter.filter_words": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.RegexFilter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.WordFilter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_filter.RegexFilter.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.RegexFilter.filter_words": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_filter.StopwordFilter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.WordFilter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_filter.StopwordFilter.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.file_utils.read_set_from_file",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.StopwordFilter.filter_words": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_filter.WordFilter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_filter.WordFilter.filter_words": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_filter.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_filter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_filter.read_set_from_file": {
  "data": {
   "shadows": "allennlp.common.file_utils.read_set_from_file"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "bool",
    "pytorch_pretrained_bert.tokenization.BasicTokenizer"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter.split_words": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.BertTokenizer": {
  "data": {
   "shadows": "pytorch_pretrained_bert.tokenization.BasicTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.JustSpacesWordSplitter": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.JustSpacesWordSplitter.split_words": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.LettersDigitsWordSplitter": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.LettersDigitsWordSplitter.split_words": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.word_splitter.re",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.OpenAISplitter": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.OpenAISplitter.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "allennlp.common.util.get_spacy_model"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.OpenAISplitter._standardize": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize",
    "allennlp.data.tokenizers.word_splitter.ftfy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.OpenAISplitter.batch_split_words": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.word_splitter._remove_spaces",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.OpenAISplitter.split_words": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.word_splitter._remove_spaces",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter._can_split": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter.split_words": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "len",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.WordSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "allennlp.common.util.get_spacy_model",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter.batch_split_words": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.word_splitter._remove_spaces",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter.split_words": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.data.tokenizers.word_splitter._remove_spaces",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.WordSplitter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_splitter.WordSplitter.batch_split_words": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.WordSplitter.split_words": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter._remove_spaces": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.spacy",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_splitter.ftfy": {
  "data": {
   "shadows": "ftfy"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.get_spacy_model": {
  "data": {
   "shadows": "allennlp.common.util.get_spacy_model"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_splitter.text_standardize": {
  "data": {
   "shadows": "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_stemmer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.word_stemmer.NltkPorterStemmer": {
  "data": {
   "shadows": "nltk.stem.PorterStemmer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_stemmer.PassThroughWordStemmer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_stemmer.WordStemmer"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_stemmer.PassThroughWordStemmer.stem_word": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_stemmer.PorterStemmer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_stemmer.WordStemmer"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_stemmer.PorterStemmer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nltk.stem.PorterStemmer"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_stemmer.PorterStemmer.stem_word": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "getattr",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_stemmer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_stemmer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_stemmer.WordStemmer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_stemmer.WordStemmer.stem_word": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token.Token"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_stemmer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.word_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.PassThroughWordFilter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_filter.PassThroughWordFilter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.PassThroughWordStemmer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_stemmer.PassThroughWordStemmer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordFilter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_filter.WordFilter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.WordSplitter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordStemmer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_stemmer.WordStemmer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordTokenizer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordTokenizer.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.PassThroughWordFilter",
    "allennlp.data.tokenizers.word_filter.WordFilter",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.data.tokenizers.word_splitter.WordSplitter",
    "allennlp.data.tokenizers.word_stemmer.PassThroughWordStemmer",
    "allennlp.data.tokenizers.word_stemmer.WordStemmer",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordTokenizer._filter_and_stem": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordTokenizer.batch_tokenize": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_tokenizer.WordTokenizer.tokenize": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.word_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.vocabulary.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.EmbeddingsTextFile": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Vocabulary": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary.Vocabulary.__eq__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN",
    "allennlp.data.vocabulary._IndexToTokenDefaultDict",
    "allennlp.data.vocabulary._TokenToIndexDefaultDict",
    "bool",
    "int",
    "set",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__str__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary._extend": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.namespace_match",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary._read_pretrained_tokens",
    "any",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "isinstance",
    "list",
    "set",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.add_token_to_namespace": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "repr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.extend_from_instances": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.instance",
    "allennlp.data.instance.count_vocab_items",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.logger",
    "allennlp.data.vocabulary.pop_max_vocab_size",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_files": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "allennlp.common.util.namespace_match",
    "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE",
    "allennlp.data.vocabulary.codecs",
    "allennlp.data.vocabulary.logger",
    "allennlp.data.vocabulary.os",
    "any",
    "classmethod",
    "cls",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_instances": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.instance",
    "allennlp.data.instance.count_vocab_items",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.logger",
    "bool",
    "classmethod",
    "cls",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_params": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.logger",
    "allennlp.data.vocabulary.pop_max_vocab_size",
    "classmethod",
    "cls.by_name",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_index_to_token_vocabulary": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_from_index": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_index": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.data.vocabulary.logger",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_to_index_vocabulary": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_vocab_size": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.is_padded": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.print_statistics": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.logger",
    "len",
    "list",
    "print",
    "reversed"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.save_to_files": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE",
    "allennlp.data.vocabulary.codecs",
    "allennlp.data.vocabulary.logging",
    "allennlp.data.vocabulary.os",
    "len",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.set_from_file": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.codecs",
    "bool",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._IndexToTokenDefaultDict": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._IndexToTokenDefaultDict.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._IndexToTokenDefaultDict",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict",
    "set",
    "str",
    "super",
    "typing.Any",
    "typing.Callable",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.__missing__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.util.namespace_match",
    "any",
    "dict.__setitem__",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.add_non_padded_namespaces": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._TokenToIndexDefaultDict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._TokenToIndexDefaultDict.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._TokenToIndexDefaultDict",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._read_pretrained_tokens": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.vocabulary.logger",
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "enumerate",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.adi": {
  "data": {
   "shadows": "allennlp.data.instance"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.namespace_match": {
  "data": {
   "shadows": "allennlp.common.util.namespace_match"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.pop_max_vocab_size": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "int",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.models.AtisSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.BiMpm": {
  "data": {
   "shadows": "allennlp.models.bimpm.BiMpm"
  },
  "type": "import"
 },
 "allennlp.models.BiaffineDependencyParser": {
  "data": {
   "shadows": "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser"
  },
  "type": "import"
 },
 "allennlp.models.BiattentiveClassificationNetwork": {
  "data": {
   "shadows": "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork"
  },
  "type": "import"
 },
 "allennlp.models.BidirectionalAttentionFlow": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow"
  },
  "type": "import"
 },
 "allennlp.models.BidirectionalLanguageModel": {
  "data": {
   "shadows": "allennlp.models.bidirectional_lm.BidirectionalLanguageModel"
  },
  "type": "import"
 },
 "allennlp.models.CoreferenceResolver": {
  "data": {
   "shadows": "allennlp.models.coreference_resolution.coref.CoreferenceResolver"
  },
  "type": "import"
 },
 "allennlp.models.CrfTagger": {
  "data": {
   "shadows": "allennlp.models.crf_tagger.CrfTagger"
  },
  "type": "import"
 },
 "allennlp.models.DecomposableAttention": {
  "data": {
   "shadows": "allennlp.models.decomposable_attention.DecomposableAttention"
  },
  "type": "import"
 },
 "allennlp.models.ESIM": {
  "data": {
   "shadows": "allennlp.models.esim.ESIM"
  },
  "type": "import"
 },
 "allennlp.models.Event2Mind": {
  "data": {
   "shadows": "allennlp.models.event2mind.Event2Mind"
  },
  "type": "import"
 },
 "allennlp.models.GraphParser": {
  "data": {
   "shadows": "allennlp.models.graph_parser.GraphParser"
  },
  "type": "import"
 },
 "allennlp.models.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.NlvrCoverageSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.NlvrDirectSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.QuarelSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.SemanticRoleLabeler": {
  "data": {
   "shadows": "allennlp.models.semantic_role_labeler.SemanticRoleLabeler"
  },
  "type": "import"
 },
 "allennlp.models.SimpleSeq2Seq": {
  "data": {
   "shadows": "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq"
  },
  "type": "import"
 },
 "allennlp.models.SimpleTagger": {
  "data": {
   "shadows": "allennlp.models.simple_tagger.SimpleTagger"
  },
  "type": "import"
 },
 "allennlp.models.SpanConstituencyParser": {
  "data": {
   "shadows": "allennlp.models.constituency_parser.SpanConstituencyParser"
  },
  "type": "import"
 },
 "allennlp.models.Text2SqlParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser"
  },
  "type": "import"
 },
 "allennlp.models.WikiTablesErmSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.WikiTablesMmlSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesMmlSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.archival": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.params.Params",
    "allennlp.models.archival.logging",
    "allennlp.models.model.Model",
    "typing.NamedTuple"
   ]
  },
  "type": "module"
 },
 "allennlp.models.archival.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.archival.Archive": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.models.archival.CONFIG_NAME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.models.archival.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.archival.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.archival.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.models.archival.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.models.archival._DEFAULT_WEIGHTS": {
  "data": {
   "shadows": "allennlp.models.model._DEFAULT_WEIGHTS"
  },
  "type": "import"
 },
 "allennlp.models.archival._FTA_NAME": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.models.archival._WEIGHTS_NAME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.models.archival.archive_model": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival._FTA_NAME",
    "allennlp.models.archival._WEIGHTS_NAME",
    "allennlp.models.archival.json",
    "allennlp.models.archival.logger",
    "allennlp.models.archival.os",
    "allennlp.models.archival.tarfile",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "open",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.models.archival.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.models.archival.load_archive": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.params.Params.from_file",
    "allennlp.common.params.parse_overrides",
    "allennlp.common.params.unflatten",
    "allennlp.common.params.with_fallback",
    "allennlp.models.archival.Archive",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival._FTA_NAME",
    "allennlp.models.archival._WEIGHTS_NAME",
    "allennlp.models.archival.json",
    "allennlp.models.archival.logger",
    "allennlp.models.archival.os",
    "allennlp.models.archival.shutil",
    "allennlp.models.archival.tarfile",
    "allennlp.models.archival.tempfile",
    "allennlp.models.model.Model.load",
    "int",
    "open",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.models.archival.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.archival.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.archival.parse_overrides": {
  "data": {
   "shadows": "allennlp.common.params.parse_overrides"
  },
  "type": "import"
 },
 "allennlp.models.archival.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.models.archival.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.models.archival.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.models.archival.unflatten": {
  "data": {
   "shadows": "allennlp.common.params.unflatten"
  },
  "type": "import"
 },
 "allennlp.models.archival.with_fallback": {
  "data": {
   "shadows": "allennlp.common.params.with_fallback"
  },
  "type": "import"
 },
 "allennlp.models.archive_model": {
  "data": {
   "shadows": "allennlp.models.archival.archive_model"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.biaffine_dependency_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.biaffine_dependency_parser.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.AttachmentScores": {
  "data": {
   "shadows": "allennlp.training.metrics.AttachmentScores"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser",
    "allennlp.models.biaffine_dependency_parser.POS_TO_IGNORE",
    "allennlp.models.biaffine_dependency_parser.copy",
    "allennlp.models.biaffine_dependency_parser.logger",
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.modules.Embedding",
    "allennlp.modules.FeedForward",
    "allennlp.modules.InputVariationalDropout",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention",
    "allennlp.nn.Activation.by_name",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.AttachmentScores",
    "bool",
    "float",
    "initializer",
    "int",
    "set",
    "super",
    "torch.nn.modules.Dropout",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._construct_loss": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector",
    "allennlp.nn.util.masked_log_softmax",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._get_head_tags": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._get_mask_for_eval": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._greedy_decode": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.numpy",
    "allennlp.models.biaffine_dependency_parser.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._mst_decode": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.torch",
    "torch.nn.functional.log_softmax",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser._run_mst_decoding": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.numpy",
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.nn.chu_liu_edmonds.decode_mst",
    "enumerate",
    "staticmethod",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser.decode": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "list",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser.forward": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.biaffine_dependency_parser.torch",
    "allennlp.nn.util.get_text_field_mask",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BiaffineDependencyParser.get_metrics": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biaffine_dependency_parser.BilinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Dropout": {
  "data": {
   "shadows": "torch.nn.modules.Dropout"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.POS_TO_IGNORE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.models.biaffine_dependency_parser.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.decode_mst": {
  "data": {
   "shadows": "allennlp.nn.chu_liu_edmonds.decode_mst"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.get_device_of": {
  "data": {
   "shadows": "allennlp.nn.util.get_device_of"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.get_range_vector": {
  "data": {
   "shadows": "allennlp.nn.util.get_range_vector"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.models.biaffine_dependency_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.masked_log_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_log_softmax"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.biaffine_dependency_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork",
    "allennlp.models.biattentive_classification_network.torch",
    "allennlp.modules.Elmo",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Maxout",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "bool",
    "float",
    "initializer",
    "int",
    "len",
    "str",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork.decode": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "allennlp.models.biattentive_classification_network.numpy",
    "allennlp.models.biattentive_classification_network.torch",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork.forward": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.biattentive_classification_network.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.replace_masked_values",
    "allennlp.nn.util.weighted_sum",
    "metric",
    "overrides.overrides",
    "str",
    "torch.nn.functional.softmax",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork.from_params": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.Elmo.from_params",
    "allennlp.modules.FeedForward.from_params",
    "allennlp.modules.Maxout.from_params",
    "allennlp.modules.Seq2SeqEncoder.from_params",
    "allennlp.modules.TextFieldEmbedder.from_params",
    "allennlp.nn.InitializerApplicator.from_params",
    "allennlp.nn.RegularizerApplicator.from_params",
    "classmethod",
    "cls",
    "initializer"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biattentive_classification_network.BiattentiveClassificationNetwork.get_metrics": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "bool",
    "float",
    "metric",
    "metric.get_metric",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.biattentive_classification_network.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Elmo": {
  "data": {
   "shadows": "allennlp.modules.Elmo"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Maxout": {
  "data": {
   "shadows": "allennlp.modules.Maxout"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.biattentive_classification_network.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.bidirectional_lm.BidirectionalLanguageModel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.bidirectional_lm.BidirectionalLanguageModel.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.bidirectional_lm._SoftmaxLoss",
    "allennlp.models.bidirectional_lm.torch",
    "allennlp.modules.masked_layer_norm.MaskedLayerNorm",
    "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss",
    "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder",
    "allennlp.modules.text_field_embedders.TextFieldEmbedder",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm.BidirectionalLanguageModel._compute_loss": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.models.bidirectional_lm.torch",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm.BidirectionalLanguageModel._get_target_token_embedding": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.models.bidirectional_lm.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm.BidirectionalLanguageModel.forward": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.bidirectional_lm.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.remove_sentence_boundaries",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.MaskedLayerNorm": {
  "data": {
   "shadows": "allennlp.modules.masked_layer_norm.MaskedLayerNorm"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.SampledSoftmaxLoss": {
  "data": {
   "shadows": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm._SoftmaxLoss": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.models.bidirectional_lm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.models.bidirectional_lm._SoftmaxLoss.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.models.bidirectional_lm.torch",
    "int",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm._SoftmaxLoss.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.models.bidirectional_lm.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bidirectional_lm.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.remove_sentence_boundaries": {
  "data": {
   "shadows": "allennlp.nn.util.remove_sentence_boundaries"
  },
  "type": "import"
 },
 "allennlp.models.bidirectional_lm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.bimpm": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.bimpm.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.BiMpm": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.bimpm.BiMpm.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.bimpm.BiMpm",
    "allennlp.models.bimpm.torch",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.bimpm_matching.BiMpmMatching",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "float",
    "initializer",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bimpm.BiMpm.decode": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.models.bimpm.numpy",
    "allennlp.models.bimpm.torch",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bimpm.BiMpm.forward": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "add_matching_result",
    "allennlp.models.bimpm.torch",
    "allennlp.nn.util.get_text_field_mask",
    "metric",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bimpm.BiMpm.forward.add_matching_result": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "matcher"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bimpm.BiMpm.get_metrics": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bool",
    "float",
    "metric",
    "metric.get_metric",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.bimpm.BiMpmMatching": {
  "data": {
   "shadows": "allennlp.modules.bimpm_matching.BiMpmMatching"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.bimpm.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.constituency_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.DEFAULT_EVALB_DIR": {
  "data": {
   "shadows": "allennlp.training.metrics.DEFAULT_EVALB_DIR"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.EvalbBracketingScorer": {
  "data": {
   "shadows": "allennlp.training.metrics.EvalbBracketingScorer"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.constituency_parser.SpanConstituencyParser",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "allennlp.training.metrics.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.EvalbBracketingScorer",
    "initializer",
    "str",
    "super",
    "torch.nn.modules.linear.Linear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.construct_tree_from_spans": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "assemble_subtree",
    "int",
    "len",
    "nltk.Tree",
    "staticmethod",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.construct_tree_from_spans.assemble_subtree": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "assemble_subtree",
    "int",
    "nltk.Tree",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.construct_trees": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "allennlp.models.constituency_parser.SpanInformation",
    "allennlp.models.constituency_parser.torch",
    "enumerate",
    "float",
    "int",
    "len",
    "nltk.Tree",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.decode": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "all",
    "allennlp.models.constituency_parser.torch",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.forward": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.constituency_parser.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "list",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.get_metrics": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanConstituencyParser.resolve_overlap_conflicts_greedily": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "allennlp.models.constituency_parser.SpanInformation",
    "enumerate",
    "list",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.constituency_parser.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.SpanInformation": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "allennlp.models.constituency_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.models.constituency_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.coreference_resolution.CoreferenceResolver": {
  "data": {
   "shadows": "allennlp.models.coreference_resolution.coref.CoreferenceResolver"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.coreference_resolution.coref.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.coreference_resolution.coref.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.ConllCorefScores": {
  "data": {
   "shadows": "allennlp.training.metrics.ConllCorefScores"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.coreference_resolution.coref.CoreferenceResolver",
    "allennlp.models.coreference_resolution.coref.torch",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Pruner",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.span_extractors.EndpointSpanExtractor",
    "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.ConllCorefScores",
    "allennlp.training.metrics.MentionRecall",
    "float",
    "initializer",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver._compute_antecedent_gold_labels": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.torch",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver._compute_coreference_scores": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver._compute_span_pair_embeddings": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.torch",
    "allennlp.nn.util.bucket_values"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver._generate_valid_antecedents": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.torch",
    "allennlp.nn.util.get_range_vector",
    "int",
    "staticmethod",
    "torch.nn.functional.relu",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver.decode": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.torch",
    "enumerate",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver.forward": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.models.coreference_resolution.coref.math",
    "allennlp.models.coreference_resolution.coref.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.flatten_and_batch_shift_indices",
    "allennlp.nn.util.flattened_index_select",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.logsumexp",
    "allennlp.nn.util.masked_log_softmax",
    "int",
    "min",
    "overrides.overrides",
    "str",
    "torch.nn.functional.relu",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.CoreferenceResolver.get_metrics": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.coreference_resolution.coref.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.EndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.EndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.MentionRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.MentionRecall"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Pruner": {
  "data": {
   "shadows": "allennlp.modules.Pruner"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.SelfAttentiveSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.models.coreference_resolution.coref.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.coreference_resolution.coref.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.crf_tagger.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.ConditionalRandomField": {
  "data": {
   "shadows": "allennlp.modules.ConditionalRandomField"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.CrfTagger": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.crf_tagger.CrfTagger.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.crf_tagger.torch",
    "allennlp.models.crf_tagger.warnings",
    "allennlp.modules.ConditionalRandomField",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.conditional_random_field.allowed_transitions",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "bool",
    "float",
    "initializer",
    "str",
    "super",
    "torch.nn.modules.linear.Linear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.crf_tagger.CrfTagger.decode": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "allennlp.models.crf_tagger.torch",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.crf_tagger.CrfTagger.forward": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "allennlp.models.crf_tagger.torch",
    "allennlp.nn.util.get_text_field_mask",
    "enumerate",
    "metric",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.crf_tagger.CrfTagger.get_metrics": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "bool",
    "float",
    "metric",
    "metric.get_metric",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.crf_tagger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.allowed_transitions": {
  "data": {
   "shadows": "allennlp.modules.conditional_random_field.allowed_transitions"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.crf_tagger.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.decomposable_attention.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.DecomposableAttention": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.decomposable_attention.DecomposableAttention.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.decomposable_attention.DecomposableAttention",
    "allennlp.models.decomposable_attention.torch",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.SimilarityFunction",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "initializer",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.decomposable_attention.DecomposableAttention.forward": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.models.decomposable_attention.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.weighted_sum",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.decomposable_attention.DecomposableAttention.get_metrics": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.decomposable_attention.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.decomposable_attention.weighted_sum": {
  "data": {
   "shadows": "allennlp.nn.util.weighted_sum"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.encoder_decoders.SimpleSeq2Seq": {
  "data": {
   "shadows": "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.BLEU": {
  "data": {
   "shadows": "allennlp.training.metrics.BLEU"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.BeamSearch": {
  "data": {
   "shadows": "allennlp.nn.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.END_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.END_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.LSTMCell": {
  "data": {
   "shadows": "torch.nn.modules.rnn.LSTMCell"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.LegacyAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.LegacyAttention"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.END_SYMBOL",
    "allennlp.common.util.START_SYMBOL",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq",
    "allennlp.modules.Attention",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.attention.LegacyAttention",
    "allennlp.modules.similarity_functions.SimilarityFunction",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.beam_search.BeamSearch",
    "allennlp.training.metrics.BLEU",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.rnn.LSTMCell"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._encode": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "allennlp.nn.util.get_text_field_mask",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._forward_beam_search": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._forward_loop": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "allennlp.nn.util.get_text_field_mask",
    "range",
    "str",
    "torch.nn.functional.softmax",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._get_loss": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._init_decoder_state": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "allennlp.nn.util.get_final_encoder_states",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._prepare_attended_input": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "allennlp.nn.util.weighted_sum"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq._prepare_output_projections": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq.decode": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.numpy",
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "isinstance",
    "len",
    "list",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq.forward": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq.get_metrics": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.SimpleSeq2Seq.take_step": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.models.encoder_decoders.simple_seq2seq.torch",
    "str",
    "torch.nn.functional.log_softmax",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.encoder_decoders.simple_seq2seq.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.ensemble": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.ensemble.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.ensemble.Ensemble": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.models.model.Model"
   ]
  },
  "type": "class"
 },
 "allennlp.models.ensemble.Ensemble.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.ensemble.Ensemble",
    "allennlp.models.ensemble.torch",
    "allennlp.models.model.Model",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.ensemble.Ensemble._load": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.models.model.Model.from_params",
    "allennlp.models.model.remove_pretrained_embedding_params",
    "classmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.ensemble.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.ensemble.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.ensemble.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.models.ensemble.remove_pretrained_embedding_params": {
  "data": {
   "shadows": "allennlp.models.model.remove_pretrained_embedding_params"
  },
  "type": "import"
 },
 "allennlp.models.ensemble.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.esim": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.esim.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.esim.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.esim.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.esim.ESIM": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.esim.ESIM.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.esim.torch",
    "allennlp.modules.FeedForward",
    "allennlp.modules.InputVariationalDropout",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.SimilarityFunction",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "float",
    "initializer",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.esim.ESIM.forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.models.esim.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.replace_masked_values",
    "allennlp.nn.util.weighted_sum",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.esim.ESIM.get_metrics": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.esim.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.esim.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.esim.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.models.esim.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.esim.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.esim.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.esim.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.esim.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.esim.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.esim.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.models.esim.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.esim.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.esim.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.esim.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.esim.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.models.esim.replace_masked_values": {
  "data": {
   "shadows": "allennlp.nn.util.replace_masked_values"
  },
  "type": "import"
 },
 "allennlp.models.esim.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.esim.weighted_sum": {
  "data": {
   "shadows": "allennlp.nn.util.weighted_sum"
  },
  "type": "import"
 },
 "allennlp.models.event2mind": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.event2mind.BeamSearch": {
  "data": {
   "shadows": "allennlp.nn.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.END_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.END_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Event2Mind": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.event2mind.Event2Mind.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.common.util.END_SYMBOL",
    "allennlp.common.util.START_SYMBOL",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.event2mind.StateDecoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.beam_search.BeamSearch",
    "float",
    "int",
    "str",
    "super",
    "torch.nn.Dropout",
    "torch.nn.ModuleDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind._get_loss": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind._get_num_decoding_steps": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "int",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind._update_recall": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.training.metrics.UnigramRecall",
    "str",
    "target_recall",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.decode": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.decode_all": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "allennlp.models.event2mind.numpy",
    "allennlp.models.event2mind.torch",
    "isinstance",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.forward": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Exception",
    "allennlp.models.event2mind.torch",
    "allennlp.nn.util.get_text_field_mask",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.get_metrics": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.greedy_predict": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "allennlp.modules.token_embedders.Embedding",
    "decoder_cell",
    "output_projection_layer",
    "range",
    "target_embedder",
    "torch.nn.functional.softmax",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.rnn.GRUCell"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.Event2Mind.greedy_search": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.util.get_text_field_mask",
    "decoder_cell",
    "output_projection_layer",
    "range",
    "str",
    "target_embedder",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.rnn.GRUCell",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.GRUCell": {
  "data": {
   "shadows": "torch.nn.modules.rnn.GRUCell"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.ModuleDict": {
  "data": {
   "shadows": "torch.nn.ModuleDict"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.StateDecoder": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "allennlp.models.event2mind.StateDecoder.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.training.metrics.UnigramRecall",
    "int",
    "super",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.rnn.GRUCell"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.StateDecoder.take_step": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "allennlp.models.event2mind.torch",
    "str",
    "torch.nn.functional.log_softmax",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.event2mind.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.UnigramRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.UnigramRecall"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.models.event2mind.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.graph_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.graph_parser.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.BilinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Dropout": {
  "data": {
   "shadows": "torch.nn.modules.Dropout"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.F1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.F1Measure"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.GraphParser": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.graph_parser.GraphParser.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.graph_parser.GraphParser",
    "allennlp.models.graph_parser.copy",
    "allennlp.models.graph_parser.torch",
    "allennlp.modules.Embedding",
    "allennlp.modules.FeedForward",
    "allennlp.modules.InputVariationalDropout",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention",
    "allennlp.nn.Activation.by_name",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.F1Measure",
    "float",
    "initializer",
    "int",
    "super",
    "torch.nn.modules.Dropout",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.GraphParser._construct_loss": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "allennlp.models.graph_parser.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.GraphParser._greedy_decode": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "allennlp.models.graph_parser.numpy",
    "allennlp.models.graph_parser.torch",
    "staticmethod",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.GraphParser.decode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "allennlp.models.graph_parser.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.GraphParser.forward": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.graph_parser.torch",
    "allennlp.nn.util.get_text_field_mask",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.GraphParser.get_metrics": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.graph_parser.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.models.graph_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.graph_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.model.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.model.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.models.model.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.model.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.model.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.models.model.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.model.Model": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.models.model.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.models.model.Model.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._get_prediction_device": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.util.get_device_of",
    "int",
    "len",
    "self.parameters",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._load": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Vocabulary.by_name",
    "allennlp.data.Vocabulary.list_available",
    "allennlp.models.model.Model",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "allennlp.models.model.os",
    "allennlp.models.model.remove_pretrained_embedding_params",
    "allennlp.models.model.torch",
    "allennlp.nn.util.device_mapping",
    "classmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._maybe_warn_for_unseparable_batches": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "allennlp.models.model.logger",
    "self._warn_for_unseparable_batches",
    "self._warn_for_unseparable_batches.add",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.decode": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.models.model.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.models.model.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward_on_instance": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.models.model.numpy",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward_on_instances": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.dataset.Batch",
    "allennlp.models.model.numpy",
    "allennlp.models.model.torch",
    "allennlp.nn.util.move_to_device",
    "isinstance",
    "len",
    "list",
    "self",
    "self._maybe_warn_for_unseparable_batches",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_metrics": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_parameters_for_histogram_tensorboard_logging": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_regularization_penalty": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.models.model.torch",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.load": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.models.model.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.models.model.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.model.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.models.model.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.model.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.model._DEFAULT_WEIGHTS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.models.model.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.models.model.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.model.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.model.remove_pretrained_embedding_params": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.model.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.reading_comprehension.BidafEnsemble": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.BidirectionalAttentionFlow": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.DialogQA": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.dialog_qa.DialogQA"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.reading_comprehension.bidaf.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.reading_comprehension.bidaf.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow",
    "allennlp.models.reading_comprehension.bidaf.torch",
    "allennlp.modules.Highway",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.SimilarityFunction",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.BooleanAccuracy",
    "allennlp.training.metrics.CategoricalAccuracy",
    "allennlp.training.metrics.SquadEmAndF1",
    "bool",
    "float",
    "initializer",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow.forward": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_log_softmax",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.replace_masked_values",
    "allennlp.nn.util.weighted_sum",
    "range",
    "str",
    "torch.nn.functional.nll_loss",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow.get_best_span": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.models.reading_comprehension.bidaf.torch",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow.get_metrics": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf.BooleanAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.BooleanAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Highway": {
  "data": {
   "shadows": "allennlp.modules.Highway"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.SquadEmAndF1": {
  "data": {
   "shadows": "allennlp.training.metrics.SquadEmAndF1"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.models.reading_comprehension.bidaf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.nll_loss": {
  "data": {
   "shadows": "torch.nn.functional.nll_loss"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.models.ensemble.Ensemble",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow",
    "allennlp.training.metrics.SquadEmAndF1",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf_ensemble.ensemble",
    "allennlp.models.reading_comprehension.bidaf_ensemble.torch",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "submodel",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble.from_params": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.models.archival.load_archive",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble.get_metrics": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.BidirectionalAttentionFlow": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Ensemble": {
  "data": {
   "shadows": "allennlp.models.ensemble.Ensemble"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.SquadEmAndF1": {
  "data": {
   "shadows": "allennlp.training.metrics.SquadEmAndF1"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.ensemble": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf.BidirectionalAttentionFlow.get_best_span",
    "allennlp.models.reading_comprehension.bidaf_ensemble.torch",
    "len",
    "str",
    "sum",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.bidaf_ensemble.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.reading_comprehension.dialog_qa.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.BooleanAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.BooleanAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.reading_comprehension.dialog_qa.torch",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.input_variational_dropout.InputVariationalDropout",
    "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention",
    "allennlp.nn.InitializerApplicator",
    "allennlp.training.metrics.Average",
    "allennlp.training.metrics.BooleanAccuracy",
    "allennlp.training.metrics.CategoricalAccuracy",
    "float",
    "initializer",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA._get_best_span_yesno_followup": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.models.reading_comprehension.dialog_qa.torch",
    "int",
    "numpy.argmax",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA.decode": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.dialog_qa.torch",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA.forward": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.dialog_qa.torch",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.masked_log_softmax",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.replace_masked_values",
    "allennlp.nn.util.weighted_sum",
    "allennlp.tools.squad_eval.f1_score",
    "allennlp.tools.squad_eval.metric_max_over_ground_truths",
    "enumerate",
    "len",
    "list",
    "max",
    "range",
    "str",
    "sum",
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.nll_loss",
    "torch.nn.functional.relu",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.dialog_qa.DialogQA.get_metrics": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.input_variational_dropout.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.LinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.models.reading_comprehension.dialog_qa.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.nll_loss": {
  "data": {
   "shadows": "torch.nn.functional.nll_loss"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.squad_eval": {
  "data": {
   "shadows": "allennlp.tools.squad_eval"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.reading_comprehension.dialog_qa.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.atis": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "allennlp.modules.Attention",
    "allennlp.modules.Embedding",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.semparse.executors.SqlExecutor",
    "allennlp.state_machines.BeamSearch",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction",
    "allennlp.training.metrics.Average",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser._action_history_match": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "int",
    "len",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser._create_grammar_state": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "allennlp.semparse.worlds.AtisWorld",
    "allennlp.state_machines.states.GrammarStatelet",
    "enumerate",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser._get_initial_state": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.semparse.worlds.AtisWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.states.RnnStatelet",
    "len",
    "list",
    "max",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser._get_type_vector": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS",
    "allennlp.semparse.worlds.AtisWorld",
    "any",
    "enumerate",
    "int",
    "staticmethod",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.decode": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "enumerate",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.forward": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.difflib",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.sqlparse",
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch",
    "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql",
    "allennlp.semparse.worlds.AtisWorld",
    "enumerate",
    "overrides.overrides",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.get_metrics": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.is_nonterminal": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.LinkingTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.NUMERIC_NONTERMINALS": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.SqlExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.SqlExecutor"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.action_sequence_to_sql": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.atis.atis_semantic_parser.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.CoverageState": {
  "data": {
   "shadows": "allennlp.state_machines.states.CoverageState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.CoverageTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.CoverageTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.DecoderTrainer": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.DecoderTrainer"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.ExpectedRiskMinimization": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.ExpectedRiskMinimization"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.models.model.Model.register",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.archival.load_archive",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logger",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.os",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.torch",
    "allennlp.modules.Attention",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.Activation.by_name",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.CoverageState",
    "allennlp.state_machines.trainers.DecoderTrainer",
    "allennlp.state_machines.trainers.ExpectedRiskMinimization",
    "allennlp.state_machines.transition_functions.CoverageTransitionFunction",
    "allennlp.training.metrics.Average",
    "bool",
    "float",
    "int",
    "set",
    "str",
    "super",
    "typing.Callable",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._get_checklist_info": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.torch",
    "enumerate",
    "int",
    "set",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._get_state_cost": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.torch",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.CoverageState",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._get_state_info": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.CoverageState",
    "float",
    "int",
    "len",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._get_vocab_index_mapping": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "range",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._initialize_weights_from_archive": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.models.archival.Archive",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logger",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser._update_metrics": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "all",
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.semparse.worlds.NlvrWorld",
    "int",
    "len",
    "range",
    "str",
    "sum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser.forward": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logger",
    "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.torch",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.ChecklistStatelet",
    "allennlp.state_machines.states.CoverageState",
    "functools.partial",
    "int",
    "iter",
    "len",
    "list",
    "next",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrCoverageSemanticParser.get_metrics": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.models.model.Model.register",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser",
    "allennlp.modules.Attention",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.Activation.by_name",
    "allennlp.state_machines.BeamSearch",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.state_machines.transition_functions.BasicTransitionFunction",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser._update_metrics": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "all",
    "allennlp.semparse.worlds.NlvrWorld",
    "len",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser.forward": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.torch",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "int",
    "iter",
    "len",
    "list",
    "next",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrDirectSemanticParser.get_metrics": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.models.model.Model"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.torch",
    "allennlp.modules.Embedding",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.training.metrics.Average",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._check_denotation": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.NlvrWorld",
    "bool",
    "staticmethod",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._check_state_denotations": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "bool",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._create_grammar_state": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.torch",
    "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL",
    "allennlp.semparse.type_declarations.type_declaration.is_nonterminal",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.state_machines.states.GrammarStatelet",
    "enumerate",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._get_action_strings": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "classmethod",
    "int",
    "len",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._get_denotations": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.NlvrWorld",
    "staticmethod",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._get_initial_rnn_state": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.torch",
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.state_machines.states.RnnStatelet",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser._get_label_strings": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser.decode": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.torch",
    "allennlp.semparse.worlds.NlvrWorld",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser.forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.type_declaration": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.LinkingTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.LinkingTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.ParsingError"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.Vocabulary",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "allennlp.modules.Attention",
    "allennlp.modules.Embedding",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.seq2vec_encoders.Seq2VecEncoder",
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.state_machines.BeamSearch",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.state_machines.transition_functions.LinkingTransitionFunction",
    "allennlp.training.metrics.Average",
    "allennlp.training.metrics.CategoricalAccuracy",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser._action_history_match": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "int",
    "len",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser._create_grammar_state": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL",
    "allennlp.semparse.type_declarations.type_declaration.is_nonterminal",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "allennlp.state_machines.states.GrammarStatelet",
    "enumerate",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser._denotation_match": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser._get_linking_probabilities": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "enumerate",
    "int",
    "len",
    "range",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser._get_type_vector": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "enumerate",
    "int",
    "staticmethod",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser.decode": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "enumerate",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser.forward": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.math",
    "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch",
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.semparse.ParsingError",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.states.RnnStatelet",
    "enumerate",
    "list",
    "overrides.overrides",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelSemanticParser.get_metrics": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.QuarelWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.quarel_world.QuarelWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.type_declaration": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.quarel.quarel_semantic_parser.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.text2sql_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.initializers.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "allennlp.modules.Attention",
    "allennlp.modules.Embedding",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.initializers.InitializerApplicator",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "allennlp.state_machines.BeamSearch",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.state_machines.transition_functions.BasicTransitionFunction",
    "allennlp.training.metrics.Average",
    "bool",
    "float",
    "initializer",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser._action_history_match": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "int",
    "len",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser._create_grammar_state": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "allennlp.nn.util.get_device_of",
    "allennlp.state_machines.states.GrammarStatelet",
    "collections.defaultdict",
    "enumerate",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser._get_initial_state": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.states.RnnStatelet",
    "list",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.decode": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "enumerate",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.forward": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.text2sql_parser.difflib",
    "allennlp.models.semantic_parsing.text2sql_parser.sqlparse",
    "allennlp.models.semantic_parsing.text2sql_parser.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql",
    "enumerate",
    "overrides.overrides",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.get_metrics": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.is_nonterminal": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.action_sequence_to_sql": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.text2sql_parser.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.CoverageState": {
  "data": {
   "shadows": "allennlp.state_machines.states.CoverageState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.ExpectedRiskMinimization": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.ExpectedRiskMinimization"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.LinkingCoverageTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.LinkingCoverageTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.models.model.Model.register",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.archival.load_archive",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.logger",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.os",
    "allennlp.modules.Attention",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_NAME_MAPPING",
    "allennlp.state_machines.trainers.ExpectedRiskMinimization",
    "allennlp.state_machines.transition_functions.LinkingCoverageTransitionFunction",
    "allennlp.training.metrics.Average",
    "bool",
    "float",
    "int",
    "len",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser._get_checklist_info": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.torch",
    "enumerate",
    "int",
    "len",
    "set",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser._get_state_cost": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.CoverageState",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser._get_vocab_index_mapping": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "int",
    "range",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser._initialize_weights_from_archive": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.models.archival.Archive",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.logger",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser.forward": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.ChecklistStatelet",
    "allennlp.state_machines.states.CoverageState",
    "enumerate",
    "functools.partial",
    "int",
    "len",
    "list",
    "max",
    "overrides.overrides",
    "range",
    "set",
    "str",
    "sum",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesErmSemanticParser.get_metrics": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.LinkingTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.LinkingTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesMmlSemanticParser": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.models.model.Model.register",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesMmlSemanticParser.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.modules.Attention",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.state_machines.BeamSearch",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.state_machines.transition_functions.LinkingTransitionFunction",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesMmlSemanticParser.forward": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.Average"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.BagOfEmbeddingsEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Embedding": {
  "data": {
   "shadows": "allennlp.modules.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.LambdaGrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.LambdaGrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.ParsingError"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.models.model.Model"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.modules.Embedding",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.semparse.executors.WikiTablesSempreExecutor",
    "allennlp.training.metrics.Average",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._action_history_match": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "int",
    "len",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._compute_validation_outputs": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.semparse.ParsingError",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.GrammarBasedState",
    "enumerate",
    "int",
    "len",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._create_grammar_state": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL",
    "allennlp.semparse.type_declarations.type_declaration.is_nonterminal",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "enumerate",
    "int",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._get_initial_rnn_and_grammar_state": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.weighted_sum",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.state_machines.states.RnnStatelet",
    "neighbor_encoder",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._get_linking_probabilities": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "enumerate",
    "int",
    "len",
    "range",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._get_neighbor_indices": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "enumerate",
    "int",
    "len",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser._get_type_vector": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "enumerate",
    "int",
    "staticmethod",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser.decode": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch",
    "enumerate",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser.get_metrics": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSempreExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.WikiTablesSempreExecutor"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.type_declaration": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.semantic_role_labeler.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Dropout": {
  "data": {
   "shadows": "torch.nn.modules.Dropout"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Linear": {
  "data": {
   "shadows": "torch.nn.modules.Linear"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.semantic_role_labeler.SemanticRoleLabeler",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "bool",
    "float",
    "initializer",
    "int",
    "super",
    "torch.nn.modules.Dropout",
    "torch.nn.modules.Linear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler.decode": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.viterbi_decode",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "list",
    "str",
    "torch.nn.functional.softmax",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler.get_metrics": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.SemanticRoleLabeler.get_viterbi_pairwise_potentials": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.torch",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.convert_bio_tags_to_conll_format": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.semantic_role_labeler.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.viterbi_decode": {
  "data": {
   "shadows": "allennlp.nn.util.viterbi_decode"
  },
  "type": "import"
 },
 "allennlp.models.semantic_role_labeler.write_to_conll_eval_file": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.convert_bio_tags_to_conll_format",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.TextIO",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.simple_tagger.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.SimpleTagger": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.simple_tagger.SimpleTagger.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.models.simple_tagger.SimpleTagger",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.RegularizerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "initializer",
    "super",
    "torch.nn.modules.linear.Linear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.decode": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.models.simple_tagger.numpy",
    "allennlp.models.simple_tagger.torch",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.models.simple_tagger.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "metric",
    "overrides.overrides",
    "str",
    "torch.nn.functional.softmax",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.get_metrics": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "float",
    "metric",
    "metric.get_metric",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.BiMpmMatching": {
  "data": {
   "shadows": "allennlp.modules.bimpm_matching.BiMpmMatching"
  },
  "type": "import"
 },
 "allennlp.modules.ConditionalRandomField": {
  "data": {
   "shadows": "allennlp.modules.conditional_random_field.ConditionalRandomField"
  },
  "type": "import"
 },
 "allennlp.modules.Elmo": {
  "data": {
   "shadows": "allennlp.modules.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.modules.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.feedforward.FeedForward"
  },
  "type": "import"
 },
 "allennlp.modules.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.input_variational_dropout.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.modules.LayerNorm": {
  "data": {
   "shadows": "allennlp.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.Maxout": {
  "data": {
   "shadows": "allennlp.modules.maxout.Maxout"
  },
  "type": "import"
 },
 "allennlp.modules.Pruner": {
  "data": {
   "shadows": "allennlp.modules.pruner.Pruner"
  },
  "type": "import"
 },
 "allennlp.modules.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.SpanPruner": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.modules.pruner.Pruner",
    "allennlp.modules.warnings"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.modules.alternating_highway_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM",
    "allennlp.modules.alternating_highway_lstm.torch",
    "float",
    "int",
    "range",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM.forward": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction",
    "allennlp.modules.alternating_highway_lstm.torch",
    "implementation",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM.reset_parameters": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction.backward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.custom_extensions._ext.highway_lstm_layer.highway_lstm_backward_cuda",
    "allennlp.modules.alternating_highway_lstm.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm._AlternatingHighwayLSTMFunction.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.custom_extensions._ext.highway_lstm_layer.highway_lstm_forward_cuda",
    "allennlp.modules.alternating_highway_lstm.torch",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.alternating_highway_lstm.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.highway_lstm_layer": {
  "data": {
   "shadows": "allennlp.custom_extensions._ext.highway_lstm_layer"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.alternating_highway_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.BilinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.bilinear_attention.BilinearAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.CosineAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.cosine_attention.CosineAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.DotProductAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.dot_product_attention.DotProductAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.LegacyAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.legacy_attention.LegacyAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.LinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.linear_attention.LinearAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.attention.Attention": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.attention.attention.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.attention.Attention.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Attention._forward_internal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.attention.attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Attention.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.torch",
    "allennlp.nn.util.masked_softmax",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.bilinear_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "bool",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention._forward_internal": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention.reset_parameters": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.cosine_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.legacy_attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention.CosineAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.Attention",
    "allennlp.modules.attention.legacy_attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.cosine_attention.CosineAttention._forward_internal": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.attention.cosine_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.cosine_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.dot_product_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.legacy_attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention.DotProductAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.Attention",
    "allennlp.modules.attention.legacy_attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.dot_product_attention.DotProductAttention._forward_internal": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.attention.dot_product_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.dot_product_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.legacy_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.legacy_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.legacy_attention.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.attention.legacy_attention.LegacyAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.legacy_attention.LegacyAttention.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.DotProductSimilarity",
    "allennlp.modules.similarity_functions.SimilarityFunction",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.legacy_attention.LegacyAttention._forward_internal": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.legacy_attention.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.attention.legacy_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.legacy_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.linear_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.legacy_attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.Attention",
    "allennlp.modules.attention.legacy_attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.torch",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations.Activation.by_name",
    "allennlp.nn.util.get_combined_dim",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention._forward_internal": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.torch",
    "allennlp.nn.util.combine_tensors_and_multiply",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention.reset_parameters": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.math"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.augmented_lstm.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm.forward": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.augmented_lstm.torch",
    "allennlp.nn.util.get_dropout_mask",
    "isinstance",
    "len",
    "range",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm.reset_parameters": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.get_dropout_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_dropout_mask"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.common.registrable.FromParams",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.bimpm_matching.BiMpmMatching",
    "bool",
    "create_parameter",
    "int",
    "share_or_create",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__.create_parameter": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__.share_or_create": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "create_parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.forward": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.multi_perspective_match",
    "allennlp.modules.bimpm_matching.multi_perspective_match_pairwise",
    "allennlp.modules.bimpm_matching.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.masked_max",
    "allennlp.nn.util.masked_mean",
    "allennlp.nn.util.masked_softmax",
    "torch.nn.functional.cosine_similarity",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.get_output_dim": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.FromParams": {
  "data": {
   "shadows": "allennlp.common.registrable.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_max": {
  "data": {
   "shadows": "allennlp.nn.util.masked_max"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_mean": {
  "data": {
   "shadows": "allennlp.nn.util.masked_mean"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.multi_perspective_match": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "torch.nn.functional.cosine_similarity",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.multi_perspective_match_pairwise": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "bool",
    "int",
    "super",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField._input_likelihood": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "allennlp.nn.util.logsumexp",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField._joint_likelihood": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.forward": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.reset_parameters": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.viterbi_tags": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "allennlp.nn.util.viterbi_decode",
    "float",
    "int",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.allowed_transitions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.is_transition_allowed",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.is_transition_allowed": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.elmo": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "allennlp.modules.elmo.logging",
    "allennlp.modules.elmo.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.elmo.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Dropout": {
  "data": {
   "shadows": "torch.nn.modules.Dropout"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ELMoCharacterMapper": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Elmo": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo.Elmo.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo.Elmo",
    "allennlp.modules.elmo._ElmoBiLm",
    "allennlp.modules.elmo.logger",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.scalar_mix.ScalarMix",
    "bool",
    "float",
    "int",
    "range",
    "str",
    "super",
    "torch.nn.modules.Dropout",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.Elmo.forward": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.modules.elmo.logger",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.remove_sentence_boundaries",
    "getattr",
    "len",
    "range",
    "scalar_mix",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.Elmo.from_params": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.Elmo.get_output_dim": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "allennlp.modules.elmo.ElmoLstm": {
  "data": {
   "shadows": "allennlp.modules.elmo_lstm.ElmoLstm"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.elmo._ElmoBiLm": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo._ElmoBiLm.__init__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo._ElmoBiLm",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.modules.elmo.json",
    "allennlp.modules.elmo.logging",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.elmo_lstm.ElmoLstm",
    "bool",
    "open",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.create_cached_cnn_embeddings": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.bos_token",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.eos_token",
    "allennlp.modules.elmo.batch_to_ids",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.remove_sentence_boundaries",
    "iter",
    "len",
    "list",
    "next",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.forward": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.get_output_dim": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.__init__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.beginning_of_sentence_characters",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.end_of_sentence_characters",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.modules.elmo.json",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "bool",
    "open",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_char_embedding": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_cnn_weights": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "conv",
    "conv.bias.data.copy_",
    "conv.bias.requires_grad",
    "conv.weight.data.copy_",
    "conv.weight.data.shape",
    "conv.weight.requires_grad",
    "enumerate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_highway": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.highway.Highway",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_projection": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_weights": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.forward": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "activation",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "conv",
    "getattr",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.get_output_dim": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "allennlp.modules.elmo.add_sentence_boundary_token_ids": {
  "data": {
   "shadows": "allennlp.nn.util.add_sentence_boundary_token_ids"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.batch_to_ids": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo.torch",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.get_device_of": {
  "data": {
   "shadows": "allennlp.nn.util.get_device_of"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.modules.elmo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.remove_sentence_boundaries": {
  "data": {
   "shadows": "allennlp.nn.util.remove_sentence_boundaries"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.modules.elmo_lstm.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.elmo_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.modules.elmo_lstm.ElmoLstm",
    "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection",
    "bool",
    "float",
    "int",
    "range",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm._lstm_forward": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo_lstm.torch",
    "backward_layer",
    "enumerate",
    "forward_layer",
    "getattr",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.forward": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.modules.elmo_lstm.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.load_weights": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo_lstm.h5py",
    "allennlp.modules.elmo_lstm.numpy",
    "allennlp.modules.elmo_lstm.torch",
    "enumerate",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.LstmCellWithProjection": {
  "data": {
   "shadows": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base": {
  "data": {
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.torch",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.encoder_base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.RnnState": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.modules.encoder_base.RnnStateStorage": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.modules.encoder_base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base._EncoderBase": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.encoder_base._EncoderBase.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnStateStorage",
    "allennlp.modules.encoder_base._EncoderBase",
    "bool",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase._get_initial_states": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnState",
    "allennlp.modules.encoder_base.torch",
    "int",
    "len",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase._update_states": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnStateStorage",
    "allennlp.modules.encoder_base.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase.reset_states": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase.sort_and_run_forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnState",
    "allennlp.modules.encoder_base.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.sort_batch_by_length",
    "isinstance",
    "module",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "tuple",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.feedforward.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.FeedForward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.feedforward.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.feedforward.FeedForward.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.feedforward.FeedForward",
    "allennlp.modules.feedforward.torch",
    "allennlp.nn.Activation",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "super",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.forward": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "activation",
    "allennlp.modules.feedforward.torch",
    "dropout",
    "layer",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.from_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.nn.Activation.by_name",
    "classmethod",
    "cls",
    "dropout",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.get_input_dim": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.get_output_dim": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.highway": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.highway.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.highway.Highway": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.highway.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.highway.Highway.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.highway.Highway",
    "allennlp.modules.highway.torch",
    "int",
    "range",
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.highway.Highway.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.highway.torch",
    "layer",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.highway.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.highway.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.input_variational_dropout": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.input_variational_dropout.InputVariationalDropout": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "allennlp.modules.input_variational_dropout.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.input_variational_dropout.InputVariationalDropout.forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.input_variational_dropout.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.input_variational_dropout.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.layer_norm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.layer_norm.LayerNorm": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.layer_norm.LayerNorm.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.layer_norm.LayerNorm.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.layer_norm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.lstm_cell_with_projection.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection",
    "allennlp.modules.lstm_cell_with_projection.torch",
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.forward": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.torch",
    "allennlp.nn.util.get_dropout_mask",
    "int",
    "len",
    "range",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.reset_parameters": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.get_dropout_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_dropout_mask"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.masked_layer_norm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm.__init__": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.masked_layer_norm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.BilinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.CosineMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.DotProductMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.LinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "bool",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.forward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.reset_parameters": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.cosine_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.dot_product_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.legacy_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.legacy_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.torch",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations.Activation.by_name",
    "allennlp.nn.util.get_combined_dim",
    "int",
    "str",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.torch",
    "allennlp.nn.util.combine_tensors_and_multiply",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.reset_parameters": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.math"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.matrix_attention.matrix_attention.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.matrix_attention.matrix_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.matrix_attention.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.maxout": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.maxout.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.FromParams": {
  "data": {
   "shadows": "allennlp.common.registrable.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.Maxout": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.registrable.FromParams",
    "allennlp.modules.maxout.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.maxout.Maxout.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.maxout.Maxout",
    "allennlp.modules.maxout.torch",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "super",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.modules.maxout.torch",
    "dropout",
    "layer",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.get_input_dim": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.get_output_dim": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.modules.openai_transformer.gelu",
    "allennlp.modules.openai_transformer.logging",
    "allennlp.modules.openai_transformer.swish",
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.openai_transformer.Attention": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.Attention.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.Conv1D",
    "allennlp.modules.openai_transformer.TransformerConfig",
    "allennlp.modules.openai_transformer.torch",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Attention._attn": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.math",
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Attention.forward": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Attention.merge_heads": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Attention.split_heads": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Block": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.Block.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.Attention",
    "allennlp.modules.openai_transformer.LayerNorm",
    "allennlp.modules.openai_transformer.MLP",
    "allennlp.modules.openai_transformer.TransformerConfig",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Block.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.Conv1D": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.Conv1D.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.openai_transformer.torch",
    "int",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Conv1D.forward": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.LayerNorm": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.LayerNorm.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.LayerNorm.forward": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.MLP": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.MLP.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.Conv1D",
    "allennlp.modules.openai_transformer.TransformerConfig",
    "allennlp.modules.openai_transformer._ACTIVATION_FUNCTIONS",
    "allennlp.modules.openai_transformer.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.MLP.forward": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.OpenaiTransformer": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "allennlp.common.from_params.FromParams",
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer.OpenaiTransformer.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.Block",
    "allennlp.modules.openai_transformer.TransformerConfig",
    "allennlp.modules.openai_transformer.copy",
    "allennlp.modules.openai_transformer.torch",
    "bool",
    "float",
    "int",
    "max",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.OpenaiTransformer.dump_weights": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.json",
    "allennlp.modules.openai_transformer.math",
    "allennlp.modules.openai_transformer.pathlib",
    "int",
    "len",
    "list",
    "numpy.concatenate",
    "numpy.save",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.OpenaiTransformer.forward": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch",
    "block",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.OpenaiTransformer.load_weights": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.openai_transformer._PARAMETER_NAMES",
    "allennlp.modules.openai_transformer.io",
    "allennlp.modules.openai_transformer.json",
    "allennlp.modules.openai_transformer.logger",
    "allennlp.modules.openai_transformer.re",
    "allennlp.modules.openai_transformer.tarfile",
    "allennlp.modules.openai_transformer.torch",
    "getattr",
    "int",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.load",
    "numpy.ndarray",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.split",
    "range",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.TransformerConfig": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.openai_transformer._ACTIVATION_FUNCTIONS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "allennlp.modules.openai_transformer._PARAMETER_NAMES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "allennlp.modules.openai_transformer.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.gelu": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.math",
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.modules.openai_transformer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.swish": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.openai_transformer.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.modules.openai_transformer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.pruner": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.pruner.Pruner": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.pruner.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.pruner.Pruner.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.pruner.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.pruner.Pruner.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.pruner.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.flatten_and_batch_shift_indices",
    "allennlp.nn.util.replace_masked_values",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.pruner.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.pruner.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.pruner.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.pruner.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.sampled_softmax_loss.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.sampled_softmax_loss._choice",
    "allennlp.modules.sampled_softmax_loss.torch",
    "bool",
    "int",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss._forward_eval": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss._forward_train": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.forward": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.initialize_num_words": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.log_uniform_candidate_sampler": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss._choice",
    "allennlp.modules.sampled_softmax_loss.torch",
    "choice_func"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss._choice": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "get_buffer",
    "int",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "set",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss._choice.get_buffer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.exp",
    "numpy.log",
    "numpy.ndarray",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.scalar_mix.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.ParameterList": {
  "data": {
   "shadows": "torch.nn.ParameterList"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.ScalarMix": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.scalar_mix.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.scalar_mix.ScalarMix.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.scalar_mix.ScalarMix",
    "allennlp.modules.scalar_mix.torch",
    "bool",
    "float",
    "int",
    "len",
    "range",
    "super",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.ScalarMix.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_do_layer_norm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.scalar_mix.torch",
    "len",
    "sum",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.ScalarMix.forward._do_layer_norm": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.modules.scalar_mix.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders": {
  "data": {
   "symbols_in_volume": [
    "FileNotFoundError",
    "ImportError",
    "ModuleNotFoundError",
    "__name__",
    "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM",
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.logger",
    "allennlp.modules.seq2seq_encoders.logging",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register",
    "allennlp.modules.seq2seq_encoders.torch",
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.AlternatingHighwayLSTM": {
  "data": {
   "shadows": "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.GatedCnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.PassThroughEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.StackedBidirectionalLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.StackedSelfAttentionEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.torch",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders._Seq2SeqWrapper.from_params": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "allennlp.common.checks.ExperimentalFeatureWarning",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionalEncoding",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.make_model",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.warnings",
    "bool",
    "dropout",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.forward": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.get_attention_masks": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.subsequent_mask",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.get_input_dim": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.get_output_dim": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.get_regularization_penalty": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder.is_bidirectional": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.EncoderLayer": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.EncoderLayer.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.SublayerConnection",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "allennlp.nn.util.clone",
    "dropout",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.EncoderLayer.forward": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.ExperimentalFeatureWarning": {
  "data": {
   "shadows": "allennlp.common.checks.ExperimentalFeatureWarning"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.LayerNorm": {
  "data": {
   "shadows": "allennlp.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.MultiHeadedAttention": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.MultiHeadedAttention.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "allennlp.nn.util.clone",
    "dropout",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.MultiHeadedAttention.forward": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.attention",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "layer",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionalEncoding": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionalEncoding.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.math",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionalEncoding.forward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionwiseFeedForward": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionwiseFeedForward.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "dropout",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionwiseFeedForward.forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.SublayerConnection": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.SublayerConnection.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.LayerNorm",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "dropout",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.SublayerConnection.forward": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "sublayer",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.TransformerEncoder": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.TransformerEncoder.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.LayerNorm",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "allennlp.nn.util.clone",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.TransformerEncoder.forward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "layer"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.attention": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.math",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "dropout",
    "torch.nn.functional.softmax",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.make_model": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.EncoderLayer",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.MultiHeadedAttention",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.PositionwiseFeedForward",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.TransformerEncoder",
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "bool",
    "dropout",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.subsequent_mask": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch",
    "int",
    "numpy.ones",
    "numpy.triu",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "bool",
    "float",
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.forward": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "block",
    "enumerate",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.get_input_dim": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.get_output_dim": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.is_bidirectional": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "bool",
    "enumerate",
    "float",
    "int",
    "len",
    "str",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "convolution",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention",
    "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder",
    "allennlp.modules.seq2seq_encoders.intra_sentence_attention.torch",
    "allennlp.modules.similarity_functions.DotProductSimilarity",
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity",
    "allennlp.modules.similarity_functions.SimilarityFunction",
    "allennlp.nn.util.get_combined_dim",
    "int",
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder.forward": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.intra_sentence_attention.torch",
    "allennlp.nn.util.combine_tensors",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.weighted_sum",
    "list",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder.get_input_dim": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder.get_output_dim": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.IntraSentenceAttentionEncoder.is_bidirectional": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.Linear": {
  "data": {
   "shadows": "torch.nn.Linear"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.MultiHeadedSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.MultiHeadedSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.intra_sentence_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "allennlp.modules.seq2seq_encoders.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.Dropout": {
  "data": {
   "shadows": "torch.nn.Dropout"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.Linear": {
  "data": {
   "shadows": "torch.nn.Linear"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention",
    "float",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention.forward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.multi_head_self_attention.torch",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.weighted_sum",
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention.get_input_dim": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention.get_output_dim": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention.is_bidirectional": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.multi_head_self_attention.weighted_sum": {
  "data": {
   "shadows": "allennlp.nn.util.weighted_sum"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.forward": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pass_through_encoder.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.get_input_dim": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.get_output_dim": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.is_bidirectional": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "isinstance",
    "list",
    "overrides.overrides",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.get_input_dim": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.get_output_dim": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.is_bidirectional": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.get_input_dim": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.get_output_dim": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.is_bidirectional": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.Dropout": {
  "data": {
   "shadows": "torch.nn.Dropout"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.feedforward.FeedForward"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.LayerNorm": {
  "data": {
   "shadows": "allennlp.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.MultiHeadSelfAttention": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.modules.feedforward.FeedForward",
    "allennlp.modules.layer_norm.LayerNorm",
    "allennlp.modules.seq2seq_encoders.multi_head_self_attention.MultiHeadSelfAttention",
    "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder",
    "allennlp.nn.activations.Activation.by_name",
    "bool",
    "float",
    "int",
    "range",
    "super",
    "torch.nn.Dropout",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder.forward": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.stacked_self_attention.torch",
    "allennlp.nn.util.add_positional_features",
    "attention",
    "feedforward",
    "feedforward_layer_norm",
    "layer_norm",
    "overrides.overrides",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder.get_input_dim": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder.get_output_dim": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.StackedSelfAttentionEncoder.is_bidirectional": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.add_positional_features": {
  "data": {
   "shadows": "allennlp.nn.util.add_positional_features"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.stacked_self_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders": {
  "data": {
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.seq2vec_encoders._Seq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register",
    "allennlp.modules.seq2vec_encoders.torch",
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.CnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.CnnHighwayEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders._Seq2VecWrapper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders._Seq2VecWrapper.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders._Seq2VecWrapper.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.torch",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders._Seq2VecWrapper.from_params": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.boe_encoder.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.get_input_dim": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.get_output_dim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "enumerate",
    "int",
    "len",
    "super",
    "torch.nn.Conv1d",
    "torch.nn.Linear",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_encoder.torch",
    "convolution_layer",
    "getattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.get_input_dim": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.get_output_dim": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Conv1d": {
  "data": {
   "shadows": "torch.nn.Conv1d"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Linear": {
  "data": {
   "shadows": "torch.nn.Linear"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.highway.Highway",
    "allennlp.modules.masked_layer_norm.MaskedLayerNorm",
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder._VALID_PROJECTION_LOCATIONS",
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch",
    "bool",
    "enumerate",
    "int",
    "numpy.sqrt",
    "str",
    "sum",
    "super",
    "typing.Callable",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch",
    "char_conv_i",
    "getattr",
    "len",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.get_input_dim": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.get_output_dim": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.MaskedLayerNorm": {
  "data": {
   "shadows": "allennlp.modules.masked_layer_norm.MaskedLayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder._VALID_PROJECTION_LOCATIONS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.get_input_dim": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.get_output_dim": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.get_input_dim": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.get_output_dim": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.BilinearSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.CosineSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.cosine.CosineSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.LinearSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.linear.LinearSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.MultiHeadedSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.bilinear": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.bilinear.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity",
    "allennlp.modules.similarity_functions.bilinear.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.bilinear.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.bilinear.BilinearSimilarity.reset_parameters": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.bilinear.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.bilinear.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.bilinear.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.bilinear.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.bilinear.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.cosine": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.cosine.CosineSimilarity": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.cosine.CosineSimilarity.forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.cosine.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.cosine.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.cosine.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.cosine.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.dot_product": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.dot_product.math",
    "allennlp.modules.similarity_functions.dot_product.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.dot_product.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.dot_product.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.dot_product.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.dot_product.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.linear.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.LinearSimilarity": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.linear.LinearSimilarity.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.linear.LinearSimilarity",
    "allennlp.modules.similarity_functions.linear.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "allennlp.nn.util.get_combined_dim",
    "int",
    "str",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.linear.LinearSimilarity.forward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.linear.torch",
    "allennlp.nn.util.combine_tensors",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.linear.LinearSimilarity.reset_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.linear.math"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.linear.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.linear.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.multiheaded.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity",
    "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity",
    "allennlp.modules.similarity_functions.multiheaded.torch",
    "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity.forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.multiheaded.torch",
    "list",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.multiheaded.MultiHeadedSimilarity.reset_parameters": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.multiheaded.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.multiheaded.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.multiheaded.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.similarity_function": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.similarity_functions.similarity_function.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.similarity_functions.similarity_function.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction.forward": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.similarity_functions.similarity_function.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.similarity_functions.similarity_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.EndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.forward": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.bucket_values",
    "allennlp.nn.util.combine_tensors",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.nn.util.get_combined_dim",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.span_extractors.endpoint_span_extractor.torch",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.forward": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.span_extractors.endpoint_span_extractor.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.bucket_values",
    "allennlp.nn.util.combine_tensors",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.nn.util.get_combined_dim",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.self_attentive_span_extractor.torch",
    "allennlp.modules.time_distributed.TimeDistributed",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.self_attentive_span_extractor.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.flatten_and_batch_shift_indices",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.weighted_sum",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.span_extractor.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.span_extractors.span_extractor.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.forward": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.span_extractors.span_extractor.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.get_input_dim": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.get_output_dim": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_pruner": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_pruner.SpanPruner": {
  "data": {
   "shadows": "allennlp.modules.SpanPruner"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.stacked_alternating_lstm.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "bool",
    "float",
    "int",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm.forward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.stacked_alternating_lstm.torch",
    "enumerate",
    "getattr",
    "layer",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_alternating_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.stacked_bidirectional_lstm.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm",
    "bool",
    "float",
    "int",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm.forward": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.stacked_bidirectional_lstm.torch",
    "backward_layer",
    "enumerate",
    "forward_layer",
    "getattr",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_bidirectional_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder",
    "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "bool",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.text_field_embedders.basic_text_field_embedder.torch",
    "allennlp.modules.time_distributed.TimeDistributed",
    "embedder",
    "getattr",
    "int",
    "list",
    "range",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.from_params": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.text_field_embedders.basic_text_field_embedder.warnings",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.from_params",
    "classmethod",
    "cls",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.get_output_dim": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.text_field_embedders.text_field_embedder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.text_field_embedders.text_field_embedder.torch",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.get_output_dim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.time_distributed": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.time_distributed.TimeDistributed": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.time_distributed.TimeDistributed.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.TimeDistributed",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.time_distributed.TimeDistributed.forward": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.time_distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.BertEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.ElmoTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.OpenaiTransformerEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformerEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.PretrainedBertEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.TokenCharactersEncoder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.modules.token_embedders.bert_token_embedder.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.modules.scalar_mix.ScalarMix",
    "bool",
    "pytorch_pretrained_bert.modeling.BertModel",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.bert_token_embedder.torch",
    "allennlp.nn.util.combine_initial_dims",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector",
    "allennlp.nn.util.uncombine_initial_dims"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder.get_output_dim": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.BertModel": {
  "data": {
   "shadows": "pytorch_pretrained_bert.modeling.BertModel"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertEmbedder": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertEmbedder.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "pytorch_pretrained_bert.modeling.BertModel.from_pretrained",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bert_token_embedder.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.Elmo": {
  "data": {
   "shadows": "allennlp.modules.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder",
    "allennlp.modules.token_embedders.elmo_token_embedder.torch",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.forward": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.modules.token_embedders.elmo_token_embedder.torch",
    "projection",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.from_params": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "classmethod",
    "cls",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "allennlp.modules.token_embedders.embedding.logging",
    "allennlp.modules.token_embedders.embedding.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.token_embedders.embedding.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Embedding": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.embedding.Embedding.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "allennlp.modules.token_embedders.embedding.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.Embedding.forward": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.nn.util.combine_initial_dims",
    "allennlp.nn.util.uncombine_initial_dims",
    "overrides.overrides",
    "projection",
    "range",
    "torch.nn.functional.embedding"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.Embedding.from_params": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding._read_pretrained_embeddings_file",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.Embedding.get_output_dim": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsFileURI": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "str",
    "typing.Iterator"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__enter__": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__exit__": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.file_utils.get_file_extension",
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "allennlp.modules.token_embedders.embedding.bz2",
    "allennlp.modules.token_embedders.embedding.gzip",
    "allennlp.modules.token_embedders.embedding.io",
    "allennlp.modules.token_embedders.embedding.itertools",
    "allennlp.modules.token_embedders.embedding.logger",
    "allennlp.modules.token_embedders.embedding.lzma",
    "allennlp.modules.token_embedders.embedding.parse_embeddings_file_uri",
    "allennlp.modules.token_embedders.embedding.tarfile",
    "allennlp.modules.token_embedders.embedding.zipfile",
    "next",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__iter__": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__len__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.__next__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile._get_num_tokens_from_first_line": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.token_embedders.embedding.logger",
    "int",
    "len",
    "max",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile._get_the_only_file_in_the_archive": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "len",
    "staticmethod",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile._open_inside_tar": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.token_embedders.embedding.io",
    "allennlp.modules.token_embedders.embedding.tarfile",
    "bytes",
    "str",
    "typing.IO",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile._open_inside_zip": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.token_embedders.embedding.io",
    "allennlp.modules.token_embedders.embedding.zipfile",
    "str",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.close": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.read": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile.readline": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding._read_embeddings_from_hdf5": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.h5py",
    "allennlp.modules.token_embedders.embedding.torch",
    "int",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding._read_embeddings_from_text_file": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "allennlp.modules.token_embedders.embedding.logger",
    "allennlp.modules.token_embedders.embedding.numpy",
    "allennlp.modules.token_embedders.embedding.torch",
    "float",
    "int",
    "len",
    "list",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding._read_pretrained_embeddings_file": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "allennlp.common.file_utils.get_file_extension",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding._read_embeddings_from_hdf5",
    "allennlp.modules.token_embedders.embedding._read_embeddings_from_text_file",
    "allennlp.modules.token_embedders.embedding.torch",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.embedding": {
  "data": {
   "shadows": "torch.nn.functional.embedding"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.get_file_extension": {
  "data": {
   "shadows": "allennlp.common.file_utils.get_file_extension"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.modules.token_embedders.embedding.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.parse_embeddings_file_uri": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.embedding.EmbeddingsFileURI",
    "allennlp.modules.token_embedders.embedding.re",
    "str",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.embedding.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.embedding.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformer": {
  "data": {
   "shadows": "allennlp.modules.openai_transformer.OpenaiTransformer"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformerEmbedder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformerEmbedder.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.OpenaiTransformer",
    "allennlp.modules.scalar_mix.ScalarMix",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformerEmbedder.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.openai_transformer_embedder.torch",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.get_range_vector"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.OpenaiTransformerEmbedder.get_output_dim": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.get_device_of": {
  "data": {
   "shadows": "allennlp.nn.util.get_device_of"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.get_range_vector": {
  "data": {
   "shadows": "allennlp.nn.util.get_range_vector"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.openai_transformer_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder",
    "allennlp.modules.token_embedders.token_characters_encoder.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_characters_encoder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.from_params": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.from_params",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.get_output_dim": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.token_embedder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_embedder.TokenEmbedder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.token_embedders.token_embedder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.nn": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.nn.Initializer": {
  "data": {
   "shadows": "allennlp.nn.initializers.Initializer"
  },
  "type": "import"
 },
 "allennlp.nn.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.initializers.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.activations": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.Registrable._registry",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.activations.Activation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.activations.Activation.__call__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.activations.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.activations.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search": {
  "data": {
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.beam_search.BeamSearch": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.BeamSearch.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch.search": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.StepFunctionType",
    "allennlp.nn.beam_search.torch",
    "float",
    "len",
    "list",
    "range",
    "reversed",
    "step",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.StateType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.StepFunctionType": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.chu_liu_edmonds.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds._find_cycle": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "bool",
    "int",
    "list",
    "range",
    "set",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.chu_liu_edmonds": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.nn.chu_liu_edmonds._find_cycle",
    "allennlp.nn.chu_liu_edmonds.numpy",
    "bool",
    "enumerate",
    "float",
    "int",
    "range",
    "set",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.decode_mst": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.chu_liu_edmonds.chu_liu_edmonds",
    "allennlp.nn.chu_liu_edmonds.numpy",
    "bool",
    "int",
    "range",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.nn.initializers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.Registrable._registry",
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._initializer_wrapper",
    "allennlp.nn.initializers.block_orthogonal",
    "allennlp.nn.initializers.logging",
    "allennlp.nn.initializers.lstm_hidden_bias",
    "allennlp.nn.initializers.torch",
    "allennlp.nn.initializers.uniform_unit_scaling",
    "allennlp.nn.initializers.zero"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.initializers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Initializer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.Initializer.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Initializer.from_params": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.InitializerApplicator": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "allennlp.nn.initializers.InitializerApplicator.__call__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "allennlp.nn.initializers.logger",
    "allennlp.nn.initializers.re",
    "allennlp.nn.initializers.torch",
    "bool",
    "initializer",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.InitializerApplicator.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.InitializerApplicator.from_params": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers.InitializerApplicator",
    "classmethod",
    "is_prevent",
    "str",
    "typing.Iterable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.nn.initializers._initializer_wrapper": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers._initializer_wrapper.Init": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._initializer_wrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers._initializer_wrapper.Init.__call__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers._initializer_wrapper.Init.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "allennlp.nn.initializers._initializer_wrapper.Init.__repr__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "allennlp.nn.initializers._initializer_wrapper.Init.from_params": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.block_orthogonal": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.initializers.itertools",
    "allennlp.nn.initializers.torch",
    "any",
    "float",
    "int",
    "list",
    "range",
    "slice",
    "tuple",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "allennlp.nn.initializers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.lstm_hidden_bias": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.torch.nn.init": {
  "data": {
   "shadows": "torch.nn.init"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.uniform_unit_scaling": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.nn.initializers.math",
    "allennlp.nn.initializers.torch",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.zero": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.L1Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizers.L1Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.L2Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizers.L2Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer.Regularizer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizer.Regularizer.__call__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.regularizers.regularizer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator.__call__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer_applicator.re",
    "allennlp.nn.regularizers.regularizer_applicator.torch",
    "regularizer"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator.from_params": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.nn.regularizers.regularizer.Regularizer.by_name",
    "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator",
    "classmethod",
    "isinstance",
    "regularizer",
    "regularizer_type",
    "str",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "allennlp.nn.regularizers.regularizer.Regularizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer.__call__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "allennlp.nn.regularizers.regularizer.Regularizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer.__call__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.predictors": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.AtisParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.atis_parser.AtisParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.BiaffineDependencyParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.BidafPredictor": {
  "data": {
   "shadows": "allennlp.predictors.bidaf.BidafPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.ConstituencyParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.constituency_parser.ConstituencyParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.CorefPredictor": {
  "data": {
   "shadows": "allennlp.predictors.coref.CorefPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.DecomposableAttentionPredictor": {
  "data": {
   "shadows": "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.DialogQAPredictor": {
  "data": {
   "shadows": "allennlp.predictors.dialog_qa.DialogQAPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.Event2MindPredictor": {
  "data": {
   "shadows": "allennlp.predictors.event2mind.Event2MindPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.NlvrParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.nlvr_parser.NlvrParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.OpenIePredictor": {
  "data": {
   "shadows": "allennlp.predictors.open_information_extraction.OpenIePredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.QuarelParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.quarel_parser.QuarelParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.SemanticRoleLabelerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.SentenceTaggerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.SimpleSeq2SeqPredictor": {
  "data": {
   "shadows": "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.WikiTablesParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.atis_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.atis_parser.AtisParserPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.atis_parser.AtisParserPredictor._json_to_instance": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.atis_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.atis_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.atis_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.atis_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser": {
  "data": {
   "symbols_in_volume": [
    "allennlp.predictors.biaffine_dependency_parser.LINK_TO_POSITION",
    "allennlp.predictors.biaffine_dependency_parser.NODE_TYPE_TO_STYLE"
   ]
  },
  "type": "module"
 },
 "allennlp.predictors.biaffine_dependency_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor._build_hierplane_tree": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.predictors.biaffine_dependency_parser.LINK_TO_POSITION",
    "allennlp.predictors.biaffine_dependency_parser.NODE_TYPE_TO_STYLE",
    "enumerate",
    "int",
    "len",
    "node_constuctor",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor._build_hierplane_tree.node_constuctor": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "node_constuctor"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor._json_to_instance": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor.predict": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor.predict_batch_instance": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.BiaffineDependencyParserPredictor.predict_instance": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.biaffine_dependency_parser.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.LINK_TO_POSITION": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "allennlp.predictors.biaffine_dependency_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.NODE_TYPE_TO_STYLE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.predictors.biaffine_dependency_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.biaffine_dependency_parser.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.bidaf": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.bidaf.BidafPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.bidaf.BidafPredictor._json_to_instance": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.bidaf.BidafPredictor.predict": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.bidaf.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.bidaf.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.bidaf.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.bidaf.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser": {
  "data": {
   "symbols_in_volume": [
    "allennlp.predictors.constituency_parser.NODE_TYPE_TO_STYLE",
    "spacy.lang.en.tag_map.TAG_MAP"
   ]
  },
  "type": "module"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor._build_hierplane_tree": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.constituency_parser.LINK_TO_LABEL",
    "allennlp.predictors.constituency_parser.NODE_TYPE_TO_STYLE",
    "bool",
    "int",
    "isinstance",
    "len",
    "nltk.Tree"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor._json_to_instance": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor.predict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor.predict_batch_instance": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.ConstituencyParserPredictor.predict_instance": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.constituency_parser.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.LINK_TO_LABEL": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.predictors.constituency_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.NODE_TYPE_TO_STYLE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.predictors.constituency_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.TAG_MAP": {
  "data": {
   "shadows": "spacy.lang.en.tag_map.TAG_MAP"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.constituency_parser.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.coref": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.coref.CorefPredictor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.coref.CorefPredictor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.util.get_spacy_model",
    "allennlp.data.DatasetReader",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.coref.CorefPredictor._json_to_instance": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.coref.CorefPredictor._words_list_to_instance": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "filter",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.coref.CorefPredictor.predict": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.coref.CorefPredictor.predict_tokenized": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.coref.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.get_spacy_model": {
  "data": {
   "shadows": "allennlp.common.util.get_spacy_model"
  },
  "type": "import"
 },
 "allennlp.predictors.coref.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.decomposable_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor._json_to_instance": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor.predict": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.decomposable_attention.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.decomposable_attention.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.decomposable_attention.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.decomposable_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.dialog_qa.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.DialogQAPredictor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.dialog_qa.DialogQAPredictor.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.dialog_qa.DialogQAPredictor._json_to_instance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "len",
    "overrides.overrides",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.dialog_qa.DialogQAPredictor.predict": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.dialog_qa.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.dialog_qa.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.predictors.dialog_qa.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.event2mind": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.event2mind.Event2MindPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.event2mind.Event2MindPredictor._json_to_instance": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.event2mind.Event2MindPredictor.predict": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.event2mind.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.event2mind.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.event2mind.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.event2mind.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.nlvr_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.nlvr_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.nlvr_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.nlvr_parser.NlvrParserPredictor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.nlvr_parser.NlvrParserPredictor._json_to_instance": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.nlvr_parser.NlvrParserPredictor.dump_line": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.nlvr_parser.json",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.nlvr_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.nlvr_parser.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.predictors.nlvr_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.open_information_extraction.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.OpenIePredictor": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.open_information_extraction.OpenIePredictor.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.OpenIePredictor._json_to_instance": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.OpenIePredictor.predict_json": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.predictors.open_information_extraction.consolidate_predictions",
    "allennlp.predictors.open_information_extraction.get_predicate_text",
    "allennlp.predictors.open_information_extraction.join_mwp",
    "allennlp.predictors.open_information_extraction.make_oie_string",
    "allennlp.predictors.open_information_extraction.sanitize_label",
    "enumerate",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.consolidate_predictions": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.predictors.open_information_extraction.get_predicate_text",
    "allennlp.predictors.open_information_extraction.join_mwp",
    "allennlp.predictors.open_information_extraction.merge_overlapping_predictions",
    "allennlp.predictors.open_information_extraction.predicates_overlap",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.get_coherent_next_tag": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.get_predicate_indices": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.get_predicate_text": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.predictors.open_information_extraction.get_predicate_indices",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.join_mwp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.make_oie_string": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.merge_overlapping_predictions": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.predictors.open_information_extraction.get_coherent_next_tag",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.predicates_overlap": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.predictors.open_information_extraction.get_predicate_indices",
    "any",
    "bool",
    "set",
    "set.intersection",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.open_information_extraction.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.open_information_extraction.sanitize_label": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.predictor.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.DEFAULT_PREDICTORS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.predictors.predictor.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Predictor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.predictor.Predictor.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.models.Model"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._batch_json_to_instances": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._json_to_instance": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.dump_line": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.predictor.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.from_archive": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.DatasetReader.from_params",
    "allennlp.models.archival.Archive",
    "allennlp.predictors.predictor.DEFAULT_PREDICTORS",
    "allennlp.predictors.predictor.Predictor",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.from_path": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.predictor.Predictor",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.load_line": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.predictor.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_batch_instance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_batch_json": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_instance": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_json": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.quarel_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.QuarelDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.QuarelParserPredictor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.quarel_parser.QuarelParserPredictor._json_to_instance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.quarel_parser.QuarelParserPredictor._my_json_to_instance": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "allennlp.data.dataset_readers.semantic_parsing.quarel.QuarelDatasetReader",
    "allennlp.semparse.contexts.quarel_utils.from_entity_cues_string",
    "allennlp.semparse.contexts.quarel_utils.from_qr_spec_string",
    "allennlp.semparse.contexts.quarel_utils.words_from_entity_string",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.quarel_parser.QuarelParserPredictor.predict_json": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.semparse.contexts.quarel_utils.get_explanation",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.quarel_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.from_entity_cues_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.from_entity_cues_string"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.from_qr_spec_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.from_qr_spec_string"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.get_explanation": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.get_explanation"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.quarel_parser.words_from_entity_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.words_from_entity_string"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.semantic_role_labeler.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor._json_to_instance": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.common.util.JsonDict",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor._sentence_to_srl_instances": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.make_srl_string": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.predict": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.predict_batch_json": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.group_by_count",
    "allennlp.common.util.sanitize",
    "enumerate",
    "len",
    "overrides.overrides",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.predict_instances": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.predict_json": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.predict_tokenized": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "filter",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor.tokens_to_instances": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "enumerate",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.semantic_role_labeler.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.group_by_count": {
  "data": {
   "shadows": "allennlp.common.util.group_by_count"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.semantic_role_labeler.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.sentence_tagger.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.models.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor._json_to_instance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor.predict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.simple_seq2seq": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.simple_seq2seq.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.simple_seq2seq.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.simple_seq2seq.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor._json_to_instance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor.predict": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.simple_seq2seq.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser": {
  "data": {
   "symbols_in_volume": [
    "allennlp.predictors.wikitables_parser.SEMPRE_DIR",
    "allennlp.predictors.wikitables_parser.os",
    "allennlp.predictors.wikitables_parser.pathlib",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.predictors.wikitables_parser.ABBREVIATIONS_FILE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.DEFAULT_EXECUTOR_JAR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.GROW_FILE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.SEMPRE_DIR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.models.Model",
    "allennlp.predictors.wikitables_parser.ABBREVIATIONS_FILE",
    "allennlp.predictors.wikitables_parser.GROW_FILE",
    "allennlp.predictors.wikitables_parser.SEMPRE_DIR",
    "allennlp.predictors.wikitables_parser.os",
    "allennlp.predictors.wikitables_parser.requests",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor._execute_logical_form_on_table": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.check_for_java",
    "allennlp.common.file_utils.cached_path",
    "allennlp.predictors.wikitables_parser.DEFAULT_EXECUTOR_JAR",
    "allennlp.predictors.wikitables_parser.SEMPRE_DIR",
    "allennlp.predictors.wikitables_parser.os",
    "allennlp.predictors.wikitables_parser.shutil",
    "len",
    "open",
    "staticmethod",
    "str",
    "subprocess.run"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor._json_to_instance": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor.predict_batch_instance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor.predict_instance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.wikitables_parser.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.check_for_java": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_java"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.run": {
  "data": {
   "shadows": "subprocess.run"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.wikitables_parser.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.pretrained": {
  "data": {},
  "type": "module"
 },
 "allennlp.pretrained.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.pretrained.PretrainedModel": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "allennlp.pretrained.PretrainedModel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.PretrainedModel.predictor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.biaffine_parser_stanford_dependencies_todzat_2017": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.predictors.BiaffineDependencyParserPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.biaffine_parser_universal_dependencies_todzat_2017": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.predictors.BiaffineDependencyParserPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.bidirectional_attention_flow_seo_2017": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.predictors.BidafPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.decomposable_attention_with_elmo_parikh_2017": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.predictors.DecomposableAttentionPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.esim_nli_with_elmo_chen_2017": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.predictors.DecomposableAttentionPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.fine_grained_named_entity_recognition_with_elmo_peters_2018": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.predictors.SentenceTaggerPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.pretrained.named_entity_recognition_with_elmo_peters_2018": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.predictors.SentenceTaggerPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.neural_coreference_resolution_lee_2017": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.predictors.CorefPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.open_information_extraction_stanovsky_2018": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.predictors.OpenIePredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.predictors": {
  "data": {
   "shadows": "allennlp.predictors"
  },
  "type": "import"
 },
 "allennlp.pretrained.span_based_constituency_parsing_with_elmo_joshi_2018": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.predictors.ConstituencyParserPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.pretrained.srl_with_elmo_luheng_2018": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.predictors.SemanticRoleLabelerPredictor",
    "allennlp.pretrained.PretrainedModel"
   ]
  },
  "type": "function"
 },
 "allennlp.run": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.run.LEVEL",
    "allennlp.run.logging",
    "allennlp.run.os",
    "allennlp.run.run",
    "allennlp.run.sys"
   ]
  },
  "type": "module"
 },
 "allennlp.run.LEVEL": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.run.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.run.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.commands.main"
   ]
  },
  "type": "function"
 },
 "allennlp.run.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.semparse": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.ActionSpaceWalker": {
  "data": {
   "shadows": "allennlp.semparse.action_space_walker.ActionSpaceWalker"
  },
  "type": "import"
 },
 "allennlp.semparse.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ParsingError"
  },
  "type": "import"
 },
 "allennlp.semparse.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse._": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.action_space_walker.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.World",
    "collections.defaultdict",
    "int",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker._get_right_side_parts": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker._walk": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.util.START_SYMBOL",
    "allennlp.semparse.type_declarations.type_declaration.is_nonterminal",
    "len",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker.get_all_logical_forms": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "int",
    "len",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.action_space_walker.ActionSpaceWalker.get_logical_forms_with_agenda": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "all",
    "allennlp.semparse.action_space_walker.logger",
    "int",
    "len",
    "sorted",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.action_space_walker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.semparse.action_space_walker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.action_space_walker.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.contexts.AtisSqlTableContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.atis_sql_table_context.GRAMMAR_DICTIONARY"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS",
    "allennlp.semparse.contexts.atis_sql_table_context.sqlite3",
    "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions",
    "parsimonious.grammar.Grammar",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext.create_grammar_dict_and_strings": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.atis_sql_table_context.GRAMMAR_DICTIONARY",
    "allennlp.semparse.contexts.sql_context_utils.format_action",
    "copy.deepcopy",
    "list",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext.get_grammar_dictionary": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext.get_grammar_string": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.format_grammar_string"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext.get_valid_actions": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.GRAMMAR_DICTIONARY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.format_action": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.format_action"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.format_grammar_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.format_grammar_string"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.initialize_valid_actions": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.atis_sql_table_context.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.knowledge_graph": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.contexts.knowledge_graph.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph.__eq__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.knowledge_graph.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.knowledge_graph.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.re",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.quarel_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.NltkPorterStemmer": {
  "data": {
   "shadows": "nltk.stem.PorterStemmer"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.QuarelWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.quarel_world.QuarelWorld"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.RE_DECAMEL": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.quarel_utils.RE_GROUP": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.quarel_utils.RE_INITLETTER": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.quarel_utils.RE_SEP": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.quarel_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.WorldTaggerExtractor": {
  "data": {
   "lineno": 327
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.quarel_utils.WorldTaggerExtractor.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.WorldTaggerExtractor.get_world_entities": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.quarel_utils.group_worlds",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.align_entities": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.contexts.quarel_utils.get_stem_overlaps",
    "list",
    "nltk.stem.PorterStemmer",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.delete_duplicates": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "set",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.edit_distance": {
  "data": {
   "shadows": "nltk.metrics.distance.edit_distance"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.from_bio": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.from_entity_cues_string": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.RE_SEP",
    "len",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.from_qr_spec_string": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.RE_GROUP",
    "allennlp.semparse.contexts.quarel_utils.RE_SEP",
    "allennlp.semparse.contexts.quarel_utils.to_camel",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.get_explanation": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.contexts.quarel_utils.nl_arg",
    "allennlp.semparse.contexts.quarel_utils.nl_attr",
    "allennlp.semparse.contexts.quarel_utils.nl_dir",
    "allennlp.semparse.contexts.quarel_utils.nl_world_string",
    "allennlp.semparse.contexts.quarel_utils.strip_entity_type",
    "allennlp.semparse.util.lisp_to_nested_expression",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "chr",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.get_stem_overlaps": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.get_words",
    "int",
    "len",
    "nltk.stem.PorterStemmer",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.get_words": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.group_worlds": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.delete_duplicates",
    "allennlp.semparse.contexts.quarel_utils.from_bio",
    "enumerate",
    "int",
    "len",
    "min",
    "nltk.metrics.distance.edit_distance",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.nl_arg": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.contexts.quarel_utils.nl_triple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.nl_attr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.strip_entity_type",
    "allennlp.semparse.contexts.quarel_utils.words_from_entity_string",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.nl_dir": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.nl_triple": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.contexts.quarel_utils.nl_attr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.nl_world_string": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.str_join",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.semparse_util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.quarel_utils.split_question": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.str_join": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.strip_entity_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.re",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.to_camel": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.RE_INITLETTER",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.to_qr_spec_string": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.quarel_utils.words_from_entity_string": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.RE_DECAMEL",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.re"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.sql_context_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.Node": {
  "data": {
   "shadows": "parsimonious.nodes.Node"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.NodeVisitor": {
  "data": {
   "shadows": "parsimonious.nodes.NodeVisitor"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.OneOf": {
  "data": {
   "shadows": "parsimonious.expressions.OneOf"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.Sequence": {
  "data": {
   "shadows": "parsimonious.expressions.Sequence"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.SqlVisitor": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "parsimonious.nodes.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.sql_context_utils.SqlVisitor.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.SqlVisitor.add_action": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.WHITESPACE_REGEX",
    "isinstance",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.SqlVisitor.generic_visit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "overrides.overrides",
    "parsimonious.nodes.Node",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.SqlVisitor.visit": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "list",
    "method",
    "overrides.overrides",
    "parsimonious.exceptions.UndefinedLabel",
    "parsimonious.exceptions.VisitationError",
    "reversed",
    "six.reraise",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.UndefinedLabel": {
  "data": {
   "shadows": "parsimonious.exceptions.UndefinedLabel"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.VisitationError": {
  "data": {
   "shadows": "parsimonious.exceptions.VisitationError"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.WHITESPACE_REGEX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.exc_info": {
  "data": {
   "shadows": "sys.exc_info"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.format_action": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.WHITESPACE_REGEX",
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.format_grammar_string": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.format_action",
    "collections.defaultdict",
    "isinstance",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOf",
    "parsimonious.expressions.Sequence",
    "parsimonious.grammar.Grammar",
    "repr",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.sql_context_utils.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.sql_context_utils.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_context.MONTH_NUMBERS"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.table_question_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.KnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.MONTH_NUMBERS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_context.NUMBER_CHARACTERS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_context.NUMBER_WORDS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_context.ORDER_OF_MAGNITUDE_WORDS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_context.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.STOP_WORDS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_context.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.__eq__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_context.TableQuestionContext",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "collections.defaultdict",
    "dict",
    "list",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext._expand_entities": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext._get_numbers_from_tokens": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.table_question_context.NUMBER_CHARACTERS",
    "allennlp.semparse.contexts.table_question_context.NUMBER_WORDS",
    "allennlp.semparse.contexts.table_question_context.ORDER_OF_MAGNITUDE_WORDS",
    "enumerate",
    "float",
    "int",
    "len",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext._process_conjunction": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext._string_in_table": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "list",
    "set",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.get_entities_from_question": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_context.STOP_WORDS",
    "enumerate",
    "int",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.get_table_knowledge_graph": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "collections.defaultdict",
    "dict",
    "list",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.normalize_string": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_context.re",
    "staticmethod",
    "str",
    "unidecode.unidecode"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.read_from_file": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.table_question_context.csv",
    "classmethod",
    "cls.read_from_lines",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.TableQuestionContext.read_from_lines": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "classmethod",
    "cls",
    "dict",
    "int",
    "len",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_context.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_context.unidecode": {
  "data": {
   "shadows": "unidecode.unidecode"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_knowledge_graph.MONTH_NUMBERS"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.DEFAULT_NUMBERS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.KnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.MONTH_NUMBERS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.NUMBER_CHARACTERS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.NUMBER_WORDS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.ORDER_OF_MAGNITUDE_WORDS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "allennlp.semparse.contexts.table_question_knowledge_graph.re"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.__eq__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "isinstance",
    "overrides.overrides",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "collections.defaultdict",
    "list",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._get_cell_parts": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "classmethod",
    "cls._normalize_string",
    "cls.cell_part_regex.split",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._get_longest_span_matching_entities": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "int",
    "len",
    "list",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._get_numbers_from_tokens": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.table_question_knowledge_graph.NUMBER_CHARACTERS",
    "allennlp.semparse.contexts.table_question_knowledge_graph.NUMBER_WORDS",
    "allennlp.semparse.contexts.table_question_knowledge_graph.ORDER_OF_MAGNITUDE_WORDS",
    "enumerate",
    "float",
    "int",
    "len",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._normalize_string": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_knowledge_graph.re",
    "staticmethod",
    "str",
    "unidecode.unidecode"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._should_split_cell": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph._should_split_column_cells": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "any",
    "bool",
    "classmethod",
    "cls._should_split_cell",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.get_linked_agenda_items": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.read_from_file": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "classmethod",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.read_from_json": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_knowledge_graph.DEFAULT_NUMBERS",
    "classmethod",
    "cls",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "int",
    "len",
    "list",
    "set",
    "str",
    "typing.Any",
    "typing.DefaultDict",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph.read_from_lines": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "classmethod",
    "enumerate",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.table_question_knowledge_graph.unidecode": {
  "data": {
   "shadows": "unidecode.unidecode"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.contexts.text2sql_table_context.GRAMMAR_DICTIONARY",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.contexts.text2sql_table_context.Cursor": {
  "data": {
   "shadows": "sqlite3.Cursor"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.GRAMMAR_DICTIONARY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.semparse.contexts.text2sql_table_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.TableColumn": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.column_has_numeric_type": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_numeric_type"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.column_has_string_type": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_string_type"
  },
  "type": "import"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_numbers_and_strings_with_variables": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_numeric_type",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_string_type",
    "float",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_to_be_variable_free": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_values_with_variables": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_global_values": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_table_values": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_numeric_type",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.column_has_string_type",
    "sorted",
    "sqlite3.Cursor",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_tables": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn",
    "list",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_untyped_entities": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.executors.NlvrExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.SqlExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.sql_executor.SqlExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.WikiTablesSempreExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.WikiTablesVariableFreeExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.executors.nlvr_executor.logging",
    "int",
    "str",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.executors.nlvr_executor.AttributeType": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.nlvr_executor.Box": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_box.Box"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.ExecutionError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ExecutionError"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.__eq__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.NlvrExecutor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.operator",
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._all_equals": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "all",
    "bool",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._any_equals": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "any",
    "bool",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._color": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "set",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._color_count": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "int",
    "len",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._count": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "int",
    "len",
    "staticmethod",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._different": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "len",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._execute_assertion": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.logger",
    "allennlp.semparse.worlds.world.ExecutionError",
    "attribute_function",
    "bool",
    "count_function",
    "isinstance",
    "len",
    "list",
    "number_comparison",
    "set_comparison",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._execute_box_filter": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.logger",
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.world.ExecutionError",
    "comparison_function",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._execute_constant": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.logger",
    "allennlp.semparse.worlds.world.ExecutionError",
    "int",
    "isinstance",
    "staticmethod",
    "str",
    "str.isdigit"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._execute_object_filter": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.semparse.executors.nlvr_executor.logger",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "allennlp.semparse.worlds.world.ExecutionError",
    "function",
    "getattr",
    "isinstance",
    "len",
    "list",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._filter_boxes": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "allennlp.semparse.executors.nlvr_executor.AttributeType",
    "allennlp.semparse.worlds.nlvr_box.Box",
    "attribute_function",
    "bool",
    "comparison_op",
    "set",
    "staticmethod",
    "typing.Callable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._get_objects_with_same_attribute": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "attribute_function",
    "collections.defaultdict",
    "len",
    "max",
    "set",
    "staticmethod",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._handle_expression": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._none_equals": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "all",
    "bool",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._objects_touch_each_other": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._same": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bool",
    "len",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._separate_objects_by_boxes": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "collections.defaultdict",
    "list",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._shape": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "set",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor._shape_count": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "int",
    "len",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.above": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "min",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.below": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "max",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.big": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.black": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.blue": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.bottom": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "max",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.circle": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.execute": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.semparse.util.lisp_to_nested_expression",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.medium": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.negate_filter": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "filter_function",
    "staticmethod",
    "typing.Callable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.object_in_box": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "set",
    "staticmethod",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.same_color": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.same_shape": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.small": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.square": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.top": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "min",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_bottom": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_corner": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_left": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_object": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_right": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_top": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.touch_wall": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.triangle": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.NlvrExecutor.yellow": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_object.Object",
    "classmethod",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.nlvr_executor.Object": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_object.Object"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.nlvr_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.nlvr_executor.semparse_util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.executors.sql_executor.logging",
    "allennlp.semparse.executors.sql_executor.multiprocessing"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.executors.sql_executor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor.MULTIPROCESSING_LOGGER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.sql_executor.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor.SqlExecutor": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "allennlp.semparse.executors.sql_executor.SqlExecutor.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.semparse.executors.sql_executor.sqlite3",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.sql_executor.SqlExecutor._evaluate_sql_query_subprocess": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.semparse.executors.sql_executor.logger",
    "allennlp.semparse.executors.sql_executor.sqlite3",
    "exit",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.sql_executor.SqlExecutor.evaluate_sql_query": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.semparse.executors.sql_executor.MULTIPROCESSING_LOGGER",
    "allennlp.semparse.executors.sql_executor.logger",
    "allennlp.semparse.executors.sql_executor.logging",
    "int",
    "multiprocessing.Process",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.sql_executor.SqlExecutor.postprocess_query_sqlite": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.sql_executor.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.sql_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.sql_executor.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_DIR",
    "allennlp.semparse.executors.wikitables_sempre_executor.logging",
    "allennlp.semparse.executors.wikitables_sempre_executor.os",
    "allennlp.semparse.executors.wikitables_sempre_executor.pathlib",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.ABBREVIATIONS_FILE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.GROW_FILE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_EXECUTOR_JAR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_DIR",
    "allennlp.semparse.executors.wikitables_sempre_executor.os",
    "allennlp.semparse.executors.wikitables_sempre_executor.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor._create_sempre_executor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.check_for_java",
    "allennlp.common.file_utils.cached_path",
    "allennlp.semparse.executors.wikitables_sempre_executor.ABBREVIATIONS_FILE",
    "allennlp.semparse.executors.wikitables_sempre_executor.GROW_FILE",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_DIR",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_EXECUTOR_JAR",
    "allennlp.semparse.executors.wikitables_sempre_executor.atexit",
    "allennlp.semparse.executors.wikitables_sempre_executor.logger",
    "allennlp.semparse.executors.wikitables_sempre_executor.os",
    "allennlp.semparse.executors.wikitables_sempre_executor.requests",
    "allennlp.semparse.executors.wikitables_sempre_executor.subprocess",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor._stop_sempre_executor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_DIR",
    "allennlp.semparse.executors.wikitables_sempre_executor.logger",
    "allennlp.semparse.executors.wikitables_sempre_executor.os",
    "allennlp.semparse.executors.wikitables_sempre_executor.shutil"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.WikiTablesSempreExecutor.evaluate_logical_form": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.check_for_java": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_java"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_sempre_executor.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logging",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date.__eq__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date.__ge__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date.__gt__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Date.__str__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.ExecutionError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ExecutionError"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.MONTH_NUMBERS": {
  "data": {
   "shadows": "allennlp.semparse.contexts.table_question_knowledge_graph.MONTH_NUMBERS"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.__eq__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._get_date_row_pairs_to_filter": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._get_number_row_pairs_to_filter": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "staticmethod",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._get_row_index": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._handle_constant": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._handle_expression": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.semparse.worlds.world.ExecutionError",
    "function",
    "getattr",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._make_date": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_knowledge_graph.MONTH_NUMBERS",
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "int",
    "len",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor._value_looks_like_date": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.table_question_knowledge_graph.MONTH_NUMBERS",
    "bool",
    "len",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.argmax": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.argmin": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.average": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "float",
    "len",
    "str",
    "sum",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.count": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "float",
    "len",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.date": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.worlds.world.ExecutionError",
    "int",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.diff": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.evaluate_logical_form": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.normalize_string",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "allennlp.semparse.worlds.world.ExecutionError",
    "allennlp.tools.wikitables_evaluator.check_denotation",
    "allennlp.tools.wikitables_evaluator.to_value_list",
    "bool",
    "isinstance",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.execute": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.semparse.util.lisp_to_nested_expression",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_equals": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_greater": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_greater_equals": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_lesser": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_lesser_equals": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_date_not_equals": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date",
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_in": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "list",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_not_in": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "isinstance",
    "list",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_equals": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_greater": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_greater_equals": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_lesser": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_lesser_equals": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.filter_number_not_equals": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.worlds.world.ExecutionError",
    "float",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.first": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.last": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.max": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "float",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.min": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "float",
    "min",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.mode": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.next": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "len",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.previous": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "len",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.same_as": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "allennlp.semparse.executors.wikitables_variable_free_executor.logger",
    "len",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.select": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.WikiTablesVariableFreeExecutor.sum": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.NestedList",
    "float",
    "str",
    "sum",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.evaluator": {
  "data": {
   "shadows": "allennlp.tools.wikitables_evaluator"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.executors.wikitables_variable_free_executor.semparse_util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_BOX_COUNT_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_COLOR_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_OBJECT_COUNT_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_SHAPE_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_ATTRIBUTE_SAME_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COLOR_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COUNT_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_EXISTS_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_MEMBERSHIP_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_SHAPE_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.COLOR_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.NEGATE_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.NUM_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.NegateFilterType",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_EXISTS_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.SHAPE_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.name_mapper",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.num_string",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.NameMapper",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "nltk.sem.logic.EntityType",
    "nltk.sem.logic.TRUTH_TYPE",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_BOX_COUNT_TYPE": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_COLOR_TYPE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_OBJECT_COUNT_TYPE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_SHAPE_TYPE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BASIC_TYPES": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_ATTRIBUTE_SAME_FILTER_TYPE": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COLOR_FILTER_TYPE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COUNT_FILTER_TYPE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_EXISTS_TYPE": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_MEMBERSHIP_TYPE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_SHAPE_FILTER_TYPE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_TYPE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.BasicType": {
  "data": {
   "shadows": "nltk.sem.logic.BasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.COLOR_TYPE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.COMMON_NAME_MAPPING": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.COMMON_TYPE_SIGNATURE": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.EntityType": {
  "data": {
   "shadows": "nltk.sem.logic.EntityType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.HigherOrderType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.HigherOrderType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NEGATE_FILTER_TYPE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NUM_TYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NameMapper": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NameMapper"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NegateFilterType": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.HigherOrderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NegateFilterType.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.NegateFilterType.substitute_any_type": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_EXISTS_TYPE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_FILTER_TYPE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.OBJECT_TYPE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.SHAPE_TYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.TRUTH_TYPE": {
  "data": {
   "shadows": "nltk.sem.logic.TRUTH_TYPE"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.name_mapper": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.num_string": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.nlvr_type_declaration.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration.NameMapper": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NameMapper"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration.QuarelTypeDeclaration": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.quarel_type_declaration.QuarelTypeDeclaration.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.NameMapper",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.util.START_SYMBOL",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "set"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE": {
  "data": {
   "shadows": "nltk.sem.logic.ANY_TYPE"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.ApplicationExpression": {
  "data": {
   "shadows": "nltk.sem.logic.ApplicationExpression"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.BasicType": {
  "data": {
   "shadows": "nltk.sem.logic.BasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.BinaryOpType": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.BinaryOpType.__init__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.ComplexType",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.BinaryOpType.get_application_type": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.BinaryOpType.resolve": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.BinaryOpType",
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.BinaryOpType.substitute_any_type": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.BinaryOpType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.ComplexType": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nltk.sem.logic.ComplexType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.ComplexType.argument_types": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.ComplexType.return_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.ComplexType.substitute_any_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.substitute_any_type",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.ConstantExpression": {
  "data": {
   "shadows": "nltk.sem.logic.ConstantExpression"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "nltk.sem.logic.ApplicationExpression"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression.__init__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression",
    "nltk.sem.logic.Expression",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression._set_type": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression",
    "isinstance",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.ApplicationExpression",
    "nltk.sem.logic.Type",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression.type": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression",
    "nltk.sem.logic.ANY_TYPE",
    "property",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "nltk.sem.logic.LogicParser"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser.__eq__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser.__init__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser",
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType",
    "bool",
    "isinstance",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "set",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser.make_ApplicationExpression": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeApplicationExpression",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser.make_VariableExpression": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser",
    "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression",
    "nltk.sem.logic.Variable",
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.Expression": {
  "data": {
   "shadows": "nltk.sem.logic.Expression"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.HigherOrderType": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nltk.sem.logic.ComplexType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.HigherOrderType.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "nltk.sem.logic.Type",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.HigherOrderType.argument_types": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.HigherOrderType.return_type": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.LAMBDA_VARIABLES": {
  "data": {
   "lineno": 701
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.type_declaration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.LogicParser": {
  "data": {
   "shadows": "nltk.sem.logic.LogicParser"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nltk.sem.logic.BasicType",
    "set",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType.matches": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NameMapper": {
  "data": {
   "lineno": 482
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.NameMapper.__init__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "bool",
    "len",
    "nltk.sem.logic.Type",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NameMapper.get_alias": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NameMapper.get_signature": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NameMapper.map_name_with_signature": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "RuntimeError",
    "nltk.sem.logic.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NamedBasicType": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nltk.sem.logic.BasicType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.NamedBasicType.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NamedBasicType.__str__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.common.util.START_SYMBOL"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NamedBasicType.str": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.NltkComplexType": {
  "data": {
   "shadows": "nltk.sem.logic.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.ComplexType.__hash__",
    "str"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.__eq__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.__str__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nltk.sem.logic.ANY_TYPE",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.get_application_type": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "NotImplementedError",
    "nltk.sem.logic.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.matches": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bool",
    "nltk.sem.logic.ANY_TYPE",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.resolve": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.str": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.ANY_TYPE.str",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.PlaceholderType.substitute_any_type": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL": {
  "data": {
   "shadows": "allennlp.common.util.START_SYMBOL"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.START_TYPE": {
  "data": {
   "lineno": 695
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.type_declaration.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "nltk.sem.logic.ConstantExpression"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression.__init__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression",
    "nltk.sem.logic.Type",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression._set_type": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.TypedConstantExpression",
    "nltk.sem.logic.ANY_TYPE",
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.UnaryOpType": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.type_declaration.UnaryOpType.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.UnaryOpType.get_application_type": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.UnaryOpType.resolve": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.UnaryOpType",
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.UnaryOpType.substitute_any_type": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.UnaryOpType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.Variable": {
  "data": {
   "shadows": "nltk.sem.logic.Variable"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration._get_complex_type_production": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration._make_production_string",
    "allennlp.semparse.type_declarations.type_declaration.itertools",
    "isinstance",
    "list",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration._make_production_string": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.get_valid_actions": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration._get_complex_type_production",
    "allennlp.semparse.type_declarations.type_declaration._make_production_string",
    "allennlp.semparse.type_declarations.type_declaration.substitute_any_type",
    "chr",
    "collections.defaultdict",
    "int",
    "isinstance",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "ord",
    "range",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.is_nonterminal": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.LAMBDA_VARIABLES",
    "bool",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.type_declaration.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.type_declaration.substitute_any_type": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.BinaryOpType",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.NameMapper",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration.UnaryOpType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ARG_EXTREME_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BINARY_NUM_OP_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CONJUNCTION_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COUNT_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_FUNCTION_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_TO_CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.IDENTITY_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_FUNCTION_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUM_TO_CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TO_CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.REVERSE_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_INDEX_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TO_ROW_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.UNARY_DATE_NUM_OP_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.UNARY_NUM_OP_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.name_mapper",
    "nltk.sem.logic.ANY_TYPE"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ANY_TYPE": {
  "data": {
   "shadows": "nltk.sem.logic.ANY_TYPE"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ARG_EXTREME_TYPE": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType.get_application_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType.resolve": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType",
    "isinstance",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType.substitute_any_type": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BASIC_TYPES": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BINARY_NUM_OP_TYPE": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BasicType": {
  "data": {
   "shadows": "nltk.sem.logic.BasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BinaryOpType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.BinaryOpType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COLUMN_TYPE": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_NAME_MAPPING": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_TYPE_SIGNATURE": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CONJUNCTION_TYPE": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COUNT_TYPE": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType.get_application_type": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType.resolve": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType",
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType.substitute_any_type": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_FUNCTION_TYPE": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_TO_CELL_TYPE": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_TYPE": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.HigherOrderType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.HigherOrderType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.IDENTITY_TYPE": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_FUNCTION_TYPE": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_TYPE": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUM_TO_CELL_TYPE": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NameMapper": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NameMapper"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NltkComplexType": {
  "data": {
   "shadows": "nltk.sem.logic.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TO_CELL_TYPE": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TYPE": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PlaceholderType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.REVERSE_TYPE": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_INDEX_TYPE": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TO_ROW_TYPE": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.HigherOrderType",
    "allennlp.semparse.type_declarations.type_declaration.PlaceholderType"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType.get_application_type": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType.resolve": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType",
    "isinstance",
    "nltk.sem.logic.ComplexType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType.substitute_any_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType",
    "nltk.sem.logic.ANY_TYPE",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.UNARY_DATE_NUM_OP_TYPE": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.UNARY_NUM_OP_TYPE": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.UnaryOpType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.UnaryOpType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.name_mapper": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_lambda_dcs.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free": {
  "data": {
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration.NameMapper",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COUNT_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_FUNCTION_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.GENERIC_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUM_DIFF_WITH_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_DATE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_NUMBER",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_STRING",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COMPARABLE_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_GENERIC_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_NUM_OP",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.SELECT_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.comparable_column_name_mapper",
    "allennlp.semparse.type_declarations.wikitables_variable_free.date_column_name_mapper",
    "allennlp.semparse.type_declarations.wikitables_variable_free.generic_name_mapper",
    "allennlp.semparse.type_declarations.wikitables_variable_free.number_column_name_mapper",
    "allennlp.semparse.type_declarations.wikitables_variable_free.string_column_name_mapper"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.BASIC_TYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COMMON_NAME_MAPPING": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COMMON_TYPE_SIGNATURE": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_NAME_MAPPING": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_TYPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_TYPE_SIGNATURE": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.COUNT_TYPE": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_NAME_MAPPING": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE_SIGNATURE": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_FUNCTION_TYPE": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_TYPE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.GENERIC_COLUMN_TYPE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.MultiMatchNamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_NAME_MAPPING": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE_SIGNATURE": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_TYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NUM_DIFF_WITH_COLUMN": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NameMapper": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NameMapper"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_DATE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_NUMBER": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_STRING": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COMPARABLE_COLUMN": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_GENERIC_COLUMN": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_NUM_OP": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_TYPE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.SELECT_TYPE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.STARTING_TYPES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_NAME_MAPPING": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE_SIGNATURE": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_TYPE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.comparable_column_name_mapper": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.date_column_name_mapper": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.generic_name_mapper": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.number_column_name_mapper": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "allennlp.semparse.type_declarations.wikitables_variable_free.string_column_name_mapper": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "allennlp.semparse.util": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.util.lisp_to_nested_expression": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.atis_world.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.WikiTablesVariableFreeWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.atis_world.AtisSqlTableContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.__eq__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "all",
    "allennlp.semparse.worlds.atis_world.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.semparse.contexts.atis_sql_table_context.AtisSqlTableContext",
    "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS",
    "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions",
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "allennlp.semparse.worlds.atis_world.numpy",
    "parsimonious.grammar.Grammar",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._add_numeric_nonterminal_to_grammar": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOf",
    "parsimonious.grammar.Grammar",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._flatten_entities": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.numpy",
    "sorted",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._get_dates": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "get_date_from_utterance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._get_linked_entities": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "allennlp.semparse.worlds.atis_world.get_strings_from_utterance",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._get_numeric_database_values": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._get_sequence_with_spacing": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "parsimonious.expressions.Expression",
    "parsimonious.expressions.Sequence",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._ignore_dates": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._update_expression_reference": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld._update_grammar": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS",
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "copy.copy",
    "list",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOf"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.add_dates_to_number_linking_scores": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS",
    "allennlp.semparse.contexts.sql_context_utils.format_action",
    "enumerate",
    "int",
    "nltk.bigrams",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.add_to_number_linking_scores": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS",
    "allennlp.semparse.contexts.sql_context_utils.format_action",
    "get_number_linking_dict",
    "int",
    "len",
    "sorted",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.all_possible_actions": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "set",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.get_action_sequence": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS",
    "allennlp.semparse.contexts.sql_context_utils.SqlVisitor",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.AtisWorld.get_valid_actions": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Expression": {
  "data": {
   "shadows": "parsimonious.expressions.Expression"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.KEYWORDS": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.KEYWORDS"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.NUMERIC_NONTERMINALS": {
  "data": {
   "shadows": "allennlp.semparse.contexts.atis_sql_table_context.NUMERIC_NONTERMINALS"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.OneOf": {
  "data": {
   "shadows": "parsimonious.expressions.OneOf"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Sequence": {
  "data": {
   "shadows": "parsimonious.expressions.Sequence"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.SqlVisitor": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.SqlVisitor"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.bigrams": {
  "data": {
   "shadows": "nltk.bigrams"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.format_action": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.format_action"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.get_strings_from_utterance": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "defaultdict",
    "enumerate",
    "int",
    "list",
    "nltk.bigrams",
    "nltk.ngrams",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.atis_world.initialize_valid_actions": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.ngrams": {
  "data": {
   "shadows": "nltk.ngrams"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.atis_world.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_box": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.nlvr_box.Box": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.nlvr_box.Box.__eq__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_box.Box.__hash__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_box.Box.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.worlds.nlvr_object.Object",
    "int",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_box.Box.__str__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_box.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_box.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_box.Object": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_object.Object"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_object": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.nlvr_object.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_object.Object": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.nlvr_object.Object.__eq__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_object.Object.__hash__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_object.Object.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_object.Object.__str__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.worlds.nlvr_world.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.worlds.nlvr_world.Box": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_box.Box"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.NlvrExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_BOX_COUNT_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_COLOR_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_OBJECT_COUNT_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.ASSERT_SHAPE_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COLOR_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_COUNT_FILTER_TYPE",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BOX_SHAPE_FILTER_TYPE",
    "allennlp.semparse.worlds.world.World"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.semparse.executors.NlvrExecutor",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.COMMON_NAME_MAPPING",
    "allennlp.semparse.type_declarations.nlvr_type_declaration.COMMON_TYPE_SIGNATURE",
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.semparse.worlds.nlvr_world.NlvrWorld",
    "enumerate",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld._add_nonterminal_productions": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "list",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld._get_curried_functions": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_world.NlvrWorld",
    "int",
    "nltk.sem.logic.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld._get_number_productions": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld._map_name": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.nlvr_type_declaration.COMMON_NAME_MAPPING",
    "bool",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld.execute": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld.get_agenda_for_sentence": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld.get_basic_types": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.nlvr_type_declaration.BASIC_TYPES",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.NlvrWorld.get_valid_starting_types": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.nlvr_type_declaration.TRUTH_TYPE",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.nlvr_world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.semparse.worlds.nlvr_world.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.nlvr_world.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.nlvr_type_declaration"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.quarel_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.KnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelTypeDeclaration": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.quarel_type_declaration.QuarelTypeDeclaration"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.World"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph",
    "allennlp.semparse.type_declarations.quarel_type_declaration.QuarelTypeDeclaration",
    "allennlp.semparse.worlds.quarel_world.QuarelWorld",
    "dict",
    "int",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._check_compatible": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bool",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._entity_index": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._exec_and": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._exec_infer": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._get_curried_functions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "nltk.sem.logic.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._get_qr_coeff": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld._map_name": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld.execute": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "allennlp.semparse.util.lisp_to_nested_expression",
    "allennlp.semparse.worlds.quarel_world.re",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld.get_basic_types": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld.get_valid_starting_types": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.QuarelWorld.is_table_entity": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.quarel_world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.quarel_world.semparse_util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.text2sql_world.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.Cursor": {
  "data": {
   "shadows": "sqlite3.Cursor"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.GRAMMAR_DICTIONARY": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.GRAMMAR_DICTIONARY"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.Grammar": {
  "data": {
   "shadows": "parsimonious.Grammar"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.SqlVisitor": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.SqlVisitor"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema",
    "allennlp.semparse.contexts.text2sql_table_context.GRAMMAR_DICTIONARY",
    "allennlp.semparse.worlds.text2sql_world.os",
    "bool",
    "copy.deepcopy",
    "sqlite3.Cursor",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld._initialize_grammar_dictionary": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_to_be_variable_free",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_global_values",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_table_values",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_tables",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_untyped_entities",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld.get_action_sequence_and_all_actions": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.semparse.contexts.sql_context_utils.SqlVisitor",
    "allennlp.semparse.contexts.sql_context_utils.format_grammar_string",
    "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_numbers_and_strings_with_variables",
    "allennlp.semparse.contexts.text2sql_table_context.update_grammar_values_with_variables",
    "copy.deepcopy",
    "parsimonious.Grammar",
    "parsimonious.exceptions.ParseError",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld.is_global_rule": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.text2sql_world.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.format_grammar_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.format_grammar_string"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.initialize_valid_actions": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.initialize_valid_actions"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.read_dataset_schema": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_numbers_and_strings_with_variables": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_numbers_and_strings_with_variables"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_to_be_variable_free": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_to_be_variable_free"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_values_with_variables": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_values_with_variables"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_with_global_values": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_global_values"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_with_table_values": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_table_values"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_with_tables": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_tables"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.text2sql_world.update_grammar_with_untyped_entities": {
  "data": {
   "shadows": "allennlp.semparse.contexts.text2sql_table_context.update_grammar_with_untyped_entities"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.worlds.wikitables_variable_free_world.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ParsingError"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.WikiTablesVariableFreeExecutor"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUM_DIFF_WITH_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_DATE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_NUMBER",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COLUMN_AND_STRING",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_COMPARABLE_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_FILTER_WITH_GENERIC_COLUMN",
    "allennlp.semparse.type_declarations.wikitables_variable_free.ROW_NUM_OP",
    "allennlp.semparse.type_declarations.wikitables_variable_free.SELECT_TYPE",
    "allennlp.semparse.worlds.world.World"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext",
    "allennlp.semparse.executors.WikiTablesVariableFreeExecutor",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMMON_NAME_MAPPING",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMMON_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_NAME_MAPPING.items",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_NAME_MAPPING.items",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_NAME_MAPPING.items",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_NAME_MAPPING.items",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_TYPE",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld._get_curried_functions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld",
    "int",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld._map_name": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMMON_NAME_MAPPING",
    "allennlp.semparse.worlds.world.ParsingError",
    "bool",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld._translate_name_and_add_mapping": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_TYPE",
    "allennlp.semparse.worlds.wikitables_variable_free_world.re",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.evaluate_logical_form": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.execute": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.get_agenda": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_TYPE",
    "allennlp.semparse.worlds.wikitables_variable_free_world.re",
    "any",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.get_basic_types": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.BASIC_TYPES",
    "allennlp.semparse.type_declarations.wikitables_variable_free.COMPARABLE_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.DATE_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.NUMBER_COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_variable_free.STRING_COLUMN_TYPE",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.get_valid_starting_types": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free.STARTING_TYPES",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.WikiTablesVariableFreeWorld.is_instance_specific_entity": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_variable_free_world.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_variable_free"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world": {
  "data": {},
  "type": "module"
 },
 "allennlp.semparse.worlds.wikitables_world.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ParsingError"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ARG_EXTREME_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BINARY_NUM_OP_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CONJUNCTION_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.DATE_FUNCTION_TYPE",
    "allennlp.semparse.worlds.world.World"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_NAME_MAPPING",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_TYPE_SIGNATURE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TYPE",
    "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld",
    "set",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld._get_curried_functions": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld",
    "int",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld._map_name": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COLUMN_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_NAME_MAPPING",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.NUMBER_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.PART_TYPE",
    "allennlp.semparse.worlds.wikitables_world.re",
    "allennlp.semparse.worlds.world.ParsingError",
    "bool",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld._remove_action_from_type": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "filter_function",
    "len",
    "staticmethod",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.get_agenda": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.get_basic_types": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BASIC_TYPES",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.get_valid_actions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.get_valid_starting_types": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BASIC_TYPES",
    "nltk.sem.logic.Type",
    "overrides.overrides",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.WikiTablesWorld.is_table_entity": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.wikitables_world.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.wikitables_world.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.semparse.worlds.world.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.semparse.worlds.world.ApplicationExpression": {
  "data": {
   "shadows": "nltk.sem.logic.ApplicationExpression"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.BasicType": {
  "data": {
   "shadows": "nltk.sem.logic.BasicType"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.ExecutionError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.world.ExecutionError.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.ExecutionError.__str__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.Expression": {
  "data": {
   "shadows": "nltk.sem.logic.Expression"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.LambdaExpression": {
  "data": {
   "shadows": "nltk.sem.logic.LambdaExpression"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.ParsingError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.world.ParsingError.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ParsingError",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.ParsingError.__str__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.Type": {
  "data": {
   "shadows": "nltk.sem.logic.Type"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.World": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "allennlp.semparse.worlds.world.World.__eq__": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser",
    "int",
    "nltk.sem.logic.BasicType",
    "nltk.sem.logic.Type",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._add_name_mapping": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "nltk.sem.logic.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._construct_node_from_actions": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ParsingError",
    "allennlp.semparse.worlds.world.logger",
    "bool",
    "nltk.Tree",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._get_curried_functions": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._get_right_side_indexed_actions": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._get_transitions": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "nltk.sem.logic.ApplicationExpression",
    "nltk.sem.logic.Expression",
    "nltk.sem.logic.LambdaExpression",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._infer_num_arguments": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._map_name": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World._process_nested_expression": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.all_possible_actions": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "chr",
    "ord",
    "range",
    "set",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_action_sequence": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.START_TYPE",
    "nltk.sem.logic.Expression",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_basic_types": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError",
    "nltk.sem.logic.Type",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_logical_form": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ParsingError",
    "allennlp.semparse.worlds.world.logger",
    "allennlp.semparse.worlds.world.nltk_tree_to_logical_form",
    "bool",
    "nltk.Tree",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_multi_match_mapping": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType",
    "isinstance",
    "nltk.sem.logic.Type",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_name_mapping": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_paths_to_root": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.START_SYMBOL",
    "int",
    "len",
    "list",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_type_signatures": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_valid_actions": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.get_valid_starting_types": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError",
    "nltk.sem.logic.Type",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.is_terminal": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.World.parse_logical_form": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "allennlp.semparse.util.lisp_to_nested_expression",
    "allennlp.semparse.worlds.world.re",
    "bool",
    "nltk.sem.logic.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.semparse.worlds.world.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.nltk_tree_to_logical_form": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "nltk.Tree",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.semparse.worlds.world.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.semparse_util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.semparse.worlds.world.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.service": {
  "data": {},
  "type": "module"
 },
 "allennlp.service.config_explorer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.service.config_explorer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.service.config_explorer.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.ServerError": {
  "data": {
   "shadows": "allennlp.service.server_simple.ServerError"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.choices": {
  "data": {
   "shadows": "allennlp.common.configuration.choices"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.configure": {
  "data": {
   "shadows": "allennlp.common.configuration.configure"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.import_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_submodules"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.service.config_explorer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.make_app": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.util.import_submodules",
    "flask.Flask",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.service.config_explorer.make_app.api_config": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.configuration.choices",
    "allennlp.common.configuration.configure",
    "flask.Response",
    "flask.jsonify",
    "flask.request.args.get"
   ]
  },
  "type": "function"
 },
 "allennlp.service.config_explorer.make_app.handle_invalid_usage": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.service.server_simple.ServerError",
    "flask.Response",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "allennlp.service.config_explorer.make_app.index": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask.Response",
    "flask.send_file"
   ]
  },
  "type": "function"
 },
 "allennlp.service.config_explorer.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "allennlp.service.config_explorer.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "allennlp.service.predictors": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.BidafPredictor": {
  "data": {
   "shadows": "allennlp.predictors.bidaf.BidafPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.ConstituencyParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.constituency_parser.ConstituencyParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.CorefPredictor": {
  "data": {
   "shadows": "allennlp.predictors.coref.CorefPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.DecomposableAttentionPredictor": {
  "data": {
   "shadows": "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.NlvrParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.nlvr_parser.NlvrParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.SemanticRoleLabelerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.SentenceTaggerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.SimpleSeq2SeqPredictor": {
  "data": {
   "shadows": "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.WikiTablesParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.bidaf": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.bidaf.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.bidaf.BidafPredictor": {
  "data": {
   "shadows": "allennlp.predictors.bidaf.BidafPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.bidaf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.constituency_parser": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.constituency_parser.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.constituency_parser.ConstituencyParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.constituency_parser.ConstituencyParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.constituency_parser.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.coref": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.coref.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.coref.CorefPredictor": {
  "data": {
   "shadows": "allennlp.predictors.coref.CorefPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.coref.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.decomposable_attention": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.decomposable_attention.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.decomposable_attention.DecomposableAttentionPredictor": {
  "data": {
   "shadows": "allennlp.predictors.decomposable_attention.DecomposableAttentionPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.decomposable_attention.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.nlvr_parser": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.nlvr_parser.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.nlvr_parser.NlvrParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.nlvr_parser.NlvrParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.nlvr_parser.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.predictor": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.predictor.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.predictor.DEFAULT_PREDICTORS": {
  "data": {
   "shadows": "allennlp.predictors.predictor.DEFAULT_PREDICTORS"
  },
  "type": "import"
 },
 "allennlp.service.predictors.predictor.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.predictor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.semantic_role_labeler": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.semantic_role_labeler.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.semantic_role_labeler.SemanticRoleLabelerPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.semantic_role_labeler.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.sentence_tagger": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.sentence_tagger.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.sentence_tagger.SentenceTaggerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.sentence_tagger.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.simple_seq2seq": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.simple_seq2seq.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.simple_seq2seq.SimpleSeq2SeqPredictor": {
  "data": {
   "shadows": "allennlp.predictors.simple_seq2seq.SimpleSeq2SeqPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.simple_seq2seq.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.predictors.wikitables_parser": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.service.predictors.wikitables_parser.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.service.predictors.wikitables_parser.WikiTablesParserPredictor": {
  "data": {
   "shadows": "allennlp.predictors.wikitables_parser.WikiTablesParserPredictor"
  },
  "type": "import"
 },
 "allennlp.service.predictors.wikitables_parser.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.service.server_simple": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.service.server_simple.logging",
    "allennlp.service.server_simple.main",
    "allennlp.service.server_simple.sys",
    "string.Template"
   ]
  },
  "type": "module"
 },
 "allennlp.service.server_simple.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.JsonDict": {
  "data": {
   "shadows": "allennlp.common.JsonDict"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.ServerError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.service.server_simple.ServerError.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.ServerError.to_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.Template": {
  "data": {
   "shadows": "string.Template"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.WSGIServer": {
  "data": {
   "shadows": "gevent.pywsgi.WSGIServer"
  },
  "type": "import"
 },
 "allennlp.service.server_simple._CSS": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "allennlp.service.server_simple._PAGE_TEMPLATE": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "allennlp.service.server_simple._SINGLE_INPUT_TEMPLATE": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "allennlp.service.server_simple._get_predictor": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.common.checks.check_for_gpu",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.service.server_simple.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple._html": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "allennlp.service.server_simple._CSS",
    "allennlp.service.server_simple._PAGE_TEMPLATE",
    "allennlp.service.server_simple._SINGLE_INPUT_TEMPLATE",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.import_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_submodules"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "allennlp.service.server_simple.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.main": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.common.util.import_submodules",
    "allennlp.service.server_simple._get_predictor",
    "allennlp.service.server_simple.argparse",
    "allennlp.service.server_simple.make_app",
    "flask_cors.CORS",
    "gevent.pywsgi.WSGIServer",
    "int",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.JsonDict",
    "allennlp.predictors.Predictor",
    "allennlp.service.server_simple.logger",
    "allennlp.service.server_simple.os",
    "allennlp.service.server_simple.sys",
    "flask.Flask",
    "print",
    "str",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app.handle_invalid_usage": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.service.server_simple.ServerError",
    "flask.Response",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app.index": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.service.server_simple._html",
    "allennlp.service.server_simple.os",
    "flask.Response",
    "flask.send_file"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app.predict": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.service.server_simple.json",
    "allennlp.service.server_simple.logger",
    "flask.Response",
    "flask.jsonify",
    "flask.request.get_json",
    "flask.request.method",
    "sanitizer"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app.predict_batch": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask.Response",
    "flask.jsonify",
    "flask.request.get_json",
    "flask.request.method",
    "sanitizer"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.make_app.static_proxy": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.service.server_simple.ServerError",
    "flask.Response",
    "flask.send_from_directory",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.service.server_simple.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.send_from_directory": {
  "data": {
   "shadows": "flask.send_from_directory"
  },
  "type": "import"
 },
 "allennlp.service.server_simple.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.state_machines": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.state_machines.ConstrainedBeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch"
  },
  "type": "import"
 },
 "allennlp.state_machines.DecoderTrainer": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.DecoderTrainer"
  },
  "type": "import"
 },
 "allennlp.state_machines.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search": {
  "data": {
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.beam_search.BeamSearch": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.registrable.FromParams",
    "allennlp.state_machines.beam_search.StateType",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.beam_search.BeamSearch.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.beam_search.BeamSearch.search": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.state_machines.beam_search.StateType",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "bool",
    "collections.defaultdict",
    "int",
    "list",
    "typing.Dict",
    "typing.List",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.beam_search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.FromParams": {
  "data": {
   "shadows": "allennlp.common.registrable.FromParams"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.StateType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.state_machines.beam_search.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.beam_search.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.state_machines.constrained_beam_search.torch",
    "allennlp.state_machines.util.construct_prefix_tree",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch.search": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "collections.defaultdict",
    "int",
    "list",
    "tuple",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.constrained_beam_search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.constrained_beam_search.util": {
  "data": {
   "shadows": "allennlp.state_machines.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.CoverageState": {
  "data": {
   "shadows": "allennlp.state_machines.states.coverage_state.CoverageState"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.grammar_statelet.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.LambdaGrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.rnn_statelet.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.state.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.checklist_statelet": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet.__eq__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "allennlp.nn.util.tensors_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.state_machines.states.checklist_statelet.torch",
    "enumerate",
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet.get_balance": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.state_machines.states.checklist_statelet.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet.update": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet",
    "allennlp.state_machines.states.checklist_statelet.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.checklist_statelet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.checklist_statelet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.checklist_statelet.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.coverage_state.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.CoverageState": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.states.coverage_state.CoverageState.__eq__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "allennlp.nn.util.tensors_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.coverage_state.CoverageState.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.state_machines.states.checklist_statelet.ChecklistStatelet",
    "allennlp.state_machines.states.coverage_state.torch",
    "allennlp.state_machines.states.grammar_statelet.GrammarStatelet",
    "allennlp.state_machines.states.rnn_statelet.RnnStatelet",
    "int",
    "super",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.coverage_state.CoverageState.combine_states": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.state_machines.states.coverage_state.CoverageState",
    "classmethod",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.coverage_state.CoverageState.new_state_from_group_index": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.state_machines.states.coverage_state.CoverageState",
    "allennlp.state_machines.states.coverage_state.torch",
    "allennlp.state_machines.states.rnn_statelet.RnnStatelet",
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.coverage_state.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.grammar_statelet.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.rnn_statelet.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.coverage_state.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.grammar_based_state.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.state_machines.states.state.State"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.fields.production_rule_field.ProductionRule",
    "allennlp.state_machines.states.grammar_based_state.torch",
    "allennlp.state_machines.states.grammar_statelet.GrammarStatelet",
    "allennlp.state_machines.states.rnn_statelet.RnnStatelet",
    "int",
    "super",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.combine_states": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_based_state.GrammarBasedState",
    "classmethod",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.get_valid_actions": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_based_state.torch",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.is_finished": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.new_state_from_group_index": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_based_state.GrammarBasedState",
    "allennlp.state_machines.states.grammar_based_state.torch",
    "allennlp.state_machines.states.rnn_statelet.RnnStatelet",
    "float",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarBasedState.print_action_history": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_based_state.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.grammar_statelet.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.ProductionRule": {
  "data": {
   "shadows": "allennlp.data.fields.production_rule_field.ProductionRule"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.rnn_statelet.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.state.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_based_state.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.states.grammar_statelet.ActionRepresentation": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "allennlp.state_machines.states.grammar_statelet.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_statelet.ActionRepresentation",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet.__eq__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "allennlp.nn.util.tensors_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_statelet.ActionRepresentation",
    "bool",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet._get_productions_from_string": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet.get_valid_actions": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_statelet.ActionRepresentation"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet.is_finished": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.GrammarStatelet.take_action": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.state_machines.states.grammar_statelet.GrammarStatelet",
    "list",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.grammar_statelet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.grammar_statelet.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet.__eq__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "allennlp.nn.util.tensors_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.state_machines.states.lambda_grammar_statelet.torch",
    "bool",
    "int",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet._get_productions_from_string": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet.get_valid_actions": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.state_machines.states.lambda_grammar_statelet.torch",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet.is_finished": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet.take_action": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError",
    "all",
    "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet",
    "len",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.lambda_grammar_statelet.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.rnn_statelet": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.states.rnn_statelet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.rnn_statelet.RnnStatelet": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.state_machines.states.rnn_statelet.RnnStatelet.__eq__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "allennlp.nn.util.tensors_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.rnn_statelet.RnnStatelet.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.state_machines.states.rnn_statelet.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.rnn_statelet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.rnn_statelet.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.state": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.states.state.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.state.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.state.State": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.state_machines.states.state.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.states.state.State.__eq__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.state.State.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.state_machines.states.state.torch",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.state.State.combine_states": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.state_machines.states.state.T",
    "classmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.state.State.is_finished": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.states.state.T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.state_machines.states.state.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.states.state.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.trainers.DecoderTrainer": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.ExpectedRiskMinimization": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.decoder_trainer.SupervisionType",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer.decode": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.trainers.decoder_trainer.SupervisionType",
    "allennlp.state_machines.trainers.decoder_trainer.torch",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.decoder_trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer.SupervisionType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.state_machines.trainers.decoder_trainer.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.decoder_trainer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization": {
  "data": {
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.DecoderTrainer": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer",
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "allennlp.state_machines.trainers.expected_risk_minimization.torch",
    "typing.Callable"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization._get_best_final_states": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "collections.defaultdict",
    "int",
    "list",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization._get_costs_by_batch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "allennlp.state_machines.trainers.expected_risk_minimization.torch",
    "collections.defaultdict",
    "cost_function",
    "int",
    "list",
    "staticmethod",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization._get_finished_states": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization._get_model_scores_by_batch": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "allennlp.state_machines.trainers.expected_risk_minimization.torch",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization._prune_beam": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.trainers.expected_risk_minimization.torch",
    "bool",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "staticmethod",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.ExpectedRiskMinimization.decode": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_softmax",
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.trainers.expected_risk_minimization.StateType",
    "allennlp.state_machines.trainers.expected_risk_minimization.torch",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "len",
    "str",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.StateType": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.expected_risk_minimization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.state_machines.trainers.maximum_marginal_likelihood.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.ConstrainedBeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.DecoderTrainer": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.state_machines.trainers.decoder_trainer.DecoderTrainer",
    "allennlp.state_machines.trainers.maximum_marginal_likelihood.torch",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood.decode": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.nn.util.logsumexp",
    "allennlp.state_machines.constrained_beam_search.ConstrainedBeamSearch",
    "allennlp.state_machines.states.State",
    "allennlp.state_machines.trainers.maximum_marginal_likelihood.torch",
    "allennlp.state_machines.transition_functions.TransitionFunction",
    "int",
    "len",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.trainers.maximum_marginal_likelihood.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.CoverageTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.LinkingCoverageTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.linking_coverage_transition_function.LinkingCoverageTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.LinkingTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.transition_function.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.transition_function.TransitionFunction"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.modules.Attention",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "bool",
    "float",
    "int",
    "super",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.rnn.LSTM",
    "torch.nn.modules.rnn.LSTMCell"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction._compute_action_probabilities": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "range",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction._construct_next_states": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "int",
    "len",
    "make_state",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction._construct_next_states.make_state": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.states.RnnStatelet",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction._take_first_step": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "collections.defaultdict",
    "enumerate",
    "int",
    "len",
    "list",
    "sorted",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction._update_decoder_state": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "len",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction.attend_on_question": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "allennlp.nn.util.weighted_sum",
    "allennlp.state_machines.transition_functions.basic_transition_function.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction.take_step": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "int",
    "overrides.overrides",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.LSTM": {
  "data": {
   "shadows": "torch.nn.modules.rnn.LSTM"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.LSTMCell": {
  "data": {
   "shadows": "torch.nn.modules.rnn.LSTMCell"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.transition_function.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.basic_transition_function.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageState": {
  "data": {
   "shadows": "allennlp.state_machines.states.CoverageState"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.Attention",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "allennlp.state_machines.transition_functions.coverage_transition_function.torch",
    "bool",
    "float",
    "int",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction._compute_action_probabilities": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.state_machines.states.CoverageState",
    "allennlp.state_machines.transition_functions.coverage_transition_function.torch",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction._get_predicted_embedding_addition": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.state_machines.states.ChecklistStatelet",
    "allennlp.state_machines.transition_functions.coverage_transition_function.torch",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.coverage_transition_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.ChecklistStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.ChecklistStatelet"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.CoverageState": {
  "data": {
   "shadows": "allennlp.state_machines.states.CoverageState"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.CoverageTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.LinkingCoverageTransitionFunction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.state_machines.transition_functions.coverage_transition_function.CoverageTransitionFunction"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.LinkingCoverageTransitionFunction.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.modules.Attention",
    "allennlp.modules.FeedForward",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "allennlp.state_machines.transition_functions.linking_coverage_transition_function.torch",
    "bool",
    "float",
    "int",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.LinkingCoverageTransitionFunction._compute_action_probabilities": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.state_machines.states.CoverageState",
    "allennlp.state_machines.transition_functions.linking_coverage_transition_function.torch",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.LinkingCoverageTransitionFunction._get_linked_logits_addition": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "allennlp.state_machines.states.ChecklistStatelet",
    "allennlp.state_machines.transition_functions.linking_coverage_transition_function.torch",
    "int",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_coverage_transition_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.modules.Attention",
    "allennlp.modules.FeedForward",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.LinkingTransitionFunction._compute_action_probabilities": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.transition_functions.linking_transition_function.torch",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.linking_transition_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function": {
  "data": {
   "symbols_in_volume": [
    "allennlp.state_machines.states.State",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.state_machines.transition_functions.transition_function.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function.State": {
  "data": {
   "shadows": "allennlp.state_machines.states.State"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function.StateType": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.state_machines.transition_functions.transition_function.TransitionFunction": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.state_machines.transition_functions.transition_function.StateType",
    "allennlp.state_machines.transition_functions.transition_function.torch",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.state_machines.transition_functions.transition_function.TransitionFunction.take_step": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.state_machines.transition_functions.transition_function.StateType",
    "int",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.transition_functions.transition_function.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.state_machines.transition_functions.transition_function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.state_machines.util": {
  "data": {},
  "type": "module"
 },
 "allennlp.state_machines.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.construct_prefix_tree": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.state_machines.util.torch",
    "collections.defaultdict",
    "enumerate",
    "int",
    "isinstance",
    "list",
    "set",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.state_machines.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.state_machines.util.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.configure_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.configure_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.TestConfigure": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.configure_test.TestConfigure.test_other_modules": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.commands.configure._run_wizard",
    "allennlp.commands.main",
    "allennlp.predictors.bidaf.__file__",
    "allennlp.tests.commands.configure_test.json",
    "allennlp.tests.commands.configure_test.os",
    "allennlp.tests.commands.configure_test.sys",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.configure_test.TestConfigure.test_other_modules.run_wizard": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.service.config_explorer.make_app",
    "allennlp.tests.commands.configure_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.configure_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.bidaf": {
  "data": {
   "shadows": "allennlp.predictors.bidaf"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.configure_command": {
  "data": {
   "shadows": "allennlp.commands.configure"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.make_app": {
  "data": {
   "shadows": "allennlp.service.config_explorer.make_app"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.configure_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.dry_run_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.DryRun": {
  "data": {
   "shadows": "allennlp.commands.dry_run.DryRun"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_dry_run_doesnt_overwrite_vocab": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.dry_run_from_params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.dry_run_test.os",
    "allennlp.tests.commands.dry_run_test.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_dry_run_makes_vocab": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.dry_run_from_params",
    "allennlp.tests.commands.dry_run_test.os",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_dry_run_with_extension": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.dry_run_from_params",
    "allennlp.data.Vocabulary",
    "allennlp.tests.commands.dry_run_test.os",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_dry_run_without_extension": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.dry_run_from_params",
    "allennlp.data.Vocabulary",
    "allennlp.tests.commands.dry_run_test.os",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_dry_run_without_vocabulary_key": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.dry_run_from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.TestDryRun.test_make_vocab_args": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.commands.dry_run.DryRun",
    "allennlp.commands.dry_run.dry_run_from_args",
    "allennlp.tests.commands.dry_run_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.dry_run_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.dry_run_from_args": {
  "data": {
   "shadows": "allennlp.commands.dry_run.dry_run_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.dry_run_from_params": {
  "data": {
   "shadows": "allennlp.commands.dry_run.dry_run_from_params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.dry_run_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.tests.commands.elmo_test.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.commands.elmo_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.ElmoEmbedder": {
  "data": {
   "shadows": "allennlp.commands.elmo.ElmoEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.ElmoTestCase": {
  "data": {
   "shadows": "allennlp.tests.modules.elmo_test.ElmoTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.tests.commands.elmo_test.TestElmoCommand",
    "allennlp.tests.commands.elmo_test.pathlib",
    "allennlp.tests.commands.elmo_test.tempfile",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_all_embedding_works": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.json",
    "allennlp.tests.commands.elmo_test.numpy",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_average_embedding_works": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.json",
    "allennlp.tests.commands.elmo_test.numpy",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_batch_embedding_works": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.json",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "range",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_batch_embedding_works_with_forget_sentences": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_batch_embedding_works_with_sentences_as_keys": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_duplicate_sentences": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_empty_sentences_raise_errors": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.elmo_test.pytest",
    "allennlp.tests.commands.elmo_test.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoCommand.test_top_embedding_works": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "allennlp.commands.main",
    "allennlp.tests.commands.elmo_test.h5py",
    "allennlp.tests.commands.elmo_test.json",
    "allennlp.tests.commands.elmo_test.numpy",
    "allennlp.tests.commands.elmo_test.os",
    "allennlp.tests.commands.elmo_test.sys",
    "len",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoEmbedder": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.elmo_test.TestElmoEmbedder.test_embed_batch_contains_empty_sentence": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoEmbedder.test_embed_batch_is_empty_sentence": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.TestElmoEmbedder.test_embeddings_are_as_expected": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "allennlp.commands.elmo.ElmoEmbedder",
    "allennlp.tests.commands.elmo_test.numpy",
    "len",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.elmo_test.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.tests.commands.elmo_test.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.evaluate_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test.Evaluate": {
  "data": {
   "shadows": "allennlp.commands.evaluate.Evaluate"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test.TestEvaluate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.evaluate_test.TestEvaluate.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.Evaluate",
    "allennlp.tests.commands.evaluate_test.argparse",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.evaluate_test.TestEvaluate.test_evaluate_from_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.evaluate_from_args",
    "flaky.flaky",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.evaluate_test.TestEvaluate.test_output_file_evaluate_from_args": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.evaluate_from_args",
    "allennlp.tests.commands.evaluate_test.json",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.evaluate_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test.evaluate_from_args": {
  "data": {
   "shadows": "allennlp.commands.evaluate.evaluate_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.commands.evaluate_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.find_learning_rate_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.DataIterator": {
  "data": {
   "shadows": "allennlp.data.DataIterator"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.FindLearningRate": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.FindLearningRate"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestFindLearningRate": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestFindLearningRate.setUp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestFindLearningRate.test_find_learning_rate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.find_learning_rate_model",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.find_learning_rate_test.os",
    "allennlp.tests.commands.find_learning_rate_test.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestFindLearningRate.test_find_learning_rate_args": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "SystemExit",
    "allennlp.commands.find_learning_rate.FindLearningRate",
    "allennlp.commands.find_learning_rate.find_learning_rate_from_args",
    "allennlp.tests.commands.find_learning_rate_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestFindLearningRate.test_find_learning_rate_multi_gpu": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.find_learning_rate_model",
    "allennlp.tests.commands.find_learning_rate_test.os",
    "allennlp.tests.commands.find_learning_rate_test.pytest",
    "allennlp.tests.commands.find_learning_rate_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestSearchLearningRate": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestSearchLearningRate.setUp": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.commands.train.Trainer.from_params",
    "allennlp.commands.train.datasets_from_params",
    "allennlp.common.Params",
    "allennlp.data.DataIterator.from_params",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.models.Model.from_params",
    "allennlp.tests.commands.find_learning_rate_test.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestSearchLearningRate.test_search_learning_rate_linear_steps": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.search_learning_rate",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestSearchLearningRate.test_search_learning_rate_with_num_batches_less_than_ten": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.search_learning_rate",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.find_learning_rate_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.TestSearchLearningRate.test_search_learning_rate_without_stopping_factor": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.search_learning_rate",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.find_learning_rate_test.Trainer": {
  "data": {
   "shadows": "allennlp.commands.train.Trainer"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.datasets_from_params": {
  "data": {
   "shadows": "allennlp.commands.train.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.find_learning_rate_from_args": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.find_learning_rate_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.find_learning_rate_model": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.find_learning_rate_model"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.search_learning_rate": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.search_learning_rate"
  },
  "type": "import"
 },
 "allennlp.tests.commands.find_learning_rate_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.fine_tune_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.FineTune": {
  "data": {
   "shadows": "allennlp.commands.fine_tune.FineTune"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.FineTune",
    "allennlp.tests.commands.fine_tune_test.argparse",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_does_not_expand_vocab_by_default": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.fine_tune_model",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.load_archive",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_fails_without_required_args": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "SystemExit"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_model_runs_from_file_paths": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.fine_tune_model_from_file_paths"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_nograd_regex": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "allennlp.commands.fine_tune.fine_tune_model",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.load_archive",
    "allennlp.tests.commands.fine_tune_test.pytest",
    "allennlp.tests.commands.fine_tune_test.re",
    "allennlp.tests.commands.fine_tune_test.shutil",
    "any",
    "dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_runs_from_parser_arguments": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.commands.fine_tune.fine_tune_model_from_args"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.TestFineTune.test_fine_tune_runtime_errors_with_vocab_expansion": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.commands.fine_tune.fine_tune_model",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.load_archive",
    "allennlp.tests.commands.fine_tune_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.fine_tune_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.fine_tune_model": {
  "data": {
   "shadows": "allennlp.commands.fine_tune.fine_tune_model"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.fine_tune_model_from_args": {
  "data": {
   "shadows": "allennlp.commands.fine_tune.fine_tune_model_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.fine_tune_model_from_file_paths": {
  "data": {
   "shadows": "allennlp.commands.fine_tune.fine_tune_model_from_file_paths"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tests.commands.fine_tune_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.main_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.TestMain": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.main_test.TestMain.test_fails_on_unknown_command": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SystemExit",
    "allennlp.commands.main",
    "allennlp.tests.commands.main_test.sys"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.main_test.TestMain.test_other_modules": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.simple_tagger.__file__",
    "allennlp.tests.commands.main_test.pytest",
    "allennlp.tests.commands.main_test.shutil",
    "allennlp.tests.commands.main_test.sys",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.main_test.TestMain.test_subcommand_overrides": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "FakeEvaluate",
    "allennlp.commands.main",
    "allennlp.tests.commands.main_test.sys"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.main_test.TestMain.test_subcommand_overrides.FakeEvaluate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.main_test.TestMain.test_subcommand_overrides.FakeEvaluate.add_subparser": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "allennlp.tests.commands.main_test.TestMain.test_subcommand_overrides.do_nothing": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "allennlp.tests.commands.main_test.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.simple_tagger": {
  "data": {
   "shadows": "allennlp.models.simple_tagger"
  },
  "type": "import"
 },
 "allennlp.tests.commands.main_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.make_vocab_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.MakeVocab": {
  "data": {
   "shadows": "allennlp.commands.make_vocab.MakeVocab"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_args": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.MakeVocab",
    "allennlp.commands.make_vocab.make_vocab_from_args",
    "allennlp.tests.commands.make_vocab_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_doesnt_overwrite_vocab": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.make_vocab_test.os",
    "allennlp.tests.commands.make_vocab_test.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_makes_vocab": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.tests.commands.make_vocab_test.os",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_makes_vocab_with_config": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.tests.commands.make_vocab_test.os",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_succeeds_without_vocabulary_key": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_with_extension": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.data.Vocabulary",
    "allennlp.tests.commands.make_vocab_test.os",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.TestMakeVocab.test_make_vocab_without_extension": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.commands.make_vocab.make_vocab_from_params",
    "allennlp.data.Vocabulary",
    "allennlp.tests.commands.make_vocab_test.os",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.make_vocab_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.make_vocab_from_args": {
  "data": {
   "shadows": "allennlp.commands.make_vocab.make_vocab_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.make_vocab_from_params": {
  "data": {
   "shadows": "allennlp.commands.make_vocab.make_vocab_from_params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.make_vocab_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.predict_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.BidafPredictor": {
  "data": {
   "shadows": "allennlp.predictors.BidafPredictor"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.Predict": {
  "data": {
   "shadows": "allennlp.commands.predict.Predict"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.TestPredict": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.predict_test.TestPredict.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.tests.commands.predict_test.TestPredict",
    "allennlp.tests.commands.predict_test.pathlib",
    "allennlp.tests.commands.predict_test.tempfile",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_add_predict_subparser": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.commands.predict.Predict",
    "allennlp.tests.commands.predict_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_alternative_file_formats": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.csv",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.shutil",
    "allennlp.tests.commands.predict_test.sys",
    "float",
    "int",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_alternative_file_formats.BidafCsvPredictor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "allennlp.predictors.BidafPredictor",
    "allennlp.predictors.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_alternative_file_formats.BidafCsvPredictor.dump_line": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.tests.commands.predict_test.csv",
    "allennlp.tests.commands.predict_test.io",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_alternative_file_formats.BidafCsvPredictor.load_line": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.tests.commands.predict_test.csv",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_batch_prediction_works_with_known_model": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.json",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.shutil",
    "allennlp.tests.commands.predict_test.sys",
    "len",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_can_specify_predictor": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.json",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.shutil",
    "allennlp.tests.commands.predict_test.sys",
    "len",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_can_specify_predictor.Bidaf3Predictor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.predictors.BidafPredictor",
    "allennlp.predictors.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_can_specify_predictor.Bidaf3Predictor.predict_json": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_fails_without_required_args": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "SystemExit",
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.sys"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_other_modules": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.predictors.bidaf.__file__",
    "allennlp.tests.commands.predict_test.json",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.pytest",
    "allennlp.tests.commands.predict_test.sys",
    "len",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_using_dataset_reader_works_with_known_model": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.json",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.shutil",
    "allennlp.tests.commands.predict_test.sys",
    "len",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.TestPredict.test_works_with_known_model": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.commands.main",
    "allennlp.tests.commands.predict_test.json",
    "allennlp.tests.commands.predict_test.os",
    "allennlp.tests.commands.predict_test.shutil",
    "allennlp.tests.commands.predict_test.sys",
    "len",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.predict_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.bidaf": {
  "data": {
   "shadows": "allennlp.predictors.bidaf"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.commands.predict_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.tests.commands.test_install_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.commands.test_install_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.test_install_test.TestTestInstall": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.test_install_test.TestTestInstall.test_get_module_root": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.commands.test_install._get_module_root",
    "allennlp.tests.commands.test_install_test.os"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.test_install_test._get_module_root": {
  "data": {
   "shadows": "allennlp.commands.test_install._get_module_root"
  },
  "type": "import"
 },
 "allennlp.tests.commands.test_install_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.commands.train_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.LazyFakeReader": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.train_test.LazyFakeReader.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.DatasetReader.from_params",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.LazyFakeReader._read": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.tests.commands.train_test.TestTrain": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.train_test.TestTrain.test_error_is_throw_when_cuda_device_is_not_available": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.train_test.os",
    "allennlp.tests.commands.train_test.pytest",
    "allennlp.tests.commands.train_test.torch",
    "params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrain.test_train_args": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "SystemExit",
    "allennlp.commands.train.Train",
    "allennlp.commands.train.train_model_from_args",
    "allennlp.tests.commands.train_test.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrain.test_train_model": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH",
    "allennlp.tests.commands.train_test.os",
    "allennlp.tests.commands.train_test.pytest",
    "open",
    "params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrain.test_train_with_test_set": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH",
    "allennlp.tests.commands.train_test.os",
    "params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrainOnLazyDataset": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.commands.train_test.TestTrainOnLazyDataset.test_train_model": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH",
    "allennlp.tests.commands.train_test.os",
    "params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrainOnLazyDataset.test_train_nograd_regex": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH",
    "allennlp.tests.commands.train_test.os",
    "allennlp.tests.commands.train_test.pytest",
    "allennlp.tests.commands.train_test.re",
    "allennlp.tests.commands.train_test.shutil",
    "any",
    "params",
    "params_get"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.TestTrainOnLazyDataset.test_train_with_test_set": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params",
    "allennlp.tests.commands.train_test.SEQUENCE_TAGGING_DATA_PATH",
    "allennlp.tests.commands.train_test.os",
    "params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.commands.train_test.Train": {
  "data": {
   "shadows": "allennlp.commands.train.Train"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.train_model": {
  "data": {
   "shadows": "allennlp.commands.train.train_model"
  },
  "type": "import"
 },
 "allennlp.tests.commands.train_test.train_model_from_args": {
  "data": {
   "shadows": "allennlp.commands.train.train_model_from_args"
  },
  "type": "import"
 },
 "allennlp.tests.common": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.configuration_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.configuration_test.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.BASE_CONFIG": {
  "data": {
   "shadows": "allennlp.common.configuration.BASE_CONFIG"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.Config": {
  "data": {
   "shadows": "allennlp.common.configuration.Config"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_abstract_base_class": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.configuration.choices",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_activation_workaround": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.configuration.json_annotation",
    "allennlp.nn.activations.Activation",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_configure_top_level": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.configuration.BASE_CONFIG",
    "allennlp.common.configuration.configure"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_errors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "ModuleNotFoundError",
    "allennlp.common.configuration.configure",
    "allennlp.tests.common.configuration_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_specific_subclass": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration.configure",
    "bool",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.TestConfiguration.test_vocab_workaround": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.common.configuration.Config",
    "allennlp.common.configuration.configure",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.configuration_test.choices": {
  "data": {
   "shadows": "allennlp.common.configuration.choices"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.configure": {
  "data": {
   "shadows": "allennlp.common.configuration.configure"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.json_annotation": {
  "data": {
   "shadows": "allennlp.common.configuration.json_annotation"
  },
  "type": "import"
 },
 "allennlp.tests.common.configuration_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.file_utils_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.setUp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_cached_path": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.file_utils.url_to_filename",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.pytest",
    "allennlp.tests.common.file_utils_test.responses",
    "allennlp.tests.common.file_utils_test.set_up_glove",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_get_from_cache": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.common.file_utils.get_from_cache",
    "allennlp.common.file_utils.url_to_filename",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.responses",
    "allennlp.tests.common.file_utils_test.set_up_glove",
    "collections.Counter",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_s3_bucket": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.tests.common.file_utils_test.boto3",
    "allennlp.tests.common.file_utils_test.pytest",
    "allennlp.tests.common.file_utils_test.set_up_s3_bucket",
    "len",
    "moto.mock_s3"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_s3_etag": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.file_utils.s3_etag",
    "allennlp.tests.common.file_utils_test.pytest",
    "allennlp.tests.common.file_utils_test.set_up_s3_bucket",
    "isinstance",
    "moto.mock_s3",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_s3_get": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.file_utils.s3_get",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.pytest",
    "allennlp.tests.common.file_utils_test.set_up_s3_bucket",
    "allennlp.tests.common.file_utils_test.tempfile",
    "moto.mock_s3",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_s3_request_wrapper": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.tests.common.file_utils_test.boto3",
    "allennlp.tests.common.file_utils_test.pytest",
    "allennlp.tests.common.file_utils_test.set_up_s3_bucket",
    "get_file_info",
    "moto.mock_s3",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_s3_request_wrapper.get_file_info": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.common.file_utils.s3_request",
    "allennlp.common.file_utils.split_s3_path"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_split_s3_path": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.file_utils.split_s3_path",
    "allennlp.tests.common.file_utils_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_url_to_filename": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.file_utils.filename_to_url",
    "allennlp.common.file_utils.url_to_filename",
    "allennlp.tests.common.file_utils_test.json",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.pathlib",
    "allennlp.tests.common.file_utils_test.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_url_to_filename_with_etags": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.common.file_utils.filename_to_url",
    "allennlp.common.file_utils.url_to_filename",
    "allennlp.tests.common.file_utils_test.json",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.pathlib",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.TestFileUtils.test_url_to_filename_with_etags_eliminates_quotes": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.common.file_utils.filename_to_url",
    "allennlp.common.file_utils.url_to_filename",
    "allennlp.tests.common.file_utils_test.json",
    "allennlp.tests.common.file_utils_test.os",
    "allennlp.tests.common.file_utils_test.pathlib",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.filename_to_url": {
  "data": {
   "shadows": "allennlp.common.file_utils.filename_to_url"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.get_from_cache": {
  "data": {
   "shadows": "allennlp.common.file_utils.get_from_cache"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.mock_s3": {
  "data": {
   "shadows": "moto.mock_s3"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.responses": {
  "data": {
   "shadows": "responses"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.s3_etag": {
  "data": {
   "shadows": "allennlp.common.file_utils.s3_etag"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.s3_get": {
  "data": {
   "shadows": "allennlp.common.file_utils.s3_get"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.s3_request": {
  "data": {
   "shadows": "allennlp.common.file_utils.s3_request"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.set_up_glove": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.tests.common.file_utils_test.responses",
    "bytes",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.set_up_glove.head_callback": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.set_up_s3_bucket": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.tests.common.file_utils_test.boto3",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.file_utils_test.split_s3_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.split_s3_path"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.tests.common.file_utils_test.url_to_filename": {
  "data": {
   "shadows": "allennlp.common.file_utils.url_to_filename"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.from_params_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.MyClass": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.from_params.FromParams"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.MyClass.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.TestFromParams": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_create_kwargs": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.from_params.create_kwargs",
    "allennlp.tests.common.from_params_test.MyClass"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "all",
    "allennlp.common.Params",
    "dict",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.A": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.B": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.B.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.C": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.D": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_dict.D.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.common.Params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.A": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.B": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.B.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.C": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.C.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_extras.C.from_params": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "classmethod",
    "cls",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_from_params": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.tests.common.from_params_test.MyClass",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "all",
    "allennlp.common.Params",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.A": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.B": {
  "data": {
   "lineno": 172
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.B.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.C": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.D": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_list.D.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_no_constructor": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.tokenizers.word_splitter.WordSplitter.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_remove_optional": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.from_params.remove_optional",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "all",
    "allennlp.common.Params",
    "any",
    "isinstance",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.A": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.A.__eq__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.A.__hash__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.A.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.B": {
  "data": {
   "lineno": 246
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.C": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.D": {
  "data": {
   "lineno": 253
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_set.D.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.from_params.takes_arg"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg.SomeClass": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg.SomeClass.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg.SomeClass.check_param": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg.SomeClass.set_total": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_takes_arg.bare_function": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.A": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.B": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.B.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.C": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.D": {
  "data": {
   "lineno": 209
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.D.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.E": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.F": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "allennlp.tests.common.from_params_test.TestFromParams.test_tuple.F.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.from_params_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.WordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.WordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.create_kwargs": {
  "data": {
   "shadows": "allennlp.common.from_params.create_kwargs"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.remove_optional": {
  "data": {
   "shadows": "allennlp.common.from_params.remove_optional"
  },
  "type": "import"
 },
 "allennlp.tests.common.from_params_test.takes_arg": {
  "data": {
   "shadows": "allennlp.common.from_params.takes_arg"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.params_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.TestParams": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.common.params_test.os",
    "allennlp.tests.common.params_test.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.A": {
  "data": {
   "lineno": 262
  },
  "type": "class"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.A.__init__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.A.from_params": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.B": {
  "data": {
   "lineno": 247
  },
  "type": "class"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.B.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.B.from_params": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.C": {
  "data": {
   "lineno": 236
  },
  "type": "class"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.C.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_add_file_to_archive.C.from_params": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_as_flat_dict": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.common.params.Params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_as_ordered_dict": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.common.params_test.json",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_env_var_substitution": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.params.Params.from_file",
    "allennlp.tests.common.params_test.os",
    "allennlp.tests.common.params_test.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_jsonnet_features": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.common.params.Params.from_file",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_known_configs": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "allennlp.common.params.Params.from_file",
    "allennlp.common.testing.AllenNlpTestCase.PROJECT_ROOT",
    "allennlp.tests.common.params_test.os",
    "allennlp.tests.common.params_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_load_from_file": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.params.Params.from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_overrides": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.params.Params.from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_parse_overrides": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.common.params.parse_overrides",
    "allennlp.common.params.with_fallback"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_regexes_with_backslashes": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.params.Params.from_file",
    "allennlp.tests.common.params_test.json",
    "allennlp.tests.common.params_test.pytest",
    "allennlp.tests.common.params_test.re",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_to_file": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.common.params_test.json",
    "collections.OrderedDict",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_unflatten": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.params.unflatten"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.TestParams.test_with_fallback": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.common.params.with_fallback"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.params_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.parse_overrides": {
  "data": {
   "shadows": "allennlp.common.params.parse_overrides"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.unflatten": {
  "data": {
   "shadows": "allennlp.common.params.unflatten"
  },
  "type": "import"
 },
 "allennlp.tests.common.params_test.with_fallback": {
  "data": {
   "shadows": "allennlp.common.params.with_fallback"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.registrable_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Initializer": {
  "data": {
   "shadows": "allennlp.nn.Initializer"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registrable_functionality_works": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.Registrable._registry",
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.tests.common.registrable_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registrable_functionality_works.Fake": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_dataset_readers": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_initializers": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.nn.Initializer.by_name",
    "allennlp.tests.common.registrable_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_iterators": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.iterators.data_iterator.DataIterator.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_learning_rate_schedulers": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.tests.common.registrable_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_regularizers": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_seq2seq_encoders": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_seq2vec_encoders": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_similarity_functions": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.SimilarityFunction.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_text_field_embedders": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_token_embedders": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_token_indexers": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TestRegistrable.test_registry_has_builtin_tokenizers": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer.by_name"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.registrable_test.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.torch.nn.init": {
  "data": {
   "shadows": "torch.nn.init"
  },
  "type": "import"
 },
 "allennlp.tests.common.registrable_test.torch.optim.lr_scheduler": {
  "data": {
   "shadows": "torch.optim.lr_scheduler"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.common.test_util.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util.Sanitizable": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "allennlp.tests.common.test_util.Sanitizable.to_json": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_get_frozen_and_tunable_parameter_names": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.util.get_frozen_and_tunable_parameter_names",
    "allennlp.tests.common.test_util.torch",
    "collections.OrderedDict",
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_group_by_count": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.util.group_by_count"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_import_submodules": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.common.util.import_submodules",
    "allennlp.tests.common.test_util.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_lazy_groups_of": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "StopIteration",
    "allennlp.common.util.lazy_groups_of",
    "allennlp.tests.common.test_util.pytest",
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_namespace_match": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.util.namespace_match"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_pad_sequence_to_length": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.TestCommonUtils.test_sanitize": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.util.sanitize",
    "allennlp.tests.common.test_util.Sanitizable",
    "allennlp.tests.common.test_util.Unsanitizable",
    "allennlp.tests.common.test_util.pytest",
    "allennlp.tests.common.test_util.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.common.test_util.Unsanitizable": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "allennlp.tests.common.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.common.test_util.util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.AlternatingHighwayLSTM": {
  "data": {
   "shadows": "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.pytest",
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM.forward_and_backward_outputs_match": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.numpy",
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.torch",
    "baseline_model",
    "baseline_model.num_layers",
    "baseline_model.zero_grad",
    "getattr",
    "kernel_model",
    "kernel_model.bias.grad",
    "kernel_model.weight.grad.view",
    "kernel_model.zero_grad",
    "range",
    "staticmethod",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM.get_models_and_inputs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.modules.alternating_highway_lstm.AlternatingHighwayLSTM",
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.torch",
    "getattr",
    "int",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM.test_large_model": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM.test_small_model": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.TestCustomHighwayLSTM.test_validation_forward_pass_is_deterministic_in_model_with_dropout": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.tests.custom_extensions.alternating_highway_lstm_test.numpy",
    "model",
    "range",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.custom_extensions.alternating_highway_lstm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.data": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.CcgBankDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.CcgBankDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.TestCcgBankReader": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.TestCcgBankReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.CcgBankDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.TestCcgBankReader.test_vocab_from_instances_namespaces": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.CcgBankDatasetReader",
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ccgbank_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.Conll2000DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.TestConll2000Reader": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.TestConll2000Reader.test_read_from_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.conll2000.Conll2000DatasetReader",
    "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2000_dataset_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.Conll2003DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.TestConll2003Reader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.TestConll2003Reader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader",
    "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.conll2003_dataset_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.ConllCorefReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.ConllCorefReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.TestCorefReader": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.TestCorefReader.check_candidate_mentions_are_well_defined": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "all",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.TestCorefReader.test_read_from_file": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.ConllCorefReader",
    "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.pytest",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.coref_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.TestWinobiasReader": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.TestWinobiasReader.check_candidate_mentions_are_well_defined": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "all",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.TestWinobiasReader.test_read_from_file": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.WinobiasReader",
    "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.pytest",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.WinobiasReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.WinobiasReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.coreference.winobias_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.Ontonotes": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.Ontonotes"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.TestOntonotes": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.TestOntonotes.test_dataset_iterator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "list",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.TestOntonotes.test_dataset_path_iterator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "len",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.TestOntonotes.test_ontonotes_can_read_conll_file_with_multiple_documents": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.Ontonotes",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.ontonotes_test.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bio_tags_to_spans_extracts_correct_spans": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bio_tags_to_spans_extracts_correct_spans_without_labels": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bio_tags_to_spans_ignores_specified_tags": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bio_to_bioul": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bioul_tags_to_spans": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bioul_tags_to_spans_without_labels": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bmes_tags_to_spans_extracts_correct_spans": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_bmes_tags_to_spans_extracts_correct_spans_without_labels": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_enumerate_spans_enumerates_all_spans": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans",
    "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_enumerate_spans_enumerates_all_spans.no_prefixed_punctuation": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_iob1_tags_to_spans_extracts_correct_spans": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_iob1_tags_to_spans_extracts_correct_spans_without_labels": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.SpanUtilsTest.test_iob1_to_bioul": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.span_utils_test.span_utils": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_clean_and_split_sql": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_and_split_sql"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_clean_unneeded_aliases": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.clean_unneeded_aliases"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_process_sql_data_blob": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.process_sql_data",
    "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.json",
    "enumerate",
    "len",
    "list",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_process_sql_data_can_yield_all_queries": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.process_sql_data",
    "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.json",
    "len",
    "list",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_read_database_schema": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_replace_variables": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.replace_variables"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.Text2SqlUtilsTest.test_resolve_primary_keys_in_schema": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.read_dataset_schema",
    "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.resolve_primary_keys_in_schema"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.dataset_utils.text2sql_utils_test.text2sql_utils": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.Event2MindDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.Event2MindDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.TestEvent2MindDatasetReader": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.TestEvent2MindDatasetReader.test_read": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.Event2MindDatasetReader",
    "allennlp.tests.data.dataset_readers.event2mind_test.get_text",
    "allennlp.tests.data.dataset_readers.event2mind_test.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.TestEvent2MindDatasetReader.test_read_with_dummy_instances_for_vocab_generation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.Event2MindDatasetReader",
    "allennlp.tests.data.dataset_readers.event2mind_test.get_text",
    "allennlp.tests.data.dataset_readers.event2mind_test.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.get_text": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.event2mind_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.LanguageModelingReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.LanguageModelingReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.TestLanguageModelingDatasetReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.TestLanguageModelingDatasetReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.LanguageModelingReader",
    "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.language_modeling_dataset_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.LazyDatasetReader": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.DatasetReader"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.LazyDatasetReader.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "bool",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.LazyDatasetReader._read": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.TestLazyDatasetReader": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.TestLazyDatasetReader.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.tokenizers.Token",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.TestLazyDatasetReader.test_lazy": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.LazyDatasetReader",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.TestLazyDatasetReader.test_non_lazy": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.LazyDatasetReader",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.lazy_dataset_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.MultiprocessDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.MultiprocessDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.TestMultiprocessDatasetReader": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.TestMultiprocessDatasetReader.setUp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "open",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.TestMultiprocessDatasetReader.test_multiple_epochs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.MultiprocessDatasetReader",
    "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.fingerprint",
    "collections.Counter",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.TestMultiprocessDatasetReader.test_multiprocess_read": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.MultiprocessDatasetReader",
    "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.fingerprint",
    "collections.Counter",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.TestMultiprocessDatasetReader.test_with_iterator": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.MultiprocessDatasetReader",
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.multiprocess_dataset_reader_test.fingerprint": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "str",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.OntonotesNamedEntityRecognition": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.TestOntonotesNamedEntityRecognitionReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.TestOntonotesNamedEntityRecognitionReader.test_ner_reader_can_filter_by_domain": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.TestOntonotesNamedEntityRecognitionReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.ontonotes_ner.OntonotesNamedEntityRecognition",
    "allennlp.tests.data.dataset_readers.ontonotes_ner_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.ontonotes_ner_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.PennTreeBankConstituencySpanDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader.test_get_gold_spans_correctly_extracts_spans": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader",
    "list",
    "nltk.tree.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader.test_get_gold_spans_correctly_extracts_spans_with_nested_labels": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader",
    "nltk.tree.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader.test_read_from_file": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans",
    "len",
    "nltk.tree.Tree.fromstring",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.TestPennTreeBankConstituencySpanReader.test_strip_functional_tags": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.PennTreeBankConstituencySpanDatasetReader",
    "nltk.tree.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.Tree": {
  "data": {
   "shadows": "nltk.tree.Tree"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.penn_tree_bank_reader_test.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.QuoraParaphraseDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.QuoraParaphraseDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.TestQuoraParaphraseReader": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.TestQuoraParaphraseReader.test_read_from_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.QuoraParaphraseDatasetReader",
    "allennlp.tests.data.dataset_readers.quora_paraphrase_test.pytest",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.quora_paraphrase_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.QuACReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.QuACReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.TestQuACReader": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.TestQuACReader.test_read": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.QuACReader.from_params",
    "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.pytest",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.quac_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.SquadReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SquadReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.TestSquadReader": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.TestSquadReader.test_can_build_from_params": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.dataset_readers.SquadReader.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.TestSquadReader.test_read_from_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.SquadReader",
    "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.squad_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.TestTriviaQaReader": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.TestTriviaQaReader.test_read": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.TriviaQaReader.from_params",
    "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.TriviaQaReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.TriviaQaReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.triviaqa_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.TestReadingComprehensionUtil": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.TestReadingComprehensionUtil.test_char_span_to_token_span_handles_easy_cases": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.char_span_to_token_span",
    "allennlp.data.tokenizers.WordTokenizer",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.TestReadingComprehensionUtil.test_char_span_to_token_span_handles_hard_cases": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.reading_comprehension.util.char_span_to_token_span",
    "allennlp.data.tokenizers.WordTokenizer",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.reading_comprehension.util_test.util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.util"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing.TestSemanticDependencyParsingDatasetReader": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing.TestSemanticDependencyParsingDatasetReader.test_read_from_file": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.semantic_dependency_parsing.SemanticDependenciesDatasetReader"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_dependency_parsing.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.AtisDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.AtisDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.TestAtisReader": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.TestAtisReader.test_atis_keep_unparseable": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.AtisDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.TestAtisReader.test_atis_read_from_file": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.data.dataset_readers.AtisDatasetReader",
    "allennlp.semparse.worlds.AtisWorld",
    "isinstance",
    "len",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.atis_test.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.GrammarBasedText2SqlDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.TestGrammarBasedText2SqlDatasetReader": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.TestGrammarBasedText2SqlDatasetReader.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.grammar_based_text2sql.GrammarBasedText2SqlDatasetReader",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.TestGrammarBasedText2SqlDatasetReader.test_reader_can_read_data_with_entity_pre_linking": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.grammar_based_text2sql_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.NlvrDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.NlvrDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.TestNlvrDatasetReader": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.TestNlvrDatasetReader.test_agenda_indices_are_correct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.NlvrDatasetReader",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.TestNlvrDatasetReader.test_reader_reads_grouped_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "all",
    "allennlp.data.dataset_readers.NlvrDatasetReader",
    "allennlp.semparse.worlds.NlvrWorld",
    "isinstance",
    "len",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.TestNlvrDatasetReader.test_reader_reads_processed_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.NlvrDatasetReader",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.nlvr_test.TestNlvrDatasetReader.test_reader_reads_ungrouped_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.NlvrDatasetReader",
    "allennlp.semparse.worlds.NlvrWorld",
    "isinstance",
    "len",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test.TemplateText2SqlDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.TemplateText2SqlDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test.TestTemplateText2SqlDatasetReader": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test.TestTemplateText2SqlDatasetReader.test_reader": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.TemplateText2SqlDatasetReader",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.template_text2sql_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.WikiTablesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReaderTest": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReaderTest.test_parse_example_line": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.semantic_parsing.wikitables.util.parse_example_line",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReaderTest.test_read_respects_max_dpd_tries_when_not_sorting": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.WikiTablesDatasetReader",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReaderTest.test_reader_reads": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.dataset_readers.WikiTablesDatasetReader.from_params",
    "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.assert_dataset_correct",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesDatasetReaderTest.test_reader_reads_preprocessed_file": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.WikiTablesDatasetReader",
    "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.assert_dataset_correct",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.assert_dataset_correct": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.WikiTablesWorld",
    "isinstance",
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.semantic_parsing.wikitables_test.wikitables_util": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_parsing.wikitables.util"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.Seq2SeqDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.Seq2SeqDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.TestSeq2SeqDatasetReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.TestSeq2SeqDatasetReader.test_default_format": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.Seq2SeqDatasetReader",
    "allennlp.tests.data.dataset_readers.seq2seq_test.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.TestSeq2SeqDatasetReader.test_source_add_start_token": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.Seq2SeqDatasetReader",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.seq2seq_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.TestSequenceTaggingDatasetReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.TestSequenceTaggingDatasetReader.test_brown_corpus_format": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.TestSequenceTaggingDatasetReader.test_default_format": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.tests.data.dataset_readers.sequence_tagging_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.sequence_tagging_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.SimpleLanguageModelingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TestSimpleLanguageModelingDatasetReader": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TestSimpleLanguageModelingDatasetReader.test_max_sequence_length": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader",
    "allennlp.tests.data.dataset_readers.simple_language_modeling_test.os",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TestSimpleLanguageModelingDatasetReader.test_read_multiple_sentences": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader",
    "allennlp.tests.data.dataset_readers.simple_language_modeling_test.os",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TestSimpleLanguageModelingDatasetReader.test_read_single_sentence": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader",
    "allennlp.tests.data.dataset_readers.simple_language_modeling_test.os",
    "list",
    "open",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TestSimpleLanguageModelingDatasetReader.test_text_to_instance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.SimpleLanguageModelingDatasetReader",
    "allennlp.data.fields.TextField",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.simple_language_modeling_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.SnliReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SnliReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.TestSnliReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.TestSnliReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.SnliReader",
    "allennlp.tests.data.dataset_readers.snli_reader_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.snli_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.SrlReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.TestSrlReader": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.TestSrlReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader",
    "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.TestSrlReader.test_srl_reader_can_filter_by_domain": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.semantic_role_labeling.SrlReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.srl_dataset_reader_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.StanfordSentimentTreeBankDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader.test_2_class": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader.test_3_class": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader.test_from_params": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader.test_read_from_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader",
    "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.TestStanfordSentimentTreebankReader.test_use_subtrees": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.dataset_readers.StanfordSentimentTreeBankDatasetReader",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.stanford_sentiment_tree_bank_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test.TestUniversalDependenciesDatasetReader": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test.TestUniversalDependenciesDatasetReader.test_read_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.UniversalDependenciesDatasetReader",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test.TestUniversalDependenciesDatasetReader.test_read_from_file_with_language_specific_pos": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.UniversalDependenciesDatasetReader",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_readers.universal_dependencies_dataset_reader_test.UniversalDependenciesDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.UniversalDependenciesDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.dataset_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.TestDataset": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.dataset_test.TestDataset.get_instances": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.fields.TextField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_test.TestDataset.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.dataset_test.TestDataset",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_test.TestDataset.test_as_tensor_dict": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.tests.data.dataset_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_test.TestDataset.test_instances_must_have_homogeneous_fields": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.TextField",
    "allennlp.tests.data.dataset_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_test.TestDataset.test_padding_lengths_uses_max_instance_lengths": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.dataset_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.dataset_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.adjacency_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.adjacency_field_test.AdjacencyField": {
  "data": {
   "shadows": "allennlp.data.fields.AdjacencyField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_adjacency_field_can_index_with_vocab": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.AdjacencyField",
    "allennlp.tests.data.fields.adjacency_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_adjacency_field_empty_field_works": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.fields.AdjacencyField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_adjacency_field_raises_with_duplicate_indices": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.AdjacencyField",
    "allennlp.tests.data.fields.adjacency_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_adjacency_field_raises_with_mismatching_labels_for_indices": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.AdjacencyField",
    "allennlp.tests.data.fields.adjacency_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_adjacency_field_raises_with_out_of_bounds_indices": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.AdjacencyField",
    "allennlp.tests.data.fields.adjacency_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TestAdjacencyField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.fields.AdjacencyField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.adjacency_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.adjacency_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.array_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.array_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.array_field_test.ArrayField": {
  "data": {
   "shadows": "allennlp.data.fields.ArrayField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.array_field_test.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_as_tensor_handles_larger_padding_dimensions": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.tests.data.fields.array_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_as_tensor_works_with_scalar": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.tests.data.fields.array_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_get_padding_lengths_correctly_returns_ordered_shape": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.tests.data.fields.array_field_test.numpy",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_padding_handles_list_fields": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.array_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_padding_handles_list_fields_with_padding_values": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.array_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.TestArrayField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.data.fields.ArrayField",
    "allennlp.tests.data.fields.array_field_test.numpy",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.array_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.index_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.index_field_test.TestIndexField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.test_as_tensor_converts_field_correctly": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.fields.IndexField",
    "allennlp.tests.data.fields.index_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.test_equality": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.fields.IndexField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.test_index_field_empty_field_works": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.fields.IndexField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.test_index_field_raises_on_incorrect_label_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.IndexField",
    "allennlp.tests.data.fields.index_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TestIndexField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.index_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.index_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphField": {
  "data": {
   "shadows": "allennlp.data.fields.KnowledgeGraphField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.KnowledgeGraphField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_as_tensor_produces_correct_output": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "enumerate",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_batch_tensors": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "allennlp.tests.data.fields.knowledge_graph_field_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_count_vocab_items": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_get_padding_lengths_raises_if_not_indexed": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.tests.data.fields.knowledge_graph_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_index_converts_field_correctly": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_lemma_feature_extractor": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "allennlp.data.fields.KnowledgeGraphField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_padding_lengths_are_computed_correctly": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.KnowledgeGraphFieldTest.test_span_overlap_fraction": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.data.fields.KnowledgeGraphField",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.knowledge_graph_field_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.label_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.label_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.label_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.label_field_test.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_as_tensor_returns_integer_tensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.fields.LabelField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_class_variables_for_namespace_warnings_work_correctly": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.LabelField._already_warned_namespaces",
    "allennlp.tests.data.fields.label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_label_field_can_index_with_vocab": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.LabelField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_label_field_empty_field_works": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.fields.LabelField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_label_field_raises_with_incorrect_label_type": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.LabelField",
    "allennlp.tests.data.fields.label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_label_field_raises_with_non_integer_labels_and_no_indexing": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.LabelField",
    "allennlp.tests.data.fields.label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.TestLabelField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.fields.LabelField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.label_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.label_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.list_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.tests.data.fields.list_field_test.TestListField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_all_fields_padded_to_max_length": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_as_tensor_can_handle_multiple_token_indexers": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_as_tensor_can_handle_multiple_token_indexers_and_empty_fields": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_fields_can_pad_to_greater_than_max_length": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_get_padding_lengths": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_list_field_can_handle_empty_index_fields": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_list_field_can_handle_empty_sequence_label_fields": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_list_field_can_handle_empty_text_fields": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_nested_list_fields_are_padded_correctly": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.ListField",
    "allennlp.tests.data.fields.list_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TestListField.test_sequence_methods": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.list_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.list_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.metadata_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.metadata_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.metadata_field_test.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.metadata_field_test.TestMetadataField": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.metadata_field_test.TestMetadataField.test_mapping_raises_with_non_dict": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.data.fields.MetadataField",
    "allennlp.tests.data.fields.metadata_field_test.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.metadata_field_test.TestMetadataField.test_mapping_works_with_dict": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.fields.MetadataField",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.metadata_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.multilabel_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test.MultiLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.MultiLabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_as_tensor_returns_integer_tensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_class_variables_for_namespace_warnings_work_correctly": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.data.fields.MultiLabelField._already_warned_namespaces",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_can_index_with_vocab": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.fields.MultiLabelField",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.tests.data.fields.multilabel_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_empty_field_works": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.fields.MultiLabelField",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.tests.data.fields.multilabel_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_raises_with_given_num_labels": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_raises_with_incorrect_label_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_raises_with_no_indexing_and_missing_num_labels": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_raises_with_no_indexing_and_wrong_num_labels": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_multilabel_field_raises_with_non_integer_labels_and_no_indexing": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.MultiLabelField",
    "allennlp.tests.data.fields.multilabel_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.TestMultiLabelField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.fields.MultiLabelField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.multilabel_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.multilabel_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.production_rule_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test.ProductionRuleField": {
  "data": {
   "shadows": "allennlp.data.fields.ProductionRuleField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_as_tensor_produces_correct_output": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField",
    "isinstance",
    "len",
    "numpy.testing.assert_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_batch_tensors_does_not_modify_list": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_doubly_nested_field_works": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.ProductionRuleField",
    "isinstance",
    "len",
    "list",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_field_counts_vocab_items_correctly": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_index_converts_field_correctly": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_padding_lengths_are_computed_correctly": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.TestProductionRuleField.test_production_rule_field_can_print": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "allennlp.data.fields.ProductionRuleField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.production_rule_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.production_rule_field_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_as_tensor_produces_integer_targets": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.tests.data.fields.sequence_label_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_class_variables_for_namespace_warnings_work_correctly": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.SequenceLabelField._already_warned_namespaces",
    "allennlp.tests.data.fields.sequence_label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_count_vocab_items_correctly_indexes_tags": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.fields.SequenceLabelField",
    "collections.defaultdict",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_index_converts_field_correctly": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.SequenceLabelField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.data.fields.SequenceLabelField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_sequence_label_field_raises_on_incorrect_type": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.tests.data.fields.sequence_label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_sequence_methods": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.data.fields.SequenceLabelField",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TestSequenceLabelField.test_tag_length_mismatch_raises": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.tests.data.fields.sequence_label_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.sequence_label_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.span_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.SpanField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.span_field_test.TestSpanField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_as_tensor_converts_span_field_correctly": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.fields.SpanField",
    "allennlp.tests.data.fields.span_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_empty_span_field_works": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.fields.SpanField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_equality": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.data.fields.SpanField"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.data.fields.SpanField",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_span_field_raises_if_span_end_is_greater_than_sentence_length": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.fields.SpanField",
    "allennlp.tests.data.fields.span_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_span_field_raises_on_ill_defined_span": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.fields.SpanField",
    "allennlp.tests.data.fields.span_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TestSpanField.test_span_field_raises_on_incorrect_label_type": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.data.fields.SpanField",
    "allennlp.tests.data.fields.span_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.span_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.span_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.fields.text_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.TokenIndexer"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.get_keys": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.get_padding_lengths": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.get_padding_token": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.pad_token_sequence": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.tests.data.fields.text_field_test.TestTextField",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_as_tensor_handles_characters": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.tests.data.fields.text_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_as_tensor_handles_longer_lengths": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.text_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_as_tensor_handles_words": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.text_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_as_tensor_handles_words_and_characters_with_longer_lengths": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.tests.data.fields.text_field_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_field_counts_vocab_items_correctly": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "collections.defaultdict",
    "int",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_get_padding_lengths_raises_if_no_indexed_tokens": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.fields.text_field_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_index_converts_field_correctly": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_padding_lengths_are_computed_correctly": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_printing_doesnt_crash": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_sequence_methods": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TestTextField.test_token_indexer_returns_dict": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.tests.data.fields.text_field_test.DictReturningTokenIndexer",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.fields.text_field_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.tests.data.fields.text_field_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.instance_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.instance_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.instance_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.instance_test.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.tests.data.instance_test.TestInstance": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.instance_test.TestInstance.test_instance_implements_mutable_mapping": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.tokenizers.Token",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.instance_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.instance_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.iterators.basic_iterator_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest.assert_instances_are_correct": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest.create_instance": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest.create_instances_from_token_counts": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest.get_batches_stats": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "int",
    "len",
    "max",
    "str",
    "sum",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest.setUp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest",
    "allennlp.tests.data.iterators.basic_iterator_test.LazyIterable",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.LazyIterable": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.LazyIterable.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.LazyIterable.__iter__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_call_iterates_over_data_forever": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator.index_with",
    "len",
    "next",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_create_batches_groups_correctly": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_epoch_tracking_forever": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "all",
    "allennlp.data.iterators.BasicIterator",
    "enumerate",
    "iterator",
    "iterator.index_with",
    "len",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_epoch_tracking_multiple_epochs": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "all",
    "allennlp.data.iterators.BasicIterator",
    "enumerate",
    "iterator",
    "iterator.index_with",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_epoch_tracking_when_one_epoch_at_a_time": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "all",
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator.index_with",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_few_instances_per_epoch": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_from_params": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.iterators.BasicIterator.from_params",
    "iterator",
    "iterator._batch_size"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_get_num_batches": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_many_instances_per_epoch": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_max_instances_in_memory": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_maximum_samples_per_batch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "iterator.index_with",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_maximum_samples_per_batch_packs_tightly": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "iterator.index_with",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_multiple_cursors": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader._LazyInstances",
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "iterator._create_batches",
    "iterator.index_with",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_shuffle": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "collections.Counter",
    "id",
    "iterator",
    "iterator._create_batches",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TestBasicIterator.test_yield_one_epoch_iterates_over_the_data_once": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "iterator",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.basic_iterator_test._LazyInstances": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader._LazyInstances"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.BucketIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BucketIterator"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.IteratorTest": {
  "data": {
   "shadows": "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_biggest_batch_first_works": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.iterators.BucketIterator",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_bucket_iterator_maximum_samples_per_batch": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.data.iterators.BucketIterator",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_create_batches_groups_correctly": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.iterators.BucketIterator",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_create_batches_groups_correctly_with_max_instances": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.data.iterators.BucketIterator",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_from_params": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.iterators.BucketIterator.from_params",
    "allennlp.tests.data.iterators.bucket_iterator_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.TestBucketIterator.test_maximum_samples_per_batch_packs_tightly": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.data.iterators.BucketIterator",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.bucket_iterator_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.IteratorTest": {
  "data": {
   "shadows": "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.MultiprocessDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.MultiprocessDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.MultiprocessIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.MultiprocessIterator"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.TestMultiprocessIterator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.data.iterators.basic_iterator_test.IteratorTest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.TestMultiprocessIterator.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase.FIXTURES_ROOT",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "open",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.TestMultiprocessIterator.test_multiprocess_reader_with_multiprocess_iterator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.MultiprocessDatasetReader",
    "allennlp.data.iterators.BasicIterator",
    "allennlp.data.iterators.MultiprocessIterator",
    "iterator",
    "iterator.index_with",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.TestMultiprocessIterator.test_yield_one_epoch_iterates_over_the_data_once": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "allennlp.data.iterators.MultiprocessIterator",
    "iterator",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.iterators.multiprocess_iterator_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.BertBasicWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.PretrainedBertIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.TestBertIndexer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.TestBertIndexer.test_starting_ending_offsets": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter",
    "allennlp.data.vocabulary.Vocabulary",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.bert_indexer_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest.test_as_array_produces_token_sequence": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest.test_count_vocab_items_respects_casing": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest.test_min_padding_length": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest.test_start_and_end_tokens": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenIndexerTest.test_tokens_to_indices_produces_correct_characters": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.TokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.character_token_indexer_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.DepLabelIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.DepLabelIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer.test_as_array_produces_token_sequence": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.DepLabelIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer.test_count_vocab_items_uses_pos_tags": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.DepLabelIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer.test_padding_functions": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.DepLabelIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.TestDepLabelIndexer.test_tokens_to_indices_uses_pos_tags": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.DepLabelIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.dep_label_indexer_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.TestELMoTokenCharactersIndexer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.TestELMoTokenCharactersIndexer.test_bos_to_char_ids": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.TestELMoTokenCharactersIndexer.test_elmo_as_array_produces_token_sequence": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.TestELMoTokenCharactersIndexer.test_eos_to_char_ids": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.TestELMoTokenCharactersIndexer.test_unicode_to_char_ids": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer",
    "chr"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.elmo_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.NerTagIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.NerTagIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.test_as_array_produces_token_sequence": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.NerTagIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.test_blank_ner_tag": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.NerTagIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.test_count_vocab_items_uses_ner_tags": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.NerTagIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.test_padding_functions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.NerTagIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.TestNerTagIndexer.test_tokens_to_indices_uses_ner_tags": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.NerTagIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.ner_tag_indexer_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.OpenaiTransformerBytePairIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer._create_indexer_vocab": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer",
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.json",
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.tarfile",
    "enumerate",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.test_bpe": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.data.Token"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.test_for_correctness_with_fixture": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer",
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.json",
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.pytest",
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.spacy",
    "enumerate",
    "nlp",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.test_raises_with_too_long_sentence": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.Token",
    "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.test_tokens_to_indices": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.TestOpenaiTransformerBytePairIndexer.test_with_extra_tokens": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.data.Token"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.openai_transformer_byte_pair_indexer_test.text_standardize": {
  "data": {
   "shadows": "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.PosTagIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.PosTagIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.test_as_array_produces_token_sequence": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.PosTagIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.test_blank_pos_tag": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.PosTagIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.test_count_vocab_items_uses_pos_tags": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.PosTagIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.test_padding_functions": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.PosTagIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.TestPosTagIndexer.test_tokens_to_indices_uses_pos_tags": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.PosTagIndexer",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.pos_tag_indexer_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.TestSingleIdTokenIndexer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.TestSingleIdTokenIndexer.test_as_array_produces_token_sequence": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.TestSingleIdTokenIndexer.test_count_vocab_items_respects_casing": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.token_indexers.single_id_token_indexer_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.TestCharacterTokenizer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.TestCharacterTokenizer.test_batch_tokenization": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.CharacterTokenizer",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.TestCharacterTokenizer.test_handles_byte_encoding": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.CharacterTokenizer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.character_tokenizer_test.TestCharacterTokenizer.test_splits_into_characters": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.CharacterTokenizer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.SpacySentenceSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter",
    "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter.test_batch_dep_parse_sentence_splitting": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter.test_batch_rule_based_sentence_splitting": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter.test_dep_parse_splitter_passes_through_correctly": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.sentence_splitter_test.TestSentenceSplitter.test_rule_based_splitter_passes_through_correctly": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.RegexFilter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_filter.RegexFilter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.StopwordFilter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_filter.StopwordFilter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token",
    "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter",
    "list",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.test_filters_digits_correctly": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.RegexFilter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.test_filters_from_file_correctly": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.StopwordFilter",
    "allennlp.tests.data.tokenizers.word_filter_test.os",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.test_filters_multiple_patterns_correctly": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.RegexFilter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.test_filters_no_match_correctly": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.RegexFilter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.TestWordFilter.test_filters_punctuation_correctly": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_filter.RegexFilter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_filter_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.LettersDigitsWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.LettersDigitsWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.OpenAISplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.OpenAISplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.SimpleWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter.setUp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.LettersDigitsWordSplitter",
    "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter.test_tokenize_handles_complex_punctuation": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter.test_tokenize_handles_splits_all_punctuation": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestLettersDigitsWordSplitter.test_tokenize_handles_unicode_letters": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token.Token"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestOpenAiWordSplitter": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestOpenAiWordSplitter.setUp": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.OpenAISplitter",
    "allennlp.tests.data.tokenizers.word_splitter_test.TestOpenAiWordSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestOpenAiWordSplitter.test_tokenize_handles_complex_punctuation": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.SimpleWordSplitter",
    "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_batch_tokenization": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_tokenize_handles_complex_punctuation": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_tokenize_handles_contraction": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_tokenize_handles_final_apostrophe": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_tokenize_handles_multiple_contraction": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSimpleWordSplitter.test_tokenize_handles_special_cases": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.setUp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_batch_tokenization": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_handles_complex_punctuation": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_handles_contraction": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_handles_final_apostrophe": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_handles_multiple_contraction": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_handles_special_cases": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.TestSpacyWordSplitter.test_tokenize_removes_whitespace_tokens": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_splitter_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.TestWordTokenizer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.TestWordTokenizer.test_batch_tokenization": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.TestWordTokenizer.test_passes_through_correctly": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.TestWordTokenizer.test_stems_and_filters_stopwords_correctly": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.tokenizers.WordTokenizer.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.tokenizers.word_tokenizer_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.data.vocabulary_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.DEFAULT_OOV_TOKEN": {
  "data": {
   "shadows": "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.tests.data.vocabulary_test.TestVocabulary",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_add_word_to_index_gives_consistent_results": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_dataset_respects_exclusive_embedding_file": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "allennlp.tests.data.vocabulary_test.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_dataset_respects_inclusive_embedding_file": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "allennlp.tests.data.vocabulary_test.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_dataset_respects_max_vocab_size_single_int": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_dataset_respects_min_count": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.from_instances"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_instances_exclusive_embeddings_file_inside_archive": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "allennlp.tests.data.vocabulary_test.zipfile",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_params": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "allennlp.tests.data.vocabulary_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_params_adds_tokens_to_vocab": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.vocabulary.Vocabulary.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_params_extend_config": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "allennlp.tests.data.vocabulary_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_from_params_valid_vocab_extension_thoroughly": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_invalid_vocab_extension": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "allennlp.tests.data.vocabulary_test.copy",
    "allennlp.tests.data.vocabulary_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_max_vocab_size_dict": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_max_vocab_size_partial_dict": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_min_pretrained_embeddings": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_namespace_dependent_default_dict": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_namespaces": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_read_pretrained_words": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._read_pretrained_tokens",
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_registrability": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "MyVocabulary",
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_registrability.MyVocabulary": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary.register"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_registrability.MyVocabulary.from_params": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "MyVocabulary",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_saving_and_loading": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_files"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_saving_and_loading_works_with_byte_encoding": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.data.tokenizers.CharacterTokenizer",
    "allennlp.data.vocabulary.Vocabulary.from_files",
    "allennlp.data.vocabulary.Vocabulary.from_instances",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_set_from_file_reads_non_padded_files": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.tests.data.vocabulary_test.codecs"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_set_from_file_reads_padded_files": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.tests.data.vocabulary_test.codecs"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_unknown_token": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_valid_vocab_extension": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.Vocabulary.from_params",
    "allennlp.tests.data.vocabulary_test.copy",
    "allennlp.tests.data.vocabulary_test.shutil",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TestVocabulary.test_vocab_can_print": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.data.vocabulary_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test._NamespaceDependentDefaultDict": {
  "data": {
   "shadows": "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test._read_pretrained_tokens": {
  "data": {
   "shadows": "allennlp.data.vocabulary._read_pretrained_tokens"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.format_embeddings_file_uri": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tests.data.vocabulary_test.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "allennlp.tests.models": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.archival_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.archival_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.ArchivalTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.archival_test.ArchivalTest.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.archival_test.ArchivalTest.test_archiving": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.models.archival.load_archive",
    "allennlp.tests.models.archival_test.copy",
    "allennlp.tests.models.archival_test.torch",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.archival_test.ArchivalTest.test_extra_files": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.models.archival.archive_model",
    "allennlp.models.archival.load_archive",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.archival_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.archive_model": {
  "data": {
   "shadows": "allennlp.models.archival.archive_model"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.archival_test.train_model": {
  "data": {
   "shadows": "allennlp.commands.train.train_model"
  },
  "type": "import"
 },
 "allennlp.tests.models.atis_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.atis_semantic_parser_test.AtisSemanticParserTest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.atis_semantic_parser_test.AtisSemanticParserTest.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.tests.models.atis_semantic_parser_test.AtisSemanticParserTest",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.atis_semantic_parser_test.AtisSemanticParserTest.test_action_sequence_to_sql": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.atis_semantic_parser_test.AtisSemanticParserTest.test_atis_model_can_train_save_and_load": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.atis_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.atis_semantic_parser_test.action_sequence_to_sql": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.action_sequence_to_sql"
  },
  "type": "import"
 },
 "allennlp.tests.models.atis_semantic_parser_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_decode_runs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_dependency_parser_can_save_and_load": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_mst_decodes_arc_labels_with_respect_to_unconstrained_scores": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.tests.models.biaffine_dependency_parser_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_mst_decoding_can_run_forward": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.BiaffineDependencyParserTest.test_mst_respects_no_outgoing_root_edges_constraint": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.nn.chu_liu_edmonds.decode_mst",
    "allennlp.tests.models.biaffine_dependency_parser_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.model_test_case.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.decode_mst": {
  "data": {
   "shadows": "allennlp.nn.chu_liu_edmonds.decode_mst"
  },
  "type": "import"
 },
 "allennlp.tests.models.biaffine_dependency_parser_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_elmo_but_no_set_flags_throws_configuration_error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.biattentive_classification_network_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_elmo_in_text_field_embedder_throws_configuration_error": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.models.biattentive_classification_network_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_elmo_num_repr_set_flags_mismatch_throws_configuration_error": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.biattentive_classification_network_test.pytest",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_feedforward_bcn_can_train_save_and_load": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_input_and_output_elmo_bcn_can_train_save_and_load": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_maxout_bcn_can_train_save_and_load": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_mismatching_dimensions_throws_configuration_error": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.biattentive_classification_network_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_no_elmo_but_set_flags_throws_configuration_error": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.biattentive_classification_network_test.pytest",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_no_elmo_tokenizer_throws_configuration_error": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.models.biattentive_classification_network_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.BiattentiveClassificationNetworkTest.test_output_only_elmo_bcn_can_train_save_and_load": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "allennlp.tests.models.biattentive_classification_network_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.tests.models.biattentive_classification_network_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.bidirectional_lm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.bidirectional_lm_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM.setUp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM.test_bidirectional_lm_can_train_save_and_load": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLMUnsampled": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLM"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.bidirectional_lm_test.TestBidirectionalLMUnsampled.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.bidirectional_lm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.bimpm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.bimpm_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM.setUp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.tests.models.bimpm_test.TestBiMPM",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM.test_decode_runs_correctly": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "allennlp.tests.models.bimpm_test.TestBiMPM.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.constituency_parser_test.EvalbBracketingScorer": {
  "data": {
   "shadows": "allennlp.training.metrics.EvalbBracketingScorer"
  },
  "type": "import"
 },
 "allennlp.tests.models.constituency_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.model_test_case.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest",
    "allennlp.training.metrics.EvalbBracketingScorer.compile_evalb",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.tearDown": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer.clean_evalb",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_construct_tree_from_spans": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_construct_tree_from_spans_handles_nested_labels": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_decode_runs": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_forward_can_handle_a_single_word_as_input": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.tests.models.constituency_parser_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_resolve_overlap_conflicts_greedily": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.models.constituency_parser.SpanInformation"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_span_parser_can_save_and_load": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanConstituencyParserTest.test_tree_construction_with_too_few_spans_creates_trees_with_depth_one_word_nodes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.constituency_parser_test.SpanInformation": {
  "data": {
   "shadows": "allennlp.models.constituency_parser.SpanInformation"
  },
  "type": "import"
 },
 "allennlp.tests.models.constituency_parser_test.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.tests.models.constituency_parser_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.coreference_resolution.coref_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.CorefTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.CorefTest.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.models.coreference_resolution.coref_test.CorefTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.CorefTest.test_coref_model_can_train_save_and_load": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.CorefTest.test_decode": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.tests.models.coreference_resolution.coref_test.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.coreference_resolution.coref_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.crf_tagger_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_mismatching_dimensions_throws_configuration_error": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.crf_tagger_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_simple_tagger_can_train_save_and_conll2000": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_simple_tagger_can_train_save_and_load": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_simple_tagger_can_train_save_and_load_ccgbank": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.CrfTaggerTest.test_simple_tagger_constraint_type_deprecated": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.common.params.Params",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.crf_tagger_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.crf_tagger_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.crf_tagger_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.decomposable_attention_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.DecomposableAttention": {
  "data": {
   "shadows": "allennlp.models.DecomposableAttention"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.tests.models.decomposable_attention_test.numpy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.test_mismatched_dimensions_raise_configuration_errors": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.decomposable_attention_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.TestDecomposableAttention.test_model_load": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.models.DecomposableAttention",
    "allennlp.models.Model.load",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.decomposable_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.decomposable_attention_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.BeamSearch": {
  "data": {
   "shadows": "allennlp.nn.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_bidirectional_model_can_train_save_and_load": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_decode_runs_correctly": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_greedy_decode_matches_beam_search": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_greedy_model_can_train_save_and_load": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_legacy_attention_model_can_train_save_and_load": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_loss_is_computed_correctly": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.numpy",
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.SimpleSeq2SeqTest.test_no_attention_model_can_train_save_and_load": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.tests.models.encoder_decoders.simple_seq2seq_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.esim_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.esim_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.esim_test.TestESIM": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.esim_test.TestESIM.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.models.esim_test.TestESIM",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.esim_test.TestESIM.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "allennlp.tests.models.esim_test.TestESIM.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.tests.models.esim_test.numpy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.esim_test.TestESIM.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.tests.models.esim_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.esim_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.event2mind_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.event2mind_test.BeamSearch": {
  "data": {
   "shadows": "allennlp.nn.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest.get_sample_encoded_output": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.nn.util.get_text_field_mask"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model_from_file",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest.test_beam_search_matches_greedy": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch",
    "allennlp.tests.models.event2mind_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest.test_beam_search_orders_results": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.tests.models.event2mind_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.event2mind_test.Event2MindTest.test_encoder_decoder_can_train_save_and_load": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "allennlp.tests.models.event2mind_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.event2mind_test.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.tests.models.event2mind_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.event2mind_test.train_model_from_file": {
  "data": {
   "shadows": "allennlp.commands.train.train_model_from_file"
  },
  "type": "import"
 },
 "allennlp.tests.models.graph_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.graph_parser_test.GraphParserTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.graph_parser_test.GraphParserTest.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.tests.models.graph_parser_test.GraphParserTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.graph_parser_test.GraphParserTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.tests.models.graph_parser_test.GraphParserTest.test_graph_parser_can_save_and_load": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "allennlp.tests.models.graph_parser_test.GraphParserTest.test_model_can_decode": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.graph_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.model_test_case.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsemble": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest.test_ensemble_chooses_highest_average_confidence_2": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf_ensemble.ensemble",
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.numpy",
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest.test_ensemble_chooses_highest_average_confidence_3": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.models.reading_comprehension.bidaf_ensemble.ensemble",
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.numpy",
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.BidafEnsembleTest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.models.reading_comprehension.bidaf_ensemble.BidafEnsemble",
    "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.torch",
    "bidaf_ensemble"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.ensemble": {
  "data": {
   "shadows": "allennlp.models.reading_comprehension.bidaf_ensemble.ensemble"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_ensemble_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlow": {
  "data": {
   "shadows": "allennlp.models.BidirectionalAttentionFlow"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.data.DatasetReader.from_params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.models.Model.from_params",
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.tests.models.reading_comprehension.bidaf_test.numpy",
    "isinstance",
    "numpy.testing.assert_almost_equal",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.test_get_best_span": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.models.BidirectionalAttentionFlow.get_best_span",
    "allennlp.tests.models.reading_comprehension.bidaf_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.test_mismatching_dimensions_throws_configuration_error": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.reading_comprehension.bidaf_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.BidirectionalAttentionFlowTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.bidaf_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.DialogQATest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "allennlp.tests.models.reading_comprehension.dialog_qa_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.AtisGrammarStateletTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.AtisGrammarStateletTest.test_atis_grammar_statelet": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser.is_nonterminal",
    "allennlp.semparse.worlds.AtisWorld",
    "allennlp.state_machines.states.GrammarStatelet"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.AtisSemanticParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.atis.atis_semantic_parser.AtisSemanticParser"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.SimilarityFunction": {
  "data": {
   "shadows": "allennlp.modules.SimilarityFunction"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.atis.atis_grammar_statelet_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.BucketIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BucketIterator"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_forward_with_epoch_num_changes_cost_weight": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.data.iterators.BucketIterator",
    "allennlp.models.Model.from_params",
    "iterator",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_get_checklist_info": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_get_vocab_index_mapping": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.archival.load_archive",
    "copy_token_at_index",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_get_vocab_index_mapping.copy_token_at_index": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_initialize_weights_from_archive": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.models.archival.load_archive",
    "dict",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_mml_initialized_model_can_train_save_and_load": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.NlvrCoverageSemanticParserTest.test_ungrouped_model_can_train_save_and_load": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_coverage_semantic_parser_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test.NlvrDirectSemanticParserTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test.NlvrDirectSemanticParserTest.setUp": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test.NlvrDirectSemanticParserTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.nlvr.nlvr_direct_semantic_parser_test.NlvrDirectSemanticParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.to_qr_spec_string"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_denotation_only_model_can_train_save_and_load": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_elmo_model_can_train_save_and_load": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_entity_bits_model_can_train_save_and_load": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_friction_model_can_train_save_and_load": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_friction_zeroshot_model_can_train_save_and_load": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_group_worlds": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.quarel_utils.group_worlds"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_tagger_model_can_train_save_and_load": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_wdp_zeroshot_model_can_train_save_and_load": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_with_tagger_model_can_train_save_and_load": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.QuarelSemanticParserTest.test_zeroshot_model_can_train_save_and_load": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.group_worlds": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.group_worlds"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.quarel.quarel_semantic_parser_test.to_qr_spec_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.quarel_utils.to_qr_spec_string"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlParser": {
  "data": {
   "shadows": "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlParserTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlParserTest.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlParserTest.test_grammar_statelet": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.models.semantic_parsing.text2sql_parser.Text2SqlParser.is_nonterminal",
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld",
    "allennlp.state_machines.states.GrammarStatelet"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.text2sql_parser_test.Text2SqlWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.WikiTablesErmSemanticParserTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.WikiTablesErmSemanticParserTest.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.WikiTablesErmSemanticParserTest",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.WikiTablesErmSemanticParserTest.tearDown": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.WikiTablesErmSemanticParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_erm_semantic_parser_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.get_fake_worlds": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "FakeTable",
    "FakeWorld",
    "collections.namedtuple",
    "len",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.tearDown": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_elmo_no_features_can_train_save_and_load": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_get_linking_probabilities": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_get_neighbor_indices": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_get_type_vector": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_mixture_no_features_model_can_train_save_and_load": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.WikiTablesMmlSemanticParserTest.test_model_can_train_save_and_load": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_parsing.wikitables.wikitables_mml_semantic_parser_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.semantic_role_labeler_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_bio_tags_correctly_convert_to_conll_format": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.convert_bio_tags_to_conll_format"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_decode_runs_correctly": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.tests.models.semantic_role_labeler_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_mismatching_dimensions_throws_configuration_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.semantic_role_labeler_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_perl_eval_script_can_run_on_printed_conll_files": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.write_to_conll_eval_file",
    "allennlp.tests.models.semantic_role_labeler_test.os",
    "allennlp.tests.models.semantic_role_labeler_test.subprocess",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.SemanticRoleLabelerTest.test_srl_model_can_train_save_and_load": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tests.models.semantic_role_labeler_test.convert_bio_tags_to_conll_format": {
  "data": {
   "shadows": "allennlp.models.semantic_role_labeler.convert_bio_tags_to_conll_format"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.tests.models.semantic_role_labeler_test.write_to_conll_eval_file": {
  "data": {
   "shadows": "allennlp.models.semantic_role_labeler.write_to_conll_eval_file"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.simple_tagger_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.DataIterator"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerRegularizationTest": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerRegularizationTest.setUp": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.common.params.Params.from_file",
    "allennlp.data.dataset_readers.DatasetReader.from_params",
    "allennlp.data.iterators.DataIterator.from_params",
    "allennlp.training.Trainer.from_params",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerRegularizationTest.test_regularization": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.tests.models.simple_tagger_test.torch",
    "next"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_batch_predictions_are_consistent": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "flaky.flaky"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_forward_on_instances_ignores_loss_key_when_batched": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_forward_pass_runs_correctly": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.tests.models.simple_tagger_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_mismatching_dimensions_throws_configuration_error": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.Model.from_params",
    "allennlp.tests.models.simple_tagger_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_regularization": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "allennlp.training.Trainer",
    "iterator",
    "next"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.SimpleTaggerTest.test_simple_tagger_can_train_save_and_load": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "allennlp.tests.models.simple_tagger_test.Trainer": {
  "data": {
   "shadows": "allennlp.training.Trainer"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.models.simple_tagger_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.models.sniff_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.models.sniff_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.models.sniff_test.SniffTest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_constituency_parsing": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.pretrained.span_based_constituency_parsing_with_elmo_joshi_2018"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_coreference_resolution": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.pretrained.neural_coreference_resolution_lee_2017",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_dependency_parsing": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.pretrained.biaffine_parser_stanford_dependencies_todzat_2017"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_machine_comprehension": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.pretrained.bidirectional_attention_flow_seo_2017"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_ner": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.pretrained.named_entity_recognition_with_elmo_peters_2018"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_semantic_role_labeling": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.pretrained.srl_with_elmo_luheng_2018"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.SniffTest.test_textual_entailment": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.pretrained.decomposable_attention_with_elmo_parikh_2017"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.models.sniff_test.pretrained": {
  "data": {
   "shadows": "allennlp.pretrained"
  },
  "type": "import"
 },
 "allennlp.tests.modules": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.BilinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.BilinearAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.TestBilinearAttention": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.TestBilinearAttention.test_forward_does_a_bilinear_product": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.BilinearAttention.from_params",
    "allennlp.tests.modules.attention.bilinear_attention_test.torch",
    "bilinear",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.bilinear_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.CosineAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.cosine_attention.CosineAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.TestCosineAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.TestCosineAttention.test_can_init_cosine": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.attention.Attention.from_params",
    "allennlp.modules.attention.cosine_attention.CosineAttention",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.TestCosineAttention.test_cosine_similarity": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.attention.cosine_attention.CosineAttention",
    "allennlp.tests.modules.attention.cosine_attention_test.numpy",
    "allennlp.tests.modules.attention.cosine_attention_test.torch",
    "linear",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.cosine_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.DotProductAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.dot_product_attention.DotProductAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.TestDotProductAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.TestDotProductAttention.test_can_init_dot": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.attention.Attention.from_params",
    "allennlp.modules.attention.dot_product_attention.DotProductAttention",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.TestDotProductAttention.test_dot_product_similarity": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.attention.dot_product_attention.DotProductAttention",
    "allennlp.tests.modules.attention.dot_product_attention_test.numpy",
    "allennlp.tests.modules.attention.dot_product_attention_test.torch",
    "linear",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.dot_product_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.LegacyAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.legacy_attention.LegacyAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_batched_masked": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "allennlp.tests.modules.attention.legacy_attention_test.numpy",
    "allennlp.tests.modules.attention.legacy_attention_test.torch",
    "attention",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_batched_no_mask": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "allennlp.tests.modules.attention.legacy_attention_test.numpy",
    "allennlp.tests.modules.attention.legacy_attention_test.torch",
    "attention",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_can_build_from_params": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.legacy_attention.LegacyAttention.from_params",
    "attention",
    "attention._normalize",
    "attention._similarity_function.__class__.__name__"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_can_init_legacy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.attention.Attention.from_params",
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_masked": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "allennlp.tests.modules.attention.legacy_attention_test.numpy",
    "allennlp.tests.modules.attention.legacy_attention_test.torch",
    "attention",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_no_mask": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "allennlp.tests.modules.attention.legacy_attention_test.numpy",
    "allennlp.tests.modules.attention.legacy_attention_test.torch",
    "attention",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.TestLegacyAttention.test_non_normalized_attention_works": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.modules.attention.legacy_attention.LegacyAttention",
    "allennlp.tests.modules.attention.legacy_attention_test.torch",
    "attention",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.legacy_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.attention.linear_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.LinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.LinearAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.LinearAttentionTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.attention.linear_attention_test.LinearAttentionTest.test_bidaf_trilinear_similarity": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.modules.attention.LinearAttention",
    "allennlp.tests.modules.attention.linear_attention_test.numpy",
    "allennlp.tests.modules.attention.linear_attention_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.linear_attention_test.LinearAttentionTest.test_can_init_linear": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.attention.LinearAttention",
    "allennlp.modules.attention.attention.Attention.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.linear_attention_test.LinearAttentionTest.test_linear_similarity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.attention.LinearAttention",
    "allennlp.tests.modules.attention.linear_attention_test.numpy",
    "allennlp.tests.modules.attention.linear_attention_test.torch",
    "linear",
    "numpy.testing.assert_almost_equal",
    "torch.autograd.Variable",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.attention.linear_attention_test.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.Variable": {
  "data": {
   "shadows": "torch.autograd.Variable"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.attention.linear_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.augmented_lstm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.LSTM": {
  "data": {
   "shadows": "torch.nn.modules.rnn.LSTM"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM",
    "allennlp.tests.modules.augmented_lstm_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_augmented_lstm_computes_same_function_as_pytorch_lstm": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.augmented_lstm_test.numpy",
    "allennlp.tests.modules.augmented_lstm_test.torch",
    "augmented_lstm",
    "initializer",
    "pytorch_lstm",
    "torch.nn.modules.rnn.LSTM",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_augmented_lstm_is_initialized_with_correct_biases": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.tests.modules.augmented_lstm_test.numpy",
    "lstm",
    "lstm.state_linearity.bias.data.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_augmented_lstm_throws_error_on_non_packed_sequence_input": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.tests.modules.augmented_lstm_test.pytest",
    "allennlp.tests.modules.augmented_lstm_test.torch",
    "lstm"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_augmented_lstm_works_with_highway_connections": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.nn.util.sort_batch_by_length",
    "augmented_lstm",
    "torch.nn.utils.rnn.pack_padded_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_variable_length_sequences_return_correctly_padded_outputs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.augmented_lstm_test.numpy",
    "lstm",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.TestAugmentedLSTM.test_variable_length_sequences_run_backward_return_correctly_padded_outputs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.augmented_lstm_test.numpy",
    "lstm",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.augmented_lstm_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.augmented_lstm_test.torch.nn.init": {
  "data": {
   "shadows": "torch.nn.init"
  },
  "type": "import"
 },
 "allennlp.tests.modules.bimpm_matching_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.bimpm_matching_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.bimpm_matching_test.BiMpmMatching": {
  "data": {
   "shadows": "allennlp.modules.BiMpmMatching"
  },
  "type": "import"
 },
 "allennlp.tests.modules.bimpm_matching_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.bimpm_matching_test.TestBiMPMMatching": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.bimpm_matching_test.TestBiMPMMatching.test_forward": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.BiMpmMatching.from_params",
    "allennlp.tests.modules.bimpm_matching_test.torch",
    "ml_bw",
    "ml_bw.get_output_dim",
    "ml_fw",
    "ml_fw.get_output_dim"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.bimpm_matching_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.conditional_random_field_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.ConditionalRandomField": {
  "data": {
   "shadows": "allennlp.modules.ConditionalRandomField"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.score": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.ConditionalRandomField",
    "allennlp.tests.modules.conditional_random_field_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.test_allowed_transitions": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.conditional_random_field.allowed_transitions",
    "dict",
    "enumerate",
    "pytest.raises",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.test_constrained_viterbi_tags": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.modules.ConditionalRandomField",
    "allennlp.tests.modules.conditional_random_field_test.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.test_forward_works_with_mask": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.tests.modules.conditional_random_field_test.itertools",
    "allennlp.tests.modules.conditional_random_field_test.math",
    "allennlp.tests.modules.conditional_random_field_test.torch",
    "pytest.approx",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.test_forward_works_without_mask": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.tests.modules.conditional_random_field_test.itertools",
    "allennlp.tests.modules.conditional_random_field_test.math",
    "pytest.approx",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.TestConditionalRandomField.test_viterbi_tags": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.tests.modules.conditional_random_field_test.itertools",
    "allennlp.tests.modules.conditional_random_field_test.torch",
    "float",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.conditional_random_field_test.allowed_transitions": {
  "data": {
   "shadows": "allennlp.modules.conditional_random_field.allowed_transitions"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "allennlp.tests.modules.conditional_random_field_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.tests.modules.elmo_test.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.modules.elmo_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.Elmo": {
  "data": {
   "shadows": "allennlp.modules.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.ElmoTestCase": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.elmo_test.ElmoTestCase._load_sentences_embeddings": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.h5py",
    "allennlp.tests.modules.elmo_test.json",
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.os",
    "len",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.ElmoTestCase.get_vocab_and_both_elmo_indexed_ids": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer",
    "staticmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.ElmoTestCase.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.ElmoTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.ElmoTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.TestElmo": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.elmo_test.TestElmo._sentences_to_ids": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.setUp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "allennlp.tests.modules.elmo_test.TestElmo",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.test_elmo": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.test_elmo_4D_input": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.test_elmo_bilm_can_handle_higher_dimensional_input_with_cache": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.torch",
    "elmo_bilm",
    "elmo_bilm.eval",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.test_elmo_keep_sentence_boundaries": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "elmo",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmo.test_elmo_with_module": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "allennlp.modules.elmo._ElmoBiLm",
    "elmo",
    "elmo_bilm",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoBiLm": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.elmo_test.TestElmoBiLm.test_elmo_bilm": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.fields.TextField",
    "allennlp.data.iterators.BasicIterator",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo._ElmoBiLm",
    "allennlp.nn.util.remove_sentence_boundaries",
    "allennlp.tests.modules.elmo_test.numpy",
    "elmo_bilm",
    "enumerate",
    "iterator",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoBiLm.test_elmo_bilm_can_cache_char_cnn_embeddings": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.modules.elmo._ElmoBiLm",
    "allennlp.tests.modules.elmo_test.numpy",
    "elmo_bilm",
    "elmo_bilm.eval",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoBiLm.test_elmo_char_cnn_cache_does_not_raise_error_for_uncached_words": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.modules.elmo._ElmoBiLm",
    "elmo_bilm",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoRequiresGrad": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.elmo_test.TestElmoRequiresGrad._run_test": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "all",
    "allennlp.modules.token_embedders.ElmoTokenEmbedder",
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.torch",
    "embedder",
    "embedder.named_parameters"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoRequiresGrad.test_elmo_does_not_require_grad": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoRequiresGrad.test_elmo_requires_grad": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoTokenRepresentation": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "allennlp.tests.modules.elmo_test.ElmoTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.elmo_test.TestElmoTokenRepresentation.test_elmo_token_representation": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.nn.util.remove_sentence_boundaries",
    "allennlp.tests.modules.elmo_test.h5py",
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.os",
    "allennlp.tests.modules.elmo_test.torch",
    "elmo_token_embedder",
    "len",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TestElmoTokenRepresentation.test_elmo_token_representation_bos_eos": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.tests.modules.elmo_test.numpy",
    "allennlp.tests.modules.elmo_test.torch",
    "elmo_token_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.elmo_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test._ElmoBiLm": {
  "data": {
   "shadows": "allennlp.modules.elmo._ElmoBiLm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test._ElmoCharacterEncoder": {
  "data": {
   "shadows": "allennlp.modules.elmo._ElmoCharacterEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.remove_sentence_boundaries": {
  "data": {
   "shadows": "allennlp.nn.util.remove_sentence_boundaries"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.elmo_test.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.encoder_base_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.LSTM": {
  "data": {
   "shadows": "torch.nn.LSTM"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.RNN": {
  "data": {
   "shadows": "torch.nn.RNN"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base._EncoderBase",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.encoder_base_test.TestEncoderBase",
    "allennlp.tests.modules.encoder_base_test.torch",
    "super",
    "torch.nn.LSTM",
    "torch.nn.RNN"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase.test_get_initial_states": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.tests.modules.encoder_base_test.numpy",
    "allennlp.tests.modules.encoder_base_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase.test_non_contiguous_input_states_handled": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base._EncoderBase",
    "allennlp.tests.modules.encoder_base_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase.test_non_stateful_states_are_sorted_correctly": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base._EncoderBase",
    "allennlp.tests.modules.encoder_base_test.numpy",
    "allennlp.tests.modules.encoder_base_test.torch",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.encoder_base_test.TestEncoderBase.test_update_states": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.tests.modules.encoder_base_test.numpy",
    "allennlp.tests.modules.encoder_base_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.encoder_base_test._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.tests.modules.encoder_base_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.feedforward_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.TestFeedForward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.feedforward_test.TestFeedForward.test_forward_gives_correct_output": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.FeedForward.from_params",
    "allennlp.nn.InitializerApplicator",
    "allennlp.tests.modules.feedforward_test.torch",
    "feedforward",
    "initializer",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.feedforward_test.TestFeedForward.test_init_checks_activation_consistency": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.FeedForward",
    "allennlp.tests.modules.feedforward_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.feedforward_test.TestFeedForward.test_init_checks_hidden_dim_consistency": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.FeedForward",
    "allennlp.tests.modules.feedforward_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.feedforward_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.feedforward_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.highway_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.highway_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.highway_test.Highway": {
  "data": {
   "shadows": "allennlp.modules.Highway"
  },
  "type": "import"
 },
 "allennlp.tests.modules.highway_test.TestHighway": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.highway_test.TestHighway.test_forward_works_on_nd_input": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.Highway",
    "allennlp.tests.modules.highway_test.torch",
    "highway"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.highway_test.TestHighway.test_forward_works_on_simple_input": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.Highway",
    "allennlp.tests.modules.highway_test.torch",
    "highway",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.highway_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.highway_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.LstmCellWithProjection": {
  "data": {
   "shadows": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"
  },
  "type": "import"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.TestLstmCellWithProjection": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.TestLstmCellWithProjection.test_elmo_lstm_cell_completes_forward_pass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection",
    "allennlp.tests.modules.lstm_cell_with_projection_test.numpy",
    "allennlp.tests.modules.lstm_cell_with_projection_test.torch",
    "list",
    "lstm"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.lstm_cell_with_projection_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.masked_layer_norm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.masked_layer_norm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.masked_layer_norm_test.MaskedLayerNorm": {
  "data": {
   "shadows": "allennlp.modules.masked_layer_norm.MaskedLayerNorm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.masked_layer_norm_test.TestMaskedLayerNorm": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.masked_layer_norm_test.TestMaskedLayerNorm.test_masked_layer_norm": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.MaskedLayerNorm",
    "allennlp.tests.modules.masked_layer_norm_test.torch",
    "layer_norm",
    "numpy.allclose",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.random.rand",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.masked_layer_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.masked_layer_norm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.BilinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.BilinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.TestBilinearMatrixAttention": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.TestBilinearMatrixAttention.test_forward_does_a_bilinear_product": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.BilinearMatrixAttention.from_params",
    "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.torch",
    "bilinear",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.TestBilinearMatrixAttention.test_forward_does_a_bilinear_product_when_using_biases": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.BilinearMatrixAttention.from_params",
    "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.torch",
    "bilinear",
    "bilinear._bias",
    "bilinear._weight_matrix",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.bilinear_matrix_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.CosineMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.CosineMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.TestCosineMatrixAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.TestCosineMatrixAttention.test_can_init_cosine": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.CosineMatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.TestCosineMatrixAttention.test_cosine_similarity": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.CosineMatrixAttention",
    "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.numpy",
    "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.cosine_matrix_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.DotProductMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.DotProductMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.TestDotProductMatrixAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.TestDotProductMatrixAttention.test_can_init_dot": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.DotProductMatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.TestDotProductMatrixAttention.test_dot_product_similarity": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.DotProductMatrixAttention",
    "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.numpy",
    "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.dot_product_matrix_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.LegacyMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.TestLegacyMatrixAttention": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.TestLegacyMatrixAttention.test_can_build_from_params": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.from_params",
    "attention",
    "attention._similarity_function.__class__.__name__"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.TestLegacyMatrixAttention.test_forward_works_on_simple_input": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.legacy_matrix_attention.LegacyMatrixAttention",
    "allennlp.modules.similarity_functions.dot_product.DotProductSimilarity",
    "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.torch",
    "attention",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.legacy_matrix_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.LinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.LinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.TestLinearMatrixAttention": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.TestLinearMatrixAttention.test_bidaf_trilinear_similarity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.LinearMatrixAttention",
    "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.numpy",
    "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.TestLinearMatrixAttention.test_can_init_dot": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.matrix_attention.LinearMatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.TestLinearMatrixAttention.test_linear_similarity": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.LinearMatrixAttention",
    "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.numpy",
    "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.torch",
    "linear",
    "numpy.testing.assert_almost_equal",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.matrix_attention.linear_matrix_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.maxout_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.Maxout": {
  "data": {
   "shadows": "allennlp.modules.Maxout"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.TestMaxout": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.maxout_test.TestMaxout.test_forward_gives_correct_output": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.Maxout.from_params",
    "allennlp.nn.InitializerApplicator",
    "allennlp.tests.modules.maxout_test.torch",
    "initializer",
    "maxout",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.maxout_test.TestMaxout.test_init_checks_dropout_consistency": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.Maxout",
    "allennlp.tests.modules.maxout_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.maxout_test.TestMaxout.test_init_checks_output_dims_consistency": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.Maxout",
    "allennlp.tests.modules.maxout_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.maxout_test.TestMaxout.test_init_checks_pool_sizes_consistency": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.Maxout",
    "allennlp.tests.modules.maxout_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.maxout_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.maxout_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.pruner_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test.Pruner": {
  "data": {
   "shadows": "allennlp.modules.Pruner"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test.TestPruner": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.pruner_test.TestPruner.test_pruner_selects_top_scored_items_and_respects_masking": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.Pruner",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.pruner_test.numpy",
    "allennlp.tests.modules.pruner_test.torch",
    "pruner"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.pruner_test.TestPruner.test_scorer_raises_with_incorrect_scorer_spec": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.Pruner",
    "allennlp.tests.modules.pruner_test.pytest",
    "allennlp.tests.modules.pruner_test.torch",
    "pruner"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.pruner_test.TestPruner.test_scorer_works_for_completely_masked_rows": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.modules.Pruner",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.pruner_test.numpy",
    "allennlp.tests.modules.pruner_test.torch",
    "float",
    "pruner"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.pruner_test.batched_index_select": {
  "data": {
   "shadows": "allennlp.nn.util.batched_index_select"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.pruner_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.SampledSoftmaxLoss": {
  "data": {
   "shadows": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.TestSampledSoftmaxLoss": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.TestSampledSoftmaxLoss.test_choice": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "all",
    "allennlp.modules.sampled_softmax_loss._choice",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.TestSampledSoftmaxLoss.test_sampled_almost_equals_unsampled_when_num_samples_is_almost_all": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abs",
    "allennlp.models.bidirectional_lm._SoftmaxLoss",
    "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss",
    "allennlp.tests.modules.sampled_softmax_loss_test.pytest",
    "allennlp.tests.modules.sampled_softmax_loss_test.torch",
    "sampled_softmax",
    "unsampled_softmax"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.TestSampledSoftmaxLoss.test_sampled_softmax_can_run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss",
    "allennlp.tests.modules.sampled_softmax_loss_test.torch",
    "softmax"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test._SoftmaxLoss": {
  "data": {
   "shadows": "allennlp.models.bidirectional_lm._SoftmaxLoss"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test._choice": {
  "data": {
   "shadows": "allennlp.modules.sampled_softmax_loss._choice"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.sampled_softmax_loss_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.scalar_mix_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix.test_scalar_mix_can_run_forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.ScalarMix",
    "allennlp.tests.modules.scalar_mix_test.numpy",
    "allennlp.tests.modules.scalar_mix_test.torch",
    "mixture",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix.test_scalar_mix_layer_norm": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.modules.ScalarMix",
    "allennlp.tests.modules.scalar_mix_test.numpy",
    "allennlp.tests.modules.scalar_mix_test.torch",
    "mixture",
    "mixture.gamma.data",
    "mixture.scalar_parameters.data",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix.test_scalar_mix_throws_error_on_incorrect_initial_scalar_parameters_length": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.ScalarMix",
    "allennlp.tests.modules.scalar_mix_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix.test_scalar_mix_throws_error_on_incorrect_number_of_inputs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.ScalarMix",
    "allennlp.tests.modules.scalar_mix_test.pytest",
    "allennlp.tests.modules.scalar_mix_test.torch",
    "mixture",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.scalar_mix_test.TestScalarMix.test_scalar_mix_trainable_with_initial_scalar_parameters": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.modules.ScalarMix",
    "enumerate",
    "mixture",
    "mixture.scalar_parameters"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.scalar_mix_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.scalar_mix_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.TestSeq2SeqEncoder": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.TestSeq2SeqEncoder.test_from_params_builders_encoder_correctly": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.Seq2SeqEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.TestSeq2SeqEncoder.test_from_params_requires_batch_first": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.Seq2SeqEncoder.from_params",
    "allennlp.tests.modules.seq2seq_encoder_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoder_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.BidirectionalTransformerEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.TestBidirectionalTransformerEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.TestBidirectionalTransformerEncoder.test_attention_masks": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder",
    "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.torch",
    "transformer_encoder",
    "transformer_encoder.get_attention_masks"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.TestBidirectionalTransformerEncoder.test_bidirectional_transfomer_all_layers": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder",
    "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.torch",
    "len",
    "list",
    "transformer_encoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.TestBidirectionalTransformerEncoder.test_bidirectional_transformer_encoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.bidirectional_transformer_encoder.BidirectionalTransformerEncoder",
    "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.torch",
    "list",
    "transformer_encoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.bidirectional_transformer_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.GatedCnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.TestGatedCnnEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.TestGatedCnnEncoder.test_gated_cnn_encoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder",
    "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.torch",
    "cnn_encoder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.TestGatedCnnEncoder.test_gated_cnn_encoder_dilations": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder",
    "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.torch",
    "cnn_encoder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.TestGatedCnnEncoder.test_gated_cnn_encoder_layers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder",
    "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.torch",
    "cnn_encoder",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.gated_cnn_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.IntraSentenceAttentionEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.MultiHeadedSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.MultiHeadedSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.TestIntraSentenceAttentionEncoder": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.TestIntraSentenceAttentionEncoder.test_constructor_asserts_multi_head_consistency": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder",
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity",
    "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.TestIntraSentenceAttentionEncoder.test_forward_works_with_multi_headed_attention": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder",
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity",
    "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.torch",
    "encoder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.TestIntraSentenceAttentionEncoder.test_forward_works_with_simple_attention": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder",
    "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.torch",
    "encoder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.TestIntraSentenceAttentionEncoder.test_get_dimension_is_correct": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder",
    "allennlp.modules.seq2seq_encoders.IntraSentenceAttentionEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.intra_sentence_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.MultiHeadSelfAttention": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.MultiHeadSelfAttentionTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.MultiHeadSelfAttentionTest.test_multi_head_self_attention_can_build_from_params": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention",
    "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.MultiHeadSelfAttentionTest.test_multi_head_self_attention_respects_masking": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention",
    "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.torch",
    "attention"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.MultiHeadSelfAttentionTest.test_multi_head_self_attention_runs_forward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.MultiHeadSelfAttention",
    "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.torch",
    "attention",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.multi_head_self_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.PassThroughEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.PassThroughEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.TestStackedSelfAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.TestStackedSelfAttention.test_get_dimension_is_correct": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PassThroughEncoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.TestStackedSelfAttention.test_pass_through_encoder_passes_through": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PassThroughEncoder",
    "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.torch",
    "encoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pass_through_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.GRU": {
  "data": {
   "shadows": "torch.nn.GRU"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.LSTM": {
  "data": {
   "shadows": "torch.nn.LSTM"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.PytorchSeq2SeqWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_forward_does_not_compress_tensors_padded_to_greater_than_the_max_sequence_length": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_forward_pulls_out_correct_tensor_for_unsorted_batches": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_forward_pulls_out_correct_tensor_with_sequence_lengths": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_forward_pulls_out_correct_tensor_without_sequence_lengths": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_forward_works_even_with_empty_sequences": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_get_dimension_is_correct": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_wrapper_can_call_backward_with_zero_length_sequences": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_wrapper_raises_if_batch_first_is_false": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.pytest",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_wrapper_stateful": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "encoder._states",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "range",
    "torch.nn.LSTM",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_wrapper_stateful_single_state_gru": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.numpy",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "encoder._states",
    "numpy.testing.assert_almost_equal",
    "torch.nn.GRU"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.TestPytorchSeq2SeqWrapper.test_wrapper_works_when_passed_state_with_zero_length_sequences": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper",
    "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch",
    "encoder",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.pytorch_seq2seq_wrapper_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.StackedSelfAttentionEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.StackedSelfAttentionEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.TestStackedSelfAttention": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.TestStackedSelfAttention.test_get_dimension_is_correct": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.StackedSelfAttentionEncoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.TestStackedSelfAttention.test_stacked_self_attention_can_run_foward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.StackedSelfAttentionEncoder",
    "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.torch",
    "encoder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2seq_encoders.stacked_self_attention_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.TestSeq2VecEncoder": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.TestSeq2VecEncoder.test_from_params_builders_encoder_correctly": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.Seq2VecEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.TestSeq2VecEncoder.test_from_params_requires_batch_first": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.Seq2VecEncoder.from_params",
    "allennlp.tests.modules.seq2vec_encoder_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoder_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.BagOfEmbeddingsEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder.test_can_construct_from_params": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder.test_forward_does_correct_computation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.numpy",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.torch",
    "encoder",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder.test_forward_does_correct_computation_with_average": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.numpy",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.torch",
    "encoder",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder.test_forward_does_correct_computation_with_average_no_mask": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.numpy",
    "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.torch",
    "encoder",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.TestBagOfEmbeddingsEncoder.test_get_dimension_is_correct": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.boe_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.CnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.CnnEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.TestCnnEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.TestCnnEncoder.test_can_construct_from_params": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.seq2vec_encoders.CnnEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.TestCnnEncoder.test_forward_does_correct_computation": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.CnnEncoder",
    "allennlp.nn.InitializerApplicator",
    "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.numpy",
    "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.torch",
    "encoder",
    "initializer",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.TestCnnEncoder.test_forward_runs_with_larger_input": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.CnnEncoder",
    "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.torch",
    "encoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.TestCnnEncoder.test_get_dimension_is_correct": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.CnnEncoder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.CnnHighwayEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.TestCnnHighwayEncoder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.TestCnnHighwayEncoder.test_cnn_highway_encoder": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder",
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.torch",
    "encoder",
    "list",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.cnn_highway_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.LSTM": {
  "data": {
   "shadows": "torch.nn.LSTM"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.PytorchSeq2VecWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_forward_pulls_out_correct_tensor_with_sequence_lengths": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM",
    "torch.nn.utils.rnn.pack_padded_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_forward_pulls_out_correct_tensor_with_unsorted_batches": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM",
    "torch.nn.utils.rnn.pack_padded_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_forward_pulls_out_correct_tensor_without_sequence_lengths": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.torch",
    "encoder",
    "lstm",
    "numpy.testing.assert_almost_equal",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_forward_works_even_with_empty_sequences": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.torch",
    "encoder",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_get_dimensions_is_correct": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.TestPytorchSeq2VecWrapper.test_wrapper_raises_if_batch_first_is_false": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
    "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.pytest",
    "lstm",
    "torch.nn.LSTM"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.tests.modules.seq2vec_encoders.pytorch_seq2vec_wrapper_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.BilinearSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.BilinearSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.TestBilinearSimilarityFunction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.TestBilinearSimilarityFunction.test_can_construct_from_params": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.similarity_functions.BilinearSimilarity.from_params",
    "bilinear",
    "bilinear._weight_matrix.size",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.TestBilinearSimilarityFunction.test_forward_does_a_bilinear_product": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.BilinearSimilarity",
    "allennlp.tests.modules.similarity_functions.bilinear_test.torch",
    "bilinear",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.TestBilinearSimilarityFunction.test_forward_works_with_higher_order_tensors": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.BilinearSimilarity",
    "allennlp.tests.modules.similarity_functions.bilinear_test.numpy",
    "allennlp.tests.modules.similarity_functions.bilinear_test.torch",
    "bilinear",
    "bilinear._bias",
    "bilinear._weight_matrix",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.TestBilinearSimilarityFunction.test_weights_are_correct_sizes": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.BilinearSimilarity",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.bilinear_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.CosineSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.CosineSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.TestCosineSimilarityFunction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.TestCosineSimilarityFunction.test_can_construct_from_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.similarity_functions.CosineSimilarity.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.TestCosineSimilarityFunction.test_forward_does_a_cosine_similarity": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.CosineSimilarity",
    "allennlp.tests.modules.similarity_functions.cosine_test.numpy",
    "allennlp.tests.modules.similarity_functions.cosine_test.torch",
    "cosine_similarity",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.TestCosineSimilarityFunction.test_forward_works_with_higher_order_tensors": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.CosineSimilarity",
    "allennlp.tests.modules.similarity_functions.cosine_test.numpy",
    "allennlp.tests.modules.similarity_functions.cosine_test.torch",
    "cosine_similarity",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.cosine_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.DotProductSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.DotProductSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.TestDotProductSimilarityFunction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.TestDotProductSimilarityFunction.test_can_construct_from_params": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.similarity_functions.DotProductSimilarity.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.TestDotProductSimilarityFunction.test_forward_does_a_dot_product": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.DotProductSimilarity",
    "allennlp.tests.modules.similarity_functions.dot_product_test.numpy",
    "allennlp.tests.modules.similarity_functions.dot_product_test.torch",
    "dot_product"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.TestDotProductSimilarityFunction.test_forward_works_with_higher_order_tensors": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.DotProductSimilarity",
    "allennlp.tests.modules.similarity_functions.dot_product_test.numpy",
    "allennlp.tests.modules.similarity_functions.dot_product_test.torch",
    "dot_product",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.dot_product_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.LinearSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.LinearSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_can_construct_from_params": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.similarity_functions.LinearSimilarity.from_params",
    "linear",
    "linear._weight_vector.size",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_does_a_weighted_product": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_works_with_add_combinations": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_works_with_divide_combinations": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_works_with_higher_order_tensors": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.numpy",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_works_with_multiply_combinations": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_forward_works_with_subtract_combinations": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "allennlp.tests.modules.similarity_functions.linear_test.torch",
    "linear",
    "linear._bias",
    "linear._weight_vector",
    "numpy.testing.assert_almost_equal",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.TestLinearSimilarityFunction.test_weights_are_correct_sizes": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.LinearSimilarity",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.linear_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.MultiHeadedSimilarity": {
  "data": {
   "shadows": "allennlp.modules.similarity_functions.MultiHeadedSimilarity"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.TestMultiHeadedSimilarityFunction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.TestMultiHeadedSimilarityFunction.test_forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity",
    "allennlp.tests.modules.similarity_functions.multiheaded_test.torch",
    "numpy.testing.assert_almost_equal",
    "similarity",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.TestMultiHeadedSimilarityFunction.test_weights_are_correct_sizes": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity",
    "allennlp.modules.similarity_functions.MultiHeadedSimilarity.from_params",
    "allennlp.tests.modules.similarity_functions.multiheaded_test.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.similarity_functions.multiheaded_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.BidirectionalEndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor.test_bidirectional_endpoint_span_extractor_can_build_from_params": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor",
    "allennlp.modules.span_extractors.SpanExtractor.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor.test_correct_sequence_elements_are_embedded": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.torch",
    "extractor",
    "extractor._end_sentinel.data",
    "extractor._start_sentinel.data",
    "extractor.get_input_dim",
    "extractor.get_output_dim",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor.test_correct_sequence_elements_are_embedded_with_a_masked_sequence": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.torch",
    "extractor",
    "extractor._end_sentinel.data",
    "extractor._start_sentinel.data"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor.test_forward_raises_with_invalid_indices": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.pytest",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.torch",
    "extractor"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.TestBidirectonalEndpointSpanExtractor.test_raises_on_odd_input_dimension": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor",
    "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.batched_index_select": {
  "data": {
   "shadows": "allennlp.nn.util.batched_index_select"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.bidirectional_endpoint_span_extractor_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.EndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.EndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.TestEndpointSpanExtractor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.TestEndpointSpanExtractor.test_correct_sequence_elements_are_embedded": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.EndpointSpanExtractor",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.torch",
    "extractor",
    "extractor.get_input_dim",
    "extractor.get_output_dim",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.TestEndpointSpanExtractor.test_endpoint_span_extractor_can_build_from_params": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.span_extractors.EndpointSpanExtractor",
    "allennlp.modules.span_extractors.SpanExtractor.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.TestEndpointSpanExtractor.test_masked_indices_are_handled_correctly": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.EndpointSpanExtractor",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.torch",
    "extractor"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.TestEndpointSpanExtractor.test_masked_indices_are_handled_correctly_with_exclusive_indices": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.EndpointSpanExtractor",
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.torch",
    "extractor",
    "extractor._start_sentinel.data"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.batched_index_select": {
  "data": {
   "shadows": "allennlp.nn.util.batched_index_select"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.endpoint_span_extractor_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.SelfAttentiveSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.TestSelfAttentiveSpanExtractor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.TestSelfAttentiveSpanExtractor.test_attention_is_normalised_correctly": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor",
    "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.numpy",
    "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.torch",
    "extractor",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.TestSelfAttentiveSpanExtractor.test_locally_normalised_span_extractor_can_build_from_params": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor",
    "allennlp.modules.span_extractors.SpanExtractor.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.span_extractors.self_attentive_span_extractor_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.TestStackedAlternatingLstm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.TestStackedAlternatingLstm.test_lstms_are_interleaved": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "enumerate",
    "lstm",
    "lstm.lstm_layers"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.TestStackedAlternatingLstm.test_stacked_alternating_lstm_completes_forward_pass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "allennlp.tests.modules.stacked_alternating_lstm_test.numpy",
    "allennlp.tests.modules.stacked_alternating_lstm_test.torch",
    "lstm",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_alternating_lstm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.StackedBidirectionalLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.TestStackedBidirectionalLstm": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.TestStackedBidirectionalLstm.test_stacked_bidirectional_lstm_can_build_from_params": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.TestStackedBidirectionalLstm.test_stacked_bidirectional_lstm_completes_forward_pass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm",
    "allennlp.tests.modules.stacked_bidirectional_lstm_test.numpy",
    "allennlp.tests.modules.stacked_bidirectional_lstm_test.torch",
    "lstm",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_bidirectional_lstm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.ElmoLstm": {
  "data": {
   "shadows": "allennlp.modules.elmo_lstm.ElmoLstm"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.TestElmoLstmCell": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.TestElmoLstmCell.test_elmo_lstm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.elmo_lstm.ElmoLstm",
    "allennlp.tests.modules.stacked_elmo_lstm_test.numpy",
    "allennlp.tests.modules.stacked_elmo_lstm_test.torch",
    "list",
    "lstm",
    "lstm._states.size"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.stacked_elmo_lstm_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.BasicTextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder.from_params",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_forward_asserts_input_field_match": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_forward_concats_resultant_embeddings": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_forward_runs_with_non_bijective_mapping": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder.from_params",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.torch",
    "str",
    "token_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_forward_works_on_higher_order_input": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder.from_params",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.torch",
    "token_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_get_output_dim_aggregates_dimension_from_each_embedding": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.TestBasicTextFieldEmbedder.test_old_from_params_new_from_params": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allennlp.common.Params",
    "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder.from_params",
    "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.pytest",
    "new_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.text_field_embedders.basic_text_field_embedder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.time_distributed_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test.Embedding": {
  "data": {
   "shadows": "torch.nn.Embedding"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test.TestTimeDistributed": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.time_distributed_test.TestTimeDistributed.test_time_distributed_reshapes_correctly": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.TimeDistributed",
    "allennlp.tests.modules.time_distributed_test.torch",
    "distributed_embedding",
    "numpy.testing.assert_almost_equal",
    "torch.nn.Embedding",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.time_distributed_test.TestTimeDistributed.test_time_distributed_works_with_multiple_inputs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.modules.TimeDistributed",
    "allennlp.tests.modules.time_distributed_test.torch",
    "distributed",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.time_distributed_test.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.time_distributed_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.BertBasicWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.BertConfig": {
  "data": {
   "shadows": "pytorch_pretrained_bert.modeling.BertConfig"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.BertEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.BertModel": {
  "data": {
   "shadows": "pytorch_pretrained_bert.modeling.BertModel"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.PretrainedBertIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer",
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "pytorch_pretrained_bert.modeling.BertConfig",
    "pytorch_pretrained_bert.modeling.BertModel",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_end_to_end": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "list",
    "tlo_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_end_to_end_with_higher_order_inputs": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "list",
    "tlo_embedder"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_max_length": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "embedder",
    "len",
    "pytorch_pretrained_bert.modeling.BertConfig",
    "pytorch_pretrained_bert.modeling.BertModel"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_padding_for_equal_length_indices": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.BertBasicWordSplitter",
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_squad_with_unwordpieceable_passage": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance",
    "allennlp.data.token_indexers.wordpiece_indexer.PretrainedBertIndexer",
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.token_embedders.bert_token_embedder.BertEmbedder",
    "embedder",
    "len",
    "pytorch_pretrained_bert.modeling.BertConfig",
    "pytorch_pretrained_bert.modeling.BertModel"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_with_offsets": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.tests.modules.token_embedders.bert_embedder_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TestBertEmbedder.test_without_offsets": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.tests.modules.token_embedders.bert_embedder_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.make_reading_comprehension_instance": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.reading_comprehension.util.make_reading_comprehension_instance"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.bert_embedder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.ElmoTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.ElmoTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder.test_file_archiving": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params.from_file",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.filecmp",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.json",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.os",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.pathlib",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.tarfile",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder.test_forward_works_with_projection_layer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.modules.token_embedders.ElmoTokenEmbedder.from_params",
    "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.torch",
    "embedding_layer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder.test_tagger_with_elmo_token_embedder_can_train_save_and_load": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.TestElmoTokenEmbedder.test_tagger_with_elmo_token_embedder_forward_pass_runs_correctly": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.filecmp": {
  "data": {
   "shadows": "filecmp"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.elmo_token_embedder_test.train_model": {
  "data": {
   "shadows": "allennlp.commands.train.train_model"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.tests.modules.token_embedders.embedding_test.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.EmbeddingsTextFile": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_decode_embeddings_file_uri": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "allennlp.modules.token_embedders.embedding.parse_embeddings_file_uri",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_embedding_layer_actually_initializes_word_vectors_correctly": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.tests.modules.token_embedders.embedding_test.gzip",
    "allennlp.tests.modules.token_embedders.embedding_test.numpy",
    "embedding_layer",
    "embedding_layer.weight.data",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_embeddings_text_file": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "allennlp.tests.modules.token_embedders.embedding_test.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_embeddings_text_file_num_tokens": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "check_num_tokens",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_embeddings_text_file_num_tokens.check_num_tokens": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_forward_works_with_projection_layer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.tests.modules.token_embedders.embedding_test.torch",
    "embedding_layer",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_get_embedding_layer_initializes_unseen_words_randomly_not_zero": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.tests.modules.token_embedders.embedding_test.gzip",
    "allennlp.tests.modules.token_embedders.embedding_test.numpy",
    "embedding_layer",
    "embedding_layer.weight.data",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_get_embedding_layer_uses_correct_embedding_dim": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding._read_pretrained_embeddings_file",
    "allennlp.tests.modules.token_embedders.embedding_test.gzip",
    "allennlp.tests.modules.token_embedders.embedding_test.pytest",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_read_embedding_file_inside_archive": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri",
    "allennlp.tests.modules.token_embedders.embedding_test.pytest",
    "allennlp.tests.modules.token_embedders.embedding_test.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_read_hdf5_format_file": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.tests.modules.token_embedders.embedding_test.h5py",
    "allennlp.tests.modules.token_embedders.embedding_test.numpy",
    "embedding_layer",
    "embedding_layer.weight.data.numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.TestEmbedding.test_read_hdf5_raises_on_invalid_shape": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.embedding.Embedding.from_params",
    "allennlp.tests.modules.token_embedders.embedding_test.h5py",
    "allennlp.tests.modules.token_embedders.embedding_test.numpy",
    "allennlp.tests.modules.token_embedders.embedding_test.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test._read_pretrained_embeddings_file": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding._read_pretrained_embeddings_file"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.format_embeddings_file_uri": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.format_embeddings_file_uri"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.parse_embeddings_file_uri": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.parse_embeddings_file_uri"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.embedding_test.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.Batch": {
  "data": {
   "shadows": "allennlp.data.dataset.Batch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.OpenaiTransformer": {
  "data": {
   "shadows": "allennlp.modules.openai_transformer.OpenaiTransformer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.OpenaiTransformerBytePairIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.OpenaiTransformerEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.OpenaiTransformerEmbedder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenAiTransformerEmbedderCorrectWithFixture": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenAiTransformerEmbedderCorrectWithFixture.test_openai_transformer_matches_tensorflow": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.data.token_indexers.OpenaiTransformerBytePairIndexer",
    "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.modules.openai_transformer.OpenaiTransformer",
    "allennlp.nn.util.get_range_vector",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.h5py",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.numpy",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.spacy",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.torch",
    "enumerate",
    "len",
    "nlp",
    "open",
    "range",
    "transformer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderLarge": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderLarge.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderLarge.test_tagger_with_openai_token_embedder_can_train_save_and_load": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderLarge.test_tagger_with_openai_token_embedder_forward_pass_runs_correctly": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.testing.ModelTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall._get_training_tensors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.dataset.Batch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall.setUp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall.test_openai_can_run_with_no_offsets": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.token_embedders.OpenaiTransformerEmbedder.from_params",
    "embedder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall.test_openai_can_run_with_top_layer": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.modules.token_embedders.OpenaiTransformerEmbedder.from_params",
    "embedder",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall.test_tagger_with_openai_token_embedder_can_train_save_and_load": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.TestOpenaiTransformerEmbedderSmall.test_tagger_with_openai_token_embedder_forward_pass_runs_correctly": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.create_small_test_fixture": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.modules.openai_transformer.OpenaiTransformer",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.json",
    "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.pathlib",
    "enumerate",
    "open",
    "str",
    "transformer",
    "transformer.dump_weights"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.get_range_vector": {
  "data": {
   "shadows": "allennlp.nn.util.get_range_vector"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.text_standardize": {
  "data": {
   "shadows": "allennlp.data.token_indexers.openai_transformer_byte_pair_indexer.text_standardize"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.openai_transformer_embedder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TestTokenCharactersEncoder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TestTokenCharactersEncoder.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.data.Vocabulary",
    "allennlp.modules.Seq2VecEncoder.from_params",
    "allennlp.modules.token_embedders.Embedding.from_params",
    "allennlp.modules.token_embedders.TokenCharactersEncoder.from_params",
    "allennlp.nn.InitializerApplicator",
    "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TestTokenCharactersEncoder",
    "allennlp.tests.modules.token_embedders.token_characters_encoder_test.torch",
    "copy.deepcopy",
    "initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TestTokenCharactersEncoder.test_forward_applies_embedding_then_encoder": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.tests.modules.token_embedders.token_characters_encoder_test.numpy",
    "allennlp.tests.modules.token_embedders.token_characters_encoder_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TestTokenCharactersEncoder.test_get_output_dim_uses_encoder_output_dim": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.TokenCharactersEncoder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.TokenCharactersEncoder"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.modules.token_embedders.token_characters_encoder_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.nn.beam_search_test": {
  "data": {
   "symbols_in_volume": [
    "allennlp.tests.nn.beam_search_test.torch"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.nn.beam_search_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearch": {
  "data": {
   "shadows": "allennlp.nn.beam_search.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest._check_results": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch",
    "allennlp.tests.nn.beam_search_test.take_step",
    "allennlp.tests.nn.beam_search_test.torch",
    "int",
    "list",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.setUp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch",
    "allennlp.tests.nn.beam_search_test.BeamSearchTest",
    "allennlp.tests.nn.beam_search_test.transition_probabilities",
    "numpy.array",
    "numpy.log",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_batch_size_of_one": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_catch_bad_config": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.beam_search.BeamSearch",
    "allennlp.tests.nn.beam_search_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_different_per_node_beam_size": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_early_stopping": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch",
    "numpy.array",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_finished_state": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.tests.nn.beam_search_test.torch",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_greedy_search": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.BeamSearch",
    "numpy.array",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.BeamSearchTest.test_search": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.take_step": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.tests.nn.beam_search_test.torch",
    "allennlp.tests.nn.beam_search_test.transition_probabilities",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.beam_search_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.beam_search_test.transition_probabilities": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.ChuLiuEdmondsTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.ChuLiuEdmondsTest.test_find_cycle": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.nn.chu_liu_edmonds._find_cycle",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.ChuLiuEdmondsTest.test_mst": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.chu_liu_edmonds._find_cycle",
    "allennlp.nn.chu_liu_edmonds.decode_mst",
    "allennlp.tests.nn.chu_liu_edmonds_test.numpy",
    "allennlp.tests.nn.chu_liu_edmonds_test.pytest",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.ChuLiuEdmondsTest.test_mst_finds_maximum_spanning_tree": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.nn.chu_liu_edmonds.decode_mst",
    "allennlp.tests.nn.chu_liu_edmonds_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test._find_cycle": {
  "data": {
   "shadows": "allennlp.nn.chu_liu_edmonds._find_cycle"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.decode_mst": {
  "data": {
   "shadows": "allennlp.nn.chu_liu_edmonds.decode_mst"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.nn.chu_liu_edmonds_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.nn.initializers_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.Initializer": {
  "data": {
   "shadows": "allennlp.nn.Initializer"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.TestInitializers",
    "allennlp.tests.nn.initializers_test.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.tearDown": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.TestInitializers",
    "allennlp.tests.nn.initializers_test.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_block_orthogonal_can_initialize": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal",
    "allennlp.tests.nn.initializers_test.torch",
    "test_block_is_orthogonal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_block_orthogonal_can_initialize.test_block_is_orthogonal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_block_orthogonal_raises_on_mismatching_dimensions": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.initializers.block_orthogonal",
    "allennlp.tests.nn.initializers_test.pytest",
    "allennlp.tests.nn.initializers_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_from_params_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.nn.Initializer.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_match_prevention_prevents_and_overrides": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Net",
    "allennlp.common.params.Params",
    "allennlp.nn.InitializerApplicator.from_params",
    "allennlp.tests.nn.initializers_test._jsonnet",
    "allennlp.tests.nn.initializers_test.json",
    "allennlp.tests.nn.initializers_test.torch",
    "initializers"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_match_prevention_prevents_and_overrides.Net": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_match_prevention_prevents_and_overrides.Net.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Net",
    "allennlp.tests.nn.initializers_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_match_prevention_prevents_and_overrides.Net.forward": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_matches_are_initialized_correctly": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Net",
    "allennlp.common.params.Params",
    "allennlp.nn.InitializerApplicator.from_params",
    "allennlp.tests.nn.initializers_test._jsonnet",
    "allennlp.tests.nn.initializers_test.json",
    "allennlp.tests.nn.initializers_test.torch",
    "initializers"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_matches_are_initialized_correctly.Net": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_matches_are_initialized_correctly.Net.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.tests.nn.initializers_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_regex_matches_are_initialized_correctly.Net.forward": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test.TestInitializers.test_uniform_unit_scaling_can_initialize": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.nn.initializers.uniform_unit_scaling",
    "allennlp.tests.nn.initializers_test.math",
    "allennlp.tests.nn.initializers_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.initializers_test._jsonnet": {
  "data": {
   "shadows": "_jsonnet"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.initializers_test.uniform_unit_scaling": {
  "data": {
   "shadows": "allennlp.nn.initializers.uniform_unit_scaling"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.nn.regularizers_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.L1Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.L1Regularizer"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.L2Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.L2Regularizer"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.TestRegularizers": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.regularizers_test.TestRegularizers.test_from_params": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.nn.regularizers.L1Regularizer",
    "allennlp.nn.regularizers.L2Regularizer",
    "allennlp.nn.regularizers.RegularizerApplicator.from_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.regularizers_test.TestRegularizers.test_l1_regularization": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.regularizers.L1Regularizer",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "allennlp.tests.nn.regularizers_test.torch",
    "initializer",
    "torch.nn.init.constant_"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.regularizers_test.TestRegularizers.test_l2_regularization": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.regularizers.L2Regularizer",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "allennlp.tests.nn.regularizers_test.torch",
    "initializer",
    "torch.nn.init.constant_"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.regularizers_test.TestRegularizers.test_regularizer_applicator_respects_regex_matching": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.nn.InitializerApplicator",
    "allennlp.nn.regularizers.L1Regularizer",
    "allennlp.nn.regularizers.L2Regularizer",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "allennlp.tests.nn.regularizers_test.torch",
    "initializer",
    "torch.nn.init.constant_"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.regularizers_test.constant_": {
  "data": {
   "shadows": "torch.nn.init.constant_"
  },
  "type": "import"
 },
 "allennlp.tests.nn.regularizers_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.nn.util_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.TestNnUtil": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_add_positional_features": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "allennlp.nn.util.add_positional_features",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_add_sentence_boundary_token_ids_handles_2D_input": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_add_sentence_boundary_token_ids_handles_3D_input": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_batched_index_select": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "allennlp.nn.util.batched_index_select",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_bucket_values": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "allennlp.nn.util.bucket_values",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_combine_initial_dims": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "allennlp.nn.util.combine_initial_dims",
    "allennlp.tests.nn.util_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_combine_tensors_and_multiply": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.util.combine_tensors_and_multiply",
    "allennlp.tests.nn.util_test.pytest",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_combine_tensors_and_multiply_with_batch_size_one": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "allennlp.nn.util.combine_tensors_and_multiply",
    "allennlp.nn.util.get_combined_dim",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_combine_tensors_and_multiply_with_batch_size_one_and_seq_len_one": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "allennlp.nn.util.combine_tensors_and_multiply",
    "allennlp.nn.util.get_combined_dim",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_combine_tensors_and_multiply_with_same_batch_size_and_embedding_dim": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "allennlp.nn.util.combine_tensors_and_multiply",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_flatten_and_batch_shift_indices": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "allennlp.nn.util.flatten_and_batch_shift_indices",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_flattened_index_select": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.util.flattened_index_select",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.pytest",
    "allennlp.tests.nn.util_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_final_encoder_states": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.nn.util.get_final_encoder_states",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_mask_from_sequence_lengths": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.nn.util.get_mask_from_sequence_lengths",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_sequence_lengths_converts_to_long_tensor_and_avoids_variable_overflow": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_sequence_lengths_from_binary_mask": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_text_field_mask_returns_a_correct_mask": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_text_field_mask_returns_a_correct_mask_character_only_input": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_text_field_mask_returns_a_correct_mask_list_field": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_get_text_field_mask_returns_mask_key": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_has_tensor": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "allennlp.nn.util.has_tensor",
    "allennlp.tests.nn.util_test.torch",
    "has_tensor"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_logsumexp": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "allennlp.nn.util.logsumexp",
    "allennlp.tests.nn.util_test.torch",
    "float",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_masked_log_softmax_masked": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_log_softmax",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_masked_max": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_max",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_masked_mean": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_mean",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_masked_softmax_masked": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_softmax",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_masked_softmax_no_mask": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.nn.util.masked_softmax",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_remove_sentence_boundaries": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "allennlp.nn.util.remove_sentence_boundaries",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_replace_masked_values_replaces_masked_values_with_finite_value": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "allennlp.nn.util.replace_masked_values",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_sequence_cross_entropy_with_logits_averages_batch_correctly": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_sequence_cross_entropy_with_logits_averages_token_correctly": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_sequence_cross_entropy_with_logits_masks_loss_correctly": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_sequence_cross_entropy_with_logits_smooths_labels_correctly": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_sort_tensor_by_length": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.nn.util.sort_batch_by_length",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_uncombine_initial_dims": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "allennlp.nn.util.uncombine_initial_dims",
    "allennlp.tests.nn.util_test.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_viterbi_decode": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "allennlp.nn.util.viterbi_decode",
    "allennlp.tests.nn.util_test.torch",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_weighted_sum_handles_3d_attention_with_3d_matrix": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "allennlp.nn.util.weighted_sum",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_weighted_sum_handles_higher_order_input": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "allennlp.nn.util.weighted_sum",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_weighted_sum_handles_uneven_higher_order_input": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "allennlp.nn.util.weighted_sum",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.TestNnUtil.test_weighted_sum_works_on_simple_input": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "allennlp.nn.util.weighted_sum",
    "allennlp.tests.nn.util_test.numpy",
    "allennlp.tests.nn.util_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.nn.util_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.nn.util_test.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "print"
   ]
  },
  "type": "module"
 },
 "allennlp.tests.notebooks_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test.CellExecutionError": {
  "data": {
   "shadows": "nbconvert.preprocessors.execute.CellExecutionError"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test.ExecutePreprocessor": {
  "data": {
   "shadows": "nbconvert.preprocessors.ExecutePreprocessor"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test.TestNotebooks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.notebooks_test.TestNotebooks.execute_notebook": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.tests.notebooks_test.nbformat",
    "allennlp.tests.notebooks_test.os",
    "nbconvert.preprocessors.ExecutePreprocessor",
    "nbconvert.preprocessors.execute.CellExecutionError",
    "open",
    "print",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.notebooks_test.TestNotebooks.test_data_pipeline_tutorial": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.tests.notebooks_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.notebooks_test.TestNotebooks.test_embedding_tokens_tutorial": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.tests.notebooks_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.notebooks_test.TestNotebooks.test_vocabulary_tutorial": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.tests.notebooks_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.notebooks_test.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.notebooks_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.predictors": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.atis_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.atis_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.atis_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.atis_parser_test.TestAtisParserPredictor": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.atis_parser_test.TestAtisParserPredictor.test_atis_parser_batch_predicted_sql_present": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.atis_parser_test.TestAtisParserPredictor.test_atis_parser_predicted_sql_present": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.atis_parser_test.TestAtisParserPredictor.test_atis_parser_uses_named_inputs": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.atis_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.TestBiaffineDependencyParser": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.TestBiaffineDependencyParser.test_batch_prediction": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.TestBiaffineDependencyParser.test_predictor_uses_dataset_reader_to_determine_pos_set": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.TestBiaffineDependencyParser.test_uses_named_inputs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.biaffine_dependency_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.bidaf_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.bidaf_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.bidaf_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.bidaf_test.TestBidafPredictor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.bidaf_test.TestBidafPredictor.test_batch_prediction": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "pytest.approx",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.bidaf_test.TestBidafPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "pytest.approx",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.bidaf_test.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.bidaf_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.constituency_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test.LINK_TO_LABEL": {
  "data": {
   "shadows": "allennlp.predictors.constituency_parser.LINK_TO_LABEL"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test.NODE_TYPE_TO_STYLE": {
  "data": {
   "shadows": "allennlp.predictors.constituency_parser.NODE_TYPE_TO_STYLE"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test.TestConstituencyParserPredictor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.constituency_parser_test.TestConstituencyParserPredictor.test_batch_prediction": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.constituency_parser_test.TestConstituencyParserPredictor.test_build_hierplane_tree": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.predictors.constituency_parser.LINK_TO_LABEL",
    "allennlp.predictors.constituency_parser.NODE_TYPE_TO_STYLE",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.constituency_parser_test.TestConstituencyParserPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.constituency_parser_test.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.constituency_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.coref_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.coref_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.coref_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.coref_test.TestCorefPredictor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.coref_test.TestCorefPredictor.assert_predict_result": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.coref_test.TestCorefPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.coref_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.decomposable_attention_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.decomposable_attention_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.decomposable_attention_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.decomposable_attention_test.TestDecomposableAttentionPredictor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.decomposable_attention_test.TestDecomposableAttentionPredictor.test_batch_prediction": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.tests.predictors.decomposable_attention_test.math",
    "float",
    "isinstance",
    "len",
    "list",
    "print",
    "pytest.approx",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.decomposable_attention_test.TestDecomposableAttentionPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.tests.predictors.decomposable_attention_test.math",
    "float",
    "isinstance",
    "len",
    "list",
    "pytest.approx",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.decomposable_attention_test.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.decomposable_attention_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.decomposable_attention_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.dialog_qa_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.dialog_qa_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.dialog_qa_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.dialog_qa_test.TestDialogQAPredictor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.dialog_qa_test.TestDialogQAPredictor.test_batch_prediction": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.dialog_qa_test.TestDialogQAPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.dialog_qa_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.event2mind_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.event2mind_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.event2mind_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.event2mind_test.TestEvent2MindPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.event2mind_test.TestEvent2MindPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.event2mind_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.nlvr_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.nlvr_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.nlvr_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.nlvr_parser_test.TestNlvrParserPredictor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.nlvr_parser_test.TestNlvrParserPredictor.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.nlvr_parser_test.TestNlvrParserPredictor.test_predictor_with_coverage_parser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.tests.predictors.nlvr_parser_test.os",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.nlvr_parser_test.TestNlvrParserPredictor.test_predictor_with_direct_parser": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "allennlp.tests.predictors.nlvr_parser_test.os",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.nlvr_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.nlvr_parser_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.open_information_extraction_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.TestOpenIePredictor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.open_information_extraction_test.TestOpenIePredictor.test_more_than_two_overlapping_predicates": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.predictors.open_information_extraction.consolidate_predictions",
    "allennlp.predictors.open_information_extraction.get_predicate_text",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.open_information_extraction_test.TestOpenIePredictor.test_predicate_consolidation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "allennlp.predictors.open_information_extraction.consolidate_predictions",
    "allennlp.predictors.open_information_extraction.get_predicate_text",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.open_information_extraction_test.TestOpenIePredictor.test_prediction_with_no_verbs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.open_information_extraction_test.TestOpenIePredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.open_information_extraction_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.consolidate_predictions": {
  "data": {
   "shadows": "allennlp.predictors.open_information_extraction.consolidate_predictions"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.get_predicate_text": {
  "data": {
   "shadows": "allennlp.predictors.open_information_extraction.get_predicate_text"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.open_information_extraction_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.predictor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.predictor_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.predictor_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.predictor_test.TestPredictor": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.predictor_test.TestPredictor.test_from_archive_does_not_consume_params": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.predictor_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.quarel_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.quarel_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.quarel_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.quarel_parser_test.TestQuarelParserPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.quarel_parser_test.TestQuarelParserPredictor.test_answer_present": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.quarel_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.simple_seq2seq_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.simple_seq2seq_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.simple_seq2seq_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.simple_seq2seq_test.TestSimpleSeq2SeqPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.simple_seq2seq_test.TestSimpleSeq2SeqPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.simple_seq2seq_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.srl_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.srl_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.srl_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.srl_test.TestSrlPredictor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.srl_test.TestSrlPredictor.assert_predict_result": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "all",
    "any",
    "isinstance",
    "len",
    "list",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.srl_test.TestSrlPredictor.test_batch_prediction": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.srl_test.TestSrlPredictor.test_prediction_with_no_verbs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.srl_test.TestSrlPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.srl_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.predictors.wikitables_parser_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "shadows": "allennlp.predictors.wikitables_parser.SEMPRE_ABBREVIATIONS_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "shadows": "allennlp.predictors.wikitables_parser.SEMPRE_GRAMMAR_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.tests.predictors.wikitables_parser_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.predictors.wikitables_parser.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.predictors.wikitables_parser.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.predictors.wikitables_parser_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor.tearDown": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.predictors.wikitables_parser.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.predictors.wikitables_parser.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.predictors.wikitables_parser_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor.test_answer_present": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor.test_answer_present_with_batch_predict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.wikitables_parser_test.TestWikiTablesParserPredictor.test_uses_named_inputs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "all",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.predictors.wikitables_parser_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.predictors.wikitables_parser_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.semparse": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.action_space_walker_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalker": {
  "data": {
   "shadows": "allennlp.semparse.ActionSpaceWalker"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.semparse.ActionSpaceWalker",
    "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest",
    "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest.test_get_all_logical_forms": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest.test_get_logical_forms_with_agenda": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest.test_get_logical_forms_with_agenda_ignores_null_set_item": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.ActionSpaceWalkerTest.test_get_logical_forms_with_empty_agenda_returns_all_logical_forms": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.World"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions.get_basic_types": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "overrides.overrides",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions.get_valid_actions": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions.get_valid_starting_types": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nltk.sem.logic.TRUTH_TYPE",
    "overrides.overrides",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.FakeWorldWithAssertions.is_terminal": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.action_space_walker_test.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.action_space_walker_test.TRUTH_TYPE": {
  "data": {
   "shadows": "nltk.sem.logic.TRUTH_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.action_space_walker_test.World": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.World"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.action_space_walker_test.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.SpacyWordSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_date_column_type_extraction_1": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_date_column_type_extraction_2": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_date_extraction": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_date_extraction_2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_get_knowledge_graph": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_knowledge_graph_has_correct_neighbors": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_multiword_entity_extraction": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_null_extraction": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_number_and_entity_extraction": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_number_extraction": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_numerical_column_type_extraction": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_rank_number_extraction": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_string_column_types_extraction": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.TestTableQuestionContext.test_table_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_context_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_cell_parts_handles_multiple_splits": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_cell_parts",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_cell_parts_on_past_failure_cases": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_cell_parts",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_cell_parts_returns_cell_text_on_simple_cells": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_cell_parts"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_cell_parts_splits_on_commas": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_cell_parts",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_linked_agenda_items": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_longest_span_matching_entities": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_numbers_from_tokens_works_for_arabic_numerals": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_numbers_from_tokens"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_numbers_from_tokens_works_for_months": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_numbers_from_tokens"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_numbers_from_tokens_works_for_ordinal_and_cardinal_numbers": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_numbers_from_tokens"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_numbers_from_tokens_works_for_units": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_numbers_from_tokens"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_get_numbers_from_tokens_works_with_magnitude_words": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._get_numbers_from_tokens"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_cells_with_duplicate_normalizations": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_columns_with_duplicate_normalizations": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_crazy_unicode": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_diacritics": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_diacritics_and_newlines": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_newlines_in_columns": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_numbers_in_question": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_parentheses_correctly": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_handles_simple_cases": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_replaces_newlines": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_read_from_json_splits_columns_when_necessary": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.data.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_should_split_column_returns_false_when_all_text_is_simple": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._should_split_column_cells"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.TestTableQuestionKnowledgeGraph.test_should_split_column_returns_true_when_one_input_is_splitable": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph._should_split_column_cells"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.contexts.table_question_knowledge_graph_test.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.Box": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_box.Box"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.ExecutionError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ExecutionError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.NlvrExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.NlvrExecutor"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.semparse.executors.NlvrExecutor",
    "allennlp.semparse.worlds.nlvr_box.Box",
    "allennlp.tests.semparse.executors.nlvr_executor_test.json",
    "enumerate",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_count_with_all_equals_throws_execution_error": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_assert_executes_correctly": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_box_filter_executes_correctly": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_box_filter_within_object_filter_executes_correctly": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_color_comparison_executes_correctly": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_not_executes_correctly": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_same_color_executes_correctly": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_same_shape_executes_correctly": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_logical_form_with_touch_wall_executes_correctly": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_same_and_different_execute_correctly": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_shape_with_equals_throws_execution_error": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_spatial_relations_return_objects_in_the_same_box": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_spatial_relations_with_objects_from_different_boxes": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.TestNlvrExecutor.test_touch_object_executes_correctly": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.nlvr_executor_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.sql_executor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.executors.sql_executor_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.sql_executor_test.SqlExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.SqlExecutor"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.sql_executor_test.SqlExecutorTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.executors.sql_executor_test.SqlExecutorTest.setUp": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.sql_executor_test.SqlExecutorTest.test_sql_accuracy_is_scored_correctly": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.semparse.executors.SqlExecutor"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.SEMPRE_ABBREVIATIONS_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.SEMPRE_GRAMMAR_PATH": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.WikiTablesSempreExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.WikiTablesSempreExecutor"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.WikiTablesSempreExecutorTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase",
    "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.pytest"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.WikiTablesSempreExecutorTest.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.WikiTablesSempreExecutorTest.tearDown": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_ABBREVIATIONS_PATH",
    "allennlp.semparse.executors.wikitables_sempre_executor.SEMPRE_GRAMMAR_PATH",
    "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.WikiTablesSempreExecutorTest.test_accuracy_is_scored_correctly": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.semparse.executors.WikiTablesSempreExecutor",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_sempre_executor_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.Date": {
  "data": {
   "shadows": "allennlp.semparse.executors.wikitables_variable_free_executor.Date"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.ExecutionError": {
  "data": {
   "shadows": "allennlp.semparse.worlds.world.ExecutionError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.semparse.executors.WikiTablesVariableFreeExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_date_comparison_works": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "allennlp.semparse.executors.wikitables_variable_free_executor.Date"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_evaluate_logical_form": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_evaluate_logical_form_with_invalid_logical_form": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_fails_with_diff_on_non_numerical_columns": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_fails_with_non_int_dates": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_fails_with_unknown_function": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_logs_warning_with_first_on_empty_list": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_logs_warning_with_last_on_empty_list": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_logs_warning_with_next_on_empty_list": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_logs_warning_with_previous_on_empty_list": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_argmax": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_argmax_on_dates": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_argmin": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_argmin_on_dates": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_average": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_diff": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_equals": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_greater": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_greater_equals": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_lesser": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_lesser_equals": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_date_not_equals": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_in": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_not_in": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_equals": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_greater": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_greater_equals": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_lesser": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_lesser_equals": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_filter_number_not_equals": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.world.ExecutionError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_first": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_last": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_mode": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_next": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_previous": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_same_as": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_select": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_execute_works_with_sum": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.TestWikiTablesVariableFreeExecutor.test_number_comparison_works": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.WordTokenizer",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.executors.WikiTablesVariableFreeExecutor"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.WikiTablesVariableFreeExecutor": {
  "data": {
   "shadows": "allennlp.semparse.executors.WikiTablesVariableFreeExecutor"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.executors.wikitables_variable_free_executor_test.WordTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.WordTokenizer"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.ANY_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.BinaryOpType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.BinaryOpType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.CELL_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.NamedBasicType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.ROW_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_basic_types_conflict_on_names": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_binary_ops_resolve_correctly": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.BinaryOpType",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_get_valid_actions": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_get_valid_actions_with_any_type": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_get_valid_actions_with_placeholder_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.NamedBasicType",
    "allennlp.semparse.type_declarations.type_declaration.UnaryOpType",
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_get_valid_actions_with_reverse": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.BASIC_TYPES",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_NAME_MAPPING",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COMMON_TYPE_SIGNATURE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.TestTypeDeclaration.test_unary_ops_resolve_correctly": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.type_declaration.UnaryOpType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.UnaryOpType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.UnaryOpType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.type_declaration_test.wt_types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ANY_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ARG_EXTREME_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ARG_EXTREME_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ArgExtremeType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.CELL_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.CONJUNCTION_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CONJUNCTION_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.COUNT_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COUNT_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ComplexType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.ComplexType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.CountType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.REVERSE_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.REVERSE_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ROW_TYPE": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.ReverseType": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.WikiTablesTypeDeclarationTest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.WikiTablesTypeDeclarationTest.test_arg_extreme_type_resolves_correctly": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ARG_EXTREME_TYPE.resolve",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ArgExtremeType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.WikiTablesTypeDeclarationTest.test_conjunction_maps_to_correct_actions": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.get_valid_actions",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CONJUNCTION_TYPE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.WikiTablesTypeDeclarationTest.test_count_type_resolves_correctly": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.COUNT_TYPE.resolve",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CountType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.WikiTablesTypeDeclarationTest.test_reverse_resolves_correctly": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.type_declaration.ANY_TYPE",
    "allennlp.semparse.type_declarations.type_declaration.ComplexType",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.CELL_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.REVERSE_TYPE.resolve",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ROW_TYPE",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.ReverseType"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.type_declarations.wikitables_lambda_dcs_test.base_types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.util_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.util_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.util_test.TestSemparseUtil": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.util_test.TestSemparseUtil.test_lisp_to_nested_expression": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.semparse.util.lisp_to_nested_expression"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.util_test.util": {
  "data": {
   "shadows": "allennlp.semparse.util"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.atis_world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.AtisWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.atis_world.AtisWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.Sequence": {
  "data": {
   "shadows": "parsimonious.expressions.Sequence"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_from_json": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "allennlp.tests.semparse.worlds.atis_world_test.json",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_global_actions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_helper_methods": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "datetime.datetime",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_local_actions": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_long_action_sequence": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_atis_simple_action_sequence": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.atis_world.AtisWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.TestAtisWorld.test_time_extraction": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "get_approximate_times",
    "pm_map_match_to_query_value"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.atis_world_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.nlvr_world.NlvrWorld",
    "allennlp.tests.semparse.worlds.nlvr_world_test.json",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.test_get_action_sequence_removes_currying_for_all_nlvr_functions": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.test_get_agenda_for_sentence": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.test_get_agenda_for_sentence_correctly_adds_object_filters": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.test_logical_form_with_box_filter_returns_correct_action_sequence": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.TestNlvrWorld.test_logical_form_with_object_filter_returns_correct_action_sequence": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.nlvr_world_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.Grammar": {
  "data": {
   "shadows": "parsimonious.Grammar"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.ParseError": {
  "data": {
   "shadows": "parsimonious.ParseError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.SqlVisitor": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.SqlVisitor"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_grammar_from_world_can_parse_statements": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.SqlVisitor",
    "allennlp.semparse.contexts.sql_context_utils.format_grammar_string",
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld",
    "parsimonious.Grammar"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_grammar_from_world_can_produce_entities_as_values": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_untyped_grammar_has_no_string_or_number_references": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "all",
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_variable_free_world_cannot_parse_as_statements": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.semparse.contexts.sql_context_utils.SqlVisitor",
    "allennlp.semparse.contexts.sql_context_utils.format_grammar_string",
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld",
    "parsimonious.Grammar",
    "parsimonious.ParseError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_world_adds_values_from_tables": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld",
    "allennlp.tests.semparse.worlds.text2sql_world_test.sqlite3"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_world_identifies_non_global_rules": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_world_modifies_grammar_with_global_values_for_dataset": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.TestText2SqlWorld.test_world_modifies_unconstrained_grammar_correctly": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.Text2SqlWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.text2sql_world.Text2SqlWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.format_grammar_string": {
  "data": {
   "shadows": "allennlp.semparse.contexts.sql_context_utils.format_grammar_string"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.text2sql_world_test.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.ParsingError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TableQuestionContext": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionContext"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld._get_alias": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld._get_world_with_question_tokens": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_get_agenda": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_get_valid_actions_in_world_without_comparable_columns": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_get_valid_actions_in_world_without_date_columns": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
    "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.check_productions_match",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_get_valid_actions_in_world_without_number_columns": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionContext.read_from_file",
    "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
    "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.check_productions_match",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_get_valid_actions_returns_correct_set": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.check_productions_match",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_parsing_logical_form_with_string_not_in_question_fails": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_world_gets_correct_actions": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_world_gets_logical_form_from_actions": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_world_processes_logical_forms_correctly": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free",
    "f",
    "functools.partial",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_world_processes_logical_forms_with_date_correctly": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_variable_free",
    "f",
    "functools.partial",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.TestWikiTablesVariableFreeWorld.test_world_processes_logical_forms_with_number_correctly": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.type_declarations.wikitables_variable_free",
    "f",
    "functools.partial",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.WikiTablesVariableFreeWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesVariableFreeWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.check_productions_match": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_variable_free_world_test.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_variable_free"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.ParsingError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld._get_world_with_question_tokens": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.setUp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_get_action_sequence_removes_currying_for_all_wikitables_functions": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_get_agenda": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_get_valid_actions_returns_correct_set": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.tests.semparse.worlds.wikitables_world_test.check_productions_match",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_parsing_logical_forms_fails_with_unmapped_names": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError",
    "allennlp.tests.semparse.worlds.wikitables_world_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_with_deeply_nested_logical_form": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.tests.semparse.worlds.wikitables_world_test.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_adds_numbers_from_question": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.worlds.WikiTablesWorld"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_has_only_basic_numbers": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_parses_logical_forms_with_dates": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.name_mapper.get_alias",
    "f",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_parses_logical_forms_with_decimals": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.name_mapper.get_alias",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "f",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_processes_sempre_forms_correctly": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "allennlp.semparse.type_declarations.wikitables_lambda_dcs.name_mapper.get_alias",
    "f",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_returns_correct_actions_with_lambda_with_var": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_returns_correct_actions_with_lambda_without_var": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_returns_correct_actions_with_reverse": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.TestWikiTablesWorld.test_world_returns_correct_actions_with_two_reverses": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.check_productions_match": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.wikitables_world_test.types": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.wikitables_lambda_dcs"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.semparse.worlds.world_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.FakeWorldWithRecursion": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.tests.semparse.worlds.world_test.FakeWorldWithoutRecursion"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.world_test.FakeWorldWithRecursion.all_possible_actions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.tests.semparse.worlds.world_test.FakeWorldWithRecursion",
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.FakeWorldWithoutRecursion": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.semparse.World"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.world_test.FakeWorldWithoutRecursion.all_possible_actions": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.NlvrWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.NlvrWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.ParsingError": {
  "data": {
   "shadows": "allennlp.semparse.ParsingError"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.TableQuestionKnowledgeGraph": {
  "data": {
   "shadows": "allennlp.semparse.contexts.TableQuestionKnowledgeGraph"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.semparse.contexts.TableQuestionKnowledgeGraph.read_from_file",
    "allennlp.semparse.worlds.NlvrWorld",
    "allennlp.semparse.worlds.WikiTablesWorld",
    "allennlp.tests.semparse.worlds.world_test.FakeWorldWithRecursion",
    "allennlp.tests.semparse.worlds.world_test.FakeWorldWithoutRecursion",
    "allennlp.tests.semparse.worlds.world_test.json",
    "open",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_action_sequence_removes_and_retains_var_correctly": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_action_sequence_removes_currying": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_adds_var_correctly": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_fails_with_action_sequence_in_wrong_order": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_fails_with_extra_actions": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_fails_with_incomplete_action_sequence": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_fails_with_unnecessary_add_var": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "allennlp.semparse.ParsingError"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_handles_greater_than": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_handles_length_one_terminal_functions": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_handles_reverse": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_with_multiple_negate_filters": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_logical_form_with_real_logical_forms": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_paths_to_root_with_recursion": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.TestWorld.test_get_paths_to_root_without_recursion": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "allennlp.tests.semparse.worlds.world_test.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.WikiTablesWorld": {
  "data": {
   "shadows": "allennlp.semparse.worlds.WikiTablesWorld"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.World": {
  "data": {
   "shadows": "allennlp.semparse.World"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.semparse.worlds.world_test.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.tests.service": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.service.config_explorer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.service.config_explorer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.service.config_explorer.make_app",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_api": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_app": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_choices": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_get_choices_failover": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_initializers": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json",
    "any"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_instantiable_registrable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_other_modules": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.predictors.bidaf.__file__",
    "allennlp.service.config_explorer.make_app",
    "allennlp.tests.service.config_explorer_test.json",
    "allennlp.tests.service.config_explorer_test.os",
    "allennlp.tests.service.config_explorer_test.sys",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_regularizers": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json",
    "any"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_rnn_hack": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json",
    "any"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_subclass": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.TestConfigExplorer.test_torch_class": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.tests.service.config_explorer_test.json",
    "any"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.config_explorer_test.bidaf": {
  "data": {
   "shadows": "allennlp.predictors.bidaf"
  },
  "type": "import"
 },
 "allennlp.tests.service.config_explorer_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.service.config_explorer_test.make_app": {
  "data": {
   "shadows": "allennlp.service.config_explorer.make_app"
  },
  "type": "import"
 },
 "allennlp.tests.service.config_explorer_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.service.config_explorer_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.service.server_simple_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.PAYLOAD": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.tests.service.server_simple_test.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.Predictor.from_archive",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.tearDown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.tests.service.server_simple_test.os",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.test_sanitizer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.service.server_simple.make_app",
    "allennlp.tests.service.server_simple_test.PAYLOAD",
    "allennlp.tests.service.server_simple_test.json",
    "allennlp.tests.service.server_simple_test.post_json",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.test_sanitizer.sanitize": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.test_standard_model": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.service.server_simple.make_app",
    "allennlp.tests.service.server_simple_test.PAYLOAD",
    "allennlp.tests.service.server_simple_test.json",
    "allennlp.tests.service.server_simple_test.post_json",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.TestSimpleServer.test_static_dir": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.service.server_simple.make_app",
    "allennlp.tests.service.server_simple_test.os",
    "open"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.service.server_simple_test.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.flask.testing": {
  "data": {
   "shadows": "flask.testing"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.make_app": {
  "data": {
   "shadows": "allennlp.service.server_simple.make_app"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.service.server_simple_test.post_json": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.tests.service.server_simple_test.flask",
    "allennlp.tests.service.server_simple_test.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.beam_search_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.beam_search_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.beam_search_test.BeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.BeamSearch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.beam_search_test.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.beam_search_test.TestBeamSearch": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.beam_search_test.TestBeamSearch.test_search": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "SimpleState",
    "SimpleTransitionFunction",
    "allennlp.common.Params",
    "allennlp.state_machines.BeamSearch.from_params",
    "allennlp.tests.state_machines.beam_search_test.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.beam_search_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test.ConstrainedBeamSearch": {
  "data": {
   "shadows": "allennlp.state_machines.ConstrainedBeamSearch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test.TestConstrainedBeamSearch": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test.TestConstrainedBeamSearch.test_search": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "SimpleState",
    "SimpleTransitionFunction",
    "allennlp.state_machines.ConstrainedBeamSearch",
    "allennlp.tests.state_machines.constrained_beam_search_test.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.constrained_beam_search_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.simple_transition_system.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleState": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.state_machines.State"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleState.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.tests.state_machines.simple_transition_system.torch",
    "int",
    "len",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleState.__repr__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleState.combine_states": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.tests.state_machines.simple_transition_system.SimpleState",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleState.is_finished": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleTransitionFunction": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.state_machines.TransitionFunction",
    "allennlp.tests.state_machines.simple_transition_system.SimpleState"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleTransitionFunction.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.SimpleTransitionFunction.take_step": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.tests.state_machines.simple_transition_system.SimpleState",
    "collections.defaultdict",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.simple_transition_system.State": {
  "data": {
   "shadows": "allennlp.state_machines.State"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.TransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.TransitionFunction"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.simple_transition_system.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.TestGrammarStatelet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.TestGrammarStatelet.test_get_valid_actions_uses_top_of_stack": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarStatelet",
    "allennlp.tests.state_machines.states.grammar_statelet_test.is_nonterminal",
    "object"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.TestGrammarStatelet.test_is_finished_just_uses_nonterminal_stack": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.state_machines.states.GrammarStatelet",
    "allennlp.tests.state_machines.states.grammar_statelet_test.is_nonterminal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.TestGrammarStatelet.test_take_action_crashes_with_mismatched_types": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.state_machines.states.GrammarStatelet",
    "allennlp.tests.state_machines.states.grammar_statelet_test.is_nonterminal",
    "allennlp.tests.state_machines.states.grammar_statelet_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.is_nonterminal": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.grammar_statelet_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.LambdaGrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.LambdaGrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_get_valid_actions_adds_lambda_productions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_get_valid_actions_adds_lambda_productions_only_for_correct_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.torch",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_get_valid_actions_uses_top_of_stack": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "object"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_is_finished_just_uses_nonterminal_stack": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_take_action_crashes_with_mismatched_types": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_take_action_gives_correct_next_states_with_lambda_productions": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "object"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.TestLambdaGrammarStatelet.test_take_action_gives_correct_next_states_with_non_lambda_productions": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.state_machines.states.LambdaGrammarStatelet",
    "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal",
    "object"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.is_nonterminal": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.states.lambda_grammar_statelet_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.ExpectedRiskMinimization": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.ExpectedRiskMinimization"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.TestExpectedRiskMinimization": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.TestExpectedRiskMinimization.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "SimpleState",
    "SimpleTransitionFunction",
    "allennlp.state_machines.trainers.ExpectedRiskMinimization",
    "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.torch",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.TestExpectedRiskMinimization.test_decode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.TestExpectedRiskMinimization.test_get_finished_states": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.expected_risk_minimization_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.MaximumMarginalLikelihood": {
  "data": {
   "shadows": "allennlp.state_machines.trainers.MaximumMarginalLikelihood"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.TestMaximumMarginalLikelihood": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.TestMaximumMarginalLikelihood.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SimpleState",
    "SimpleTransitionFunction",
    "allennlp.state_machines.trainers.MaximumMarginalLikelihood",
    "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.TestMaximumMarginalLikelihood.test_decode": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.math",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.trainers.maximum_marginal_likelihood_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.Attention": {
  "data": {
   "shadows": "allennlp.modules.Attention"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.BasicTransitionFunction": {
  "data": {
   "shadows": "allennlp.state_machines.transition_functions.BasicTransitionFunction"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.BasicTransitionFunctionTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.BasicTransitionFunctionTest.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.Attention.by_name",
    "allennlp.semparse.type_declarations.type_declaration.is_nonterminal",
    "allennlp.state_machines.states.GrammarBasedState",
    "allennlp.state_machines.states.GrammarStatelet",
    "allennlp.state_machines.states.RnnStatelet",
    "allennlp.state_machines.transition_functions.BasicTransitionFunction",
    "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.torch",
    "len",
    "range",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.BasicTransitionFunctionTest.test_take_step": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.GrammarBasedState": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarBasedState"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.GrammarStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.GrammarStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.RnnStatelet": {
  "data": {
   "shadows": "allennlp.state_machines.states.RnnStatelet"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.is_nonterminal": {
  "data": {
   "shadows": "allennlp.semparse.type_declarations.type_declaration.is_nonterminal"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.transition_functions.basic_transition_function_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.util_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.state_machines.util_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.util_test.TestStateMachinesUtil": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.state_machines.util_test.TestStateMachinesUtil.test_create_allowed_transitions": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.state_machines.util.construct_prefix_tree",
    "allennlp.tests.state_machines.util_test.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.state_machines.util_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.state_machines.util_test.util": {
  "data": {
   "shadows": "allennlp.state_machines.util"
  },
  "type": "import"
 },
 "allennlp.tests.training": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.learning_rate_schedulers_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest._get_optimizer": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest.test_from_params": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest.test_schedules": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest.test_schedules_with_save_and_resume": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "init_and_restore_scheduler",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.CosineWithRestartsTest.test_schedules_with_save_and_resume.init_and_restore_scheduler": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateSchedulersTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateSchedulersTest.test_no_metric_wrapper_can_support_none_for_metrics": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.optimizers.Optimizer.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateSchedulersTest.test_noam_learning_rate_schedule_does_not_crash": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.optimizers.Optimizer.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateSchedulersTest.test_reduce_on_plateau_error_throw_when_no_metrics_exist": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.LearningRateSchedulersTest.test_reduce_on_plateau_works_when_metrics_exist": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.optimizers.Optimizer.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest._get_optimizer": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest._run_scheduler_get_lrs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest.setUp": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest",
    "allennlp.tests.training.learning_rate_schedulers_test.torch",
    "collections.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest.test_from_params": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest.test_is_hat_shaped": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "allennlp.tests.training.learning_rate_schedulers_test.is_hat_shaped",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest.test_schedules": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "float",
    "int",
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.SlantedTriangularTest.test_schedules_num_steps_per_epoch": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "allennlp.tests.training.learning_rate_schedulers_test.is_hat_shaped",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.is_hat_shaped": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "float",
    "len",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.learning_rate_schedulers_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.attachment_scores_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScores": {
  "data": {
   "shadows": "allennlp.training.metrics.AttachmentScores"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.attachment_scores_test.torch",
    "allennlp.training.metrics.AttachmentScores",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest.test_attachment_scores_can_ignore_labels": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.training.metrics.AttachmentScores",
    "scorer",
    "scorer.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest.test_labeled_accuracy_is_affected_by_incorrect_heads": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest.test_perfect_scores": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.AttachmentScoresTest.test_unlabeled_accuracy_ignores_incorrect_labels": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.attachment_scores_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.bleu_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test.BLEU": {
  "data": {
   "shadows": "allennlp.training.metrics.BLEU"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.training.metrics.BLEU",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest.test_bleu_computed_correctly": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.bleu_test.math",
    "allennlp.tests.training.metrics.bleu_test.torch",
    "numpy.testing.assert_approx_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest.test_bleu_computed_with_zero_counts": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest.test_get_valid_tokens_mask": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.bleu_test.torch",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.bleu_test.BleuTest.test_ngrams": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.bleu_test.torch",
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.bleu_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.bleu_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test.BooleanAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.BooleanAccuracy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test.BooleanAccuracyTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test.BooleanAccuracyTest.test_accuracy_computation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "accuracy.reset",
    "allennlp.tests.training.metrics.boolean_accuracy_test.torch",
    "allennlp.training.metrics.BooleanAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.boolean_accuracy_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_categorical_accuracy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_does_not_divide_by_zero_with_no_count": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_incorrect_top_k_catches_exceptions": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.metrics.categorical_accuracy_test.pytest",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_tie_break_categorical_accuracy": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.categorical_accuracy_test.numpy",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_and_tie_break_together_catches_exceptions": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.metrics.categorical_accuracy_test.pytest",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_categorical_accuracy": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_categorical_accuracy_accumulates_and_resets_correctly": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.correct_count",
    "accuracy.get_metric",
    "accuracy.total_count",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_categorical_accuracy_catches_exceptions": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "accuracy",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.metrics.categorical_accuracy_test.pytest",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_categorical_accuracy_respects_mask": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.CategoricalAccuracyTest.test_top_k_categorical_accuracy_works_for_sequences": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.categorical_accuracy_test.numpy",
    "allennlp.tests.training.metrics.categorical_accuracy_test.torch",
    "allennlp.training.metrics.CategoricalAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.categorical_accuracy_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test.ConllCorefScores": {
  "data": {
   "shadows": "allennlp.training.metrics.ConllCorefScores"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test.ConllCorefScoresTest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test.ConllCorefScoresTest.test_get_predicted_clusters": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.conll_coref_scores_test.torch",
    "allennlp.training.metrics.ConllCorefScores.get_predicted_clusters",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.conll_coref_scores_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.covariance_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.covariance_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.covariance_test.Covariance": {
  "data": {
   "shadows": "allennlp.training.metrics.Covariance"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.covariance_test.CovarianceTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.covariance_test.CovarianceTest.test_covariance_masked_computation": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.covariance_test.torch",
    "allennlp.training.metrics.Covariance",
    "covariance",
    "covariance.get_metric",
    "covariance.reset",
    "numpy.cov",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.covariance_test.CovarianceTest.test_covariance_unmasked_computation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.covariance_test.torch",
    "allennlp.training.metrics.Covariance",
    "covariance",
    "covariance.get_metric",
    "covariance.reset",
    "numpy.cov",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.covariance_test.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.covariance_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.covariance_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.entropy_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.entropy_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.entropy_test.Entropy": {
  "data": {
   "shadows": "allennlp.training.metrics.Entropy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.entropy_test.EntropyTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.entropy_test.EntropyTest.test_entropy_for_uniform_distribution": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.entropy_test.numpy",
    "allennlp.tests.training.metrics.entropy_test.torch",
    "allennlp.training.metrics.Entropy",
    "metric",
    "metric._count",
    "metric._entropy",
    "metric.get_metric",
    "metric.reset"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.entropy_test.EntropyTest.test_low_entropy_distribution": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.entropy_test.torch",
    "allennlp.training.metrics.Entropy",
    "metric",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.entropy_test.EntropyTest.test_masked_case": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.entropy_test.torch",
    "allennlp.training.metrics.Entropy",
    "metric",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.entropy_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.entropy_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorer": {
  "data": {
   "shadows": "allennlp.training.metrics.EvalbBracketingScorer"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer.compile_evalb",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.tearDown": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer.clean_evalb",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.test_evalb_correctly_calculates_bracketing_metrics_over_multiple_trees": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer",
    "evalb_scorer",
    "evalb_scorer.get_metric",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.test_evalb_correctly_scores_identical_trees": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer",
    "evalb_scorer",
    "evalb_scorer.get_metric",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.test_evalb_correctly_scores_imperfect_trees": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer",
    "evalb_scorer",
    "evalb_scorer.get_metric",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.EvalbBracketingScorerTest.test_evalb_with_terrible_trees_handles_nan_f1": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.training.metrics.EvalbBracketingScorer",
    "evalb_scorer",
    "evalb_scorer.get_metric",
    "nltk.Tree.fromstring"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.evalb_bracketing_scorer_test.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.f1_measure_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.F1Measure"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1MeasureTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1MeasureTest.test_f1_measure": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.f1_measure_test.numpy",
    "allennlp.tests.training.metrics.f1_measure_test.torch",
    "allennlp.training.metrics.F1Measure",
    "f1_measure",
    "f1_measure._false_negatives",
    "f1_measure._false_positives",
    "f1_measure._true_negatives",
    "f1_measure._true_positives",
    "f1_measure.get_metric",
    "f1_measure.reset"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1MeasureTest.test_f1_measure_accumulates_and_resets_correctly": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.f1_measure_test.numpy",
    "allennlp.tests.training.metrics.f1_measure_test.torch",
    "allennlp.training.metrics.F1Measure",
    "f1_measure",
    "f1_measure._false_negatives",
    "f1_measure._false_positives",
    "f1_measure._true_negatives",
    "f1_measure._true_positives",
    "f1_measure.get_metric",
    "f1_measure.reset"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1MeasureTest.test_f1_measure_catches_exceptions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.metrics.f1_measure_test.pytest",
    "allennlp.tests.training.metrics.f1_measure_test.torch",
    "allennlp.training.metrics.F1Measure",
    "f1_measure"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.f1_measure_test.F1MeasureTest.test_f1_measure_works_for_sequences": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.f1_measure_test.numpy",
    "allennlp.tests.training.metrics.f1_measure_test.torch",
    "allennlp.training.metrics.F1Measure",
    "f1_measure",
    "f1_measure._false_negatives",
    "f1_measure._false_positives",
    "f1_measure._true_negatives",
    "f1_measure._true_positives",
    "f1_measure.get_metric",
    "f1_measure.reset"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.f1_measure_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.f1_measure_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test.MeanAbsoluteError": {
  "data": {
   "shadows": "allennlp.training.metrics.MeanAbsoluteError"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test.MeanAbsoluteErrorTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test.MeanAbsoluteErrorTest.test_mean_absolute_error_computation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.mean_absolute_error_test.torch",
    "allennlp.training.metrics.MeanAbsoluteError",
    "mae",
    "mae.get_metric",
    "mae.reset"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.mean_absolute_error_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.PearsonCorrelation": {
  "data": {
   "shadows": "allennlp.training.metrics.PearsonCorrelation"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.PearsonCorrelationTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.PearsonCorrelationTest.test_pearson_correlation_masked_computation": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.pearson_correlation_test.torch",
    "allennlp.training.metrics.PearsonCorrelation",
    "numpy.cov",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "pearson_correlation",
    "pearson_correlation.get_metric",
    "pearson_correlation.reset",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.PearsonCorrelationTest.test_pearson_correlation_unmasked_computation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.pearson_correlation_test.torch",
    "allennlp.training.metrics.PearsonCorrelation",
    "numpy.corrcoef",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pearson_correlation",
    "pearson_correlation.get_metric",
    "pearson_correlation.reset",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.pearson_correlation_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.SequenceAccuracy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracyTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracyTest.test_get_metric_on_new_object_works": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.sequence_accuracy_test.numpy",
    "allennlp.training.metrics.SequenceAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracyTest.test_sequence_accuracy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.sequence_accuracy_test.numpy",
    "allennlp.tests.training.metrics.sequence_accuracy_test.torch",
    "allennlp.training.metrics.SequenceAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracyTest.test_sequence_accuracy_accumulates_and_resets_correctly": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.correct_count",
    "accuracy.get_metric",
    "accuracy.total_count",
    "allennlp.tests.training.metrics.sequence_accuracy_test.numpy",
    "allennlp.tests.training.metrics.sequence_accuracy_test.torch",
    "allennlp.training.metrics.SequenceAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.SequenceAccuracyTest.test_sequence_accuracy_respects_mask": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "accuracy",
    "accuracy.get_metric",
    "allennlp.tests.training.metrics.sequence_accuracy_test.numpy",
    "allennlp.tests.training.metrics.sequence_accuracy_test.torch",
    "allennlp.training.metrics.SequenceAccuracy"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.sequence_accuracy_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.Metric"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_bmes_span_metrics_are_computed_correctly": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.torch",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "metric",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_f1_accepts_tags_to_spans_function_argument": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.torch",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "metric",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_f1_accepts_tags_to_spans_function_argument.mock_tags_to_spans_function": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_f1_can_build_from_params": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.metrics.Metric.from_params",
    "metric",
    "metric._ignore_classes",
    "metric._label_vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_f1_matches_perl_script_for_continued_arguments": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.models.semantic_role_labeler.write_to_conll_eval_file",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.os",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.subprocess",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.torch",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "enumerate",
    "int",
    "metric",
    "metric._true_positives",
    "metric._true_positives.keys",
    "metric.get_metric",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_metrics_are_computed_correcly_with_prediction_map": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.torch",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "metric",
    "metric._false_negatives",
    "metric._false_negatives.keys",
    "metric._false_positives",
    "metric._false_positives.keys",
    "metric._true_positives",
    "metric._true_positives.keys",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.SpanBasedF1Test.test_span_metrics_are_computed_correctly": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy",
    "allennlp.tests.training.metrics.span_based_f1_measure_test.torch",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "metric",
    "metric._false_negatives",
    "metric._false_negatives.keys",
    "metric._false_positives",
    "metric._false_positives.keys",
    "metric._true_positives",
    "metric._true_positives.keys",
    "metric.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.span_based_f1_measure_test.write_to_conll_eval_file": {
  "data": {
   "shadows": "allennlp.models.semantic_role_labeler.write_to_conll_eval_file"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.unigram_recall_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.UnigramRecall"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecallTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecallTest.test_get_metric_on_new_object_works": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.unigram_recall_test.numpy",
    "allennlp.training.metrics.UnigramRecall",
    "recall",
    "recall.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecallTest.test_sequence_recall": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.unigram_recall_test.numpy",
    "allennlp.tests.training.metrics.unigram_recall_test.torch",
    "allennlp.training.metrics.UnigramRecall",
    "recall",
    "recall.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecallTest.test_sequence_recall_accumulates_and_resets_correctly": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.unigram_recall_test.numpy",
    "allennlp.tests.training.metrics.unigram_recall_test.torch",
    "allennlp.training.metrics.UnigramRecall",
    "recall",
    "recall.correct_count",
    "recall.get_metric",
    "recall.total_count"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.UnigramRecallTest.test_sequence_recall_respects_mask": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.tests.training.metrics.unigram_recall_test.numpy",
    "allennlp.tests.training.metrics.unigram_recall_test.torch",
    "allennlp.training.metrics.UnigramRecall",
    "recall",
    "recall.get_metric"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.tests.training.metrics.unigram_recall_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.optimizer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.SimpleTagger": {
  "data": {
   "shadows": "allennlp.models.simple_tagger.SimpleTagger"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.TestDenseSparseAdam": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.optimizer_test.TestDenseSparseAdam.setUp": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.models.simple_tagger.SimpleTagger.from_params",
    "allennlp.tests.training.optimizer_test.TestDenseSparseAdam",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.optimizer_test.TestDenseSparseAdam.test_can_optimise_model_with_dense_and_sparse_params": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.iterators.BasicIterator",
    "allennlp.training.optimizers.Optimizer.from_params",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.optimizer_test.TestOptimizer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.optimizer_test.TestOptimizer.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.models.simple_tagger.SimpleTagger.from_params",
    "allennlp.tests.training.optimizer_test.TestOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.optimizer_test.TestOptimizer.test_optimizer_basic": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.optimizer_test.TestOptimizer.test_optimizer_parameter_groups": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.optimizer_test.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.tests.training.optimizer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.tests.training.trainer_test.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.BasicIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.BasicIterator"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.SimpleTagger": {
  "data": {
   "shadows": "allennlp.models.simple_tagger.SimpleTagger"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.TestSparseClipGrad": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.trainer_test.TestSparseClipGrad.test_sparse_clip_grad": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.torch",
    "allennlp.training.trainer.is_sparse",
    "allennlp.training.trainer.sparse_clip_norm",
    "embedding",
    "embedding.weight",
    "embedding.weight.grad",
    "embedding.weight.grad.coalesce"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.testing.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.dataset_readers.SequenceTaggingDatasetReader",
    "allennlp.data.iterators.BasicIterator",
    "allennlp.models.simple_tagger.SimpleTagger.from_params",
    "allennlp.tests.training.trainer_test.TestTrainer",
    "allennlp.tests.training.trainer_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_metric_only_considered_best_so_far_when_strictly_better_than_those_before_it_decreasing_metric": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_metric_only_considered_best_so_far_when_strictly_better_than_those_before_it_increasing_metric": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_should_stop_early_with_decreasing_metric": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_should_stop_early_with_early_stopping_disabled": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer",
    "float",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_should_stop_early_with_flat_lining_metric": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_should_stop_early_with_increasing_metric": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_should_stop_early_with_invalid_patience": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.tests.training.trainer_test.pytest",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_log_histograms": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_log_learning_rates_tensorboard": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_resume_training": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer",
    "float",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_resume_with_lr_scheduler": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_cuda": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.pytest",
    "allennlp.tests.training.trainer_test.torch",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_multiple_gpu": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "MetaDataCheckWrapper",
    "allennlp.data.iterators.BasicIterator",
    "allennlp.tests.training.trainer_test.pytest",
    "allennlp.tests.training.trainer_test.torch",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_multiple_gpu.MetaDataCheckWrapper": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.models.model.Model"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_multiple_gpu.MetaDataCheckWrapper.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_multiple_gpu.MetaDataCheckWrapper.forward": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.torch",
    "len",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_can_run_with_lr_scheduler": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_raises_on_model_with_no_loss_key": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "FakeModel",
    "RuntimeError",
    "allennlp.tests.training.trainer_test.pytest",
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_raises_on_model_with_no_loss_key.FakeModel": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_raises_on_model_with_no_loss_key.FakeModel.forward": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_respects_keep_serialized_model_every_num_seconds": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "WaitingIterator",
    "allennlp.tests.training.trainer_test.glob",
    "allennlp.tests.training.trainer_test.os",
    "allennlp.tests.training.trainer_test.re",
    "allennlp.training.trainer.Trainer",
    "int",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_respects_keep_serialized_model_every_num_seconds.WaitingIterator": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator"
   ]
  },
  "type": "class"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_respects_keep_serialized_model_every_num_seconds.WaitingIterator._create_batches": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.time",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_respects_num_serialized_models_to_keep": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.glob",
    "allennlp.tests.training.trainer_test.os",
    "allennlp.tests.training.trainer_test.re",
    "allennlp.training.trainer.Trainer",
    "int",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_saves_metrics_every_epoch": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "allennlp.tests.training.trainer_test.json",
    "allennlp.training.trainer.Trainer",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.TestTrainer.test_trainer_saves_models_at_specified_interval": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "allennlp.data.iterators.BasicIterator",
    "allennlp.tests.training.trainer_test.glob",
    "allennlp.tests.training.trainer_test.os",
    "allennlp.tests.training.trainer_test.re",
    "allennlp.training.trainer.Trainer",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.tests.training.trainer_test.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.is_sparse": {
  "data": {
   "shadows": "allennlp.training.trainer.is_sparse"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.sparse_clip_norm": {
  "data": {
   "shadows": "allennlp.training.trainer.sparse_clip_norm"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "allennlp.tests.training.trainer_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tools": {
  "data": {},
  "type": "module"
 },
 "allennlp.tools.squad_eval": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.tools.squad_eval.argparse",
    "allennlp.tools.squad_eval.args",
    "allennlp.tools.squad_eval.dataset",
    "allennlp.tools.squad_eval.dataset_json",
    "allennlp.tools.squad_eval.evaluate",
    "allennlp.tools.squad_eval.expected_version",
    "allennlp.tools.squad_eval.json",
    "allennlp.tools.squad_eval.parser",
    "allennlp.tools.squad_eval.predictions",
    "allennlp.tools.squad_eval.sys",
    "open",
    "print"
   ]
  },
  "type": "module"
 },
 "allennlp.tools.squad_eval.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.args": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.dataset": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.dataset_json": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.evaluate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.exact_match_score",
    "allennlp.tools.squad_eval.f1_score",
    "allennlp.tools.squad_eval.metric_max_over_ground_truths",
    "allennlp.tools.squad_eval.sys",
    "list",
    "map",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.exact_match_score": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.normalize_answer"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.expected_version": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.f1_score": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.normalize_answer",
    "collections.Counter",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.metric_max_over_ground_truths": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "max",
    "metric_fn"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.normalize_answer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "lower",
    "remove_articles",
    "remove_punc",
    "white_space_fix"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.normalize_answer.lower": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.normalize_answer.remove_articles": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.re"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.normalize_answer.remove_punc": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.string",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.normalize_answer.white_space_fix": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.tools.squad_eval.parser": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.predictions": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "allennlp.tools.squad_eval.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "allennlp.tools.squad_eval.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.tools.wikitables_evaluator.main"
   ]
  },
  "type": "module"
 },
 "allennlp.tools.wikitables_evaluator.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.DateValue": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.Value"
   ]
  },
  "type": "class"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.__eq__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.DateValue",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.__hash__": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.normalize",
    "hash",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.__str__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.match": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.DateValue",
    "allennlp.tools.wikitables_evaluator.Value",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.parse": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "int",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.DateValue.ymd": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.Value"
   ]
  },
  "type": "class"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.__eq__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.NumberValue",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.__hash__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abs",
    "allennlp.tools.wikitables_evaluator.normalize",
    "float",
    "hash",
    "int",
    "isinstance",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.__str__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.amount": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.match": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abs",
    "allennlp.tools.wikitables_evaluator.NumberValue",
    "allennlp.tools.wikitables_evaluator.Value",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.NumberValue.parse": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "float",
    "int",
    "math.isinf",
    "math.isnan",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.StringValue": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.Value"
   ]
  },
  "type": "class"
 },
 "allennlp.tools.wikitables_evaluator.StringValue.__eq__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.StringValue",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.StringValue.__hash__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.StringValue.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.normalize",
    "hash"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.StringValue.__str__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.StringValue.match": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.Value",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.Value": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "allennlp.tools.wikitables_evaluator.Value.match": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.Value.normalized": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.__version__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "allennlp.tools.wikitables_evaluator.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.check_denotation": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "any",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.codecs_open": {
  "data": {
   "shadows": "codecs.open"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.isinf": {
  "data": {
   "shadows": "math.isinf"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.isnan": {
  "data": {
   "shadows": "math.isnan"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.main": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.argparse",
    "allennlp.tools.wikitables_evaluator.check_denotation",
    "allennlp.tools.wikitables_evaluator.os",
    "allennlp.tools.wikitables_evaluator.sys",
    "allennlp.tools.wikitables_evaluator.to_value_list",
    "allennlp.tools.wikitables_evaluator.tsv_unescape_list",
    "codecs.open",
    "dict",
    "len",
    "print",
    "round",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.normalize": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.re",
    "allennlp.tools.wikitables_evaluator.unicodedata"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tools.wikitables_evaluator.to_value": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.DateValue",
    "allennlp.tools.wikitables_evaluator.NumberValue",
    "allennlp.tools.wikitables_evaluator.StringValue",
    "allennlp.tools.wikitables_evaluator.Value",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.to_value_list": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.to_value",
    "isinstance",
    "len",
    "list",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.tsv_unescape": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.tsv_unescape_list": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "allennlp.tools.wikitables_evaluator.tsv_unescape"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.wikitables_evaluator.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "allennlp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.registrable.Registrable._registry",
    "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.NoamLR",
    "allennlp.training.learning_rate_schedulers.SlantedTriangular",
    "allennlp.training.learning_rate_schedulers.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.CosineWithRestarts": {
  "data": {
   "lineno": 290
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.CosineWithRestarts.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
    "allennlp.training.learning_rate_schedulers.logger",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.CosineWithRestarts.get_lr": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper",
    "allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler.step": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler.step_batch": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper.step": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "float",
    "int",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper.step": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float",
    "int",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR.get_lr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR.step": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR.step_batch": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular": {
  "data": {
   "lineno": 153
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "range",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular.get_lr": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular.step": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.logger",
    "bool",
    "enumerate",
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular.step_batch": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "allennlp.training.learning_rate_schedulers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.torch.optim.lr_scheduler": {
  "data": {
   "shadows": "torch.optim.lr_scheduler"
  },
  "type": "import"
 },
 "allennlp.training.metrics": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.AttachmentScores": {
  "data": {
   "shadows": "allennlp.training.metrics.attachment_scores.AttachmentScores"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.average.Average"
  },
  "type": "import"
 },
 "allennlp.training.metrics.BLEU": {
  "data": {
   "shadows": "allennlp.training.metrics.bleu.BLEU"
  },
  "type": "import"
 },
 "allennlp.training.metrics.BooleanAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.ConllCorefScores": {
  "data": {
   "shadows": "allennlp.training.metrics.conll_coref_scores.ConllCorefScores"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Covariance": {
  "data": {
   "shadows": "allennlp.training.metrics.covariance.Covariance"
  },
  "type": "import"
 },
 "allennlp.training.metrics.DEFAULT_EVALB_DIR": {
  "data": {
   "shadows": "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Entropy": {
  "data": {
   "shadows": "allennlp.training.metrics.entropy.Entropy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.EvalbBracketingScorer": {
  "data": {
   "shadows": "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer"
  },
  "type": "import"
 },
 "allennlp.training.metrics.F1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.f1_measure.F1Measure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.MeanAbsoluteError": {
  "data": {
   "shadows": "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.MentionRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.mention_recall.MentionRecall"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.PearsonCorrelation": {
  "data": {
   "shadows": "allennlp.training.metrics.pearson_correlation.PearsonCorrelation"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SequenceAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SquadEmAndF1": {
  "data": {
   "shadows": "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1"
  },
  "type": "import"
 },
 "allennlp.training.metrics.UnigramRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.unigram_recall.UnigramRecall"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.__call__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.training.metrics.attachment_scores.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.get_metric": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.reset": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.average.Average": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.average.Average.__call__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.get_metric": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.reset": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.bleu.BLEU": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.bleu.BLEU.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.torch",
    "enumerate",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "collections.Counter",
    "float",
    "int",
    "set",
    "typing.Dict",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._get_brevity_penalty": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.math",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._get_modified_precision_counts": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.torch",
    "int",
    "min",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._get_valid_tokens_mask": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._ngrams": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.torch",
    "any",
    "collections.Counter",
    "int",
    "range",
    "tuple",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.get_metric": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.math",
    "bool",
    "enumerate",
    "float",
    "overrides.overrides",
    "str",
    "sum",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.reset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "collections.Counter",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.training.metrics.boolean_accuracy.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.get_metric": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.reset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.__call__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.categorical_accuracy.torch",
    "min",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.get_metric": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.reset": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.covariance.Covariance": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.covariance.Covariance.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.training.metrics.covariance.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.get_metric": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.reset": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.entropy.Entropy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.entropy.Entropy.__call__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.training.metrics.entropy.torch",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.get_metric": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.reset": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.metrics.evalb_bracketing_scorer.logging",
    "allennlp.training.metrics.evalb_bracketing_scorer.os"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer",
    "allennlp.training.metrics.evalb_bracketing_scorer.logger",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "allennlp.training.metrics.evalb_bracketing_scorer.shutil",
    "allennlp.training.metrics.evalb_bracketing_scorer.subprocess",
    "allennlp.training.metrics.evalb_bracketing_scorer.tempfile",
    "float",
    "len",
    "nltk.Tree",
    "open",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.clean_evalb": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.compile_evalb": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.logger",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.get_metric": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.reset": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.f1_measure.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure.F1Measure": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.__call__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.f1_measure.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.get_metric": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.reset": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.__call__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.training.metrics.mean_absolute_error.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.get_metric": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.reset": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.mention_recall.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.MentionRecall": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.mention_recall.MentionRecall.__call__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.training.metrics.mention_recall.torch",
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mention_recall.MentionRecall.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "allennlp.training.metrics.mention_recall.MentionRecall.get_metric": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mention_recall.MentionRecall.reset": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mention_recall.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mention_recall.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.metric.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Metric": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.metric.Metric.__call__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.training.metrics.metric.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.get_metric": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "float",
    "str",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.reset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.unwrap_to_tensors": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.torch",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.pearson_correlation.Covariance": {
  "data": {
   "shadows": "allennlp.training.metrics.covariance.Covariance"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.training.metrics.pearson_correlation.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.training.metrics.covariance.Covariance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.get_metric": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.training.metrics.pearson_correlation.math",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.reset": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.sequence_accuracy.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.sequence_accuracy.torch",
    "list",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.get_metric": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.reset": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.span_based_f1_measure.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.__call__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.training.metrics.span_based_f1_measure.torch",
    "range",
    "tags_to_spans_function",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.training.metrics.span_based_f1_measure.TAGS_TO_SPANS_FUNCTION_TYPE",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure._compute_metrics": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "float",
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure._handle_continued_spans": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "list",
    "max",
    "min",
    "set",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.get_metric": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "set",
    "str",
    "sum",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.reset": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.TAGS_TO_SPANS_FUNCTION_TYPE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.training.metrics.span_based_f1_measure.TypedStringSpan": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bio_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bioul_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bmes_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.iob1_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.squad_em_and_f1": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.squad_em_and_f1.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1.__call__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.tools.squad_eval.exact_match_score",
    "allennlp.tools.squad_eval.f1_score",
    "allennlp.tools.squad_eval.metric_max_over_ground_truths",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1.__str__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1.get_metric": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.squad_em_and_f1.SquadEmAndF1.reset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.squad_em_and_f1.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.squad_em_and_f1.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.squad_em_and_f1.squad_eval": {
  "data": {
   "shadows": "allennlp.tools.squad_eval"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.unigram_recall.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.unigram_recall.sys",
    "allennlp.training.metrics.unigram_recall.torch",
    "float",
    "int",
    "len",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.get_metric": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.reset": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.optimizers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.Registrable._registry",
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.logging",
    "allennlp.training.optimizers.torch",
    "pytorch_pretrained_bert.optimization.BertAdam"
   ]
  },
  "type": "module"
 },
 "allennlp.training.optimizers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.BertAdam": {
  "data": {
   "shadows": "pytorch_pretrained_bert.optimization.BertAdam"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.DenseSparseAdam": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.DenseSparseAdam.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.training.optimizers.DenseSparseAdam",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.DenseSparseAdam.step": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.training.optimizers.math",
    "allennlp.training.optimizers.torch",
    "closure",
    "len",
    "make_sparse"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.DenseSparseAdam.step.make_sparse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "constructor"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.Optimizer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.Optimizer.from_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.Params",
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.logger",
    "allennlp.training.optimizers.re",
    "classmethod",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "set",
    "str",
    "sum",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.training.optimizers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.trainer.Trainer",
    "allennlp.training.trainer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.trainer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.trainer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.trainer.DataIterator": {
  "data": {
   "shadows": "allennlp.data.iterators.data_iterator.DataIterator"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.trainer.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.trainer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.trainer.SummaryWriter": {
  "data": {
   "shadows": "tensorboardX.SummaryWriter"
  },
  "type": "import"
 },
 "allennlp.training.trainer.TensorboardWriter": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "allennlp.training.trainer.TensorboardWriter.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorboardX.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TensorboardWriter._item": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "hasattr",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TensorboardWriter.add_train_histogram": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.training.trainer.torch",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TensorboardWriter.add_train_scalar": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TensorboardWriter.add_validation_scalar": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Trainer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.Trainer.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.DataIterator",
    "allennlp.models.model.Model",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler",
    "allennlp.training.trainer.TensorboardWriter",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.os",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.torch",
    "bool",
    "float",
    "int",
    "isinstance",
    "list",
    "str",
    "tensorboardX.SummaryWriter",
    "typing.Any",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._data_parallel": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "allennlp.common.util.scatter_kwargs",
    "len",
    "torch.nn.parallel.parallel_apply",
    "torch.nn.parallel.replicate",
    "torch.nn.parallel.scatter_gather.gather"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._description_from_metrics": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "allennlp.training.trainer.logger",
    "any",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._enable_activation_logging": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._enable_activation_logging.hook": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "allennlp.training.trainer.torch",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._enable_gradient_clipping": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._get_metrics": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._histograms_to_tensorboard": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._is_best_so_far": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "float",
    "max",
    "min",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._learning_rates_to_tensorboard": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._metrics_to_console": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "allennlp.training.trainer.logger",
    "dict",
    "len",
    "max",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._metrics_to_tensorboard": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "dict",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._parameter_and_gradient_statistics_to_tensorboard": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "allennlp.training.trainer.is_sparse",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.torch",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._restore_checkpoint": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "allennlp.nn.util.device_mapping",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.move_optimizer_to_cuda",
    "allennlp.training.trainer.torch",
    "float",
    "int",
    "isinstance",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._save_checkpoint": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.os",
    "allennlp.training.trainer.shutil",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.torch",
    "bool",
    "float",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._should_stop_early": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "bool",
    "float",
    "len",
    "max",
    "min",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._train_epoch": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.common.util.gpu_memory_mb",
    "allennlp.common.util.peak_memory_mb",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.time_to_str",
    "allennlp.training.trainer.torch",
    "float",
    "int",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer._validation_loss": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.training.trainer.logger",
    "float",
    "int",
    "typing.Tuple",
    "val_iterator",
    "val_iterator.get_num_batches"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.batch_loss": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "allennlp.nn.util.move_to_device",
    "allennlp.training.trainer.torch",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.find_latest_checkpoint": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "allennlp.training.trainer.os",
    "allennlp.training.trainer.re",
    "any",
    "int",
    "len",
    "sorted",
    "str",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.from_params": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.common.util.parse_cuda_device",
    "allennlp.data.instance.Instance",
    "allennlp.data.iterators.data_iterator.DataIterator",
    "allennlp.models.model.Model",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler.from_params",
    "allennlp.training.optimizers.Optimizer.from_params",
    "classmethod",
    "cls",
    "str",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.rescale_gradients": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "allennlp.training.trainer.sparse_clip_norm",
    "float",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.train": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.dump_metrics",
    "allennlp.training.trainer.datetime",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.os",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.torch",
    "allennlp.training.trainer.traceback",
    "float",
    "int",
    "range",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.trainer.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "allennlp.training.trainer.dump_metrics": {
  "data": {
   "shadows": "allennlp.common.util.dump_metrics"
  },
  "type": "import"
 },
 "allennlp.training.trainer.gather": {
  "data": {
   "shadows": "torch.nn.parallel.scatter_gather.gather"
  },
  "type": "import"
 },
 "allennlp.training.trainer.gpu_memory_mb": {
  "data": {
   "shadows": "allennlp.common.util.gpu_memory_mb"
  },
  "type": "import"
 },
 "allennlp.training.trainer.is_sparse": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "allennlp.training.trainer.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "allennlp.training.trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.trainer.move_optimizer_to_cuda": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.training.trainer.torch",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.trainer.parallel_apply": {
  "data": {
   "shadows": "torch.nn.parallel.parallel_apply"
  },
  "type": "import"
 },
 "allennlp.training.trainer.parse_cuda_device": {
  "data": {
   "shadows": "allennlp.common.util.parse_cuda_device"
  },
  "type": "import"
 },
 "allennlp.training.trainer.peak_memory_mb": {
  "data": {
   "shadows": "allennlp.common.util.peak_memory_mb"
  },
  "type": "import"
 },
 "allennlp.training.trainer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.training.trainer.replicate": {
  "data": {
   "shadows": "torch.nn.parallel.replicate"
  },
  "type": "import"
 },
 "allennlp.training.trainer.scatter_kwargs": {
  "data": {
   "shadows": "allennlp.common.util.scatter_kwargs"
  },
  "type": "import"
 },
 "allennlp.training.trainer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.training.trainer.sparse_clip_norm": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.training.trainer.is_sparse",
    "filter",
    "float",
    "list",
    "max"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.str_to_time": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.training.trainer.datetime",
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "allennlp.training.trainer.time_to_str": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "allennlp.training.trainer.datetime",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.trainer.torch.optim.lr_scheduler": {
  "data": {
   "shadows": "torch.optim.lr_scheduler"
  },
  "type": "import"
 },
 "allennlp.training.trainer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "allennlp.training.trainer.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.version": {
  "data": {
   "symbols_in_volume": [
    "allennlp.version._MAJOR",
    "allennlp.version._MINOR",
    "allennlp.version._REVISION"
   ]
  },
  "type": "module"
 },
 "allennlp.version.VERSION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "allennlp.version.VERSION_SHORT": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "allennlp.version._MAJOR": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "allennlp.version._MINOR": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "allennlp.version._REVISION": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "allennlp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}