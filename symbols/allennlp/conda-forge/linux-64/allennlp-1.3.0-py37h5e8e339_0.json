{
 "allennlp": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "allennlp.sys",
    "allennlp.warnings",
    "print"
   ]
  },
  "type": "module"
 },
 "allennlp.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.__main__.LEVEL",
    "allennlp.__main__._transformers_log_filter",
    "allennlp.__main__.level_name",
    "allennlp.__main__.logging",
    "allennlp.__main__.os",
    "allennlp.__main__.run",
    "allennlp.__main__.sys"
   ]
  },
  "type": "module"
 },
 "allennlp.__main__.LEVEL": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.__main__._transformers_log_filter": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "allennlp.__main__.level_name": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.__main__.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.__main__.main": {
  "data": {
   "shadows": "allennlp.commands.main"
  },
  "type": "import"
 },
 "allennlp.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.__main__.run": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.commands.main"
   ]
  },
  "type": "function"
 },
 "allennlp.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.__version__": {
  "data": {
   "shadows": "allennlp.version.VERSION"
  },
  "type": "import"
 },
 "allennlp.commands": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.commands.ArgumentParserWithDefaults": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.commands.argparse"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.ArgumentParserWithDefaults._is_empty_default": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "list",
    "set",
    "staticmethod",
    "str",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.ArgumentParserWithDefaults.add_argument": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.BuildVocab": {
  "data": {
   "shadows": "allennlp.commands.build_vocab.BuildVocab"
  },
  "type": "import"
 },
 "allennlp.commands.CachedPath": {
  "data": {
   "shadows": "allennlp.commands.cached_path.CachedPath"
  },
  "type": "import"
 },
 "allennlp.commands.Evaluate": {
  "data": {
   "shadows": "allennlp.commands.evaluate.Evaluate"
  },
  "type": "import"
 },
 "allennlp.commands.FindLearningRate": {
  "data": {
   "shadows": "allennlp.commands.find_learning_rate.FindLearningRate"
  },
  "type": "import"
 },
 "allennlp.commands.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.commands.Predict": {
  "data": {
   "shadows": "allennlp.commands.predict.Predict"
  },
  "type": "import"
 },
 "allennlp.commands.PrintResults": {
  "data": {
   "shadows": "allennlp.commands.print_results.PrintResults"
  },
  "type": "import"
 },
 "allennlp.commands.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.commands.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.TestInstall": {
  "data": {
   "shadows": "allennlp.commands.test_install.TestInstall"
  },
  "type": "import"
 },
 "allennlp.commands.Train": {
  "data": {
   "shadows": "allennlp.commands.train.Train"
  },
  "type": "import"
 },
 "allennlp.commands.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.commands.__version__": {
  "data": {
   "shadows": "allennlp.__version__"
  },
  "type": "import"
 },
 "allennlp.commands.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.build_vocab.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.build_vocab.BuildVocab": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.build_vocab.BuildVocab.add_subparser": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.commands.build_vocab.argparse",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.build_vocab.CacheFile": {
  "data": {
   "shadows": "allennlp.common.file_utils.CacheFile"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.build_vocab_from_args": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "allennlp.commands.build_vocab.argparse",
    "allennlp.commands.build_vocab.json",
    "allennlp.commands.build_vocab.logger",
    "allennlp.commands.build_vocab.os",
    "allennlp.commands.build_vocab.tarfile",
    "allennlp.commands.build_vocab.tempfile",
    "allennlp.common.file_utils.CacheFile",
    "allennlp.common.params.Params.from_file",
    "allennlp.training.util.make_vocab_from_params",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.build_vocab.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.commands.build_vocab.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.make_vocab_from_params": {
  "data": {
   "shadows": "allennlp.training.util.make_vocab_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.commands.build_vocab.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.cached_path.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.cached_path.CACHE_DIRECTORY": {
  "data": {
   "shadows": "allennlp.common.file_utils.CACHE_DIRECTORY"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.CachedPath": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register",
    "bool"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.cached_path.CachedPath.add_subparser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.commands.cached_path.argparse",
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.cached_path.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path._cached_path": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.commands.cached_path.argparse",
    "allennlp.commands.cached_path.logger",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.file_utils.inspect_cache",
    "allennlp.common.file_utils.remove_cache_entries",
    "allennlp.common.util.format_size",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.cached_path.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.format_size": {
  "data": {
   "shadows": "allennlp.common.util.format_size"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.inspect_cache": {
  "data": {
   "shadows": "allennlp.common.file_utils.inspect_cache"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.commands.cached_path.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.cached_path.remove_cache_entries": {
  "data": {
   "shadows": "allennlp.common.file_utils.remove_cache_entries"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.evaluate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.DataLoader": {
  "data": {
   "shadows": "allennlp.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.Evaluate": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.evaluate.Evaluate.add_subparser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.argparse",
    "int",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.evaluate.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.common_logging": {
  "data": {
   "shadows": "allennlp.common.logging"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.evaluate": {
  "data": {
   "shadows": "allennlp.training.util.evaluate"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.evaluate_from_args": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.commands.evaluate.argparse",
    "allennlp.commands.evaluate.json",
    "allennlp.commands.evaluate.logger",
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "allennlp.common.logging.INFO",
    "allennlp.common.logging.getLogger",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.DataLoader.from_params",
    "allennlp.models.archival.load_archive",
    "allennlp.training.util.evaluate",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.evaluate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.commands.evaluate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.evaluate.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.find_learning_rate.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.DataLoader": {
  "data": {
   "shadows": "allennlp.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.FindLearningRate": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.find_learning_rate.FindLearningRate.add_subparser": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.argparse",
    "float",
    "int",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.GradientDescentTrainer": {
  "data": {
   "shadows": "allennlp.training.GradientDescentTrainer"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Trainer": {
  "data": {
   "shadows": "allennlp.training.Trainer"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate._save_plot": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "allennlp.commands.find_learning_rate.logger",
    "allennlp.commands.find_learning_rate.matplotlib",
    "float",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xscale",
    "matplotlib.pyplot.ylabel",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate._smooth": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.common_logging": {
  "data": {
   "shadows": "allennlp.common.logging"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.create_serialization_dir": {
  "data": {
   "shadows": "allennlp.training.util.create_serialization_dir"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.datasets_from_params": {
  "data": {
   "shadows": "allennlp.training.util.datasets_from_params"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.find_learning_rate_from_args": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.argparse",
    "allennlp.commands.find_learning_rate.find_learning_rate_model",
    "allennlp.common.Params.from_file",
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.find_learning_rate_model": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate._save_plot",
    "allennlp.commands.find_learning_rate._smooth",
    "allennlp.commands.find_learning_rate.logger",
    "allennlp.commands.find_learning_rate.os",
    "allennlp.commands.find_learning_rate.re",
    "allennlp.commands.find_learning_rate.search_learning_rate",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.util.prepare_environment",
    "allennlp.data.DataLoader.from_params",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.models.Model.from_params",
    "allennlp.training.GradientDescentTrainer",
    "allennlp.training.Trainer.from_params",
    "allennlp.training.util.create_serialization_dir",
    "allennlp.training.util.datasets_from_params",
    "any",
    "bool",
    "float",
    "int",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.find_learning_rate.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.commands.find_learning_rate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.prepare_environment": {
  "data": {
   "shadows": "allennlp.common.util.prepare_environment"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.commands.find_learning_rate.search_learning_rate": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "allennlp.commands.find_learning_rate.itertools",
    "allennlp.commands.find_learning_rate.logger",
    "allennlp.commands.find_learning_rate.math",
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.GradientDescentTrainer",
    "bool",
    "enumerate",
    "float",
    "int",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.import_module_and_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_module_and_submodules"
  },
  "type": "import"
 },
 "allennlp.commands.import_plugins": {
  "data": {
   "shadows": "allennlp.common.plugins.import_plugins"
  },
  "type": "import"
 },
 "allennlp.commands.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.commands.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.main": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.commands.parse_args",
    "allennlp.common.util.import_module_and_submodules",
    "dir",
    "getattr",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.parse_args": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "add_subcommands",
    "allennlp.__version__",
    "allennlp.commands.ArgumentParserWithDefaults",
    "allennlp.commands.argparse",
    "allennlp.commands.subcommand.Subcommand.by_name",
    "allennlp.commands.sys",
    "allennlp.common.plugins.import_plugins",
    "bool",
    "set",
    "str",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.parse_args.add_subcommands": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand.by_name",
    "allennlp.commands.subcommand.Subcommand.list_available",
    "sorted",
    "str",
    "subcommand_class",
    "subcommand_class.requires_plugins"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict": {
  "data": {},
  "type": "module"
 },
 "allennlp.commands.predict.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.commands.predict.JsonDict": {
  "data": {
   "shadows": "allennlp.predictors.predictor.JsonDict"
  },
  "type": "import"
 },
 "allennlp.commands.predict.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Predict": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.predict.Predict.add_subparser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.commands.predict.argparse",
    "int",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.commands.predict.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.predict._PredictManager": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "allennlp.commands.predict._PredictManager.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "bool",
    "int",
    "open",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._get_instance_data": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._get_json_data": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "allennlp.commands.predict.sys",
    "allennlp.common.file_utils.cached_path",
    "allennlp.predictors.predictor.JsonDict",
    "open",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._maybe_print_to_console_and_file": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._predict_instances": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "len",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager._predict_json": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.JsonDict",
    "len",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._PredictManager.run": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "allennlp.commands.predict.json",
    "allennlp.common.util.lazy_groups_of",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._get_predictor": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.commands.predict.argparse",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.from_archive"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict._predict": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.commands.predict._PredictManager",
    "allennlp.commands.predict._get_predictor",
    "allennlp.commands.predict.argparse",
    "allennlp.commands.predict.sys",
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.predict.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.predict.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.commands.predict.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.predict.common_logging": {
  "data": {
   "shadows": "allennlp.common.logging"
  },
  "type": "import"
 },
 "allennlp.commands.predict.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.predict.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.commands.predict.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.commands.predict.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.predict.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.commands.print_results": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.print_results.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.print_results.PrintResults": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register",
    "bool"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.print_results.PrintResults.add_subparser": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.commands.print_results.argparse",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.print_results.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.commands.print_results.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.print_results.print_results_from_args": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.commands.print_results.argparse",
    "allennlp.commands.print_results.json",
    "allennlp.commands.print_results.os",
    "list",
    "open",
    "print",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.subcommand.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.Subcommand": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "bool",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.subcommand.Subcommand.add_subparser": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.commands.subcommand.argparse"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand.Subcommand.name": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand.Subcommand.register": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.T",
    "bool",
    "classmethod",
    "overrides.overrides",
    "str",
    "super",
    "typing.Callable",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand.Subcommand.register.add_name_to_reverse_registry": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.T",
    "super_register_fn",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.subcommand.T": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.commands.subcommand.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.subcommand.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.commands.test_install": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.test_install.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.test_install.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.TestInstall": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.test_install.TestInstall.add_subparser": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.commands.test_install.argparse",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install.VERSION": {
  "data": {
   "shadows": "allennlp.version.VERSION"
  },
  "type": "import"
 },
 "allennlp.commands.test_install._get_module_root": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.commands.test_install.allennlp",
    "allennlp.commands.test_install.pathlib"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install._run_test": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.commands.test_install._get_module_root",
    "allennlp.commands.test_install.argparse",
    "allennlp.commands.test_install.logger",
    "allennlp.commands.test_install.torch",
    "allennlp.common.util.import_module_and_submodules",
    "allennlp.version.VERSION"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.test_install.allennlp": {
  "data": {
   "shadows": "allennlp"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.import_module_and_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_module_and_submodules"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.commands.test_install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.commands.test_install.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.commands.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.commands.train.TrainModel",
    "allennlp.common.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "allennlp.commands.train.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.commands.train.CONFIG_NAME": {
  "data": {
   "shadows": "allennlp.models.archival.CONFIG_NAME"
  },
  "type": "import"
 },
 "allennlp.commands.train.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.commands.train.DataLoader": {
  "data": {
   "shadows": "allennlp.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.commands.train.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.commands.train.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.commands.train.Lazy": {
  "data": {
   "shadows": "allennlp.common.Lazy"
  },
  "type": "import"
 },
 "allennlp.commands.train.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.commands.train.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.commands.train.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.commands.train.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.commands.train.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.commands.train.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.commands.train.Subcommand": {
  "data": {
   "shadows": "allennlp.commands.subcommand.Subcommand"
  },
  "type": "import"
 },
 "allennlp.commands.train.Train": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.commands.subcommand.Subcommand",
    "allennlp.commands.subcommand.Subcommand.register"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.train.Train.add_subparser": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.commands.train.argparse",
    "int",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.TrainModel": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.commands.train.TrainModel.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "allennlp.data.DataLoader",
    "allennlp.models.model.Model",
    "allennlp.training.trainer.Trainer",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.TrainModel.finish": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "allennlp.commands.train.logger",
    "allennlp.commands.train.os",
    "allennlp.common.util.dump_metrics",
    "allennlp.training.util.evaluate",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.TrainModel.from_partial_objects": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "UserWarning",
    "allennlp.commands.train.logger",
    "allennlp.commands.train.os",
    "allennlp.commands.train.warnings",
    "allennlp.common.Lazy",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.DataLoader",
    "allennlp.data.DatasetReader",
    "allennlp.data.Vocabulary",
    "allennlp.models.model.Model",
    "allennlp.training.trainer.Trainer",
    "allennlp.training.util.read_all_datasets",
    "bool",
    "classmethod",
    "cls",
    "getattr",
    "int",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.TrainModel.run": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.commands.train.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.commands.train.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.commands.train._DEFAULT_WEIGHTS": {
  "data": {
   "shadows": "allennlp.models.model._DEFAULT_WEIGHTS"
  },
  "type": "import"
 },
 "allennlp.commands.train._train_worker": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "allennlp.commands.train.os",
    "allennlp.commands.train.torch",
    "allennlp.common.Params",
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "allennlp.common.logging.info",
    "allennlp.common.logging.prepare_global_logging",
    "allennlp.common.plugins.import_plugins",
    "allennlp.common.util.import_module_and_submodules",
    "allennlp.common.util.prepare_environment",
    "allennlp.models.archival.archive_model",
    "allennlp.models.model.Model",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "bool",
    "int",
    "len",
    "os.PathLike",
    "str",
    "torch.distributed.barrier",
    "torch.distributed.init_process_group",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.archive_model": {
  "data": {
   "shadows": "allennlp.models.archival.archive_model"
  },
  "type": "import"
 },
 "allennlp.commands.train.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.commands.train.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.commands.train.common_logging": {
  "data": {
   "shadows": "allennlp.common.logging"
  },
  "type": "import"
 },
 "allennlp.commands.train.common_util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.commands.train.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.commands.train.import_plugins": {
  "data": {
   "shadows": "allennlp.common.plugins.import_plugins"
  },
  "type": "import"
 },
 "allennlp.commands.train.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.commands.train.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.commands.train.mp": {
  "data": {
   "shadows": "torch.multiprocessing"
  },
  "type": "import"
 },
 "allennlp.commands.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.commands.train.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.commands.train.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.commands.train.train_model": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "allennlp.commands.train._train_worker",
    "allennlp.commands.train.os",
    "allennlp.common.Params",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "allennlp.common.logging.info",
    "allennlp.common.logging.prepare_global_logging",
    "allennlp.common.util.find_open_port",
    "allennlp.data.Vocabulary.from_files",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival.archive_model",
    "allennlp.models.archival.verify_include_in_archive",
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.load",
    "allennlp.training.util.create_serialization_dir",
    "allennlp.training.util.make_vocab_from_params",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "os.PathLike",
    "str",
    "torch.multiprocessing.spawn",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.train_model_from_args": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.commands.train.argparse",
    "allennlp.commands.train.train_model_from_file"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.train_model_from_file": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.commands.train.train_model",
    "allennlp.common.Params.from_file",
    "allennlp.models.model.Model",
    "bool",
    "int",
    "os.PathLike",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.commands.train.training_util": {
  "data": {
   "shadows": "allennlp.training.util"
  },
  "type": "import"
 },
 "allennlp.commands.train.verify_include_in_archive": {
  "data": {
   "shadows": "allennlp.models.archival.verify_include_in_archive"
  },
  "type": "import"
 },
 "allennlp.commands.train.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.common": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.common.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.common.Lazy": {
  "data": {
   "shadows": "allennlp.common.lazy.Lazy"
  },
  "type": "import"
 },
 "allennlp.common.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.common.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.cached_transformers.TransformerSpec",
    "allennlp.common.cached_transformers.logging",
    "allennlp.common.cached_transformers.transformers",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.common.cached_transformers.AutoModel": {
  "data": {
   "shadows": "transformers.AutoModel"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.TransformerSpec": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "allennlp.common.cached_transformers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.get": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.cached_transformers.TransformerSpec",
    "allennlp.common.cached_transformers.copy",
    "allennlp.common.cached_transformers.logger",
    "allennlp.common.cached_transformers.torch",
    "allennlp.common.cached_transformers.transformers",
    "allennlp.common.file_utils.cached_path",
    "bool",
    "len",
    "str",
    "strip_prefix",
    "transformers.AutoModel.from_pretrained",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.cached_transformers.get.strip_prefix": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.cached_transformers.get_tokenizer": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.common.cached_transformers.transformers",
    "allennlp.common.util.hash_object",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.cached_transformers.hash_object": {
  "data": {
   "shadows": "allennlp.common.util.hash_object"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.common.cached_transformers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.cached_transformers.transformers": {
  "data": {
   "shadows": "transformers"
  },
  "type": "import"
 },
 "allennlp.common.checks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.checks.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.common.checks.ConfigurationError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.common.checks.ConfigurationError.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.ConfigurationError.__str__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "allennlp.common.checks.ExperimentalFeatureWarning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "allennlp.common.checks.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.checks.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.checks.check_dimensions_match": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.check_for_gpu": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Exception",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.torch",
    "allennlp.common.util.int_to_device",
    "int",
    "isinstance",
    "list",
    "torch.cuda._check_driver",
    "torch.cuda.device_count",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.check_for_java": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.checks.subprocess",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "allennlp.common.checks.int_to_device": {
  "data": {
   "shadows": "allennlp.common.util.int_to_device"
  },
  "type": "import"
 },
 "allennlp.common.checks.log_pytorch_version_info": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.common.checks.logger",
    "allennlp.common.checks.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.common.checks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.checks.parse_cuda_device": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.checks.re",
    "from_list",
    "int",
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.parse_cuda_device.from_list": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.checks.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.common.checks.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.common.checks.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.from_params": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.from_params.inspect",
    "allennlp.common.from_params.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.from_params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.from_params.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.from_params.FromParams": {
  "data": {
   "lineno": 503
  },
  "type": "class"
 },
 "allennlp.common.from_params.FromParams.from_params": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params.T",
    "allennlp.common.from_params.create_extras",
    "allennlp.common.from_params.create_kwargs",
    "allennlp.common.from_params.is_base_registrable",
    "allennlp.common.from_params.logger",
    "allennlp.common.params.Params",
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.Registrable._registry.get",
    "classmethod",
    "constructor_to_call",
    "getattr",
    "hasattr",
    "isinstance",
    "object.__init__",
    "set",
    "str",
    "subclass",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Lazy": {
  "data": {
   "shadows": "allennlp.common.lazy.Lazy"
  },
  "type": "import"
 },
 "allennlp.common.from_params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.from_params.T": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "allennlp.common.from_params.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.from_params.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.from_params.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.from_params._NO_DEFAULT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.common.from_params.can_construct_from_params": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "all",
    "allennlp.common.lazy.Lazy",
    "bool",
    "float",
    "getattr",
    "hasattr",
    "int",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.common.from_params.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "allennlp.common.from_params.construct_arg": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params._NO_DEFAULT",
    "allennlp.common.from_params.can_construct_from_params",
    "allennlp.common.from_params.create_extras",
    "allennlp.common.lazy.Lazy",
    "allennlp.common.params.Params",
    "annotation",
    "annotation.__args__",
    "annotation.__name__",
    "bool",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "pathlib.Path",
    "set",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Mapping",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.construct_arg.constructor": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.create_extras": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "allennlp.common.from_params.T",
    "allennlp.common.from_params.takes_arg",
    "allennlp.common.from_params.takes_kwargs",
    "hasattr",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.create_kwargs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.common.from_params.T",
    "allennlp.common.from_params.infer_params",
    "allennlp.common.from_params.pop_and_construct_arg",
    "allennlp.common.from_params.remove_optional",
    "allennlp.common.params.Params",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.common.from_params.infer_params": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.common.from_params.T",
    "allennlp.common.from_params.inspect",
    "dict",
    "issubclass",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "allennlp.common.from_params.is_base_registrable": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.common.from_params.inspect",
    "allennlp.common.registrable.Registrable",
    "bool",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.common.from_params.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.common.from_params.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.from_params.pop_and_construct_arg": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params._NO_DEFAULT",
    "allennlp.common.from_params.construct_arg",
    "allennlp.common.from_params.logger",
    "allennlp.common.params.Params",
    "allennlp.models.archival.load_archive",
    "isinstance",
    "str",
    "type",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.remove_optional": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "getattr",
    "tuple",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.takes_arg": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params.inspect",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.from_params.takes_kwargs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.from_params.inspect",
    "any",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.common.lazy": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.lazy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.lazy.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.common.lazy.Lazy": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.lazy.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.common.lazy.Lazy.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.lazy.T",
    "allennlp.common.lazy.inspect",
    "typing.Callable",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.lazy.Lazy.__init__.constructor_to_use": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.params.Params"
   ]
  },
  "type": "function"
 },
 "allennlp.common.lazy.Lazy.construct": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.lazy.T"
   ]
  },
  "type": "function"
 },
 "allennlp.common.lazy.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.common.lazy.T": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.common.lazy.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.lazy.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.lazy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.lazy.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "allennlp.common.logging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.logging.AllenNlpLogger",
    "allennlp.common.logging.logging",
    "bool"
   ]
  },
  "type": "module"
 },
 "allennlp.common.logging.AllenNlpLogger": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.logging.logging"
   ]
  },
  "type": "class"
 },
 "allennlp.common.logging.AllenNlpLogger.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.common.logging.AllenNlpLogger.critical_once": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "allennlp.common.logging.AllenNlpLogger.debug_once": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "allennlp.common.logging.AllenNlpLogger.error_once": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.common.logging.AllenNlpLogger.info_once": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "allennlp.common.logging.AllenNlpLogger.warning_once": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "allennlp.common.logging.ErrorFilter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "logging.Filter"
   ]
  },
  "type": "class"
 },
 "allennlp.common.logging.ErrorFilter.filter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.logging.logging"
   ]
  },
  "type": "function"
 },
 "allennlp.common.logging.Filter": {
  "data": {
   "shadows": "logging.Filter"
  },
  "type": "import"
 },
 "allennlp.common.logging.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.common.logging.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.logging.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "allennlp.common.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.logging.prepare_global_logging": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.common.logging.ErrorFilter",
    "allennlp.common.logging.logging",
    "allennlp.common.logging.os",
    "allennlp.common.logging.sys",
    "allennlp.common.tqdm.logger.addHandler",
    "int",
    "os.PathLike",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.logging.prepare_global_logging.excepthook": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "allennlp.common.logging.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "allennlp.common.logging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.common.logging.tqdm_logger": {
  "data": {
   "shadows": "allennlp.common.tqdm.logger"
  },
  "type": "import"
 },
 "allennlp.common.params": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "allennlp.common.params.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.common.params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.params.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.params.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.params.MutableMapping": {
  "data": {
   "shadows": "collections.abc.MutableMapping"
  },
  "type": "import"
 },
 "allennlp.common.params.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.params.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "allennlp.common.params.Params": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "collections.abc.MutableMapping",
    "object"
   ]
  },
  "type": "class"
 },
 "allennlp.common.params.Params.__delitem__": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__getitem__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "allennlp.common.params._replace_none",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__iter__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__len__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__setitem__": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "allennlp.common.params.Params.__str__": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params._check_is_dict": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "dict",
    "enumerate",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_dict": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "allennlp.common.params.infer_and_cast",
    "bool",
    "log_recursively"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_dict.log_recursively": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "allennlp.common.params.logger",
    "dict",
    "isinstance",
    "log_recursively"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_flat_dict": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "recurse",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_flat_dict.recurse": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "recurse"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "order_dict",
    "order_func",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict.order_dict": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "isinstance",
    "order_dict",
    "order_func",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.as_ordered_dict.order_func": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.assert_empty": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.duplicate": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "allennlp.common.params.copy"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.from_file": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "_jsonnet.evaluate_file",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.params._environment_variables",
    "allennlp.common.params.json",
    "allennlp.common.params.parse_overrides",
    "allennlp.common.params.with_fallback",
    "classmethod",
    "cls",
    "dict",
    "isinstance",
    "os.PathLike",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.get": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.get_hash": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "allennlp.common.params.json",
    "allennlp.common.params.zlib",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params._is_dict_free",
    "allennlp.common.params.logger",
    "bool",
    "overrides.overrides",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_bool": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_choice": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_float": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.pop_int": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.Params.to_file": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "allennlp.common.params.json",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.common.params.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.params._environment_variables": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.common.params._is_encodable",
    "allennlp.common.params.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params._is_dict_free": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "all",
    "bool",
    "dict",
    "isinstance",
    "list",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params._is_encodable": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params._replace_none": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.common.params.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.common.params.evaluate_file": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.evaluate_snippet": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.infer_and_cast": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "float",
    "int",
    "isinstance",
    "list",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.params.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "allennlp.common.params.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.params.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.params.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.common.params.parse_overrides": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "_jsonnet.evaluate_snippet",
    "allennlp.common.params._environment_variables",
    "allennlp.common.params.json",
    "allennlp.common.params.unflatten",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.pop_choice": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.remove_keys_from_params": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "isinstance",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.unflatten": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.with_fallback": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.common.params.copy",
    "merge",
    "set",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.with_fallback.merge": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.copy",
    "allennlp.common.params.with_fallback",
    "dict",
    "int",
    "isinstance",
    "list",
    "merge",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.common.params.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "allennlp.common.plugins": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.plugins.logging",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.common.plugins.DEFAULT_PLUGINS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "allennlp.common.plugins.GLOBAL_PLUGINS_FILENAME": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.common.plugins.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.common.plugins.LOCAL_PLUGINS_FILENAME": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.common.plugins.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.common.plugins.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.plugins.discover_file_plugins": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "allennlp.common.plugins.LOCAL_PLUGINS_FILENAME",
    "open",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.common.plugins.discover_plugins": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.common.plugins.GLOBAL_PLUGINS_FILENAME",
    "allennlp.common.plugins.LOCAL_PLUGINS_FILENAME",
    "allennlp.common.plugins.discover_file_plugins",
    "allennlp.common.plugins.os",
    "allennlp.common.util.push_python_path",
    "set",
    "str",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.common.plugins.import_module_and_submodules": {
  "data": {
   "shadows": "allennlp.common.util.import_module_and_submodules"
  },
  "type": "import"
 },
 "allennlp.common.plugins.import_plugins": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "allennlp.common.plugins.DEFAULT_PLUGINS",
    "allennlp.common.plugins.discover_plugins",
    "allennlp.common.plugins.importlib",
    "allennlp.common.plugins.logger",
    "allennlp.common.plugins.os",
    "allennlp.common.plugins.sys",
    "allennlp.common.util.import_module_and_submodules"
   ]
  },
  "type": "function"
 },
 "allennlp.common.plugins.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "allennlp.common.plugins.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.common.plugins.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.plugins.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.plugins.push_python_path": {
  "data": {
   "shadows": "allennlp.common.util.push_python_path"
  },
  "type": "import"
 },
 "allennlp.common.plugins.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.common.registrable": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.common.registrable.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.common.registrable.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.registrable.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.registrable.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.common.registrable.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Registrable": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.from_params.FromParams",
    "collections.defaultdict",
    "dict",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "allennlp.common.registrable.Registrable.by_name": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "allennlp.common.registrable.T",
    "allennlp.common.registrable.logger",
    "classmethod",
    "getattr",
    "str",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.list_available": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.Registrable",
    "classmethod",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.register": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.T",
    "bool",
    "classmethod",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.register.add_subclass_to_registry": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.T",
    "allennlp.common.registrable.logger",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.Registrable.resolve_class_name": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "AttributeError",
    "ModuleNotFoundError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.registrable.Registrable",
    "allennlp.common.registrable.T",
    "allennlp.common.registrable.importlib",
    "classmethod",
    "getattr",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.common.registrable.T": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.common.registrable.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.registrable.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.common.registrable.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.common.registrable.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.common.registrable.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "allennlp.common.registrable.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.common.registrable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.testing": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.testing.torch"
   ]
  },
  "type": "module"
 },
 "allennlp.common.testing.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.testing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.testing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.testing.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.Metric"
  },
  "type": "import"
 },
 "allennlp.common.testing.ModelTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.model_test_case.ModelTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.testing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.testing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.testing._available_devices": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.common.testing.assert_allclose": {
  "data": {
   "shadows": "torch.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.common.testing.assert_metrics_values": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "float",
    "str",
    "torch.testing.assert_allclose",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.cpu_or_gpu": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.testing.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.distributed_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.testing.distributed_test.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.init_process": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.testing.distributed_test.datetime",
    "allennlp.common.testing.distributed_test.torch",
    "func",
    "int",
    "str",
    "torch.distributed.barrier",
    "torch.distributed.init_process_group",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.distributed_test.mp": {
  "data": {
   "shadows": "torch.multiprocessing"
  },
  "type": "import"
 },
 "allennlp.common.testing.distributed_test.run_distributed_test": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.testing.distributed_test.init_process",
    "any",
    "func",
    "int",
    "len",
    "torch.multiprocessing.start_processes",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.distributed_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.testing.global_distributed_metric": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.common.testing.assert_metrics_values",
    "allennlp.common.testing.torch",
    "allennlp.training.metrics.Metric",
    "bool",
    "float",
    "int",
    "isinstance",
    "metric",
    "metric.get_metric",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.testing.interpret_test.FakeModelForTestingInterpret": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.models.model.Model"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.interpret_test.FakeModelForTestingInterpret.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.testing.interpret_test.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test.FakeModelForTestingInterpret.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.testing.interpret_test.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test.FakeModelForTestingInterpret.make_output_human_readable": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.testing.interpret_test.torch",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test.FakePredictorForTestingInterpret": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.predictors.TextClassifierPredictor"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.interpret_test.FakePredictorForTestingInterpret.get_interpretable_layer": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test.FakePredictorForTestingInterpret.get_interpretable_text_field_embedder": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "allennlp.common.testing.interpret_test.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.common.testing.interpret_test.TextClassifierPredictor": {
  "data": {
   "shadows": "allennlp.predictors.TextClassifierPredictor"
  },
  "type": "import"
 },
 "allennlp.common.testing.interpret_test.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case": {
  "data": {},
  "type": "module"
 },
 "allennlp.common.testing.model_test_case.AllenNlpTestCase": {
  "data": {
   "shadows": "allennlp.common.testing.test_case.AllenNlpTestCase"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.DataLoader": {
  "data": {
   "shadows": "allennlp.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.GradientDescentTrainer": {
  "data": {
   "shadows": "allennlp.training.GradientDescentTrainer"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.AllenNlpTestCase"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.assert_fields_equal": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.torch",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "print",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.check_model_computes_gradients_correctly": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "allennlp.common.testing.model_test_case.torch",
    "allennlp.models.Model",
    "bool",
    "float",
    "getattr",
    "isinstance",
    "model",
    "model.named_modules",
    "model.named_parameters",
    "model.parameters",
    "model.train",
    "print",
    "setattr",
    "staticmethod",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.ensure_batch_predictions_are_consistent": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "allennlp.common.testing.model_test_case.torch",
    "allennlp.data.batch.Batch",
    "enumerate",
    "isinstance",
    "numpy.testing.assert_allclose",
    "slice",
    "str",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.ensure_model_can_train": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "abs",
    "allennlp.training.GradientDescentTrainer",
    "bool",
    "float",
    "iter",
    "next",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.ensure_model_can_train_save_and_load": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "abs",
    "allennlp.commands.train.train_model_from_file",
    "allennlp.common.Params",
    "allennlp.common.Params.from_file",
    "allennlp.common.testing.model_test_case.copy",
    "allennlp.common.testing.model_test_case.json",
    "allennlp.data.DataLoader.from_params",
    "allennlp.models.load_archive",
    "bool",
    "float",
    "hasattr",
    "int",
    "iter",
    "loaded_model",
    "loaded_model.train",
    "model",
    "next",
    "numpy.testing.assert_allclose",
    "os.PathLike",
    "print",
    "str",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.ModelTestCase.set_up_model": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.common.Params.from_file",
    "allennlp.common.testing.model_test_case.numpy",
    "allennlp.common.testing.model_test_case.random",
    "allennlp.common.testing.model_test_case.torch",
    "allennlp.data.DatasetReader.from_params",
    "allennlp.data.Vocabulary.from_instances",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.data.batch.Batch",
    "allennlp.models.Model.from_params",
    "int",
    "list",
    "os.PathLike",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.model_test_case.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.load_archive": {
  "data": {
   "shadows": "allennlp.models.load_archive"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.testing.model_test_case.train_model_from_file": {
  "data": {
   "shadows": "allennlp.commands.train.train_model_from_file"
  },
  "type": "import"
 },
 "allennlp.common.testing.multi_device": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.testing._available_devices",
    "allennlp.common.testing.pytest"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "allennlp.common.testing.requires_gpu": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.testing.pytest",
    "allennlp.common.testing.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.requires_multi_gpu": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.common.testing.pytest",
    "allennlp.common.testing.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.run_distributed_test": {
  "data": {
   "shadows": "allennlp.common.testing.distributed_test.run_distributed_test"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.tempfile"
   ]
  },
  "type": "module"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.pathlib"
   ]
  },
  "type": "class"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase.setup_method": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.common.checks.log_pytorch_version_info",
    "allennlp.common.testing.test_case.TEST_DIR",
    "allennlp.common.testing.test_case.logging",
    "allennlp.common.testing.test_case.os",
    "allennlp.common.testing.test_case.pathlib"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.test_case.AllenNlpTestCase.teardown_method": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.testing.test_case.shutil"
   ]
  },
  "type": "function"
 },
 "allennlp.common.testing.test_case.TEST_DIR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.common.testing.test_case.log_pytorch_version_info": {
  "data": {
   "shadows": "allennlp.common.checks.log_pytorch_version_info"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.common.testing.test_case.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.common.testing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.common.tqdm": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.logging.getLogger",
    "allennlp.common.tqdm.SHELL",
    "allennlp.common.tqdm.logger",
    "get_ipython",
    "str",
    "tqdm.tqdm.monitor_interval",
    "type"
   ]
  },
  "type": "module"
 },
 "allennlp.common.tqdm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.common.tqdm.SHELL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.common.tqdm.Tqdm": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "allennlp.common.tqdm.Tqdm.tqdm": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "allennlp.common.tqdm.TqdmToLogsWriter",
    "staticmethod",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm.TqdmToLogsWriter": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "allennlp.common.tqdm.TqdmToLogsWriter.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "allennlp.common.tqdm.TqdmToLogsWriter.flush": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.common.tqdm.sys"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm.TqdmToLogsWriter.write": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.common.logging.FILE_FRIENDLY_LOGGING",
    "allennlp.common.tqdm.logger",
    "allennlp.common.tqdm.replace_cr_with_newline",
    "allennlp.common.tqdm.sys",
    "len",
    "str",
    "time.time",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm._tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "allennlp.common.tqdm.common_logging": {
  "data": {
   "shadows": "allennlp.common.logging"
  },
  "type": "import"
 },
 "allennlp.common.tqdm.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.common.tqdm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.common.tqdm.replace_cr_with_newline": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.common.tqdm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.common.tqdm.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "allennlp.data": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.AllennlpDataset": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset"
  },
  "type": "import"
 },
 "allennlp.data.AllennlpLazyDataset": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset"
  },
  "type": "import"
 },
 "allennlp.data.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.data.BatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.BatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.DataLoader": {
  "data": {
   "shadows": "allennlp.data.dataloader.DataLoader"
  },
  "type": "import"
 },
 "allennlp.data.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.PyTorchDataLoader": {
  "data": {
   "shadows": "allennlp.data.dataloader.PyTorchDataLoader"
  },
  "type": "import"
 },
 "allennlp.data.Sampler": {
  "data": {
   "shadows": "allennlp.data.samplers.Sampler"
  },
  "type": "import"
 },
 "allennlp.data.TextFieldTensors": {
  "data": {
   "shadows": "allennlp.data.fields.text_field.TextFieldTensors"
  },
  "type": "import"
 },
 "allennlp.data.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.allennlp_collate": {
  "data": {
   "shadows": "allennlp.data.dataloader.allennlp_collate"
  },
  "type": "import"
 },
 "allennlp.data.batch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.batch.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.batch.Batch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.batch.Batch.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.util.ensure_list",
    "allennlp.data.instance.Instance",
    "super",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch.__iter__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch._check_types": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch.as_tensor_dict": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "allennlp.data.batch.logger",
    "allennlp.data.batch.torch",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch.get_padding_lengths": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int",
    "list",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch.index_instances": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.Batch.print_statistics": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.batch.numpy",
    "collections.defaultdict",
    "len",
    "list",
    "print",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.batch.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.batch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.batch.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.batch.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.batch.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.batch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.batch.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.batch.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.batch.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.batch.ensure_list": {
  "data": {
   "shadows": "allennlp.common.util.ensure_list"
  },
  "type": "import"
 },
 "allennlp.data.batch.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.data.batch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.batch.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.batch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.dataloader": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.dataloader.torch",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataloader.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.BatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.BatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.DataLoader": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataloader.DataLoader.__iter__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.dataloader.TensorDict",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.DataLoader.__len__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.Lazy": {
  "data": {
   "shadows": "allennlp.common.lazy.Lazy"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.PyTorchDataLoader": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.dataloader.DataLoader",
    "torch.utils.data.DataLoader"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataloader.PyTorchDataLoader.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.dataloader.allennlp_collate",
    "allennlp.data.samplers.BatchSampler",
    "allennlp.data.samplers.Sampler",
    "bool",
    "int",
    "str",
    "super",
    "torch.utils.data.Dataset"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.PyTorchDataLoader.__iter__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.PyTorchDataLoader.__len__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.PyTorchDataLoader.from_partial_objects": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.common.lazy.Lazy",
    "allennlp.data.dataloader.allennlp_collate",
    "allennlp.data.samplers.BatchSampler",
    "allennlp.data.samplers.Sampler",
    "bool",
    "classmethod",
    "cls",
    "int",
    "str",
    "torch.utils.data.Dataset"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.Sampler": {
  "data": {
   "shadows": "allennlp.data.samplers.Sampler"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.TensorDict": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataloader.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.allennlp_collate": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.batch.Batch",
    "allennlp.data.dataloader.TensorDict",
    "allennlp.data.instance.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataloader.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "allennlp.data.dataloader.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.AllennlpDataset": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.AllennlpLazyDataset": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.BabiReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.babi.BabiReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.Conll2003DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.InterleavingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.SequenceTaggingDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.ShardedDatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.sharded_dataset_reader.ShardedDatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.TextClassificationJsonReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.babi.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.babi.BabiReader": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.babi.BabiReader.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "bool",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.babi.BabiReader._read": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.babi.logger",
    "int",
    "open",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.babi.BabiReader.text_to_instance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.IndexField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.babi.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.babi.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.babi.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.conll2003.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.conll2003.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader._read": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.conll2003._is_divider",
    "allennlp.data.dataset_readers.conll2003.itertools",
    "allennlp.data.dataset_readers.conll2003.logger",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "list",
    "open",
    "overrides.overrides",
    "str",
    "typing.Iterable",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.Conll2003DatasetReader.text_to_instance": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.to_bioul",
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003._is_divider": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.conll2003.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.conll2003.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.conll2003.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.dataset_reader.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.utils.data.Dataset"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset.__getitem__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "allennlp.data.vocabulary.Vocabulary",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset.__len__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset.index_with": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "torch.utils.data.IterableDataset"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "allennlp.data.vocabulary.Vocabulary",
    "str",
    "super",
    "typing.Callable",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset.__iter__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset.index_with": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.CacheFile": {
  "data": {
   "shadows": "allennlp.common.file_utils.CacheFile"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Dataset": {
  "data": {
   "shadows": "torch.utils.data.Dataset"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "int"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.os",
    "bool",
    "int",
    "pathlib.Path",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._get_cache_location_for_file_path": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "allennlp.common.util.flatten_filename",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._instance_iterator": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "allennlp.common.file_utils.CacheFile",
    "allennlp.common.util.is_distributed",
    "allennlp.data.dataset_readers.dataset_reader.logger",
    "allennlp.data.dataset_readers.dataset_reader.os",
    "allennlp.data.instance.Instance",
    "filelock.FileLock",
    "filelock.Timeout",
    "open",
    "str",
    "torch.utils.data.get_worker_info",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._instances_from_cache_file": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance",
    "open",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._instances_to_cache_file": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.file_utils.CacheFile",
    "allennlp.data.dataset_readers.dataset_reader.logger"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._multi_worker_islice": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "UserWarning",
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.data.dataset_readers.dataset_reader.itertools",
    "allennlp.data.dataset_readers.dataset_reader.warnings",
    "allennlp.data.instance.Instance",
    "bool",
    "isinstance",
    "list",
    "torch.distributed.get_rank",
    "torch.distributed.get_world_size",
    "torch.utils.data.get_worker_info",
    "transform",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader._read": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.deserialize_instance": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.jsonpickle",
    "allennlp.data.instance.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.read": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UserWarning",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.data.dataset_readers.dataset_reader.AllennlpDataset",
    "allennlp.data.dataset_readers.dataset_reader.AllennlpLazyDataset",
    "allennlp.data.dataset_readers.dataset_reader.logger",
    "allennlp.data.dataset_readers.dataset_reader.os",
    "allennlp.data.dataset_readers.dataset_reader.warnings",
    "filelock.FileLock",
    "filelock.Timeout",
    "getattr",
    "isinstance",
    "list",
    "pathlib.Path",
    "str",
    "torch.utils.data.get_worker_info",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.serialize_instance": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.jsonpickle",
    "allennlp.data.instance.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.DatasetReader.text_to_instance": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_reader.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.IterableDataset": {
  "data": {
   "shadows": "torch.utils.data.IterableDataset"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Timeout": {
  "data": {
   "shadows": "filelock.Timeout"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.get_worker_info": {
  "data": {
   "shadows": "torch.utils.data.get_worker_info"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.jsonpickle": {
  "data": {
   "shadows": "jsonpickle"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_reader.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.bio_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.bioul_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.enumerate_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.iob1_to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "str",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence.__str__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.T": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedSpan": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils._iob1_start_of_chunk": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "enumerate",
    "int",
    "list",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "enumerate",
    "extract_bmes_tag_label",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans.extract_bmes_tag_label": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.enumerate_spans": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.T",
    "bool",
    "filter_function",
    "int",
    "len",
    "min",
    "range",
    "slice",
    "typing.Callable",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "allennlp.data.dataset_readers.dataset_utils.span_utils._iob1_start_of_chunk",
    "enumerate",
    "int",
    "list",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_to_bioul": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.warnings",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence",
    "len",
    "process_stack",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.pop_replace_append": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "replace_label"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.process_stack": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "pop_replace_append"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul.replace_label": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.dataset_utils.span_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.dataset_utils.to_bioul": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.to_bioul"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.interleaving_dataset_reader._VALID_SCHEMES",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader._read": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.interleaving_dataset_reader.json",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader._read_all_at_once": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.data.fields.MetadataField",
    "allennlp.data.instance.Instance",
    "str",
    "typing.Iterable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader._read_round_robin": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "StopIteration",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.instance.Instance",
    "iter",
    "next",
    "set",
    "str",
    "typing.Iterable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.InterleavingDatasetReader.text_to_instance": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader._VALID_SCHEMES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.interleaving_dataset_reader.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.sequence_tagging.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.sequence_tagging.DEFAULT_WORD_TAG_DELIMITER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.sequence_tagging.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.sequence_tagging.DEFAULT_WORD_TAG_DELIMITER",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader._read": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.sequence_tagging.logger",
    "allennlp.data.tokenizers.Token",
    "open",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SequenceTaggingDatasetReader.text_to_instance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.MetadataField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "allennlp.data.tokenizers.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sequence_tagging.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.sequence_tagging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sequence_tagging.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.sharded_dataset_reader.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.ShardedDatasetReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.ShardedDatasetReader.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.util.is_distributed",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.sharded_dataset_reader.torch",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.ShardedDatasetReader._read": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "FileNotFoundError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.sharded_dataset_reader.glob",
    "allennlp.data.dataset_readers.sharded_dataset_reader.logger",
    "allennlp.data.dataset_readers.sharded_dataset_reader.os",
    "allennlp.data.instance.Instance",
    "enumerate",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.ShardedDatasetReader.text_to_instance": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.sharded_dataset_reader.util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.dataset_readers.text_classification_json.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.dataset_readers.text_classification_json.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.Field": {
  "data": {
   "shadows": "allennlp.data.fields.Field"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.ListField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.SpacySentenceSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.SpacyTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.SpacyTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader",
    "allennlp.data.dataset_readers.dataset_reader.DatasetReader.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.tokenizers.SpacyTokenizer",
    "allennlp.data.tokenizers.Tokenizer",
    "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter",
    "bool",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader._read": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.dataset_readers.text_classification_json.json",
    "int",
    "open",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader._truncate": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextClassificationJsonReader.text_to_instance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.data.fields.Field",
    "allennlp.data.fields.LabelField",
    "allennlp.data.fields.ListField",
    "allennlp.data.fields.TextField",
    "allennlp.data.instance.Instance",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.dataset_readers.text_classification_json.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.dataset_readers.text_classification_json.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.dataset_readers.text_classification_json.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.AdjacencyField": {
  "data": {
   "shadows": "allennlp.data.fields.adjacency_field.AdjacencyField"
  },
  "type": "import"
 },
 "allennlp.data.fields.ArrayField": {
  "data": {
   "shadows": "allennlp.data.fields.array_field.ArrayField"
  },
  "type": "import"
 },
 "allennlp.data.fields.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.FlagField": {
  "data": {
   "shadows": "allennlp.data.fields.flag_field.FlagField"
  },
  "type": "import"
 },
 "allennlp.data.fields.IndexField": {
  "data": {
   "shadows": "allennlp.data.fields.index_field.IndexField"
  },
  "type": "import"
 },
 "allennlp.data.fields.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.label_field.LabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.ListField": {
  "data": {
   "shadows": "allennlp.data.fields.list_field.ListField"
  },
  "type": "import"
 },
 "allennlp.data.fields.MetadataField": {
  "data": {
   "shadows": "allennlp.data.fields.metadata_field.MetadataField"
  },
  "type": "import"
 },
 "allennlp.data.fields.MultiLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.multilabel_field.MultiLabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.NamespaceSwappingField": {
  "data": {
   "shadows": "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_label_field.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.data.fields.SpanField": {
  "data": {
   "shadows": "allennlp.data.fields.span_field.SpanField"
  },
  "type": "import"
 },
 "allennlp.data.fields.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.text_field.TextField"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.adjacency_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.torch",
    "allennlp.data.fields.field.Field",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.__len__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.__str__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.as_tensor": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.torch",
    "int",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.count_vocab_items": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.empty_field": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.data.fields.adjacency_field.AdjacencyField",
    "int",
    "overrides.overrides",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.get_padding_lengths": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.AdjacencyField.index": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.adjacency_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.fields.adjacency_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.adjacency_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.array_field.ArrayField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "allennlp.data.fields.field.Field"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.array_field.ArrayField.__eq__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.__len__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.__str__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.as_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.numpy",
    "allennlp.data.fields.array_field.torch",
    "int",
    "len",
    "list",
    "overrides.overrides",
    "range",
    "slice",
    "str",
    "tuple",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.empty_field": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.fields.array_field.ArrayField",
    "allennlp.data.fields.array_field.numpy",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.ArrayField.get_padding_lengths": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.array_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.array_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.fields.field.torch",
    "str",
    "typing.Dict",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.field.DataArray": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.data.fields.field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.Field": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.field.Field.__eq__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.__len__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.as_tensor": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.fields.field.DataArray",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.batch_tensors": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.count_vocab_items": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.duplicate": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.empty_field": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.get_padding_lengths": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Field.index": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.field.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.data.fields.field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.flag_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.flag_field.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.fields.flag_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.flag_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.flag_field.FlagField": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.flag_field.FlagField.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.__len__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.__str__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.as_tensor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.batch_tensors": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "overrides.overrides",
    "set",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.empty_field": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.data.fields.flag_field.FlagField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.FlagField.get_padding_lengths": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.flag_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.flag_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.index_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.IndexField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.index_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.index_field.IndexField.__eq__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.__len__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.__str__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.as_tensor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.data.fields.index_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.empty_field": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.fields.index_field.IndexField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.IndexField.get_padding_lengths": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.index_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.index_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.label_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.label_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.LabelField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.label_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.label_field.LabelField.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int",
    "isinstance",
    "str",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.__len__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.__str__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.as_tensor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.count_vocab_items": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.empty_field": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "allennlp.data.fields.label_field.LabelField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.get_padding_lengths": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.LabelField.index": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.label_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.fields.label_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.label_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.list_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.ListField": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.sequence_field.SequenceField"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.list_field.ListField.__getitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__iter__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__len__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.__str__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.as_tensor": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.fields.field.DataArray",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.batch_tensors": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.count_vocab_items": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.empty_field": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.fields.list_field.ListField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.get_padding_lengths": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "max",
    "overrides.overrides",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.index": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.ListField.sequence_length": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "len",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.list_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.list_field.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.metadata_field.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.data.fields.metadata_field.MetadataField": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.Field",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__getitem__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__iter__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__len__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.__str__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.as_tensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.batch_tensors": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.empty_field": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.fields.metadata_field.MetadataField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.MetadataField.get_padding_lengths": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.metadata_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.multilabel_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.multilabel_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.multilabel_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.__len__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.__str__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.as_tensor": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.count_vocab_items": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.empty_field": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "allennlp.data.fields.multilabel_field.MultiLabelField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.get_padding_lengths": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.MultiLabelField.index": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.multilabel_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.fields.multilabel_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.multilabel_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.namespace_swapping_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.namespace_swapping_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.__len__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.as_tensor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.fields.namespace_swapping_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.empty_field": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.get_padding_lengths": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.NamespaceSwappingField.index": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.namespace_swapping_field.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.fields.namespace_swapping_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.sequence_field.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_field.SequenceField": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "allennlp.data.fields.field.Field"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.sequence_field.SequenceField.empty_field": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_field.SequenceField.sequence_length": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.fields.sequence_label_field.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.sequence_label_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.sequence_label_field.torch",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__getitem__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "len",
    "str",
    "type",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__iter__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "iter",
    "str",
    "typing.Iterator",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__len__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.__str__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField._maybe_warn_for_namespace": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.as_tensor": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.fields.sequence_label_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.count_vocab_items": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.empty_field": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_label_field.SequenceLabelField",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.get_padding_lengths": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.SequenceLabelField.index": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.sequence_label_field.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.data.fields.sequence_label_field.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.sequence_label_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.fields.span_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.SpanField": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.fields.span_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.span_field.SpanField.__eq__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "allennlp.data.fields.sequence_field.SequenceField",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.__len__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.__str__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.as_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "allennlp.data.fields.span_field.torch",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.empty_field": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.fields.span_field.SpanField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.SpanField.get_padding_lengths": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.span_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.span_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "allennlp.data.fields.text_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.SequenceField": {
  "data": {
   "shadows": "allennlp.data.fields.sequence_field.SequenceField"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.SpacyToken": {
  "data": {
   "shadows": "spacy.tokens.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.TextField": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.fields.sequence_field.SequenceField",
    "allennlp.data.fields.text_field.TextFieldTensors"
   ]
  },
  "type": "class"
 },
 "allennlp.data.fields.text_field.TextField.__getitem__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.tokenizers.Token",
    "isinstance",
    "spacy.tokens.Token",
    "str",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__iter__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "iter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__len__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.__str__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.as_tensor": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.fields.text_field.TextFieldTensors",
    "collections.defaultdict",
    "dict",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.batch_tensors": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.TextFieldTensors",
    "allennlp.data.fields.text_field.torch",
    "allennlp.nn.util.batch_tensor_dicts",
    "collections.defaultdict",
    "list",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.count_vocab_items": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.duplicate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.TextField",
    "copy.deepcopy",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.empty_field": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.data.fields.text_field.TextField",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.get_padding_lengths": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.index": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextField.sequence_length": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "len",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.fields.text_field.TextFieldTensors": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.data.fields.text_field.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.fields.text_field.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.data.instance": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.instance.DataArray": {
  "data": {
   "shadows": "allennlp.data.fields.field.DataArray"
  },
  "type": "import"
 },
 "allennlp.data.instance.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.instance.Field": {
  "data": {
   "shadows": "allennlp.data.fields.field.Field"
  },
  "type": "import"
 },
 "allennlp.data.instance.Instance": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "allennlp.data.instance.Instance.__getitem__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "str",
    "typing.MutableMapping"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__iter__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__len__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.__str__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.add_field": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.data.fields.field.Field",
    "allennlp.data.vocabulary.Vocabulary",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.as_tensor_dict": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.data.fields.field.DataArray",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.count_vocab_items": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.duplicate": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "allennlp.data.instance.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.get_padding_lengths": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Instance.index_fields": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.Vocabulary"
   ]
  },
  "type": "function"
 },
 "allennlp.data.instance.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "allennlp.data.instance.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "allennlp.data.instance.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.samplers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.samplers.BasicBatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.BasicBatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.BatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.BatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.BucketBatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.MaxTokensBatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.RandomSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.RandomSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.Sampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.Sampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.SequentialSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.SequentialSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.SubsetRandomSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.SubsetRandomSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.WeightedRandomSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.samplers.WeightedRandomSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.samplers.bucket_batch_sampler.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.BatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.data.samplers.BatchSampler",
    "allennlp.data.samplers.BatchSampler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "torch.utils.data.Dataset",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler.__iter__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.samplers.bucket_batch_sampler.random",
    "int",
    "len",
    "list",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler.__len__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "allennlp.data.samplers.bucket_batch_sampler.math",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler._argsort_by_padding": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.instance.Instance",
    "allennlp.data.samplers.bucket_batch_sampler.add_noise_to_value",
    "allennlp.data.samplers.bucket_batch_sampler.logger",
    "enumerate",
    "int",
    "len",
    "list",
    "typing.Iterable",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.BucketBatchSampler._guess_sorting_keys": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.data.instance.Instance",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.Instance": {
  "data": {
   "shadows": "allennlp.data.instance.Instance"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.add_noise_to_value": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.samplers.bucket_batch_sampler.random",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.bucket_batch_sampler.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.samplers.bucket_batch_sampler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.data.samplers.bucket_batch_sampler.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.samplers.max_tokens_batch_sampler.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.A": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.BatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.BatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.BucketBatchSampler": {
  "data": {
   "shadows": "allennlp.data.samplers.BucketBatchSampler"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.samplers.BatchSampler.register",
    "allennlp.data.samplers.BucketBatchSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "torch.utils.data.Dataset",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler.__iter__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.samplers.max_tokens_batch_sampler.random",
    "int",
    "list",
    "max",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler.__len__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.MaxTokensBatchSampler._lazy_groups_of_max_size": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.data.samplers.max_tokens_batch_sampler.A",
    "allennlp.data.samplers.max_tokens_batch_sampler.logger",
    "int",
    "iter",
    "len",
    "max",
    "typing.Iterable",
    "typing.Iterator",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.samplers.max_tokens_batch_sampler.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "allennlp.data.samplers.samplers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.samplers.samplers.BasicBatchSampler": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.BatchSampler",
    "torch.utils.data.BatchSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.BasicBatchSampler.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.Sampler",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.BatchSampler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.BatchSampler.__iter__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.samplers.samplers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.samplers.samplers.RandomSampler": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.Sampler",
    "torch.utils.data.RandomSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.RandomSampler.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "int",
    "super",
    "torch.utils.data.Dataset"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.samplers.samplers.Sampler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.Sampler.__iter__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.SequentialSampler": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.Sampler",
    "torch.utils.data.SequentialSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.SequentialSampler.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super",
    "torch.utils.data.Dataset"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.SubsetRandomSampler": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.Sampler",
    "torch.utils.data.SubsetRandomSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.SubsetRandomSampler.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.WeightedRandomSampler": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.data.samplers.samplers.Sampler",
    "torch.utils.data.WeightedRandomSampler"
   ]
  },
  "type": "class"
 },
 "allennlp.data.samplers.samplers.WeightedRandomSampler.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.samplers.samplers.data": {
  "data": {
   "shadows": "torch.utils.data"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.PretrainedTransformerIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.PretrainedTransformerMismatchedIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.SpacyTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.elmo_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer._make_bos_eos"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.__eq__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.convert_word_to_char_ids": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper",
    "int",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.elmo_indexer.torch",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.as_padded_tensor_dict.padding_token": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.count_vocab_items": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.get_empty_token_list": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer.tokens_to_indices": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer._make_bos_eos": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.elmo_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.elmo_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.pretrained_transformer_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.__eq__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "NotImplemented",
    "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.tokenizers.PretrainedTransformerTokenizer",
    "int",
    "len",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer._add_encoding_to_vocabulary_if_needed": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.vocabulary.Vocabulary",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer._extract_token_and_type_ids": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer._postprocess_output": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.pretrained_transformer_indexer.torch",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "bool",
    "int",
    "isinstance",
    "len",
    "mktensor",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.count_vocab_items": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.get_empty_token_list": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.indices_to_tokens": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "len",
    "overrides.overrides",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerIndexer.tokens_to_indices": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "len",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.PretrainedTransformerTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.PretrainedTransformerTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.PretrainedTransformerIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.TokenIndexer",
    "allennlp.data.token_indexers.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.__eq__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplemented",
    "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.PretrainedTransformerIndexer",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.torch",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.count_vocab_items": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.get_empty_token_list": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.PretrainedTransformerMismatchedIndexer.tokens_to_indices": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "len",
    "overrides.overrides",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.pretrained_transformer_mismatched_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.single_id_token_indexer._DEFAULT_VALUE",
    "allennlp.data.tokenizers.Token",
    "bool",
    "int",
    "str",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer._get_feature_value": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.data.token_indexers.single_id_token_indexer._DEFAULT_VALUE",
    "allennlp.data.tokenizers.Token",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.get_empty_token_list": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.single_id_token_indexer.itertools",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer._DEFAULT_VALUE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.single_id_token_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.spacy_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyToken": {
  "data": {
   "shadows": "spacy.tokens.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.spacy_indexer.torch",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer.as_padded_tensor_dict.padding_token": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.spacy_indexer.numpy"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.Token",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.spacy_indexer.SpacyTokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "allennlp.data.token_indexers.spacy_indexer.numpy",
    "allennlp.data.vocabulary.Vocabulary",
    "isinstance",
    "overrides.overrides",
    "spacy.tokens.Token",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.spacy_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.spacy_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.token_indexers.token_characters_indexer.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.IndexedTokenList": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.TokenIndexer",
    "allennlp.data.token_indexers.token_indexer.TokenIndexer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "UserWarning",
    "allennlp.data.token_indexers.token_characters_indexer.warnings",
    "allennlp.data.tokenizers.CharacterTokenizer",
    "allennlp.data.tokenizers.Token",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.token_characters_indexer.itertools",
    "allennlp.data.token_indexers.token_characters_indexer.torch",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "len",
    "list",
    "max",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.count_vocab_items": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.tokenizers.Token",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.get_empty_token_list": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.get_padding_lengths": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "len",
    "max",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer.tokens_to_indices": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.token_indexers.token_characters_indexer.itertools",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "getattr",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_characters_indexer.TokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.token_indexer.TokenIndexer"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_characters_indexer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "allennlp.data.token_indexers.token_indexer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.IndexedTokenList": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.data.token_indexers.token_indexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.Token"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.__eq__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.as_padded_tensor_dict": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.common.util.pad_sequence_to_length",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.token_indexers.token_indexer.torch",
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.count_vocab_items": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.Token",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.get_empty_token_list": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.get_padding_lengths": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "int",
    "len",
    "max",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.indices_to_tokens": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.TokenIndexer.tokens_to_indices": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.token_indexers.token_indexer.IndexedTokenList",
    "allennlp.data.tokenizers.Token",
    "allennlp.data.vocabulary.Vocabulary",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.token_indexers.token_indexer.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.pad_sequence_to_length": {
  "data": {
   "shadows": "allennlp.common.util.pad_sequence_to_length"
  },
  "type": "import"
 },
 "allennlp.data.token_indexers.token_indexer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.CharacterTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.LettersDigitsTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.letters_digits_tokenizer.LettersDigitsTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.PretrainedTransformerTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.SentenceSplitter": {
  "data": {
   "shadows": "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.SpacyTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.spacy_tokenizer.SpacyTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.WhitespaceTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.whitespace_tokenizer.WhitespaceTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.__eq__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.CharacterTokenizer.tokenize": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "int",
    "isinstance",
    "list",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.character_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.character_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.LettersDigitsTokenizer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.LettersDigitsTokenizer.tokenize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.letters_digits_tokenizer.re",
    "allennlp.data.tokenizers.token_class.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.letters_digits_tokenizer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.tokenizers.pretrained_transformer_tokenizer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PreTrainedTokenizer": {
  "data": {
   "shadows": "transformers.PreTrainedTokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "allennlp.common.cached_transformers.get_tokenizer",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer._estimate_character_indices": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "allennlp.common.util.sanitize_wordpiece",
    "int",
    "len",
    "str",
    "sum",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer._increment_offsets": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer._intra_word_tokenize": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer._reverse_engineer_special_tokens": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.cached_transformers.get_tokenizer",
    "allennlp.data.tokenizers.pretrained_transformer_tokenizer.logger",
    "allennlp.data.tokenizers.token_class.Token",
    "len",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.add_special_tokens": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.pretrained_transformer_tokenizer.copy",
    "allennlp.data.tokenizers.token_class.Token",
    "typing.List",
    "typing.Optional",
    "with_new_type_id"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.add_special_tokens.with_new_type_id": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.intra_word_tokenize": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.intra_word_tokenize_sentence_pair": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.num_special_tokens_for_pair": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.num_special_tokens_for_sequence": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.tokenize": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "overrides.overrides",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.PretrainedTransformerTokenizer.tokenizer_lowercases": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "transformers.PreTrainedTokenizer"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.cached_transformers": {
  "data": {
   "shadows": "allennlp.common.cached_transformers"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.pretrained_transformer_tokenizer.sanitize_wordpiece": {
  "data": {
   "shadows": "allennlp.common.util.sanitize_wordpiece"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.sentence_splitter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter.batch_split_sentences": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter.split_sentences": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.sentence_splitter.SentenceSplitter"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.util.get_spacy_model",
    "allennlp.data.tokenizers.sentence_splitter.spacy",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.batch_split_sentences": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.SpacySentenceSplitter.split_sentences": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.sentence_splitter.get_spacy_model": {
  "data": {
   "shadows": "allennlp.common.util.get_spacy_model"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.sentence_splitter.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.token_class": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.token_class.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.token_class.Token": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.token_class.Token.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token_class.Token.__repr__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token_class.Token.__str__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token_class.Token.ensure_text": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.token_class.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.token_class.show_token": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.tokenizers.tokenizer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.data.tokenizers.tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.add_special_tokens": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.batch_tokenize": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.num_special_tokens_for_pair": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.num_special_tokens_for_sequence": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.Tokenizer.tokenize": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.tokenizers.token_class.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.tokenizer.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "allennlp.data.tokenizers.tokenizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.Token": {
  "data": {
   "shadows": "allennlp.data.tokenizers.token_class.Token"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.Tokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.WhitespaceTokenizer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.tokenizer.Tokenizer",
    "allennlp.data.tokenizers.tokenizer.Tokenizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.WhitespaceTokenizer.tokenize": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.data.tokenizers.token_class.Token",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.tokenizers.whitespace_tokenizer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.data.vocabulary.logging",
    "allennlp.data.vocabulary.re",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "allennlp.data.vocabulary.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.EmbeddingsTextFile": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.Vocabulary": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary.Vocabulary.__eq__": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__getstate__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.copy",
    "dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN",
    "allennlp.data.vocabulary._IndexToTokenDefaultDict",
    "allennlp.data.vocabulary._TokenToIndexDefaultDict",
    "bool",
    "int",
    "set",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__repr__": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__setstate__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._IndexToTokenDefaultDict",
    "allennlp.data.vocabulary._TokenToIndexDefaultDict",
    "allennlp.data.vocabulary.copy"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.__str__": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary._extend": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.namespace_match",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary._read_pretrained_tokens",
    "any",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "isinstance",
    "list",
    "set",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.add_token_to_namespace": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "repr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.add_tokens_to_namespace": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.empty": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.extend_from_instances": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.instance",
    "allennlp.data.instance.count_vocab_items",
    "allennlp.data.vocabulary.logger",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.extend_from_vocab": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_files": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.util.namespace_match",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN",
    "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE",
    "allennlp.data.vocabulary.codecs",
    "allennlp.data.vocabulary.logger",
    "allennlp.data.vocabulary.os",
    "any",
    "classmethod",
    "cls",
    "filelock.FileLock",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_files_and_instances": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.instance",
    "allennlp.data.instance.count_vocab_items",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN",
    "allennlp.data.vocabulary.logger",
    "bool",
    "classmethod",
    "cls.from_files",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.from_instances": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.instance",
    "allennlp.data.instance.count_vocab_items",
    "allennlp.data.vocabulary.DEFAULT_NON_PADDED_NAMESPACES",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary.DEFAULT_PADDING_TOKEN",
    "allennlp.data.vocabulary.logger",
    "bool",
    "classmethod",
    "cls",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_index_to_token_vocabulary": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_namespaces": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_from_index": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_index": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.data.vocabulary.logger",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_token_to_index_vocabulary": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.get_vocab_size": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.is_padded": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.print_statistics": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.logger",
    "len",
    "list",
    "print",
    "reversed"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.save_to_files": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.NAMESPACE_PADDING_FILE",
    "allennlp.data.vocabulary.codecs",
    "allennlp.data.vocabulary.logger",
    "allennlp.data.vocabulary.os",
    "filelock.FileLock",
    "len",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.Vocabulary.set_from_file": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.data.vocabulary._NEW_LINE_REGEX",
    "allennlp.data.vocabulary.codecs",
    "bool",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._IndexToTokenDefaultDict": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._IndexToTokenDefaultDict.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NEW_LINE_REGEX": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Any",
    "typing.Callable",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.__missing__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.util.namespace_match",
    "any",
    "dict.__setitem__",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._NamespaceDependentDefaultDict.add_non_padded_namespaces": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._TokenToIndexDefaultDict": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.data.vocabulary._NamespaceDependentDefaultDict"
   ]
  },
  "type": "class"
 },
 "allennlp.data.vocabulary._TokenToIndexDefaultDict.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary._read_pretrained_tokens": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.data.vocabulary.logger",
    "allennlp.modules.token_embedders.embedding.EmbeddingsTextFile",
    "enumerate",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.data.vocabulary.adi": {
  "data": {
   "shadows": "allennlp.data.instance"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "allennlp.data.vocabulary.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.namespace_match": {
  "data": {
   "shadows": "allennlp.common.util.namespace_match"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.data.vocabulary.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.interpret": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.Attacker": {
  "data": {
   "shadows": "allennlp.interpret.attackers.attacker.Attacker"
  },
  "type": "import"
 },
 "allennlp.interpret.SaliencyInterpreter": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.attackers.Attacker": {
  "data": {
   "shadows": "allennlp.interpret.attackers.attacker.Attacker"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.Hotflip": {
  "data": {
   "shadows": "allennlp.interpret.attackers.hotflip.Hotflip"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.InputReduction": {
  "data": {
   "shadows": "allennlp.interpret.attackers.input_reduction.InputReduction"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.attacker": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.attackers.attacker.Attacker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.attackers.attacker.Attacker.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.predictors.Predictor"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.attacker.Attacker.attack_from_json": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.common.util.JsonDict",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.attacker.Attacker.initialize": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.attacker.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.attacker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.attacker.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.attacker.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.attackers.hotflip.Attacker": {
  "data": {
   "shadows": "allennlp.interpret.attackers.attacker.Attacker"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.DEFAULT_IGNORE_TOKENS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "allennlp.interpret.attackers.hotflip.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.interpret.attackers.attacker.Attacker",
    "allennlp.interpret.attackers.attacker.Attacker.register"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.interpret.attackers.hotflip.torch",
    "allennlp.predictors.predictor.Predictor",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip._construct_embedding_matrix": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.interpret.attackers.hotflip.torch",
    "allennlp.modules.token_embedders.Embedding",
    "embedding_layer",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip._first_order_taylor": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.interpret.attackers.hotflip.numpy",
    "allennlp.interpret.attackers.hotflip.torch",
    "allennlp.nn.util.move_to_device",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip._make_embedder_input": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.Token",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer",
    "allennlp.data.token_indexers.SingleIdTokenIndexer",
    "allennlp.data.token_indexers.TokenCharactersIndexer",
    "allennlp.interpret.attackers.hotflip.torch",
    "allennlp.nn.util.move_to_device",
    "isinstance",
    "len",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip.attack_from_json": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.fields.TextField",
    "copy.deepcopy",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip.attack_instance": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.fields.TextField",
    "allennlp.interpret.attackers.hotflip.DEFAULT_IGNORE_TOKENS",
    "allennlp.interpret.attackers.hotflip.numpy",
    "allennlp.interpret.attackers.hotflip.torch",
    "allennlp.interpret.attackers.utils.get_fields_to_compare",
    "allennlp.interpret.attackers.utils.instance_has_changed",
    "allennlp.nn.util.get_token_ids_from_text_field_tensors",
    "enumerate",
    "int",
    "isinstance",
    "list",
    "range",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Hotflip.initialize": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.hotflip.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.SingleIdTokenIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.SingleIdTokenIndexer"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.TokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.TokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.hotflip.utils": {
  "data": {
   "shadows": "allennlp.interpret.attackers.utils"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.attackers.input_reduction.Attacker": {
  "data": {
   "shadows": "allennlp.interpret.attackers.attacker.Attacker"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.InputReduction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.interpret.attackers.attacker.Attacker",
    "allennlp.interpret.attackers.attacker.Attacker.register"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.attackers.input_reduction.InputReduction.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.predictors.Predictor",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction.InputReduction._attack_instance": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "allennlp.data.fields.TextField",
    "allennlp.interpret.attackers.input_reduction._get_ner_tags_and_mask",
    "allennlp.interpret.attackers.input_reduction._remove_one_token",
    "allennlp.interpret.attackers.input_reduction.heapq",
    "allennlp.interpret.attackers.input_reduction.torch",
    "allennlp.interpret.attackers.utils.get_fields_to_compare",
    "allennlp.interpret.attackers.utils.instance_has_changed",
    "copy.deepcopy",
    "get_length",
    "isinstance",
    "len",
    "list",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction.InputReduction._attack_instance.get_length": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.TextField",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction.InputReduction.attack_from_json": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.fields.TextField",
    "copy.deepcopy",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction._get_ner_tags_and_mask": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction._remove_one_token": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "copy.deepcopy",
    "enumerate",
    "float",
    "int",
    "numpy.argmin",
    "numpy.ndarray",
    "numpy.sqrt",
    "range",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.input_reduction.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.input_reduction.utils": {
  "data": {
   "shadows": "allennlp.interpret.attackers.utils"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.utils": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.attackers.utils.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.utils.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.attackers.utils.get_fields_to_compare": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.attackers.utils.instance_has_changed": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "any",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.saliency_interpreters.IntegratedGradient": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.SaliencyInterpreter": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.SimpleGradient": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.SmoothGradient": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter",
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter.register"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient._integrate_gradients": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.interpret.saliency_interpreters.integrated_gradient.numpy",
    "allennlp.interpret.saliency_interpreters.integrated_gradient.torch",
    "enumerate",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient._register_hooks": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient._register_hooks.forward_hook": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient._register_hooks.get_token_offsets": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.nn.util.get_token_offsets_from_text_field_inputs"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.IntegratedGradient.saliency_interpret_from_json": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.interpret.saliency_interpreters.integrated_gradient.math",
    "allennlp.interpret.saliency_interpreters.integrated_gradient.numpy",
    "dict",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.SaliencyInterpreter": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.integrated_gradient.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.predictors.Predictor"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter._aggregate_token_embeddings": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.numpy",
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.torch",
    "allennlp.nn.util.batched_span_select",
    "len",
    "staticmethod",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter.saliency_interpret_from_json": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.common.util.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.saliency_interpreter.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SaliencyInterpreter": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter",
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter.register"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient._register_hooks": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient._register_hooks.forward_hook": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient._register_hooks.get_token_offsets": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.nn.util.get_token_offsets_from_text_field_inputs"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.SimpleGradient.saliency_interpret_from_json": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.interpret.saliency_interpreters.simple_gradient.math",
    "allennlp.interpret.saliency_interpreters.simple_gradient.numpy",
    "allennlp.interpret.saliency_interpreters.simple_gradient.torch",
    "dict",
    "enumerate",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.simple_gradient.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient": {
  "data": {},
  "type": "module"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.Predictor"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SaliencyInterpreter": {
  "data": {
   "shadows": "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter",
    "allennlp.interpret.saliency_interpreters.saliency_interpreter.SaliencyInterpreter.register"
   ]
  },
  "type": "class"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.predictors.Predictor",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient._register_forward_hook": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient._register_forward_hook.forward_hook": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.interpret.saliency_interpreters.smooth_gradient.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient._smooth_grads": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.interpret.saliency_interpreters.smooth_gradient.numpy",
    "range",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.SmoothGradient.saliency_interpret_from_json": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.interpret.saliency_interpreters.smooth_gradient.math",
    "allennlp.interpret.saliency_interpreters.smooth_gradient.numpy",
    "dict",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.interpret.saliency_interpreters.smooth_gradient.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.models.BasicClassifier": {
  "data": {
   "shadows": "allennlp.models.basic_classifier.BasicClassifier"
  },
  "type": "import"
 },
 "allennlp.models.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.SimpleTagger": {
  "data": {
   "shadows": "allennlp.models.simple_tagger.SimpleTagger"
  },
  "type": "import"
 },
 "allennlp.models.archival": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.archival.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.archival.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.archival.Archive": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.dataset_readers.DatasetReader",
    "allennlp.models.model.Model",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "allennlp.models.archival.Archive.extract_module": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "isinstance",
    "str",
    "torch.nn.Module",
    "type"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.CONFIG_NAME": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "allennlp.models.archival.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.archival.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.models.archival.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.archival.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.archival.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.archival.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "allennlp.models.archival.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "allennlp.models.archival.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.archival.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.models.archival.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.models.archival.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.models.archival.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.archival._DEFAULT_WEIGHTS": {
  "data": {
   "shadows": "allennlp.models.model._DEFAULT_WEIGHTS"
  },
  "type": "import"
 },
 "allennlp.models.archival._WEIGHTS_NAME": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "allennlp.models.archival._load_dataset_readers": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.DatasetReader.from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival._load_model": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "allennlp.models.model.Model.load"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.archive_model": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival._WEIGHTS_NAME",
    "allennlp.models.archival.glob",
    "allennlp.models.archival.logger",
    "allennlp.models.archival.os",
    "allennlp.models.archival.tarfile",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "len",
    "os.PathLike",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.models.archival.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "allennlp.models.archival.extracted_archive": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "allennlp.models.archival.logger",
    "allennlp.models.archival.shutil",
    "allennlp.models.archival.tarfile",
    "allennlp.models.archival.tempfile",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.get_weights_path": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "allennlp.models.archival._WEIGHTS_NAME",
    "allennlp.models.archival.os",
    "allennlp.models.model._DEFAULT_WEIGHTS"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "allennlp.models.archival.load_archive": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.archival.Archive",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival._load_dataset_readers",
    "allennlp.models.archival._load_model",
    "allennlp.models.archival.extracted_archive",
    "allennlp.models.archival.get_weights_path",
    "allennlp.models.archival.logger",
    "allennlp.models.archival.os",
    "allennlp.models.archival.shutil",
    "int",
    "pathlib.Path",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archival.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.models.archival.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.archival.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.archival.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.models.archival.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.models.archival.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.models.archival.verify_include_in_archive": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.models.archival._WEIGHTS_NAME",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.archive_model": {
  "data": {
   "shadows": "allennlp.models.archival.archive_model"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.basic_classifier.BasicClassifier": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.basic_classifier.BasicClassifier.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.basic_classifier.torch",
    "allennlp.modules.FeedForward",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.Seq2VecEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.nn.InitializerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "float",
    "initializer",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.basic_classifier.BasicClassifier.forward": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "allennlp.data.TextFieldTensors",
    "allennlp.models.basic_classifier.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.get_token_ids_from_text_field_tensors",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.basic_classifier.BasicClassifier.get_metrics": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.basic_classifier.BasicClassifier.make_output_human_readable": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "allennlp.models.basic_classifier.torch",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.basic_classifier.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.FeedForward"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.TextFieldTensors": {
  "data": {
   "shadows": "allennlp.data.TextFieldTensors"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.basic_classifier.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.models.model.Model",
    "allennlp.models.model.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.models.model.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.models.model.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.model.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.model.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.models.model.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.model.Model": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.models.model.torch",
    "set",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "allennlp.models.model.Model.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.nn.regularizers.RegularizerApplicator",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._get_prediction_device": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.util.get_device_of",
    "int",
    "len",
    "self.parameters",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._load": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.params.Params",
    "allennlp.common.params.remove_keys_from_params",
    "allennlp.data.Vocabulary.list_available",
    "allennlp.data.Vocabulary.resolve_class_name",
    "allennlp.models.model.Model",
    "allennlp.models.model._DEFAULT_WEIGHTS",
    "allennlp.models.model.os",
    "allennlp.models.model.torch",
    "allennlp.nn.util.device_mapping",
    "classmethod",
    "filter_out_authorized_missing_keys",
    "int",
    "os.PathLike",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._load.filter_out_authorized_missing_keys": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "allennlp.models.model.re",
    "filter_out_authorized_missing_keys",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model._maybe_warn_for_unseparable_batches": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.models.model.logger",
    "self._warn_for_unseparable_batches",
    "self._warn_for_unseparable_batches.add",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.extend_embedder_vocab": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "hasattr",
    "self.named_modules",
    "self.vocab",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.models.model.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward_on_instance": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.models.model.numpy",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.forward_on_instances": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.batch.Batch",
    "allennlp.models.model.numpy",
    "allennlp.models.model.torch",
    "allennlp.nn.util.move_to_device",
    "isinstance",
    "len",
    "list",
    "self",
    "self._maybe_warn_for_unseparable_batches",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.from_archive": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "allennlp.data.Vocabulary",
    "allennlp.models.archival.load_archive",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_metrics": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_parameters_for_histogram_tensorboard_logging": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.get_regularization_penalty": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "allennlp.models.model.torch",
    "float",
    "isinstance",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.load": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.models.model.Model",
    "classmethod",
    "int",
    "isinstance",
    "os.PathLike",
    "str",
    "type",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Model.make_output_human_readable": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "allennlp.models.model.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.model.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.models.model.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.models.model.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.models.model.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.model.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.models.model.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.models.model.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.models.model.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.model._DEFAULT_WEIGHTS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "allennlp.models.model.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.models.model.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "allennlp.models.model.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.models.model.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.models.model.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.models.model.remove_keys_from_params": {
  "data": {
   "shadows": "allennlp.common.params.remove_keys_from_params"
  },
  "type": "import"
 },
 "allennlp.models.model.remove_pretrained_embedding_params": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.common.params.remove_keys_from_params"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.remove_weights_related_keys_from_params": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.common.params.remove_keys_from_params",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.model.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.models.model.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger": {
  "data": {},
  "type": "module"
 },
 "allennlp.models.simple_tagger.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Linear": {
  "data": {
   "shadows": "torch.nn.modules.linear.Linear"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.SimpleTagger": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.models.model.Model.register"
   ]
  },
  "type": "class"
 },
 "allennlp.models.simple_tagger.SimpleTagger.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_dimensions_match",
    "allennlp.data.Vocabulary",
    "allennlp.modules.Seq2SeqEncoder",
    "allennlp.modules.TextFieldEmbedder",
    "allennlp.modules.TimeDistributed",
    "allennlp.nn.InitializerApplicator",
    "allennlp.training.metrics.CategoricalAccuracy",
    "allennlp.training.metrics.SpanBasedF1Measure",
    "bool",
    "initializer",
    "str",
    "super",
    "torch.nn.modules.linear.Linear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.forward": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "allennlp.data.TextFieldTensors",
    "allennlp.models.simple_tagger.torch",
    "allennlp.nn.util.get_text_field_mask",
    "allennlp.nn.util.sequence_cross_entropy_with_logits",
    "bool",
    "metric",
    "overrides.overrides",
    "str",
    "torch.nn.functional.softmax",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.get_metrics": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bool",
    "float",
    "metric",
    "metric.get_metric",
    "overrides.overrides",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SimpleTagger.make_output_human_readable": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "allennlp.models.simple_tagger.numpy",
    "allennlp.models.simple_tagger.torch",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.models.simple_tagger.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.TextFieldTensors": {
  "data": {
   "shadows": "allennlp.data.TextFieldTensors"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.check_dimensions_match": {
  "data": {
   "shadows": "allennlp.common.checks.check_dimensions_match"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.sequence_cross_entropy_with_logits": {
  "data": {
   "shadows": "allennlp.nn.util.sequence_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "allennlp.models.simple_tagger.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.BiMpmMatching": {
  "data": {
   "shadows": "allennlp.modules.bimpm_matching.BiMpmMatching"
  },
  "type": "import"
 },
 "allennlp.modules.ConditionalRandomField": {
  "data": {
   "shadows": "allennlp.modules.conditional_random_field.ConditionalRandomField"
  },
  "type": "import"
 },
 "allennlp.modules.Elmo": {
  "data": {
   "shadows": "allennlp.modules.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.modules.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.feedforward.FeedForward"
  },
  "type": "import"
 },
 "allennlp.modules.GatedSum": {
  "data": {
   "shadows": "allennlp.modules.gated_sum.GatedSum"
  },
  "type": "import"
 },
 "allennlp.modules.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.input_variational_dropout.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.modules.LayerNorm": {
  "data": {
   "shadows": "allennlp.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.Maxout": {
  "data": {
   "shadows": "allennlp.modules.maxout.Maxout"
  },
  "type": "import"
 },
 "allennlp.modules.ResidualWithLayerDropout": {
  "data": {
   "shadows": "allennlp.modules.residual_with_layer_dropout.ResidualWithLayerDropout"
  },
  "type": "import"
 },
 "allennlp.modules.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.SoftmaxLoss": {
  "data": {
   "shadows": "allennlp.modules.softmax_loss.SoftmaxLoss"
  },
  "type": "import"
 },
 "allennlp.modules.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.AdditiveAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.additive_attention.AdditiveAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.BilinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.bilinear_attention.BilinearAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.CosineAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.cosine_attention.CosineAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.DotProductAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.dot_product_attention.DotProductAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.LinearAttention": {
  "data": {
   "shadows": "allennlp.modules.attention.linear_attention.LinearAttention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.additive_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.additive_attention.AdditiveAttention": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.additive_attention.AdditiveAttention.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.modules.attention.additive_attention.torch",
    "bool",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.additive_attention.AdditiveAttention._forward_internal": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.attention.additive_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.additive_attention.AdditiveAttention.reset_parameters": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.modules.attention.additive_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.additive_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.additive_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.attention.additive_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.additive_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.attention.Attention": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.attention.attention.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.attention.Attention.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Attention._forward_internal": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.attention.attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Attention.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.torch",
    "allennlp.nn.util.masked_softmax",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.attention.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.bilinear_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "bool",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention._forward_internal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.BilinearAttention.reset_parameters": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.modules.attention.bilinear_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.bilinear_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.bilinear_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.cosine_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention.CosineAttention": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.cosine_attention.CosineAttention._forward_internal": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.attention.cosine_attention.torch",
    "allennlp.nn.util.tiny_value_of_dtype",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.cosine_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.cosine_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.dot_product_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention.DotProductAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.dot_product_attention.DotProductAttention._forward_internal": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.attention.dot_product_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.dot_product_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.dot_product_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.attention.linear_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.Attention": {
  "data": {
   "shadows": "allennlp.modules.attention.attention.Attention"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.attention.attention.Attention",
    "allennlp.modules.attention.attention.Attention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.torch",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations.Activation.by_name",
    "allennlp.nn.util.get_combined_dim",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention._forward_internal": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.torch",
    "allennlp.nn.util.combine_tensors_and_multiply",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.LinearAttention.reset_parameters": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.modules.attention.linear_attention.math"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.attention.linear_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.attention.linear_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.augmented_lstm.AugmentedLSTMCell": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.augmented_lstm.AugmentedLSTMCell.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLSTMCell.forward": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLSTMCell.reset_parameters": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLSTMCell",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.AugmentedLstm.forward": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.augmented_lstm.torch",
    "allennlp.nn.util.get_dropout_mask",
    "isinstance",
    "len",
    "range",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.BiAugmentedLstm": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.augmented_lstm.BiAugmentedLstm.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.augmented_lstm.torch",
    "bool",
    "float",
    "int",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.BiAugmentedLstm._forward_bidirectional": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.modules.augmented_lstm.torch",
    "backward_layer",
    "enumerate",
    "forward_layer",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.BiAugmentedLstm._forward_unidirectional": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.modules.augmented_lstm.torch",
    "enumerate",
    "forward_layer",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.BiAugmentedLstm.forward": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.augmented_lstm.torch",
    "isinstance",
    "torch.nn.utils.rnn.PackedSequence",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.augmented_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.get_dropout_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_dropout_mask"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.augmented_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "allennlp.common.registrable.FromParams",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "create_parameter",
    "int",
    "share_or_create",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__.create_parameter": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.__init__.share_or_create": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "create_parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.forward": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.multi_perspective_match",
    "allennlp.modules.bimpm_matching.multi_perspective_match_pairwise",
    "allennlp.modules.bimpm_matching.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.masked_max",
    "allennlp.nn.util.masked_mean",
    "allennlp.nn.util.masked_softmax",
    "torch.nn.functional.cosine_similarity",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.BiMpmMatching.get_output_dim": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.FromParams": {
  "data": {
   "shadows": "allennlp.common.registrable.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_max": {
  "data": {
   "shadows": "allennlp.nn.util.masked_max"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_mean": {
  "data": {
   "shadows": "allennlp.nn.util.masked_mean"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.masked_softmax": {
  "data": {
   "shadows": "allennlp.nn.util.masked_softmax"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.multi_perspective_match": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "torch.nn.functional.cosine_similarity",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.multi_perspective_match_pairwise": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "allennlp.modules.bimpm_matching.torch",
    "allennlp.nn.util.tiny_value_of_dtype"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.bimpm_matching.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.tiny_value_of_dtype": {
  "data": {
   "shadows": "allennlp.nn.util.tiny_value_of_dtype"
  },
  "type": "import"
 },
 "allennlp.modules.bimpm_matching.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "bool",
    "int",
    "super",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField._input_likelihood": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "allennlp.nn.util.logsumexp",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField._joint_likelihood": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.forward": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.reset_parameters": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConditionalRandomField.viterbi_tags": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.VITERBI_DECODING",
    "allennlp.modules.conditional_random_field.torch",
    "allennlp.nn.util.viterbi_decode",
    "int",
    "typing.List",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.VITERBI_DECODING": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.modules.conditional_random_field.allowed_transitions": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.conditional_random_field.is_transition_allowed",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.is_transition_allowed": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.conditional_random_field.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.conditional_random_field.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.elmo": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "allennlp.modules.elmo.logging",
    "allennlp.modules.elmo.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.elmo.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Dropout": {
  "data": {
   "shadows": "torch.nn.modules.Dropout"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ELMoCharacterMapper": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Elmo": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.FromParams",
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo.Elmo.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo._ElmoBiLm",
    "allennlp.modules.elmo.logger",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.scalar_mix.ScalarMix",
    "bool",
    "float",
    "int",
    "range",
    "str",
    "super",
    "torch.nn.modules.Dropout",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.Elmo.forward": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "allennlp.modules.elmo.logger",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.remove_sentence_boundaries",
    "getattr",
    "len",
    "range",
    "scalar_mix",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.Elmo.get_output_dim": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "allennlp.modules.elmo.ElmoLstm": {
  "data": {
   "shadows": "allennlp.modules.elmo_lstm.ElmoLstm"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.FromParams": {
  "data": {
   "shadows": "allennlp.common.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.elmo._ElmoBiLm": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo._ElmoBiLm.__init__": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.modules.elmo.json",
    "allennlp.modules.elmo.logging",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.elmo_lstm.ElmoLstm",
    "bool",
    "open",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.create_cached_cnn_embeddings": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "allennlp.common.util.lazy_groups_of",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.bos_token",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.eos_token",
    "allennlp.modules.elmo.batch_to_ids",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.token_embedders.Embedding",
    "allennlp.nn.util.get_device_of",
    "allennlp.nn.util.remove_sentence_boundaries",
    "iter",
    "len",
    "list",
    "next",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.forward": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoBiLm.get_output_dim": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.beginning_of_sentence_characters",
    "allennlp.data.token_indexers.elmo_indexer.ELMoCharacterMapper.end_of_sentence_characters",
    "allennlp.modules.elmo.json",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "bool",
    "open",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_char_embedding": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_cnn_weights": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "conv",
    "conv.bias.data.copy_",
    "conv.bias.requires_grad",
    "conv.weight.data.copy_",
    "conv.weight.data.shape",
    "conv.weight.requires_grad",
    "enumerate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_highway": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "allennlp.modules.highway.Highway",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_projection": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo.h5py",
    "allennlp.modules.elmo.numpy",
    "allennlp.modules.elmo.torch",
    "sum"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder._load_weights": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.forward": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "activation",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo.torch",
    "allennlp.nn.util.add_sentence_boundary_token_ids",
    "conv",
    "getattr",
    "len",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo._ElmoCharacterEncoder.get_output_dim": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "allennlp.modules.elmo.add_sentence_boundary_token_ids": {
  "data": {
   "shadows": "allennlp.nn.util.add_sentence_boundary_token_ids"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.batch_to_ids": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.batch.Batch",
    "allennlp.data.fields.TextField",
    "allennlp.data.token_indexers.elmo_indexer.ELMoTokenCharactersIndexer",
    "allennlp.modules.elmo.torch",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.get_device_of": {
  "data": {
   "shadows": "allennlp.nn.util.get_device_of"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.lazy_groups_of": {
  "data": {
   "shadows": "allennlp.common.util.lazy_groups_of"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "allennlp.modules.elmo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.remove_sentence_boundaries": {
  "data": {
   "shadows": "allennlp.nn.util.remove_sentence_boundaries"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "allennlp.modules.elmo_lstm.warnings"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.elmo_lstm.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection",
    "bool",
    "float",
    "int",
    "range",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm._lstm_forward": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.elmo_lstm.torch",
    "backward_layer",
    "enumerate",
    "forward_layer",
    "getattr",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.forward": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.modules.elmo_lstm.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.ElmoLstm.load_weights": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "allennlp.common.file_utils.cached_path",
    "allennlp.modules.elmo_lstm.h5py",
    "allennlp.modules.elmo_lstm.numpy",
    "allennlp.modules.elmo_lstm.torch",
    "enumerate",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.elmo_lstm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.LstmCellWithProjection": {
  "data": {
   "shadows": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.elmo_lstm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base": {
  "data": {
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.torch",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.encoder_base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.RnnState": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.modules.encoder_base.RnnStateStorage": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.modules.encoder_base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base._EncoderBase": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.encoder_base._EncoderBase.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnStateStorage",
    "bool",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase._get_initial_states": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnState",
    "allennlp.modules.encoder_base.torch",
    "int",
    "len",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase._update_states": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnStateStorage",
    "allennlp.modules.encoder_base.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase.reset_states": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.encoder_base.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base._EncoderBase.sort_and_run_forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.modules.encoder_base.RnnState",
    "allennlp.modules.encoder_base.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.nn.util.sort_batch_by_length",
    "isinstance",
    "module",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.encoder_base.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.sort_batch_by_length": {
  "data": {
   "shadows": "allennlp.nn.util.sort_batch_by_length"
  },
  "type": "import"
 },
 "allennlp.modules.encoder_base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.feedforward.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.FeedForward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.common.FromParams",
    "allennlp.modules.feedforward.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.feedforward.FeedForward.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.feedforward.torch",
    "allennlp.nn.Activation",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "super",
    "typing.List",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "activation",
    "allennlp.modules.feedforward.torch",
    "dropout",
    "layer",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.get_input_dim": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FeedForward.get_output_dim": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "allennlp.modules.feedforward.FromParams": {
  "data": {
   "shadows": "allennlp.common.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.feedforward.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.gated_sum": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.gated_sum.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.gated_sum.GatedSum": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.gated_sum.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.gated_sum.GatedSum.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.modules.gated_sum.torch",
    "allennlp.nn.Activation",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.gated_sum.GatedSum.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.gated_sum.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.gated_sum.GatedSum.get_input_dim": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.modules.gated_sum.GatedSum.get_output_dim": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "allennlp.modules.gated_sum.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.highway": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.highway.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.highway.Highway": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.highway.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.highway.Highway.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.modules.highway.torch",
    "int",
    "range",
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.highway.Highway.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "allennlp.modules.highway.torch",
    "layer",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.highway.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.highway.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.input_variational_dropout": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.input_variational_dropout.InputVariationalDropout": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.modules.input_variational_dropout.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.input_variational_dropout.InputVariationalDropout.forward": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.input_variational_dropout.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.input_variational_dropout.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.layer_norm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.layer_norm.LayerNorm": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.layer_norm.LayerNorm.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.layer_norm.LayerNorm.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.layer_norm.torch",
    "allennlp.nn.util.tiny_value_of_dtype"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.layer_norm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.layer_norm.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.lstm_cell_with_projection.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.torch",
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.forward": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "allennlp.modules.lstm_cell_with_projection.torch",
    "allennlp.nn.util.get_dropout_mask",
    "int",
    "len",
    "range",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection.reset_parameters": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.lstm_cell_with_projection.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.block_orthogonal": {
  "data": {
   "shadows": "allennlp.nn.initializers.block_orthogonal"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.get_dropout_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_dropout_mask"
  },
  "type": "import"
 },
 "allennlp.modules.lstm_cell_with_projection.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.masked_layer_norm": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.masked_layer_norm.MaskedLayerNorm.forward": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.modules.masked_layer_norm.torch",
    "allennlp.nn.util.tiny_value_of_dtype"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.masked_layer_norm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.masked_layer_norm.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.BilinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.CosineMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.DotProductMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.LinearMatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch",
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "bool",
    "int",
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.forward": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.BilinearMatrixAttention.reset_parameters": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.bilinear_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.CosineMatrixAttention.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.cosine_matrix_attention.torch",
    "allennlp.nn.util.tiny_value_of_dtype",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.cosine_matrix_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.DotProductMatrixAttention.forward": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.dot_product_matrix_attention.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.dot_product_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention",
    "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.torch",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations.Activation.by_name",
    "allennlp.nn.util.get_combined_dim",
    "int",
    "str",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.forward": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.torch",
    "allennlp.nn.util.combine_tensors_and_multiply",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.LinearMatrixAttention.reset_parameters": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.modules.matrix_attention.linear_matrix_attention.math"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.MatrixAttention": {
  "data": {
   "shadows": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.linear_matrix_attention.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.matrix_attention": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.matrix_attention.matrix_attention.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention.forward": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.matrix_attention.matrix_attention.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.matrix_attention.matrix_attention.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.matrix_attention.matrix_attention.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.maxout": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.maxout.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.FromParams": {
  "data": {
   "shadows": "allennlp.common.registrable.FromParams"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.Maxout": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.registrable.FromParams",
    "allennlp.modules.maxout.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.maxout.Maxout.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.maxout.torch",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "super",
    "typing.Sequence",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.forward": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "allennlp.modules.maxout.torch",
    "dropout",
    "layer",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.get_input_dim": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Maxout.get_output_dim": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "allennlp.modules.maxout.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.maxout.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.residual_with_layer_dropout": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.residual_with_layer_dropout.ResidualWithLayerDropout": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "allennlp.modules.residual_with_layer_dropout.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.residual_with_layer_dropout.ResidualWithLayerDropout.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.residual_with_layer_dropout.ResidualWithLayerDropout.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.modules.residual_with_layer_dropout.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.residual_with_layer_dropout.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.sampled_softmax_loss.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.sampled_softmax_loss._choice",
    "allennlp.modules.sampled_softmax_loss.torch",
    "bool",
    "int",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss._forward_eval": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss._forward_train": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch",
    "allennlp.nn.util.tiny_value_of_dtype"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.forward": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.initialize_num_words": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss.log_uniform_candidate_sampler": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "allennlp.modules.sampled_softmax_loss._choice",
    "allennlp.modules.sampled_softmax_loss.torch",
    "choice_func"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss._choice": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "get_buffer",
    "int",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "set",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss._choice.get_buffer": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.exp",
    "numpy.log",
    "numpy.ndarray",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.sampled_softmax_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.sampled_softmax_loss.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.scalar_mix.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.ParameterList": {
  "data": {
   "shadows": "torch.nn.ParameterList"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.ScalarMix": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.scalar_mix.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.scalar_mix.ScalarMix.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.scalar_mix.torch",
    "bool",
    "float",
    "int",
    "len",
    "range",
    "super",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.ScalarMix.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_do_layer_norm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.scalar_mix.torch",
    "len",
    "sum",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.ScalarMix.forward._do_layer_norm": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.modules.scalar_mix.torch",
    "allennlp.nn.util.tiny_value_of_dtype"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.scalar_mix.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.scalar_mix.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.AugmentedLstmSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.AugmentedLstmSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.ComposeEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.FeedForwardEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.GatedCnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.GruSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.GruSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.LstmSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.LstmSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.PassThroughEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.PytorchSeq2SeqWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.PytorchTransformer": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.RnnSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.RnnSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.StackedAlternatingLstmSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedAlternatingLstmSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.StackedBidirectionalLstmSeq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedBidirectionalLstmSeq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "any",
    "enumerate",
    "len",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.compose_encoder.torch",
    "encoder",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder.get_input_dim": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder.get_output_dim": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.ComposeEncoder.is_bidirectional": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.compose_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForward": {
  "data": {
   "shadows": "allennlp.modules.feedforward.FeedForward"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.feedforward.FeedForward",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.feedforward_encoder.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder.get_input_dim": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder.get_output_dim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.FeedForwardEncoder.is_bidirectional": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.feedforward_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "bool",
    "float",
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.forward": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "block",
    "enumerate",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.get_input_dim": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.get_output_dim": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.GatedCnnEncoder.is_bidirectional": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "bool",
    "enumerate",
    "float",
    "int",
    "len",
    "str",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.ResidualBlock.forward": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math",
    "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch",
    "convolution",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.gated_cnn_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pass_through_encoder.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.get_input_dim": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.get_output_dim": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.PassThroughEncoder.is_bidirectional": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pass_through_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.AugmentedLstmSeq2SeqEncoder": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.AugmentedLstmSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.GruSeq2SeqEncoder": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.GruSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.LstmSeq2SeqEncoder": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.LstmSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.forward": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "isinstance",
    "list",
    "overrides.overrides",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.get_input_dim": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.get_output_dim": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper.is_bidirectional": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.RnnSeq2SeqEncoder": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.RnnSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedAlternatingLstmSeq2SeqEncoder": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedAlternatingLstmSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedBidirectionalLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedBidirectionalLstmSeq2SeqEncoder": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.StackedBidirectionalLstmSeq2SeqEncoder.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder",
    "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "str",
    "super",
    "torch.nn.Embedding",
    "torch.nn.TransformerEncoder",
    "torch.nn.TransformerEncoderLayer",
    "torch.nn.init.xavier_uniform_",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer.forward": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.torch",
    "allennlp.nn.util.add_positional_features",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer.get_input_dim": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer.get_output_dim": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.PytorchTransformer.is_bidirectional": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.Seq2SeqEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.add_positional_features": {
  "data": {
   "shadows": "allennlp.nn.util.add_positional_features"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.pytorch_transformer_wrapper.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.get_input_dim": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.get_output_dim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder.is_bidirectional": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2seq_encoders.seq2seq_encoder._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.AugmentedLstmSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.AugmentedLstmSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.BagOfEmbeddingsEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.BertPooler": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.ClsPooler": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.CnnEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.CnnHighwayEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.GruSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.GruSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.LstmSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.LstmSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.RnnSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.RnnSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.StackedAlternatingLstmSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedAlternatingLstmSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.StackedBidirectionalLstmSeq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedBidirectionalLstmSeq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.cached_transformers.get",
    "allennlp.modules.seq2vec_encoders.bert_pooler.copy",
    "allennlp.modules.seq2vec_encoders.bert_pooler.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler.forward": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "allennlp.modules.TimeDistributed",
    "allennlp.modules.seq2vec_encoders.bert_pooler.torch",
    "int",
    "pooler",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler.get_input_dim": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.BertPooler.get_output_dim": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.cached_transformers": {
  "data": {
   "shadows": "allennlp.common.cached_transformers"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.bert_pooler.torch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.boe_encoder.torch",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.get_input_dim": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.BagOfEmbeddingsEncoder.get_output_dim": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.boe_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.nn.util.get_final_encoder_states",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler.get_input_dim": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.ClsPooler.get_output_dim": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.get_final_encoder_states": {
  "data": {
   "shadows": "allennlp.nn.util.get_final_encoder_states"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cls_pooler.torch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Activation": {
  "data": {
   "shadows": "allennlp.nn.Activation"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "allennlp.nn.Activation",
    "allennlp.nn.Activation.by_name",
    "enumerate",
    "int",
    "len",
    "super",
    "torch.nn.Conv1d",
    "torch.nn.Linear",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.forward": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_encoder.torch",
    "allennlp.nn.util.min_value_of_dtype",
    "convolution_layer",
    "convolution_layer.kernel_size",
    "getattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.get_input_dim": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.CnnEncoder.get_output_dim": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Conv1d": {
  "data": {
   "shadows": "torch.nn.Conv1d"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Linear": {
  "data": {
   "shadows": "torch.nn.Linear"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.min_value_of_dtype": {
  "data": {
   "shadows": "allennlp.nn.util.min_value_of_dtype"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.highway.Highway",
    "allennlp.modules.layer_norm.LayerNorm",
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder._VALID_PROJECTION_LOCATIONS",
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch",
    "bool",
    "enumerate",
    "int",
    "numpy.sqrt",
    "str",
    "sum",
    "super",
    "typing.Callable",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.forward": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch",
    "char_conv_i",
    "getattr",
    "len",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.get_input_dim": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.CnnHighwayEncoder.get_output_dim": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Highway": {
  "data": {
   "shadows": "allennlp.modules.highway.Highway"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.LayerNorm": {
  "data": {
   "shadows": "allennlp.modules.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder._VALID_PROJECTION_LOCATIONS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.cnn_highway_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.AugmentedLstmSeq2VecEncoder": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.AugmentedLstmSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.GruSeq2VecEncoder": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.GruSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.LstmSeq2VecEncoder": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.LstmSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.forward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AttributeError",
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.get_input_dim": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper.get_output_dim": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.RnnSeq2VecEncoder": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.RnnSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch",
    "bool",
    "float",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedAlternatingLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedAlternatingLstmSeq2VecEncoder": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedAlternatingLstmSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedBidirectionalLstm": {
  "data": {
   "shadows": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedBidirectionalLstmSeq2VecEncoder": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper",
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.StackedBidirectionalLstmSeq2VecEncoder.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm",
    "bool",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.encoder_base._EncoderBase"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.get_input_dim": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder.get_output_dim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.seq2vec_encoders.seq2vec_encoder._EncoderBase": {
  "data": {
   "shadows": "allennlp.modules.encoder_base._EncoderBase"
  },
  "type": "import"
 },
 "allennlp.modules.softmax_loss": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.softmax_loss.SoftmaxLoss": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.modules.softmax_loss.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.softmax_loss.SoftmaxLoss.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.softmax_loss.torch",
    "int",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.softmax_loss.SoftmaxLoss.forward": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.softmax_loss.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.softmax_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.modules.softmax_loss.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.BidirectionalEndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.EndpointSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.SelfAttentiveSpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.parameter.Parameter",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.forward": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.bucket_values",
    "allennlp.nn.util.combine_tensors",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.BidirectionalEndpointSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "allennlp.nn.util.get_combined_dim",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.bidirectional_endpoint_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.span_extractors.endpoint_span_extractor.torch",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "bool",
    "int",
    "str",
    "super",
    "torch.nn.parameter.Parameter",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.span_extractors.endpoint_span_extractor.torch",
    "allennlp.nn.util.batched_index_select",
    "allennlp.nn.util.bucket_values",
    "allennlp.nn.util.combine_tensors",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.EndpointSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.nn.util.get_combined_dim",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.endpoint_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor",
    "allennlp.modules.span_extractors.span_extractor.SpanExtractor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.self_attentive_span_extractor.torch",
    "allennlp.modules.time_distributed.TimeDistributed",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.span_extractors.self_attentive_span_extractor.torch",
    "allennlp.nn.util.batched_span_select",
    "allennlp.nn.util.masked_softmax",
    "allennlp.nn.util.weighted_sum",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.get_input_dim": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SelfAttentiveSpanExtractor.get_output_dim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.SpanExtractor": {
  "data": {
   "shadows": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.self_attentive_span_extractor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.span_extractors.span_extractor.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.modules.span_extractors.span_extractor.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.forward": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.modules.span_extractors.span_extractor.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.get_input_dim": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.SpanExtractor.get_output_dim": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.span_extractors.span_extractor.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.span_extractors.span_extractor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm": {
  "data": {
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.torch",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.stacked_alternating_lstm.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.stacked_alternating_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "bool",
    "float",
    "int",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.stacked_alternating_lstm.TensorPair",
    "allennlp.modules.stacked_alternating_lstm.torch",
    "enumerate",
    "getattr",
    "layer",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_alternating_lstm.TensorPair": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.modules.stacked_alternating_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_alternating_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm": {
  "data": {
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.torch",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.modules.stacked_bidirectional_lstm.AugmentedLstm": {
  "data": {
   "shadows": "allennlp.modules.augmented_lstm.AugmentedLstm"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.InputVariationalDropout": {
  "data": {
   "shadows": "allennlp.modules.input_variational_dropout.InputVariationalDropout"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.PackedSequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.PackedSequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.modules.stacked_bidirectional_lstm.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "allennlp.modules.augmented_lstm.AugmentedLstm",
    "allennlp.modules.input_variational_dropout.InputVariationalDropout",
    "bool",
    "float",
    "int",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm.forward": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.modules.stacked_bidirectional_lstm.TensorPair",
    "allennlp.modules.stacked_bidirectional_lstm.torch",
    "backward_layer",
    "enumerate",
    "forward_layer",
    "getattr",
    "len",
    "list",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_packed_sequence",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.stacked_bidirectional_lstm.TensorPair": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "allennlp.modules.stacked_bidirectional_lstm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.pack_padded_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pack_padded_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.pad_packed_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_packed_sequence"
  },
  "type": "import"
 },
 "allennlp.modules.stacked_bidirectional_lstm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.BasicTextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder",
    "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "sorted",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.forward": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "all",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.TextFieldTensors",
    "allennlp.modules.text_field_embedders.basic_text_field_embedder.inspect",
    "allennlp.modules.text_field_embedders.basic_text_field_embedder.torch",
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.modules.token_embedders.EmptyEmbedder",
    "embedder",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "set",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.BasicTextFieldEmbedder.get_output_dim": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.EmptyEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.EmptyEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TextFieldEmbedder": {
  "data": {
   "shadows": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TextFieldTensors": {
  "data": {
   "shadows": "allennlp.data.TextFieldTensors"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.basic_text_field_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.text_field_embedders.text_field_embedder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.data.TextFieldTensors",
    "allennlp.modules.text_field_embedders.text_field_embedder.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder.get_output_dim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldTensors": {
  "data": {
   "shadows": "allennlp.data.TextFieldTensors"
  },
  "type": "import"
 },
 "allennlp.modules.text_field_embedders.text_field_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.time_distributed": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.time_distributed.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.time_distributed.TimeDistributed": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.time_distributed.TimeDistributed.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.time_distributed.TimeDistributed._reshape_tensor": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.time_distributed.TimeDistributed.forward": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.modules.time_distributed.torch",
    "isinstance",
    "overrides.overrides",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.time_distributed.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.time_distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.BagOfWordCountsTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.BagOfWordCountsTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.ElmoTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.EmptyEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.empty_embedder.EmptyEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.PassThroughTokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.pass_through_token_embedder.PassThroughTokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.PretrainedTransformerEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.PretrainedTransformerMismatchedEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerMismatchedEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.TokenCharactersEncoder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.BagOfWordCountsTokenEmbedder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.BagOfWordCountsTokenEmbedder.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Vocabulary",
    "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.torch",
    "bool",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.BagOfWordCountsTokenEmbedder.forward": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.torch",
    "allennlp.nn.util.get_text_field_mask",
    "projection",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.BagOfWordCountsTokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.get_text_field_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_text_field_mask"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.bag_of_word_counts_token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.Elmo": {
  "data": {
   "shadows": "allennlp.modules.elmo.Elmo"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "allennlp.modules.elmo.Elmo",
    "allennlp.modules.token_embedders.elmo_token_embedder.torch",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.modules.token_embedders.elmo_token_embedder.torch",
    "projection",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.ElmoTokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.elmo_token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.empty_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.empty_embedder.EmptyEmbedder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.empty_embedder.EmptyEmbedder.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.empty_embedder.EmptyEmbedder.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.empty_embedder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.empty_embedder.EmptyEmbedder.get_output_dim": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.empty_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.empty_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.PassThroughTokenEmbedder": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.PassThroughTokenEmbedder.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.PassThroughTokenEmbedder.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.pass_through_token_embedder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.PassThroughTokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pass_through_token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.cached_transformers.get",
    "allennlp.data.tokenizers.PretrainedTransformerTokenizer",
    "allennlp.modules.scalar_mix.ScalarMix",
    "bool",
    "getattr",
    "hasattr",
    "int",
    "len",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder._fold_long_sequences": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.pretrained_transformer_embedder.math",
    "allennlp.modules.token_embedders.pretrained_transformer_embedder.torch",
    "fold",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder._fold_long_sequences.fold": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder._number_of_token_type_embeddings": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "transformers.XLNetConfig"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder._unfold_long_sequences": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.token_embedders.pretrained_transformer_embedder.torch",
    "allennlp.nn.util.batched_index_select",
    "int",
    "lengths_to_mask"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder._unfold_long_sequences.lengths_to_mask": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.pretrained_transformer_embedder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder.forward": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.modules.token_embedders.pretrained_transformer_embedder.torch",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerEmbedder.get_output_dim": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.PretrainedTransformerTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.PretrainedTransformerTokenizer"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.ScalarMix": {
  "data": {
   "shadows": "allennlp.modules.scalar_mix.ScalarMix"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.XLNetConfig": {
  "data": {
   "shadows": "transformers.XLNetConfig"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.batched_index_select": {
  "data": {
   "shadows": "allennlp.nn.util.batched_index_select"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.cached_transformers": {
  "data": {
   "shadows": "allennlp.common.cached_transformers"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.PretrainedTransformerEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerMismatchedEmbedder": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.TokenEmbedder",
    "allennlp.modules.token_embedders.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerMismatchedEmbedder.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.PretrainedTransformerEmbedder",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerMismatchedEmbedder.forward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.torch",
    "allennlp.nn.util.batched_span_select",
    "overrides.overrides",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.PretrainedTransformerMismatchedEmbedder.get_output_dim": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.pretrained_transformer_mismatched_embedder.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Embedding": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.embedding.Embedding"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.Seq2VecEncoder": {
  "data": {
   "shadows": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TimeDistributed": {
  "data": {
   "shadows": "allennlp.modules.time_distributed.TimeDistributed"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder",
    "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.register"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder",
    "allennlp.modules.time_distributed.TimeDistributed",
    "allennlp.modules.token_embedders.embedding.Embedding",
    "allennlp.modules.token_embedders.token_characters_encoder.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.modules.token_embedders.token_characters_encoder.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenCharactersEncoder.get_output_dim": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.TokenEmbedder": {
  "data": {
   "shadows": "allennlp.modules.token_embedders.token_embedder.TokenEmbedder"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_characters_encoder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_embedder": {
  "data": {},
  "type": "module"
 },
 "allennlp.modules.token_embedders.token_embedder.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.modules.token_embedders.token_embedder.TokenEmbedder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.modules.token_embedders.token_embedder.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.modules.token_embedders.token_embedder.TokenEmbedder.get_output_dim": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.modules.token_embedders.token_embedder.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.Activation": {
  "data": {
   "shadows": "allennlp.nn.activations.Activation"
  },
  "type": "import"
 },
 "allennlp.nn.Initializer": {
  "data": {
   "shadows": "allennlp.nn.initializers.Initializer"
  },
  "type": "import"
 },
 "allennlp.nn.InitializerApplicator": {
  "data": {
   "shadows": "allennlp.nn.initializers.InitializerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.activations": {
  "data": {
   "symbols_in_volume": [
    "allennlp.common.Registrable._registry",
    "allennlp.nn.activations.Activation",
    "allennlp.nn.activations._ActivationLambda",
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.activations.Activation": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.activations.Activation.__call__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.activations.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.nn.activations.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.activations._ActivationLambda": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.activations._ActivationLambda.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "allennlp.nn.activations.torch",
    "str",
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.activations._ActivationLambda._get_name": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.activations._ActivationLambda.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.nn.activations.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.activations.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.nn.activations.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search": {
  "data": {
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.StepFunctionTypeNoTimestep",
    "allennlp.nn.beam_search.StepFunctionTypeWithTimestep",
    "allennlp.nn.beam_search.torch",
    "int",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.beam_search.BeamSearch": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "allennlp.common.FromParams"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.BeamSearch.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.nn.beam_search.DeterministicSampler",
    "allennlp.nn.beam_search.Sampler",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch._is_multilayer_rnn_decoder": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.torch",
    "bool",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch._reconstruct_sequences": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch._search": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "RuntimeWarning",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.StepFunctionTypeWithTimestep",
    "allennlp.nn.beam_search.torch",
    "allennlp.nn.beam_search.warnings",
    "float",
    "list",
    "range",
    "reversed",
    "step",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch._update_initial_state": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch._update_state": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch.search": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.StepFunctionType",
    "allennlp.nn.beam_search.StepFunctionTypeNoTimestep",
    "allennlp.nn.beam_search.StepFunctionTypeWithTimestep",
    "allennlp.nn.beam_search.torch",
    "inspect.signature",
    "len",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.BeamSearch.search.new_step": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.torch",
    "int",
    "old_step",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.DeterministicSampler": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.Sampler"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.DeterministicSampler.sample_nodes": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.FromParams": {
  "data": {
   "shadows": "allennlp.common.FromParams"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.GumbelSampler": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.Sampler"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.GumbelSampler.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.GumbelSampler.gumbel": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.GumbelSampler.gumbel_with_max": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.GumbelSampler.init_state": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.GumbelSampler.sample_beams": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.GumbelSampler.sample_nodes": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.MultinomialSampler": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.Sampler"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.MultinomialSampler.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.MultinomialSampler.sample_nodes": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.Sampler": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.Sampler.init_state": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Sampler.sample_beams": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Sampler.sample_nodes": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.StateType": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.StepFunctionType": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.StepFunctionTypeNoTimestep": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.StepFunctionTypeWithTimestep": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "allennlp.nn.beam_search.TopKSampler": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.Sampler"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.TopKSampler.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bool",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.TopKSampler.sample_nodes": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.TopPSampler": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "allennlp.nn.beam_search.Sampler"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.beam_search.TopPSampler.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.TopPSampler.sample_nodes": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.nn.beam_search.StateType",
    "allennlp.nn.beam_search.torch",
    "allennlp.nn.util.min_value_of_dtype",
    "int",
    "overrides.overrides",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.beam_search.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.min_value_of_dtype": {
  "data": {
   "shadows": "allennlp.nn.util.min_value_of_dtype"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.beam_search.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.chu_liu_edmonds.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.chu_liu_edmonds._find_cycle": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "int",
    "list",
    "range",
    "set",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.chu_liu_edmonds": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "allennlp.nn.chu_liu_edmonds._find_cycle",
    "allennlp.nn.chu_liu_edmonds.numpy",
    "bool",
    "enumerate",
    "float",
    "int",
    "range",
    "set",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.decode_mst": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.chu_liu_edmonds.chu_liu_edmonds",
    "allennlp.nn.chu_liu_edmonds.numpy",
    "bool",
    "int",
    "range",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.chu_liu_edmonds.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.nn.initializers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.nn.initializers.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.nn.initializers.BlockOrthogonalInitializer": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.BlockOrthogonalInitializer.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "allennlp.nn.initializers.block_orthogonal",
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.ConstantInitializer": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.ConstantInitializer.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.DiracInitializer": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.DiracInitializer.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.EyeInitializer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.EyeInitializer.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.FromParams": {
  "data": {
   "shadows": "allennlp.common.FromParams"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.Initializer": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.Initializer.__call__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.InitializerApplicator": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "allennlp.common.FromParams"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.InitializerApplicator.__call__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "allennlp.nn.initializers.logger",
    "allennlp.nn.initializers.re",
    "allennlp.nn.initializers.torch",
    "bool",
    "initializer",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.InitializerApplicator.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.KaimingNormalInitializer": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.KaimingNormalInitializer.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.KaimingUniformInitializer": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.KaimingUniformInitializer.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.LstmHiddenBiasInitializer": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.LstmHiddenBiasInitializer.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "allennlp.nn.initializers.lstm_hidden_bias",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.NormalInitializer": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.NormalInitializer.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.OrthogonalInitializer": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.OrthogonalInitializer.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.PretrainedModelInitializer": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.PretrainedModelInitializer.__call__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.initializers.torch",
    "overrides.overrides",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.PretrainedModelInitializer.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "allennlp.models.archival.extracted_archive",
    "allennlp.models.archival.get_weights_path",
    "allennlp.nn.initializers.tarfile",
    "allennlp.nn.initializers.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.SparseInitializer": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.SparseInitializer.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.UniformInitializer": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.UniformInitializer.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.UniformUnitScalingInitializer": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.UniformUnitScalingInitializer.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "allennlp.nn.initializers.uniform_unit_scaling",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.XavierNormalInitializer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.XavierNormalInitializer.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.XavierUniformInitializer": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.XavierUniformInitializer.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.ZeroInitializer": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer",
    "allennlp.nn.initializers._InitializerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers.ZeroInitializer.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "allennlp.nn.initializers.zero",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers._InitializerWrapper": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "allennlp.nn.initializers.Initializer"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.initializers._InitializerWrapper.__call__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers._InitializerWrapper.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers._InitializerWrapper.__repr__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "allennlp.nn.initializers.block_orthogonal": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.nn.initializers.itertools",
    "allennlp.nn.initializers.torch",
    "any",
    "float",
    "int",
    "list",
    "range",
    "slice",
    "tuple",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.extracted_archive": {
  "data": {
   "shadows": "allennlp.models.archival.extracted_archive"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.get_weights_path": {
  "data": {
   "shadows": "allennlp.models.archival.get_weights_path"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "allennlp.nn.initializers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.lstm_hidden_bias": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.torch.nn.init": {
  "data": {
   "shadows": "torch.nn.init"
  },
  "type": "import"
 },
 "allennlp.nn.initializers.uniform_unit_scaling": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.nn.initializers.math",
    "allennlp.nn.initializers.torch",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.initializers.zero": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "allennlp.nn.initializers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.L1Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizers.L1Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.L2Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizers.L2Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.RegularizerApplicator": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer.Regularizer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizer.Regularizer.__call__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.nn.regularizers.regularizer.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizer_applicator.FromParams": {
  "data": {
   "shadows": "allennlp.common.FromParams"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.FromParams"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator.__call__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer_applicator.re",
    "allennlp.nn.regularizers.regularizer_applicator.torch",
    "regularizer"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizer_applicator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizer_applicator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizers": {
  "data": {},
  "type": "module"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "allennlp.nn.regularizers.regularizer.Regularizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer.__call__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L1Regularizer.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizer.Regularizer",
    "allennlp.nn.regularizers.regularizer.Regularizer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.nn.regularizers.regularizers.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.L2Regularizer.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.nn.regularizers.regularizers.Regularizer": {
  "data": {
   "shadows": "allennlp.nn.regularizers.regularizer.Regularizer"
  },
  "type": "import"
 },
 "allennlp.nn.regularizers.regularizers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.predictors": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.SentenceTaggerPredictor": {
  "data": {
   "shadows": "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.TextClassifierPredictor": {
  "data": {
   "shadows": "allennlp.predictors.text_classifier.TextClassifierPredictor"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.predictors.predictor.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.predictors.predictor.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Archive": {
  "data": {
   "shadows": "allennlp.models.archival.Archive"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Batch": {
  "data": {
   "shadows": "allennlp.data.batch.Batch"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Predictor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.predictor.Predictor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.models.Model",
    "bool",
    "next",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._batch_json_to_instances": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._json_to_instance": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._register_embedding_gradient_hooks": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._register_embedding_gradient_hooks.get_token_offsets": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "allennlp.nn.util.get_token_offsets_from_text_field_inputs"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor._register_embedding_gradient_hooks.hook_layers": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "allennlp.nn.util.batched_span_select",
    "allennlp.predictors.predictor.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.capture_model_internals": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "add_output",
    "allennlp.predictors.predictor.re",
    "contextlib.contextmanager",
    "dict",
    "enumerate",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.capture_model_internals.add_output": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.capture_model_internals.add_output._add_output": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "allennlp.common.util.sanitize",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.dump_line": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.predictor.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.from_archive": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "allennlp.models.Model.resolve_class_name",
    "allennlp.models.archival.Archive",
    "allennlp.predictors.predictor.Predictor",
    "bool",
    "classmethod",
    "predictor_class",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.from_path": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "allennlp.common.plugins.import_plugins",
    "allennlp.models.archival.load_archive",
    "allennlp.predictors.predictor.Predictor",
    "bool",
    "classmethod",
    "int",
    "pathlib.Path",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.get_gradients": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.batch.Batch",
    "allennlp.nn.util.move_to_device",
    "dict",
    "enumerate",
    "str",
    "torch.Tensor",
    "torch.backends.cudnn.flags",
    "torch.utils.hooks.RemovableHandle",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.get_interpretable_layer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.nn.util.find_embedding_layer",
    "allennlp.predictors.predictor.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.get_interpretable_text_field_embedder": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.nn.util.find_text_field_embedder",
    "allennlp.predictors.predictor.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.json_to_labeled_instances": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.load_line": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.predictors.predictor.json",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_batch_instance": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_batch_json": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_instance": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.common.util.sanitize",
    "allennlp.data.Instance"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predict_json": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Predictor.predictions_to_labeled_instances": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.data.Instance",
    "allennlp.predictors.predictor.numpy",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.predictor.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.RemovableHandle": {
  "data": {
   "shadows": "torch.utils.hooks.RemovableHandle"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.backends": {
  "data": {
   "shadows": "torch.backends"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.load_archive": {
  "data": {
   "shadows": "allennlp.models.archival.load_archive"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "allennlp.predictors.predictor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.plugins": {
  "data": {
   "shadows": "allennlp.common.plugins"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.predictors.predictor.util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.sentence_tagger.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.FlagField": {
  "data": {
   "shadows": "allennlp.data.fields.FlagField"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "allennlp.data.DatasetReader",
    "allennlp.data.tokenizers.spacy_tokenizer.SpacyTokenizer",
    "allennlp.models.Model",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor._json_to_instance": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor.predict": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SentenceTaggerPredictor.predictions_to_labeled_instances": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.FlagField",
    "allennlp.data.fields.SequenceLabelField",
    "allennlp.data.fields.TextField",
    "allennlp.predictors.sentence_tagger.numpy",
    "enumerate",
    "len",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.sentence_tagger.SequenceLabelField": {
  "data": {
   "shadows": "allennlp.data.fields.SequenceLabelField"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.SpacyTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.spacy_tokenizer.SpacyTokenizer"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.TextField": {
  "data": {
   "shadows": "allennlp.data.fields.TextField"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.predictors.sentence_tagger.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier": {
  "data": {},
  "type": "module"
 },
 "allennlp.predictors.text_classifier.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.JsonDict": {
  "data": {
   "shadows": "allennlp.common.util.JsonDict"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.LabelField": {
  "data": {
   "shadows": "allennlp.data.fields.LabelField"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.Predictor": {
  "data": {
   "shadows": "allennlp.predictors.predictor.Predictor"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.SpacyTokenizer": {
  "data": {
   "shadows": "allennlp.data.tokenizers.spacy_tokenizer.SpacyTokenizer"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.TextClassifierPredictor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.predictors.predictor.Predictor",
    "allennlp.predictors.predictor.Predictor.register"
   ]
  },
  "type": "class"
 },
 "allennlp.predictors.text_classifier.TextClassifierPredictor._json_to_instance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "allennlp.data.Instance",
    "allennlp.data.tokenizers.spacy_tokenizer.SpacyTokenizer",
    "getattr",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.text_classifier.TextClassifierPredictor.predict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.util.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.text_classifier.TextClassifierPredictor.predictions_to_labeled_instances": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.data.Instance",
    "allennlp.data.fields.LabelField",
    "allennlp.predictors.text_classifier.numpy",
    "int",
    "overrides.overrides",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.predictors.text_classifier.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.predictors.text_classifier.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "allennlp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.tools": {
  "data": {},
  "type": "module"
 },
 "allennlp.tools.archive_surgery": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.tools.archive_surgery.logger",
    "allennlp.tools.archive_surgery.logging",
    "allennlp.tools.archive_surgery.main"
   ]
  },
  "type": "module"
 },
 "allennlp.tools.archive_surgery.CONFIG_NAME": {
  "data": {
   "shadows": "allennlp.models.archival.CONFIG_NAME"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.cached_path": {
  "data": {
   "shadows": "allennlp.common.file_utils.cached_path"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "allennlp.tools.archive_surgery.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.main": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "allennlp.common.file_utils.cached_path",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.tools.archive_surgery.argparse",
    "allennlp.tools.archive_surgery.atexit",
    "allennlp.tools.archive_surgery.os",
    "allennlp.tools.archive_surgery.shutil",
    "allennlp.tools.archive_surgery.subprocess",
    "allennlp.tools.archive_surgery.tarfile",
    "allennlp.tools.archive_surgery.tempfile"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.archive_surgery.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "allennlp.tools.archive_surgery.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.tools.create_elmo_embeddings_from_vocab.argparse",
    "allennlp.tools.create_elmo_embeddings_from_vocab.args",
    "allennlp.tools.create_elmo_embeddings_from_vocab.main",
    "allennlp.tools.create_elmo_embeddings_from_vocab.parser",
    "bool",
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.DEFAULT_OOV_TOKEN": {
  "data": {
   "shadows": "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.ELMoTokenCharactersIndexer": {
  "data": {
   "shadows": "allennlp.data.token_indexers.ELMoTokenCharactersIndexer"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.Token": {
  "data": {
   "shadows": "allennlp.data.Token"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab._ElmoCharacterEncoder": {
  "data": {
   "shadows": "allennlp.modules.elmo._ElmoCharacterEncoder"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.args": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.main": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.Token",
    "allennlp.data.Vocabulary",
    "allennlp.data.token_indexers.ELMoTokenCharactersIndexer",
    "allennlp.data.vocabulary.DEFAULT_OOV_TOKEN",
    "allennlp.modules.elmo._ElmoCharacterEncoder",
    "allennlp.tools.create_elmo_embeddings_from_vocab.gzip",
    "allennlp.tools.create_elmo_embeddings_from_vocab.os",
    "allennlp.tools.create_elmo_embeddings_from_vocab.torch",
    "bool",
    "elmo_token_embedder",
    "enumerate",
    "int",
    "len",
    "list",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.parser": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "allennlp.tools.create_elmo_embeddings_from_vocab.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.tools.inspect_cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.tools.inspect_cache.main"
   ]
  },
  "type": "module"
 },
 "allennlp.tools.inspect_cache.CACHE_DIRECTORY": {
  "data": {
   "shadows": "allennlp.common.file_utils.CACHE_DIRECTORY"
  },
  "type": "import"
 },
 "allennlp.tools.inspect_cache.filename_to_url": {
  "data": {
   "shadows": "allennlp.common.file_utils.filename_to_url"
  },
  "type": "import"
 },
 "allennlp.tools.inspect_cache.main": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.file_utils.CACHE_DIRECTORY",
    "allennlp.common.file_utils.filename_to_url",
    "allennlp.tools.inspect_cache.os",
    "print"
   ]
  },
  "type": "function"
 },
 "allennlp.tools.inspect_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.BatchCallback": {
  "data": {
   "shadows": "allennlp.training.trainer.BatchCallback"
  },
  "type": "import"
 },
 "allennlp.training.Checkpointer": {
  "data": {
   "shadows": "allennlp.training.checkpointer.Checkpointer"
  },
  "type": "import"
 },
 "allennlp.training.EpochCallback": {
  "data": {
   "shadows": "allennlp.training.trainer.EpochCallback"
  },
  "type": "import"
 },
 "allennlp.training.GradientDescentTrainer": {
  "data": {
   "shadows": "allennlp.training.trainer.GradientDescentTrainer"
  },
  "type": "import"
 },
 "allennlp.training.NoOpTrainer": {
  "data": {
   "shadows": "allennlp.training.no_op_trainer.NoOpTrainer"
  },
  "type": "import"
 },
 "allennlp.training.TensorboardWriter": {
  "data": {
   "shadows": "allennlp.training.tensorboard_writer.TensorboardWriter"
  },
  "type": "import"
 },
 "allennlp.training.TrackEpochCallback": {
  "data": {
   "shadows": "allennlp.training.trainer.TrackEpochCallback"
  },
  "type": "import"
 },
 "allennlp.training.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.training.TrainerCallback": {
  "data": {
   "shadows": "allennlp.training.trainer.TrainerCallback"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.checkpointer.Checkpointer",
    "allennlp.training.checkpointer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.checkpointer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.Checkpointer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.checkpointer.Checkpointer.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.training.checkpointer.time",
    "float",
    "int",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Checkpointer.best_model_state": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allennlp.nn.util.device_mapping",
    "allennlp.training.checkpointer.logger",
    "allennlp.training.checkpointer.os",
    "allennlp.training.checkpointer.torch",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Checkpointer.find_latest_checkpoint": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "allennlp.training.checkpointer.os",
    "allennlp.training.checkpointer.re",
    "any",
    "int",
    "len",
    "sorted",
    "str",
    "typing.Any",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Checkpointer.maybe_save_checkpoint": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.training.checkpointer.time",
    "allennlp.training.util.time_to_str",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Checkpointer.restore_checkpoint": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "allennlp.nn.util.device_mapping",
    "allennlp.training.checkpointer.torch",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Checkpointer.save_checkpoint": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.training.checkpointer.logger",
    "allennlp.training.checkpointer.os",
    "allennlp.training.checkpointer.shutil",
    "allennlp.training.checkpointer.time",
    "allennlp.training.checkpointer.torch",
    "bool",
    "int",
    "len",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.checkpointer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.allennlp": {
  "data": {
   "shadows": "allennlp"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.training.checkpointer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.checkpointer.training_util": {
  "data": {
   "shadows": "allennlp.training.util"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.CosineWithRestarts": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.cosine.CosineWithRestarts"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ExponentialLearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.LinearWithWarmup": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.linear_with_warmup.LinearWithWarmup"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.MultiStepLearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.MultiStepLearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.NoamLR": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.noam.NoamLR"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.PolynomialDecay": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.ReduceOnPlateauLearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ReduceOnPlateauLearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.SlantedTriangular": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.StepLearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.StepLearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.cosine": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.learning_rate_schedulers.cosine.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.cosine.CosineWithRestarts": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.cosine.CosineWithRestarts.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.cosine.logger",
    "allennlp.training.learning_rate_schedulers.cosine.torch",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.cosine.CosineWithRestarts.get_values": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "numpy.cos",
    "numpy.pi",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.cosine.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.cosine.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.training.learning_rate_schedulers.cosine.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.cosine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.cosine.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.cosine.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ExponentialLearningRateScheduler": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ExponentialLearningRateScheduler.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch",
    "allennlp.training.optimizers.Optimizer",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.training.scheduler.Scheduler"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.get_values": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.MultiStepLearningRateScheduler": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.MultiStepLearningRateScheduler.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch",
    "allennlp.training.optimizers.Optimizer",
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ReduceOnPlateauLearningRateScheduler": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWithMetricsWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.ReduceOnPlateauLearningRateScheduler.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch",
    "allennlp.training.optimizers.Optimizer",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Scheduler": {
  "data": {
   "shadows": "allennlp.training.scheduler.Scheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.StepLearningRateScheduler": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.StepLearningRateScheduler.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch",
    "allennlp.training.optimizers.Optimizer",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWithMetricsWrapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWithMetricsWrapper.step": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper.get_values": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper.load_state_dict": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper.state_dict": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "overrides.overrides",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler._PyTorchLearningRateSchedulerWrapper.step": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup.LinearWithWarmup": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.PolynomialDecay",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup.LinearWithWarmup.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.linear_with_warmup.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup.PolynomialDecay": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.PolynomialDecay"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.linear_with_warmup.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.noam": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.noam.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.noam.NoamLR": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.noam.NoamLR.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.noam.torch",
    "float",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.noam.NoamLR.get_values": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.noam.NoamLR.step": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.noam.NoamLR.step_batch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.noam.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.noam.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.polynomial_decay.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay.get_values": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay.step": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.PolynomialDecay.step_batch": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "overrides.overrides",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.polynomial_decay.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.learning_rate_schedulers.slanted_triangular.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler",
    "allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.slanted_triangular.torch",
    "bool",
    "float",
    "int",
    "len",
    "range",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular.get_values": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular.step": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "allennlp.training.learning_rate_schedulers.slanted_triangular.logger",
    "bool",
    "enumerate",
    "float",
    "len",
    "overrides.overrides",
    "reversed"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.SlantedTriangular.step_batch": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.learning_rate_schedulers.slanted_triangular.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metric_tracker": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metric_tracker.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.metric_tracker.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metric_tracker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metric_tracker.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.metric_tracker.MetricTracker": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "allennlp.training.metric_tracker.MetricTracker.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "float",
    "int",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.add_metric": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.add_metrics": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "float",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.clear": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.is_best_so_far": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.load_state_dict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.should_stop_early": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.MetricTracker.state_dict": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metric_tracker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.AttachmentScores": {
  "data": {
   "shadows": "allennlp.training.metrics.attachment_scores.AttachmentScores"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Auc": {
  "data": {
   "shadows": "allennlp.training.metrics.auc.Auc"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.average.Average"
  },
  "type": "import"
 },
 "allennlp.training.metrics.BLEU": {
  "data": {
   "shadows": "allennlp.training.metrics.bleu.BLEU"
  },
  "type": "import"
 },
 "allennlp.training.metrics.BooleanAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.CategoricalAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Covariance": {
  "data": {
   "shadows": "allennlp.training.metrics.covariance.Covariance"
  },
  "type": "import"
 },
 "allennlp.training.metrics.DEFAULT_EVALB_DIR": {
  "data": {
   "shadows": "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Entropy": {
  "data": {
   "shadows": "allennlp.training.metrics.entropy.Entropy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.EvalbBracketingScorer": {
  "data": {
   "shadows": "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer"
  },
  "type": "import"
 },
 "allennlp.training.metrics.F1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.f1_measure.F1Measure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.FBetaMeasure": {
  "data": {
   "shadows": "allennlp.training.metrics.fbeta_measure.FBetaMeasure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.FBetaMultiLabelMeasure": {
  "data": {
   "shadows": "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.MeanAbsoluteError": {
  "data": {
   "shadows": "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.PearsonCorrelation": {
  "data": {
   "shadows": "allennlp.training.metrics.pearson_correlation.PearsonCorrelation"
  },
  "type": "import"
 },
 "allennlp.training.metrics.Perplexity": {
  "data": {
   "shadows": "allennlp.training.metrics.perplexity.Perplexity"
  },
  "type": "import"
 },
 "allennlp.training.metrics.ROUGE": {
  "data": {
   "shadows": "allennlp.training.metrics.rouge.ROUGE"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SequenceAccuracy": {
  "data": {
   "shadows": "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SpanBasedF1Measure": {
  "data": {
   "shadows": "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.SpearmanCorrelation": {
  "data": {
   "shadows": "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation"
  },
  "type": "import"
 },
 "allennlp.training.metrics.UnigramRecall": {
  "data": {
   "shadows": "allennlp.training.metrics.unigram_recall.UnigramRecall"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.attachment_scores.torch",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.get_metric": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.AttachmentScores.reset": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.attachment_scores.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.attachment_scores.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.auc.Auc": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.auc.Auc.__call__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.auc.torch",
    "len",
    "range",
    "set",
    "torch.distributed.all_gather",
    "torch.distributed.get_world_size",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.auc.Auc.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.training.metrics.auc.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.auc.Auc.get_metric": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.auc.Auc.reset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "allennlp.training.metrics.auc.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.auc.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.auc.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.average.Average": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.average.Average.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.average.torch",
    "list",
    "overrides.overrides",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "torch.distributed.get_backend"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.get_metric": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Average.reset": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.average.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.average.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.bleu.BLEU": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.bleu.BLEU.__call__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.bleu.torch",
    "allennlp.training.util.get_valid_tokens_mask",
    "enumerate",
    "overrides.overrides",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "torch.distributed.get_world_size"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "collections.Counter",
    "float",
    "int",
    "set",
    "typing.Dict",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._get_brevity_penalty": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.math",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU._get_modified_precision_counts": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.torch",
    "allennlp.training.util.ngrams",
    "int",
    "min",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.get_metric": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "allennlp.training.metrics.bleu.math",
    "bool",
    "enumerate",
    "float",
    "overrides.overrides",
    "str",
    "sum",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.BLEU.reset": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "collections.Counter",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.bleu.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.get_valid_tokens_mask": {
  "data": {
   "shadows": "allennlp.training.util.get_valid_tokens_mask"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.ngrams": {
  "data": {
   "shadows": "allennlp.training.util.ngrams"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.bleu.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.boolean_accuracy.torch",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.get_metric": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.BooleanAccuracy.reset": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.boolean_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.boolean_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.categorical_accuracy.torch",
    "min",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "torch.distributed.get_backend",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.get_metric": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.CategoricalAccuracy.reset": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.categorical_accuracy.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.categorical_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.metrics.covariance.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.covariance.Covariance": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.covariance.Covariance.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "allennlp.training.metrics.covariance.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.get_metric": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.util.is_distributed",
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Covariance.reset": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.covariance.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.training.metrics.covariance.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.entropy.Entropy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.entropy.Entropy.__call__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.entropy.torch",
    "overrides.overrides",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.get_metric": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Entropy.reset": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.entropy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.entropy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.metrics.evalb_bracketing_scorer.logging",
    "allennlp.training.metrics.evalb_bracketing_scorer.os"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.__call__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer",
    "allennlp.training.metrics.evalb_bracketing_scorer.logger",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "allennlp.training.metrics.evalb_bracketing_scorer.shutil",
    "allennlp.training.metrics.evalb_bracketing_scorer.subprocess",
    "allennlp.training.metrics.evalb_bracketing_scorer.tempfile",
    "allennlp.training.metrics.evalb_bracketing_scorer.torch",
    "float",
    "len",
    "nltk.Tree",
    "open",
    "overrides.overrides",
    "str",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "torch.distributed.get_backend",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.clean_evalb": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.compile_evalb": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "allennlp.training.metrics.evalb_bracketing_scorer.DEFAULT_EVALB_DIR",
    "allennlp.training.metrics.evalb_bracketing_scorer.logger",
    "allennlp.training.metrics.evalb_bracketing_scorer.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.get_metric": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.EvalbBracketingScorer.reset": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.Tree": {
  "data": {
   "shadows": "nltk.Tree"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "allennlp.training.metrics.evalb_bracketing_scorer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.f1_measure.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure.F1Measure": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.training.metrics.fbeta_measure.FBetaMeasure",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure._false_negatives": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure._false_positives": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure._true_negatives": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure._true_positives": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.F1Measure.get_metric": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.f1_measure.FBetaMeasure": {
  "data": {
   "shadows": "allennlp.training.metrics.fbeta_measure.FBetaMeasure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.f1_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.fbeta_measure.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure.__call__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.fbeta_measure.torch",
    "overrides.overrides",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.metrics.fbeta_measure.torch",
    "float",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure._true_negative_sum": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure.get_metric": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.training.metrics.fbeta_measure._prf_divide",
    "bool",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.FBetaMeasure.reset": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure._prf_divide": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_measure.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_measure.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.F1MultiLabelMeasure": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.F1MultiLabelMeasure.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMeasure": {
  "data": {
   "shadows": "allennlp.training.metrics.FBetaMeasure"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "allennlp.training.metrics.FBetaMeasure",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.fbeta_multi_label_measure.torch",
    "overrides.overrides",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.FBetaMultiLabelMeasure._true_negative_sum": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.fbeta_multi_label_measure.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.__call__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.mean_absolute_error.torch",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.get_metric": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.MeanAbsoluteError.reset": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.mean_absolute_error.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.mean_absolute_error.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.metric.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Metric": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.metric.Metric.__call__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "allennlp.training.metrics.metric.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.detach_tensors": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.torch",
    "isinstance",
    "staticmethod",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.get_metric": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Metric.reset": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.metric.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.metric.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.metrics.pearson_correlation.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.pearson_correlation.Covariance": {
  "data": {
   "shadows": "allennlp.training.metrics.covariance.Covariance"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.pearson_correlation.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "allennlp.training.metrics.covariance.Covariance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.get_metric": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.pearson_correlation.math",
    "bool",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.PearsonCorrelation.reset": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.pearson_correlation.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "allennlp.training.metrics.pearson_correlation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.pearson_correlation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.perplexity": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.perplexity.Average": {
  "data": {
   "shadows": "allennlp.training.metrics.average.Average"
  },
  "type": "import"
 },
 "allennlp.training.metrics.perplexity.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.perplexity.Perplexity": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.training.metrics.average.Average",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.perplexity.Perplexity.get_metric": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "allennlp.training.metrics.perplexity.math",
    "bool",
    "overrides.overrides",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.perplexity.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.metrics.perplexity.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.rouge.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.ROUGE": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.rouge.ROUGE.__call__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.rouge.torch",
    "len",
    "overrides.overrides",
    "range",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "collections.defaultdict",
    "float",
    "int",
    "set",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE._get_rouge_l_score": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.rouge.torch",
    "allennlp.training.util.get_valid_tokens_mask",
    "float",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE._get_rouge_n_stats": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.rouge.torch",
    "allennlp.training.util.ngrams",
    "float",
    "int",
    "min",
    "sum",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE._longest_common_subsequence": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.training.metrics.rouge.torch",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE._metric_mean": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE.get_metric": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "float",
    "overrides.overrides",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.ROUGE.reset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "collections.defaultdict",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.rouge.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.get_valid_tokens_mask": {
  "data": {
   "shadows": "allennlp.training.util.get_valid_tokens_mask"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.ngrams": {
  "data": {
   "shadows": "allennlp.training.util.ngrams"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.rouge.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.sequence_accuracy.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.sequence_accuracy.torch",
    "list",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.get_metric": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.SequenceAccuracy.reset": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.sequence_accuracy.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.sequence_accuracy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure": {
  "data": {
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "allennlp.training.metrics.span_based_f1_measure.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans",
    "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans",
    "allennlp.nn.util.get_lengths_from_binary_sequence_mask",
    "allennlp.training.metrics.span_based_f1_measure.TAGS_TO_SPANS_FUNCTION_TYPE",
    "allennlp.training.metrics.span_based_f1_measure.torch",
    "range",
    "tags_to_spans_function",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.vocabulary.Vocabulary",
    "allennlp.training.metrics.span_based_f1_measure.TAGS_TO_SPANS_FUNCTION_TYPE",
    "collections.defaultdict",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure._compute_metrics": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure._handle_continued_spans": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan",
    "list",
    "max",
    "min",
    "set",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.get_metric": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.util.is_distributed",
    "bool",
    "set",
    "str",
    "sum",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.SpanBasedF1Measure.reset": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.span_based_f1_measure.TAGS_TO_SPANS_FUNCTION_TYPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "allennlp.training.metrics.span_based_f1_measure.TypedStringSpan": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.TypedStringSpan"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.vocabulary.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bio_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bio_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bioul_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bioul_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.bmes_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.bmes_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.get_lengths_from_binary_sequence_mask": {
  "data": {
   "shadows": "allennlp.nn.util.get_lengths_from_binary_sequence_mask"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.iob1_tags_to_spans": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.dataset_utils.span_utils.iob1_tags_to_spans"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.span_based_f1_measure.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.spearman_correlation.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation.__call__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.spearman_correlation.torch",
    "len",
    "range",
    "set",
    "torch.distributed.all_gather",
    "torch.distributed.get_world_size",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "allennlp.training.metrics.spearman_correlation.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation.get_metric": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bool",
    "overrides.overrides",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.spearman_correlation.SpearmanCorrelation.reset": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.training.metrics.spearman_correlation.torch",
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.spearman_correlation.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "allennlp.training.metrics.spearman_correlation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.metrics.unigram_recall.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.Metric": {
  "data": {
   "shadows": "allennlp.training.metrics.metric.Metric"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "allennlp.training.metrics.metric.Metric",
    "allennlp.training.metrics.metric.Metric.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.__call__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.is_distributed",
    "allennlp.training.metrics.unigram_recall.sys",
    "allennlp.training.metrics.unigram_recall.torch",
    "int",
    "len",
    "range",
    "torch.distributed.ReduceOp.SUM",
    "torch.distributed.all_reduce",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.get_metric": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.UnigramRecall.reset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "overrides.overrides"
   ]
  },
  "type": "function"
 },
 "allennlp.training.metrics.unigram_recall.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.is_distributed": {
  "data": {
   "shadows": "allennlp.common.util.is_distributed"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.overrides": {
  "data": {
   "shadows": "overrides.overrides"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "allennlp.training.metrics.unigram_recall.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.momentum_schedulers.InvertedTriangular": {
  "data": {
   "shadows": "allennlp.training.momentum_schedulers.inverted_triangular.InvertedTriangular"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.MomentumScheduler": {
  "data": {
   "shadows": "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular.InvertedTriangular": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler",
    "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular.InvertedTriangular.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "allennlp.training.momentum_schedulers.inverted_triangular.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular.InvertedTriangular.get_values": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular.MomentumScheduler": {
  "data": {
   "shadows": "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.inverted_triangular.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable",
    "allennlp.training.scheduler.Scheduler"
   ]
  },
  "type": "class"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "allennlp.training.momentum_schedulers.momentum_scheduler.torch",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.MomentumScheduler.get_values": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.Scheduler": {
  "data": {
   "shadows": "allennlp.training.scheduler.Scheduler"
  },
  "type": "import"
 },
 "allennlp.training.momentum_schedulers.momentum_scheduler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.moving_average": {
  "data": {
   "symbols_in_volume": [
    "allennlp.training.moving_average.torch",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "allennlp.training.moving_average.ExponentialMovingAverage": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "allennlp.training.moving_average.MovingAverage"
   ]
  },
  "type": "class"
 },
 "allennlp.training.moving_average.ExponentialMovingAverage.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "allennlp.training.moving_average.NamedParameter",
    "float",
    "super",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.training.moving_average.ExponentialMovingAverage.apply": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "min",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.moving_average.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.moving_average.MovingAverage": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.common.registrable.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.moving_average.MovingAverage.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "allennlp.training.moving_average.NamedParameter",
    "list",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "allennlp.training.moving_average.MovingAverage.apply": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.moving_average.MovingAverage.assign_average_value": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "allennlp.training.moving_average.MovingAverage.restore": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "allennlp.training.moving_average.NamedParameter": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.training.moving_average.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.moving_average.Registrable": {
  "data": {
   "shadows": "allennlp.common.registrable.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.moving_average.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.moving_average.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.no_op_trainer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.Checkpointer": {
  "data": {
   "shadows": "allennlp.training.checkpointer.Checkpointer"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.Model": {
  "data": {
   "shadows": "allennlp.models.Model"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.NoOpTrainer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer",
    "allennlp.training.trainer.Trainer.register"
   ]
  },
  "type": "class"
 },
 "allennlp.training.no_op_trainer.NoOpTrainer.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "allennlp.models.Model",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.no_op_trainer.NoOpTrainer.get_checkpoint_state": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.no_op_trainer.NoOpTrainer.train": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "allennlp.training.checkpointer.Checkpointer",
    "allennlp.training.no_op_trainer.os",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.no_op_trainer.Trainer": {
  "data": {
   "shadows": "allennlp.training.trainer.Trainer"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "allennlp.training.no_op_trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.optimizers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.optimizers.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.optimizers.AdadeltaOptimizer": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AdadeltaOptimizer.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.AdagradOptimizer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AdagradOptimizer.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.AdamOptimizer": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AdamOptimizer.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.AdamWOptimizer": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AdamWOptimizer.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.AdamaxOptimizer": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AdamaxOptimizer.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.AveragedSgdOptimizer": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.AveragedSgdOptimizer.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.DenseSparseAdam": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.DenseSparseAdam.__init__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "dict",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.DenseSparseAdam.step": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "allennlp.training.optimizers.math",
    "allennlp.training.optimizers.torch",
    "closure",
    "len",
    "make_sparse"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.DenseSparseAdam.step.make_sparse": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "constructor"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.HuggingfaceAdamWOptimizer": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.transformers"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.HuggingfaceAdamWOptimizer.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.Optimizer": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.Optimizer.default": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "allennlp.common.Params",
    "allennlp.training.optimizers.Optimizer",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Params": {
  "data": {
   "shadows": "allennlp.common.Params"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.RmsPropOptimizer": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.RmsPropOptimizer.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.SgdOptimizer": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.SgdOptimizer.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "bool",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.SparseAdamOptimizer": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.torch"
   ]
  },
  "type": "class"
 },
 "allennlp.training.optimizers.SparseAdamOptimizer.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "allennlp.training.optimizers.make_parameter_groups",
    "allennlp.training.optimizers.torch",
    "float",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "allennlp.training.optimizers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.make_parameter_groups": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.training.optimizers.logger",
    "allennlp.training.optimizers.re",
    "allennlp.training.optimizers.torch",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "set",
    "str",
    "sum",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.optimizers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.optimizers.transformers": {
  "data": {
   "shadows": "transformers"
  },
  "type": "import"
 },
 "allennlp.training.scheduler": {
  "data": {},
  "type": "module"
 },
 "allennlp.training.scheduler.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.scheduler.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.scheduler.Scheduler": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "allennlp.training.scheduler.Scheduler.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "KeyError",
    "allennlp.training.scheduler.torch",
    "enumerate",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.Scheduler.get_values": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.Scheduler.load_state_dict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.Scheduler.state_dict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.Scheduler.step": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "float",
    "zip"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.Scheduler.step_batch": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "allennlp.training.scheduler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.tensorboard_writer.logging"
   ]
  },
  "type": "module"
 },
 "allennlp.training.tensorboard_writer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.FromParams": {
  "data": {
   "shadows": "allennlp.common.from_params.FromParams"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.SummaryWriter": {
  "data": {
   "shadows": "tensorboardX.SummaryWriter"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.TensorDict": {
  "data": {
   "shadows": "allennlp.data.dataloader.TensorDict"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "allennlp.common.from_params.FromParams"
   ]
  },
  "type": "class"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "allennlp.training.tensorboard_writer.os",
    "bool",
    "int",
    "str",
    "tensorboardX.SummaryWriter",
    "typing.Callable",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter._item": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hasattr",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.add_train_histogram": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "allennlp.training.tensorboard_writer.torch",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.add_train_scalar": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.add_validation_scalar": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.close": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.enable_activation_logging": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "getattr"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.enable_activation_logging.hook": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_activation_histogram": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "allennlp.training.tensorboard_writer.torch",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_batch": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "allennlp.data.dataloader.TensorDict",
    "allennlp.models.model.Model",
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.tensorboard_writer.logger",
    "allennlp.training.tensorboard_writer.torch",
    "allennlp.training.util.get_batch_size",
    "float",
    "str",
    "sum",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_gradient_updates": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.nn.util.tiny_value_of_dtype",
    "allennlp.training.tensorboard_writer.torch",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_histograms": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_learning_rates": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.training.optimizers.Optimizer",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_memory_usage": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_metrics": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "allennlp.training.tensorboard_writer.logger",
    "bool",
    "dict",
    "int",
    "len",
    "max",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.log_parameter_and_gradient_statistics": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.training.tensorboard_writer.logger",
    "allennlp.training.tensorboard_writer.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.reset_epoch": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.should_log_histograms_this_batch": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.TensorboardWriter.should_log_this_batch": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "allennlp.training.tensorboard_writer.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "allennlp.training.tensorboard_writer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.tensorboard_writer.training_util": {
  "data": {
   "shadows": "allennlp.training.util"
  },
  "type": "import"
 },
 "allennlp.training.trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.trainer.BatchCallback",
    "allennlp.training.trainer.EpochCallback",
    "allennlp.training.trainer.TrainerCallback",
    "allennlp.training.trainer.logging",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "allennlp.training.trainer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.trainer.BatchCallback": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.BatchCallback.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "allennlp.data.dataloader.TensorDict",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Checkpointer": {
  "data": {
   "shadows": "allennlp.training.checkpointer.Checkpointer"
  },
  "type": "import"
 },
 "allennlp.training.trainer.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.trainer.DataLoader": {
  "data": {
   "shadows": "allennlp.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.trainer.DistributedDataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DistributedDataParallel"
  },
  "type": "import"
 },
 "allennlp.training.trainer.EpochCallback": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.EpochCallback.__call__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "allennlp.training.trainer.Trainer"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.GradientDescentTrainer.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.data.DataLoader",
    "allennlp.models.model.Model",
    "allennlp.training.checkpointer.Checkpointer",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler",
    "allennlp.training.metric_tracker.MetricTracker",
    "allennlp.training.momentum_schedulers.MomentumScheduler",
    "allennlp.training.moving_average.MovingAverage",
    "allennlp.training.tensorboard_writer.TensorboardWriter",
    "allennlp.training.trainer.BatchCallback",
    "allennlp.training.trainer.EpochCallback",
    "allennlp.training.trainer.TrainerCallback",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.torch",
    "bool",
    "float",
    "int",
    "isinstance",
    "str",
    "super",
    "torch.cuda.amp.GradScaler",
    "torch.nn.parallel.DistributedDataParallel",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer._restore_checkpoint": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "allennlp.training.util.move_optimizer_to_cuda",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer._train_epoch": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.util.format_size",
    "allennlp.common.util.lazy_groups_of",
    "allennlp.common.util.peak_cpu_memory",
    "allennlp.common.util.peak_gpu_memory",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.math",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.torch",
    "allennlp.training.util.description_from_metrics",
    "allennlp.training.util.get_metrics",
    "callback",
    "float",
    "int",
    "iter",
    "len",
    "str",
    "torch.cuda.amp.autocast",
    "torch.distributed.barrier",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer._try_train": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.util.dump_metrics",
    "allennlp.training.trainer.datetime",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.os",
    "allennlp.training.trainer.time",
    "allennlp.training.trainer.torch",
    "allennlp.training.trainer.traceback",
    "allennlp.training.util.enable_gradient_clipping",
    "allennlp.training.util.get_metrics",
    "callback",
    "float",
    "int",
    "max",
    "range",
    "str",
    "torch.distributed.barrier",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer._validation_loss": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "allennlp.common.Tqdm.tqdm",
    "allennlp.common.checks.ConfigurationError",
    "allennlp.training.trainer.logger",
    "allennlp.training.trainer.torch",
    "allennlp.training.util.description_from_metrics",
    "allennlp.training.util.get_metrics",
    "callback",
    "float",
    "int",
    "torch.cuda.amp.autocast",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer.batch_outputs": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "allennlp.data.dataloader.TensorDict",
    "allennlp.nn.util.move_to_device",
    "allennlp.training.trainer.torch",
    "bool",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer.from_partial_objects": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "TypeError",
    "allennlp.common.Lazy",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.util.log_frozen_and_tunable_parameter_names",
    "allennlp.data.DataLoader",
    "allennlp.models.model.Model",
    "allennlp.training.checkpointer.Checkpointer",
    "allennlp.training.learning_rate_schedulers.LearningRateScheduler",
    "allennlp.training.momentum_schedulers.MomentumScheduler",
    "allennlp.training.moving_average.MovingAverage",
    "allennlp.training.optimizers.Optimizer",
    "allennlp.training.optimizers.Optimizer.default",
    "allennlp.training.tensorboard_writer.TensorboardWriter",
    "allennlp.training.trainer.BatchCallback",
    "allennlp.training.trainer.EpochCallback",
    "allennlp.training.trainer.TrainerCallback",
    "allennlp.training.trainer.math",
    "allennlp.training.trainer.re",
    "allennlp.training.trainer.torch",
    "any",
    "bool",
    "classmethod",
    "cls",
    "float",
    "int",
    "len",
    "str",
    "torch.cuda.device_count",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer.get_checkpoint_state": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer.rescale_gradients": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "allennlp.training.trainer.torch",
    "float",
    "torch.nn.utils.clip_grad_norm_"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.GradientDescentTrainer.train": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Lazy": {
  "data": {
   "shadows": "allennlp.common.Lazy"
  },
  "type": "import"
 },
 "allennlp.training.trainer.LearningRateScheduler": {
  "data": {
   "shadows": "allennlp.training.learning_rate_schedulers.LearningRateScheduler"
  },
  "type": "import"
 },
 "allennlp.training.trainer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.trainer.MetricTracker": {
  "data": {
   "shadows": "allennlp.training.metric_tracker.MetricTracker"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.training.trainer.MomentumScheduler": {
  "data": {
   "shadows": "allennlp.training.momentum_schedulers.MomentumScheduler"
  },
  "type": "import"
 },
 "allennlp.training.trainer.MovingAverage": {
  "data": {
   "shadows": "allennlp.training.moving_average.MovingAverage"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Optimizer": {
  "data": {
   "shadows": "allennlp.training.optimizers.Optimizer"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Registrable": {
  "data": {
   "shadows": "allennlp.common.Registrable"
  },
  "type": "import"
 },
 "allennlp.training.trainer.TensoboardBatchMemoryUsage": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "allennlp.training.trainer.BatchCallback"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.TensoboardBatchMemoryUsage.__call__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "allennlp.common.util.peak_cpu_memory",
    "allennlp.common.util.peak_gpu_memory",
    "allennlp.data.dataloader.TensorDict",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TensorDict": {
  "data": {
   "shadows": "allennlp.data.dataloader.TensorDict"
  },
  "type": "import"
 },
 "allennlp.training.trainer.TensorboardWriter": {
  "data": {
   "shadows": "allennlp.training.tensorboard_writer.TensorboardWriter"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Tqdm": {
  "data": {
   "shadows": "allennlp.common.Tqdm"
  },
  "type": "import"
 },
 "allennlp.training.trainer.TrackEpochCallback": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "allennlp.training.trainer.EpochCallback"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.TrackEpochCallback.__call__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrackEpochCallback.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "allennlp.common.Registrable"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.Trainer.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.util.int_to_device",
    "allennlp.training.trainer.torch",
    "bool",
    "int",
    "isinstance",
    "list",
    "str",
    "torch.cuda.device_count",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.get_checkpoint_state": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "contextlib.contextmanager",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Trainer.train": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "allennlp.common.Registrable",
    "allennlp.training.trainer._TrainerCallbackMeta"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer.TrainerCallback.batch": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback.end": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback.epoch": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback.on_batch": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "allennlp.data.dataloader.TensorDict",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback.on_end": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.TrainerCallback.on_epoch": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "allennlp.training.trainer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.trainer._BasicCallback": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "allennlp.training.trainer._TrainerCallbackMeta": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "allennlp.training.trainer._TrainerCallbackMeta.__new__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "allennlp.training.trainer.BatchCallback",
    "allennlp.training.trainer.EpochCallback",
    "super"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer._TrainerCallbackMeta._make_callback_type": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "allennlp.training.trainer._BasicCallback",
    "classmethod",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer._TrainerCallbackMeta._make_callback_type._Wrapper": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "allennlp.training.trainer._TrainerCallbackMeta._make_callback_type._Wrapper.__call__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "call"
   ]
  },
  "type": "function"
 },
 "allennlp.training.trainer._TrainerCallbackMeta._make_callback_type._Wrapper.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "allennlp.training.trainer.amp": {
  "data": {
   "shadows": "torch.cuda.amp"
  },
  "type": "import"
 },
 "allennlp.training.trainer.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.training.trainer.clip_grad_norm_": {
  "data": {
   "shadows": "torch.nn.utils.clip_grad_norm_"
  },
  "type": "import"
 },
 "allennlp.training.trainer.common_util": {
  "data": {
   "shadows": "allennlp.common.util"
  },
  "type": "import"
 },
 "allennlp.training.trainer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "allennlp.training.trainer.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "allennlp.training.trainer.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "allennlp.training.trainer.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "allennlp.training.trainer.int_to_device": {
  "data": {
   "shadows": "allennlp.common.util.int_to_device"
  },
  "type": "import"
 },
 "allennlp.training.trainer.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "allennlp.training.trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.trainer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "allennlp.training.trainer.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.training.trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.trainer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "allennlp.training.trainer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "allennlp.training.trainer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.training.trainer.torch.optim.lr_scheduler": {
  "data": {
   "shadows": "torch.optim.lr_scheduler"
  },
  "type": "import"
 },
 "allennlp.training.trainer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "allennlp.training.trainer.training_util": {
  "data": {
   "shadows": "allennlp.training.util"
  },
  "type": "import"
 },
 "allennlp.training.util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "allennlp.training.util.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "allennlp.training.util.AllennlpDataset": {
  "data": {
   "shadows": "allennlp.data.AllennlpDataset"
  },
  "type": "import"
 },
 "allennlp.training.util.AllennlpLazyDataset": {
  "data": {
   "shadows": "allennlp.data.AllennlpLazyDataset"
  },
  "type": "import"
 },
 "allennlp.training.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "allennlp.training.util.Batch": {
  "data": {
   "shadows": "allennlp.data.Batch"
  },
  "type": "import"
 },
 "allennlp.training.util.CONFIG_NAME": {
  "data": {
   "shadows": "allennlp.models.archival.CONFIG_NAME"
  },
  "type": "import"
 },
 "allennlp.training.util.ConfigurationError": {
  "data": {
   "shadows": "allennlp.common.checks.ConfigurationError"
  },
  "type": "import"
 },
 "allennlp.training.util.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "allennlp.training.util.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "allennlp.training.util.DatasetReader": {
  "data": {
   "shadows": "allennlp.data.dataset_readers.DatasetReader"
  },
  "type": "import"
 },
 "allennlp.training.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "allennlp.training.util.HasBeenWarned": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "allennlp.training.util.Instance": {
  "data": {
   "shadows": "allennlp.data.Instance"
  },
  "type": "import"
 },
 "allennlp.training.util.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "allennlp.training.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "allennlp.training.util.Model": {
  "data": {
   "shadows": "allennlp.models.model.Model"
  },
  "type": "import"
 },
 "allennlp.training.util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "allennlp.training.util.Params": {
  "data": {
   "shadows": "allennlp.common.params.Params"
  },
  "type": "import"
 },
 "allennlp.training.util.PathLike": {
  "data": {
   "shadows": "os.PathLike"
  },
  "type": "import"
 },
 "allennlp.training.util.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "allennlp.training.util.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "allennlp.training.util.Tqdm": {
  "data": {
   "shadows": "allennlp.common.tqdm.Tqdm"
  },
  "type": "import"
 },
 "allennlp.training.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "allennlp.training.util.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "allennlp.training.util.Vocabulary": {
  "data": {
   "shadows": "allennlp.data.Vocabulary"
  },
  "type": "import"
 },
 "allennlp.training.util.check_for_gpu": {
  "data": {
   "shadows": "allennlp.common.checks.check_for_gpu"
  },
  "type": "import"
 },
 "allennlp.training.util.clip_grad_norm_": {
  "data": {
   "shadows": "torch.nn.utils.clip_grad_norm_"
  },
  "type": "import"
 },
 "allennlp.training.util.create_serialization_dir": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.common.params.Params.from_file",
    "allennlp.models.archival.CONFIG_NAME",
    "allennlp.training.util.logger",
    "allennlp.training.util.os",
    "allennlp.training.util.shutil",
    "bool",
    "os.PathLike",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.datasets_from_params": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "allennlp.common.params.Params",
    "allennlp.data.dataset_readers.DatasetReader",
    "allennlp.data.dataset_readers.DatasetReader.from_params",
    "allennlp.training.util.logger",
    "any",
    "bool",
    "os.PathLike",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "allennlp.training.util.description_from_metrics": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "allennlp.training.util.HasBeenWarned",
    "allennlp.training.util.logger",
    "any",
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.dump_metrics": {
  "data": {
   "shadows": "allennlp.common.util.dump_metrics"
  },
  "type": "import"
 },
 "allennlp.training.util.enable_gradient_clipping": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.nn.util.clamp_tensor",
    "float",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.evaluate": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "RuntimeError",
    "allennlp.common.checks.check_for_gpu",
    "allennlp.common.tqdm.Tqdm.tqdm",
    "allennlp.common.util.dump_metrics",
    "allennlp.common.util.sanitize",
    "allennlp.models.model.Model",
    "allennlp.nn.util.move_to_device",
    "allennlp.training.util.HasBeenWarned",
    "allennlp.training.util.json",
    "allennlp.training.util.logger",
    "allennlp.training.util.torch",
    "any",
    "int",
    "iter",
    "model",
    "model.get_metrics",
    "model.make_output_human_readable",
    "open",
    "str",
    "torch.utils.data.DataLoader",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.get_batch_size": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "allennlp.training.util.torch",
    "int",
    "isinstance",
    "iter",
    "next",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.get_metrics": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "allennlp.training.util.torch",
    "bool",
    "float",
    "int",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.get_valid_tokens_mask": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "allennlp.training.util.torch",
    "int",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "allennlp.training.util.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "allennlp.training.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "allennlp.training.util.make_vocab_from_params": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "allennlp.common.checks.ConfigurationError",
    "allennlp.common.params.Params",
    "allennlp.data.Batch",
    "allennlp.data.Instance",
    "allennlp.data.Vocabulary",
    "allennlp.data.Vocabulary.from_params",
    "allennlp.training.util.datasets_from_params",
    "allennlp.training.util.logger",
    "allennlp.training.util.os",
    "bool",
    "list",
    "os.PathLike",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.move_optimizer_to_cuda": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "allennlp.training.util.torch",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.ngrams": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "allennlp.training.util.torch",
    "any",
    "collections.Counter",
    "int",
    "range",
    "tuple",
    "typing.Dict",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.nn_util": {
  "data": {
   "shadows": "allennlp.nn.util"
  },
  "type": "import"
 },
 "allennlp.training.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.training.util.read_all_datasets": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "allennlp.data.dataset_readers.DatasetReader",
    "allennlp.training.util.logger",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.rescale_gradients": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "allennlp.models.model.Model",
    "float",
    "torch.nn.utils.clip_grad_norm_",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.sanitize": {
  "data": {
   "shadows": "allennlp.common.util.sanitize"
  },
  "type": "import"
 },
 "allennlp.training.util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "allennlp.training.util.str_to_time": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "allennlp.training.util.datetime",
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.time_to_str": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "allennlp.training.util.datetime",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "allennlp.training.util.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "allennlp.transformers": {
  "data": {
   "shadows": "transformers"
  },
  "type": "import"
 },
 "allennlp.version": {
  "data": {
   "symbols_in_volume": [
    "allennlp.version._MAJOR",
    "allennlp.version._MINOR",
    "allennlp.version._PATCH",
    "allennlp.version._SUFFIX",
    "allennlp.version.os"
   ]
  },
  "type": "module"
 },
 "allennlp.version.VERSION": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "allennlp.version.VERSION_SHORT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "allennlp.version._MAJOR": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "allennlp.version._MINOR": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "allennlp.version._PATCH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "allennlp.version._SUFFIX": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "allennlp.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "allennlp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}