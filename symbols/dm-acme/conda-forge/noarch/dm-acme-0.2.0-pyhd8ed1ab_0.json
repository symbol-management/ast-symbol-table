{
 "acme": {
  "data": {},
  "type": "module"
 },
 "acme.Actor": {
  "data": {
   "shadows": "acme.core.Actor"
  },
  "type": "import"
 },
 "acme.EnvironmentLoop": {
  "data": {
   "shadows": "acme.environment_loop.EnvironmentLoop"
  },
  "type": "import"
 },
 "acme.Learner": {
  "data": {
   "shadows": "acme.core.Learner"
  },
  "type": "import"
 },
 "acme.Saveable": {
  "data": {
   "shadows": "acme.core.Saveable"
  },
  "type": "import"
 },
 "acme.VariableSource": {
  "data": {
   "shadows": "acme.core.VariableSource"
  },
  "type": "import"
 },
 "acme.Worker": {
  "data": {
   "shadows": "acme.core.Worker"
  },
  "type": "import"
 },
 "acme.__version__": {
  "data": {
   "shadows": "acme._metadata.__version__"
  },
  "type": "import"
 },
 "acme._metadata": {
  "data": {
   "symbols_in_volume": [
    "acme._metadata._MAJOR_VERSION",
    "acme._metadata._MINOR_VERSION",
    "acme._metadata._PATCH_VERSION"
   ]
  },
  "type": "module"
 },
 "acme._metadata._MAJOR_VERSION": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "acme._metadata._MINOR_VERSION": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme._metadata._PATCH_VERSION": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme._metadata.__version__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.adders": {
  "data": {},
  "type": "module"
 },
 "acme.adders.Adder": {
  "data": {
   "shadows": "acme.adders.base.Adder"
  },
  "type": "import"
 },
 "acme.adders.base": {
  "data": {},
  "type": "module"
 },
 "acme.adders.base.Adder": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "acme.adders.base.abc"
   ]
  },
  "type": "class"
 },
 "acme.adders.base.Adder.add": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "acme.adders.base.abc",
    "acme.adders.base.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.adders.base.Adder.add_first": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "acme.adders.base.abc",
    "acme.adders.base.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.adders.base.Adder.reset": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "acme.adders.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.adders.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.adders.base.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.base.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.adders.reverb": {
  "data": {},
  "type": "module"
 },
 "acme.adders.reverb.DEFAULT_PRIORITY_TABLE": {
  "data": {
   "shadows": "acme.adders.reverb.base.DEFAULT_PRIORITY_TABLE"
  },
  "type": "import"
 },
 "acme.adders.reverb.EpisodeAdder": {
  "data": {
   "shadows": "acme.adders.reverb.episode.EpisodeAdder"
  },
  "type": "import"
 },
 "acme.adders.reverb.NStepTransitionAdder": {
  "data": {
   "shadows": "acme.adders.reverb.transition.NStepTransitionAdder"
  },
  "type": "import"
 },
 "acme.adders.reverb.PriorityFn": {
  "data": {
   "shadows": "acme.adders.reverb.base.PriorityFn"
  },
  "type": "import"
 },
 "acme.adders.reverb.PriorityFnInput": {
  "data": {
   "shadows": "acme.adders.reverb.base.PriorityFnInput"
  },
  "type": "import"
 },
 "acme.adders.reverb.ReverbAdder": {
  "data": {
   "shadows": "acme.adders.reverb.base.ReverbAdder"
  },
  "type": "import"
 },
 "acme.adders.reverb.SequenceAdder": {
  "data": {
   "shadows": "acme.adders.reverb.sequence.SequenceAdder"
  },
  "type": "import"
 },
 "acme.adders.reverb.Step": {
  "data": {
   "shadows": "acme.adders.reverb.base.Step"
  },
  "type": "import"
 },
 "acme.adders.reverb.base": {
  "data": {
   "symbols_in_volume": [
    "acme.adders.reverb.base.PriorityFn",
    "float",
    "str",
    "typing.Callable",
    "typing.Mapping"
   ]
  },
  "type": "module"
 },
 "acme.adders.reverb.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.DEFAULT_PRIORITY_TABLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.adders.reverb.base.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.PriorityFn": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "acme.adders.reverb.base.PriorityFnInput": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.base.PriorityFnMapping": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "acme.adders.reverb.base.ReverbAdder": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "acme.adders.base.Adder"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.base.ReverbAdder.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.adders.reverb.base.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.base.PriorityFnMapping",
    "acme.adders.reverb.base.collections",
    "acme.adders.reverb.base.reverb",
    "bool",
    "dict",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder._write": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "acme.adders.reverb.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder._write_last": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "acme.adders.reverb.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder._writer": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "acme.adders.reverb.base.reverb",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder.add": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "acme.adders.reverb.base.Step",
    "acme.adders.reverb.base.dm_env",
    "acme.adders.reverb.base.tree",
    "acme.types.NestedArray",
    "numpy.broadcast_to",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder.add_first": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "acme.adders.reverb.base.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder.add_priority_table": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "acme.adders.reverb.base.PriorityFn",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder.reset": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "acme.adders.reverb.base.ReverbAdder.signature": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "acme.adders.reverb.base.Step",
    "acme.adders.reverb.base.spec_like_to_tensor_spec",
    "acme.adders.reverb.base.tree",
    "acme.specs.Array",
    "acme.specs.EnvironmentSpec",
    "acme.types.NestedSpec",
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.Step": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.types.NestedArray",
    "bool",
    "tensorflow.Tensor",
    "typing.NamedTuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.base": {
  "data": {
   "shadows": "acme.adders.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.spec_like_to_tensor_spec": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "acme.specs.Array",
    "str",
    "tensorflow.TensorSpec.from_spec",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.base.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.adders.reverb.base.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode": {
  "data": {},
  "type": "module"
 },
 "acme.adders.reverb.episode.EpisodeAdder": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.adders.reverb.base.ReverbAdder"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.episode.EpisodeAdder.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.adders.reverb.base.PriorityFnMapping",
    "acme.adders.reverb.episode.reverb",
    "bool",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode.EpisodeAdder._write": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "acme.adders.reverb.episode.EpisodeAdder._write_last": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.adders.reverb.utils.calculate_priorities",
    "acme.adders.reverb.utils.final_step_like",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode.EpisodeAdder.add": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "acme.adders.reverb.episode.dm_env",
    "acme.types.NestedArray",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode.base": {
  "data": {
   "shadows": "acme.adders.reverb.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode.utils": {
  "data": {
   "shadows": "acme.adders.reverb.utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.adders.reverb.episode_test.EpisodeAdderTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "acme.adders.reverb.test_utils.AdderTestMixin"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.episode_test.EpisodeAdderTest.test_adder": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.adders.reverb.episode.EpisodeAdder",
    "acme.adders.reverb.test_utils.make_sequence",
    "acme.adders.reverb.test_utils.make_trajectory",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode_test.EpisodeAdderTest.test_delta_encoded_and_chunk_length": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.adders.reverb.episode.EpisodeAdder",
    "acme.adders.reverb.test_utils.FakeClient",
    "acme.adders.reverb.test_utils.make_trajectory",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode_test.EpisodeAdderTest.test_max_sequence_length": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "acme.adders.reverb.episode.EpisodeAdder",
    "acme.adders.reverb.test_utils.FakeClient",
    "acme.adders.reverb.test_utils.make_trajectory",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.episode_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode_test.adders": {
  "data": {
   "shadows": "acme.adders.reverb.episode"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.adders.reverb.episode_test.test_utils": {
  "data": {
   "shadows": "acme.adders.reverb.test_utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence": {
  "data": {},
  "type": "module"
 },
 "acme.adders.reverb.sequence.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence.SequenceAdder": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.adders.reverb.base.ReverbAdder"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.sequence.SequenceAdder.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.adders.reverb.base.PriorityFnMapping",
    "acme.adders.reverb.sequence.reverb",
    "bool",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence.SequenceAdder._maybe_add_priorities": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "acme.adders.reverb.utils.calculate_priorities",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence.SequenceAdder._write": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence.SequenceAdder._write_last": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "acme.adders.reverb.sequence.tree",
    "acme.adders.reverb.utils.final_step_like",
    "acme.adders.reverb.utils.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence.SequenceAdder.reset": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence.base": {
  "data": {
   "shadows": "acme.adders.reverb.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence.utils": {
  "data": {
   "shadows": "acme.adders.reverb.utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "acme.adders.reverb.sequence_test.dm_env",
    "dict"
   ]
  },
  "type": "module"
 },
 "acme.adders.reverb.sequence_test.SequenceAdderTest": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "acme.adders.reverb.test_utils.AdderTestMixin"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.sequence_test.SequenceAdderTest.test_adder": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "acme.adders.reverb.sequence.SequenceAdder",
    "acme.adders.reverb.sequence_test.TEST_CASES",
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.sequence_test.TEST_CASES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.adders.reverb.sequence_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence_test.adders": {
  "data": {
   "shadows": "acme.adders.reverb.sequence"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.adders.reverb.sequence_test.test_utils": {
  "data": {
   "shadows": "acme.adders.reverb.test_utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils": {
  "data": {
   "symbols_in_volume": [
    "acme.adders.reverb.test_utils.dm_env",
    "typing.Any",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.adders.reverb.test_utils.AdderTestMixin": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase",
    "acme.adders.reverb.test_utils.FakeClient"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.test_utils.AdderTestMixin.run_test_adder": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "acme.adders.reverb.base.ReverbAdder",
    "acme.adders.reverb.test_utils.Step",
    "acme.adders.reverb.test_utils._numeric_to_spec",
    "acme.adders.reverb.test_utils.dm_env",
    "acme.adders.reverb.test_utils.tree",
    "acme.specs.EnvironmentSpec",
    "bool",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "typing.Any",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.AdderTestMixin.run_test_adder._check_signature": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.asarray",
    "tensorflow.TensorSpec",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.AdderTestMixin.setUp": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "acme.adders.reverb.test_utils.FakeClient",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.FakeClient": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "acme.adders.reverb.test_utils.FakeClient.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.FakeClient.writer": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "acme.adders.reverb.test_utils.FakeWriter"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.FakeWriter": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "acme.adders.reverb.test_utils.FakeWriter.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.FakeWriter.append": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.FakeWriter.close": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.FakeWriter.create_item": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.Step": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.adders.reverb.test_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils._numeric_to_spec": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "acme.specs.Array",
    "float",
    "int",
    "isinstance",
    "numpy.ndarray",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.base": {
  "data": {
   "shadows": "acme.adders.reverb.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.make_sequence": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "acme.adders.reverb.test_utils.make_trajectory"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.make_trajectory": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "acme.adders.reverb.test_utils.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.adders.reverb.test_utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition": {
  "data": {},
  "type": "module"
 },
 "acme.adders.reverb.transition.NStepTransitionAdder": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.adders.reverb.base.ReverbAdder"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.transition.NStepTransitionAdder.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "acme.adders.reverb.base.PriorityFnMapping",
    "acme.adders.reverb.transition.reverb",
    "acme.adders.reverb.transition.tree",
    "float",
    "int",
    "numpy.float32",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.transition.NStepTransitionAdder._write": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "acme.adders.reverb.transition.itertools",
    "acme.adders.reverb.transition.operator",
    "acme.adders.reverb.transition.tree",
    "acme.adders.reverb.utils.calculate_priorities",
    "acme.adders.reverb.utils.final_step_like",
    "acme.utils.tree_utils.broadcast_structures",
    "list",
    "numpy.broadcast",
    "numpy.broadcast_to",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.transition.NStepTransitionAdder._write_last": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "acme.adders.reverb.transition.NStepTransitionAdder.signature": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "acme.adders.reverb.base.spec_like_to_tensor_spec",
    "acme.adders.reverb.transition.copy",
    "acme.adders.reverb.transition.tree",
    "acme.specs.EnvironmentSpec",
    "acme.types.NestedSpec",
    "acme.utils.tree_utils.broadcast_structures",
    "classmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.transition.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition._broadcast_specs": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "acme.specs.Array",
    "numpy.broadcast",
    "numpy.result_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.transition.base": {
  "data": {
   "shadows": "acme.adders.reverb.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.tree_utils": {
  "data": {
   "shadows": "acme.utils.tree_utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition.utils": {
  "data": {
   "shadows": "acme.adders.reverb.utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "acme.adders.reverb.transition_test.dm_env",
    "dict",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "acme.adders.reverb.transition_test.NStepTransitionAdderTest": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "acme.adders.reverb.test_utils.AdderTestMixin"
   ]
  },
  "type": "class"
 },
 "acme.adders.reverb.transition_test.NStepTransitionAdderTest.test_adder": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "acme.adders.reverb.transition.NStepTransitionAdder",
    "acme.adders.reverb.transition_test.TEST_CASES",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.transition_test.TEST_CASES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "acme.adders.reverb.transition_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test.adders": {
  "data": {
   "shadows": "acme.adders.reverb.transition"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.adders.reverb.transition_test.test_utils": {
  "data": {
   "shadows": "acme.adders.reverb.test_utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils": {
  "data": {},
  "type": "module"
 },
 "acme.adders.reverb.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.base": {
  "data": {
   "shadows": "acme.adders.reverb.base"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.calculate_priorities": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "acme.adders.reverb.base.PriorityFn",
    "acme.adders.reverb.base.PriorityFnInput",
    "acme.adders.reverb.base.Step",
    "acme.tf.utils.stack_sequence_fields",
    "float",
    "priority_fn",
    "str",
    "typing.Dict",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.utils.final_step_like": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.adders.reverb.base.Step",
    "acme.adders.reverb.utils.tree",
    "acme.adders.reverb.utils.zeros_like",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.adders.reverb.utils.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.adders.reverb.utils.zeros_like": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "jax.numpy.DeviceArray",
    "jax.numpy.zeros_like",
    "numpy.ndarray",
    "numpy.number",
    "numpy.zeros_like",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.agents": {
  "data": {},
  "type": "module"
 },
 "acme.agents.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.agent.Agent": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.core.Actor",
    "acme.core.VariableSource"
   ]
  },
  "type": "class"
 },
 "acme.agents.agent.Agent.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "acme.core.Actor",
    "acme.core.Learner",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.Agent.get_variables": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.Agent.observe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "acme.agents.agent.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.Agent.observe_first": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "acme.agents.agent.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.Agent.select_action": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.Agent.update": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.agents.agent._calculate_num_learner_steps",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.agent._calculate_num_learner_steps": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.agents.agent.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.agent.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.agent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.jax": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.actors": {
  "data": {
   "symbols_in_volume": [
    "acme.agents.jax.actors.Action",
    "acme.agents.jax.actors.Observation",
    "acme.agents.jax.actors.RNGKey",
    "acme.agents.jax.actors.RecurrentState",
    "acme.types.NestedArray",
    "haiku.Params",
    "jax.numpy.ndarray",
    "typing.Callable",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.actors.Action": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.FeedForwardActor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.actors.FeedForwardActor.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.agents.jax.actors.FeedForwardPolicy",
    "acme.agents.jax.actors.jax",
    "acme.jax.variable_utils.VariableClient",
    "haiku.PRNGSequence",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardActor.__init__.batched_policy": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "acme.jax.utils.add_batch_dim",
    "policy"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardActor.observe": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.agents.jax.actors.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardActor.observe_first": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.agents.jax.actors.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardActor.select_action": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.jax.utils.to_numpy_squeeze",
    "acme.types.NestedArray",
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardActor.update": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.FeedForwardPolicy": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.Observation": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.RNGKey": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.RecurrentActor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.actors.RecurrentActor.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.agents.jax.actors.RecurrentPolicy",
    "acme.agents.jax.actors.RecurrentState",
    "acme.agents.jax.actors.jax",
    "acme.jax.variable_utils.VariableClient",
    "haiku.PRNGSequence",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.RecurrentActor.observe": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "acme.agents.jax.actors.dm_env",
    "acme.jax.utils.to_numpy",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.RecurrentActor.observe_first": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "acme.agents.jax.actors.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.RecurrentActor.select_action": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "acme.jax.utils.to_numpy",
    "acme.types.NestedArray",
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.RecurrentActor.update": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors.RecurrentPolicy": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.RecurrentState": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "acme.agents.jax.actors.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.adders": {
  "data": {
   "shadows": "acme.adders"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.utils": {
  "data": {
   "shadows": "acme.jax.utils"
  },
  "type": "import"
 },
 "acme.agents.jax.actors.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.actors_test.ActorTest": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.actors_test.ActorTest.test_feedforward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.agents.jax.actors.FeedForwardActor",
    "acme.agents.jax.actors_test._make_fake_env",
    "acme.environment_loop.EnvironmentLoop",
    "acme.jax.utils.add_batch_dim",
    "acme.jax.utils.zeros_like",
    "acme.jax.variable_utils.VariableClient",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.VariableSource",
    "haiku.PRNGSequence",
    "haiku.transform",
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.ActorTest.test_feedforward.policy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "jax.numpy.argmax",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.RecurrentActorTest": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.actors_test.RecurrentActorTest.test_recurrent": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.agents.jax.actors.RecurrentActor",
    "acme.agents.jax.actors_test._make_fake_env",
    "acme.environment_loop.EnvironmentLoop",
    "acme.jax.utils.add_batch_dim",
    "acme.jax.utils.zeros_like",
    "acme.jax.variable_utils.VariableClient",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.VariableSource",
    "haiku.PRNGSequence",
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.RecurrentActorTest.test_recurrent.initial_state": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "acme.agents.jax.actors_test._transform_without_rng",
    "haiku.DeepRNN",
    "haiku.LSTM",
    "int",
    "jax.numpy.reshape",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.RecurrentActorTest.test_recurrent.network": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "acme.agents.jax.actors_test._transform_without_rng",
    "haiku.DeepRNN",
    "haiku.LSTM",
    "haiku.LSTMState",
    "jax.numpy.ndarray",
    "jax.numpy.reshape"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.RecurrentActorTest.test_recurrent.policy": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "haiku.LSTMState",
    "jax.numpy.argmax",
    "jax.numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test._make_fake_env": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.agents.jax.actors_test.dm_env",
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.DiscreteArray",
    "acme.specs.EnvironmentSpec",
    "acme.testing.fakes.Environment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test._transform_without_rng": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "haiku.transform",
    "haiku.without_apply_rng"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.actors_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.actors": {
  "data": {
   "shadows": "acme.agents.jax.actors"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.environment_loop": {
  "data": {
   "shadows": "acme.environment_loop"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.utils": {
  "data": {
   "shadows": "acme.jax.utils"
  },
  "type": "import"
 },
 "acme.agents.jax.actors_test.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.dqn.DQN": {
  "data": {
   "shadows": "acme.agents.jax.dqn.agent.DQN"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.DQNLearner": {
  "data": {
   "shadows": "acme.agents.jax.dqn.learning.DQNLearner"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.dqn.agent.DQN": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.dqn.agent.DQN.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Prioritized",
    "acme.agents.jax.actors.FeedForwardActor",
    "acme.agents.jax.dqn.agent.optax",
    "acme.agents.jax.dqn.learning.DQNLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.jax.variable_utils.VariableClient",
    "acme.specs.EnvironmentSpec",
    "float",
    "haiku.PRNGSequence",
    "haiku.Transformed",
    "int",
    "max",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.agent.DQN.__init__.policy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.agent.rlax",
    "haiku.Params",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.agent.actors": {
  "data": {
   "shadows": "acme.agents.jax.actors"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.learning": {
  "data": {
   "shadows": "acme.agents.jax.dqn.learning"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.rlax": {
  "data": {
   "shadows": "rlax"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.dqn.agent_test.DQNTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.dqn.agent_test.DQNTest.test_dqn": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.DQN",
    "acme.agents.jax.dqn.agent_test.acme",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "haiku.transform",
    "haiku.without_apply_rng",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.agent_test.DQNTest.test_dqn.network": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku.Flatten",
    "haiku.Sequential",
    "haiku.nets.MLP",
    "model"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.dqn": {
  "data": {
   "shadows": "acme.agents.jax.dqn"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.dqn.learning.DQNLearner": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.learning.TrainingState",
    "acme.agents.jax.dqn.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.ReplaySample",
    "acme.agents.jax.dqn.learning.TrainingState",
    "acme.agents.jax.dqn.learning.jax",
    "acme.agents.jax.dqn.learning.optax",
    "acme.jax.utils.add_batch_dim",
    "acme.jax.utils.prefetch",
    "acme.jax.utils.zeros_like",
    "acme.utils.async_utils.AsyncExecutor",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "dm_env.specs.Array",
    "float",
    "haiku.PRNGSequence",
    "haiku.Transformed",
    "int",
    "next",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.__init__.loss": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.adders.reverb.ReplaySample",
    "acme.agents.jax.dqn.learning.jax",
    "acme.agents.jax.dqn.learning.rlax",
    "batch_error",
    "haiku.Params",
    "jax.numpy.abs",
    "jax.numpy.clip",
    "jax.numpy.float32",
    "jax.numpy.float64",
    "jax.numpy.max",
    "jax.numpy.mean"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.__init__.sgd_step": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "acme.adders.reverb.ReplaySample",
    "acme.agents.jax.dqn.learning.LearnerOutputs",
    "acme.agents.jax.dqn.learning.TrainingState",
    "acme.agents.jax.dqn.learning.jax",
    "acme.agents.jax.dqn.learning.optax",
    "acme.agents.jax.dqn.learning.rlax",
    "grad_fn",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.__init__.update_priorities": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.agents.jax.dqn.learning.LearnerOutputs",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.get_variables": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "haiku.Params",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.restore": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.learning.TrainingState"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.save": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.learning.TrainingState"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.DQNLearner.step": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.dqn.learning.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.LearnerOutputs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.dqn.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.TrainingState": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.agents.jax.dqn.learning.optax",
    "haiku.Params",
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.dqn.learning.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.async_utils": {
  "data": {
   "shadows": "acme.utils.async_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.rlax": {
  "data": {
   "shadows": "rlax"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.dqn.learning.utils": {
  "data": {
   "shadows": "acme.jax.utils"
  },
  "type": "import"
 },
 "acme.agents.jax.impala": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.impala.IMPALA": {
  "data": {
   "shadows": "acme.agents.jax.impala.agent.IMPALA"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.IMPALALearner": {
  "data": {
   "shadows": "acme.agents.jax.impala.learning.IMPALALearner"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting": {
  "data": {
   "symbols_in_volume": [
    "acme.agents.jax.impala.acting._LogitsAndValue",
    "acme.agents.jax.impala.types.Observation",
    "acme.jax.networks.Logits",
    "acme.jax.networks.Value",
    "haiku.LSTMState",
    "haiku.Params",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.impala.acting.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.IMPALAActor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.core.Actor",
    "haiku.LSTMState",
    "jax.numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.acting.IMPALAActor.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.agents.jax.impala.acting.PolicyValueFn",
    "acme.jax.variable_utils.VariableClient",
    "haiku.LSTMState",
    "haiku.PRNGSequence",
    "haiku.transform",
    "haiku.without_apply_rng",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.IMPALAActor._params": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "haiku.Params",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.IMPALAActor.observe": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "acme.agents.jax.impala.acting.dm_env",
    "acme.agents.jax.impala.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.IMPALAActor.observe_first": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "acme.agents.jax.impala.acting.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.IMPALAActor.select_action": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.agents.jax.impala.acting.jax",
    "acme.agents.jax.impala.types.Action",
    "acme.agents.jax.impala.types.Observation",
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.IMPALAActor.update": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.acting.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.PolicyValueFn": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.agents.jax.impala.acting.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting._LogitsAndValue": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.agents.jax.impala.acting.adders": {
  "data": {
   "shadows": "acme.adders"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.networks": {
  "data": {
   "shadows": "acme.jax.networks"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.types": {
  "data": {
   "shadows": "acme.agents.jax.impala.types"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.acting.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.impala.agent.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.IMPALA": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.agent.IMPALA.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.ReplayDataset.from_table_signature",
    "acme.adders.reverb.SequenceAdder",
    "acme.adders.reverb.SequenceAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table.queue",
    "acme.agents.jax.impala.acting.IMPALAActor",
    "acme.agents.jax.impala.agent.jax",
    "acme.agents.jax.impala.agent.optax",
    "acme.agents.jax.impala.learning.IMPALALearner",
    "acme.jax.networks.PolicyValueRNN",
    "acme.jax.variable_utils.VariableClient",
    "acme.specs.EnvironmentSpec",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "float",
    "haiku.LSTMState",
    "haiku.PRNGSequence",
    "haiku.transform",
    "haiku.without_apply_rng",
    "int",
    "numpy.float32",
    "numpy.inf",
    "numpy.ones",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent.IMPALA.observe": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent.dm_env",
    "acme.agents.jax.impala.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent.IMPALA.observe_first": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent.IMPALA.select_action": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent.IMPALA.update": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.acting": {
  "data": {
   "shadows": "acme.agents.jax.impala.acting"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.learning": {
  "data": {
   "shadows": "acme.agents.jax.impala.learning"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.networks": {
  "data": {
   "shadows": "acme.jax.networks"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.types": {
  "data": {
   "shadows": "acme.agents.jax.impala.types"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.impala.agent_test.IMPALATest": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.agent_test.IMPALATest.test_impala": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "acme.agents.jax.impala.IMPALA",
    "acme.agents.jax.impala.agent_test.acme",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.IMPALATest.test_impala.forward_fn": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent_test.MyNetwork",
    "model"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.IMPALATest.test_impala.initial_state_fn": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent_test.MyNetwork",
    "int",
    "model",
    "model.initial_state",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.IMPALATest.test_impala.unroll_fn": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "acme.agents.jax.impala.agent_test.MyNetwork",
    "haiku.static_unroll",
    "model"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.MyNetwork": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.agent_test.MyNetwork.__call__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.MyNetwork.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.jax.networks.PolicyValueHead",
    "haiku.LSTM",
    "haiku.Sequential",
    "haiku.nets.MLP",
    "int",
    "jax.numpy.reshape",
    "numpy.prod",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.MyNetwork.initial_state": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.agent_test.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.impala": {
  "data": {
   "shadows": "acme.agents.jax.impala"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.networks": {
  "data": {
   "shadows": "acme.jax.networks"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.jax.impala.learning.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.IMPALALearner": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.optax",
    "acme.agents.jax.impala.learning.reverb",
    "acme.jax.networks.PolicyValueRNN",
    "acme.specs.Array",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "float",
    "haiku.LSTMState",
    "haiku.PRNGSequence",
    "haiku.transform",
    "haiku.without_apply_rng",
    "make_initial_state",
    "next",
    "numpy.inf",
    "typing.Callable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.__init__.loss": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.reverb",
    "acme.agents.jax.impala.learning.rlax",
    "acme.agents.jax.impala.learning.tree",
    "haiku.Params",
    "jax.numpy.clip",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "jax.numpy.ones_like",
    "jax.numpy.square"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.__init__.make_initial_state": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.TrainingState",
    "acme.jax.utils.add_batch_dim",
    "acme.jax.utils.zeros_like",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.__init__.sgd_step": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.TrainingState",
    "acme.agents.jax.impala.learning.jax",
    "acme.agents.jax.impala.learning.optax",
    "acme.agents.jax.impala.learning.reverb",
    "batch_loss",
    "grad_fn",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.get_variables": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "haiku.Params",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.restore": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.TrainingState"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.save": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.TrainingState"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.IMPALALearner.step": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "acme.agents.jax.impala.learning.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.TrainingState": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.jax.impala.learning.optax",
    "haiku.Params",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.agents.jax.impala.learning.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.networks": {
  "data": {
   "shadows": "acme.jax.networks"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.rlax": {
  "data": {
   "shadows": "rlax"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.learning.utils": {
  "data": {
   "shadows": "acme.jax.utils"
  },
  "type": "import"
 },
 "acme.agents.jax.impala.types": {
  "data": {
   "symbols_in_volume": [
    "int",
    "jax.numpy.ndarray"
   ]
  },
  "type": "module"
 },
 "acme.agents.jax.impala.types.Action": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "acme.agents.jax.impala.types.Observation": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "acme.agents.jax.impala.types.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.agents.tf": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.actors": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.actors.FeedForwardActor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.actors.FeedForwardActor.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.tf.variable_utils.VariableClient",
    "sonnet.Module",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.FeedForwardActor._policy": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "acme.agents.tf.actors.tfd",
    "acme.tf.utils.add_batch_dim",
    "acme.types.NestedTensor",
    "isinstance",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.FeedForwardActor.observe": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "acme.agents.tf.actors.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.FeedForwardActor.observe_first": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "acme.agents.tf.actors.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.FeedForwardActor.select_action": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy_squeeze",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.FeedForwardActor.update": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.RecurrentActor": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.actors.RecurrentActor.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.tf.variable_utils.VariableClient",
    "sonnet.RNNCore",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.RecurrentActor._policy": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "acme.agents.tf.actors.tfd",
    "acme.tf.utils.add_batch_dim",
    "acme.types.NestedTensor",
    "isinstance",
    "tensorflow.function",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.RecurrentActor.observe": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "acme.agents.tf.actors.dm_env",
    "acme.tf.utils.to_numpy_squeeze",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.RecurrentActor.observe_first": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "acme.agents.tf.actors.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.RecurrentActor.select_action": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy_squeeze",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.RecurrentActor.update": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.adders": {
  "data": {
   "shadows": "acme.adders"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.tf2_variable_utils": {
  "data": {
   "shadows": "acme.tf.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.tfd": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.agents.tf.actors.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.agents.tf.actors.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.actors_test.ActorTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.actors_test.ActorTest.test_feedforward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.actors_test._make_fake_env",
    "acme.environment_loop.EnvironmentLoop",
    "acme.specs.make_environment_spec",
    "sonnet.Flatten",
    "sonnet.Linear",
    "sonnet.Sequential",
    "tensorflow.argmax"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors_test.ActorTest.test_recurrent": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.agents.tf.actors.RecurrentActor",
    "acme.agents.tf.actors_test._make_fake_env",
    "acme.environment_loop.EnvironmentLoop",
    "acme.specs.make_environment_spec",
    "sonnet.DeepRNN",
    "sonnet.Flatten",
    "sonnet.Linear",
    "tensorflow.argmax"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors_test._make_fake_env": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.agents.tf.actors_test.dm_env",
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.DiscreteArray",
    "acme.specs.EnvironmentSpec",
    "acme.testing.fakes.Environment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.actors_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.environment_loop": {
  "data": {
   "shadows": "acme.environment_loop"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.actors_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.bc": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.bc.BCLearner": {
  "data": {
   "shadows": "acme.agents.tf.bc.learning.BCLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.bc.learning.BCLearner": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.agents.tf.bc.learning.acme",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.bc.learning.BCLearner.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.tf.savers.Snapshotter",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "bool",
    "float",
    "iter",
    "sonnet.Module",
    "sonnet.optimizers.Adam",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.int32",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bc.learning.BCLearner._step": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "cce",
    "next",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.function",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "tensorflow.linalg.global_norm",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bc.learning.BCLearner.get_variables": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bc.learning.BCLearner.state": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bc.learning.BCLearner.step": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "acme.agents.tf.bc.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.bc.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.bcq.DiscreteBCQLearner": {
  "data": {
   "shadows": "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.bcq.discrete_learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "acme.core.Learner",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "acme.agents.tf.bc.BCLearner",
    "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner",
    "acme.tf.networks.discrete.DiscreteFilteredQNetwork",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "float",
    "tensorflow.data.Dataset"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner.get_variables": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner.state": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning.DiscreteBCQLearner.step": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.core.Learner",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.adders.reverb.TFClient",
    "acme.agents.tf.bcq.discrete_learning.copy",
    "acme.tf.networks.discrete.DiscreteFilteredQNetwork",
    "acme.tf.savers.Snapshotter",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.optimizers.Adam",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner._step": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.agents.tf.bcq.discrete_learning.trfl",
    "acme.tf.losses.huber",
    "next",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.abs",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.float64",
    "tensorflow.function",
    "tensorflow.linalg.global_norm",
    "tensorflow.math.mod",
    "tensorflow.nn.moments",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_min",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner.get_variables": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner.state": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning._InternalBCQLearner.step": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.bc": {
  "data": {
   "shadows": "acme.agents.tf.bc"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.discrete_networks": {
  "data": {
   "shadows": "acme.tf.networks.discrete"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.bcq.discrete_learning_test.DiscreteBCQLearnerTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.bcq.discrete_learning_test.DiscreteBCQLearnerTest.test_full_learner": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.agents.tf.bcq.DiscreteBCQLearner",
    "acme.agents.tf.bcq.discrete_learning_test._make_network",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "acme.testing.fakes.transition_dataset",
    "acme.tf.networks.discrete.DiscreteFilteredQNetwork",
    "acme.tf.utils.create_variables",
    "acme.utils.counting.Counter",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning_test._make_network": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "sonnet.Flatten",
    "sonnet.Module",
    "sonnet.Sequential",
    "sonnet.nets.MLP"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.bcq.discrete_learning_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.bcq": {
  "data": {
   "shadows": "acme.agents.tf.bcq"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.discrete_networks": {
  "data": {
   "shadows": "acme.tf.networks.discrete"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.bcq.discrete_learning_test.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.crr": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.crr.RCRRLearner": {
  "data": {
   "shadows": "acme.agents.tf.crr.recurrent_learning.RCRRLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.crr.recurrent_learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.core.Learner"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.agents.tf.crr.recurrent_learning.time",
    "acme.tf.networks.CriticDeepRNN",
    "acme.tf.networks.StochasticMeanHead",
    "acme.tf.networks.StochasticSamplingHead",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "bool",
    "float",
    "int",
    "iter",
    "next",
    "sonnet.DeepRNN",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.RNNCore",
    "sonnet.distribute.Replicator",
    "sonnet.optimizers.Adam",
    "str",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.distribute.Strategy",
    "tensorflow.int32",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner._replicated_step": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "next",
    "str",
    "tensorflow.Tensor",
    "tensorflow.distribute.ReduceOp.MEAN",
    "tensorflow.function",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner._step": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "acme.agents.tf.crr.recurrent_learning.operator",
    "acme.agents.tf.crr.recurrent_learning.reverb",
    "acme.agents.tf.crr.recurrent_learning.tree",
    "acme.tf.losses.categorical",
    "acme.tf.networks.DiscreteValuedDistribution",
    "acme.tf.utils.batch_to_sequence",
    "acme.tf.utils.tile_nested",
    "len",
    "range",
    "sonnet.BatchApply",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.distribute.get_replica_context",
    "tensorflow.math.exp",
    "tensorflow.math.log_softmax",
    "tensorflow.math.minimum",
    "tensorflow.math.mod",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_min",
    "tensorflow.reshape",
    "tensorflow.stop_gradient",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner.get_variables": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.crr.recurrent_learning.RCRRLearner.step": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "acme.agents.tf.crr.recurrent_learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.crr.recurrent_learning.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.crr.recurrent_learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.d4pg.D4PG": {
  "data": {
   "shadows": "acme.agents.tf.d4pg.agent.D4PG"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.D4PGLearner": {
  "data": {
   "shadows": "acme.agents.tf.d4pg.learning.D4PGLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.d4pg.agent.D4PG": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.d4pg.agent.D4PG.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.d4pg.agent.copy",
    "acme.agents.tf.d4pg.learning.D4PGLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.networks.ClipToSpec",
    "acme.tf.networks.ClippedGaussian",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "str",
    "super",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.d4pg.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.d4pg.agent_test.D4PGTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.d4pg.agent_test.D4PGTest.test_d4pg": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "acme.agents.tf.d4pg.D4PG",
    "acme.agents.tf.d4pg.agent_test.acme",
    "acme.agents.tf.d4pg.agent_test.make_networks",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.agent_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.d4pg": {
  "data": {
   "shadows": "acme.agents.tf.d4pg"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.make_networks": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.tf.networks.CriticMultiplexer",
    "acme.tf.networks.DiscreteValuedHead",
    "acme.tf.networks.LayerNormMLP",
    "acme.types.NestedSpec",
    "float",
    "int",
    "list",
    "numpy.prod",
    "sonnet.Module",
    "sonnet.Sequential",
    "str",
    "tensorflow.tanh",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.agent_test.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.d4pg.learning.D4PGLearner": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.agents.tf.d4pg.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.d4pg.learning.D4PGLearner.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "acme.tf.networks.StochasticMeanHead",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.learning.D4PGLearner._step": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "acme.agents.tf.d4pg.learning.tree",
    "acme.tf.losses.categorical",
    "acme.tf.losses.dpg",
    "next",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.function",
    "tensorflow.math.mod",
    "tensorflow.reduce_mean",
    "tensorflow.stop_gradient",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.learning.D4PGLearner.get_variables": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.learning.D4PGLearner.step": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "acme.agents.tf.d4pg.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.d4pg.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.acme_nets": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.d4pg.learning.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.ddpg.DDPG": {
  "data": {
   "shadows": "acme.agents.tf.ddpg.agent.DDPG"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.DDPGLearner": {
  "data": {
   "shadows": "acme.agents.tf.ddpg.learning.DDPGLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.ddpg.agent.DDPG": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.ddpg.agent.DDPG.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.ddpg.agent.copy",
    "acme.agents.tf.ddpg.learning.DDPGLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.networks.ClipToSpec",
    "acme.tf.networks.ClippedGaussian",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "str",
    "super",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.ddpg.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.ddpg.agent_test.DDPGTest": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.ddpg.agent_test.DDPGTest.test_ddpg": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "acme.agents.tf.ddpg.DDPG",
    "acme.agents.tf.ddpg.agent_test.acme",
    "acme.agents.tf.ddpg.agent_test.make_networks",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.agent_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.ddpg": {
  "data": {
   "shadows": "acme.agents.tf.ddpg"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.make_networks": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.tf.networks.CriticMultiplexer",
    "acme.tf.networks.LayerNormMLP",
    "acme.types.NestedSpec",
    "int",
    "list",
    "numpy.prod",
    "sonnet.Module",
    "sonnet.Sequential",
    "str",
    "tensorflow.tanh",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.agent_test.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.ddpg.learning.DDPGLearner": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.agents.tf.ddpg.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.ddpg.learning.DDPGLearner.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointer",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.learning.DDPGLearner._step": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "acme.agents.tf.ddpg.learning.tree",
    "acme.agents.tf.ddpg.learning.trfl",
    "acme.tf.losses.dpg",
    "next",
    "tensorflow.GradientTape",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.function",
    "tensorflow.math.mod",
    "tensorflow.reduce_mean",
    "tensorflow.squeeze",
    "tensorflow.stop_gradient",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.learning.DDPGLearner.get_variables": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.learning.DDPGLearner.step": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "acme.agents.tf.ddpg.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.ddpg.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.ddpg.learning.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dmpo.DistributionalMPO": {
  "data": {
   "shadows": "acme.agents.tf.dmpo.agent.DistributionalMPO"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.DistributionalMPOLearner": {
  "data": {
   "shadows": "acme.agents.tf.dmpo.learning.DistributionalMPOLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dmpo.agent.DistributionalMPO": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dmpo.agent.DistributionalMPO.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.dmpo.agent.copy",
    "acme.agents.tf.dmpo.learning.DistributionalMPOLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.networks.StochasticSamplingHead",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "str",
    "super",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.dmpo.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.dmpo.agent_test.DMPOTest": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dmpo.agent_test.DMPOTest.test_dmpo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "acme.agents.tf.dmpo.DistributionalMPO",
    "acme.agents.tf.dmpo.agent_test.acme",
    "acme.agents.tf.dmpo.agent_test.make_networks",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.agent_test.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.dmpo": {
  "data": {
   "shadows": "acme.agents.tf.dmpo"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.make_networks": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.networks.CriticMultiplexer",
    "acme.tf.networks.DiscreteValuedHead",
    "acme.tf.networks.LayerNormMLP",
    "acme.tf.networks.MultivariateNormalDiagHead",
    "int",
    "list",
    "numpy.prod",
    "sonnet.Module",
    "sonnet.Sequential",
    "str",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dmpo.learning.DistributionalMPOLearner": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.agents.tf.dmpo.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dmpo.learning.DistributionalMPOLearner.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.tf.losses.MPO",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.identity",
    "tensorflow.int32",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.learning.DistributionalMPOLearner._step": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "acme.tf.losses.categorical",
    "acme.tf.networks.DiscreteValuedDistribution",
    "acme.tf.utils.tile_tensor",
    "acme.types.NestedTensor",
    "next",
    "sonnet.merge_leading_dims",
    "tensorflow.GradientTape",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.function",
    "tensorflow.math.log_softmax",
    "tensorflow.math.mod",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reduce_mean",
    "tensorflow.reshape",
    "tensorflow.stop_gradient",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.learning.DistributionalMPOLearner.get_variables": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.learning.DistributionalMPOLearner.step": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "acme.agents.tf.dmpo.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dmpo.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.dmpo.learning.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dqfd.DQfD": {
  "data": {
   "shadows": "acme.agents.tf.dqfd.agent.DQfD"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dqfd.agent.DQfD": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dqfd.agent.DQfD.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.TFClient",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.dqfd.agent.copy",
    "acme.agents.tf.dqfd.agent.functools",
    "acme.agents.tf.dqfd.agent.trfl",
    "acme.agents.tf.dqn.DQNLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.utils.create_variables",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Sequential",
    "super",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.data.experimental.sample_from_datasets"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.agent._n_step_transition_from_episode": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "acme.adders.reverb.ReplaySample",
    "acme.adders.reverb.SampleInfo",
    "acme.agents.tf.dqfd.agent.operator",
    "acme.agents.tf.dqfd.agent.tree",
    "acme.types.NestedTensor",
    "float",
    "int",
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.math.cumprod",
    "tensorflow.minimum",
    "tensorflow.pow",
    "tensorflow.random.uniform",
    "tensorflow.range",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.uint64"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.agent.acme_types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.dqn": {
  "data": {
   "shadows": "acme.agents.tf.dqn"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.dqfd.agent_test.DQfDTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dqfd.agent_test.DQfDTest.test_dqfd": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.agent",
    "acme.agents.tf.dqfd.agent.DQfD",
    "acme.agents.tf.dqfd.agent_test._make_network",
    "acme.agents.tf.dqfd.agent_test.acme",
    "acme.agents.tf.dqfd.agent_test.dm_env",
    "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.agent_test._make_network": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "sonnet.Flatten",
    "sonnet.Module",
    "sonnet.Sequential",
    "sonnet.nets.MLP"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.bsuite_demonstrations": {
  "data": {
   "shadows": "acme.agents.tf.dqfd.bsuite_demonstrations"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.dqfd": {
  "data": {
   "shadows": "acme.agents.tf.dqfd.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations": {
  "data": {
   "symbols_in_volume": [
    "absl.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder._reset_episode": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.discard_episode": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.episode_reward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.make_tf_dataset": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.tree",
    "len",
    "tensorflow.data.Dataset.from_generator"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.record_episode": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations._nested_stack"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder.step": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.dm_env",
    "numpy.array",
    "numpy.float32",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.FLAGS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_dataset": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
    "acme.agents.tf.dqfd.bsuite_demonstrations._run_optimal_deep_sea_episode",
    "bsuite.environments.deep_sea.DeepSea"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_stochastic_dataset": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
    "acme.agents.tf.dqfd.bsuite_demonstrations._run_optimal_deep_sea_episode",
    "bsuite.environments.deep_sea.DeepSea"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations._nested_stack": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.tree",
    "numpy.stack",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations._optimal_deep_sea_policy": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.dm_env",
    "bsuite.environments.deep_sea.DeepSea",
    "numpy.int32",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations._run_optimal_deep_sea_episode": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
    "acme.agents.tf.dqfd.bsuite_demonstrations._optimal_deep_sea_policy",
    "acme.agents.tf.dqfd.bsuite_demonstrations.dm_env",
    "bsuite.environments.deep_sea.DeepSea",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.deep_sea": {
  "data": {
   "shadows": "bsuite.environments.deep_sea"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.make_dataset": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "acme.agents.tf.dqfd.bsuite_demonstrations.FLAGS",
    "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_dataset",
    "acme.agents.tf.dqfd.bsuite_demonstrations._make_deep_sea_stochastic_dataset",
    "acme.agents.tf.dqfd.bsuite_demonstrations.dm_env",
    "bsuite.environments.deep_sea.DeepSea",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dqfd.bsuite_demonstrations.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dqn.DQN": {
  "data": {
   "shadows": "acme.agents.tf.dqn.agent.DQN"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.DQNLearner": {
  "data": {
   "shadows": "acme.agents.tf.dqn.learning.DQNLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dqn.agent.DQN": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dqn.agent.DQN.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.TFClient",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Prioritized",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.dqn.agent.copy",
    "acme.agents.tf.dqn.agent.trfl",
    "acme.agents.tf.dqn.learning.DQNLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.savers.Checkpointer",
    "acme.tf.utils.create_variables",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Sequential",
    "str",
    "super",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.agent.DQN.update": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.agent.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.dqn.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.dqn.agent_test.DQNTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dqn.agent_test.DQNTest.test_dqn": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.agents.tf.dqn.DQN",
    "acme.agents.tf.dqn.agent_test._make_network",
    "acme.agents.tf.dqn.agent_test.acme",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.agent_test._make_network": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "sonnet.Flatten",
    "sonnet.Module",
    "sonnet.Sequential",
    "sonnet.nets.MLP"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.dqn": {
  "data": {
   "shadows": "acme.agents.tf.dqn"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.dqn.learning.DQNLearner": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.agents.tf.dqn.learning.acme",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.dqn.learning.DQNLearner.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.adders.reverb.TFClient",
    "acme.tf.savers.Snapshotter",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.Module",
    "sonnet.optimizers.Adam",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.int32",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.learning.DQNLearner._step": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.agents.tf.dqn.learning.trfl",
    "acme.tf.losses.huber",
    "next",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.abs",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.float64",
    "tensorflow.function",
    "tensorflow.math.mod",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.learning.DQNLearner.get_variables": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.learning.DQNLearner.state": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.learning.DQNLearner.step": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "acme.agents.tf.dqn.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.dqn.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.dqn.learning.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.impala": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.impala.IMPALA": {
  "data": {
   "shadows": "acme.agents.tf.impala.agent.IMPALA"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.IMPALAActor": {
  "data": {
   "shadows": "acme.agents.tf.impala.acting.IMPALAActor"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.IMPALALearner": {
  "data": {
   "shadows": "acme.agents.tf.impala.learning.IMPALALearner"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.impala.acting.IMPALAActor": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.impala.acting.IMPALAActor.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.tf.variable_utils.VariableClient",
    "sonnet.RNNCore",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.acting.IMPALAActor.observe": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "acme.agents.tf.impala.acting.dm_env",
    "acme.tf.utils.to_numpy_squeeze",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.acting.IMPALAActor.observe_first": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.agents.tf.impala.acting.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.acting.IMPALAActor.select_action": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.agents.tf.impala.acting.tfd",
    "acme.tf.utils.add_batch_dim",
    "acme.tf.utils.to_numpy_squeeze",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.acting.IMPALAActor.update": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.acting.adders": {
  "data": {
   "shadows": "acme.adders"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.tf2_variable_utils": {
  "data": {
   "shadows": "acme.tf.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.tfd": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "acme.agents.tf.impala.acting.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.acting.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.impala.agent.IMPALA": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.agents.tf.impala.agent.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.impala.agent.IMPALA.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.SequenceAdder",
    "acme.adders.reverb.SequenceAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table.queue",
    "acme.agents.tf.impala.acting.IMPALAActor",
    "acme.agents.tf.impala.learning.IMPALALearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.squeeze_batch_dim",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "float",
    "int",
    "sonnet.RNNCore",
    "tensorflow.float32",
    "tensorflow.ones",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent.IMPALA.observe": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "acme.agents.tf.impala.agent.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent.IMPALA.observe_first": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "acme.agents.tf.impala.agent.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent.IMPALA.select_action": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent.IMPALA.update": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.acting": {
  "data": {
   "shadows": "acme.agents.tf.impala.acting"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.impala.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.impala.agent_test.IMPALATest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.impala.agent_test.IMPALATest.test_impala": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.agents.tf.impala.IMPALA",
    "acme.agents.tf.impala.agent_test._make_network",
    "acme.agents.tf.impala.agent_test.acme",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent_test._make_network": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "acme.tf.networks.PolicyValueHead",
    "sonnet.DeepRNN",
    "sonnet.Flatten",
    "sonnet.LSTM",
    "sonnet.RNNCore",
    "sonnet.nets.MLP"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.impala": {
  "data": {
   "shadows": "acme.agents.tf.impala"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.impala.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.IMPALALearner": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.agents.tf.impala.learning.acme",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.impala.learning.IMPALALearner.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "acme.specs.EnvironmentSpec",
    "acme.tf.savers.Snapshotter",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "float",
    "iter",
    "numpy.inf",
    "sonnet.RNNCore",
    "sonnet.optimizers.Adam",
    "tensorflow.convert_to_tensor",
    "tensorflow.data.Dataset",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.learning.IMPALALearner._step": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "acme.agents.tf.impala.learning.reverb",
    "acme.agents.tf.impala.learning.tfd",
    "acme.agents.tf.impala.learning.tree",
    "acme.agents.tf.impala.learning.trfl",
    "acme.tf.utils.batch_to_sequence",
    "next",
    "sonnet.static_unroll",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.clip_by_value",
    "tensorflow.float32",
    "tensorflow.function",
    "tensorflow.reduce_mean",
    "tensorflow.square",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.learning.IMPALALearner.get_variables": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.learning.IMPALALearner.state": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointable",
    "property",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.learning.IMPALALearner.step": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "acme.agents.tf.impala.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.impala.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.tfd": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "acme.agents.tf.impala.learning.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.impala.learning.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.MCTS": {
  "data": {
   "shadows": "acme.agents.tf.mcts.agent.MCTS"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.acting.MCTSActor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.acting.acme",
    "acme.agents.tf.mcts.acting.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.acting.MCTSActor.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.adders.Adder",
    "acme.agents.tf.mcts.models.Model",
    "acme.specs.EnvironmentSpec",
    "acme.tf.variable_utils.VariableClient",
    "float",
    "int",
    "list",
    "numpy.float32",
    "numpy.ones",
    "range",
    "sonnet.Module",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.MCTSActor._forward": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.types.Observation",
    "acme.agents.tf.mcts.types.Probs",
    "acme.agents.tf.mcts.types.Value",
    "scipy.special.softmax",
    "tensorflow.expand_dims",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.MCTSActor.observe": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.acting.dm_env",
    "acme.agents.tf.mcts.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.MCTSActor.observe_first": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.acting.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.MCTSActor.select_action": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.mcts",
    "acme.agents.tf.mcts.search.puct",
    "acme.agents.tf.mcts.search.visit_count_policy",
    "acme.agents.tf.mcts.types.Action",
    "acme.agents.tf.mcts.types.Observation",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.MCTSActor.update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.acting.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.adders": {
  "data": {
   "shadows": "acme.adders"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.models": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.search": {
  "data": {
   "shadows": "acme.agents.tf.mcts.search"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.tf2_variable_utils": {
  "data": {
   "shadows": "acme.tf.variable_utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.acting.types": {
  "data": {
   "shadows": "acme.agents.tf.mcts.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.agent.MCTS": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.agent.MCTS.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.mcts.acting.MCTSActor",
    "acme.agents.tf.mcts.learning.AZLearner",
    "acme.agents.tf.mcts.models.Model",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.Array",
    "acme.specs.EnvironmentSpec",
    "acme.tf.utils.create_variables",
    "float",
    "int",
    "numpy.float32",
    "sonnet.Module",
    "sonnet.Optimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.agent.acting": {
  "data": {
   "shadows": "acme.agents.tf.mcts.acting"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.mcts.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.models": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mcts.agent_test.MCTSTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.agent_test.MCTSTest.test_mcts": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.MCTS",
    "acme.agents.tf.mcts.agent_test.acme",
    "acme.agents.tf.mcts.models.simulator.Simulator",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "acme.tf.networks.PolicyValueHead",
    "numpy.float32",
    "sonnet.Flatten",
    "sonnet.Sequential",
    "sonnet.nets.MLP",
    "sonnet.optimizers.Adam"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.mcts": {
  "data": {
   "shadows": "acme.agents.tf.mcts"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.simulator": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.simulator"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.learning.AZLearner": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.learning.AZLearner.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "float",
    "iter",
    "numpy.float32",
    "sonnet.Module",
    "sonnet.Optimizer",
    "tensorflow.data.Dataset"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.learning.AZLearner._step": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "next",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.function",
    "tensorflow.nn.softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.square",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.learning.AZLearner.get_variables": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.learning.AZLearner.step": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.models.Model": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.base.Model"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.base": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.models.base.Model": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc",
    "acme.agents.tf.mcts.models.base.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.base.Model.load_checkpoint": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.base.Model.needs_reset": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc",
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.base.Model.reset": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc",
    "acme.agents.tf.mcts.types.Observation"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.base.Model.save_checkpoint": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.base.Model.update": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.abc",
    "acme.agents.tf.mcts.models.base.dm_env",
    "acme.agents.tf.mcts.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.base.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.base.types": {
  "data": {
   "shadows": "acme.agents.tf.mcts.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.Model",
    "acme.agents.tf.mcts.types.Observation"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.mlp.MLPTransitionModel",
    "acme.specs.EnvironmentSpec",
    "acme.tf.utils.create_variables",
    "bsuite.baselines.utils.replay.Replay",
    "float",
    "int",
    "sonnet.optimizers.Adam",
    "tensorflow.function",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel._step": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sum",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.function",
    "tensorflow.nn.sigmoid_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.action_spec": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.load_checkpoint": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.needs_reset": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.observation_spec": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.reset": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "acme.agents.tf.mcts.models.mlp.dm_env",
    "acme.agents.tf.mcts.types.Observation"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.save_checkpoint": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.step": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "acme.agents.tf.mcts.models.mlp.dm_env",
    "acme.agents.tf.mcts.types.Action",
    "acme.tf.utils.add_batch_dim",
    "scipy.special.softmax"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPModel.update": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.mlp.dm_env",
    "acme.agents.tf.mcts.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPTransitionModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.mlp.MLPTransitionModel.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sonnet.Flatten",
    "tensorflow.Tensor",
    "tensorflow.concat",
    "tensorflow.one_hot",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.MLPTransitionModel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.mlp.MLPTransitionModel",
    "acme.specs.EnvironmentSpec",
    "int",
    "numpy.prod",
    "sonnet.Reshape",
    "sonnet.Sequential",
    "sonnet.nets.MLP",
    "super",
    "tensorflow.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.mlp.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.base": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.base"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.replay": {
  "data": {
   "shadows": "bsuite.baselines.utils.replay"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.mlp.types": {
  "data": {
   "shadows": "acme.agents.tf.mcts.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mcts.models.simulator.Checkpoint": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.dataclasses",
    "acme.agents.tf.mcts.models.simulator.dm_env",
    "bool"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.base.Model",
    "acme.agents.tf.mcts.models.simulator.Checkpoint",
    "acme.agents.tf.mcts.models.simulator.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.copy",
    "acme.agents.tf.mcts.models.simulator.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.action_spec": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.load_checkpoint": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.copy"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.needs_reset": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.observation_spec": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.reset": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.save_checkpoint": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.Checkpoint",
    "acme.agents.tf.mcts.models.simulator.copy"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.step": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "acme.agents.tf.mcts.models.simulator.dm_env",
    "acme.agents.tf.mcts.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.Simulator.update": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.dm_env",
    "acme.agents.tf.mcts.types.Action"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator.base": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.base"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator.types": {
  "data": {
   "shadows": "acme.agents.tf.mcts.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mcts.models.simulator_test.SimulatorTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.models.simulator_test.SimulatorTest._check_equal": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator_test.dm_env",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator_test.SimulatorTest.test_checkpointing": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.Simulator",
    "bsuite.environments.catch.Catch",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator_test.SimulatorTest.test_simulator_fidelity": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.models.simulator.Simulator",
    "bsuite.environments.catch.Catch",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.models.simulator_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator_test.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.models.simulator_test.simulator": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.simulator"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search": {
  "data": {
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.Node",
    "acme.agents.tf.mcts.types.Action",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mcts.search.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.Node": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.dataclasses",
    "acme.agents.tf.mcts.types.Action",
    "bool",
    "dict",
    "float",
    "int",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.search.Node.children_values": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.Node.children_visits": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.Node.expand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.Node",
    "enumerate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.Node.value": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.types.Value",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.SearchPolicy": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.search.argmax": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.types.Action",
    "check_numerics",
    "numpy.flatnonzero",
    "numpy.int32",
    "numpy.max",
    "numpy.ndarray",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.bfs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.Node",
    "acme.agents.tf.mcts.types.Action",
    "argmax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.check_numerics": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isfinite",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.mcts": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "acme.agents.tf.mcts.models.Model",
    "acme.agents.tf.mcts.search.Node",
    "acme.agents.tf.mcts.search.SearchPolicy",
    "acme.agents.tf.mcts.types.EvaluationFn",
    "acme.agents.tf.mcts.types.Observation",
    "evaluation",
    "float",
    "int",
    "numpy.random.dirichlet",
    "range",
    "search_policy"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.models": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.puct": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.Node",
    "acme.agents.tf.mcts.types.Action",
    "argmax",
    "check_numerics",
    "float",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search.types": {
  "data": {
   "shadows": "acme.agents.tf.mcts.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search.visit_count_policy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "acme.agents.tf.mcts.search.Node",
    "acme.agents.tf.mcts.types.Probs",
    "check_numerics",
    "float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mcts.search_test.TestSearch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mcts.search_test.TestSearch.test_catch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.agents.tf.mcts.models.simulator.Simulator",
    "acme.agents.tf.mcts.search.argmax",
    "acme.agents.tf.mcts.search.bfs",
    "acme.agents.tf.mcts.search.mcts",
    "acme.agents.tf.mcts.search.puct",
    "bsuite.environments.catch.Catch",
    "numpy.array",
    "numpy.ones",
    "typing.Text"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mcts.search_test.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.search": {
  "data": {
   "shadows": "acme.agents.tf.mcts.search"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.search_test.simulator": {
  "data": {
   "shadows": "acme.agents.tf.mcts.models.simulator"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.types": {
  "data": {
   "symbols_in_volume": [
    "acme.agents.tf.mcts.types.Observation",
    "acme.agents.tf.mcts.types.Probs",
    "acme.agents.tf.mcts.types.Value",
    "float",
    "int",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ndarray",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mcts.types.Action": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.types.Discount": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.EvaluationFn": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.Observation": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.Probs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.Reward": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.agents.tf.mcts.types.Value": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "acme.agents.tf.mcts.types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mpo.MPO": {
  "data": {
   "shadows": "acme.agents.tf.mpo.agent.MPO"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.MPOLearner": {
  "data": {
   "shadows": "acme.agents.tf.mpo.learning.MPOLearner"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mpo.agent.MPO": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mpo.agent.MPO.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.NStepTransitionAdder",
    "acme.adders.reverb.NStepTransitionAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.FeedForwardActor",
    "acme.agents.tf.mpo.agent.copy",
    "acme.agents.tf.mpo.learning.MPOLearner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.networks.StochasticSamplingHead",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "str",
    "super",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.mpo.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.mpo.agent_test.MPOTest": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mpo.agent_test.MPOTest.test_mpo": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "acme.agents.tf.mpo.MPO",
    "acme.agents.tf.mpo.agent_test.acme",
    "acme.agents.tf.mpo.agent_test.make_networks",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.make_networks": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.tf.networks.CriticMultiplexer",
    "acme.tf.networks.LayerNormMLP",
    "acme.tf.networks.MultivariateNormalDiagHead",
    "int",
    "list",
    "numpy.prod",
    "sonnet.Sequential"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.agent_test.mpo": {
  "data": {
   "shadows": "acme.agents.tf.mpo"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.mpo.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.MPOLearner": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.agents.tf.mpo.learning.acme"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.mpo.learning.MPOLearner.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.tf.losses.MPO",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.to_sonnet_module",
    "acme.types.TensorTransformation",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "float",
    "int",
    "iter",
    "sonnet.Module",
    "sonnet.Optimizer",
    "sonnet.Sequential",
    "sonnet.optimizers.Adam",
    "tensorflow.Variable",
    "tensorflow.data.Dataset",
    "tensorflow.identity",
    "tensorflow.int32",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.learning.MPOLearner._step": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "acme.agents.tf.mpo.learning.trfl",
    "acme.tf.utils.tile_tensor",
    "acme.types.Nest",
    "next",
    "sonnet.merge_leading_dims",
    "tensorflow.GradientTape",
    "tensorflow.cast",
    "tensorflow.clip_by_global_norm",
    "tensorflow.function",
    "tensorflow.math.mod",
    "tensorflow.reduce_mean",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "tensorflow.stop_gradient",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.learning.MPOLearner.get_variables": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "acme.tf.utils.to_numpy",
    "numpy.ndarray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.learning.MPOLearner.step": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "acme.agents.tf.mpo.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.mpo.learning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.mpo.learning.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.r2d2.R2D2": {
  "data": {
   "shadows": "acme.agents.tf.r2d2.agent.R2D2"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.r2d2.agent.R2D2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d2.agent.R2D2.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.SequenceAdder",
    "acme.adders.reverb.SequenceAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.TFClient",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Prioritized",
    "acme.agents.tf.actors.RecurrentActor",
    "acme.agents.tf.r2d2.agent.copy",
    "acme.agents.tf.r2d2.agent.trfl",
    "acme.agents.tf.r2d2.learning.R2D2Learner",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.squeeze_batch_dim",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "float",
    "int",
    "max",
    "sonnet.DeepRNN",
    "sonnet.RNNCore",
    "super",
    "tensorflow.data.experimental.AUTOTUNE"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent.R2D2.update": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.r2d2.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.r2d2.agent_test.R2D2Test": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d2.agent_test.R2D2Test.test_r2d2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "acme.agents.tf.r2d2.R2D2",
    "acme.agents.tf.r2d2.agent_test.SimpleNetwork",
    "acme.agents.tf.r2d2.agent_test.acme",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent_test.SimpleNetwork": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.tf.networks.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d2.agent_test.SimpleNetwork.__call__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent_test.SimpleNetwork.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "sonnet.DeepRNN",
    "sonnet.Flatten",
    "sonnet.LSTM",
    "sonnet.nets.MLP",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent_test.SimpleNetwork.initial_state": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent_test.SimpleNetwork.unroll": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sonnet.static_unroll"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.r2d2": {
  "data": {
   "shadows": "acme.agents.tf.r2d2"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning": {
  "data": {
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.r2d2.learning.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.agents.tf.r2d2.learning.acme",
    "acme.tf.savers.TFSaveable"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.adders.reverb.ReplaySample",
    "acme.adders.reverb.TFClient",
    "acme.agents.tf.r2d2.learning.functools",
    "acme.specs.EnvironmentSpec",
    "acme.tf.networks.RNNCore",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.TerminalLogger",
    "bool",
    "float",
    "int",
    "isinstance",
    "iter",
    "sonnet.RNNCore",
    "sonnet.optimizers.Adam",
    "sonnet.static_unroll",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.data.Dataset",
    "tensorflow.float32",
    "typing.Iterator",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner._step": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.ReplaySample",
    "acme.agents.tf.r2d2.learning.tree",
    "acme.tf.losses.transformed_n_step_loss",
    "acme.tf.utils.batch_to_sequence",
    "compute_priority",
    "next",
    "str",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.argmax",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.float64",
    "tensorflow.function",
    "tensorflow.identity",
    "tensorflow.int32",
    "tensorflow.math.mod",
    "tensorflow.one_hot",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner.get_variables": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "acme.agents.tf.r2d2.learning.Variables",
    "acme.tf.utils.to_numpy",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner.state": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointable",
    "property",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.R2D2Learner.step": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "acme.agents.tf.r2d2.learning.time"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.Variables": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "acme.agents.tf.r2d2.learning.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.compute_priority": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "float",
    "tensorflow.Tensor",
    "tensorflow.abs",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d2.learning.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.losses": {
  "data": {
   "shadows": "acme.tf.losses"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d2.learning.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.r2d3.R2D3": {
  "data": {
   "shadows": "acme.agents.tf.r2d3.agent.R2D3"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent": {
  "data": {},
  "type": "module"
 },
 "acme.agents.tf.r2d3.agent.R2D3": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.agents.agent.Agent"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d3.agent.R2D3.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.adders.reverb.Client",
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.adders.reverb.SequenceAdder",
    "acme.adders.reverb.SequenceAdder.signature",
    "acme.adders.reverb.Server",
    "acme.adders.reverb.TFClient",
    "acme.adders.reverb.Table",
    "acme.adders.reverb.rate_limiters.MinSize",
    "acme.adders.reverb.selectors.Fifo",
    "acme.adders.reverb.selectors.Uniform",
    "acme.agents.tf.actors.RecurrentActor",
    "acme.agents.tf.r2d2.learning.R2D2Learner",
    "acme.agents.tf.r2d3.agent.functools",
    "acme.agents.tf.r2d3.agent.trfl",
    "acme.datasets.make_reverb_dataset",
    "acme.specs.EnvironmentSpec",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.squeeze_batch_dim",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "bool",
    "dict",
    "float",
    "int",
    "max",
    "sonnet.DeepRNN",
    "sonnet.RNNCore",
    "str",
    "super",
    "tensorflow.data.Dataset",
    "tensorflow.data.experimental.AUTOTUNE",
    "tensorflow.data.experimental.sample_from_datasets"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent.R2D3.update": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent._sequence_from_episode": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_slice_and_pad",
    "acme.adders.reverb.ReplaySample",
    "acme.adders.reverb.SampleInfo",
    "acme.adders.reverb.Step",
    "acme.agents.tf.r2d3.agent.tree",
    "acme.types.NestedSpec",
    "acme.types.NestedTensor",
    "int",
    "tensorflow.Tensor",
    "tensorflow.equal",
    "tensorflow.expand_dims",
    "tensorflow.float64",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.minimum",
    "tensorflow.ones",
    "tensorflow.random.uniform",
    "tensorflow.shape",
    "tensorflow.tile",
    "tensorflow.uint64",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent._sequence_from_episode._sequence_zeros": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent._sequence_from_episode._slice_and_pad": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.shape",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent.acme_types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.actors": {
  "data": {
   "shadows": "acme.agents.tf.actors"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.agent": {
  "data": {
   "shadows": "acme.agents.agent"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.datasets": {
  "data": {
   "shadows": "acme.datasets"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.learning": {
  "data": {
   "shadows": "acme.agents.tf.r2d2.learning"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.agents.tf.r2d3.agent_test.R2D3Test": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d3.agent_test.R2D3Test.test_r2d3": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.agents.tf.dqfd.bsuite_demonstrations.DemonstrationRecorder",
    "acme.agents.tf.r2d3.R2D3",
    "acme.agents.tf.r2d3.agent_test.SimpleNetwork",
    "acme.agents.tf.r2d3.agent_test.acme",
    "acme.agents.tf.r2d3.agent_test.dm_env",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.DiscreteEnvironment",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent_test.SimpleNetwork": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.tf.networks.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.agents.tf.r2d3.agent_test.SimpleNetwork.__call__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent_test.SimpleNetwork.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.specs.DiscreteArray",
    "sonnet.DeepRNN",
    "sonnet.Flatten",
    "sonnet.LSTM",
    "sonnet.nets.MLP",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent_test.SimpleNetwork.initial_state": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent_test.SimpleNetwork.unroll": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sonnet.static_unroll"
   ]
  },
  "type": "function"
 },
 "acme.agents.tf.r2d3.agent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.acme": {
  "data": {
   "shadows": "acme"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.bsuite_demonstrations": {
  "data": {
   "shadows": "acme.agents.tf.dqfd.bsuite_demonstrations"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.r2d3": {
  "data": {
   "shadows": "acme.agents.tf.r2d3"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.agents.tf.r2d3.agent_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.core": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.core.Actor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.core.abc"
   ]
  },
  "type": "class"
 },
 "acme.core.Actor.observe": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.core.abc",
    "acme.core.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.core.Actor.observe_first": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.core.abc",
    "acme.core.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.core.Actor.select_action": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "acme.core.abc",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.core.Actor.update": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.core.abc",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.core.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "acme.core.Learner": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "acme.core.VariableSource",
    "acme.core.Worker"
   ]
  },
  "type": "class"
 },
 "acme.core.Learner.run": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "typing.NoReturn"
   ]
  },
  "type": "function"
 },
 "acme.core.Learner.step": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "acme.core.abc"
   ]
  },
  "type": "function"
 },
 "acme.core.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.core.NoReturn": {
  "data": {
   "shadows": "typing.NoReturn"
  },
  "type": "import"
 },
 "acme.core.Saveable": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "acme.core.T",
    "acme.core.abc",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "acme.core.Saveable.restore": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "acme.core.T",
    "acme.core.abc"
   ]
  },
  "type": "function"
 },
 "acme.core.Saveable.save": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "acme.core.T",
    "acme.core.abc"
   ]
  },
  "type": "function"
 },
 "acme.core.T": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.core.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.core.VariableSource": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "acme.core.abc"
   ]
  },
  "type": "class"
 },
 "acme.core.VariableSource.get_variables": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "acme.core.abc",
    "acme.types.NestedArray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.core.Worker": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "acme.core.abc"
   ]
  },
  "type": "class"
 },
 "acme.core.Worker.run": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "acme.core.abc"
   ]
  },
  "type": "function"
 },
 "acme.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.core.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.core.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.datasets": {
  "data": {},
  "type": "module"
 },
 "acme.datasets.make_reverb_dataset": {
  "data": {
   "shadows": "acme.datasets.reverb.make_reverb_dataset"
  },
  "type": "import"
 },
 "acme.datasets.reverb": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "acme.adders.reverb.deprecated.base",
    "acme.datasets.reverb.make_reverb_dataset"
   ]
  },
  "type": "module"
 },
 "acme.datasets.reverb.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.datasets.reverb._spec_to_shapes_and_dtypes": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.adders.reverb.deprecated.base",
    "acme.adders.reverb.deprecated.base.Step",
    "acme.datasets.reverb.tree",
    "acme.specs.Array",
    "acme.specs.EnvironmentSpec",
    "acme.types.NestedSpec",
    "bool",
    "int",
    "tensorflow.TensorShape",
    "tensorflow.as_dtype",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.datasets.reverb.deprecated_base": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.datasets.reverb.make_dataset": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "acme.datasets.reverb.make_reverb_dataset": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.adders.reverb.DEFAULT_PRIORITY_TABLE",
    "acme.specs.EnvironmentSpec",
    "acme.types.NestedSpec",
    "bool",
    "int",
    "str",
    "tensorflow.data.Dataset",
    "tensorflow.data.Dataset.range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb.make_reverb_dataset._make_dataset": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_spec_to_shapes_and_dtypes",
    "acme.adders.reverb.ReplayDataset",
    "acme.adders.reverb.ReplayDataset.from_table_signature",
    "tensorflow.Tensor",
    "tensorflow.data.Dataset"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.datasets.reverb.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.datasets.reverb.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.datasets.reverb.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.datasets.reverb.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.datasets.reverb_test.DatasetsTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase",
    "acme.datasets.reverb.Client",
    "acme.datasets.reverb.Server"
   ]
  },
  "type": "class"
 },
 "acme.datasets.reverb_test.DatasetsTest.server_address": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.setUpClass": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.datasets.reverb_test.DatasetsTest",
    "acme.datasets.reverb_test._reverb_client",
    "acme.datasets.reverb_test._reverb_server",
    "classmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.tearDown": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "acme.datasets.reverb_test.DatasetsTest",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.tearDownClass": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "acme.datasets.reverb_test.DatasetsTest",
    "classmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_nested_specs": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.EnvironmentSpec",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_simple": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.specs.Array",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_transition_adder": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment",
    "tuple"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_batch_size": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.datasets.reverb_test.tree",
    "acme.specs.Array",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_batch_size.make_tensor_spec": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_sequence_length_and_batch_size": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.datasets.reverb_test.tree",
    "acme.specs.Array",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_sequence_length_and_batch_size.make_tensor_spec": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_sequence_length_size": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "acme.adders.reverb.Step",
    "acme.datasets.reverb.make_dataset",
    "acme.datasets.reverb_test._check_specs",
    "acme.datasets.reverb_test.tree",
    "acme.specs.Array",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.ContinuousEnvironment",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_sequence_length_size.make_tensor_spec": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.DatasetsTest.test_make_dataset_with_variable_length_instances": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "acme.datasets.reverb.make_dataset",
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.EnvironmentSpec"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test._check_specs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.datasets.reverb_test.tree"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test._check_specs.check_spec": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "acme.specs.Array",
    "numpy.array_equal",
    "tensorflow.TensorSpec",
    "tensorflow.dtypes.as_dtype"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test._reverb_client": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.datasets.reverb.Client"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test._reverb_server": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.datasets.reverb.Server",
    "acme.datasets.reverb.Table",
    "acme.datasets.reverb.rate_limiters.MinSize",
    "acme.datasets.reverb.selectors.Fifo",
    "acme.datasets.reverb.selectors.Uniform"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test._reverb_tf_client": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "acme.datasets.reverb.TFClient"
   ]
  },
  "type": "function"
 },
 "acme.datasets.reverb_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.adders": {
  "data": {
   "shadows": "acme.adders.reverb"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.reverb_dataset": {
  "data": {
   "shadows": "acme.datasets.reverb"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.datasets.reverb_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.environment_loop": {
  "data": {},
  "type": "module"
 },
 "acme.environment_loop.EnvironmentLoop": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.core.Worker"
   ]
  },
  "type": "class"
 },
 "acme.environment_loop.EnvironmentLoop.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "acme.core.Actor",
    "acme.environment_loop.dm_env",
    "acme.utils.counting.Counter",
    "acme.utils.loggers.Logger",
    "acme.utils.loggers.make_default_logger",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop.EnvironmentLoop.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "should_terminate",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop.EnvironmentLoop.run.should_terminate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop.EnvironmentLoop.run_episode": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "acme.environment_loop.operator",
    "acme.environment_loop.time",
    "acme.environment_loop.tree",
    "acme.utils.loggers.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.environment_loop._generate_zeros_from_spec": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dm_env.specs.Array",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.environment_loop.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.environment_loop.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.environment_loop.loggers": {
  "data": {
   "shadows": "acme.utils.loggers"
  },
  "type": "import"
 },
 "acme.environment_loop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.environment_loop.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "acme.environment_loop.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.environment_loop.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.environment_loop.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.environment_loop_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "acme.environment_loop_test.F32",
    "acme.environment_loop_test.F32_1x3",
    "acme.environment_loop_test.F32_2_MIN_0_MAX_1",
    "acme.environment_loop_test.F32_2x1_MIN_0_MAX_1",
    "acme.environment_loop_test.TREE",
    "acme.environment_loop_test.TREE_MIN_0_MAX_1",
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "numpy.float32"
   ]
  },
  "type": "module"
 },
 "acme.environment_loop_test.EPISODE_LENGTH": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.environment_loop_test.EnvironmentLoopTest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.environment_loop_test.EnvironmentLoopTest.test_one_episode": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "_parameterized_setup",
    "absl.testing.parameterized.named_parameters",
    "acme.environment_loop_test.EPISODE_LENGTH",
    "acme.environment_loop_test.TEST_CASES"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop_test.EnvironmentLoopTest.test_run_episodes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_parameterized_setup",
    "absl.testing.parameterized.named_parameters",
    "acme.environment_loop_test.EPISODE_LENGTH",
    "acme.environment_loop_test.TEST_CASES"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop_test.EnvironmentLoopTest.test_run_steps": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "_parameterized_setup",
    "absl.testing.parameterized.named_parameters",
    "acme.environment_loop_test.EPISODE_LENGTH",
    "acme.environment_loop_test.TEST_CASES"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop_test.F32": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "acme.environment_loop_test.F32_1x3": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "acme.environment_loop_test.F32_2_MIN_0_MAX_1": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.environment_loop_test.F32_2x1_MIN_0_MAX_1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.environment_loop_test.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.environment_loop_test.TEST_CASES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "acme.environment_loop_test.TREE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "acme.environment_loop_test.TREE_MIN_0_MAX_1": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "acme.environment_loop_test._parameterized_setup": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "acme.environment_loop.EnvironmentLoop",
    "acme.environment_loop_test.EPISODE_LENGTH",
    "acme.specs.make_environment_spec",
    "acme.testing.fakes.Actor",
    "acme.testing.fakes.DiscreteEnvironment",
    "acme.types.NestedSpec",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.environment_loop_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.environment_loop_test.environment_loop": {
  "data": {
   "shadows": "acme.environment_loop"
  },
  "type": "import"
 },
 "acme.environment_loop_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.environment_loop_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.environment_loop_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.environment_loop_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.environment_loop_test.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.jax": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks.AtariTorso": {
  "data": {
   "shadows": "acme.jax.networks.atari.AtariTorso"
  },
  "type": "import"
 },
 "acme.jax.networks.CategoricalHead": {
  "data": {
   "shadows": "acme.jax.networks.distributional.CategoricalHead"
  },
  "type": "import"
 },
 "acme.jax.networks.ClipToSpec": {
  "data": {
   "shadows": "acme.jax.networks.rescaling.ClipToSpec"
  },
  "type": "import"
 },
 "acme.jax.networks.DeepIMPALAAtariNetwork": {
  "data": {
   "shadows": "acme.jax.networks.atari.DeepIMPALAAtariNetwork"
  },
  "type": "import"
 },
 "acme.jax.networks.LayerNormMLP": {
  "data": {
   "shadows": "acme.jax.networks.continuous.LayerNormMLP"
  },
  "type": "import"
 },
 "acme.jax.networks.Logits": {
  "data": {
   "shadows": "acme.jax.networks.base.Logits"
  },
  "type": "import"
 },
 "acme.jax.networks.NearZeroInitializedLinear": {
  "data": {
   "shadows": "acme.jax.networks.continuous.NearZeroInitializedLinear"
  },
  "type": "import"
 },
 "acme.jax.networks.PolicyValueHead": {
  "data": {
   "shadows": "acme.jax.networks.policy_value.PolicyValueHead"
  },
  "type": "import"
 },
 "acme.jax.networks.PolicyValueRNN": {
  "data": {
   "shadows": "acme.jax.networks.base.PolicyValueRNN"
  },
  "type": "import"
 },
 "acme.jax.networks.QNetwork": {
  "data": {
   "shadows": "acme.jax.networks.base.QNetwork"
  },
  "type": "import"
 },
 "acme.jax.networks.R2D2AtariNetwork": {
  "data": {
   "shadows": "acme.jax.networks.atari.R2D2AtariNetwork"
  },
  "type": "import"
 },
 "acme.jax.networks.RecurrentQNetwork": {
  "data": {
   "shadows": "acme.jax.networks.base.RecurrentQNetwork"
  },
  "type": "import"
 },
 "acme.jax.networks.TanhToSpec": {
  "data": {
   "shadows": "acme.jax.networks.rescaling.TanhToSpec"
  },
  "type": "import"
 },
 "acme.jax.networks.Value": {
  "data": {
   "shadows": "acme.jax.networks.base.Value"
  },
  "type": "import"
 },
 "acme.jax.networks.atari": {
  "data": {
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "module"
 },
 "acme.jax.networks.atari.AtariTorso": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.jax.networks.base.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.atari.AtariTorso.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "acme.jax.networks.atari.Images",
    "jax.numpy.ndarray",
    "jax.numpy.ndim",
    "jax.numpy.reshape"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.AtariTorso.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.jax.networks.atari.jax",
    "haiku.Conv2D",
    "haiku.Sequential",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepAtariTorso": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "acme.jax.networks.base.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.atari.DeepAtariTorso.__call__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepAtariTorso.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "acme.jax.networks.atari.ResidualBlock",
    "acme.jax.networks.atari.functools",
    "acme.jax.networks.atari.jax",
    "enumerate",
    "haiku.Conv2D",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "haiku.max_pool",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepIMPALAAtariNetwork": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.atari.DeepIMPALAAtariNetwork.__call__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "acme.jax.networks.base.LSTMOutputs",
    "acme.wrappers.observation_action_reward.OAR",
    "haiku.LSTMState"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepIMPALAAtariNetwork.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "acme.jax.networks.atari.DeepAtariTorso",
    "acme.jax.networks.embedding.OAREmbedding",
    "acme.jax.networks.policy_value.PolicyValueHead",
    "haiku.LSTM",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepIMPALAAtariNetwork.initial_state": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "haiku.LSTMState",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.DeepIMPALAAtariNetwork.unroll": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "acme.jax.networks.base.LSTMOutputs",
    "acme.wrappers.observation_action_reward.OAR",
    "haiku.LSTMState",
    "haiku.static_unroll"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.Images": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "acme.jax.networks.atari.R2D2AtariNetwork": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.atari.R2D2AtariNetwork.__call__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "acme.jax.networks.base.QValues",
    "acme.wrappers.observation_action_reward.OAR",
    "haiku.LSTMState",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.R2D2AtariNetwork.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "acme.jax.networks.atari.AtariTorso",
    "acme.jax.networks.duelling.DuellingMLP",
    "acme.jax.networks.embedding.OAREmbedding",
    "haiku.LSTM",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.R2D2AtariNetwork.initial_state": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "haiku.LSTMState",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.R2D2AtariNetwork.unroll": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "acme.jax.networks.base.QValues",
    "acme.wrappers.observation_action_reward.OAR",
    "haiku.LSTMState",
    "haiku.static_unroll",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.ResidualBlock": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.atari.ResidualBlock.__call__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.ResidualBlock.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "acme.jax.networks.atari.jax",
    "haiku.Conv2D",
    "haiku.Sequential",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.base": {
  "data": {
   "shadows": "acme.jax.networks.base"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.dqn_atari_network": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.jax.networks.base.QNetwork",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.dqn_atari_network.network": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.jax.networks.atari.AtariTorso",
    "acme.jax.networks.atari.Images",
    "acme.jax.networks.base.QValues",
    "acme.jax.networks.duelling.DuellingMLP",
    "haiku.Sequential",
    "model"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.atari.duelling": {
  "data": {
   "shadows": "acme.jax.networks.duelling"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.embedding": {
  "data": {
   "shadows": "acme.jax.networks.embedding"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.observation_action_reward": {
  "data": {
   "shadows": "acme.wrappers.observation_action_reward"
  },
  "type": "import"
 },
 "acme.jax.networks.atari.policy_value": {
  "data": {
   "shadows": "acme.jax.networks.policy_value"
  },
  "type": "import"
 },
 "acme.jax.networks.base": {
  "data": {
   "symbols_in_volume": [
    "acme.jax.networks.base.LSTMOutputs",
    "acme.jax.networks.base.Logits",
    "acme.jax.networks.base.QValues",
    "acme.jax.networks.base.Value",
    "acme.types.NestedArray",
    "haiku.LSTMState",
    "jax.numpy.ndarray",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "acme.jax.networks.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.jax.networks.base.LSTMOutputs": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.jax.networks.base.Logits": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.jax.networks.base.Module": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.jax.networks.base.abc",
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.base.Module.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "acme.jax.networks.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.base.PolicyValueRNN": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.jax.networks.base.QNetwork": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.jax.networks.base.QValues": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.jax.networks.base.RecurrentQNetwork": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.jax.networks.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.jax.networks.base.Value": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.jax.networks.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.jax.networks.base.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.base.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.base.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.jax.networks.continuous": {
  "data": {
   "symbols_in_volume": [
    "haiku.initializers.UniformScaling"
   ]
  },
  "type": "module"
 },
 "acme.jax.networks.continuous.LayerNormMLP": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.continuous.LayerNormMLP.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.continuous.LayerNormMLP.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "acme.jax.networks.continuous.jax",
    "acme.jax.networks.continuous.uniform_initializer",
    "bool",
    "haiku.LayerNorm",
    "haiku.Linear",
    "haiku.Sequential",
    "haiku.nets.MLP",
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.continuous.NearZeroInitializedLinear": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku.Linear"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.continuous.NearZeroInitializedLinear.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "haiku.initializers.VarianceScaling",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.continuous.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.jax.networks.continuous.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.continuous.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.jax.networks.continuous.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.continuous.uniform_initializer": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.jax.networks.distributional": {
  "data": {
   "symbols_in_volume": [
    "acme.jax.networks.distributional.tensorflow_probability"
   ]
  },
  "type": "module"
 },
 "acme.jax.networks.distributional.CategoricalHead": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.distributional.CategoricalHead.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.jax.networks.distributional.tfd"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.distributional.CategoricalHead.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "haiku.Linear",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.distributional.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.jax.networks.distributional.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.distributional.tensorflow_probability": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.jax.networks.distributional.tfd": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "acme.jax.networks.dqn_atari_network": {
  "data": {
   "shadows": "acme.jax.networks.atari.dqn_atari_network"
  },
  "type": "import"
 },
 "acme.jax.networks.duelling": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks.duelling.DuellingMLP": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.duelling.DuellingMLP.__call__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "jax.numpy.mean",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.duelling.DuellingMLP.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku.nets.MLP",
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.duelling.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.jax.networks.duelling.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.duelling.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks.embedding.OAREmbedding": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.jax.networks.base.Module",
    "acme.jax.networks.embedding.dataclasses",
    "haiku.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.embedding.OAREmbedding.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.jax.networks.embedding.jax",
    "acme.wrappers.observation_action_reward.OAR",
    "jax.numpy.concatenate",
    "jax.numpy.expand_dims",
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "jax.numpy.tanh",
    "len"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.embedding.base": {
  "data": {
   "shadows": "acme.jax.networks.base"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.embedding.observation_action_reward": {
  "data": {
   "shadows": "acme.wrappers.observation_action_reward"
  },
  "type": "import"
 },
 "acme.jax.networks.policy_value": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks.policy_value.PolicyValueHead": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.policy_value.PolicyValueHead.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.policy_value.PolicyValueHead.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku.Linear",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.policy_value.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.jax.networks.policy_value.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.policy_value.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.rescaling": {
  "data": {},
  "type": "module"
 },
 "acme.jax.networks.rescaling.ClipToSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.rescaling.ClipToSpec.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "jax.numpy.clip",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.ClipToSpec.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.RescaleToSpec": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.rescaling.RescaleToSpec.__call__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.RescaleToSpec.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.TanhToSpec": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "acme.jax.networks.rescaling.TanhToSpec.__call__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "jax.lax.tanh",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.TanhToSpec.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.networks.rescaling.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.networks.rescaling.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.networks.rescaling.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "acme.jax.networks.rescaling.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.jax.savers": {
  "data": {
   "symbols_in_volume": [
    "acme.jax.savers.datetime",
    "float",
    "int",
    "typing.Any",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.jax.savers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.jax.savers.CheckpointState": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "acme.jax.savers.Checkpointer": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "acme.jax.savers.Checkpointer.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "acme.core.Saveable",
    "acme.jax.savers._DEFAULT_CHECKPOINT_TTL",
    "acme.jax.savers.threading",
    "acme.utils.paths.process_path",
    "bool",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.Checkpointer.restore": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.jax.savers._EXEMPLAR_NAME",
    "acme.jax.savers.os",
    "acme.jax.savers.restore_from_path"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.Checkpointer.save": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.jax.savers.save_to_path",
    "acme.jax.savers.time",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "acme.core.Worker"
   ]
  },
  "type": "class"
 },
 "acme.jax.savers.CheckpointingRunner.__dir__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner.__getattr__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "acme.core.Saveable",
    "acme.core.Worker",
    "acme.jax.savers.Checkpointer",
    "float",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner.checkpoint": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "acme.jax.savers.time"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner.run": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "absl.logging.warning",
    "acme.core.Worker",
    "acme.jax.savers.signal",
    "acme.jax.savers.threading",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.CheckpointingRunner.run._signal_handler": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.jax.savers.signal"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.Number": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "acme.jax.savers.T": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "acme.jax.savers.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.jax.savers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.jax.savers._ARRAY_NAME": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "acme.jax.savers._DEFAULT_CHECKPOINT_TTL": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "acme.jax.savers._EXEMPLAR_NAME": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "acme.jax.savers.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.jax.savers.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "acme.jax.savers.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.savers.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.jax.savers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.jax.savers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.jax.savers.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.jax.savers.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "acme.jax.savers.restore_from_path": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.jax.savers.CheckpointState",
    "acme.jax.savers._ARRAY_NAME",
    "acme.jax.savers._EXEMPLAR_NAME",
    "acme.jax.savers.os",
    "acme.jax.savers.pickle",
    "acme.jax.savers.tree",
    "numpy.load",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.restore_from_path.maybe_convert_to_python": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy",
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.save_to_path": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.jax.savers.CheckpointState",
    "acme.jax.savers._ARRAY_NAME",
    "acme.jax.savers._EXEMPLAR_NAME",
    "acme.jax.savers.os",
    "acme.jax.savers.pickle",
    "acme.jax.savers.tree",
    "isinstance",
    "jax.numpy.DeviceArray",
    "numpy.ndarray",
    "numpy.savez",
    "open",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.save_to_path._disabled_seek": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "acme.jax.savers.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.jax.savers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.jax.savers.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.jax.savers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.jax.savers_test.DummySaveable": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.core.Saveable"
   ]
  },
  "type": "class"
 },
 "acme.jax.savers_test.DummySaveable.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "acme.jax.savers_test.DummySaveable.restore": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "acme.jax.savers_test.DummySaveable.save": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "acme.jax.savers_test.SaverTest": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.testing.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.jax.savers_test.SaverTest.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "jax.numpy.float32",
    "jax.numpy.int32",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers_test.SaverTest.test_checkpointer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "acme.jax.savers.Checkpointer",
    "acme.jax.savers_test.DummySaveable",
    "acme.jax.savers_test.nest_assert_equal",
    "acme.utils.paths",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers_test.SaverTest.test_save_restore": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "acme.jax.savers.restore_from_path",
    "acme.jax.savers.save_to_path",
    "acme.jax.savers_test.nest_assert_equal"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.jax.savers_test.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.jax.savers_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.savers_test.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "acme.jax.savers_test.nest_assert_equal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "acme.jax.savers_test.tree",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "acme.jax.savers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.jax.savers_test.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.jax.savers_test.savers": {
  "data": {
   "shadows": "acme.jax.savers"
  },
  "type": "import"
 },
 "acme.jax.savers_test.test_utils": {
  "data": {
   "shadows": "acme.testing.test_utils"
  },
  "type": "import"
 },
 "acme.jax.savers_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.jax.utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.jax.utils.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "acme.jax.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "acme.jax.utils.T": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "acme.jax.utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.jax.utils._flatten": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.jax.utils._transform_without_rng",
    "haiku.Flatten",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils._transform_without_rng": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku.transform",
    "haiku.without_apply_rng"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.add_batch_dim": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.numpy.expand_dims",
    "jax.tree_util.tree_map"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.batch_concat": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.jax.utils._flatten",
    "acme.jax.utils.tree",
    "acme.types.NestedArray",
    "int",
    "jax.numpy.concatenate",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.batch_to_sequence": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.numpy.transpose",
    "jax.tree_util.tree_map",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.fetch_devicearray": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "acme.jax.utils.tree",
    "acme.types.Nest"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.fetch_devicearray._serialize": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "jax.numpy.DeviceArray",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.utils.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.jax.utils.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.utils.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.jax.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.jax.utils.prefetch": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "acme.jax.utils.T",
    "acme.jax.utils.queue",
    "acme.jax.utils.threading",
    "int",
    "object",
    "typing.Generator",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.prefetch.producer": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "absl.logging.exception",
    "acme.jax.utils.jax"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "acme.jax.utils.squeeze_batch_dim": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.numpy.squeeze",
    "jax.tree_util.tree_map"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.jax.utils.to_numpy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.tree_util.tree_map",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.to_numpy_squeeze": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.tree_util.tree_map",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.jax.utils.tree_util": {
  "data": {
   "shadows": "jax.tree_util"
  },
  "type": "import"
 },
 "acme.jax.utils.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.jax.utils.zeros_like": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.types.NestedArray",
    "jax.numpy.zeros",
    "jax.tree_util.tree_map"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.jax.utils_test.JaxUtilsTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.jax.utils_test.JaxUtilsTest.test_batch_concat": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.jax.utils.batch_concat",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "acme.jax.utils_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.jax.utils_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.utils_test.utils": {
  "data": {
   "shadows": "acme.jax.utils"
  },
  "type": "import"
 },
 "acme.jax.variable_utils": {
  "data": {},
  "type": "module"
 },
 "acme.jax.variable_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.jax.variable_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.jax.variable_utils.VariableClient": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "acme.jax.variable_utils.VariableClient.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.core.VariableSource",
    "concurrent.futures.Future",
    "concurrent.futures.ThreadPoolExecutor",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils.VariableClient._callback": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku.Params",
    "len",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils.VariableClient.params": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "haiku.Params",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils.VariableClient.update": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils.VariableClient.update_and_wait": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "acme.jax.variable_utils.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.jax.variable_utils.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "acme.jax.variable_utils.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.jax.variable_utils_test.VariableClientTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.jax.variable_utils_test.VariableClientTest.test_update": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.jax.variable_utils.VariableClient",
    "acme.jax.variable_utils_test.dummy_network",
    "acme.jax.variable_utils_test.jax",
    "acme.jax.variable_utils_test.tree",
    "acme.testing.fakes.VariableSource",
    "haiku.transform",
    "haiku.without_apply_rng",
    "init_fn",
    "jax.numpy.zeros",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.dummy_network": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "haiku.nets.MLP"
   ]
  },
  "type": "function"
 },
 "acme.jax.variable_utils_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.jax.variable_utils_test.variable_utils": {
  "data": {
   "shadows": "acme.jax.variable_utils"
  },
  "type": "import"
 },
 "acme.make_environment_spec": {
  "data": {
   "shadows": "acme.specs.make_environment_spec"
  },
  "type": "import"
 },
 "acme.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.specs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.specs.Array": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "acme.specs.BoundedArray": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "acme.specs.DiscreteArray": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.specs.EnvironmentSpec": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "typing.Any",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.specs.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.specs.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.specs.make_environment_spec": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.specs.EnvironmentSpec",
    "acme.specs.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.specs.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.testing": {
  "data": {},
  "type": "module"
 },
 "acme.testing.fakes": {
  "data": {},
  "type": "module"
 },
 "acme.testing.fakes.Actor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.core.Actor"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.Actor.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.specs.EnvironmentSpec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Actor.observe": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "_validate_spec",
    "acme.testing.fakes.dm_env",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Actor.observe_first": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_validate_spec",
    "acme.testing.fakes.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Actor.select_action": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_generate_from_spec",
    "_validate_spec",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Actor.update": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.ContinuousEnvironment": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "acme.testing.fakes.Environment"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.ContinuousEnvironment.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.EnvironmentSpec",
    "bool",
    "int",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.DiscreteEnvironment": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "acme.testing.fakes._BaseDiscreteEnvironment"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.DiscreteEnvironment.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "acme.types.NestedSpec",
    "int",
    "numpy.int32",
    "obs_dtype",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "acme.testing.fakes.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.Environment.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "acme.specs.EnvironmentSpec",
    "acme.testing.fakes.tree",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.__init__.check_discount_spec": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "acme.specs.BoundedArray",
    "isinstance",
    "numpy.isclose",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment._generate_fake_discount": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_generate_from_spec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment._generate_fake_observation": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_generate_from_spec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment._generate_fake_reward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_generate_from_spec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.action_spec": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.discount_spec": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.observation_spec": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.reset": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "acme.testing.fakes.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.reward_spec": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "acme.testing.fakes.Environment.step": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_validate_spec",
    "acme.testing.fakes.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Learner": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "acme.core.Learner",
    "acme.testing.fakes.VariableSource"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.Learner.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "acme.testing.fakes.threading",
    "acme.types.NestedArray",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Learner.step": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "acme.testing.fakes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.testing.fakes.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.testing.fakes.NestedDiscreteEnvironment": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "acme.testing.fakes._BaseDiscreteEnvironment"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.NestedDiscreteEnvironment.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "acme.types.NestedSpec",
    "int",
    "numpy.int32",
    "obs_dtype",
    "str",
    "super",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.testing.fakes.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.testing.fakes.VariableSource": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "acme.core.VariableSource"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes.VariableSource.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.testing.fakes.threading",
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.VariableSource.get_variables": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes._BaseDiscreteEnvironment": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "acme.testing.fakes.Environment"
   ]
  },
  "type": "class"
 },
 "acme.testing.fakes._BaseDiscreteEnvironment.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "acme.specs.DiscreteArray",
    "acme.specs.EnvironmentSpec",
    "acme.types.NestedSpec",
    "int",
    "numpy.float32",
    "numpy.int32",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes._generate_from_spec": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "acme.testing.fakes.tree",
    "acme.types.NestedArray",
    "acme.types.NestedSpec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes._validate_spec": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "acme.testing.fakes.tree",
    "acme.types.NestedArray",
    "acme.types.NestedSpec"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.testing.fakes.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.testing.fakes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.testing.fakes.reverb": {
  "data": {
   "shadows": "reverb"
  },
  "type": "import"
 },
 "acme.testing.fakes.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.testing.fakes.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.testing.fakes.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.testing.fakes.transition_dataset": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "acme.testing.fakes.dm_env",
    "acme.testing.fakes.reverb",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.uint64",
    "tensorflow.data.Dataset",
    "tensorflow.data.Dataset.from_tensors"
   ]
  },
  "type": "function"
 },
 "acme.testing.fakes.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.testing.fakes.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.testing.test_utils": {
  "data": {},
  "type": "module"
 },
 "acme.testing.test_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.testing.test_utils.TestCase": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.testing.test_utils.TestCase.get_tempdir": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.flags.FLAGS",
    "absl.flags.FLAGS.test_tmpdir",
    "absl.flags.UnparsedFlagAccessError",
    "acme.testing.test_utils.sys",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.testing.test_utils.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.testing.test_utils.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "acme.testing.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "acme.tf": {
  "data": {},
  "type": "module"
 },
 "acme.tf.losses": {
  "data": {},
  "type": "module"
 },
 "acme.tf.losses.MPO": {
  "data": {
   "shadows": "acme.tf.losses.mpo.MPO"
  },
  "type": "import"
 },
 "acme.tf.losses.categorical": {
  "data": {
   "shadows": "acme.tf.losses.distributional.categorical"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional": {
  "data": {},
  "type": "module"
 },
 "acme.tf.losses.distributional.categorical": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "acme.tf.networks.DiscreteValuedDistribution",
    "l2_project",
    "tensorflow.Tensor",
    "tensorflow.nn.softmax",
    "tensorflow.nn.softmax_cross_entropy_with_logits",
    "tensorflow.reshape",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional.l2_project": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.reduce_sum",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional.multiaxis_categorical": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "acme.tf.networks.DiscreteValuedDistribution",
    "multiaxis_l2_project",
    "tensorflow.Tensor",
    "tensorflow.assert_equal",
    "tensorflow.nn.softmax",
    "tensorflow.nn.softmax_cross_entropy_with_logits",
    "tensorflow.rank",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional.multiaxis_l2_project": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.assert_equal",
    "tensorflow.broadcast_dynamic_shape",
    "tensorflow.broadcast_to",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.int32",
    "tensorflow.math.maximum",
    "tensorflow.ones",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.roll",
    "tensorflow.shape",
    "tensorflow.size"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.losses.distributional_test.L2ProjectTest": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.losses.distributional_test.L2ProjectTest.test_l2_projection": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.tf.losses.distributional.multiaxis_l2_project",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional_test.L2ProjectTest.test_multiaxis": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.tf.losses.distributional.multiaxis_l2_project",
    "acme.tf.losses.distributional_test._reference_l2_project",
    "make_support",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional_test.L2ProjectTest.test_multiaxis.make_support": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional_test._reference_l2_project": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "acme.tf.losses.distributional.l2_project",
    "len",
    "numpy.broadcast",
    "numpy.broadcast_to",
    "numpy.reshape",
    "numpy.zeros",
    "range",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.distributional_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test.distributional": {
  "data": {
   "shadows": "acme.tf.losses.distributional"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.tf.losses.distributional_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.dpg": {
  "data": {
   "shadows": "acme.tf.losses.dpg.dpg"
  },
  "type": "import"
 },
 "acme.tf.losses.dpg.dpg": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "tensorflow.GradientTape",
    "tensorflow.Tensor",
    "tensorflow.clip_by_norm",
    "tensorflow.clip_by_value",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.dpg.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.huber": {
  "data": {
   "shadows": "acme.tf.losses.huber.huber"
  },
  "type": "import"
 },
 "acme.tf.losses.huber.huber": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "tensorflow.Tensor",
    "tensorflow.abs",
    "tensorflow.constant",
    "tensorflow.minimum"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.huber.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.losses.mpo.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo.MPO": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.losses.mpo.MPO.__call__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "acme.tf.losses.mpo._MPO_FLOAT_EPSILON",
    "acme.tf.losses.mpo.tfd",
    "compute_cross_entropy_loss",
    "compute_nonparametric_kl_from_normalized_weights",
    "compute_parametric_kl_penalty_and_dual_loss",
    "compute_weights_and_temperature_loss",
    "isinstance",
    "str",
    "tensorflow.Tensor",
    "tensorflow.clip_by_value",
    "tensorflow.constant",
    "tensorflow.math.softplus",
    "tensorflow.maximum",
    "tensorflow.norm",
    "tensorflow.reduce_max",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_min",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.MPO.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "super",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.MPO.create_dual_variables_once": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sonnet.once",
    "tensorflow.DType",
    "tensorflow.TensorShape",
    "tensorflow.Variable",
    "tensorflow.cast",
    "tensorflow.fill"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo._MPO_FLOAT_EPSILON": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "acme.tf.losses.mpo.compute_cross_entropy_loss": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow_probability.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.compute_nonparametric_kl_from_normalized_weights": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.log",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.compute_parametric_kl_penalty_and_dual_loss": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "float",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.stop_gradient",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.compute_weights_and_temperature_loss": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "float",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.log",
    "tensorflow.nn.softmax",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reduce_mean",
    "tensorflow.stop_gradient",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.mpo.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.mpo.tfd": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.tf.losses.mpo.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.losses.multiaxis_categorical": {
  "data": {
   "shadows": "acme.tf.losses.distributional.multiaxis_categorical"
  },
  "type": "import"
 },
 "acme.tf.losses.r2d2": {
  "data": {},
  "type": "module"
 },
 "acme.tf.losses.r2d2.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "acme.tf.losses.r2d2.LossCoreExtra": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.tf.losses.r2d2.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.tf.losses.r2d2.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.losses.r2d2._compute_n_step_sequence_targets": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_slice",
    "int",
    "range",
    "tensorflow.Tensor",
    "tensorflow.concat",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2._compute_n_step_sequence_targets._slice": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2._signed_hyperbolic_tx": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "abs",
    "float",
    "tensorflow.Tensor",
    "tensorflow.sign",
    "tensorflow.sqrt"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2._signed_parabolic_tx": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "abs",
    "float",
    "tensorflow.Tensor",
    "tensorflow.sign",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.losses.r2d2.transformed_n_step_loss": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_compute_n_step_sequence_targets",
    "_signed_hyperbolic_tx",
    "_signed_parabolic_tx",
    "acme.tf.losses.r2d2.LossCoreExtra",
    "acme.tf.losses.r2d2.trfl",
    "bool",
    "check_rank",
    "int",
    "str",
    "tensorflow.Tensor",
    "tensorflow.math.is_finite",
    "tensorflow.name_scope",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.stop_gradient",
    "tensorflow.where",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2.transformed_n_step_loss.check_rank": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "acme.tf.losses.r2d2.trfl",
    "enumerate",
    "int",
    "tensorflow.Tensor",
    "typing.Iterable",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.tf.losses.r2d2.trfl": {
  "data": {
   "shadows": "trfl"
  },
  "type": "import"
 },
 "acme.tf.losses.transformed_n_step_loss": {
  "data": {
   "shadows": "acme.tf.losses.r2d2.transformed_n_step_loss"
  },
  "type": "import"
 },
 "acme.tf.networks": {
  "data": {
   "symbols_in_volume": [
    "acme.tf.networks.distributional.UnivariateGaussianMixture"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.ApproximateMode": {
  "data": {
   "shadows": "acme.tf.networks.distributional.ApproximateMode"
  },
  "type": "import"
 },
 "acme.tf.networks.AtariTorso": {
  "data": {
   "shadows": "acme.tf.networks.atari.AtariTorso"
  },
  "type": "import"
 },
 "acme.tf.networks.ClipToSpec": {
  "data": {
   "shadows": "acme.tf.networks.rescaling.ClipToSpec"
  },
  "type": "import"
 },
 "acme.tf.networks.ClippedGaussian": {
  "data": {
   "shadows": "acme.tf.networks.noise.ClippedGaussian"
  },
  "type": "import"
 },
 "acme.tf.networks.CriticDeepRNN": {
  "data": {
   "shadows": "acme.tf.networks.recurrence.CriticDeepRNN"
  },
  "type": "import"
 },
 "acme.tf.networks.CriticMultiplexer": {
  "data": {
   "shadows": "acme.tf.networks.multiplexers.CriticMultiplexer"
  },
  "type": "import"
 },
 "acme.tf.networks.DQNAtariNetwork": {
  "data": {
   "shadows": "acme.tf.networks.atari.DQNAtariNetwork"
  },
  "type": "import"
 },
 "acme.tf.networks.DeepIMPALAAtariNetwork": {
  "data": {
   "shadows": "acme.tf.networks.atari.DeepIMPALAAtariNetwork"
  },
  "type": "import"
 },
 "acme.tf.networks.DeepRNN": {
  "data": {
   "shadows": "acme.tf.networks.recurrence.DeepRNN"
  },
  "type": "import"
 },
 "acme.tf.networks.DiscreteFilteredQNetwork": {
  "data": {
   "shadows": "acme.tf.networks.discrete.DiscreteFilteredQNetwork"
  },
  "type": "import"
 },
 "acme.tf.networks.DiscreteValuedDistribution": {
  "data": {
   "shadows": "acme.tf.networks.distributions.DiscreteValuedDistribution"
  },
  "type": "import"
 },
 "acme.tf.networks.DiscreteValuedHead": {
  "data": {
   "shadows": "acme.tf.networks.distributional.DiscreteValuedHead"
  },
  "type": "import"
 },
 "acme.tf.networks.DistributionalModule": {
  "data": {
   "shadows": "acme.tf.networks.base.DistributionalModule"
  },
  "type": "import"
 },
 "acme.tf.networks.DuellingMLP": {
  "data": {
   "shadows": "acme.tf.networks.duelling.DuellingMLP"
  },
  "type": "import"
 },
 "acme.tf.networks.ExpQWeightedPolicy": {
  "data": {
   "shadows": "acme.tf.networks.stochastic.ExpQWeightedPolicy"
  },
  "type": "import"
 },
 "acme.tf.networks.GaussianMixtureHead": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "acme.tf.networks.IMPALAAtariNetwork": {
  "data": {
   "shadows": "acme.tf.networks.atari.IMPALAAtariNetwork"
  },
  "type": "import"
 },
 "acme.tf.networks.LSTM": {
  "data": {
   "shadows": "acme.tf.networks.recurrence.LSTM"
  },
  "type": "import"
 },
 "acme.tf.networks.LayerNormAndResidualMLP": {
  "data": {
   "shadows": "acme.tf.networks.continuous.LayerNormAndResidualMLP"
  },
  "type": "import"
 },
 "acme.tf.networks.LayerNormMLP": {
  "data": {
   "shadows": "acme.tf.networks.continuous.LayerNormMLP"
  },
  "type": "import"
 },
 "acme.tf.networks.Module": {
  "data": {
   "shadows": "acme.tf.networks.base.Module"
  },
  "type": "import"
 },
 "acme.tf.networks.Multihead": {
  "data": {
   "shadows": "acme.tf.networks.multihead.Multihead"
  },
  "type": "import"
 },
 "acme.tf.networks.MultivariateGaussianMixture": {
  "data": {
   "shadows": "acme.tf.networks.distributional.MultivariateGaussianMixture"
  },
  "type": "import"
 },
 "acme.tf.networks.MultivariateNormalDiagHead": {
  "data": {
   "shadows": "acme.tf.networks.distributional.MultivariateNormalDiagHead"
  },
  "type": "import"
 },
 "acme.tf.networks.NearZeroInitializedLinear": {
  "data": {
   "shadows": "acme.tf.networks.continuous.NearZeroInitializedLinear"
  },
  "type": "import"
 },
 "acme.tf.networks.PolicyValueHead": {
  "data": {
   "shadows": "acme.tf.networks.policy_value.PolicyValueHead"
  },
  "type": "import"
 },
 "acme.tf.networks.R2D2AtariNetwork": {
  "data": {
   "shadows": "acme.tf.networks.atari.R2D2AtariNetwork"
  },
  "type": "import"
 },
 "acme.tf.networks.RNNCore": {
  "data": {
   "shadows": "acme.tf.networks.base.RNNCore"
  },
  "type": "import"
 },
 "acme.tf.networks.RecurrentExpQWeightedPolicy": {
  "data": {
   "shadows": "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy"
  },
  "type": "import"
 },
 "acme.tf.networks.ResNetTorso": {
  "data": {
   "shadows": "acme.tf.networks.vision.ResNetTorso"
  },
  "type": "import"
 },
 "acme.tf.networks.RescaleToSpec": {
  "data": {
   "shadows": "acme.tf.networks.rescaling.RescaleToSpec"
  },
  "type": "import"
 },
 "acme.tf.networks.StochasticMeanHead": {
  "data": {
   "shadows": "acme.tf.networks.stochastic.StochasticMeanHead"
  },
  "type": "import"
 },
 "acme.tf.networks.StochasticModeHead": {
  "data": {
   "shadows": "acme.tf.networks.stochastic.StochasticModeHead"
  },
  "type": "import"
 },
 "acme.tf.networks.StochasticSamplingHead": {
  "data": {
   "shadows": "acme.tf.networks.stochastic.StochasticSamplingHead"
  },
  "type": "import"
 },
 "acme.tf.networks.TanhToSpec": {
  "data": {
   "shadows": "acme.tf.networks.rescaling.TanhToSpec"
  },
  "type": "import"
 },
 "acme.tf.networks.UnivariateGaussianMixture": {
  "data": {
   "shadows": "acme.tf.networks.distributional.UnivariateGaussianMixture"
  },
  "type": "import"
 },
 "acme.tf.networks.atari": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.Tensor"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.atari.AtariTorso": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.tf.networks.base.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.atari.AtariTorso.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.tf.networks.atari.Images",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.AtariTorso.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sonnet.Conv2D",
    "sonnet.Flatten",
    "sonnet.Sequential",
    "super",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DQNAtariNetwork": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "acme.tf.networks.base.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.atari.DQNAtariNetwork.__call__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "acme.tf.networks.atari.Images",
    "acme.tf.networks.atari.QValues"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DQNAtariNetwork.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "acme.tf.networks.atari.AtariTorso",
    "acme.tf.networks.duelling.DuellingMLP",
    "int",
    "sonnet.Sequential",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DeepIMPALAAtariNetwork": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "acme.tf.networks.base.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.atari.DeepIMPALAAtariNetwork.__call__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "acme.tf.networks.atari.Logits",
    "acme.tf.networks.atari.Value",
    "acme.wrappers.observation_action_reward.OAR",
    "sonnet.LSTMState",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DeepIMPALAAtariNetwork.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "acme.tf.networks.embedding.OAREmbedding",
    "acme.tf.networks.policy_value.PolicyValueHead",
    "acme.tf.networks.vision.ResNetTorso",
    "int",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.Sequential",
    "super",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DeepIMPALAAtariNetwork.initial_state": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "sonnet.LSTMState"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.DeepIMPALAAtariNetwork.unroll": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "acme.tf.networks.atari.Logits",
    "acme.tf.networks.atari.Value",
    "acme.wrappers.observation_action_reward.OAR",
    "int",
    "sonnet.BatchApply",
    "sonnet.LSTMState",
    "sonnet.static_unroll",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.IMPALAAtariNetwork": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.atari.IMPALAAtariNetwork.__call__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "acme.tf.networks.atari.Logits",
    "acme.tf.networks.atari.Value",
    "acme.wrappers.observation_action_reward.OAR",
    "sonnet.LSTMState",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.IMPALAAtariNetwork.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "acme.tf.networks.atari.AtariTorso",
    "acme.tf.networks.embedding.OAREmbedding",
    "acme.tf.networks.policy_value.PolicyValueHead",
    "int",
    "sonnet.LSTM",
    "sonnet.Linear",
    "sonnet.Sequential",
    "super",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.IMPALAAtariNetwork.initial_state": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "int",
    "sonnet.LSTMState"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.Images": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.tf.networks.atari.Logits": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.tf.networks.atari.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.QValues": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.tf.networks.atari.R2D2AtariNetwork": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "acme.tf.networks.base.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.atari.R2D2AtariNetwork.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "acme.tf.networks.atari.QValues",
    "acme.tf.networks.base.State",
    "acme.wrappers.observation_action_reward.OAR",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.R2D2AtariNetwork.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.tf.networks.atari.AtariTorso",
    "acme.tf.networks.base.RNNCore",
    "acme.tf.networks.duelling.DuellingMLP",
    "acme.tf.networks.embedding.OAREmbedding",
    "acme.tf.networks.recurrence.LSTM",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.R2D2AtariNetwork.initial_state": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "acme.tf.networks.base.State",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.R2D2AtariNetwork.unroll": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "acme.tf.networks.atari.QValues",
    "acme.tf.networks.base.State",
    "acme.wrappers.observation_action_reward.OAR",
    "int",
    "sonnet.BatchApply",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.atari.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.Value": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.tf.networks.atari.base": {
  "data": {
   "shadows": "acme.tf.networks.base"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.duelling": {
  "data": {
   "shadows": "acme.tf.networks.duelling"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.embedding": {
  "data": {
   "shadows": "acme.tf.networks.embedding"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.observation_action_reward": {
  "data": {
   "shadows": "acme.wrappers.observation_action_reward"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.policy_value": {
  "data": {
   "shadows": "acme.tf.networks.policy_value"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.recurrence": {
  "data": {
   "shadows": "acme.tf.networks.recurrence"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.atari.vision": {
  "data": {
   "shadows": "acme.tf.networks.vision"
  },
  "type": "import"
 },
 "acme.tf.networks.base": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.base.DistributionalModule": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.tf.networks.base.abc",
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.base.DistributionalModule.__call__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.tf.networks.base.abc",
    "tensorflow_probability.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.base.Module": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.tf.networks.base.abc",
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.base.Module.__call__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.tf.networks.base.abc",
    "acme.types.NestedTensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.base.RNNCore": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.tf.networks.base.abc",
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.base.RNNCore.unroll": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.tf.networks.base.State",
    "acme.tf.networks.base.abc",
    "acme.types.NestedTensor",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.base.State": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme.tf.networks.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.networks.base.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.tf.networks.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.tf.networks.base.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.base.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.base.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.initializers.VarianceScaling"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.continuous.LayerNormAndResidualMLP": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.continuous.LayerNormAndResidualMLP.__call__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.LayerNormAndResidualMLP.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "acme.tf.networks.continuous.ResidualLayernormWrapper",
    "acme.tf.networks.continuous.uniform_initializer",
    "int",
    "range",
    "sonnet.Sequential",
    "sonnet.nets.MLP",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.LayerNormMLP": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.continuous.LayerNormMLP.__call__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "acme.tf.utils.batch_concat",
    "acme.types.Nest",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.LayerNormMLP.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.tf.networks.continuous.uniform_initializer",
    "bool",
    "int",
    "slice",
    "sonnet.LayerNorm",
    "sonnet.Linear",
    "sonnet.Sequential",
    "sonnet.nets.MLP",
    "super",
    "tensorflow.nn.elu",
    "tensorflow.nn.tanh",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.NearZeroInitializedLinear": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sonnet.Linear"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.continuous.NearZeroInitializedLinear.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "tensorflow.initializers.VarianceScaling"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.ResidualLayernormWrapper": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.continuous.ResidualLayernormWrapper.__call__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.ResidualLayernormWrapper.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "acme.tf.networks.base.Module",
    "sonnet.LayerNorm",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.continuous.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.base": {
  "data": {
   "shadows": "acme.tf.networks.base"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.continuous.uniform_initializer": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.tf.networks.discrete": {
  "data": {},
  "type": "module"
 },
 "acme.tf.networks.discrete.DiscreteFilteredQNetwork": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.discrete.DiscreteFilteredQNetwork.__call__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.nn.softmax",
    "tensorflow.reduce_max",
    "tensorflow.reduce_min",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.discrete.DiscreteFilteredQNetwork.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float",
    "sonnet.Module",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.discrete.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.discrete.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional": {
  "data": {
   "symbols_in_volume": [
    "sonnet.initializers",
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.distributional.ApproximateMode": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.ApproximateMode.__call__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.tfd",
    "acme.tf.networks.distributional.types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.ApproximateMode.__call__._mode": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.DiscreteValuedHead": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.DiscreteValuedHead.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.tfd",
    "acme.tf.networks.distributions.DiscreteValuedDistribution",
    "tensorflow.Tensor",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.DiscreteValuedHead.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ndarray",
    "sonnet.Linear",
    "sonnet.initializers.Initializer",
    "super",
    "tensorflow.Tensor",
    "tensorflow.convert_to_tensor",
    "tensorflow.linspace",
    "tensorflow.size",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.GaussianMixture": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.GaussianMixture.__call__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "acme.tf.networks.distributional._MIN_SCALE",
    "acme.tf.networks.distributional.tfd",
    "bool",
    "tensorflow.Tensor",
    "tensorflow.nn.softplus",
    "tensorflow.ones_like",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.GaussianMixture.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "int",
    "sonnet.Linear",
    "str",
    "super",
    "tensorflow.initializers.VarianceScaling"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.MultivariateGaussianMixture": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.GaussianMixture"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.MultivariateGaussianMixture.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.MultivariateNormalDiagHead": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.MultivariateNormalDiagHead.__call__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.tfd",
    "tensorflow.Tensor",
    "tensorflow.constant",
    "tensorflow.nn.softplus",
    "tensorflow.ones_like",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.MultivariateNormalDiagHead.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.snt_init",
    "bool",
    "float",
    "int",
    "sonnet.Linear",
    "super",
    "tensorflow.initializers.VarianceScaling",
    "tensorflow.initializers.Zeros"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.UnivariateGaussianMixture": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "acme.tf.networks.distributional.GaussianMixture"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional.UnivariateGaussianMixture.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "absl.logging.warning",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional._MIN_SCALE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "acme.tf.networks.distributional.ad": {
  "data": {
   "shadows": "acme.tf.networks.distributions"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.snt_init": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "acme.tf.networks.distributional.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.tfd": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.tf.networks.distributional.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.distributional_test.DistributionalTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributional_test.DistributionalTest.test_discrete_valued_head": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.tf.networks.distributional.DiscreteValuedHead",
    "head",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributional_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional_test.distributional": {
  "data": {
   "shadows": "acme.tf.networks.distributional"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "acme.tf.networks.distributional_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "acme.tf.networks.distributions.tfd",
    "tensorflow_probability.experimental.register_composite"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "str",
    "super",
    "tensorflow.Tensor",
    "tensorflow.convert_to_tensor",
    "tensorflow.debugging.assert_shapes"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._batch_shape": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._batch_shape_tensor": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.rank",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._event_shape": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._event_shape_tensor": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._mean": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._params_event_ndims": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._sample_n": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "super",
    "tensorflow.Tensor",
    "tensorflow.gather"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution._variance": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.expand_dims",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.DiscreteValuedDistribution.values": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions.tfd": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "acme.tf.networks.distributions.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.distributions_test.DiscreteValuedDistributionTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.distributions_test.DiscreteValuedDistributionTest.test_constructor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.tf.networks.distributions.DiscreteValuedDistribution",
    "float",
    "len",
    "list",
    "numpy.arange",
    "numpy.linspace",
    "numpy.ones",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.distributions_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions_test.distributions": {
  "data": {
   "shadows": "acme.tf.networks.distributions"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "acme.tf.networks.distributions_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.tf.networks.duelling": {
  "data": {},
  "type": "module"
 },
 "acme.tf.networks.duelling.DuellingMLP": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.duelling.DuellingMLP.__call__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.duelling.DuellingMLP.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "sonnet.nets.MLP",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.duelling.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.networks.duelling.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.duelling.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.embedding": {
  "data": {},
  "type": "module"
 },
 "acme.tf.networks.embedding.OAREmbedding": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.embedding.OAREmbedding.__call__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.wrappers.observation_action_reward.OAR",
    "len",
    "tensorflow.Tensor",
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.nn.tanh",
    "tensorflow.one_hot"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.embedding.OAREmbedding.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.tf.networks.base.Module",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.embedding.base": {
  "data": {
   "shadows": "acme.tf.networks.base"
  },
  "type": "import"
 },
 "acme.tf.networks.embedding.observation_action_reward": {
  "data": {
   "shadows": "acme.wrappers.observation_action_reward"
  },
  "type": "import"
 },
 "acme.tf.networks.embedding.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.embedding.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead": {
  "data": {
   "symbols_in_volume": [
    "acme.types.NestedTensor",
    "sonnet.Module",
    "tensorflow.Tensor",
    "tensorflow_probability.distributions",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.multihead.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.Multihead": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.multihead.Multihead.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.tf.networks.multihead.tfd",
    "isinstance",
    "network_head",
    "tensorflow.Tensor",
    "tensorflow.stack",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.multihead.Multihead.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "acme.tf.networks.multihead.TensorTransformation",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.multihead.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.TensorTransformation": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.tf.networks.multihead.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.tfd": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.tf.networks.multihead.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.multihead.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers": {
  "data": {
   "symbols_in_volume": [
    "acme.types.NestedTensor",
    "sonnet.Module",
    "tensorflow.Tensor",
    "tensorflow_probability.distributions",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.multiplexers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.CriticMultiplexer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.multiplexers.CriticMultiplexer.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.tf.utils.batch_concat",
    "acme.types.NestedTensor",
    "hasattr",
    "tensorflow.Tensor",
    "tensorflow.cast"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.multiplexers.CriticMultiplexer.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "acme.tf.networks.multiplexers.TensorTransformation",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.multiplexers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.TensorTransformation": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.tf.networks.multiplexers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.tfd": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.tf.networks.multiplexers.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.multiplexers.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.noise": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.noise.ClippedGaussian": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.noise.ClippedGaussian.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.tf.networks.noise.tree",
    "acme.types.NestedTensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.noise.ClippedGaussian.__call__.add_noise": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.clip_by_value"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.noise.ClippedGaussian.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.tf.networks.noise.tfd",
    "float",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.noise.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.noise.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.noise.tfd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.tf.networks.noise.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.noise.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.networks.noise.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.policy_value": {
  "data": {},
  "type": "module"
 },
 "acme.tf.networks.policy_value.PolicyValueHead": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.policy_value.PolicyValueHead.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.policy_value.PolicyValueHead.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "sonnet.Linear",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.policy_value.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.networks.policy_value.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.policy_value.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence": {
  "data": {
   "symbols_in_volume": [
    "acme.types.NestedTensor"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.recurrence.CriticDeepRNN": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sonnet.DeepRNN"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.CriticDeepRNN.__call__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.RNNState",
    "acme.types.NestedTensor",
    "super",
    "tensorflow.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.CriticDeepRNN.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.RNNUnpackWrapper",
    "acme.tf.networks.recurrence.UnpackWrapper",
    "isinstance",
    "list",
    "sonnet.Module",
    "sonnet.RNNCore",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.CriticDeepRNN._input_signature": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.DeepRNN": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "acme.tf.networks.base.RNNCore",
    "sonnet.DeepRNN"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.DeepRNN.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "absl.logging.warning",
    "acme.tf.networks.recurrence.functools",
    "hasattr",
    "isinstance",
    "sonnet.RNNCore",
    "sonnet.dynamic_unroll",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.DeepRNN._input_signature": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.DeepRNN.unroll": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "acme.tf.networks.base.State",
    "acme.types.NestedTensor",
    "hasattr",
    "int",
    "iter",
    "len",
    "next",
    "sonnet.BatchApply",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.LSTM": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "acme.tf.networks.base.RNNCore",
    "sonnet.LSTM"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.LSTM.unroll": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "acme.tf.networks.base.State",
    "acme.types.NestedTensor",
    "int",
    "sonnet.static_unroll",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.PolicyCriticRNNState": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.RNNState",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.RNNState": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "acme.tf.networks.recurrence.RNNUnpackWrapper": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.RNNUnpackWrapper.__call__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.RNNState",
    "acme.types.NestedTensor",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RNNUnpackWrapper.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sonnet.RNNCore",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RNNUnpackWrapper.initial_state": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy.__call__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.PolicyCriticRNNState",
    "acme.types.NestedTensor",
    "tensorflow.vectorized_map",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "float",
    "int",
    "sonnet.Module",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy._call": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.PolicyCriticRNNState",
    "acme.tf.networks.recurrence.tree",
    "acme.tf.utils.tile_nested",
    "acme.types.NestedTensor",
    "tensorflow.nn.softmax",
    "tensorflow_probability.distributions.Categorical",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.RecurrentExpQWeightedPolicy.initial_state": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "acme.tf.networks.recurrence.PolicyCriticRNNState",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.UnpackWrapper": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence.UnpackWrapper.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.types.NestedTensor",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.UnpackWrapper.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sonnet.Module",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence.base": {
  "data": {
   "shadows": "acme.tf.networks.base"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence.utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.recurrence_test.Critic": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence_test.Critic.__call__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence_test.NetsTest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence_test.NetsTest.test_criticdeeprnn_snapshot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "absl.testing.absltest.get_default_test_tmpdir",
    "acme.specs.Array",
    "acme.tf.networks.recurrence.CriticDeepRNN",
    "acme.tf.networks.recurrence_test.Critic",
    "acme.tf.networks.recurrence_test.RNNCritic",
    "acme.tf.networks.recurrence_test.os",
    "acme.tf.networks.recurrence_test.tree",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.create_variables",
    "curr_net",
    "net2",
    "numpy.allclose",
    "numpy.float32",
    "sonnet.LSTM",
    "tensorflow.ones",
    "tensorflow.saved_model.load"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence_test.RNNCritic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sonnet.RNNCore"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.recurrence_test.RNNCritic.__call__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence_test.RNNCritic.initial_state": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "acme.tf.networks.recurrence_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.recurrence": {
  "data": {
   "shadows": "acme.tf.networks.recurrence"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.networks.recurrence_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.networks.rescaling": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.bijectors",
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.rescaling.ClipToSpec": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.rescaling.ClipToSpec.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.clip_by_value"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.ClipToSpec.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.RescaleToSpec": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.rescaling.RescaleToSpec.__call__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.RescaleToSpec.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.TanhToSpec": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.rescaling.TanhToSpec.__call__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "acme.tf.networks.rescaling.tfb",
    "acme.tf.networks.rescaling.tfd",
    "isinstance",
    "tensorflow.Tensor",
    "tensorflow.tanh",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.TanhToSpec.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.rescaling.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.networks.rescaling.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.rescaling.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.tf.networks.rescaling.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.rescaling.tfb": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme.tf.networks.rescaling.tfd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.tf.networks.rescaling.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic": {
  "data": {
   "symbols_in_volume": [
    "tensorflow_probability.distributions"
   ]
  },
  "type": "module"
 },
 "acme.tf.networks.stochastic.ExpQWeightedPolicy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.stochastic.ExpQWeightedPolicy.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.tf.networks.stochastic.tree",
    "acme.tf.utils.tile_nested",
    "acme.types.NestedTensor",
    "len",
    "list",
    "range",
    "sonnet.merge_leading_dims",
    "sonnet.split_leading_dim",
    "tensorflow.Tensor",
    "tensorflow.debugging.assert_equal",
    "tensorflow.gather_nd",
    "tensorflow.range",
    "tensorflow.shape",
    "tensorflow.stack",
    "tensorflow.transpose",
    "tensorflow.zeros",
    "tensorflow_probability.distributions.Categorical"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.stochastic.ExpQWeightedPolicy.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "int",
    "sonnet.Module",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.stochastic.StochasticMeanHead": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.stochastic.StochasticMeanHead.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.tf.networks.stochastic.tfd"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.stochastic.StochasticModeHead": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.stochastic.StochasticModeHead.__call__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.tf.networks.stochastic.tfd"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.stochastic.StochasticSamplingHead": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.stochastic.StochasticSamplingHead.__call__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.tf.networks.stochastic.tfd"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.stochastic.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic.tfd": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme.tf.networks.stochastic.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.networks.stochastic.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.networks.vision": {
  "data": {},
  "type": "module"
 },
 "acme.tf.networks.vision.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.tf.networks.vision.ResNetTorso": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.vision.ResNetTorso.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_preprocess_inputs",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.ResNetTorso.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ResidualBlockGroup",
    "int",
    "len",
    "range",
    "sonnet.Flatten",
    "sonnet.Sequential",
    "sonnet.nets.MLP",
    "str",
    "super",
    "tensorflow.DType",
    "tensorflow.Tensor",
    "tensorflow.float32",
    "tensorflow.nn.relu",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.ResidualBlockGroup": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.networks.vision.ResidualBlockGroup.__call__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "range",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.ResidualBlockGroup.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "build_conv_layer",
    "int",
    "isinstance",
    "range",
    "sonnet.Sequential",
    "str",
    "super",
    "tensorflow.Tensor",
    "tensorflow.nn.relu",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.ResidualBlockGroup.__init__.build_conv_layer": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sonnet.Conv2D",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.ResidualBlockGroup.__init__.pooling_layer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.nn.pool"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.networks.vision.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.networks.vision._preprocess_inputs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "sonnet.Flatten",
    "tensorflow.DType",
    "tensorflow.Tensor",
    "tensorflow.image.convert_image_dtype"
   ]
  },
  "type": "function"
 },
 "acme.tf.networks.vision.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.networks.vision.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.savers": {
  "data": {
   "symbols_in_volume": [
    "acme.tf.savers.PythonState",
    "acme.tf.savers.Snapshot",
    "acme.tf.savers.datetime",
    "int",
    "isinstance",
    "setattr",
    "tensorflow.Module",
    "tensorflow.Variable",
    "tensorflow.python.saved_model.revived_types.VersionedTypeRegistration",
    "tensorflow.python.saved_model.revived_types.register_revived_type",
    "tensorflow.train.experimental.PythonState",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.tf.savers.Checkpointable": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "acme.tf.savers.Checkpointer": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "acme.tf.savers.Checkpointer.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "acme.core.Saveable",
    "acme.tf.savers.Checkpointable",
    "acme.tf.savers._DEFAULT_CHECKPOINT_TTL",
    "acme.utils.paths.process_path",
    "bool",
    "float",
    "int",
    "str",
    "tensorflow.train.Checkpoint",
    "tensorflow.train.CheckpointManager",
    "to_ckptable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Checkpointer.__init__.to_ckptable": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "SaveableAdapter",
    "acme.core.Saveable",
    "acme.tf.savers.Checkpointable",
    "isinstance",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Checkpointer.restore": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "absl.logging.info"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Checkpointer.save": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.tf.savers.time",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "acme.core.Worker"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers.CheckpointingRunner.__dir__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner.__getattr__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "acme.core.Learner",
    "acme.core.Saveable",
    "acme.tf.savers.Checkpointable",
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers.TFSaveable",
    "int",
    "isinstance",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner.checkpoint": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "acme.tf.savers.time"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner.run": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "absl.logging.warning",
    "acme.core.Learner",
    "acme.tf.savers.signal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.CheckpointingRunner.run._signal_handler": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.tf.savers.signal"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.tf.savers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.savers.PythonState": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "acme.tf.savers.SaveableAdapter": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "tensorflow.train.experimental.PythonState"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers.SaveableAdapter.__init__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "acme.core.Saveable"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.SaveableAdapter.deserialize": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "acme.tf.savers.pickle",
    "bytes"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.SaveableAdapter.serialize": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "acme.tf.savers.pickle"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshot": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tensorflow.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers.Snapshot.__call__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshot.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshot.submodules": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshot.trainable_variables": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshot.variables": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshotter": {
  "data": {
   "lineno": 238
  },
  "type": "class"
 },
 "acme.tf.savers.Snapshotter.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "acme.tf.savers._DEFAULT_SNAPSHOT_TTL",
    "acme.tf.savers.os",
    "acme.utils.paths.process_path",
    "float",
    "int",
    "make_snapshot",
    "sonnet.Module",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Snapshotter.save": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "acme.tf.savers.time",
    "bool",
    "tensorflow.saved_model.save"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.TFSaveable": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.tf.savers.abc"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers.TFSaveable.state": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointable",
    "acme.tf.savers.abc",
    "property",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.savers._DEFAULT_CHECKPOINT_TTL": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "acme.tf.savers._DEFAULT_SNAPSHOT_TTL": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "acme.tf.savers._get_input_signature": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "acme.tf.savers.tree",
    "hasattr",
    "isinstance",
    "module",
    "module._input_signature",
    "module._layers",
    "module.initial_state",
    "sonnet.DeepRNN",
    "sonnet.Module",
    "sonnet.Sequential",
    "tensorflow.TensorSpec",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.tf.savers.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.tf.savers.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "acme.tf.savers.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.tf.savers.make_snapshot": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "_get_input_signature",
    "acme.tf.savers.Snapshot",
    "isinstance",
    "module",
    "module.initial_state",
    "module.trainable_variables",
    "module.variables",
    "sonnet.Module",
    "sonnet.RNNCore",
    "tensorflow.TensorSpec",
    "tensorflow.function",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.make_snapshot.as_composite": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow_probability.distributions.Distribution",
    "tensorflow_probability.experimental.as_composite"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.make_snapshot.wrapped_module": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "acme.tf.savers.tree",
    "module",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.tf.savers.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.tf.savers.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "acme.tf.savers.revived_types": {
  "data": {
   "shadows": "tensorflow.python.saved_model.revived_types"
  },
  "type": "import"
 },
 "acme.tf.savers.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "acme.tf.savers.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.savers.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.savers.tfp": {
  "data": {
   "shadows": "tensorflow_probability"
  },
  "type": "import"
 },
 "acme.tf.savers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.tf.savers.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.savers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.savers_test.CheckpointerTest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "acme.testing.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers_test.CheckpointerTest.test_no_checkpoint": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointer",
    "range",
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.CheckpointerTest.test_save_and_new_restore": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointer",
    "acme.utils.paths",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "tensorflow.Variable",
    "tensorflow.int32",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.CheckpointerTest.test_save_and_restore": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointer",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.Variable",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.CheckpointerTest.test_save_and_restore_time_based": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "acme.tf.savers.Checkpointer",
    "acme.tf.savers_test.time",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "tensorflow.Variable",
    "tensorflow.int32",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.CheckpointerTest.test_tf_saveable": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "acme.tf.savers.CheckpointingRunner",
    "acme.tf.savers_test.DummySaveable",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.DummySaveable": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.tf.savers.TFSaveable",
    "tensorflow.Variable"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers_test.DummySaveable.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.DummySaveable.state": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.SnapshotterTest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "acme.testing.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.savers_test.SnapshotterTest.test_force_snapshot": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.savers.Snapshotter",
    "acme.tf.utils.create_variables",
    "numpy.float32",
    "sonnet.Linear"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.SnapshotterTest.test_rnn_snapshot": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.savers.Snapshotter",
    "acme.tf.savers_test.os",
    "acme.tf.savers_test.tree",
    "acme.tf.utils.add_batch_dim",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.zeros_like",
    "all",
    "list",
    "net1",
    "net1.initial_state",
    "net1.trainable_variables",
    "net2",
    "net2.initial_state",
    "net2.trainable_variables",
    "numpy.allclose",
    "numpy.float32",
    "sonnet.DeepRNN",
    "sonnet.LSTM",
    "tensorflow.GradientTape",
    "tensorflow.math.reduce_sum",
    "tensorflow.saved_model.load"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.SnapshotterTest.test_snapshot": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.networks.LayerNormMLP",
    "acme.tf.savers.Snapshotter",
    "acme.tf.savers_test.os",
    "acme.tf.savers_test.tree",
    "acme.tf.utils.add_batch_dim",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.zeros_like",
    "all",
    "list",
    "net1",
    "net1.trainable_variables",
    "net2",
    "net2.trainable_variables",
    "numpy.allclose",
    "numpy.float32",
    "tensorflow.GradientTape",
    "tensorflow.math.reduce_sum",
    "tensorflow.saved_model.load"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.SnapshotterTest.test_snapshot_distribution": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.networks.LayerNormMLP",
    "acme.tf.networks.MultivariateNormalDiagHead",
    "acme.tf.savers.Snapshotter",
    "acme.tf.savers_test.os",
    "acme.tf.savers_test.tree",
    "acme.tf.utils.add_batch_dim",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.zeros_like",
    "all",
    "list",
    "net1",
    "net1.trainable_variables",
    "net2",
    "net2.trainable_variables",
    "numpy.allclose",
    "numpy.float32",
    "sonnet.Sequential",
    "tensorflow.GradientTape",
    "tensorflow.math.reduce_sum",
    "tensorflow.saved_model.load"
   ]
  },
  "type": "function"
 },
 "acme.tf.savers_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.savers_test.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "acme.tf.savers_test.networks": {
  "data": {
   "shadows": "acme.tf.networks"
  },
  "type": "import"
 },
 "acme.tf.savers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.savers_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.tf.savers_test.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.tf.savers_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.savers_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.tf.savers_test.test_utils": {
  "data": {
   "shadows": "acme.testing.test_utils"
  },
  "type": "import"
 },
 "acme.tf.savers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.savers_test.tf2_savers": {
  "data": {
   "shadows": "acme.tf.savers"
  },
  "type": "import"
 },
 "acme.tf.savers_test.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.savers_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.tf.savers_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.utils": {
  "data": {
   "symbols_in_volume": [
    "acme.utils.tree_utils.stack_sequence_fields"
   ]
  },
  "type": "module"
 },
 "acme.tf.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.tf.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.utils.TransformationWrapper": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.utils.TransformationWrapper.__call__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "acme.tf.utils.TransformationWrapper.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "acme.types.TensorValuedCallable",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.tf.utils.add_batch_dim": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedTensor",
    "tensorflow.expand_dims"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.batch_concat": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedTensor",
    "sonnet.Flatten",
    "tensorflow.Tensor",
    "tensorflow.concat"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.batch_to_sequence": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedTensor",
    "list",
    "range",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.create_variables": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "acme.tf.utils.add_batch_dim",
    "acme.tf.utils.squeeze_batch_dim",
    "acme.tf.utils.tree",
    "acme.types.NestedSpec",
    "isinstance",
    "network",
    "network._input_signature",
    "sonnet.Module",
    "sonnet.RNNCore",
    "tensorflow.TensorSpec",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zeros_like"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.create_variables.spec": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "acme.tf.utils.squeeze_batch_dim",
    "isinstance",
    "tensorflow.Tensor",
    "tensorflow.TensorSpec",
    "tensorflow.rank"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "acme.tf.utils.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.utils.squeeze_batch_dim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedTensor",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.stack_sequence_fields": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "acme.tf.utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.utils.tile_nested": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.tf.utils.functools",
    "acme.tf.utils.tile_tensor",
    "acme.tf.utils.tree",
    "acme.types.NestedTensor",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.tile_tensor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int",
    "len",
    "tensorflow.Tensor",
    "tensorflow.constant",
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.to_numpy": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedArray",
    "acme.types.NestedTensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.to_numpy_squeeze": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.NestedArray",
    "acme.types.NestedTensor"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.to_sonnet_module": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "acme.tf.utils.TransformationWrapper",
    "acme.types.TensorValuedCallable",
    "isinstance",
    "sonnet.Module",
    "sonnet.allow_empty_variables"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.utils.tree_utils": {
  "data": {
   "shadows": "acme.utils.tree_utils"
  },
  "type": "import"
 },
 "acme.tf.utils.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.tf.utils.zeros_like": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "acme.tf.utils.tree",
    "acme.types.Nest",
    "acme.types.NestedTensor",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.utils_test.CreateVariableTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.utils_test.CreateVariableTest.test_feedforward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "bool",
    "numpy.float32",
    "sonnet.DeepRNN",
    "sonnet.Linear",
    "tensorflow.Variable",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_multiple_inputs_and_outputs": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "numpy.float32",
    "tensorflow.TensorSpec"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_multiple_inputs_and_outputs.transformation": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.concat"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_multiple_outputs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "acme.tf.utils_test.PolicyValueHead",
    "numpy.float32",
    "tensorflow.TensorSpec",
    "tensorflow.Variable",
    "tensorflow.float32",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_none_output": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_output_spec_feedforward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "bool",
    "numpy.float32",
    "sonnet.DeepRNN",
    "sonnet.Linear",
    "tensorflow.TensorSpec",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.CreateVariableTest.test_scalar_output": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.tf.utils.create_variables",
    "acme.tf.utils.to_sonnet_module",
    "numpy.float32",
    "tensorflow.TensorSpec",
    "tensorflow.float32",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.PolicyValueHead": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sonnet.Module"
   ]
  },
  "type": "class"
 },
 "acme.tf.utils_test.PolicyValueHead.__call__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.PolicyValueHead.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "sonnet.Linear",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.utils_test.Tf2UtilsTest": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.utils_test.Tf2UtilsTest.test_batch_concat": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "acme.tf.utils.batch_concat",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.tf.utils_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.tf.utils_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.tf.utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.tf.utils_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.tf.utils_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.utils_test.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.tf.utils_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.utils_test.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.variable_utils": {
  "data": {},
  "type": "module"
 },
 "acme.tf.variable_utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.VariableClient": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "acme.tf.variable_utils.VariableClient.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.core.VariableSource",
    "acme.tf.variable_utils.tree",
    "concurrent.futures.Future",
    "concurrent.futures.ThreadPoolExecutor",
    "int",
    "list",
    "str",
    "tensorflow.Variable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils.VariableClient._copy": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "acme.tf.variable_utils.tree",
    "len",
    "tensorflow.Variable",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils.VariableClient.update": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "concurrent.futures.Future",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils.VariableClient.update_and_wait": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "acme.tf.variable_utils.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.variable_utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "acme.tf.variable_utils_test.VariableClientTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.tf.variable_utils_test.VariableClientTest.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.tf.utils.create_variables",
    "acme.tf.variable_utils_test._INPUT_SIZE",
    "acme.tf.variable_utils_test._MLP_LAYERS",
    "sonnet.nets.MLP",
    "super",
    "tensorflow.TensorSpec",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils_test.VariableClientTest.test_update": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "acme.testing.fakes.VariableSource",
    "acme.tf.utils.to_numpy",
    "acme.tf.variable_utils.VariableClient",
    "acme.tf.variable_utils_test._BATCH_SIZE",
    "acme.tf.variable_utils_test._INPUT_SIZE",
    "acme.tf.variable_utils_test._UPDATE_PERIOD",
    "acme.tf.variable_utils_test.threading",
    "range",
    "tensorflow.random.normal"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils_test.VariableClientTest.test_update_and_wait": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.testing.fakes.VariableSource",
    "acme.tf.utils.to_numpy",
    "acme.tf.variable_utils.VariableClient",
    "acme.tf.variable_utils_test._BATCH_SIZE",
    "acme.tf.variable_utils_test._INPUT_SIZE",
    "tensorflow.random.normal"
   ]
  },
  "type": "function"
 },
 "acme.tf.variable_utils_test._BATCH_SIZE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "acme.tf.variable_utils_test._INPUT_SIZE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.tf.variable_utils_test._MLP_LAYERS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.tf.variable_utils_test._UPDATE_PERIOD": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "acme.tf.variable_utils_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test.snt": {
  "data": {
   "shadows": "sonnet"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test.tf2_utils": {
  "data": {
   "shadows": "acme.tf.utils"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test.tf2_variable_utils": {
  "data": {
   "shadows": "acme.tf.variable_utils"
  },
  "type": "import"
 },
 "acme.tf.variable_utils_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.types.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "acme.types.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.types.Nest": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.types.NestedArray": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "acme.types.NestedSpec": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.types.NestedTensor": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.types.TensorTransformation": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "acme.types.TensorValuedCallable": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "acme.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.types.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.utils": {
  "data": {},
  "type": "module"
 },
 "acme.utils.async_utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.utils.async_utils.AsyncExecutor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.utils.async_utils.E",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "acme.utils.async_utils.AsyncExecutor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.utils.async_utils.E",
    "acme.utils.async_utils.queue",
    "acme.utils.async_utils.threading",
    "float",
    "int",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "acme.utils.async_utils.AsyncExecutor.__init__._dequeue": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "absl.logging.error",
    "absl.logging.exception",
    "acme.utils.async_utils.queue",
    "fn"
   ]
  },
  "type": "function"
 },
 "acme.utils.async_utils.AsyncExecutor._raise_on_error": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "acme.utils.async_utils.queue"
   ]
  },
  "type": "function"
 },
 "acme.utils.async_utils.AsyncExecutor.close": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "acme.utils.async_utils.AsyncExecutor.put": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "acme.utils.async_utils.E",
    "acme.utils.async_utils.queue"
   ]
  },
  "type": "function"
 },
 "acme.utils.async_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.utils.async_utils.E": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme.utils.async_utils.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "acme.utils.async_utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.utils.async_utils.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.utils.async_utils.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "acme.utils.async_utils.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.utils.counting": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "acme.utils.counting.Counter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.core.Saveable"
   ]
  },
  "type": "class"
 },
 "acme.utils.counting.Counter.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.utils.counting.threading",
    "bool",
    "float",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.Counter.get_counts": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_prefix_keys",
    "acme.utils.counting.Number",
    "acme.utils.counting.time",
    "dict",
    "len",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.Counter.increment": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "acme.utils.counting.Number",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.Counter.restore": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "acme.utils.counting.Number",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.Counter.save": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "acme.utils.counting.Number",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "acme.utils.counting.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.utils.counting.Number": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.utils.counting.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.utils.counting.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.utils.counting._prefix_keys": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "acme.utils.counting.Number",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting.core": {
  "data": {
   "shadows": "acme.core"
  },
  "type": "import"
 },
 "acme.utils.counting.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.utils.counting.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.utils.counting_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.utils.counting_test.Barrier": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "acme.utils.counting_test.Barrier.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.utils.counting_test.threading"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting_test.Barrier.wait": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "acme.utils.counting_test.CountingTest": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.counting_test.CountingTest.test_counter_caching": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.utils.counting.Counter"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting_test.CountingTest.test_counter_threading": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.utils.counting.Counter",
    "acme.utils.counting_test.Barrier",
    "acme.utils.counting_test.threading",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting_test.CountingTest.test_counter_threading.add_to_counter": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "acme.utils.counting_test.CountingTest.test_shared_counts": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "acme.utils.counting.Counter"
   ]
  },
  "type": "function"
 },
 "acme.utils.counting_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.counting_test.counting": {
  "data": {
   "shadows": "acme.utils.counting"
  },
  "type": "import"
 },
 "acme.utils.counting_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "acme.utils.loggers": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.AsyncLogger": {
  "data": {
   "shadows": "acme.utils.loggers.asynchronous.AsyncLogger"
  },
  "type": "import"
 },
 "acme.utils.loggers.CSVLogger": {
  "data": {
   "shadows": "acme.utils.loggers.csv.CSVLogger"
  },
  "type": "import"
 },
 "acme.utils.loggers.ConstantLogger": {
  "data": {
   "shadows": "acme.utils.loggers.constant.ConstantLogger"
  },
  "type": "import"
 },
 "acme.utils.loggers.Dispatcher": {
  "data": {
   "shadows": "acme.utils.loggers.aggregators.Dispatcher"
  },
  "type": "import"
 },
 "acme.utils.loggers.Logger": {
  "data": {
   "shadows": "acme.utils.loggers.base.Logger"
  },
  "type": "import"
 },
 "acme.utils.loggers.LoggingData": {
  "data": {
   "shadows": "acme.utils.loggers.base.LoggingData"
  },
  "type": "import"
 },
 "acme.utils.loggers.NoOpLogger": {
  "data": {
   "shadows": "acme.utils.loggers.base.NoOpLogger"
  },
  "type": "import"
 },
 "acme.utils.loggers.NoneFilter": {
  "data": {
   "shadows": "acme.utils.loggers.filters.NoneFilter"
  },
  "type": "import"
 },
 "acme.utils.loggers.TerminalLogger": {
  "data": {
   "shadows": "acme.utils.loggers.terminal.TerminalLogger"
  },
  "type": "import"
 },
 "acme.utils.loggers.TimeFilter": {
  "data": {
   "shadows": "acme.utils.loggers.filters.TimeFilter"
  },
  "type": "import"
 },
 "acme.utils.loggers.aggregators": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.aggregators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.utils.loggers.aggregators.Dispatcher": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.aggregators.Dispatcher.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger",
    "acme.utils.loggers.base.LoggingData",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.aggregators.Dispatcher.write": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.aggregators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.utils.loggers.aggregators.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.utils.loggers.aggregators.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.asynchronous": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.asynchronous.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.utils.loggers.asynchronous.AsyncLogger": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.asynchronous.AsyncLogger.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.utils.async_utils.AsyncExecutor",
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.asynchronous.AsyncLogger.write": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.asynchronous.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.utils.loggers.asynchronous.async_utils": {
  "data": {
   "shadows": "acme.utils.async_utils"
  },
  "type": "import"
 },
 "acme.utils.loggers.asynchronous.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.base": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "module"
 },
 "acme.utils.loggers.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.utils.loggers.base.Logger": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.utils.loggers.base.abc"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.base.Logger.write": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.base.abc"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base.LoggingData": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "acme.utils.loggers.base.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "acme.utils.loggers.base.NoOpLogger": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.base.NoOpLogger.write": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "acme.utils.loggers.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.utils.loggers.base.tensor_to_numpy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base.to_numpy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.utils.loggers.base.tensor_to_numpy",
    "acme.utils.loggers.base.tree",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.utils.loggers.base_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.utils.loggers.base_test.BaseTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.base_test.BaseTest.test_device_array_serialisation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.utils.loggers.base.to_numpy",
    "jax.numpy.zeros",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base_test.BaseTest.test_tensor_serialisation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.utils.loggers.base.to_numpy",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.base_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.loggers.base_test.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.base_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "acme.utils.loggers.base_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.utils.loggers.base_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.utils.loggers.constant": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.constant.ConstantLogger": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.constant.ConstantLogger.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger",
    "acme.utils.loggers.base.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.constant.ConstantLogger.write": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.constant.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.csv.CSVLogger": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger",
    "open"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.csv.CSVLogger.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.logging.info",
    "acme.utils.loggers.csv.time",
    "float",
    "str",
    "typing.TextIO",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv.CSVLogger._create_file": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "absl.logging.info",
    "acme.utils.loggers.csv.os",
    "acme.utils.paths.process_path",
    "isinstance",
    "str",
    "typing.TextIO",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv.CSVLogger.file_path": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv.CSVLogger.write": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.base.to_numpy",
    "acme.utils.loggers.csv.csv",
    "acme.utils.loggers.csv.time",
    "sorted"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.utils.loggers.csv_test.CSVLoggingTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.testing.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.csv_test.CSVLoggingTest.test_logging_input_is_directory": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.utils.loggers.csv.CSVLogger",
    "acme.utils.loggers.csv.DictReader",
    "acme.utils.loggers.csv_test.gc",
    "dict",
    "open"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv_test.CSVLoggingTest.test_logging_input_is_file": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.utils.loggers.csv.CSVLogger",
    "acme.utils.loggers.csv.DictReader",
    "acme.utils.loggers.csv_test.os",
    "acme.utils.paths.process_path",
    "dict",
    "open"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.csv_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.csv_logger": {
  "data": {
   "shadows": "acme.utils.loggers.csv"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.utils.loggers.csv_test.test_utils": {
  "data": {
   "shadows": "acme.testing.test_utils"
  },
  "type": "import"
 },
 "acme.utils.loggers.default": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.default.aggregators": {
  "data": {
   "shadows": "acme.utils.loggers.aggregators"
  },
  "type": "import"
 },
 "acme.utils.loggers.default.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.default.csv": {
  "data": {
   "shadows": "acme.utils.loggers.csv"
  },
  "type": "import"
 },
 "acme.utils.loggers.default.filters": {
  "data": {
   "shadows": "acme.utils.loggers.filters"
  },
  "type": "import"
 },
 "acme.utils.loggers.default.make_default_logger": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "acme.utils.loggers.aggregators.Dispatcher",
    "acme.utils.loggers.base.Logger",
    "acme.utils.loggers.csv.CSVLogger",
    "acme.utils.loggers.filters.NoneFilter",
    "acme.utils.loggers.filters.TimeFilter",
    "acme.utils.loggers.terminal.TerminalLogger",
    "bool",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.default.terminal": {
  "data": {
   "shadows": "acme.utils.loggers.terminal"
  },
  "type": "import"
 },
 "acme.utils.loggers.filters": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.filters.NoneFilter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.filters.NoneFilter.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.filters.NoneFilter.write": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.filters.TimeFilter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.filters.TimeFilter.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger",
    "acme.utils.loggers.filters.time",
    "float"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.filters.TimeFilter.write": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.filters.time"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.filters.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.filters.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.utils.loggers.make_default_logger": {
  "data": {
   "shadows": "acme.utils.loggers.default.make_default_logger"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.terminal.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal.TerminalLogger": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.terminal.TerminalLogger.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.terminal._format_key",
    "acme.utils.loggers.terminal.serialize",
    "acme.utils.loggers.terminal.time",
    "float",
    "print",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal.TerminalLogger.write": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.terminal.time"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal._format_key": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal._format_value": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.utils.loggers.base.to_numpy",
    "float",
    "isinstance",
    "numpy.number",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal.serialize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.terminal._format_key",
    "acme.utils.loggers.terminal._format_value",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.utils.loggers.terminal_test.LoggingTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.terminal_test.LoggingTest.test_label": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.utils.loggers.terminal.TerminalLogger"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal_test.LoggingTest.test_logging_output_format": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "acme.utils.loggers.terminal.TerminalLogger"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.terminal_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.loggers.terminal_test.terminal": {
  "data": {
   "shadows": "acme.utils.loggers.terminal"
  },
  "type": "import"
 },
 "acme.utils.loggers.tf_summary": {
  "data": {},
  "type": "module"
 },
 "acme.utils.loggers.tf_summary.TFSummaryLogger": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.utils.loggers.base.Logger"
   ]
  },
  "type": "class"
 },
 "acme.utils.loggers.tf_summary.TFSummaryLogger.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.utils.loggers.tf_summary.time",
    "str",
    "tensorflow.summary.create_file_writer"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.tf_summary.TFSummaryLogger.write": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.utils.loggers.base.LoggingData",
    "acme.utils.loggers.tf_summary._format_key",
    "tensorflow.summary.scalar"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.tf_summary._format_key": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.loggers.tf_summary.base": {
  "data": {
   "shadows": "acme.utils.loggers.base"
  },
  "type": "import"
 },
 "acme.utils.loggers.tf_summary.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "acme.utils.loggers.tf_summary.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "acme.utils.loggers.to_numpy": {
  "data": {
   "shadows": "acme.utils.loggers.base.to_numpy"
  },
  "type": "import"
 },
 "acme.utils.paths": {
  "data": {
   "symbols_in_volume": [
    "absl.flags.DEFINE_string",
    "absl.flags.FLAGS",
    "acme.utils.paths.uuid"
   ]
  },
  "type": "module"
 },
 "acme.utils.paths.FLAGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.utils.paths.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.utils.paths.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.utils.paths._ACME_ID": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "acme.utils.paths.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "acme.utils.paths.get_unique_id": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "absl.flags.UnparsedFlagAccessError",
    "acme.utils.paths.FLAGS",
    "acme.utils.paths._ACME_ID",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.utils.paths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "acme.utils.paths.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "acme.utils.paths.process_path": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.utils.paths.os",
    "bool",
    "get_unique_id",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.utils.paths.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "acme.utils.paths_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.flags.FLAGS",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.utils.paths_test.FLAGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.utils.paths_test.PathTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.testing.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.paths_test.PathTest.test_process_path": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "acme.utils.paths",
    "acme.utils.paths.process_path",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "acme.utils.paths_test.PathTest.test_unique_id_with_flag": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "acme.utils.paths.get_unique_id",
    "acme.utils.paths_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "acme.utils.paths_test.PathTest.test_unique_id_without_flag": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "acme.utils.paths._ACME_ID",
    "acme.utils.paths.get_unique_id",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.utils.paths_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.paths_test.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "acme.utils.paths_test.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "acme.utils.paths_test.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.utils.paths_test.test_utils": {
  "data": {
   "shadows": "acme.testing.test_utils"
  },
  "type": "import"
 },
 "acme.utils.tree_utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "acme.utils.tree_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.ElementType": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "acme.utils.tree_utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.broadcast_structures": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "acme.utils.tree_utils.tree",
    "mirror_structure",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils.broadcast_structures.mirror_structure": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "acme.utils.tree_utils.tree"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils.fast_map_structure": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.utils.tree_utils.tree",
    "func",
    "zip"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.stack_sequence_fields": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "acme.utils.tree_utils.ElementType",
    "acme.utils.tree_utils.fast_map_structure",
    "numpy.asarray",
    "numpy.stack",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.utils.tree_utils.unstack_sequence_fields": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "acme.utils.tree_utils.ElementType",
    "acme.utils.tree_utils.tree",
    "int",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "acme.utils.tree_utils_test.SequenceStackTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.utils.tree_utils_test.SequenceStackTest.test_stack_sequence_fields": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.utils.tree_utils.stack_sequence_fields",
    "acme.utils.tree_utils_test.TEST_SEQUENCE",
    "acme.utils.tree_utils_test.tree"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils_test.SequenceStackTest.test_unstack_sequence_fields": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.utils.tree_utils.stack_sequence_fields",
    "acme.utils.tree_utils.unstack_sequence_fields",
    "acme.utils.tree_utils_test.TEST_SEQUENCE",
    "acme.utils.tree_utils_test.tree",
    "len",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "acme.utils.tree_utils_test.TEST_SEQUENCE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "acme.utils.tree_utils_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.utils.tree_utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.utils.tree_utils_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.utils.tree_utils_test.tree_utils": {
  "data": {
   "shadows": "acme.utils.tree_utils"
  },
  "type": "import"
 },
 "acme.wrappers": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.ActionRepeatWrapper": {
  "data": {
   "shadows": "acme.wrappers.action_repeat.ActionRepeatWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.AtariWrapper": {
  "data": {
   "shadows": "acme.wrappers.atari_wrapper.AtariWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.CanonicalSpecWrapper": {
  "data": {
   "shadows": "acme.wrappers.canonical_spec.CanonicalSpecWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.EnvironmentWrapper": {
  "data": {
   "shadows": "acme.wrappers.base.EnvironmentWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.FrameStackingWrapper": {
  "data": {
   "shadows": "acme.wrappers.frame_stacking.FrameStackingWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.GymAtariAdapter": {
  "data": {
   "shadows": "acme.wrappers.gym_wrapper.GymAtariAdapter"
  },
  "type": "import"
 },
 "acme.wrappers.GymWrapper": {
  "data": {
   "shadows": "acme.wrappers.gym_wrapper.GymWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.MujocoVideoWrapper": {
  "data": {
   "shadows": "acme.wrappers.video.MujocoVideoWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.ObservationActionRewardWrapper": {
  "data": {
   "shadows": "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.SinglePrecisionWrapper": {
  "data": {
   "shadows": "acme.wrappers.single_precision.SinglePrecisionWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.VideoWrapper": {
  "data": {
   "shadows": "acme.wrappers.video.VideoWrapper"
  },
  "type": "import"
 },
 "acme.wrappers.action_repeat": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.action_repeat.ActionRepeatWrapper": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.action_repeat.ActionRepeatWrapper.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "acme.wrappers.action_repeat.dm_env",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.action_repeat.ActionRepeatWrapper.step": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "acme.wrappers.action_repeat.dm_env",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.action_repeat.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.action_repeat.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.action_repeat.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "_ZeroDiscountOnLifeLoss",
    "acme.wrappers.atari_wrapper.RGB_INDEX",
    "acme.wrappers.atari_wrapper.dm_env",
    "acme.wrappers.frame_stacking.FrameStacker",
    "bool",
    "float",
    "int",
    "numpy.inf",
    "super",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper._init_observation_spec": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.NUM_COLOR_CHANNELS",
    "dm_env.specs.Array",
    "numpy.float",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper._observation_from_timestep_stack": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.RGB_INDEX",
    "acme.wrappers.atari_wrapper.dm_env",
    "numpy.max",
    "numpy.stack",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper._observation_on_reset": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.RGB_INDEX",
    "acme.wrappers.atari_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper._postprocess_observation": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.dm_env",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper._postprocess_pixels": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "PIL.Image.BILINEAR",
    "PIL.Image.fromarray",
    "numpy.array",
    "numpy.ndarray",
    "numpy.tensordot",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.action_spec": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "dm_env.specs.DiscreteArray"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.observation_spec": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "dm_env.specs.Array",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.raw_observation": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.reset": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.reward_spec": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "dm_env.specs.Array",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.AtariWrapper.step": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.dm_env",
    "int",
    "numpy.array",
    "numpy.product",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.LIVES_INDEX": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "acme.wrappers.atari_wrapper.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.NUM_COLOR_CHANNELS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "acme.wrappers.atari_wrapper.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.RGB_INDEX": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "acme.wrappers.atari_wrapper.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper._ZeroDiscountOnLifeLoss": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.atari_wrapper._ZeroDiscountOnLifeLoss.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.dm_env",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper._ZeroDiscountOnLifeLoss.reset": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.LIVES_INDEX",
    "acme.wrappers.atari_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper._ZeroDiscountOnLifeLoss.step": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "acme.wrappers.atari_wrapper.LIVES_INDEX",
    "acme.wrappers.atari_wrapper.dm_env",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.frame_stacking": {
  "data": {
   "shadows": "acme.wrappers.frame_stacking"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.wrappers.atari_wrapper_test.AtariWrapperTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "acme.wrappers.atari_wrapper_test.SKIP_GYM_MESSAGE",
    "acme.wrappers.atari_wrapper_test.SKIP_GYM_TESTS",
    "acme.wrappers.atari_wrapper_test.unittest"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.atari_wrapper_test.AtariWrapperTest.test_pong": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "acme.wrappers.atari_wrapper.AtariWrapper",
    "acme.wrappers.atari_wrapper_test.gym",
    "acme.wrappers.gym_wrapper.GymAtariAdapter",
    "bool",
    "dm_env.specs.Array",
    "dm_env.specs.DiscreteArray",
    "numpy.dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.atari_wrapper_test.SKIP_GYM_MESSAGE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "acme.wrappers.atari_wrapper_test.SKIP_GYM_TESTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "acme.wrappers.atari_wrapper_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.atari_wrapper": {
  "data": {
   "shadows": "acme.wrappers.atari_wrapper"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.gym_wrapper": {
  "data": {
   "shadows": "acme.wrappers.gym_wrapper"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.wrappers.atari_wrapper_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "acme.wrappers.base": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.wrappers.base.EnvironmentWrapper": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.base.EnvironmentWrapper.__getattr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.action_spec": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.discount_spec": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.environment": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.observation_spec": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.reset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.reward_spec": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "acme.wrappers.base.EnvironmentWrapper.step": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.wrappers.base.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.base.wrap_all": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "acme.wrappers.base.dm_env",
    "typing.Callable",
    "typing.Sequence",
    "w"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.canonical_spec.CanonicalSpecWrapper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.canonical_spec.CanonicalSpecWrapper.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acme.wrappers.canonical_spec.dm_env",
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec.CanonicalSpecWrapper.action_spec": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_convert_spec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec.CanonicalSpecWrapper.step": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "_scale_nested_action",
    "acme.types.NestedArray",
    "acme.wrappers.canonical_spec.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec._convert_spec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.types.NestedSpec",
    "acme.wrappers.canonical_spec.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec._convert_spec._convert_single_spec": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "isinstance",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec._scale_nested_action": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "acme.types.NestedSpec",
    "acme.wrappers.canonical_spec.tree",
    "bool"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec._scale_nested_action._scale_action": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.specs.BoundedArray",
    "isinstance",
    "numpy.clip",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.canonical_spec.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.canonical_spec.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.canonical_spec.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.canonical_spec.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.wrappers.canonical_spec.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.wrappers.canonical_spec.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.frame_stacking.FrameStacker": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "acme.wrappers.frame_stacking.FrameStacker.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStacker.num_frames": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStacker.reset": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "acme.wrappers.frame_stacking.collections"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStacker.step": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.stack",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStacker.update_spec": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dm_env.specs.Array"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "FrameStacker",
    "acme.wrappers.frame_stacking.dm_env",
    "acme.wrappers.frame_stacking.tree",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper._process_timestep": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.wrappers.frame_stacking.dm_env",
    "acme.wrappers.frame_stacking.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper.observation_spec": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "acme.types.NestedSpec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper.reset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.wrappers.frame_stacking.dm_env",
    "acme.wrappers.frame_stacking.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.FrameStackingWrapper.step": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "acme.wrappers.frame_stacking.dm_env",
    "int"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.dm_env_specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.testing.fakes.ContinuousEnvironment"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment._generate_fake_observation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "acme.wrappers.frame_stacking_test.tree",
    "numpy.ones_like",
    "super"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking_test.FrameStackingTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.frame_stacking_test.FrameStackingTest.test_second_reset": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.wrappers.FrameStackingWrapper",
    "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking_test.FrameStackingTest.test_specs": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.wrappers.FrameStackingWrapper",
    "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking_test.FrameStackingTest.test_step": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.wrappers.FrameStackingWrapper",
    "acme.wrappers.frame_stacking_test.FakeNonZeroObservationEnvironment",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.frame_stacking_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.wrappers.frame_stacking_test.wrappers": {
  "data": {
   "shadows": "acme.wrappers"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.GymWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter._wrap_observation": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "acme.types.NestedArray"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter.action_spec": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "acme.specs.BoundedArray",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter.observation_spec": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "acme.specs.Array",
    "acme.types.NestedSpec",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter.reset": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymAtariAdapter.step": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.dm_env",
    "numpy.ndarray",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.dm_env"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.__getattr__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_convert_to_spec",
    "acme.wrappers.gym_wrapper.gym"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.action_spec": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "acme.types.NestedSpec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.close": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.environment": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.gym",
    "property"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.observation_spec": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "acme.types.NestedSpec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.reset": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.GymWrapper.step": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "acme.wrappers.gym_wrapper.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper._convert_to_spec": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "acme.specs.BoundedArray",
    "acme.specs.DiscreteArray",
    "acme.types.NestedSpec",
    "acme.wrappers.gym_wrapper.gym",
    "gym.spaces.Box",
    "gym.spaces.Dict",
    "gym.spaces.Discrete",
    "gym.spaces.MultiBinary",
    "gym.spaces.MultiDiscrete",
    "gym.spaces.Tuple",
    "isinstance",
    "numpy.zeros",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper.spaces": {
  "data": {
   "shadows": "gym.spaces"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.wrappers.gym_wrapper_test.AtariGymWrapperTest": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase",
    "acme.wrappers.gym_wrapper_test.SKIP_GYM_MESSAGE",
    "acme.wrappers.gym_wrapper_test.SKIP_GYM_TESTS",
    "acme.wrappers.gym_wrapper_test.unittest"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.gym_wrapper_test.AtariGymWrapperTest.test_pong": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.GymAtariAdapter",
    "acme.wrappers.gym_wrapper_test.gym",
    "dm_env.specs.Array",
    "dm_env.specs.BoundedArray",
    "dm_env.specs.DiscreteArray",
    "numpy.array",
    "numpy.dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper_test.GymWrapperTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase",
    "acme.wrappers.gym_wrapper_test.SKIP_GYM_MESSAGE",
    "acme.wrappers.gym_wrapper_test.SKIP_GYM_TESTS",
    "acme.wrappers.gym_wrapper_test.unittest"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.gym_wrapper_test.GymWrapperTest.test_early_truncation": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.GymWrapper",
    "acme.wrappers.gym_wrapper_test.gym"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper_test.GymWrapperTest.test_gym_cartpole": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.wrappers.gym_wrapper.GymWrapper",
    "acme.wrappers.gym_wrapper_test.gym",
    "dm_env.specs.BoundedArray",
    "dm_env.specs.DiscreteArray",
    "numpy.dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.gym_wrapper_test.SKIP_GYM_MESSAGE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "acme.wrappers.gym_wrapper_test.SKIP_GYM_TESTS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "acme.wrappers.gym_wrapper_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test.gym_wrapper": {
  "data": {
   "shadows": "acme.wrappers.gym_wrapper"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.wrappers.gym_wrapper_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "acme.wrappers.observation_action_reward": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.observation_action_reward.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "acme.wrappers.observation_action_reward.OAR": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.types.Nest",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper._augment_observation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "acme.wrappers.observation_action_reward.OAR",
    "acme.wrappers.observation_action_reward.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper.observation_spec": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "acme.wrappers.observation_action_reward.OAR"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper.reset": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "acme.wrappers.observation_action_reward.dm_env",
    "acme.wrappers.observation_action_reward.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.observation_action_reward.ObservationActionRewardWrapper.step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "acme.types.NestedArray",
    "acme.wrappers.observation_action_reward.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.observation_action_reward.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.observation_action_reward.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.observation_action_reward.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.wrappers.observation_action_reward.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision": {
  "data": {},
  "type": "module"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper._convert_timestep": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_convert_value",
    "acme.wrappers.single_precision.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.action_spec": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_convert_spec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.discount_spec": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_convert_spec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.observation_spec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_convert_spec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.reset": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "acme.wrappers.single_precision.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.reward_spec": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_convert_spec"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.SinglePrecisionWrapper.step": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "acme.wrappers.single_precision.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision._convert_spec": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "acme.types.NestedSpec",
    "acme.wrappers.single_precision.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision._convert_spec._convert_single_spec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "acme.specs.Array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision._convert_value": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "acme.types.Nest",
    "acme.wrappers.single_precision.tree"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision._convert_value._convert_single_value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision.specs": {
  "data": {
   "shadows": "acme.specs"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision.types": {
  "data": {
   "shadows": "acme.types"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "acme.wrappers.single_precision_test.SinglePrecisionTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.single_precision_test.SinglePrecisionTest.test_continuous": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acme.testing.fakes.ContinuousEnvironment",
    "acme.wrappers.SinglePrecisionWrapper",
    "numpy.float32",
    "numpy.float64",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision_test.SinglePrecisionTest.test_discrete": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "acme.testing.fakes.DiscreteEnvironment",
    "acme.wrappers.SinglePrecisionWrapper",
    "dm_env.specs.Array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.single_precision_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision_test.fakes": {
  "data": {
   "shadows": "acme.testing.fakes"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision_test.specs": {
  "data": {
   "shadows": "dm_env.specs"
  },
  "type": "import"
 },
 "acme.wrappers.single_precision_test.wrappers": {
  "data": {
   "shadows": "acme.wrappers"
  },
  "type": "import"
 },
 "acme.wrappers.video": {
  "data": {
   "symbols_in_volume": [
    "acme.wrappers.video.matplotlib"
   ]
  },
  "type": "module"
 },
 "acme.wrappers.video.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "acme.wrappers.video.MujocoVideoWrapper": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "acme.wrappers.video.VideoWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.video.MujocoVideoWrapper.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "acme.wrappers.video.dm_env",
    "float",
    "hasattr",
    "int",
    "round",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video.MujocoVideoWrapper._render_frame": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "numpy.ceil",
    "numpy.sqrt",
    "numpy.uint8",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "acme.wrappers.video.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "acme.wrappers.video.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "acme.wrappers.video.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "acme.wrappers.video.VideoWrapper": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "acme.wrappers.base.EnvironmentWrapper"
   ]
  },
  "type": "class"
 },
 "acme.wrappers.video.VideoWrapper.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "acme.utils.paths.process_path",
    "acme.wrappers.video.VideoWrapper",
    "acme.wrappers.video.dm_env",
    "float",
    "int",
    "process_path",
    "str",
    "super",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video.VideoWrapper._append_frame": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "acme.wrappers.video.VideoWrapper._render_frame": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "acme.wrappers.video.VideoWrapper._write_frames": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "acme.wrappers.video._make_animation",
    "open"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video.VideoWrapper.reset": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "acme.wrappers.video.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video.VideoWrapper.step": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "acme.wrappers.video.dm_env"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video._make_animation": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "matplotlib.animation.Animation",
    "matplotlib.animation.FuncAnimation",
    "matplotlib.pyplot.subplots",
    "numpy.ndarray",
    "numpy.sqrt",
    "round",
    "tuple",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "acme.wrappers.video._make_animation.update": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "acme.wrappers.video.anim": {
  "data": {
   "shadows": "matplotlib.animation"
  },
  "type": "import"
 },
 "acme.wrappers.video.base": {
  "data": {
   "shadows": "acme.wrappers.base"
  },
  "type": "import"
 },
 "acme.wrappers.video.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "acme.wrappers.video.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "acme.wrappers.video.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "acme.wrappers.video.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "acme.wrappers.video.paths": {
  "data": {
   "shadows": "acme.utils.paths"
  },
  "type": "import"
 },
 "acme.wrappers.video.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "acme.wrappers.wrap_all": {
  "data": {
   "shadows": "acme.wrappers.base.wrap_all"
  },
  "type": "import"
 }
}