{
 "graphql": {
  "data": {},
  "type": "module"
 },
 "graphql.INVALID": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "graphql.__all__": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "graphql.__version__": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "graphql.__version_info__": {
  "data": {
   "lineno": 406
  },
  "type": "constant"
 },
 "graphql.__version_info_js__": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "graphql.__version_js__": {
  "data": {
   "lineno": 409
  },
  "type": "constant"
 },
 "graphql.error": {
  "data": {},
  "type": "module"
 },
 "graphql.error.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "graphql.error.graphql_error": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "graphql.error.graphql_error.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.GraphQLError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "Exception.__hash__",
    "int",
    "str",
    "typing.Any",
    "typing.Collection",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.error.graphql_error.GraphQLError.__eq__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "all",
    "dict",
    "getattr",
    "graphql.error.graphql_error.GraphQLError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.GraphQLError.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "int",
    "isinstance",
    "list",
    "str",
    "super",
    "sys.exc_info",
    "typing.Any",
    "typing.Collection",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.GraphQLError.__ne__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "graphql.error.graphql_error.GraphQLError.__repr__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.GraphQLError.__str__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "graphql.error.graphql_error.print_error"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.GraphQLError.formatted": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "graphql.error.graphql_error.format_error",
    "property"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.error.graphql_error.exc_info": {
  "data": {
   "shadows": "sys.exc_info"
  },
  "type": "import"
 },
 "graphql.error.graphql_error.format_error": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "graphql.error.graphql_error.GraphQLError",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.error.graphql_error.print_error": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "graphql.error.graphql_error.GraphQLError",
    "print_location",
    "print_source_location",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.error.located_error": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "graphql.error.located_error.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.error.located_error.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.error.located_error.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "graphql.error.located_error.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.error.located_error.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.error.located_error.located_error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "GraphQLError",
    "TypeError",
    "int",
    "isinstance",
    "str",
    "typing.Collection",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.error.syntax_error": {
  "data": {},
  "type": "module"
 },
 "graphql.error.syntax_error.GraphQLSyntaxError": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "graphql.error.syntax_error.GraphQLSyntaxError.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.error.syntax_error.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.execution": {
  "data": {},
  "type": "module"
 },
 "graphql.execution.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "graphql.execution.execute": {
  "data": {
   "symbols_in_volume": [
    "graphql.execution.execute.ExecutionResult",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.execution.execute.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.execution.execute.Awaitable": {
  "data": {
   "shadows": "typing.Awaitable"
  },
  "type": "import"
 },
 "graphql.execution.execute.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.execution.execute.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.execution.execute.ExecutionContext": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.execution.execute.ExecutionContext.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.build": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "FrozenList",
    "GraphQLError",
    "MiddlewareManager",
    "TypeError",
    "bool",
    "classmethod",
    "cls",
    "get_variable_values",
    "graphql.execution.execute.Middleware",
    "inspect",
    "isinstance",
    "list",
    "str",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.build_resolve_info": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "GraphQLResolveInfo",
    "Path",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.build_response": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "build_response_async",
    "graphql.execution.execute.ExecutionResult",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.collect_and_execute_subfields": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "Path",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.collect_fields": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "graphql.execution.execute.get_field_entry_key",
    "isinstance",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.collect_subfields": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "id",
    "len",
    "map",
    "set",
    "str",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_abstract_value": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "GraphQLResolveInfo",
    "Path",
    "await_complete_object_value",
    "resolve_type_fn",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_leaf_value": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "TypeError",
    "inspect",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_list_value": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "GraphQLError",
    "GraphQLResolveInfo",
    "Path",
    "append_awaitable",
    "append_result",
    "asyncio.gather",
    "enumerate",
    "get_completed_results",
    "int",
    "is_awaitable",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Iterable",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_object_value": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "GraphQLResolveInfo",
    "Path",
    "collect_and_execute_subfields_async",
    "graphql.execution.execute.invalid_return_type_error",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_value": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "Exception",
    "GraphQLResolveInfo",
    "Path",
    "TypeError",
    "inspect",
    "is_abstract_type",
    "is_leaf_type",
    "is_list_type",
    "is_non_null_type",
    "is_object_type",
    "isinstance",
    "typing.Any",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.complete_value_catching_error": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "Exception",
    "GraphQLResolveInfo",
    "Path",
    "await_completed",
    "await_result",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.does_fragment_condition_match": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "bool",
    "is_abstract_type",
    "type_from_ast",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.ensure_valid_runtime_type": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "GraphQLError",
    "GraphQLResolveInfo",
    "inspect",
    "is_object_type",
    "isinstance",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.execute_fields": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "Path",
    "append_awaitable",
    "asyncio.gather",
    "get_results",
    "is_awaitable",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.execute_fields_serially": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Path",
    "await_and_set_result",
    "get_results",
    "is_awaitable",
    "set_result",
    "str",
    "typing.Any",
    "typing.Awaitable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.execute_operation": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "GraphQLError",
    "await_result",
    "get_operation_root_type",
    "set",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.handle_field_error": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "Exception",
    "Path",
    "is_non_null_type",
    "located_error",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.resolve_field": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "Path",
    "graphql.execution.execute.get_field_def",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.resolve_field_value_or_error": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "Exception",
    "GraphQLError",
    "GraphQLResolveInfo",
    "await_result",
    "get_argument_values",
    "resolve_fn",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionContext.should_include_node": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "bool",
    "get_directive_values",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.ExecutionResult": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.execution.execute.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "graphql.execution.execute.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.execution.execute.Middleware": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "graphql.execution.execute.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.execution.execute.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.execution.execute.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.execution.execute.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.execution.execute.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "graphql.execution.execute.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.execution.execute.__all__": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "graphql.execution.execute.assert_valid_execution_arguments": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "TypeError",
    "assert_valid_schema",
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.execution.execute.default_field_resolver": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "GraphQLResolveInfo",
    "callable",
    "dict",
    "getattr",
    "isinstance",
    "typing.Any",
    "value"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.default_is_awaitable": {
  "data": {
   "shadows": "is_awaitable"
  },
  "type": "import"
 },
 "graphql.execution.execute.default_type_resolver": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "GraphQLResolveInfo",
    "append_awaitable_results",
    "append_awaitable_types",
    "asyncio.gather",
    "get_type",
    "graphql.execution.execute.get_typename",
    "is_awaitable",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Awaitable",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.execute": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "bool",
    "graphql.execution.execute.ExecutionContext",
    "graphql.execution.execute.ExecutionResult",
    "graphql.execution.execute.Middleware",
    "graphql.execution.execute.assert_valid_execution_arguments",
    "is_awaitable",
    "isinstance",
    "list",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.gather": {
  "data": {
   "shadows": "asyncio.gather"
  },
  "type": "import"
 },
 "graphql.execution.execute.get_field_def": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.get_field_entry_key": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.get_typename": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "cls",
    "cls.__name__",
    "dict",
    "getattr",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.execution.execute.invalid_return_type_error": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "GraphQLError",
    "inspect",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.execution.middleware": {
  "data": {
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "graphql.execution.middleware.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.execution.middleware.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.execution.middleware.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.execution.middleware.GraphQLFieldResolver": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.execution.middleware.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "graphql.execution.middleware.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.execution.middleware.MiddlewareManager": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "graphql.execution.middleware.GraphQLFieldResolver",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.execution.middleware.MiddlewareManager.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "graphql.execution.middleware.get_middleware_resolvers",
    "list",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.execution.middleware.MiddlewareManager.get_field_resolver": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "functools.partial",
    "functools.reduce",
    "graphql.execution.middleware.GraphQLFieldResolver"
   ]
  },
  "type": "function"
 },
 "graphql.execution.middleware.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.execution.middleware.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.execution.middleware.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.execution.middleware.get_middleware_resolvers": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr",
    "inspect.isfunction",
    "typing.Any",
    "typing.Callable",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "graphql.execution.middleware.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "graphql.execution.middleware.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "graphql.execution.middleware.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "graphql.execution.values": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.execution.values.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.execution.values.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.execution.values.CoercedVariableValues": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "graphql.execution.values.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.execution.values.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.execution.values.NodeWithDirective": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "graphql.execution.values.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.execution.values.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.execution.values.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "graphql.execution.values.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.execution.values.coerce_variable_values": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "GraphQLError",
    "coerce_input_value",
    "inspect",
    "is_input_type",
    "is_non_null_type",
    "on_error",
    "print_ast",
    "str",
    "type_from_ast",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.cast",
    "value_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.values.coerce_variable_values.on_input_value_error": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "GraphQLError",
    "inspect",
    "int",
    "on_error",
    "print_path_list",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.execution.values.get_argument_values": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "GraphQLError",
    "is_non_null_type",
    "isinstance",
    "print_ast",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union",
    "value_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.execution.values.get_directive_values": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "graphql.execution.values.NodeWithDirective",
    "graphql.execution.values.get_argument_values",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.execution.values.get_variable_values": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.execution.values.CoercedVariableValues",
    "graphql.execution.values.coerce_variable_values",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.execution.values.get_variable_values.on_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "GraphQLError",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language": {
  "data": {},
  "type": "module"
 },
 "graphql.language.__all__": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "graphql.language.ast": {
  "data": {
   "symbols_in_volume": [
    "graphql.language.ast.SchemaExtensionNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.language.ast.ArgumentNode": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "graphql.language.ast.NameNode",
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.BooleanValueNode": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "bool",
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.DefinitionNode": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.DirectiveDefinitionNode": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "FrozenList",
    "bool",
    "graphql.language.ast.InputValueDefinitionNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.StringValueNode",
    "graphql.language.ast.TypeSystemDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.DirectiveNode": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.ArgumentNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.DocumentNode": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "graphql.language.ast.EnumTypeDefinitionNode": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.TypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.EnumTypeExtensionNode": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.EnumValueDefinitionNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.EnumValueDefinitionNode": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "graphql.language.ast.TypeDefinitionNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.EnumValueNode": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "graphql.language.ast.ValueNode",
    "str"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ExecutableDefinitionNode": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DefinitionNode",
    "graphql.language.ast.NameNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.FieldDefinitionNode": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DefinitionNode",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.StringValueNode",
    "graphql.language.ast.TypeNode",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.FieldNode": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.SelectionNode",
    "graphql.language.ast.SelectionSetNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.FloatValueNode": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "graphql.language.ast.ValueNode",
    "str"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.FragmentDefinitionNode": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "graphql.language.ast.ExecutableDefinitionNode",
    "graphql.language.ast.NameNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.FragmentSpreadNode": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "graphql.language.ast.NameNode",
    "graphql.language.ast.SelectionNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InlineFragmentNode": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "graphql.language.ast.SelectionNode",
    "graphql.language.ast.SelectionSetNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InputObjectTypeDefinitionNode": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.InputValueDefinitionNode",
    "graphql.language.ast.TypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InputObjectTypeExtensionNode": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.InputValueDefinitionNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InputValueDefinitionNode": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DefinitionNode",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.StringValueNode",
    "graphql.language.ast.TypeNode",
    "graphql.language.ast.ValueNode",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.IntValueNode": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "graphql.language.ast.ValueNode",
    "str"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InterfaceTypeDefinitionNode": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.InterfaceTypeExtensionNode": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.FieldDefinitionNode",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.language.ast.ListTypeNode": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "graphql.language.ast.TypeNode",
    "type"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ListValueNode": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Location": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "graphql.language.ast.Token",
    "int"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Location.__eq__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "graphql.language.ast.Location",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__hash__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "graphql.language.ast.Token"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__inspect__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__ne__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__repr__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "graphql.language.ast.Location.__str__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "graphql.language.ast.NameNode": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "graphql.language.ast.Node",
    "str"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.NamedTypeNode": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "graphql.language.ast.NameNode",
    "graphql.language.ast.TypeNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Node": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "graphql.language.ast.Location",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Node.__copy__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__deepcopy__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "copy.deepcopy",
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__eq__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "all",
    "getattr",
    "graphql.language.ast.Node",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__hash__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "getattr",
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "FrozenList",
    "isinstance",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__init_subclass__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "camel_to_snake",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Node.__repr__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.NonNullTypeNode": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "graphql.language.ast.ListTypeNode",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeNode",
    "type",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.NullValueNode": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ObjectFieldNode": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "graphql.language.ast.NameNode",
    "graphql.language.ast.Node",
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ObjectTypeDefinitionNode": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ObjectTypeExtensionNode": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.FieldDefinitionNode",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ObjectValueNode": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.OperationDefinitionNode": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "graphql.language.ast.ExecutableDefinitionNode",
    "graphql.language.ast.OperationType"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.OperationType": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.OperationTypeDefinitionNode": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.Node",
    "graphql.language.ast.OperationType",
    "type"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.language.ast.ScalarTypeDefinitionNode": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "graphql.language.ast.TypeDefinitionNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ScalarTypeExtensionNode": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "graphql.language.ast.TypeExtensionNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.SchemaDefinitionNode": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.StringValueNode",
    "graphql.language.ast.TypeSystemDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.SchemaExtensionNode": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.Node",
    "graphql.language.ast.OperationTypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.SelectionNode": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.Node",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.SelectionSetNode": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.StringValueNode": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "bool",
    "graphql.language.ast.ValueNode",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Token": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "next",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.Token.__copy__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__deepcopy__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__eq__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "graphql.language.ast.Token",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__hash__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__inspect__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__repr__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "graphql.language.ast.Token.__str__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "graphql.language.ast.Token.desc": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.ast.TypeDefinitionNode": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.StringValueNode",
    "graphql.language.ast.TypeSystemDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.TypeExtensionNode": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.DirectiveNode",
    "graphql.language.ast.NameNode",
    "graphql.language.ast.TypeSystemDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.TypeNode": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.TypeSystemDefinitionNode": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "graphql.language.ast.DefinitionNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.TypeSystemExtensionNode": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "graphql.language.ast.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.language.ast.UnionTypeDefinitionNode": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeDefinitionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.UnionTypeExtensionNode": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.NamedTypeNode",
    "graphql.language.ast.TypeExtensionNode",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.ValueNode": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "graphql.language.ast.Node"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.VariableDefinitionNode": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "FrozenList",
    "graphql.language.ast.Node",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.VariableNode": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "graphql.language.ast.NameNode",
    "graphql.language.ast.ValueNode"
   ]
  },
  "type": "class"
 },
 "graphql.language.ast.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.language.ast.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "graphql.language.ast.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "graphql.language.block_string": {
  "data": {},
  "type": "module"
 },
 "graphql.language.block_string.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.language.block_string.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.language.block_string.dedent_block_string_value": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "graphql.language.block_string.get_block_string_indentation",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.block_string.get_block_string_indentation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "graphql.language.block_string.leading_whitespace",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.language.block_string.leading_whitespace": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.block_string.print_block_string": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.directive_locations": {
  "data": {},
  "type": "module"
 },
 "graphql.language.directive_locations.DirectiveLocation": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphql.language.directive_locations.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "graphql.language.directive_locations.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.language.lexer": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "graphql.language.lexer.Lexer": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "graphql.language.lexer.Lexer.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Token"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.advance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Token"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.lookahead": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Token"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.position_after_whitespace": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_block_string": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "GraphQLSyntaxError",
    "Token",
    "dedent_block_string_value",
    "graphql.language.lexer.print_char",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_comment": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Token",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_digits": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "GraphQLSyntaxError",
    "graphql.language.lexer.print_char",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_name": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Token",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_number": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "GraphQLSyntaxError",
    "Token",
    "graphql.language.lexer.is_name_start",
    "graphql.language.lexer.print_char",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_string": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "GraphQLSyntaxError",
    "Token",
    "append",
    "chr",
    "graphql.language.lexer.print_char",
    "graphql.language.lexer.uni_char_code",
    "int",
    "len",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.Lexer.read_token": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "GraphQLSyntaxError",
    "Token",
    "graphql.language.lexer._KIND_FOR_PUNCT",
    "graphql.language.lexer.unexpected_character_message",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.language.lexer._ESCAPED_CHARS": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "graphql.language.lexer._KIND_FOR_PUNCT": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "graphql.language.lexer.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.language.lexer._punctuator_token_kinds": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "graphql.language.lexer.char2hex": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.is_name_start": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.is_punctuator_token_kind": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "graphql.language.lexer._punctuator_token_kinds"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.print_char": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.unexpected_character_message": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "graphql.language.lexer.print_char",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.lexer.uni_char_code": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "graphql.language.lexer.char2hex",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.location": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "graphql.language.location.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.language.location.SourceLocation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "graphql.language.location.SourceLocation.__eq__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.language.location.SourceLocation.__ne__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "graphql.language.location.SourceLocation.formatted": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "graphql.language.location.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "graphql.language.location.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.language.location.get_location": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "graphql.language.location.SourceLocation",
    "int"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates": {
  "data": {},
  "type": "module"
 },
 "graphql.language.predicates.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "graphql.language.predicates.is_definition_node": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_executable_definition_node": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_selection_node": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_type_definition_node": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_type_extension_node": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_type_node": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_type_system_definition_node": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_type_system_extension_node": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.predicates.is_value_node": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.language.print_location": {
  "data": {
   "symbols_in_volume": [
    "graphql.language.print_location.re"
   ]
  },
  "type": "module"
 },
 "graphql.language.print_location.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.language.print_location.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.language.print_location.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.language.print_location._re_newline": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graphql.language.print_location.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.language.print_location.print_location": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "get_location",
    "graphql.language.print_location.print_source_location",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.print_location.print_prefixed_lines": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "map",
    "max",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.language.print_location.print_source_location": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "divmod",
    "graphql.language.print_location._re_newline",
    "graphql.language.print_location.print_prefixed_lines",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.print_location.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.language.source": {
  "data": {},
  "type": "module"
 },
 "graphql.language.source.Source": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "graphql.language.source.Source.__eq__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "graphql.language.source.Source",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.source.Source.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "SourceLocation",
    "SourceLocation._make",
    "TypeError",
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.language.source.Source.__ne__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "graphql.language.source.Source.__repr__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "graphql.language.source.Source.get_location": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "SourceLocation",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.language.source.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.language.token_kind": {
  "data": {},
  "type": "module"
 },
 "graphql.language.token_kind.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "graphql.language.token_kind.TokenKind": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphql.language.token_kind.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.language.visitor": {
  "data": {
   "symbols_in_volume": [
    "Ellipsis",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "graphql.language.visitor.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.language.visitor.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.language.visitor.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.language.visitor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.language.visitor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.language.visitor.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.language.visitor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.language.visitor.ParallelVisitor": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "graphql.language.visitor.Visitor"
   ]
  },
  "type": "class"
 },
 "graphql.language.visitor.ParallelVisitor.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "graphql.language.visitor.Visitor",
    "len",
    "typing.Any",
    "typing.Collection",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.language.visitor.ParallelVisitor.enter": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "enumerate",
    "fn"
   ]
  },
  "type": "function"
 },
 "graphql.language.visitor.ParallelVisitor.leave": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "enumerate",
    "fn"
   ]
  },
  "type": "function"
 },
 "graphql.language.visitor.Stack": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.List",
    "typing.NamedTuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.language.visitor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.language.visitor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.language.visitor.Visitor": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "graphql.language.visitor.Visitor.__init_subclass__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "issubclass",
    "len",
    "snake_to_camel",
    "str",
    "super",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.language.visitor.Visitor.get_visit_fn": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "graphql.language.visitor.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graphql.language.visitor.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "graphql.language.visitor.visit": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "ancestors_append",
    "ancestors_pop",
    "copy.copy",
    "getattr",
    "graphql.language.visitor.Stack",
    "graphql.language.visitor.Visitor",
    "inspect",
    "isinstance",
    "len",
    "list",
    "path_append",
    "path_pop",
    "setattr",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "visit_fn"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "graphql.pyutils.awaitable_or_value": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.awaitable_or_value.T",
    "typing.Awaitable",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.awaitable_or_value.Awaitable": {
  "data": {
   "shadows": "typing.Awaitable"
  },
  "type": "import"
 },
 "graphql.pyutils.awaitable_or_value.AwaitableOrValue": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.pyutils.awaitable_or_value.T": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.pyutils.awaitable_or_value.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "graphql.pyutils.awaitable_or_value.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.pyutils.awaitable_or_value.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.cached_property": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "functools.cached_property",
    "graphql.pyutils.cached_property.CachedProperty",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.cached_property.CachedProperty": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "graphql.pyutils.cached_property.CachedProperty.__get__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "graphql.pyutils.cached_property.CachedProperty.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.cached_property.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "graphql.pyutils.cached_property.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "graphql.pyutils.cached_property.cached_property": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "graphql.pyutils.cached_property.standard_cached_property": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.pyutils.convert_case": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.convert_case.re"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.convert_case.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.pyutils.convert_case._re_camel_to_snake": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.pyutils.convert_case._re_snake_to_camel": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.pyutils.convert_case.camel_to_snake": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "graphql.pyutils.convert_case._re_camel_to_snake"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.convert_case.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.pyutils.convert_case.snake_to_camel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "graphql.pyutils.convert_case._re_snake_to_camel"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.dedent": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.dedent.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.dedent._dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "graphql.pyutils.dedent.dedent": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.description": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.description.Description"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.description.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.description.Description": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.description.Description.isinstance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.description.Description.register": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "object",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.description.Description.unregister": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "len",
    "object",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.description.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.pyutils.description.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.pyutils.description.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.description.is_description": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "graphql.pyutils.description.register_description": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "graphql.pyutils.description.unregister_description": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "graphql.pyutils.did_you_mean": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.did_you_mean.MAX_LENGTH": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.pyutils.did_you_mean.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.pyutils.did_you_mean.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "graphql.pyutils.did_you_mean.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.did_you_mean.did_you_mean": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "graphql.pyutils.did_you_mean.MAX_LENGTH",
    "len",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.event_emitter.AbstractEventLoop": {
  "data": {
   "shadows": "asyncio.AbstractEventLoop"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.EventEmitter": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "graphql.pyutils.event_emitter.EventEmitter.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "asyncio.AbstractEventLoop",
    "collections.defaultdict",
    "list",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.EventEmitter.add_listener": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.EventEmitter.emit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "asyncio.ensure_future",
    "inspect.isawaitable",
    "list",
    "listener"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.EventEmitter.remove_listener": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.EventEmitterAsyncIterator": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "StopAsyncIteration"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.event_emitter.EventEmitterAsyncIterator.__aiter__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.EventEmitterAsyncIterator.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "asyncio.AbstractEventLoop",
    "asyncio.Queue",
    "graphql.pyutils.event_emitter.EventEmitter",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.event_emitter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.Queue": {
  "data": {
   "shadows": "asyncio.Queue"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.pyutils.event_emitter.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.ensure_future": {
  "data": {
   "shadows": "asyncio.ensure_future"
  },
  "type": "import"
 },
 "graphql.pyutils.event_emitter.isawaitable": {
  "data": {
   "shadows": "inspect.isawaitable"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_dict": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.frozen_dict.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_dict.FrozenDict": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graphql.pyutils.frozen_dict.K",
    "graphql.pyutils.frozen_dict.T",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__copy__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "graphql.pyutils.frozen_dict.FrozenDict"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__deepcopy__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "copy.deepcopy",
    "graphql.pyutils.frozen_dict.FrozenDict"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__delitem__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__hash__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__iadd__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.__setitem__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.clear": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.pop": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.popitem": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.setdefault": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.FrozenDict.update": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_dict.K": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_dict.T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_dict.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_dict.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_dict.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_error": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.frozen_error.FrozenError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.frozen_error.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_list": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.frozen_list.FrozenList": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graphql.pyutils.frozen_list.T",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.frozen_list.FrozenList.__add__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "list.__add__",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__copy__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "graphql.pyutils.frozen_list.FrozenList"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__deepcopy__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "copy.deepcopy",
    "graphql.pyutils.frozen_list.FrozenList"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__delitem__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__hash__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__iadd__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__imul__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__mul__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "list.__mul__"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.__setitem__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.append": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.clear": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.extend": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.insert": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.pop": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.remove": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.reverse": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.FrozenList.sort": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "graphql.pyutils.frozen_list.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_list.T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_list.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "graphql.pyutils.frozen_list.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.pyutils.frozen_list.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "graphql.pyutils.identity_func": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.identity_func.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.identity_func.T": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.pyutils.identity_func.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "graphql.pyutils.identity_func.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.pyutils.identity_func.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.pyutils.identity_func.identity_func": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "graphql.pyutils.identity_func.T",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.inspect": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.inspect.InspectEllipsisType"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.inspect.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.ELLIPSIS": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "graphql.pyutils.inspect.InspectEllipsisType": {
  "data": {
   "lineno": 176
  },
  "type": "class"
 },
 "graphql.pyutils.inspect.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "graphql.pyutils.inspect.inspect": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "graphql.pyutils.inspect.inspect_recursive",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.inspect.inspect_recursive": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "bool",
    "bytearray",
    "bytes",
    "callable",
    "complex",
    "dict",
    "float",
    "frozenset",
    "getattr",
    "graphql.pyutils.inspect.max_recursive_depth",
    "graphql.pyutils.inspect.trunc_list",
    "graphql.pyutils.inspect.trunc_str",
    "inspect.isasyncgen",
    "inspect.isasyncgenfunction",
    "inspect.isclass",
    "inspect.iscoroutine",
    "inspect.iscoroutinefunction",
    "inspect.isfunction",
    "inspect.isgenerator",
    "inspect.isgeneratorfunction",
    "inspect.ismethod",
    "inspect_method",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "repr",
    "set",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.inspect.isasyncgen": {
  "data": {
   "shadows": "inspect.isasyncgen"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.isasyncgenfunction": {
  "data": {
   "shadows": "inspect.isasyncgenfunction"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.iscoroutine": {
  "data": {
   "shadows": "inspect.iscoroutine"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.iscoroutinefunction": {
  "data": {
   "shadows": "inspect.iscoroutinefunction"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "graphql.pyutils.inspect.max_list_size": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "graphql.pyutils.inspect.max_recursive_depth": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "graphql.pyutils.inspect.max_str_size": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graphql.pyutils.inspect.trunc_list": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "graphql.pyutils.inspect.max_list_size",
    "len",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.inspect.trunc_str": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "graphql.pyutils.inspect.max_str_size",
    "len",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.is_awaitable": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.is_awaitable.inspect"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.is_awaitable.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.is_awaitable.CO_ITERABLE_COROUTINE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.pyutils.is_awaitable.CoroutineType": {
  "data": {
   "shadows": "types.CoroutineType"
  },
  "type": "import"
 },
 "graphql.pyutils.is_awaitable.GeneratorType": {
  "data": {
   "shadows": "types.GeneratorType"
  },
  "type": "import"
 },
 "graphql.pyutils.is_awaitable.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.pyutils.is_awaitable.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "graphql.pyutils.is_awaitable.is_awaitable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "graphql.pyutils.is_awaitable.CO_ITERABLE_COROUTINE",
    "hasattr",
    "isinstance",
    "types.CoroutineType",
    "types.GeneratorType",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.is_collection": {
  "data": {
   "symbols_in_volume": [
    "isinstance",
    "typing.Any",
    "typing.ByteString",
    "typing.Collection",
    "typing.Mapping",
    "typing.Text",
    "typing.ValuesView"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.is_collection.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.ByteString": {
  "data": {
   "shadows": "typing.ByteString"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.ValuesView": {
  "data": {
   "shadows": "typing.ValuesView"
  },
  "type": "import"
 },
 "graphql.pyutils.is_collection.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.is_collection.collection_type": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.pyutils.is_collection.is_collection": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bool",
    "graphql.pyutils.is_collection.collection_type",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.is_finite": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.is_finite.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.is_finite.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "graphql.pyutils.is_finite.is_finite": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "math.isfinite",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.is_finite.isfinite": {
  "data": {
   "shadows": "math.isfinite"
  },
  "type": "import"
 },
 "graphql.pyutils.is_integer": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.is_integer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.is_integer.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "graphql.pyutils.is_integer.is_integer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "math.isfinite",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.is_integer.isfinite": {
  "data": {
   "shadows": "math.isfinite"
  },
  "type": "import"
 },
 "graphql.pyutils.path": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.path.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.pyutils.path.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.pyutils.path.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.pyutils.path.Path": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.path.Path.add_key": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "graphql.pyutils.path.Path",
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.path.Path.as_list": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "append",
    "graphql.pyutils.path.Path",
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.path.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.pyutils.path.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.print_path_list": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.print_path_list.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.pyutils.print_path_list.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.pyutils.print_path_list.print_path_list": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "typing.Collection",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.suggestion_list": {
  "data": {},
  "type": "module"
 },
 "graphql.pyutils.suggestion_list.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.pyutils.suggestion_list.LexicalDistance": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.suggestion_list.LexicalDistance.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.suggestion_list.LexicalDistance.measure": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "map",
    "min",
    "ord",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.suggestion_list.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.pyutils.suggestion_list.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.pyutils.suggestion_list.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.pyutils.suggestion_list.suggestion_list": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "graphql.pyutils.suggestion_list.LexicalDistance",
    "int",
    "len",
    "sorted",
    "str",
    "typing.Collection",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.undefined": {
  "data": {
   "symbols_in_volume": [
    "graphql.pyutils.undefined.Undefined",
    "graphql.pyutils.undefined.UndefinedType"
   ]
  },
  "type": "module"
 },
 "graphql.pyutils.undefined.Undefined": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "graphql.pyutils.undefined.UndefinedType": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "graphql.pyutils.undefined.UndefinedType.__bool__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "graphql.pyutils.undefined.UndefinedType.__eq__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "graphql.pyutils.undefined.UndefinedType.__hash__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graphql.pyutils.undefined.UndefinedType",
    "hash"
   ]
  },
  "type": "function"
 },
 "graphql.pyutils.undefined.UndefinedType.__ne__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "graphql.pyutils.undefined.UndefinedType.__repr__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "graphql.pyutils.undefined.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "graphql.subscription": {
  "data": {},
  "type": "module"
 },
 "graphql.subscription.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.subscription.map_async_iterator": {
  "data": {},
  "type": "module"
 },
 "graphql.subscription.map_async_iterator.AsyncIterable": {
  "data": {
   "shadows": "typing.AsyncIterable"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.Event": {
  "data": {
   "shadows": "asyncio.Event"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.FIRST_COMPLETED": {
  "data": {
   "shadows": "concurrent.futures.FIRST_COMPLETED"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.Future": {
  "data": {
   "shadows": "asyncio.Future"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.MapAsyncIterator": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "GeneratorExit",
    "RuntimeError",
    "StopAsyncIteration",
    "aclose",
    "asyncio.Future",
    "asyncio.ensure_future",
    "asyncio.wait",
    "athrow",
    "concurrent.futures.FIRST_COMPLETED",
    "getattr",
    "inspect.isasyncgen",
    "inspect.isawaitable",
    "isinstance",
    "type_",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "graphql.subscription.map_async_iterator.MapAsyncIterator.__aiter__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "graphql.subscription.map_async_iterator.MapAsyncIterator.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "asyncio.Event",
    "typing.AsyncIterable",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.subscription.map_async_iterator.MapAsyncIterator.is_closed": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "graphql.subscription.map_async_iterator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.subscription.map_async_iterator.ensure_future": {
  "data": {
   "shadows": "asyncio.ensure_future"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.isasyncgen": {
  "data": {
   "shadows": "inspect.isasyncgen"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.isawaitable": {
  "data": {
   "shadows": "inspect.isawaitable"
  },
  "type": "import"
 },
 "graphql.subscription.map_async_iterator.wait": {
  "data": {
   "shadows": "asyncio.wait"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ExecutionResult",
    "GraphQLError",
    "MapAsyncIterator",
    "Path",
    "TypeError",
    "assert_valid_execution_arguments",
    "create_source_event_stream",
    "execute",
    "get_field_def",
    "get_operation_root_type",
    "graphql.subscription.subscribe.context",
    "graphql.subscription.subscribe.event_stream",
    "graphql.subscription.subscribe.field_def",
    "graphql.subscription.subscribe.field_name",
    "graphql.subscription.subscribe.field_node",
    "graphql.subscription.subscribe.field_nodes",
    "graphql.subscription.subscribe.fields",
    "graphql.subscription.subscribe.info",
    "graphql.subscription.subscribe.path",
    "graphql.subscription.subscribe.resolve_fn",
    "graphql.subscription.subscribe.response_name",
    "graphql.subscription.subscribe.response_names",
    "graphql.subscription.subscribe.result",
    "graphql.subscription.subscribe.result_or_stream",
    "graphql.subscription.subscribe.type_",
    "inspect",
    "inspect.isawaitable",
    "isinstance",
    "list",
    "located_error",
    "set",
    "str",
    "typing.Any",
    "typing.AsyncIterable",
    "typing.AsyncIterator",
    "typing.Awaitable",
    "typing.Dict",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "module"
 },
 "graphql.subscription.subscribe.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.AsyncIterable": {
  "data": {
   "shadows": "typing.AsyncIterable"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.AsyncIterator": {
  "data": {
   "shadows": "typing.AsyncIterator"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.Awaitable": {
  "data": {
   "shadows": "typing.Awaitable"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.context": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.event_stream": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.field_def": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.field_name": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.field_node": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.field_nodes": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.fields": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.info": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.isawaitable": {
  "data": {
   "shadows": "inspect.isawaitable"
  },
  "type": "import"
 },
 "graphql.subscription.subscribe.path": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.resolve_fn": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.response_name": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.response_names": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.result": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.result_or_stream": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "graphql.subscription.subscribe.type_": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "graphql.type": {
  "data": {},
  "type": "module"
 },
 "graphql.type.ResponsePath": {
  "data": {
   "shadows": "Path"
  },
  "type": "import"
 },
 "graphql.type.__all__": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "graphql.type.directives": {
  "data": {
   "symbols_in_volume": [
    "FrozenList",
    "GraphQLArgument",
    "GraphQLNonNull",
    "graphql.type.directives.DEFAULT_DEPRECATION_REASON",
    "graphql.type.directives.GraphQLDeprecatedDirective",
    "graphql.type.directives.GraphQLDirective",
    "graphql.type.directives.GraphQLIncludeDirective",
    "graphql.type.directives.GraphQLSkipDirective"
   ]
  },
  "type": "module"
 },
 "graphql.type.directives.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.type.directives.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.type.directives.DEFAULT_DEPRECATION_REASON": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "graphql.type.directives.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.type.directives.GraphQLDeprecatedDirective": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "graphql.type.directives.GraphQLDirective": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.type.directives.GraphQLDirective.__eq__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "graphql.type.directives.GraphQLDirective",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.type.directives.GraphQLDirective.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "GraphQLArgument",
    "KeyError",
    "TypeError",
    "all",
    "bool",
    "dict",
    "is_description",
    "is_input_type",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Collection",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.directives.GraphQLDirective.__repr__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "graphql.type.directives.GraphQLDirective.__str__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "graphql.type.directives.GraphQLDirective.to_kwargs": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dict",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.type.directives.GraphQLIncludeDirective": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "graphql.type.directives.GraphQLSkipDirective": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "graphql.type.directives.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.type.directives.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.type.directives.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.type.directives.assert_directive": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "TypeError",
    "graphql.type.directives.GraphQLDirective",
    "graphql.type.directives.is_directive",
    "inspect",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.directives.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.type.directives.is_directive": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "graphql.type.directives.GraphQLDirective",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.directives.is_specified_directive": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "any",
    "bool",
    "graphql.type.directives.GraphQLDirective"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection": {
  "data": {
   "symbols_in_volume": [
    "FrozenDict",
    "GraphQLArgument",
    "GraphQLEnumType",
    "GraphQLEnumValue",
    "GraphQLField",
    "GraphQLList",
    "GraphQLNonNull",
    "GraphQLObjectType",
    "graphql.type.introspection.TypeKind",
    "graphql.type.introspection.introspection_types"
   ]
  },
  "type": "module"
 },
 "graphql.type.introspection.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "graphql.type.introspection.InputValueFieldResolvers": {
  "data": {
   "lineno": 374
  },
  "type": "class"
 },
 "graphql.type.introspection.InputValueFieldResolvers.default_value": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ast_from_value",
    "print_ast",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.InputValueFieldResolvers.description": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.InputValueFieldResolvers.name": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.InputValueFieldResolvers.type": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.SchemaMetaFieldDef": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "graphql.type.introspection.TypeFieldResolvers": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "graphql.type.introspection.TypeFieldResolvers.description": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.enum_values": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "is_enum_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.fields": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "is_interface_type",
    "is_object_type",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.input_fields": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "is_input_object_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.interfaces": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "is_interface_type",
    "is_object_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.kind": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "inspect",
    "is_enum_type",
    "is_input_object_type",
    "is_interface_type",
    "is_list_type",
    "is_non_null_type",
    "is_object_type",
    "is_scalar_type",
    "is_union_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.name": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.of_type": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeFieldResolvers.possible_types": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "is_abstract_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "graphql.type.introspection.TypeKind": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphql.type.introspection.TypeMetaFieldDef": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "graphql.type.introspection.TypeNameMetaFieldDef": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "graphql.type.introspection.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "graphql.type.introspection.introspection_types": {
  "data": {
   "lineno": 502
  },
  "type": "constant"
 },
 "graphql.type.introspection.is_introspection_type": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "bool",
    "graphql.type.introspection.introspection_types"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars": {
  "data": {
   "symbols_in_volume": [
    "FrozenDict",
    "GraphQLScalarType",
    "graphql.type.scalars.GraphQLBoolean",
    "graphql.type.scalars.GraphQLFloat",
    "graphql.type.scalars.GraphQLID",
    "graphql.type.scalars.GraphQLInt",
    "graphql.type.scalars.GraphQLString",
    "graphql.type.scalars.coerce_boolean",
    "graphql.type.scalars.coerce_float",
    "graphql.type.scalars.coerce_id",
    "graphql.type.scalars.coerce_int",
    "graphql.type.scalars.coerce_string",
    "graphql.type.scalars.parse_boolean_literal",
    "graphql.type.scalars.parse_float_literal",
    "graphql.type.scalars.parse_id_literal",
    "graphql.type.scalars.parse_int_literal",
    "graphql.type.scalars.parse_string_literal",
    "graphql.type.scalars.serialize_boolean",
    "graphql.type.scalars.serialize_float",
    "graphql.type.scalars.serialize_id",
    "graphql.type.scalars.serialize_int",
    "graphql.type.scalars.serialize_string",
    "str"
   ]
  },
  "type": "module"
 },
 "graphql.type.scalars.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.type.scalars.GraphQLBoolean": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "graphql.type.scalars.GraphQLFloat": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "graphql.type.scalars.GraphQLID": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "graphql.type.scalars.GraphQLInt": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "graphql.type.scalars.GraphQLString": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "graphql.type.scalars.MAX_INT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "graphql.type.scalars.MIN_INT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "graphql.type.scalars.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "graphql.type.scalars.coerce_boolean": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "GraphQLError",
    "bool",
    "inspect",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.coerce_float": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "GraphQLError",
    "float",
    "inspect",
    "is_finite",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.coerce_id": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "GraphQLError",
    "inspect",
    "is_integer",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.coerce_int": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.type.scalars.MAX_INT",
    "graphql.type.scalars.MIN_INT",
    "inspect",
    "int",
    "is_integer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.coerce_string": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "GraphQLError",
    "inspect",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.is_specified_scalar_type": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.isfinite": {
  "data": {
   "shadows": "math.isfinite"
  },
  "type": "import"
 },
 "graphql.type.scalars.parse_boolean_literal": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "GraphQLError",
    "bool",
    "isinstance",
    "print_ast"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.parse_float_literal": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "GraphQLError",
    "float",
    "isinstance",
    "print_ast"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.parse_id_literal": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "GraphQLError",
    "isinstance",
    "print_ast",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.parse_int_literal": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.type.scalars.MAX_INT",
    "graphql.type.scalars.MIN_INT",
    "int",
    "isinstance",
    "print_ast"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.parse_string_literal": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "GraphQLError",
    "isinstance",
    "print_ast",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.serialize_boolean": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "GraphQLError",
    "bool",
    "inspect",
    "is_finite",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.serialize_float": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "GraphQLError",
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "inspect",
    "isinstance",
    "math.isfinite",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.serialize_id": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "GraphQLError",
    "inspect",
    "int",
    "is_integer",
    "isinstance",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.serialize_int": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "GraphQLError",
    "OverflowError",
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "graphql.type.scalars.MAX_INT",
    "graphql.type.scalars.MIN_INT",
    "inspect",
    "int",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.scalars.serialize_string": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "GraphQLError",
    "bool",
    "inspect",
    "is_finite",
    "isinstance",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "graphql.type.schema.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.type.schema.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.type.schema.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.type.schema.GraphQLSchema": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "graphql.type.schema.InterfaceImplementations",
    "graphql.type.schema.TypeMap",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "graphql.type.schema.GraphQLSchema.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "FrozenList",
    "TypeError",
    "all",
    "bool",
    "collect_referenced_types",
    "dict",
    "getattr",
    "graphql.type.schema.InterfaceImplementations",
    "graphql.type.schema.TypeMap",
    "graphql.type.schema.TypeSet",
    "is_collection",
    "is_description",
    "is_directive",
    "is_interface_type",
    "is_object_type",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Collection",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.get_directive": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.get_implementations": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "graphql.type.schema.InterfaceImplementations"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.get_possible_types": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "is_union_type",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.get_type": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.is_possible_type": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.is_sub_type": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "add",
    "bool",
    "is_union_type",
    "set",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.to_kwargs": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "FrozenList",
    "dict",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.GraphQLSchema.validation_errors": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.InterfaceImplementations": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "graphql.type.schema.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.type.schema.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.type.schema.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.type.schema.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.type.schema.TypeMap": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "graphql.type.schema.TypeSet": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "graphql.type.schema.TypeSet.collect_referenced_types": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "collect_referenced_types",
    "get_named_type",
    "is_input_object_type",
    "is_interface_type",
    "is_object_type",
    "is_union_type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.TypeSet.with_initial_types": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "classmethod",
    "graphql.type.schema.TypeSet",
    "super",
    "typing.Collection",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.type.schema.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "graphql.type.schema.assert_schema": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "TypeError",
    "graphql.type.schema.GraphQLSchema",
    "graphql.type.schema.is_schema",
    "inspect",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.type.schema.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.type.schema.is_schema": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "bool",
    "graphql.type.schema.GraphQLSchema",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.utilities": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.__all__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "graphql.utilities.assert_valid_name": {
  "data": {
   "symbols_in_volume": [
    "graphql.utilities.assert_valid_name.re"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.assert_valid_name.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.assert_valid_name.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.utilities.assert_valid_name.assert_valid_name": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graphql.utilities.assert_valid_name.is_valid_name_error",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.assert_valid_name.is_valid_name_error": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "GraphQLError",
    "TypeError",
    "graphql.utilities.assert_valid_name.re_name",
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.assert_valid_name.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.utilities.assert_valid_name.re_name": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.utilities.ast_from_value": {
  "data": {
   "symbols_in_volume": [
    "graphql.utilities.ast_from_value.re"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.ast_from_value.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "graphql.utilities.ast_from_value._re_integer_string": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "graphql.utilities.ast_from_value.ast_from_value": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "BooleanValueNode",
    "EnumValueNode",
    "FloatValueNode",
    "FrozenList",
    "IntValueNode",
    "ListValueNode",
    "NameNode",
    "NullValueNode",
    "ObjectFieldNode",
    "ObjectValueNode",
    "StringValueNode",
    "TypeError",
    "bool",
    "filter",
    "float",
    "graphql.utilities.ast_from_value._re_integer_string",
    "inspect",
    "int",
    "is_enum_type",
    "is_input_object_type",
    "is_leaf_type",
    "is_list_type",
    "is_non_null_type",
    "isinstance",
    "math.isfinite",
    "str",
    "typing.Any",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.ast_from_value.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.isfinite": {
  "data": {
   "shadows": "math.isfinite"
  },
  "type": "import"
 },
 "graphql.utilities.ast_from_value.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.utilities.build_ast_schema": {
  "data": {
   "symbols_in_volume": [
    "GraphQLSchema"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.build_ast_schema.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.utilities.build_ast_schema.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "graphql.utilities.build_ast_schema.build_ast_schema": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "GraphQLSchema",
    "TypeError",
    "any",
    "assert_valid_sdl",
    "bool",
    "extend_schema_impl",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_ast_schema.build_schema": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "GraphQLSchema",
    "graphql.utilities.build_ast_schema.build_ast_schema",
    "parse",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_ast_schema.empty_schema_config": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "graphql.utilities.build_client_schema": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.build_client_schema.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.utilities.build_client_schema.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.utilities.build_client_schema.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.build_client_schema.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.build_client_schema.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "graphql.utilities.build_client_schema.build_client_schema": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "GraphQLSchema",
    "TypeError",
    "bool",
    "build_directive",
    "build_type",
    "dict",
    "get_object_type",
    "inspect",
    "isinstance",
    "itertools.chain",
    "list",
    "str",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_argument": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "GraphQLArgument",
    "TypeError",
    "get_type",
    "inspect",
    "is_input_type",
    "parse_value",
    "typing.Dict",
    "typing.cast",
    "value_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_argument_def_map": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "build_argument",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_directive": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "GraphQLDirective",
    "TypeError",
    "build_argument_def_map",
    "inspect",
    "list",
    "typing.Collection",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_enum_def": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "GraphQLEnumType",
    "GraphQLEnumValue",
    "TypeError",
    "inspect",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_field": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "GraphQLField",
    "TypeError",
    "build_argument_def_map",
    "get_type",
    "inspect",
    "is_output_type",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_field_def_map": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "TypeError",
    "build_field",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_implementations_list": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "get_interface_type",
    "inspect",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_input_object_def": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "GraphQLInputObjectType",
    "TypeError",
    "build_input_value_def_map",
    "inspect",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_input_value": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "GraphQLInputField",
    "TypeError",
    "get_type",
    "inspect",
    "is_input_type",
    "parse_value",
    "typing.Dict",
    "typing.cast",
    "value_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_input_value_def_map": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "build_input_value",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_interface_def": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "GraphQLInterfaceType",
    "build_field_def_map",
    "build_implementations_list",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_object_def": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "GraphQLObjectType",
    "build_field_def_map",
    "build_implementations_list",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_scalar_def": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "GraphQLScalarType",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_type": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "builder",
    "inspect",
    "str",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.build_union_def": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "GraphQLUnionType",
    "TypeError",
    "get_object_type",
    "inspect",
    "typing.Dict",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.get_interface_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assert_interface_type",
    "get_type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.get_named_type": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "inspect",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.get_object_type": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "assert_object_type",
    "get_type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.build_client_schema.get_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "GraphQLList",
    "GraphQLNonNull",
    "TypeError",
    "assert_nullable_type",
    "get_named_type",
    "get_type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.build_client_schema.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.build_client_schema.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value": {
  "data": {
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.coerce_input_value.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.OnErrorCB": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "graphql.utilities.coerce_input_value.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "graphql.utilities.coerce_input_value.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.coerce_input_value.coerce_input_value": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "GraphQLError",
    "Path",
    "TypeError",
    "append_item",
    "dict",
    "did_you_mean",
    "enumerate",
    "graphql.utilities.coerce_input_value.OnErrorCB",
    "graphql.utilities.coerce_input_value.default_on_error",
    "inspect",
    "is_input_object_type",
    "is_leaf_type",
    "is_list_type",
    "is_non_null_type",
    "isinstance",
    "on_error",
    "str",
    "suggestion_list",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.coerce_input_value.default_on_error": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "inspect",
    "int",
    "print_path_list",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.concat_ast": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.concat_ast.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.utilities.concat_ast.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.utilities.concat_ast.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "graphql.utilities.concat_ast.concat_ast": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "DocumentNode",
    "itertools.chain.from_iterable",
    "list",
    "typing.Collection"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.find_deprecated_usages": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeInfo",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages.enter_enum_value": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "GraphQLError",
    "get_named_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages.enter_field": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.find_deprecated_usages.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.find_deprecated_usages.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.utilities.find_deprecated_usages.find_deprecated_usages": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeInfo",
    "TypeInfoVisitor",
    "graphql.utilities.find_deprecated_usages.FindDeprecatedUsages",
    "typing.List",
    "visit"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.get_introspection_query": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.get_introspection_query.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graphql.utilities.get_introspection_query.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "graphql.utilities.get_introspection_query.get_introspection_query": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.get_operation_ast": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.get_operation_ast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.get_operation_ast.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.utilities.get_operation_ast.get_operation_ast": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.get_operation_root_type": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.get_operation_root_type.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.utilities.get_operation_root_type.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "graphql.utilities.get_operation_root_type.get_operation_root_type": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "GraphQLError",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.introspection_from_schema": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.introspection_from_schema.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.introspection_from_schema.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.introspection_from_schema.IntrospectionSchema": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "graphql.utilities.introspection_from_schema.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphql.utilities.introspection_from_schema.introspection_from_schema": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "GraphQLError",
    "RuntimeError",
    "bool",
    "execute",
    "get_introspection_query",
    "graphql.utilities.introspection_from_schema.IntrospectionSchema",
    "isinstance",
    "parse"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.lexicographic_sort_schema.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.lexicographic_sort_schema.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.lexicographic_sort_schema.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "graphql.utilities.lexicographic_sort_schema.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "graphql.utilities.lexicographic_sort_schema.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "GraphQLSchema",
    "replace_maybe_type",
    "sort_directive",
    "sort_named_type",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.replace_maybe_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "replace_named_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.replace_named_type": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.replace_type": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "GraphQLList",
    "GraphQLNonNull",
    "is_list_type",
    "is_non_null_type",
    "replace_named_type",
    "replace_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_args": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "GraphQLArgument",
    "replace_type",
    "sorted"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_directive": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "GraphQLDirective",
    "sort_args",
    "sorted"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_fields": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "GraphQLField",
    "replace_type",
    "sort_args",
    "sorted"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_input_fields": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "GraphQLInputField",
    "replace_type",
    "sorted"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_named_type": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "GraphQLEnumType",
    "GraphQLEnumValue",
    "GraphQLInputObjectType",
    "GraphQLInterfaceType",
    "GraphQLObjectType",
    "GraphQLUnionType",
    "TypeError",
    "inspect",
    "is_enum_type",
    "is_input_object_type",
    "is_interface_type",
    "is_introspection_type",
    "is_object_type",
    "is_scalar_type",
    "is_union_type",
    "sort_fields",
    "sort_input_fields",
    "sort_types",
    "sorted",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.lexicographic_sort_schema.sort_types": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "replace_named_type",
    "sorted",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.lexicographic_sort_schema.sort_by_name_key": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.strip_ignored_characters": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.strip_ignored_characters.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.utilities.strip_ignored_characters.dedent_block_string": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dedent_block_string_value",
    "get_block_string_indentation",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.strip_ignored_characters.strip_ignored_characters": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Lexer",
    "Source",
    "TypeError",
    "graphql.utilities.strip_ignored_characters.dedent_block_string",
    "inspect",
    "is_punctuator_token_kind",
    "isinstance",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_comparators": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.type_comparators.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "graphql.utilities.type_comparators.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.type_comparators.do_types_overlap": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "any",
    "is_abstract_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_comparators.is_equal_type": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "is_list_type",
    "is_non_null_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_comparators.is_type_sub_type_of": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "is_abstract_type",
    "is_interface_type",
    "is_list_type",
    "is_non_null_type",
    "is_object_type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_from_ast": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.type_from_ast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.type_from_ast.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "graphql.utilities.type_from_ast.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "graphql.utilities.type_from_ast.type_from_ast": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "GraphQLList",
    "GraphQLNonNull",
    "TypeError",
    "inspect",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info": {
  "data": {
   "symbols_in_volume": [
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.type_info.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.GetFieldDefType": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "graphql.utilities.type_info.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.TypeInfo": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "graphql.utilities.type_info.TypeInfo.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "graphql.utilities.type_info.GetFieldDefType",
    "is_composite_type",
    "is_input_type",
    "is_output_type",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr",
    "method"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_argument": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "is_input_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_directive": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_enum_value": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "get_named_type",
    "is_enum_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_field": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "is_output_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_inline_fragment": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "get_named_type",
    "is_output_type",
    "type_from_ast",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_list_value": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "get_nullable_type",
    "is_input_type",
    "is_list_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_object_field": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "get_named_type",
    "is_input_object_type",
    "is_input_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_operation_definition": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "getattr",
    "is_object_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_selection_set": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "get_named_type",
    "is_composite_type"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.enter_variable_definition": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "is_input_type",
    "type_from_ast",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_argument": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_default_value": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_directive": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_enum_value": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_field_def": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_input_type": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_parent_input_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_parent_type": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.get_type": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "getattr",
    "method"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_argument": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_directive": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_enum_value": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_field": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_list_value": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_operation_definition": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_selection_set": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfo.leave_variable_definition": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfoVisitor": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "graphql.utilities.type_info.TypeInfoVisitor.__init__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfoVisitor.enter": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "fn",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.TypeInfoVisitor.leave": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.type_info.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "graphql.utilities.type_info.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.type_info.get_field_def": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "is_composite_type",
    "is_interface_type",
    "is_object_type",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast": {
  "data": {},
  "type": "module"
 },
 "graphql.utilities.value_from_ast.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "graphql.utilities.value_from_ast.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast.is_missing_variable": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast.value_from_ast": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "append_value",
    "graphql.utilities.value_from_ast.is_missing_variable",
    "inspect",
    "is_input_object_type",
    "is_leaf_type",
    "is_list_type",
    "is_non_null_type",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped": {
  "data": {
   "symbols_in_volume": [
    "graphql.utilities.value_from_ast_untyped.value_from_float",
    "graphql.utilities.value_from_ast_untyped.value_from_int",
    "graphql.utilities.value_from_ast_untyped.value_from_list",
    "graphql.utilities.value_from_ast_untyped.value_from_null",
    "graphql.utilities.value_from_ast_untyped.value_from_object",
    "graphql.utilities.value_from_ast_untyped.value_from_string",
    "graphql.utilities.value_from_ast_untyped.value_from_variable"
   ]
  },
  "type": "module"
 },
 "graphql.utilities.value_from_ast_untyped.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast_untyped.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast_untyped.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast_untyped.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.utilities.value_from_ast_untyped._value_from_kind_functions": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "graphql.utilities.value_from_ast_untyped.nan": {
  "data": {
   "shadows": "math.nan"
  },
  "type": "import"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_ast_untyped": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "inspect",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_float": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "math.nan"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_int": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "math.nan"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_list": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "graphql.utilities.value_from_ast_untyped.value_from_ast_untyped"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_null": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_object": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "graphql.utilities.value_from_ast_untyped.value_from_ast_untyped"
   ]
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_string": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "graphql.utilities.value_from_ast_untyped.value_from_variable": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "graphql.validation": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.__all__": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "graphql.validation.rules": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.ASTValidationRule": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "graphql.validation.rules.ASTValidationRule.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "graphql.validation.rules.ASTValidationRule.report_error": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "graphql.validation.rules.SDLValidationRule": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "graphql.validation.rules.ASTValidationRule"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.SDLValidationRule.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.ValidationRule": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "graphql.validation.rules.ASTValidationRule"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.ValidationRule.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "graphql.validation.rules.executable_definitions": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.executable_definitions.ExecutableDefinitionsRule": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "graphql.validation.rules.executable_definitions.ExecutableDefinitionsRule.enter_document": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GraphQLError",
    "isinstance",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.executable_definitions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.executable_definitions.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "graphql.validation.rules.executable_definitions.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.fields_on_correct_type.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.FieldsOnCorrectTypeRule": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "graphql.validation.rules.fields_on_correct_type.FieldsOnCorrectTypeRule.enter_field": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "GraphQLError",
    "did_you_mean",
    "graphql.validation.rules.fields_on_correct_type.get_suggested_field_names",
    "graphql.validation.rules.fields_on_correct_type.get_suggested_type_names"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fields_on_correct_type.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "graphql.validation.rules.fields_on_correct_type.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.cmp_to_key": {
  "data": {
   "shadows": "functools.cmp_to_key"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphql.validation.rules.fields_on_correct_type.get_suggested_field_names": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "is_interface_type",
    "is_object_type",
    "list",
    "str",
    "suggestion_list",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fields_on_correct_type.get_suggested_type_names": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "collections.defaultdict",
    "functools.cmp_to_key",
    "int",
    "is_abstract_type",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fields_on_correct_type.get_suggested_type_names.cmp": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "int",
    "is_interface_type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fragments_on_composite_types": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.fragments_on_composite_types.FragmentsOnCompositeTypesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.fragments_on_composite_types.FragmentsOnCompositeTypesRule.enter_fragment_definition": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "GraphQLError",
    "is_composite_type",
    "print_ast",
    "type_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fragments_on_composite_types.FragmentsOnCompositeTypesRule.enter_inline_fragment": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "GraphQLError",
    "is_composite_type",
    "print_ast",
    "type_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.fragments_on_composite_types.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_argument_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.known_argument_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesOnDirectivesRule": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesOnDirectivesRule.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesOnDirectivesRule.enter_directive": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "GraphQLError",
    "did_you_mean",
    "suggestion_list"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesRule": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "graphql.validation.rules.known_argument_names.KnownArgumentNamesOnDirectivesRule"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesRule.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_argument_names.KnownArgumentNamesRule.enter_argument": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "GraphQLError",
    "did_you_mean",
    "list",
    "suggestion_list"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_argument_names.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_argument_names.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_argument_names.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_argument_names.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_directives": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.known_directives.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_directives.KnownDirectivesRule": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.known_directives.KnownDirectivesRule.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_directives.KnownDirectivesRule.enter_directive": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.validation.rules.known_directives.get_directive_location_for_ast_path"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_directives.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_directives.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_directives.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_directives._directive_location": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_directives._operation_location": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_directives.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_directives.get_directive_location_for_ast_path": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "graphql.validation.rules.known_directives._directive_location",
    "graphql.validation.rules.known_directives._operation_location",
    "isinstance",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_fragment_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.known_fragment_names.KnownFragmentNamesRule": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "graphql.validation.rules.known_fragment_names.KnownFragmentNamesRule.enter_fragment_spread": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_fragment_names.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_type_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.known_type_names.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_type_names.KnownTypeNamesRule": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "graphql.validation.rules.known_type_names.KnownTypeNamesRule.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "is_type_definition_node",
    "list",
    "set",
    "super",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_type_names.KnownTypeNamesRule.enter_named_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "GraphQLError",
    "IndexError",
    "did_you_mean",
    "graphql.validation.rules.known_type_names.is_sdl_node",
    "list",
    "suggestion_list",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.known_type_names.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_type_names.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_type_names.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "graphql.validation.rules.known_type_names.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.known_type_names.is_sdl_node": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "is_type_system_definition_node",
    "is_type_system_extension_node",
    "isinstance",
    "list",
    "typing.Collection",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_anonymous_operation": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperationRule": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperationRule.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperationRule.enter_document": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "isinstance",
    "sum"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperationRule.enter_operation_definition": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_anonymous_operation.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.validation.rules.lone_schema_definition": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.lone_schema_definition.LoneSchemaDefinitionRule": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "graphql.validation.rules.lone_schema_definition.LoneSchemaDefinitionRule.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_schema_definition.LoneSchemaDefinitionRule.enter_schema_definition": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.lone_schema_definition.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.validation.rules.no_fragment_cycles": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.no_fragment_cycles.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_fragment_cycles.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_fragment_cycles.NoFragmentCyclesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.no_fragment_cycles.NoFragmentCyclesRule.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_fragment_cycles.NoFragmentCyclesRule.detect_cycle_recursive": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "GraphQLError",
    "get_fragment",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_fragment_cycles.NoFragmentCyclesRule.enter_fragment_definition": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphql.validation.rules.no_fragment_cycles.NoFragmentCyclesRule.enter_operation_definition": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "graphql.validation.rules.no_fragment_cycles.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_fragment_cycles.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.no_undefined_variables": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.no_undefined_variables.NoUndefinedVariablesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.no_undefined_variables.NoUndefinedVariablesRule.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_undefined_variables.NoUndefinedVariablesRule.enter_operation_definition": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "graphql.validation.rules.no_undefined_variables.NoUndefinedVariablesRule.enter_variable_definition": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "graphql.validation.rules.no_undefined_variables.NoUndefinedVariablesRule.leave_operation_definition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_undefined_variables.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_undefined_variables.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.no_unused_fragments": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.no_unused_fragments.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_unused_fragments.NoUnusedFragmentsRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.no_unused_fragments.NoUnusedFragmentsRule.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_fragments.NoUnusedFragmentsRule.enter_fragment_definition": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_fragments.NoUnusedFragmentsRule.enter_operation_definition": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_fragments.NoUnusedFragmentsRule.leave_document": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "GraphQLError",
    "get_fragments",
    "set"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_fragments.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.no_unused_variables": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.no_unused_variables.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_unused_variables.NoUnusedVariablesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.no_unused_variables.NoUnusedVariablesRule.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_variables.NoUnusedVariablesRule.enter_operation_definition": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_variables.NoUnusedVariablesRule.enter_variable_definition": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_variables.NoUnusedVariablesRule.leave_operation_definition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GraphQLError",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.no_unused_variables.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.validation.rules.no_unused_variables.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.possible_fragment_spreads": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.possible_fragment_spreads.PossibleFragmentSpreadsRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.possible_fragment_spreads.PossibleFragmentSpreadsRule.enter_fragment_spread": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "GraphQLError",
    "do_types_overlap"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_fragment_spreads.PossibleFragmentSpreadsRule.enter_inline_fragment": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "GraphQLError",
    "do_types_overlap",
    "is_composite_type"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_fragment_spreads.PossibleFragmentSpreadsRule.get_fragment_type": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "is_composite_type",
    "str",
    "type_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_fragment_spreads.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.possible_type_extensions": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "graphql.validation.rules.possible_type_extensions.re"
   ]
  },
  "type": "module"
 },
 "graphql.validation.rules.possible_type_extensions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.validation.rules.possible_type_extensions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.validation.rules.possible_type_extensions.PossibleTypeExtensionsRule": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "graphql.validation.rules.possible_type_extensions.PossibleTypeExtensionsRule.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_type_extensions.PossibleTypeExtensionsRule.check_extension": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "GraphQLError",
    "did_you_mean",
    "graphql.validation.rules.possible_type_extensions.def_kind_to_ext_kind",
    "graphql.validation.rules.possible_type_extensions.extension_kind_to_type_name",
    "graphql.validation.rules.possible_type_extensions.type_to_ext_kind",
    "list",
    "str",
    "suggestion_list",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_type_extensions.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "graphql.validation.rules.possible_type_extensions._type_names_for_extension_kinds": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "graphql.validation.rules.possible_type_extensions.def_kind_to_ext_kind": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "graphql.validation.rules.possible_type_extensions.extension_kind_to_type_name": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "graphql.validation.rules.possible_type_extensions._type_names_for_extension_kinds",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.possible_type_extensions.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "graphql.validation.rules.possible_type_extensions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.validation.rules.possible_type_extensions.type_to_ext_kind": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "inspect",
    "is_enum_type",
    "is_input_object_type",
    "is_interface_type",
    "is_object_type",
    "is_scalar_type",
    "is_union_type",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.provided_required_arguments": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.provided_required_arguments.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.provided_required_arguments.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsOnDirectivesRule": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsOnDirectivesRule.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "filter",
    "is_required_argument",
    "isinstance",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsOnDirectivesRule.leave_directive": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "FrozenList",
    "GraphQLError",
    "is_type",
    "print_ast",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsRule": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsOnDirectivesRule"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsRule.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.provided_required_arguments.ProvidedRequiredArgumentsRule.leave_field": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "FrozenList",
    "GraphQLError",
    "is_required_argument"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.provided_required_arguments.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.provided_required_arguments.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "graphql.validation.rules.provided_required_arguments.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.provided_required_arguments.is_required_argument_node": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.scalar_leafs": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.scalar_leafs.ScalarLeafsRule": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "graphql.validation.rules.scalar_leafs.ScalarLeafsRule.enter_field": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "GraphQLError",
    "get_named_type",
    "is_leaf_type"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.scalar_leafs.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graphql.validation.rules.single_field_subscriptions": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.single_field_subscriptions.SingleFieldSubscriptionsRule": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "graphql.validation.rules.single_field_subscriptions.SingleFieldSubscriptionsRule.enter_operation_definition": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "GraphQLError",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.single_field_subscriptions.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_argument_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_argument_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_argument_names.UniqueArgumentNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_argument_names.UniqueArgumentNamesRule.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_argument_names.UniqueArgumentNamesRule.enter_argument": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_argument_names.UniqueArgumentNamesRule.enter_directive": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_argument_names.UniqueArgumentNamesRule.enter_field": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_argument_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_directive_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_directive_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_directive_names.UniqueDirectiveNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_directive_names.UniqueDirectiveNamesRule.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_directive_names.UniqueDirectiveNamesRule.enter_directive_definition": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_directive_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_directives_per_location": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_directives_per_location.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_directives_per_location.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_directives_per_location.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_directives_per_location.UniqueDirectivesPerLocationRule": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_directives_per_location.UniqueDirectivesPerLocationRule.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_directives_per_location.UniqueDirectivesPerLocationRule.enter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "GraphQLError",
    "getattr",
    "is_type_definition_node",
    "is_type_extension_node",
    "isinstance",
    "typing.List",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_directives_per_location.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_directives_per_location.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_directives_per_location.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_enum_value_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_enum_value_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_enum_value_names.UniqueEnumValueNamesRule": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_enum_value_names.UniqueEnumValueNamesRule.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_enum_value_names.UniqueEnumValueNamesRule.check_value_uniqueness": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GraphQLError",
    "is_enum_type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_enum_value_names.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_enum_value_names.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_enum_value_names.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_field_definition_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_field_definition_names.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_field_definition_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_field_definition_names.UniqueFieldDefinitionNamesRule": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_field_definition_names.UniqueFieldDefinitionNamesRule.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_field_definition_names.UniqueFieldDefinitionNamesRule.check_field_uniqueness": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.validation.rules.unique_field_definition_names.has_field"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_field_definition_names.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_field_definition_names.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_field_definition_names.has_field": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "is_input_object_type",
    "is_interface_type",
    "is_object_type",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_fragment_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_fragment_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_fragment_names.UniqueFragmentNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_fragment_names.UniqueFragmentNamesRule.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_fragment_names.UniqueFragmentNamesRule.enter_fragment_definition": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_fragment_names.UniqueFragmentNamesRule.enter_operation_definition": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_fragment_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_input_field_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_input_field_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_input_field_names.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNamesRule.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNamesRule.enter_object_field": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNamesRule.enter_object_value": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNamesRule.leave_object_value": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_input_field_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_operation_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_operation_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_operation_names.UniqueOperationNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_operation_names.UniqueOperationNamesRule.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_operation_names.UniqueOperationNamesRule.enter_fragment_definition": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_operation_names.UniqueOperationNamesRule.enter_operation_definition": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_operation_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_operation_types": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_operation_types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_operation_types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_operation_types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_operation_types.UniqueOperationTypesRule": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_operation_types.UniqueOperationTypesRule.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_operation_types.UniqueOperationTypesRule.check_operation_types": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "GraphQLError",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_operation_types.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_type_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_type_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_type_names.UniqueTypeNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_type_names.UniqueTypeNamesRule.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_type_names.UniqueTypeNamesRule.check_type_name": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_type_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.unique_variable_names": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.unique_variable_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.unique_variable_names.UniqueVariableNamesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.unique_variable_names.UniqueVariableNamesRule.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_variable_names.UniqueVariableNamesRule.enter_operation_definition": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_variable_names.UniqueVariableNamesRule.enter_variable_definition": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "GraphQLError"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.unique_variable_names.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.values_of_correct_type": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_boolean_value": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_enum_value": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_float_value": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_int_value": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_list_value": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "get_nullable_type",
    "is_list_type"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_null_value": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "GraphQLError",
    "is_non_null_type",
    "print_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_object_field": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "GraphQLError",
    "did_you_mean",
    "get_named_type",
    "is_input_object_type",
    "list",
    "suggestion_list"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_object_value": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "GraphQLError",
    "get_named_type",
    "is_input_object_type",
    "is_required_input_field"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.enter_string_value": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.ValuesOfCorrectTypeRule.is_valid_value_node": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "GraphQLError",
    "get_named_type",
    "is_leaf_type",
    "print_ast",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.values_of_correct_type.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "graphql.validation.rules.values_of_correct_type.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.rules.variables_are_input_types": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.variables_are_input_types.VariablesAreInputTypesRule": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "graphql.validation.rules.variables_are_input_types.VariablesAreInputTypesRule.enter_variable_definition": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "GraphQLError",
    "is_input_type",
    "print_ast",
    "type_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_are_input_types.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.validation.rules.variables_in_allowed_position": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.rules.variables_in_allowed_position.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.validation.rules.variables_in_allowed_position.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.rules.variables_in_allowed_position.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPositionRule": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPositionRule.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPositionRule.enter_operation_definition": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPositionRule.enter_variable_definition": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPositionRule.leave_operation_definition": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.validation.rules.variables_in_allowed_position.allowed_variable_usage",
    "type_from_ast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_in_allowed_position.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "graphql.validation.rules.variables_in_allowed_position.allowed_variable_usage": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "is_non_null_type",
    "is_type_sub_type_of",
    "isinstance",
    "typing.Any",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.rules.variables_in_allowed_position.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.validation.specified_rules": {
  "data": {
   "symbols_in_volume": [
    "FrozenList",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "graphql.validation.specified_rules.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "graphql.validation.specified_rules.__all__": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "graphql.validation.validate": {
  "data": {},
  "type": "module"
 },
 "graphql.validation.validate.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "graphql.validation.validate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.validate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.validation.validate.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "graphql.validation.validate.ValidationAbortedError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validate.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "graphql.validation.validate.assert_valid_sdl": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "graphql.validation.validate.validate_sdl"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validate.assert_valid_sdl_extension": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "graphql.validation.validate.validate_sdl"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validate.validate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "GraphQLError",
    "ParallelVisitor",
    "TypeError",
    "TypeInfo",
    "TypeInfoVisitor",
    "ValidationContext",
    "all",
    "assert_valid_schema",
    "graphql.validation.validate.ValidationAbortedError",
    "inspect",
    "int",
    "is_collection",
    "isinstance",
    "issubclass",
    "rule",
    "type",
    "typing.Collection",
    "typing.List",
    "typing.Optional",
    "typing.Type",
    "visit"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validate.validate.on_error": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "GraphQLError",
    "graphql.validation.validate.ValidationAbortedError",
    "len"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validate.validate_sdl": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "GraphQLError",
    "ParallelVisitor",
    "SDLValidationContext",
    "rule",
    "typing.Collection",
    "typing.List",
    "typing.Optional",
    "typing.Type",
    "visit"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context": {
  "data": {
   "symbols_in_volume": [
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "graphql.validation.validation_context.ASTValidationContext": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validation_context.ASTValidationContext.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ASTValidationContext.get_fragment": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ASTValidationContext.get_fragment_spreads": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "append_set",
    "append_spread",
    "graphql.validation.validation_context.NodeWithSelectionSet",
    "isinstance",
    "pop_set",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ASTValidationContext.get_recursively_referenced_fragments": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "add_name",
    "append_fragment",
    "append_node",
    "get_fragment",
    "get_fragment_spreads",
    "pop_node",
    "set",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ASTValidationContext.on_error": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ASTValidationContext.report_error": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "graphql.validation.validation_context.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.NodeWithSelectionSet": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "graphql.validation.validation_context.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.SDLValidationContext": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "graphql.validation.validation_context.ASTValidationContext",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validation_context.SDLValidationContext.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "super",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "graphql.validation.validation_context.ValidationContext": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "graphql.validation.validation_context.ASTValidationContext",
    "graphql.validation.validation_context.NodeWithSelectionSet",
    "graphql.validation.validation_context.VariableUsage",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validation_context.ValidationContext.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_argument": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_directive": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_field_def": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_input_type": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_parent_input_type": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_parent_type": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_recursive_variable_usages": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "get_variable_usages",
    "graphql.validation.validation_context.VariableUsage",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_type": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "graphql.validation.validation_context.ValidationContext.get_variable_usages": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeInfoVisitor",
    "graphql.validation.validation_context.NodeWithSelectionSet",
    "graphql.validation.validation_context.VariableUsage",
    "graphql.validation.validation_context.VariableUsageVisitor",
    "typing.List",
    "visit"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.VariableUsage": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "type",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validation_context.VariableUsageVisitor": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "graphql.validation.validation_context.VariableUsage",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "graphql.validation.validation_context.VariableUsageVisitor.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "graphql.validation.validation_context.VariableUsageVisitor.enter_variable": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "graphql.validation.validation_context.VariableUsage"
   ]
  },
  "type": "function"
 },
 "graphql.validation.validation_context.VariableUsageVisitor.enter_variable_definition": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "graphql.validation.validation_context.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "graphql.validation.validation_context.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "graphql.version": {
  "data": {
   "symbols_in_volume": [
    "graphql.version.VersionInfo",
    "graphql.version.re",
    "graphql.version.version",
    "graphql.version.version_js"
   ]
  },
  "type": "module"
 },
 "graphql.version.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "graphql.version.VersionInfo": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "graphql.version.VersionInfo.__str__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "graphql.version.VersionInfo.from_str": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "graphql.version._re_version",
    "int",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "graphql.version.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "graphql.version._re_version": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "graphql.version.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphql.version.version": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphql.version.version_info": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "graphql.version.version_info_js": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "graphql.version.version_js": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 }
}