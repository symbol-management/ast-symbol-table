{
 "typesystem": {
  "data": {},
  "type": "module"
 },
 "typesystem.Any": {
  "data": {
   "shadows": "typesystem.fields.Any"
  },
  "type": "import"
 },
 "typesystem.Array": {
  "data": {
   "shadows": "typesystem.fields.Array"
  },
  "type": "import"
 },
 "typesystem.Boolean": {
  "data": {
   "shadows": "typesystem.fields.Boolean"
  },
  "type": "import"
 },
 "typesystem.Choice": {
  "data": {
   "shadows": "typesystem.fields.Choice"
  },
  "type": "import"
 },
 "typesystem.Date": {
  "data": {
   "shadows": "typesystem.fields.Date"
  },
  "type": "import"
 },
 "typesystem.DateTime": {
  "data": {
   "shadows": "typesystem.fields.DateTime"
  },
  "type": "import"
 },
 "typesystem.Decimal": {
  "data": {
   "shadows": "typesystem.fields.Decimal"
  },
  "type": "import"
 },
 "typesystem.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.Float": {
  "data": {
   "shadows": "typesystem.fields.Float"
  },
  "type": "import"
 },
 "typesystem.Integer": {
  "data": {
   "shadows": "typesystem.fields.Integer"
  },
  "type": "import"
 },
 "typesystem.Jinja2Forms": {
  "data": {
   "shadows": "typesystem.forms.Jinja2Forms"
  },
  "type": "import"
 },
 "typesystem.Message": {
  "data": {
   "shadows": "typesystem.base.Message"
  },
  "type": "import"
 },
 "typesystem.Number": {
  "data": {
   "shadows": "typesystem.fields.Number"
  },
  "type": "import"
 },
 "typesystem.Object": {
  "data": {
   "shadows": "typesystem.fields.Object"
  },
  "type": "import"
 },
 "typesystem.ParseError": {
  "data": {
   "shadows": "typesystem.base.ParseError"
  },
  "type": "import"
 },
 "typesystem.Position": {
  "data": {
   "shadows": "typesystem.base.Position"
  },
  "type": "import"
 },
 "typesystem.Reference": {
  "data": {
   "shadows": "typesystem.schemas.Reference"
  },
  "type": "import"
 },
 "typesystem.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.SchemaDefinitions": {
  "data": {
   "shadows": "typesystem.schemas.SchemaDefinitions"
  },
  "type": "import"
 },
 "typesystem.String": {
  "data": {
   "shadows": "typesystem.fields.String"
  },
  "type": "import"
 },
 "typesystem.Text": {
  "data": {
   "shadows": "typesystem.fields.Text"
  },
  "type": "import"
 },
 "typesystem.Time": {
  "data": {
   "shadows": "typesystem.fields.Time"
  },
  "type": "import"
 },
 "typesystem.Union": {
  "data": {
   "shadows": "typesystem.fields.Union"
  },
  "type": "import"
 },
 "typesystem.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "typesystem.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "typesystem.base": {
  "data": {},
  "type": "module"
 },
 "typesystem.base.BaseError": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "collections.abc.Mapping"
   ]
  },
  "type": "class"
 },
 "typesystem.base.BaseError.__eq__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__getitem__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "dict",
    "str",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__hash__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "str",
    "typesystem.base.Message",
    "typesystem.base.Position",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__iter__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "iter",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__len__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__repr__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.__str__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.base.BaseError.messages": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "int",
    "list",
    "str",
    "typesystem.base.Message",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "typesystem.base.Message": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "typesystem.base.Message.__eq__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.base.Message",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Message.__hash__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Message.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "str",
    "typesystem.base.Position",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Message.__repr__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.base.ParseError": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "typesystem.base.BaseError"
   ]
  },
  "type": "class"
 },
 "typesystem.base.Position": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "typesystem.base.Position.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.base.Position",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Position.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "typesystem.base.Position.__repr__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.base.ValidationError": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "typesystem.base.BaseError"
   ]
  },
  "type": "class"
 },
 "typesystem.base.ValidationResult": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "typesystem.base.ValidationResult.__bool__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "typesystem.base.ValidationResult.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "typesystem.base.ValidationError",
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.ValidationResult.__iter__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "typesystem.base.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.base.ValidationResult.__repr__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.base.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.composites": {
  "data": {},
  "type": "module"
 },
 "typesystem.composites.AllOf": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.composites.AllOf.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "super",
    "typesystem.composites.typing",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.AllOf.validate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.Any": {
  "data": {
   "shadows": "typesystem.fields.Any"
  },
  "type": "import"
 },
 "typesystem.composites.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.composites.IfThenElse": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.composites.IfThenElse.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super",
    "typesystem.composites.typing",
    "typesystem.fields.Any",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.IfThenElse.validate": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.NeverMatch": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.composites.NeverMatch.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.NeverMatch.validate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.Not": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.composites.Not.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super",
    "typesystem.composites.typing",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.Not.validate": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bool",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.OneOf": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.composites.OneOf.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "typesystem.composites.typing",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.OneOf.validate": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "typesystem.composites.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.composites.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.fields": {
  "data": {
   "symbols_in_volume": [
    "object",
    "typesystem.formats.DateFormat",
    "typesystem.formats.DateTimeFormat",
    "typesystem.formats.TimeFormat",
    "typesystem.formats.UUIDFormat"
   ]
  },
  "type": "module"
 },
 "typesystem.fields.Any": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Any.validate": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "bool",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Array": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Array.__init__": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "all",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "super",
    "tuple",
    "typesystem.fields.Field",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Array.validate": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "typesystem.base.Message",
    "typesystem.base.ValidationError",
    "typesystem.fields.Field",
    "typesystem.fields.typing",
    "typesystem.unique.Uniqueness"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Boolean": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Boolean.validate": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "bool",
    "isinstance",
    "str",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Choice": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Choice.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "str",
    "super",
    "tuple",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Choice.validate": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "bool",
    "typesystem.fields.typing",
    "typesystem.unique.Uniqueness"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Const": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Const.__init__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "super",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Const.validate": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "bool",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Date": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "typesystem.fields.String"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Date.__init__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "super",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.DateTime": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "typesystem.fields.String"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.DateTime.__init__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "super",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Decimal": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numeric_type",
    "typesystem.fields.Number",
    "typesystem.fields.decimal"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Decimal.serialize": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "float",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.FORMATS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "typesystem.fields.Field": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "str",
    "typesystem.fields.typing"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Field.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.__or__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Union",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.get_default_value": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "callable",
    "default",
    "getattr",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.get_error_text": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.has_default": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.serialize": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.validate_or_error": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "typesystem.base.ValidationError",
    "typesystem.base.ValidationResult",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Field.validation_error": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "str",
    "typesystem.base.ValidationError"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Float": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "float",
    "numeric_type",
    "typesystem.fields.Number"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Integer": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "int",
    "numeric_type",
    "typesystem.fields.Number"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Message": {
  "data": {
   "shadows": "typesystem.base.Message"
  },
  "type": "import"
 },
 "typesystem.fields.NO_DEFAULT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "typesystem.fields.Number": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "type",
    "typesystem.fields.Field",
    "typesystem.fields.typing"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Number.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "str",
    "super",
    "typesystem.fields.decimal",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Number.validate": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "math.isfinite",
    "numeric_type",
    "str",
    "type",
    "typesystem.fields.decimal",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Object": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Object.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "all",
    "bool",
    "dict",
    "int",
    "isinstance",
    "list",
    "str",
    "super",
    "tuple",
    "typesystem.fields.Field",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Object.validate": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "set",
    "str",
    "typesystem.base.Message",
    "typesystem.base.ValidationError",
    "typesystem.fields.Field",
    "typesystem.fields.re",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.String": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.String.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bool",
    "format",
    "int",
    "isinstance",
    "str",
    "super",
    "typesystem.fields.re",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.String.serialize": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "typesystem.fields.FORMATS",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.String.validate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "str",
    "typesystem.fields.FORMATS",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Text": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "typesystem.fields.String"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Text.__init__": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "super",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Time": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "typesystem.fields.String"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Time.__init__": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "super",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Union": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.fields.Union.__init__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "any",
    "super",
    "typesystem.fields.Field",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Union.validate": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "bool",
    "len",
    "typesystem.fields.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.fields.Uniqueness": {
  "data": {
   "shadows": "typesystem.unique.Uniqueness"
  },
  "type": "import"
 },
 "typesystem.fields.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.fields.ValidationResult": {
  "data": {
   "shadows": "typesystem.base.ValidationResult"
  },
  "type": "import"
 },
 "typesystem.fields.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "typesystem.fields.formats": {
  "data": {
   "shadows": "typesystem.formats"
  },
  "type": "import"
 },
 "typesystem.fields.isfinite": {
  "data": {
   "shadows": "math.isfinite"
  },
  "type": "import"
 },
 "typesystem.fields.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "typesystem.fields.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.formats": {
  "data": {
   "symbols_in_volume": [
    "typesystem.formats.re"
   ]
  },
  "type": "module"
 },
 "typesystem.formats.BaseFormat": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "str",
    "typesystem.formats.typing"
   ]
  },
  "type": "class"
 },
 "typesystem.formats.BaseFormat.is_native_type": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.BaseFormat.serialize": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.BaseFormat.validate": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "typesystem.base.ValidationError",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.BaseFormat.validation_error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "str",
    "typesystem.base.ValidationError"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.DATETIME_REGEX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "typesystem.formats.DATE_REGEX": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "typesystem.formats.DateFormat": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "typesystem.formats.BaseFormat"
   ]
  },
  "type": "class"
 },
 "typesystem.formats.DateFormat.is_native_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.DateFormat.serialize": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "str",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.DateFormat.validate": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typesystem.formats.DATE_REGEX",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.DateTimeFormat": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "typesystem.formats.BaseFormat"
   ]
  },
  "type": "class"
 },
 "typesystem.formats.DateTimeFormat.is_native_type": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.DateTimeFormat.validate": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "typesystem.formats.DATETIME_REGEX",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.TIME_REGEX": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "typesystem.formats.TimeFormat": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "typesystem.formats.BaseFormat"
   ]
  },
  "type": "class"
 },
 "typesystem.formats.TimeFormat.is_native_type": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.TimeFormat.validate": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typesystem.formats.TIME_REGEX",
    "typesystem.formats.datetime",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.UUIDFormat": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "typesystem.formats.BaseFormat"
   ]
  },
  "type": "class"
 },
 "typesystem.formats.UUIDFormat.is_native_type": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.formats.typing",
    "typesystem.formats.uuid"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.UUIDFormat.serialize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str",
    "typesystem.formats.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.UUIDFormat.validate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "typesystem.formats.UUID_REGEX",
    "typesystem.formats.typing",
    "typesystem.formats.uuid"
   ]
  },
  "type": "function"
 },
 "typesystem.formats.UUID_REGEX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "typesystem.formats.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.formats.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "typesystem.formats.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "typesystem.formats.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.formats.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "typesystem.forms": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "typesystem.forms.Boolean": {
  "data": {
   "shadows": "typesystem.fields.Boolean"
  },
  "type": "import"
 },
 "typesystem.forms.Choice": {
  "data": {
   "shadows": "typesystem.fields.Choice"
  },
  "type": "import"
 },
 "typesystem.forms.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.forms.Form": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "typesystem.forms.Form.__html__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "typesystem.forms.jinja2"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict",
    "typesystem.base.ValidationError",
    "typesystem.forms.typing",
    "typesystem.schemas.Schema"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.__str__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.input_type_for_field": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "format",
    "getattr",
    "str",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.render_field": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typesystem.fields.Field",
    "typesystem.forms.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.render_fields": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Form.template_for_field": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typesystem.fields.Boolean",
    "typesystem.fields.Choice",
    "typesystem.fields.Field",
    "typesystem.fields.Object",
    "typesystem.fields.String"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Jinja2Forms": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "typesystem.forms.Jinja2Forms.Form": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "dict",
    "typesystem.base.ValidationError",
    "typesystem.forms.Form",
    "typesystem.forms.typing",
    "typesystem.schemas.Schema"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Jinja2Forms.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str",
    "typesystem.forms.jinja2"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Jinja2Forms.load_template_env": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "str",
    "typesystem.forms.jinja2"
   ]
  },
  "type": "function"
 },
 "typesystem.forms.Object": {
  "data": {
   "shadows": "typesystem.fields.Object"
  },
  "type": "import"
 },
 "typesystem.forms.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.forms.String": {
  "data": {
   "shadows": "typesystem.fields.String"
  },
  "type": "import"
 },
 "typesystem.forms.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.forms.jinja2": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "typesystem.forms.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.from_json_schema": {
  "data": {
   "shadows": "typesystem.json_schema.from_json_schema"
  },
  "type": "import"
 },
 "typesystem.json_schema": {
  "data": {
   "symbols_in_volume": [
    "typesystem.fields.Array",
    "typesystem.fields.Boolean",
    "typesystem.fields.Integer",
    "typesystem.fields.Number",
    "typesystem.fields.Object",
    "typesystem.fields.String",
    "typesystem.json_schema.JSONSchema",
    "typesystem.json_schema.definitions",
    "typesystem.schemas.Reference",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "module"
 },
 "typesystem.json_schema.AllOf": {
  "data": {
   "shadows": "typesystem.composites.AllOf"
  },
  "type": "import"
 },
 "typesystem.json_schema.Any": {
  "data": {
   "shadows": "typesystem.fields.Any"
  },
  "type": "import"
 },
 "typesystem.json_schema.Array": {
  "data": {
   "shadows": "typesystem.fields.Array"
  },
  "type": "import"
 },
 "typesystem.json_schema.Boolean": {
  "data": {
   "shadows": "typesystem.fields.Boolean"
  },
  "type": "import"
 },
 "typesystem.json_schema.Choice": {
  "data": {
   "shadows": "typesystem.fields.Choice"
  },
  "type": "import"
 },
 "typesystem.json_schema.Const": {
  "data": {
   "shadows": "typesystem.fields.Const"
  },
  "type": "import"
 },
 "typesystem.json_schema.Decimal": {
  "data": {
   "shadows": "typesystem.fields.Decimal"
  },
  "type": "import"
 },
 "typesystem.json_schema.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.json_schema.Float": {
  "data": {
   "shadows": "typesystem.fields.Float"
  },
  "type": "import"
 },
 "typesystem.json_schema.IfThenElse": {
  "data": {
   "shadows": "typesystem.composites.IfThenElse"
  },
  "type": "import"
 },
 "typesystem.json_schema.Integer": {
  "data": {
   "shadows": "typesystem.fields.Integer"
  },
  "type": "import"
 },
 "typesystem.json_schema.JSONSchema": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "typesystem.json_schema.NO_DEFAULT": {
  "data": {
   "shadows": "typesystem.fields.NO_DEFAULT"
  },
  "type": "import"
 },
 "typesystem.json_schema.NeverMatch": {
  "data": {
   "shadows": "typesystem.composites.NeverMatch"
  },
  "type": "import"
 },
 "typesystem.json_schema.Not": {
  "data": {
   "shadows": "typesystem.composites.Not"
  },
  "type": "import"
 },
 "typesystem.json_schema.Number": {
  "data": {
   "shadows": "typesystem.fields.Number"
  },
  "type": "import"
 },
 "typesystem.json_schema.Object": {
  "data": {
   "shadows": "typesystem.fields.Object"
  },
  "type": "import"
 },
 "typesystem.json_schema.OneOf": {
  "data": {
   "shadows": "typesystem.composites.OneOf"
  },
  "type": "import"
 },
 "typesystem.json_schema.Reference": {
  "data": {
   "shadows": "typesystem.schemas.Reference"
  },
  "type": "import"
 },
 "typesystem.json_schema.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.json_schema.SchemaDefinitions": {
  "data": {
   "shadows": "typesystem.schemas.SchemaDefinitions"
  },
  "type": "import"
 },
 "typesystem.json_schema.String": {
  "data": {
   "shadows": "typesystem.fields.String"
  },
  "type": "import"
 },
 "typesystem.json_schema.TYPE_CONSTRAINTS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "typesystem.json_schema.Union": {
  "data": {
   "shadows": "typesystem.fields.Union"
  },
  "type": "import"
 },
 "typesystem.json_schema.all_of_from_json_schema": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "dict",
    "typesystem.composites.AllOf",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.any_of_from_json_schema": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "dict",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.fields.Union",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.const_from_json_schema": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dict",
    "typesystem.fields.Const",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.definitions": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "typesystem.json_schema.enum_from_json_schema": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "dict",
    "typesystem.fields.Choice",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.from_json_schema": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "all_of_from_json_schema",
    "any",
    "any_of_from_json_schema",
    "bool",
    "const_from_json_schema",
    "dict",
    "enum_from_json_schema",
    "if_then_else_from_json_schema",
    "isinstance",
    "len",
    "not_from_json_schema",
    "one_of_from_json_schema",
    "ref_from_json_schema",
    "type_from_json_schema",
    "typesystem.composites.AllOf",
    "typesystem.composites.NeverMatch",
    "typesystem.fields.Any",
    "typesystem.fields.Field",
    "typesystem.json_schema.TYPE_CONSTRAINTS",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.typing",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.from_json_schema_type": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "list",
    "str",
    "typesystem.fields.Array",
    "typesystem.fields.Boolean",
    "typesystem.fields.Field",
    "typesystem.fields.Float",
    "typesystem.fields.Integer",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.fields.Object",
    "typesystem.fields.String",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.json_schema.typing",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.get_standard_properties": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "dict",
    "typesystem.fields.Field"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.get_valid_types": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "set",
    "str",
    "typesystem.json_schema.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.if_then_else_from_json_schema": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "dict",
    "typesystem.composites.IfThenElse",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.not_from_json_schema": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "dict",
    "typesystem.composites.Not",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.one_of_from_json_schema": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dict",
    "typesystem.composites.OneOf",
    "typesystem.fields.Field",
    "typesystem.fields.NO_DEFAULT",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.from_json_schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "typesystem.json_schema.ref_from_json_schema": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "dict",
    "typesystem.fields.Field",
    "typesystem.json_schema.definitions",
    "typesystem.schemas.Reference",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.to_json_schema": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "get_standard_properties",
    "isinstance",
    "list",
    "tuple",
    "type",
    "typesystem.composites.AllOf",
    "typesystem.composites.IfThenElse",
    "typesystem.composites.NeverMatch",
    "typesystem.composites.Not",
    "typesystem.composites.OneOf",
    "typesystem.fields.Any",
    "typesystem.fields.Array",
    "typesystem.fields.Boolean",
    "typesystem.fields.Choice",
    "typesystem.fields.Const",
    "typesystem.fields.Decimal",
    "typesystem.fields.Field",
    "typesystem.fields.Float",
    "typesystem.fields.Integer",
    "typesystem.fields.Object",
    "typesystem.fields.String",
    "typesystem.fields.Union",
    "typesystem.json_schema.definitions",
    "typesystem.json_schema.re",
    "typesystem.json_schema.typing",
    "typesystem.schemas.Reference",
    "typesystem.schemas.Schema",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.type_from_json_schema": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dict",
    "from_json_schema_type",
    "get_valid_types",
    "len",
    "typesystem.composites.NeverMatch",
    "typesystem.fields.Const",
    "typesystem.fields.Field",
    "typesystem.fields.Union",
    "typesystem.json_schema.definitions",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.json_schema.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.schemas": {
  "data": {},
  "type": "module"
 },
 "typesystem.schemas.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "typesystem.schemas.Array": {
  "data": {
   "shadows": "typesystem.fields.Array"
  },
  "type": "import"
 },
 "typesystem.schemas.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.schemas.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "typesystem.schemas.MutableMapping": {
  "data": {
   "shadows": "collections.abc.MutableMapping"
  },
  "type": "import"
 },
 "typesystem.schemas.Object": {
  "data": {
   "shadows": "typesystem.fields.Object"
  },
  "type": "import"
 },
 "typesystem.schemas.Reference": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "typesystem.fields.Field"
   ]
  },
  "type": "class"
 },
 "typesystem.schemas.Reference.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "str",
    "super",
    "typesystem.schemas.Schema",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Reference.serialize": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dict",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Reference.target": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "typesystem.fields.Field",
    "typesystem.schemas.Schema",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Reference.target_string": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Reference.validate": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "bool",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "collections.abc.Mapping",
    "str",
    "typesystem.fields.Field",
    "typesystem.schemas.SchemaMetaclass",
    "typesystem.schemas.typing"
   ]
  },
  "type": "class"
 },
 "typesystem.schemas.Schema.__eq__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "isinstance",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.__getitem__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "hasattr",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "setattr",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.__iter__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "hasattr",
    "str",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.__len__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.__repr__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.is_sparse": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.make_validator": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "typesystem.fields.Field",
    "typesystem.fields.Object",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.validate": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.Schema.validate_or_error": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls.validate",
    "typesystem.base.ValidationError",
    "typesystem.base.ValidationResult",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "collections.abc.MutableMapping"
   ]
  },
  "type": "class"
 },
 "typesystem.schemas.SchemaDefinitions.__delitem__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions.__getitem__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions.__iter__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "iter",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions.__len__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaDefinitions.__setitem__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.SchemaMetaclass": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "typesystem.schemas.SchemaMetaclass.__new__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "isinstance",
    "list",
    "reversed",
    "sorted",
    "str",
    "super",
    "type",
    "typesystem.fields.Field",
    "typesystem.schemas.SchemaDefinitions",
    "typesystem.schemas.SchemaMetaclass",
    "typesystem.schemas.set_definitions",
    "typesystem.schemas.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.schemas.ValidationResult": {
  "data": {
   "shadows": "typesystem.base.ValidationResult"
  },
  "type": "import"
 },
 "typesystem.schemas.set_definitions": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple",
    "typesystem.fields.Array",
    "typesystem.fields.Field",
    "typesystem.fields.Object",
    "typesystem.schemas.SchemaDefinitions"
   ]
  },
  "type": "function"
 },
 "typesystem.schemas.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.to_json_schema": {
  "data": {
   "shadows": "typesystem.json_schema.to_json_schema"
  },
  "type": "import"
 },
 "typesystem.tokenize": {
  "data": {},
  "type": "module"
 },
 "typesystem.tokenize.positional_validation": {
  "data": {},
  "type": "module"
 },
 "typesystem.tokenize.positional_validation.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.Message": {
  "data": {
   "shadows": "typesystem.base.Message"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.Token": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.Token"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.tokenize.positional_validation.validate_with_positions": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sorted",
    "typesystem.base.Message",
    "typesystem.base.ValidationError",
    "typesystem.fields.Field",
    "typesystem.schemas.Schema",
    "typesystem.tokenize.positional_validation.typing",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json": {
  "data": {
   "symbols_in_volume": [
    "typesystem.tokenize.tokenize_json.FLAGS",
    "typesystem.tokenize.tokenize_json.re"
   ]
  },
  "type": "module"
 },
 "typesystem.tokenize.tokenize_json.DictToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.DictToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.FLAGS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokenize_json.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.JSONDecodeError": {
  "data": {
   "shadows": "json.decoder.JSONDecodeError"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.JSONDecoder": {
  "data": {
   "shadows": "json.decoder.JSONDecoder"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.ListToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.ListToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.Message": {
  "data": {
   "shadows": "typesystem.base.Message"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.NUMBER_RE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokenize_json.ParseError": {
  "data": {
   "shadows": "typesystem.base.ParseError"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.Position": {
  "data": {
   "shadows": "typesystem.base.Position"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.ScalarToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.ScalarToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.Token": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.Token"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.WHITESPACE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokenize_json.WHITESPACE_STR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokenize_json._TokenizingDecoder": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "json.decoder.JSONDecoder"
   ]
  },
  "type": "class"
 },
 "typesystem.tokenize.tokenize_json._TokenizingDecoder.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "super",
    "typesystem.tokenize.tokenize_json._make_scanner",
    "typesystem.tokenize.tokenize_json.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json._TokenizingJSONObject": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "IndexError",
    "StopIteration",
    "_w",
    "bool",
    "dict",
    "int",
    "json.decoder.JSONDecodeError",
    "json.decoder.scanstring",
    "memo_get",
    "pairs_append",
    "scan_once",
    "str",
    "typesystem.tokenize.tokenize_json.WHITESPACE",
    "typesystem.tokenize.tokenize_json.WHITESPACE_STR",
    "typesystem.tokenize.tokenize_json.typing",
    "typesystem.tokenize.tokens.ScalarToken",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json._make_scanner": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "scan_once",
    "str",
    "typesystem.tokenize.tokenize_json.NUMBER_RE",
    "typesystem.tokenize.tokenize_json._TokenizingJSONObject",
    "typesystem.tokenize.tokenize_json.typing",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json._make_scanner._scan_once": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError",
    "StopIteration",
    "int",
    "match_number",
    "parse_array",
    "parse_float",
    "parse_int",
    "parse_object",
    "parse_string",
    "str",
    "typesystem.tokenize.tokenize_json.typing",
    "typesystem.tokenize.tokens.DictToken",
    "typesystem.tokenize.tokens.ListToken",
    "typesystem.tokenize.tokens.ScalarToken",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json._make_scanner.scan_once": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "_scan_once",
    "int",
    "str",
    "typesystem.tokenize.tokenize_json.typing",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.scanstring": {
  "data": {
   "shadows": "json.decoder.scanstring"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.tokenize_json": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "json.decoder.JSONDecodeError",
    "str",
    "typesystem.base.ParseError",
    "typesystem.base.Position",
    "typesystem.tokenize.tokenize_json._TokenizingDecoder",
    "typesystem.tokenize.tokenize_json.typing",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_json.validate_json": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typesystem.fields.Field",
    "typesystem.schemas.Schema",
    "typesystem.tokenize.positional_validation.validate_with_positions",
    "typesystem.tokenize.tokenize_json.tokenize_json",
    "typesystem.tokenize.tokenize_json.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_json.validate_with_positions": {
  "data": {
   "shadows": "typesystem.tokenize.positional_validation.validate_with_positions"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "yaml.loader.SafeLoader"
   ]
  },
  "type": "module"
 },
 "typesystem.tokenize.tokenize_yaml.DictToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.DictToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.Field": {
  "data": {
   "shadows": "typesystem.fields.Field"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.ListToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.ListToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.Message": {
  "data": {
   "shadows": "typesystem.base.Message"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.ParseError": {
  "data": {
   "shadows": "typesystem.base.ParseError"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.Position": {
  "data": {
   "shadows": "typesystem.base.Position"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.SafeLoader": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokenize_yaml.ScalarToken": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.ScalarToken"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.Schema": {
  "data": {
   "shadows": "typesystem.schemas.Schema"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.Token": {
  "data": {
   "shadows": "typesystem.tokenize.tokens.Token"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.ValidationError": {
  "data": {
   "shadows": "typesystem.base.ValidationError"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml._get_position": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "str",
    "typesystem.base.Position"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "str",
    "typesystem.base.ParseError",
    "typesystem.base.Position",
    "typesystem.tokenize.tokenize_yaml._get_position",
    "typesystem.tokenize.tokenize_yaml.typing",
    "typesystem.tokenize.tokenize_yaml.yaml",
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.CustomSafeLoader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "yaml.loader.SafeLoader"
   ]
  },
  "type": "class"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_bool": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ScalarToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_float": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ScalarToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_int": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ScalarToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_mapping": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.DictToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_null": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ScalarToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_scalar": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ScalarToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.tokenize_yaml.construct_sequence": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.ListToken"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.validate_with_positions": {
  "data": {
   "shadows": "typesystem.tokenize.positional_validation.validate_with_positions"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokenize_yaml.validate_yaml": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typesystem.fields.Field",
    "typesystem.schemas.Schema",
    "typesystem.tokenize.positional_validation.validate_with_positions",
    "typesystem.tokenize.tokenize_yaml.tokenize_yaml",
    "typesystem.tokenize.tokenize_yaml.typing",
    "typesystem.tokenize.tokenize_yaml.yaml"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokenize_yaml.yaml": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "typesystem.tokenize.tokens": {
  "data": {},
  "type": "module"
 },
 "typesystem.tokenize.tokens.DictToken": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "class"
 },
 "typesystem.tokenize.tokens.DictToken.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.DictToken._get_child_token": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.DictToken._get_key_token": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.DictToken._get_value": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.ListToken": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "class"
 },
 "typesystem.tokenize.tokens.ListToken._get_child_token": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.ListToken._get_value": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Position": {
  "data": {
   "shadows": "typesystem.base.Position"
  },
  "type": "import"
 },
 "typesystem.tokenize.tokens.ScalarToken": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.Token"
   ]
  },
  "type": "class"
 },
 "typesystem.tokenize.tokens.ScalarToken.__hash__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "hash",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.ScalarToken._get_value": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "typesystem.tokenize.tokens.Token.__eq__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typesystem.tokenize.tokens.Token",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "int",
    "str",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.__repr__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token._get_child_token": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token._get_key_token": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token._get_position": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "typesystem.base.Position"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token._get_value": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.end": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property",
    "typesystem.base.Position"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.lookup": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.lookup_key": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.start": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property",
    "typesystem.base.Position"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.string": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.Token.value": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property",
    "typesystem.tokenize.tokens.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.tokenize.tokens.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.tokenize_json": {
  "data": {
   "shadows": "typesystem.tokenize.tokenize_json.tokenize_json"
  },
  "type": "import"
 },
 "typesystem.tokenize_yaml": {
  "data": {
   "shadows": "typesystem.tokenize.tokenize_yaml.tokenize_yaml"
  },
  "type": "import"
 },
 "typesystem.unique": {
  "data": {},
  "type": "module"
 },
 "typesystem.unique.Uniqueness": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "typesystem.unique.Uniqueness.__contains__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "typesystem.unique.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.unique.Uniqueness.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "typesystem.unique.Uniqueness.add": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "typesystem.unique.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.unique.Uniqueness.make_hashable": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "int",
    "isinstance",
    "list",
    "str",
    "tuple",
    "typesystem.unique.typing"
   ]
  },
  "type": "function"
 },
 "typesystem.unique.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "typesystem.validate_json": {
  "data": {
   "shadows": "typesystem.tokenize.tokenize_json.validate_json"
  },
  "type": "import"
 },
 "typesystem.validate_with_positions": {
  "data": {
   "shadows": "typesystem.tokenize.positional_validation.validate_with_positions"
  },
  "type": "import"
 },
 "typesystem.validate_yaml": {
  "data": {
   "shadows": "typesystem.tokenize.tokenize_yaml.validate_yaml"
  },
  "type": "import"
 }
}