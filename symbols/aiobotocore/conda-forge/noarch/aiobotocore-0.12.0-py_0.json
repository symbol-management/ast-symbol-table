{
 "aiobotocore": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "aiobotocore.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "aiobotocore._endpoint_helpers": {
  "data": {
   "symbols_in_volume": [
    "aiobotocore._endpoint_helpers._aiohttp_retryable_exceptions",
    "aiobotocore._endpoint_helpers.asyncio"
   ]
  },
  "type": "module"
 },
 "aiobotocore._endpoint_helpers.ClientResponse": {
  "data": {
   "shadows": "aiohttp.client_reqrep.ClientResponse"
  },
  "type": "import"
 },
 "aiobotocore._endpoint_helpers.ClientResponseContentProxy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "aiobotocore._endpoint_helpers.wrapt"
   ]
  },
  "type": "class"
 },
 "aiobotocore._endpoint_helpers.ClientResponseContentProxy.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseContentProxy.close": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseContentProxy.url": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseProxy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "aiobotocore._endpoint_helpers.wrapt"
   ]
  },
  "type": "class"
 },
 "aiobotocore._endpoint_helpers.ClientResponseProxy.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "aiohttp.client_reqrep.ClientResponse",
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseProxy.content": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseProxy.raw": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "aiobotocore._endpoint_helpers.ClientResponseContentProxy",
    "property"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.ClientResponseProxy.status_code": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers._IOBaseWrapper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "aiobotocore._endpoint_helpers.wrapt"
   ]
  },
  "type": "class"
 },
 "aiobotocore._endpoint_helpers._IOBaseWrapper.close": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers._aiohttp_retryable_exceptions": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "aiobotocore._endpoint_helpers._text": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "aiobotocore._endpoint_helpers.aiohttp.http_exceptions": {
  "data": {
   "shadows": "aiohttp.http_exceptions"
  },
  "type": "import"
 },
 "aiobotocore._endpoint_helpers.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiobotocore._endpoint_helpers.botocore.retryhandler": {
  "data": {
   "shadows": "botocore.retryhandler"
  },
  "type": "import"
 },
 "aiobotocore._endpoint_helpers.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "aiobotocore.args": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.args.AioClientArgsCreator": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "botocore.args.ClientArgsCreator"
   ]
  },
  "type": "class"
 },
 "aiobotocore.args.AioClientArgsCreator.get_client_args": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AioConfig",
    "AioEndpointCreator",
    "aiobotocore.args.copy",
    "botocore.signers.RequestSigner",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "aiobotocore.args.ClientArgsCreator": {
  "data": {
   "shadows": "botocore.args.ClientArgsCreator"
  },
  "type": "import"
 },
 "aiobotocore.args.RequestSigner": {
  "data": {
   "shadows": "botocore.signers.RequestSigner"
  },
  "type": "import"
 },
 "aiobotocore.args.botocore.parsers": {
  "data": {
   "shadows": "botocore.parsers"
  },
  "type": "import"
 },
 "aiobotocore.args.botocore.serialize": {
  "data": {
   "shadows": "botocore.serialize"
  },
  "type": "import"
 },
 "aiobotocore.args.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "aiobotocore.client": {
  "data": {
   "symbols_in_volume": [
    "botocore.history.get_global_history_recorder"
   ]
  },
  "type": "module"
 },
 "aiobotocore.client.AioBaseClient": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "aiobotocore.client.history_recorder",
    "botocore.client.BaseClient",
    "botocore.client.logger.debug",
    "error_class"
   ]
  },
  "type": "class"
 },
 "aiobotocore.client.AioBaseClient.get_paginator": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "botocore.client.PaginatorDocstring",
    "botocore.exceptions.OperationNotPageableError",
    "botocore.utils.get_service_module_name",
    "documented_paginator_cls",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "aiobotocore.client.AioBaseClient.get_paginator.paginate": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "aiobotocore.client.AioBaseClient.get_waiter": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "botocore.waiter.xform_name"
   ]
  },
  "type": "function"
 },
 "aiobotocore.client.AioClientCreator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botocore.client.ClientCreator"
   ]
  },
  "type": "class"
 },
 "aiobotocore.client.AioClientCreator._create_client_class": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botocore.utils.get_service_module_name",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "aiobotocore.client.AioClientCreator._get_client_args": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AioClientArgsCreator"
   ]
  },
  "type": "function"
 },
 "aiobotocore.client.BaseClient": {
  "data": {
   "shadows": "botocore.client.BaseClient"
  },
  "type": "import"
 },
 "aiobotocore.client.ClientCreator": {
  "data": {
   "shadows": "botocore.client.ClientCreator"
  },
  "type": "import"
 },
 "aiobotocore.client.OperationNotPageableError": {
  "data": {
   "shadows": "botocore.exceptions.OperationNotPageableError"
  },
  "type": "import"
 },
 "aiobotocore.client.PaginatorDocstring": {
  "data": {
   "shadows": "botocore.client.PaginatorDocstring"
  },
  "type": "import"
 },
 "aiobotocore.client.get_global_history_recorder": {
  "data": {
   "shadows": "botocore.history.get_global_history_recorder"
  },
  "type": "import"
 },
 "aiobotocore.client.get_service_module_name": {
  "data": {
   "shadows": "botocore.utils.get_service_module_name"
  },
  "type": "import"
 },
 "aiobotocore.client.history_recorder": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "aiobotocore.client.logger": {
  "data": {
   "shadows": "botocore.client.logger"
  },
  "type": "import"
 },
 "aiobotocore.client.xform_name": {
  "data": {
   "shadows": "botocore.waiter.xform_name"
  },
  "type": "import"
 },
 "aiobotocore.config": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.config.AioConfig": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "aiobotocore.config.AioConfig.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "aiobotocore.config.copy",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore.config.AioConfig._validate_connector_args": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "aiobotocore.config.ssl",
    "bool",
    "botocore.exceptions.ParamValidationError",
    "float",
    "int",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "aiobotocore.config.AioConfig.merge": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "aiobotocore.config.AioConfig",
    "aiobotocore.config.copy"
   ]
  },
  "type": "function"
 },
 "aiobotocore.config.ParamValidationError": {
  "data": {
   "shadows": "botocore.exceptions.ParamValidationError"
  },
  "type": "import"
 },
 "aiobotocore.config.botocore.client": {
  "data": {
   "shadows": "botocore.client"
  },
  "type": "import"
 },
 "aiobotocore.config.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "aiobotocore.config.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "aiobotocore.endpoint": {
  "data": {
   "symbols_in_volume": [
    "aiobotocore.endpoint.length",
    "aiobotocore.endpoint.response_dict",
    "aiobotocore.response.StreamingBody",
    "urllib3.response.HTTPHeaderDict"
   ]
  },
  "type": "module"
 },
 "aiobotocore.endpoint.AioEndpoint": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "aiobotocore._endpoint_helpers._IOBaseWrapper",
    "aiobotocore._endpoint_helpers._text",
    "aiobotocore.endpoint.aiohttp",
    "aiobotocore.endpoint.asyncio",
    "aiobotocore.endpoint.io",
    "aiobotocore.endpoint.response_dict",
    "aiohttp.client.URL",
    "botocore.endpoint.Endpoint",
    "botocore.endpoint.history_recorder.record",
    "botocore.endpoint.logger.debug",
    "botocore.exceptions.ConnectionClosedError",
    "botocore.hooks.first_non_none_response",
    "convert_to_response_dict",
    "isinstance",
    "multidict.MultiDict",
    "urllib.parse.urlparse"
   ]
  },
  "type": "class"
 },
 "aiobotocore.endpoint.AioEndpoint.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore.endpoint.AioEndpointCreator": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "botocore.endpoint.EndpointCreator"
   ]
  },
  "type": "class"
 },
 "aiobotocore.endpoint.AioEndpointCreator.create_endpoint": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "aiobotocore._endpoint_helpers.ClientResponseProxy",
    "aiobotocore.endpoint.AioEndpoint",
    "aiobotocore.endpoint.aiohttp",
    "aiobotocore.endpoint.ssl",
    "botocore.endpoint.DEFAULT_TIMEOUT",
    "botocore.endpoint.MAX_POOL_CONNECTIONS",
    "botocore.endpoint.logger.debug",
    "botocore.utils.is_valid_endpoint_url",
    "dict",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "aiobotocore.endpoint.ClientResponseProxy": {
  "data": {
   "shadows": "aiobotocore._endpoint_helpers.ClientResponseProxy"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.ConnectionClosedError": {
  "data": {
   "shadows": "botocore.exceptions.ConnectionClosedError"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.DEFAULT_TIMEOUT": {
  "data": {
   "shadows": "botocore.endpoint.DEFAULT_TIMEOUT"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.Endpoint": {
  "data": {
   "shadows": "botocore.endpoint.Endpoint"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.EndpointCreator": {
  "data": {
   "shadows": "botocore.endpoint.EndpointCreator"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.HTTPHeaderDict": {
  "data": {
   "shadows": "urllib3.response.HTTPHeaderDict"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.MAX_POOL_CONNECTIONS": {
  "data": {
   "shadows": "botocore.endpoint.MAX_POOL_CONNECTIONS"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.MultiDict": {
  "data": {
   "shadows": "multidict.MultiDict"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.StreamingBody": {
  "data": {
   "shadows": "aiobotocore.response.StreamingBody"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.URL": {
  "data": {
   "shadows": "aiohttp.client.URL"
  },
  "type": "import"
 },
 "aiobotocore.endpoint._IOBaseWrapper": {
  "data": {
   "shadows": "aiobotocore._endpoint_helpers._IOBaseWrapper"
  },
  "type": "import"
 },
 "aiobotocore.endpoint._text": {
  "data": {
   "shadows": "aiobotocore._endpoint_helpers._text"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.aiohttp": {
  "data": {
   "shadows": "aiohttp"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.aiohttp.http_exceptions": {
  "data": {
   "shadows": "aiohttp.http_exceptions"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.first_non_none_response": {
  "data": {
   "shadows": "botocore.hooks.first_non_none_response"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.history_recorder": {
  "data": {
   "shadows": "botocore.endpoint.history_recorder"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.is_valid_endpoint_url": {
  "data": {
   "shadows": "botocore.utils.is_valid_endpoint_url"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.length": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "aiobotocore.endpoint.logger": {
  "data": {
   "shadows": "botocore.endpoint.logger"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.response_dict": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "aiobotocore.endpoint.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "aiobotocore.endpoint.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "aiobotocore.eventstream": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.eventstream.AioEventStream": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "botocore.eventstream.EventStream",
    "botocore.eventstream.EventStreamBuffer"
   ]
  },
  "type": "class"
 },
 "aiobotocore.eventstream.AioEventStream.__aiter__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "aiobotocore.eventstream.AioEventStream.__iter__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "aiobotocore.eventstream.EventStream": {
  "data": {
   "shadows": "botocore.eventstream.EventStream"
  },
  "type": "import"
 },
 "aiobotocore.eventstream.EventStreamBuffer": {
  "data": {
   "shadows": "botocore.eventstream.EventStreamBuffer"
  },
  "type": "import"
 },
 "aiobotocore.paginate": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.paginate.AioPageIterator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "all",
    "botocore.compat.six.string_types",
    "botocore.exceptions.PaginationError",
    "botocore.paginate.PageIterator",
    "botocore.utils.merge_dicts",
    "botocore.utils.set_value_from_jmespath",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "class"
 },
 "aiobotocore.paginate.AioPageIterator.__aiter__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "aiobotocore.paginate.AioPageIterator.result_key_iters": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ResultKeyIterator",
    "aiobotocore.paginate.aioitertools",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "aiobotocore.paginate.AioPaginator": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "aiobotocore.paginate.AioPageIterator",
    "botocore.paginate.Paginator"
   ]
  },
  "type": "class"
 },
 "aiobotocore.paginate.PageIterator": {
  "data": {
   "shadows": "botocore.paginate.PageIterator"
  },
  "type": "import"
 },
 "aiobotocore.paginate.PaginationError": {
  "data": {
   "shadows": "botocore.exceptions.PaginationError"
  },
  "type": "import"
 },
 "aiobotocore.paginate.Paginator": {
  "data": {
   "shadows": "botocore.paginate.Paginator"
  },
  "type": "import"
 },
 "aiobotocore.paginate.ResultKeyIterator": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "aiobotocore.paginate.ResultKeyIterator.__aiter__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "aiobotocore.paginate.ResultKeyIterator.__init__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "aiobotocore.paginate.aioitertools": {
  "data": {
   "shadows": "aioitertools"
  },
  "type": "import"
 },
 "aiobotocore.paginate.merge_dicts": {
  "data": {
   "shadows": "botocore.utils.merge_dicts"
  },
  "type": "import"
 },
 "aiobotocore.paginate.set_value_from_jmespath": {
  "data": {
   "shadows": "botocore.utils.set_value_from_jmespath"
  },
  "type": "import"
 },
 "aiobotocore.paginate.six": {
  "data": {
   "shadows": "botocore.compat.six"
  },
  "type": "import"
 },
 "aiobotocore.parsers": {
  "data": {
   "symbols_in_volume": [
    "aiobotocore.parsers.AioEC2QueryParser",
    "aiobotocore.parsers.AioJSONParser",
    "aiobotocore.parsers.AioQueryParser",
    "aiobotocore.parsers.AioRestJSONParser",
    "aiobotocore.parsers.AioRestXMLParser"
   ]
  },
  "type": "module"
 },
 "aiobotocore.parsers.AioEC2QueryParser": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botocore.parsers.EC2QueryParser"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioEC2QueryParser._create_event_stream": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AioEventStream"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.AioJSONParser": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botocore.parsers.JSONParser"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioJSONParser._create_event_stream": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AioEventStream"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.AioQueryParser": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botocore.parsers.QueryParser"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioQueryParser._create_event_stream": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AioEventStream"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.AioResponseParserFactory": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botocore.parsers.ResponseParserFactory"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioResponseParserFactory.create_parser": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "aiobotocore.parsers.PROTOCOL_PARSERS",
    "parser_cls"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.AioRestJSONParser": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "botocore.parsers.RestJSONParser"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioRestJSONParser._create_event_stream": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AioEventStream"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.AioRestXMLParser": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "botocore.parsers.RestXMLParser"
   ]
  },
  "type": "class"
 },
 "aiobotocore.parsers.AioRestXMLParser._create_event_stream": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "AioEventStream"
   ]
  },
  "type": "function"
 },
 "aiobotocore.parsers.EC2QueryParser": {
  "data": {
   "shadows": "botocore.parsers.EC2QueryParser"
  },
  "type": "import"
 },
 "aiobotocore.parsers.JSONParser": {
  "data": {
   "shadows": "botocore.parsers.JSONParser"
  },
  "type": "import"
 },
 "aiobotocore.parsers.PROTOCOL_PARSERS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "aiobotocore.parsers.QueryParser": {
  "data": {
   "shadows": "botocore.parsers.QueryParser"
  },
  "type": "import"
 },
 "aiobotocore.parsers.ResponseParserFactory": {
  "data": {
   "shadows": "botocore.parsers.ResponseParserFactory"
  },
  "type": "import"
 },
 "aiobotocore.parsers.RestJSONParser": {
  "data": {
   "shadows": "botocore.parsers.RestJSONParser"
  },
  "type": "import"
 },
 "aiobotocore.parsers.RestXMLParser": {
  "data": {
   "shadows": "botocore.parsers.RestXMLParser"
  },
  "type": "import"
 },
 "aiobotocore.response": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.response.AioReadTimeoutError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "aiobotocore.response.asyncio",
    "botocore.exceptions.ReadTimeoutError"
   ]
  },
  "type": "class"
 },
 "aiobotocore.response.IncompleteReadError": {
  "data": {
   "shadows": "botocore.exceptions.IncompleteReadError"
  },
  "type": "import"
 },
 "aiobotocore.response.ReadTimeoutError": {
  "data": {
   "shadows": "botocore.exceptions.ReadTimeoutError"
  },
  "type": "import"
 },
 "aiobotocore.response.StreamingBody": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "StopAsyncIteration",
    "aiobotocore.response.AioReadTimeoutError",
    "aiobotocore.response.asyncio",
    "aiobotocore.response.wrapt",
    "len"
   ]
  },
  "type": "class"
 },
 "aiobotocore.response.StreamingBody.__aiter__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "aiobotocore.response.StreamingBody.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore.response.StreamingBody._verify_content_length": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "botocore.exceptions.IncompleteReadError",
    "int"
   ]
  },
  "type": "function"
 },
 "aiobotocore.response.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiobotocore.response.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "aiobotocore.session": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.session.AioSession": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "aiobotocore.session.AioSession.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AioResponseParserFactory",
    "super"
   ]
  },
  "type": "function"
 },
 "aiobotocore.session.AioSession.create_client": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AioClientCreator",
    "botocore.UNSIGNED",
    "botocore.exceptions.PartialCredentialsError",
    "botocore.retryhandler",
    "botocore.translate"
   ]
  },
  "type": "function"
 },
 "aiobotocore.session.PartialCredentialsError": {
  "data": {
   "shadows": "botocore.exceptions.PartialCredentialsError"
  },
  "type": "import"
 },
 "aiobotocore.session.UNSIGNED": {
  "data": {
   "shadows": "botocore.UNSIGNED"
  },
  "type": "import"
 },
 "aiobotocore.session.botocore.credentials": {
  "data": {
   "shadows": "botocore.credentials"
  },
  "type": "import"
 },
 "aiobotocore.session.botocore.session": {
  "data": {
   "shadows": "botocore.session"
  },
  "type": "import"
 },
 "aiobotocore.session.get_session": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "aiobotocore.session.AioSession"
   ]
  },
  "type": "function"
 },
 "aiobotocore.session.retryhandler": {
  "data": {
   "shadows": "botocore.retryhandler"
  },
  "type": "import"
 },
 "aiobotocore.session.translate": {
  "data": {
   "shadows": "botocore.translate"
  },
  "type": "import"
 },
 "aiobotocore.waiter": {
  "data": {},
  "type": "module"
 },
 "aiobotocore.waiter.AIOWaiter": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "aiobotocore.waiter.asyncio",
    "botocore.waiter.Waiter",
    "botocore.waiter.WaiterError",
    "botocore.waiter.logger.debug",
    "list"
   ]
  },
  "type": "class"
 },
 "aiobotocore.waiter.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "aiobotocore.waiter.NormalizedOperationMethod": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "botocore.exceptions.ClientError",
    "botocore.waiter.NormalizedOperationMethod"
   ]
  },
  "type": "class"
 },
 "aiobotocore.waiter.Waiter": {
  "data": {
   "shadows": "botocore.waiter.Waiter"
  },
  "type": "import"
 },
 "aiobotocore.waiter.WaiterDocstring": {
  "data": {
   "shadows": "botocore.docs.docstring.WaiterDocstring"
  },
  "type": "import"
 },
 "aiobotocore.waiter.WaiterError": {
  "data": {
   "shadows": "botocore.waiter.WaiterError"
  },
  "type": "import"
 },
 "aiobotocore.waiter.WaiterModel": {
  "data": {
   "shadows": "botocore.waiter.WaiterModel"
  },
  "type": "import"
 },
 "aiobotocore.waiter._NormalizedOperationMethod": {
  "data": {
   "shadows": "botocore.waiter.NormalizedOperationMethod"
  },
  "type": "import"
 },
 "aiobotocore.waiter.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiobotocore.waiter.create_waiter_with_client": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "aiobotocore.waiter.AIOWaiter",
    "botocore.docs.docstring.WaiterDocstring",
    "botocore.utils.get_service_module_name",
    "botocore.waiter.NormalizedOperationMethod",
    "botocore.waiter.xform_name",
    "documented_waiter_cls",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "aiobotocore.waiter.get_service_module_name": {
  "data": {
   "shadows": "botocore.utils.get_service_module_name"
  },
  "type": "import"
 },
 "aiobotocore.waiter.logger": {
  "data": {
   "shadows": "botocore.waiter.logger"
  },
  "type": "import"
 },
 "aiobotocore.waiter.xform_name": {
  "data": {
   "shadows": "botocore.waiter.xform_name"
  },
  "type": "import"
 }
}