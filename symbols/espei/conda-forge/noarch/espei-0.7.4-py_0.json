{
 "espei": {
  "data": {
   "symbols_in_volume": [
    "espei.TRACE",
    "espei.logging",
    "espei.warnings",
    "get_versions"
   ]
  },
  "type": "module"
 },
 "espei.TRACE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "espei.__bibtex__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "espei.__citation__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "espei.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "espei._version": {
  "data": {},
  "type": "module"
 },
 "espei._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "espei._version.json",
    "espei._version.version_json"
   ]
  },
  "type": "function"
 },
 "espei._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "espei._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "espei.analysis": {
  "data": {},
  "type": "module"
 },
 "espei.analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.analysis.truncate_arrays": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "espei.citing": {
  "data": {},
  "type": "module"
 },
 "espei.citing.ESPEI_BIBTEX": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "espei.citing.ESPEI_CITATION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "espei.core_utils": {
  "data": {},
  "type": "module"
 },
 "espei.core_utils._zpf_conditions_shape": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_recursive_shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.core_utils._zpf_conditions_shape._recursive_shape": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "_recursive_shape",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.calc_interaction_product": {
  "data": {
   "shadows": "espei.parameter_selection.redlich_kister.calc_interaction_product"
  },
  "type": "import"
 },
 "espei.core_utils.calc_site_fraction_product": {
  "data": {
   "shadows": "espei.parameter_selection.redlich_kister.calc_site_fraction_product"
  },
  "type": "import"
 },
 "espei.core_utils.canonicalize": {
  "data": {
   "shadows": "espei.sublattice_tools.canonicalize"
  },
  "type": "import"
 },
 "espei.core_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "espei.core_utils.get_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "espei.core_utils.copy",
    "espei.core_utils.tinydb",
    "espei.sublattice_tools.canonicalize",
    "espei.sublattice_tools.recursive_tuplify",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.float",
    "numpy.object",
    "set"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.get_data.recursive_zip": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "recursive_zip",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.get_prop_data": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "espei.core_utils.tinydb",
    "set"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.get_samples": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "espei.core_utils.itertools",
    "espei.parameter_selection.redlich_kister.calc_interaction_product",
    "espei.parameter_selection.redlich_kister.calc_site_fraction_product",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.object",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.get_weights": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.core_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.core_utils.ravel_conditions": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "enumerate",
    "espei.core_utils._zpf_conditions_shape",
    "isinstance",
    "numpy.array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.ravel_zpf_values": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "any",
    "espei.core_utils.ravel_conditions",
    "len",
    "list",
    "set",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.recursive_map": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.recursive_tuplify": {
  "data": {
   "shadows": "espei.sublattice_tools.recursive_tuplify"
  },
  "type": "import"
 },
 "espei.core_utils.symmetry_filter": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "espei.sublattice_tools.canonicalize",
    "len"
   ]
  },
  "type": "function"
 },
 "espei.core_utils.tinydb": {
  "data": {
   "shadows": "tinydb"
  },
  "type": "import"
 },
 "espei.datasets": {
  "data": {},
  "type": "module"
 },
 "espei.datasets.DatasetError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "espei.datasets.MemoryStorage": {
  "data": {
   "shadows": "tinydb.storages.MemoryStorage"
  },
  "type": "import"
 },
 "espei.datasets.PickleableTinyDB": {
  "data": {
   "shadows": "espei.utils.PickleableTinyDB"
  },
  "type": "import"
 },
 "espei.datasets.add_ideal_exclusions": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "espei.datasets.espei",
    "espei.datasets.warnings",
    "int",
    "len",
    "print",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "espei.datasets.apply_tags": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.isscalar",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "espei.datasets.check_dataset": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "all",
    "any",
    "espei.datasets.DatasetError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.float",
    "numpy.nansum",
    "set",
    "six.string_types",
    "sorted",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.datasets.clean_dataset": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "all",
    "espei.core_utils.recursive_map",
    "float"
   ]
  },
  "type": "function"
 },
 "espei.datasets.espei": {
  "data": {
   "shadows": "espei"
  },
  "type": "import"
 },
 "espei.datasets.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "espei.datasets.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "espei.datasets.load_datasets": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ValueError",
    "espei.datasets.DatasetError",
    "espei.datasets.check_dataset",
    "espei.datasets.clean_dataset",
    "espei.datasets.json",
    "espei.utils.PickleableTinyDB",
    "open",
    "tinydb.storages.MemoryStorage"
   ]
  },
  "type": "function"
 },
 "espei.datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "espei.datasets.recursive_glob": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "espei.datasets.fnmatch",
    "espei.datasets.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.datasets.recursive_map": {
  "data": {
   "shadows": "espei.core_utils.recursive_map"
  },
  "type": "import"
 },
 "espei.datasets.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "espei.datasets.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "espei.datasets.where": {
  "data": {
   "shadows": "tinydb.where"
  },
  "type": "import"
 },
 "espei.error_functions": {
  "data": {},
  "type": "module"
 },
 "espei.error_functions.activity_error": {
  "data": {},
  "type": "module"
 },
 "espei.error_functions.activity_error._map_coord_to_variable": {
  "data": {
   "shadows": "pycalphad.plot.eqplot._map_coord_to_variable"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.calculate_activity_error": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "espei.core_utils.ravel_conditions",
    "espei.error_functions.activity_error.chempot_error",
    "espei.error_functions.activity_error.logging",
    "espei.error_functions.activity_error.target_chempots_from_activity",
    "espei.error_functions.activity_error.tinydb",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.isnan",
    "numpy.sum",
    "pycalphad.equilibrium",
    "pycalphad.plot.eqplot._map_coord_to_variable",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.activity_error.chempot_error": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.activity_error.equilibrium": {
  "data": {
   "shadows": "pycalphad.equilibrium"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.ravel_conditions": {
  "data": {
   "shadows": "espei.core_utils.ravel_conditions"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.target_chempots_from_activity": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.log",
    "pycalphad.variables.R"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.activity_error.tinydb": {
  "data": {
   "shadows": "tinydb"
  },
  "type": "import"
 },
 "espei.error_functions.activity_error.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.error_functions.context": {
  "data": {},
  "type": "module"
 },
 "espei.error_functions.context.TRACE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "espei.error_functions.context.build_callables": {
  "data": {
   "shadows": "pycalphad.codegen.callables.build_callables"
  },
  "type": "import"
 },
 "espei.error_functions.context.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "espei.error_functions.context.database_symbols_to_fit": {
  "data": {
   "shadows": "espei.utils.database_symbols_to_fit"
  },
  "type": "import"
 },
 "espei.error_functions.context.get_thermochemical_data": {
  "data": {
   "shadows": "espei.error_functions.get_thermochemical_data"
  },
  "type": "import"
 },
 "espei.error_functions.context.get_zpf_data": {
  "data": {
   "shadows": "espei.error_functions.get_zpf_data"
  },
  "type": "import"
 },
 "espei.error_functions.context.instantiate_models": {
  "data": {
   "shadows": "pycalphad.core.utils.instantiate_models"
  },
  "type": "import"
 },
 "espei.error_functions.context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.error_functions.context.setup_context": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "espei.error_functions.context.TRACE",
    "espei.error_functions.context.copy",
    "espei.error_functions.context.logging",
    "espei.error_functions.context.sympy",
    "espei.error_functions.context.time",
    "espei.error_functions.get_thermochemical_data",
    "espei.error_functions.get_zpf_data",
    "espei.utils.database_symbols_to_fit",
    "isinstance",
    "len",
    "pycalphad.codegen.callables.build_callables",
    "pycalphad.core.utils.instantiate_models",
    "pycalphad.variables.N",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.context.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.error_functions.context.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "espei.error_functions.context.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error": {
  "data": {},
  "type": "module"
 },
 "espei.error_functions.thermochemical_error.Model": {
  "data": {
   "shadows": "pycalphad.Model"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.ReferenceState": {
  "data": {
   "shadows": "pycalphad.ReferenceState"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.build_callables": {
  "data": {
   "shadows": "pycalphad.codegen.callables.build_callables"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.calculate": {
  "data": {
   "shadows": "pycalphad.calculate"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.calculate_points_array": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.thermochemical_error.calculate_thermochemical_error": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "copy.deepcopy",
    "espei.error_functions.thermochemical_error.logging",
    "numpy.sum",
    "pycalphad.calculate",
    "scipy.stats.norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.thermochemical_error.database_symbols_to_fit": {
  "data": {
   "shadows": "espei.utils.database_symbols_to_fit"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.get_prop_data": {
  "data": {
   "shadows": "espei.core_utils.get_prop_data"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.get_prop_samples": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "espei.core_utils.ravel_conditions",
    "espei.error_functions.thermochemical_error.calculate_points_array",
    "len",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.repeat",
    "pycalphad.core.utils.unpack_components",
    "range",
    "set",
    "sorted",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.thermochemical_error.get_pure_elements": {
  "data": {
   "shadows": "pycalphad.core.utils.get_pure_elements"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.get_thermochemical_data": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "espei.core_utils.get_prop_data",
    "espei.error_functions.thermochemical_error.get_prop_samples",
    "espei.error_functions.thermochemical_error.sympy",
    "espei.utils.database_symbols_to_fit",
    "len",
    "numpy.array",
    "pycalphad.Model",
    "pycalphad.ReferenceState",
    "pycalphad.codegen.callables.build_callables",
    "pycalphad.core.utils.get_pure_elements",
    "pycalphad.variables.N",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "set",
    "sorted",
    "tinydb.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.thermochemical_error.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.pure_element_phases": {
  "data": {
   "shadows": "espei.refdata.pure_element_phases"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.ravel_conditions": {
  "data": {
   "shadows": "espei.core_utils.ravel_conditions"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.unpack_components": {
  "data": {
   "shadows": "pycalphad.core.utils.unpack_components"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.error_functions.thermochemical_error.where": {
  "data": {
   "shadows": "tinydb.where"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error": {
  "data": {},
  "type": "module"
 },
 "espei.error_functions.zpf_error.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error._safe_index": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.zpf_error.calculate": {
  "data": {
   "shadows": "pycalphad.calculate"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.calculate_zpf_error": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "espei.error_functions.zpf_error.driving_force_to_hyperplane",
    "espei.error_functions.zpf_error.estimate_hyperplane",
    "espei.error_functions.zpf_error.logging",
    "len",
    "numpy.any",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sum",
    "numpy.zeros",
    "scipy.stats.norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.zpf_error.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.driving_force_to_hyperplane": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "espei.error_functions.zpf_error.logging",
    "float",
    "len",
    "list",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.float",
    "numpy.inf",
    "numpy.isnan",
    "numpy.multiply",
    "numpy.nan",
    "numpy.nansum",
    "numpy.ones",
    "numpy.squeeze",
    "pycalphad.calculate",
    "pycalphad.equilibrium",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "pycalphad.variables.X",
    "set",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.zpf_error.equilibrium": {
  "data": {
   "shadows": "pycalphad.equilibrium"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.estimate_hyperplane": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "numpy.all",
    "numpy.any",
    "numpy.float",
    "numpy.full_like",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmean",
    "numpy.sum",
    "pycalphad.equilibrium",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.zpf_error.get_zpf_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "enumerate",
    "espei.error_functions.zpf_error._safe_index",
    "espei.error_functions.zpf_error.operator",
    "espei.error_functions.zpf_error.tinydb",
    "float",
    "getattr",
    "len",
    "list",
    "numpy.asarray",
    "numpy.atleast_1d",
    "pycalphad.variables",
    "pycalphad.variables.X",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.error_functions.zpf_error.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.tinydb": {
  "data": {
   "shadows": "tinydb"
  },
  "type": "import"
 },
 "espei.error_functions.zpf_error.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.espei_script": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "__name__",
    "espei.espei_script.argparse",
    "espei.espei_script.espei",
    "espei.espei_script.main",
    "espei.espei_script.parser",
    "str"
   ]
  },
  "type": "module"
 },
 "espei.espei_script.Database": {
  "data": {
   "shadows": "pycalphad.Database"
  },
  "type": "import"
 },
 "espei.espei_script.DatasetError": {
  "data": {
   "shadows": "espei.datasets.DatasetError"
  },
  "type": "import"
 },
 "espei.espei_script.EmceeOptimizer": {
  "data": {
   "shadows": "espei.optimizers.opt_mcmc.EmceeOptimizer"
  },
  "type": "import"
 },
 "espei.espei_script.ImmediateClient": {
  "data": {
   "shadows": "espei.utils.ImmediateClient"
  },
  "type": "import"
 },
 "espei.espei_script.LocalCluster": {
  "data": {
   "shadows": "distributed.LocalCluster"
  },
  "type": "import"
 },
 "espei.espei_script.TRACE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "espei.espei_script._raise_dask_work_stealing": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "espei.espei_script.distributed",
    "espei.utils.get_dask_config_paths"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.add_ideal_exclusions": {
  "data": {
   "shadows": "espei.datasets.add_ideal_exclusions"
  },
  "type": "import"
 },
 "espei.espei_script.apply_tags": {
  "data": {
   "shadows": "espei.datasets.apply_tags"
  },
  "type": "import"
 },
 "espei.espei_script.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "espei.espei_script.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "espei.espei_script.database_symbols_to_fit": {
  "data": {
   "shadows": "espei.utils.database_symbols_to_fit"
  },
  "type": "import"
 },
 "espei.espei_script.distributed": {
  "data": {
   "shadows": "distributed"
  },
  "type": "import"
 },
 "espei.espei_script.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "espei.espei_script.espei": {
  "data": {
   "shadows": "espei"
  },
  "type": "import"
 },
 "espei.espei_script.generate_parameters": {
  "data": {
   "shadows": "espei.generate_parameters"
  },
  "type": "import"
 },
 "espei.espei_script.get_dask_config_paths": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "espei.espei_script.dask",
    "espei.espei_script.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.get_run_settings": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "espei.validation.schema.errors",
    "espei.validation.schema.normalized",
    "espei.validation.schema.validate"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "espei.espei_script.load_datasets": {
  "data": {
   "shadows": "espei.datasets.load_datasets"
  },
  "type": "import"
 },
 "espei.espei_script.log_version_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "espei.espei_script.dask",
    "espei.espei_script.distributed",
    "espei.espei_script.emcee",
    "espei.espei_script.espei",
    "espei.espei_script.logging",
    "espei.espei_script.pycalphad",
    "espei.espei_script.symengine",
    "espei.espei_script.sympy",
    "str"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.espei_script.main": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "espei.datasets.DatasetError",
    "espei.datasets.load_datasets",
    "espei.datasets.recursive_glob",
    "espei.espei_script.json",
    "espei.espei_script.os",
    "espei.espei_script.parser",
    "espei.espei_script.run_espei",
    "espei.espei_script.sys",
    "espei.espei_script.yaml",
    "len",
    "open",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "espei.espei_script.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.espei_script.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "espei.espei_script.parser": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "espei.espei_script.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "espei.espei_script.pycalphad": {
  "data": {
   "shadows": "pycalphad"
  },
  "type": "import"
 },
 "espei.espei_script.recursive_glob": {
  "data": {
   "shadows": "espei.datasets.recursive_glob"
  },
  "type": "import"
 },
 "espei.espei_script.run_espei": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "KeyError",
    "OSError",
    "dict",
    "distributed.LocalCluster",
    "espei.datasets.add_ideal_exclusions",
    "espei.datasets.apply_tags",
    "espei.datasets.load_datasets",
    "espei.datasets.recursive_glob",
    "espei.espei_script.TRACE",
    "espei.espei_script._raise_dask_work_stealing",
    "espei.espei_script.get_run_settings",
    "espei.espei_script.json",
    "espei.espei_script.log_version_info",
    "espei.espei_script.logging",
    "espei.espei_script.multiprocessing",
    "espei.espei_script.os",
    "espei.generate_parameters",
    "espei.optimizers.opt_mcmc.EmceeOptimizer",
    "espei.utils.ImmediateClient",
    "espei.utils.database_symbols_to_fit",
    "hasattr",
    "len",
    "numpy.load",
    "open",
    "pycalphad.Database",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "espei.espei_script.schema": {
  "data": {
   "shadows": "espei.validation.schema"
  },
  "type": "import"
 },
 "espei.espei_script.symengine": {
  "data": {
   "shadows": "symengine"
  },
  "type": "import"
 },
 "espei.espei_script.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.espei_script.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "espei.espei_script.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "espei.generate_parameters": {
  "data": {
   "shadows": "espei.paramselect.generate_parameters"
  },
  "type": "import"
 },
 "espei.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.mcmc": {
  "data": {},
  "type": "module"
 },
 "espei.mcmc.EmceeOptimizer": {
  "data": {
   "shadows": "espei.optimizers.opt_mcmc.EmceeOptimizer"
  },
  "type": "import"
 },
 "espei.mcmc.database_symbols_to_fit": {
  "data": {
   "shadows": "espei.utils.database_symbols_to_fit"
  },
  "type": "import"
 },
 "espei.mcmc.mcmc_fit": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "espei.mcmc.warnings",
    "espei.optimizers.opt_mcmc.EmceeOptimizer",
    "espei.utils.database_symbols_to_fit"
   ]
  },
  "type": "function"
 },
 "espei.mcmc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "espei.mcmc_fit": {
  "data": {
   "shadows": "espei.mcmc.mcmc_fit"
  },
  "type": "import"
 },
 "espei.optimizers": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.graph": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.graph.OptGraph": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "espei.optimizers.graph.OptGraph.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.__str__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph._get_next_id": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.add_node": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.get_path_to_node": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "list",
    "reversed",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.get_transformation_dict": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptNode": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "espei.optimizers.graph.OptNode.__eq__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__hash__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "espei.optimizers.graph.copy",
    "set"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__repr__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__str__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.graph.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "espei.optimizers.opt_base": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.opt_base.OptimizerBase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "espei.optimizers.opt_base.OptimizerBase.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "OptGraph",
    "OptNode",
    "espei.datasets.load_datasets",
    "espei.optimizers.opt_base.copy",
    "espei.utils.database_symbols_to_fit",
    "espei.utils.unpack_piecewise"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase._fit": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.commit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "OptimizerError",
    "len"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.discard": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.fit": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.predict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.reset_database": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "espei.optimizers.opt_base.copy"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "espei.optimizers.opt_base.database_symbols_to_fit": {
  "data": {
   "shadows": "espei.utils.database_symbols_to_fit"
  },
  "type": "import"
 },
 "espei.optimizers.opt_base.load_datasets": {
  "data": {
   "shadows": "espei.datasets.load_datasets"
  },
  "type": "import"
 },
 "espei.optimizers.opt_base.unpack_piecewise": {
  "data": {
   "shadows": "espei.utils.unpack_piecewise"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "espei.optimizers.opt_mcmc.EmceeOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer._fit": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "OptNode",
    "dict",
    "espei.error_functions.context.setup_context",
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.emcee",
    "espei.optimizers.opt_mcmc.logging",
    "espei.rstate.numpy_rstate",
    "espei.utils.optimal_parameters",
    "espei.utils.unpack_piecewise",
    "numpy.abs",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.do_sampling": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "enumerate",
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.logging",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.get_priors": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dict",
    "espei.optimizers.opt_mcmc.logging",
    "espei.priors.PriorSpec",
    "espei.priors.build_prior_specs",
    "hasattr",
    "isinstance",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.initialize_chains_from_trace": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.logging",
    "numpy.nonzero",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.initialize_new_chains": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.logging",
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.tile",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.predict": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "espei.error_functions.calculate_activity_error",
    "espei.error_functions.calculate_thermochemical_error",
    "espei.error_functions.calculate_zpf_error",
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.logging",
    "espei.optimizers.opt_mcmc.time",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.isneginf",
    "numpy.linalg.LinAlgError",
    "numpy.nan",
    "numpy.sum",
    "print",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.save_sampler_state": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "espei.optimizers.opt_mcmc.TRACE",
    "espei.optimizers.opt_mcmc.logging",
    "numpy.save"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.PriorSpec": {
  "data": {
   "shadows": "espei.priors.PriorSpec"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.TRACE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "espei.optimizers.opt_mcmc.build_prior_specs": {
  "data": {
   "shadows": "espei.priors.build_prior_specs"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.calculate_activity_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_activity_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.calculate_thermochemical_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_thermochemical_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.calculate_zpf_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_zpf_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.numpy_rstate": {
  "data": {
   "shadows": "espei.rstate.numpy_rstate"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.optimal_parameters": {
  "data": {
   "shadows": "espei.utils.optimal_parameters"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.setup_context": {
  "data": {
   "shadows": "espei.error_functions.context.setup_context"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "espei.optimizers.opt_mcmc.unpack_piecewise": {
  "data": {
   "shadows": "espei.utils.unpack_piecewise"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer._fit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "OptNode",
    "dict",
    "espei.error_functions.context.setup_context",
    "espei.optimizers.opt_scipy.time",
    "espei.utils.unpack_piecewise",
    "int",
    "numpy.array",
    "numpy.atleast_1d",
    "print",
    "scipy.optimize.minimize",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer.predict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "espei.error_functions.calculate_activity_error",
    "espei.error_functions.calculate_thermochemical_error",
    "espei.error_functions.calculate_zpf_error",
    "espei.optimizers.opt_scipy.TRACE",
    "espei.optimizers.opt_scipy.logging",
    "espei.optimizers.opt_scipy.time",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.linalg.LinAlgError",
    "print",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.optimizers.opt_scipy.TRACE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "espei.optimizers.opt_scipy.calculate_activity_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_activity_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.calculate_thermochemical_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_thermochemical_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.calculate_zpf_error": {
  "data": {
   "shadows": "espei.error_functions.calculate_zpf_error"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.setup_context": {
  "data": {
   "shadows": "espei.error_functions.context.setup_context"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "espei.optimizers.opt_scipy.unpack_piecewise": {
  "data": {
   "shadows": "espei.utils.unpack_piecewise"
  },
  "type": "import"
 },
 "espei.optimizers.utils": {
  "data": {},
  "type": "module"
 },
 "espei.optimizers.utils.OptimizerError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "class"
 },
 "espei.parameter_selection": {
  "data": {},
  "type": "module"
 },
 "espei.parameter_selection.model_building": {
  "data": {},
  "type": "module"
 },
 "espei.parameter_selection.model_building.build_candidate_models": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "espei.parameter_selection.model_building.build_feature_sets",
    "espei.parameter_selection.model_building.itertools",
    "espei.parameter_selection.model_building.make_successive",
    "espei.parameter_selection.model_building.sympy",
    "espei.sublattice_tools.interaction_test",
    "list"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.model_building.build_feature_sets": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "espei.parameter_selection.model_building.itertools",
    "espei.parameter_selection.model_building.make_successive",
    "list"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.model_building.interaction_test": {
  "data": {
   "shadows": "espei.sublattice_tools.interaction_test"
  },
  "type": "import"
 },
 "espei.parameter_selection.model_building.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.parameter_selection.model_building.make_successive": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.model_building.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.parameter_selection.redlich_kister": {
  "data": {},
  "type": "module"
 },
 "espei.parameter_selection.redlich_kister.calc_interaction_product": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "espei.sublattice_tools.interaction_test",
    "float",
    "isinstance",
    "len",
    "list",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.redlich_kister.calc_site_fraction_product": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "espei.parameter_selection.redlich_kister.itertools",
    "list",
    "numpy.atleast_1d",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.redlich_kister.interaction_test": {
  "data": {
   "shadows": "espei.sublattice_tools.interaction_test"
  },
  "type": "import"
 },
 "espei.parameter_selection.redlich_kister.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.parameter_selection.redlich_kister.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.parameter_selection.selection": {
  "data": {},
  "type": "module"
 },
 "espei.parameter_selection.selection.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "espei.parameter_selection.selection.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "espei.parameter_selection.selection.TRACE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "espei.parameter_selection.selection.fit_model": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.selection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.parameter_selection.selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.parameter_selection.selection.score_model": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "espei.parameter_selection.selection.TRACE",
    "espei.parameter_selection.selection.logging",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.log",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.selection.select_model": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "espei.parameter_selection.selection.fit_model",
    "espei.parameter_selection.selection.score_model",
    "numpy.inf",
    "numpy.isneginf"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.ternary_parameters": {
  "data": {},
  "type": "module"
 },
 "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "espei.core_utils.get_samples",
    "espei.parameter_selection.ternary_parameters.sympy",
    "espei.parameter_selection.utils.feature_transforms",
    "len",
    "numpy.empty",
    "numpy.float",
    "pycalphad.variables.T"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.ternary_parameters.feature_transforms": {
  "data": {
   "shadows": "espei.parameter_selection.utils.feature_transforms"
  },
  "type": "import"
 },
 "espei.parameter_selection.ternary_parameters.get_samples": {
  "data": {
   "shadows": "espei.core_utils.get_samples"
  },
  "type": "import"
 },
 "espei.parameter_selection.ternary_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.parameter_selection.ternary_parameters.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.parameter_selection.ternary_parameters.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils": {
  "data": {
   "symbols_in_volume": [
    "espei.parameter_selection.utils.sympy",
    "pycalphad.variables.T"
   ]
  },
  "type": "module"
 },
 "espei.parameter_selection.utils.build_sitefractions": {
  "data": {
   "shadows": "espei.utils.build_sitefractions"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils.feature_transforms": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "espei.parameter_selection.utils.get_data_quantities": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "espei.core_utils.get_samples",
    "espei.parameter_selection.utils.feature_transforms",
    "espei.parameter_selection.utils.itertools",
    "espei.parameter_selection.utils.shift_reference_state",
    "espei.parameter_selection.utils.sympy",
    "espei.utils.build_sitefractions",
    "feat_transform",
    "hasattr",
    "len",
    "list",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.float",
    "numpy.ones",
    "pycalphad.variables.SiteFraction",
    "pycalphad.variables.T",
    "set",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.utils.get_samples": {
  "data": {
   "shadows": "espei.core_utils.get_samples"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils.shift_reference_state": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "feature_transform",
    "len",
    "numpy.asarray",
    "numpy.object",
    "range"
   ]
  },
  "type": "function"
 },
 "espei.parameter_selection.utils.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.parameter_selection.utils.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.paramselect": {
  "data": {},
  "type": "module"
 },
 "espei.paramselect.Database": {
  "data": {
   "shadows": "pycalphad.Database"
  },
  "type": "import"
 },
 "espei.paramselect.Model": {
  "data": {
   "shadows": "pycalphad.Model"
  },
  "type": "import"
 },
 "espei.paramselect.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "espei.paramselect.PickleableTinyDB": {
  "data": {
   "shadows": "espei.utils.PickleableTinyDB"
  },
  "type": "import"
 },
 "espei.paramselect.Species": {
  "data": {
   "shadows": "pycalphad.io.database.Species"
  },
  "type": "import"
 },
 "espei.paramselect.TRACE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "espei.paramselect._build_feature_matrix": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "espei.core_utils.get_samples",
    "espei.parameter_selection.utils.feature_transforms",
    "espei.paramselect.sympy",
    "len",
    "numpy.empty",
    "numpy.float",
    "pycalphad.variables.T"
   ]
  },
  "type": "function"
 },
 "espei.paramselect._param_present_in_database": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "espei.sublattice_tools.tuplify",
    "len",
    "map",
    "pycalphad.variables.Species",
    "tinydb.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.build_candidate_models": {
  "data": {
   "shadows": "espei.parameter_selection.model_building.build_candidate_models"
  },
  "type": "import"
 },
 "espei.paramselect.build_ternary_feature_matrix": {
  "data": {
   "shadows": "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix"
  },
  "type": "import"
 },
 "espei.paramselect.endmembers_from_interaction": {
  "data": {
   "shadows": "espei.sublattice_tools.endmembers_from_interaction"
  },
  "type": "import"
 },
 "espei.paramselect.espei.refdata": {
  "data": {
   "shadows": "espei.refdata"
  },
  "type": "import"
 },
 "espei.paramselect.feature_transforms": {
  "data": {
   "shadows": "espei.parameter_selection.utils.feature_transforms"
  },
  "type": "import"
 },
 "espei.paramselect.fit_formation_energy": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "espei.core_utils.get_data",
    "espei.core_utils.get_weights",
    "espei.parameter_selection.model_building.build_candidate_models",
    "espei.parameter_selection.selection.select_model",
    "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix",
    "espei.parameter_selection.utils.get_data_quantities",
    "espei.paramselect.TRACE",
    "espei.paramselect._build_feature_matrix",
    "espei.paramselect.logging",
    "espei.paramselect.sympy",
    "espei.sublattice_tools.endmembers_from_interaction",
    "espei.sublattice_tools.interaction_test",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.object",
    "pycalphad.Model",
    "pycalphad.variables.T",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.fit_ternary_interactions": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "espei.paramselect.TRACE",
    "espei.paramselect._param_present_in_database",
    "espei.paramselect.fit_formation_energy",
    "espei.paramselect.get_next_symbol",
    "espei.paramselect.logging",
    "espei.paramselect.sympy",
    "espei.sublattice_tools.generate_interactions",
    "espei.sublattice_tools.generate_symmetric_group",
    "espei.sublattice_tools.tuplify",
    "espei.utils.sigfigs",
    "float",
    "len",
    "map",
    "numpy.arange",
    "numpy.object",
    "numpy.zeros",
    "print",
    "pycalphad.variables",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.generate_endmembers": {
  "data": {
   "shadows": "espei.sublattice_tools.generate_endmembers"
  },
  "type": "import"
 },
 "espei.paramselect.generate_interactions": {
  "data": {
   "shadows": "espei.sublattice_tools.generate_interactions"
  },
  "type": "import"
 },
 "espei.paramselect.generate_parameters": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "aliases",
    "dict",
    "espei.paramselect.logging",
    "espei.paramselect.operator",
    "espei.paramselect.phase_fit",
    "espei.paramselect.sympy",
    "getattr",
    "isinstance",
    "map",
    "pycalphad.Database",
    "pycalphad.io.database.Species",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.generate_symmetric_group": {
  "data": {
   "shadows": "espei.sublattice_tools.generate_symmetric_group"
  },
  "type": "import"
 },
 "espei.paramselect.get_data": {
  "data": {
   "shadows": "espei.core_utils.get_data"
  },
  "type": "import"
 },
 "espei.paramselect.get_data_quantities": {
  "data": {
   "shadows": "espei.parameter_selection.utils.get_data_quantities"
  },
  "type": "import"
 },
 "espei.paramselect.get_next_symbol": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.get_samples": {
  "data": {
   "shadows": "espei.core_utils.get_samples"
  },
  "type": "import"
 },
 "espei.paramselect.get_weights": {
  "data": {
   "shadows": "espei.core_utils.get_weights"
  },
  "type": "import"
 },
 "espei.paramselect.interaction_test": {
  "data": {
   "shadows": "espei.sublattice_tools.interaction_test"
  },
  "type": "import"
 },
 "espei.paramselect.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "espei.paramselect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.paramselect.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "espei.paramselect.phase_fit": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "TypeError",
    "aliases",
    "espei.paramselect.TRACE",
    "espei.paramselect._param_present_in_database",
    "espei.paramselect.fit_formation_energy",
    "espei.paramselect.fit_ternary_interactions",
    "espei.paramselect.get_next_symbol",
    "espei.paramselect.logging",
    "espei.paramselect.sympy",
    "espei.sublattice_tools.generate_endmembers",
    "espei.sublattice_tools.generate_interactions",
    "espei.sublattice_tools.generate_symmetric_group",
    "espei.sublattice_tools.tuplify",
    "espei.utils.sigfigs",
    "float",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.arange",
    "numpy.object",
    "numpy.zeros",
    "range",
    "reversed",
    "set",
    "sorted",
    "str",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.paramselect.select_model": {
  "data": {
   "shadows": "espei.parameter_selection.selection.select_model"
  },
  "type": "import"
 },
 "espei.paramselect.sigfigs": {
  "data": {
   "shadows": "espei.utils.sigfigs"
  },
  "type": "import"
 },
 "espei.paramselect.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.paramselect.tuplify": {
  "data": {
   "shadows": "espei.sublattice_tools.tuplify"
  },
  "type": "import"
 },
 "espei.paramselect.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.paramselect.where": {
  "data": {
   "shadows": "tinydb.where"
  },
  "type": "import"
 },
 "espei.plot": {
  "data": {},
  "type": "module"
 },
 "espei.plot.Model": {
  "data": {
   "shadows": "pycalphad.Model"
  },
  "type": "import"
 },
 "espei.plot.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "espei.plot._compare_data_to_parameters": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "NotImplementedError",
    "collections.OrderedDict",
    "espei.core_utils.get_samples",
    "espei.plot._translate_endmember_to_array",
    "espei.plot.plot_mapping",
    "espei.sublattice_tools.endmembers_from_interaction",
    "espei.sublattice_tools.recursive_tuplify",
    "espei.utils.bib_marker_map",
    "espei.utils.build_sitefractions",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.figaspect",
    "matplotlib.pyplot.figure",
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.linspace",
    "numpy.nonzero",
    "numpy.object",
    "numpy.zeros_like",
    "pycalphad.Model",
    "pycalphad.calculate",
    "pycalphad.variables.SiteFraction",
    "range",
    "set",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.plot._map_coord_to_variable": {
  "data": {
   "shadows": "pycalphad.plot.eqplot._map_coord_to_variable"
  },
  "type": "import"
 },
 "espei.plot._translate_endmember_to_array": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "pycalphad.variables",
    "pycalphad.variables.SiteFraction",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "espei.plot.bib_marker_map": {
  "data": {
   "shadows": "espei.utils.bib_marker_map"
  },
  "type": "import"
 },
 "espei.plot.build_sitefractions": {
  "data": {
   "shadows": "espei.utils.build_sitefractions"
  },
  "type": "import"
 },
 "espei.plot.calculate": {
  "data": {
   "shadows": "pycalphad.calculate"
  },
  "type": "import"
 },
 "espei.plot.dataplot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "espei.core_utils.ravel_zpf_values",
    "espei.plot.plot_mapping",
    "espei.plot.tinydb",
    "espei.plot.warnings",
    "espei.utils.bib_marker_map",
    "isinstance",
    "len",
    "list",
    "matplotlib.lines.Line2D",
    "matplotlib.pyplot.gca",
    "numpy.atleast_1d",
    "pycalphad.plot.utils.phase_legend",
    "pycalphad.variables.Composition",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "set",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.plot.endmembers_from_interaction": {
  "data": {
   "shadows": "espei.sublattice_tools.endmembers_from_interaction"
  },
  "type": "import"
 },
 "espei.plot.eqdataplot": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "espei.plot.dataplot",
    "list",
    "map",
    "numpy.array",
    "numpy.asarray",
    "pycalphad.plot.eqplot._map_coord_to_variable",
    "pycalphad.plot.eqplot.unpack_condition",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "espei.plot.eqplot": {
  "data": {
   "shadows": "pycalphad.plot.eqplot.eqplot"
  },
  "type": "import"
 },
 "espei.plot.equilibrium": {
  "data": {
   "shadows": "pycalphad.equilibrium"
  },
  "type": "import"
 },
 "espei.plot.get_data": {
  "data": {
   "shadows": "espei.core_utils.get_data"
  },
  "type": "import"
 },
 "espei.plot.get_samples": {
  "data": {
   "shadows": "espei.core_utils.get_samples"
  },
  "type": "import"
 },
 "espei.plot.mlines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "espei.plot.multiplot": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dict",
    "espei.plot.eqdataplot",
    "pycalphad.equilibrium",
    "pycalphad.plot.eqplot.eqplot"
   ]
  },
  "type": "function"
 },
 "espei.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.plot.phase_legend": {
  "data": {
   "shadows": "pycalphad.plot.utils.phase_legend"
  },
  "type": "import"
 },
 "espei.plot.plot_mapping": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "espei.plot.plot_parameters": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "enumerate",
    "espei.core_utils.get_data",
    "espei.plot._compare_data_to_parameters",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.figaspect",
    "matplotlib.pyplot.figure",
    "pycalphad.Model",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "espei.plot.ravel_zpf_values": {
  "data": {
   "shadows": "espei.core_utils.ravel_zpf_values"
  },
  "type": "import"
 },
 "espei.plot.recursive_tuplify": {
  "data": {
   "shadows": "espei.sublattice_tools.recursive_tuplify"
  },
  "type": "import"
 },
 "espei.plot.tinydb": {
  "data": {
   "shadows": "tinydb"
  },
  "type": "import"
 },
 "espei.plot.unpack_condition": {
  "data": {
   "shadows": "pycalphad.plot.eqplot.unpack_condition"
  },
  "type": "import"
 },
 "espei.plot.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.plot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "espei.priors": {
  "data": {},
  "type": "module"
 },
 "espei.priors.DistributionParameter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "espei.priors.DistributionParameter.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter._absolute": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter._identity": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter._relative": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter._shift_absolute": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter._shift_relative": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "espei.priors.DistributionParameter.value": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "espei.priors.PriorSpec": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "espei.priors.PriorSpec.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "espei.priors.DistributionParameter",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_normal": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_triangular": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.stats.triang"
   ]
  },
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_uniform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.stats.uniform"
   ]
  },
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_zero": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "espei.priors.rv_zero"
   ]
  },
  "type": "function"
 },
 "espei.priors.PriorSpec.get_prior": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "espei.priors.build_prior_specs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "espei.priors.PriorSpec",
    "espei.priors.copy",
    "hasattr",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.priors.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "espei.priors.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "espei.priors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.priors.rv_zero": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "espei.priors.rv_zero.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "espei.priors.rv_zero.logpdf": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "espei.priors.triang": {
  "data": {
   "shadows": "scipy.stats.triang"
  },
  "type": "import"
 },
 "espei.priors.uniform": {
  "data": {
   "shadows": "scipy.stats.uniform"
  },
  "type": "import"
 },
 "espei.refdata": {
  "data": {
   "symbols_in_volume": [
    "collections.OrderedDict",
    "espei.refdata.SGTE91",
    "espei.refdata.is_pure_element_expr",
    "pycalphad.variables.T",
    "sympy.And",
    "sympy.Piecewise",
    "sympy.Symbol",
    "sympy.exp",
    "sympy.log"
   ]
  },
  "type": "module"
 },
 "espei.refdata.And": {
  "data": {
   "shadows": "sympy.And"
  },
  "type": "import"
 },
 "espei.refdata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "espei.refdata.Piecewise": {
  "data": {
   "shadows": "sympy.Piecewise"
  },
  "type": "import"
 },
 "espei.refdata.SGTE91": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "espei.refdata.SGTE91Stable": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "espei.refdata.SR2016": {
  "data": {
   "lineno": 768
  },
  "type": "constant"
 },
 "espei.refdata.SR2016Stable": {
  "data": {
   "lineno": 761
  },
  "type": "constant"
 },
 "espei.refdata.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "espei.refdata.T": {
  "data": {
   "shadows": "pycalphad.variables.T"
  },
  "type": "import"
 },
 "espei.refdata.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "espei.refdata.is_pure_element_expr": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "isinstance",
    "sympy.Symbol"
   ]
  },
  "type": "function"
 },
 "espei.refdata.log": {
  "data": {
   "shadows": "sympy.log"
  },
  "type": "import"
 },
 "espei.refdata.pure_element_phases": {
  "data": {
   "lineno": 782
  },
  "type": "constant"
 },
 "espei.refdata.ser_dict": {
  "data": {
   "lineno": 783
  },
  "type": "constant"
 },
 "espei.rstate": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "espei.rstate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.rstate.numpy_rstate": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "espei.run_espei": {
  "data": {
   "shadows": "espei.espei_script.run_espei"
  },
  "type": "import"
 },
 "espei.sublattice_tools": {
  "data": {},
  "type": "module"
 },
 "espei.sublattice_tools.canonical_sort_key": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.canonicalize": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "enumerate",
    "espei.sublattice_tools.canonical_sort_key",
    "espei.sublattice_tools.recursive_tuplify",
    "isinstance",
    "list",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.endmembers_from_interaction": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "espei.sublattice_tools.itertools",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.generate_endmembers": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "espei.sublattice_tools.canonicalize",
    "espei.sublattice_tools.itertools",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.generate_interactions": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "all",
    "espei.sublattice_tools.itertools",
    "espei.sublattice_tools.sorted_interactions",
    "len",
    "list",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.generate_symmetric_group": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "enumerate",
    "espei.sublattice_tools.canonical_sort_key",
    "espei.sublattice_tools.recursive_tuplify",
    "numpy.any",
    "numpy.array",
    "numpy.object",
    "permute",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.generate_symmetric_group.permute": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.interaction_test": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.sublattice_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.sublattice_tools.recursive_tuplify": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_tuplify",
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.recursive_tuplify._tuplify": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_tuplify",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.sorted_interactions": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "espei.sublattice_tools.canonicalize",
    "espei.sublattice_tools.interaction_test",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.sorted_interactions.int_sort_key": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "espei.sublattice_tools.canonical_sort_key",
    "espei.sublattice_tools.recursive_tuplify",
    "isinstance",
    "len",
    "list",
    "range",
    "reversed",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.sublattice_tools.tuplify": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "espei.utils": {
  "data": {
   "symbols_in_volume": [
    "espei.utils.PickleableTinyDB",
    "tinydb.storages.MemoryStorage"
   ]
  },
  "type": "module"
 },
 "espei.utils.BibTexParser": {
  "data": {
   "shadows": "bibtexparser.bparser.BibTexParser"
  },
  "type": "import"
 },
 "espei.utils.Client": {
  "data": {
   "shadows": "distributed.Client"
  },
  "type": "import"
 },
 "espei.utils.ImmediateClient": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "distributed.Client"
   ]
  },
  "type": "class"
 },
 "espei.utils.ImmediateClient.map": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "espei.utils.ImmediateClient",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "espei.utils.MemoryStorage": {
  "data": {
   "shadows": "tinydb.storages.MemoryStorage"
  },
  "type": "import"
 },
 "espei.utils.PickleableTinyDB": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tinydb.TinyDB"
   ]
  },
  "type": "class"
 },
 "espei.utils.PickleableTinyDB.__getstate__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "espei.utils.PickleableTinyDB.__setstate__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tinydb.storages.MemoryStorage"
   ]
  },
  "type": "function"
 },
 "espei.utils.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "espei.utils.TinyDB": {
  "data": {
   "shadows": "tinydb.TinyDB"
  },
  "type": "import"
 },
 "espei.utils.add_bibtex_to_bib_database": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bibtexparser.bparser.BibTexParser",
    "bibtexparser.customization.convert_to_unicode",
    "espei.utils.bibliography_database",
    "espei.utils.bibtexparser",
    "espei.utils.flexible_open_string"
   ]
  },
  "type": "function"
 },
 "espei.utils.bib_marker_map": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "dict",
    "espei.utils.itertools",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.utils.bibliography_database": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "espei.utils.bibtexparser": {
  "data": {
   "shadows": "bibtexparser"
  },
  "type": "import"
 },
 "espei.utils.build_sitefractions": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "pycalphad.variables.SiteFraction",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "espei.utils.convert_to_unicode": {
  "data": {
   "shadows": "bibtexparser.customization.convert_to_unicode"
  },
  "type": "import"
 },
 "espei.utils.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "espei.utils.database_symbols_to_fit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "espei.utils.re",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.utils.flexible_open_string": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "six.string_types",
    "type"
   ]
  },
  "type": "function"
 },
 "espei.utils.formatted_constituent_array": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "espei.utils.formatted_parameter": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "FormattedParameter",
    "ValueError",
    "collections.namedtuple",
    "espei.utils.formatted_constituent_array",
    "espei.utils.parameter_term",
    "isinstance",
    "len",
    "sympy.Symbol",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "espei.utils.get_dask_config_paths": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "espei.utils.dask",
    "espei.utils.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "espei.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "espei.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "espei.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "espei.utils.optimal_parameters": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.argpartition",
    "numpy.nonzero",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "espei.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "espei.utils.parameter_term": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "espei.utils.sympy",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "espei.utils.popget": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "espei.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "espei.utils.sigfigs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.around",
    "numpy.floor",
    "numpy.int",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "espei.utils.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "espei.utils.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "espei.utils.unpack_piecewise": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "espei.utils.sympy",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "espei.utils.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "espei.utils.where": {
  "data": {
   "shadows": "tinydb.where"
  },
  "type": "import"
 },
 "espei.validation": {
  "data": {
   "symbols_in_volume": [
    "espei.validation.ESPEIValidator",
    "espei.validation.MODULE_DIR",
    "espei.validation.os",
    "espei.validation.yaml",
    "open"
   ]
  },
  "type": "module"
 },
 "espei.validation.ESPEIValidator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cerberus.Validator"
   ]
  },
  "type": "class"
 },
 "espei.validation.ESPEIValidator._validate_iseven": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "espei.validation.MODULE_DIR": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "espei.validation.Validator": {
  "data": {
   "shadows": "cerberus.Validator"
  },
  "type": "import"
 },
 "espei.validation.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "espei.validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "espei.validation.schema": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "espei.validation.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "espei.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}