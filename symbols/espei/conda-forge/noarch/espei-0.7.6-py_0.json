{
 "espei": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.addLevelName",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "espei._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "espei.analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.analysis.truncate_arrays": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "espei.citing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.core_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.core_utils._zpf_conditions_shape": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils._zpf_conditions_shape._recursive_shape": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.get_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "copy.deepcopy",
   "espei.sublattice_tools.canonicalize",
   "espei.sublattice_tools.recursive_tuplify",
   "numpy.arange",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "numpy.object",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.core_utils.get_data.recursive_zip": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.get_prop_data": {
  "lineno": 339,
  "symbols_in_volume": [
   "tinydb.Query",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.core_utils.get_samples": {
  "lineno": 73,
  "symbols_in_volume": [
   "espei.parameter_selection.redlich_kister.calc_interaction_product",
   "espei.parameter_selection.redlich_kister.calc_site_fraction_product",
   "itertools.product",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.object"
  ],
  "type": "function"
 },
 "espei.core_utils.get_weights": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "espei.core_utils.ravel_conditions": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "espei.core_utils.ravel_zpf_values": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.recursive_map": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.symmetry_filter": {
  "lineno": 305,
  "symbols_in_volume": [
   "espei.sublattice_tools.canonicalize"
  ],
  "type": "function"
 },
 "espei.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.datasets.DatasetError": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.datasets.add_ideal_exclusions": {
  "lineno": 278,
  "symbols_in_volume": [
   "espei.__version__.split",
   "tinydb.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "espei.datasets.apply_tags": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.isscalar",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.datasets.check_dataset": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "espei.datasets.clean_dataset": {
  "lineno": 173,
  "symbols_in_volume": [
   "espei.core_utils.recursive_map"
  ],
  "type": "function"
 },
 "espei.datasets.load_datasets": {
  "lineno": 309,
  "symbols_in_volume": [
   "espei.utils.PickleableTinyDB",
   "json.load",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "espei.datasets.recursive_glob": {
  "lineno": 336,
  "symbols_in_volume": [
   "fnmatch.filter",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "espei.error_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.error_functions.activity_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.error_functions.activity_error.calculate_activity_error": {
  "lineno": 66,
  "symbols_in_volume": [
   "espei.core_utils.ravel_conditions",
   "logging.debug",
   "numpy.any",
   "numpy.array",
   "numpy.float64",
   "numpy.inf",
   "numpy.isnan",
   "numpy.sum",
   "pycalphad.core.utils.filter_phases",
   "pycalphad.equilibrium",
   "pycalphad.plot.eqplot._map_coord_to_variable",
   "pycalphad.variables.P",
   "pycalphad.variables.Species",
   "pycalphad.variables.T",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.error_functions.activity_error.chempot_error": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "espei.error_functions.activity_error.target_chempots_from_activity": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.log",
   "pycalphad.variables.R"
  ],
  "type": "function"
 },
 "espei.error_functions.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.error_functions.context.setup_context": {
  "lineno": 15,
  "symbols_in_volume": [
   "copy.deepcopy",
   "espei.error_functions.get_thermochemical_data",
   "espei.error_functions.get_zpf_data",
   "espei.utils.database_symbols_to_fit",
   "logging.debug",
   "logging.info",
   "logging.log",
   "pycalphad.codegen.callables.build_callables",
   "pycalphad.core.utils.instantiate_models",
   "pycalphad.variables.N",
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "time.time"
  ],
  "type": "function"
 },
 "espei.error_functions.non_equilibrium_thermochemical_error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.error_functions.non_equilibrium_thermochemical_error.calculate_non_equilibrium_thermochemical_probability": {
  "lineno": 226,
  "symbols_in_volume": [
   "espei.error_functions.zpf_error.update_phase_record_parameters",
   "espei.shadow_functions.calculate_",
   "logging.debug",
   "numpy.array",
   "numpy.sum",
   "scipy.stats.norm.logpdf"
  ],
  "type": "function"
 },
 "espei.error_functions.non_equilibrium_thermochemical_error.calculate_points_array": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "espei.error_functions.non_equilibrium_thermochemical_error.get_prop_samples": {
  "lineno": 67,
  "symbols_in_volume": [
   "espei.core_utils.ravel_conditions",
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.repeat",
   "pycalphad.core.utils.unpack_components"
  ],
  "type": "function"
 },
 "espei.error_functions.non_equilibrium_thermochemical_error.get_thermochemical_data": {
  "lineno": 133,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.core_utils.get_prop_data",
   "espei.utils.database_symbols_to_fit",
   "numpy.array",
   "pycalphad.Model",
   "pycalphad.ReferenceState",
   "pycalphad.codegen.callables.build_phase_records",
   "pycalphad.core.utils.get_pure_elements",
   "pycalphad.core.utils.unpack_components",
   "pycalphad.variables",
   "pycalphad.variables.StateVariable",
   "sympy.S.Zero",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error": {
  "lineno": null,
  "symbols_in_volume": [
   "pycalphad.Database",
   "pycalphad.Model",
   "pycalphad.core.phase_rec.PhaseRecord",
   "pycalphad.variables.Species",
   "pycalphad.variables.StateVariable",
   "pycalphad.variables.X",
   "typing.Dict",
   "typing.NamedTuple",
   "typing.Sequence"
  ],
  "type": "module"
 },
 "espei.error_functions.zpf_error._safe_index": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.error_functions.zpf_error.calculate_zpf_error": {
  "lineno": 272,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.any",
   "numpy.array",
   "numpy.inf",
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.sum",
   "numpy.zeros",
   "scipy.stats.norm.logpdf",
   "typing.Any",
   "typing.Dict",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.driving_force_to_hyperplane": {
  "lineno": 207,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.shadow_functions.calculate_",
   "espei.shadow_functions.equilibrium_",
   "espei.shadow_functions.no_op_equilibrium_",
   "logging.debug",
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.float",
   "numpy.inf",
   "numpy.isnan",
   "numpy.multiply",
   "numpy.nan",
   "numpy.nansum",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.squeeze",
   "pycalphad.variables.X",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.estimate_hyperplane": {
  "lineno": 153,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.shadow_functions.calculate_",
   "espei.shadow_functions.equilibrium_",
   "espei.shadow_functions.no_op_equilibrium_",
   "numpy.all",
   "numpy.any",
   "numpy.float",
   "numpy.full_like",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.ndarray",
   "numpy.sum"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.extract_conditions": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.ndarray",
   "pycalphad.variables",
   "pycalphad.variables.StateVariable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.extract_phases_comps": {
  "lineno": 59,
  "symbols_in_volume": [
   "pycalphad.variables.X"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.get_zpf_data": {
  "lineno": 92,
  "symbols_in_volume": [
   "espei.utils.PickleableTinyDB",
   "pycalphad.Database",
   "pycalphad.codegen.callables.build_phase_records",
   "pycalphad.core.utils.filter_phases",
   "pycalphad.core.utils.instantiate_models",
   "pycalphad.core.utils.unpack_components",
   "pycalphad.variables.N",
   "tinydb.where",
   "typing.Dict",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "espei.error_functions.zpf_error.update_phase_record_parameters": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pycalphad.core.phase_rec.PhaseRecord",
   "typing.Dict"
  ],
  "type": "function"
 },
 "espei.espei_script": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "espei.__version__"
  ],
  "type": "module"
 },
 "espei.espei_script._raise_dask_work_stealing": {
  "lineno": 80,
  "symbols_in_volume": [
   "distributed.config",
   "espei.utils.get_dask_config_paths"
  ],
  "type": "function"
 },
 "espei.espei_script.get_dask_config_paths": {
  "lineno": 65,
  "symbols_in_volume": [
   "dask.config.paths",
   "os.listdir",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "espei.espei_script.get_run_settings": {
  "lineno": 98,
  "symbols_in_volume": [
   "espei.validation.schema.errors",
   "espei.validation.schema.normalized",
   "espei.validation.schema.validate"
  ],
  "type": "function"
 },
 "espei.espei_script.log_version_info": {
  "lineno": 54,
  "symbols_in_volume": [
   "dask.__version__",
   "distributed.__version__",
   "emcee.__version__",
   "espei.__citation__",
   "espei.__version__",
   "logging.debug",
   "logging.info",
   "pycalphad.__version__",
   "symengine.__version__",
   "sympy.__version__"
  ],
  "type": "function"
 },
 "espei.espei_script.main": {
  "lineno": 272,
  "symbols_in_volume": [
   "espei.datasets.DatasetError",
   "espei.datasets.load_datasets",
   "espei.datasets.recursive_glob",
   "json.load",
   "os.path.splitext",
   "sys.argv",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "espei.espei_script.run_espei": {
  "lineno": 131,
  "symbols_in_volume": [
   "distributed.LocalCluster",
   "espei.datasets.add_ideal_exclusions",
   "espei.datasets.apply_tags",
   "espei.datasets.load_datasets",
   "espei.datasets.recursive_glob",
   "espei.generate_parameters",
   "espei.optimizers.opt_mcmc.EmceeOptimizer",
   "espei.utils.ImmediateClient",
   "espei.utils.database_symbols_to_fit",
   "json.load",
   "logging.DEBUG",
   "logging.INFO",
   "logging.WARNING",
   "logging.basicConfig",
   "logging.info",
   "logging.log",
   "logging.warning",
   "multiprocessing.cpu_count",
   "numpy.load",
   "os.path.exists",
   "pycalphad.Database"
  ],
  "type": "function"
 },
 "espei.mcmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.mcmc.mcmc_fit": {
  "lineno": 9,
  "symbols_in_volume": [
   "espei.optimizers.opt_mcmc.EmceeOptimizer",
   "espei.utils.database_symbols_to_fit",
   "warnings.warn"
  ],
  "type": "function"
 },
 "espei.optimizers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.graph.OptGraph": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.optimizers.graph.OptGraph.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.__str__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph._get_next_id": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.add_node": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.get_path_to_node": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptGraph.get_transformation_dict": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptNode": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.optimizers.graph.OptNode.__eq__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__hash__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__repr__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.graph.OptNode.__str__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.opt_base.OptimizerBase": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.optimizers.opt_base.OptimizerBase.__init__": {
  "lineno": 9,
  "symbols_in_volume": [
   "copy.deepcopy",
   "espei.datasets.load_datasets",
   "espei.utils.database_symbols_to_fit",
   "espei.utils.unpack_piecewise"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase._fit": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.commit": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.discard": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.fit": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.predict": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_base.OptimizerBase.reset_database": {
  "lineno": 73,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer._fit": {
  "lineno": 167,
  "symbols_in_volume": [
   "emcee.EnsembleSampler",
   "espei.error_functions.context.setup_context",
   "espei.rstate.numpy_rstate",
   "espei.utils.optimal_parameters",
   "espei.utils.unpack_piecewise",
   "logging.info",
   "logging.log",
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.do_sampling": {
  "lineno": 149,
  "symbols_in_volume": [
   "logging.info",
   "logging.log"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.get_priors": {
  "lineno": 96,
  "symbols_in_volume": [
   "espei.priors.PriorSpec",
   "espei.priors.build_prior_specs",
   "logging.debug",
   "logging.info"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.initialize_chains_from_trace": {
  "lineno": 84,
  "symbols_in_volume": [
   "logging.info",
   "logging.log",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.initialize_new_chains": {
  "lineno": 48,
  "symbols_in_volume": [
   "logging.info",
   "logging.log",
   "numpy.abs",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.tile"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.predict": {
  "lineno": 245,
  "symbols_in_volume": [
   "espei.error_functions.calculate_activity_error",
   "espei.error_functions.calculate_non_equilibrium_thermochemical_probability",
   "espei.error_functions.calculate_zpf_error",
   "logging.debug",
   "logging.log",
   "numpy.array",
   "numpy.float64",
   "numpy.inf",
   "numpy.isneginf",
   "numpy.linalg.LinAlgError",
   "numpy.nan",
   "numpy.sum",
   "time.time"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_mcmc.EmceeOptimizer.save_sampler_state": {
  "lineno": 133,
  "symbols_in_volume": [
   "logging.log",
   "numpy.save"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_scipy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer._fit": {
  "lineno": 15,
  "symbols_in_volume": [
   "espei.error_functions.context.setup_context",
   "espei.utils.unpack_piecewise",
   "numpy.array",
   "numpy.atleast_1d",
   "scipy.optimize.minimize",
   "time.time"
  ],
  "type": "function"
 },
 "espei.optimizers.opt_scipy.SciPyOptimizer.predict": {
  "lineno": 33,
  "symbols_in_volume": [
   "espei.error_functions.calculate_activity_error",
   "espei.error_functions.calculate_non_equilibrium_thermochemical_probability",
   "espei.error_functions.calculate_zpf_error",
   "logging.log",
   "numpy.array",
   "numpy.float64",
   "numpy.inf",
   "numpy.linalg.LinAlgError",
   "time.time"
  ],
  "type": "function"
 },
 "espei.optimizers.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.optimizers.utils.OptimizerError": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.parameter_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.parameter_selection.model_building": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.parameter_selection.model_building.build_candidate_models": {
  "lineno": 85,
  "symbols_in_volume": [
   "espei.sublattice_tools.interaction_test",
   "itertools.chain",
   "itertools.product",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.parameter_selection.model_building.build_feature_sets": {
  "lineno": 32,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.parameter_selection.model_building.make_successive": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.parameter_selection.redlich_kister": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.parameter_selection.redlich_kister.calc_interaction_product": {
  "lineno": 44,
  "symbols_in_volume": [
   "espei.sublattice_tools.interaction_test"
  ],
  "type": "function"
 },
 "espei.parameter_selection.redlich_kister.calc_site_fraction_product": {
  "lineno": 10,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.atleast_1d",
   "numpy.prod"
  ],
  "type": "function"
 },
 "espei.parameter_selection.selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.parameter_selection.selection.fit_model": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "espei.parameter_selection.selection.score_model": {
  "lineno": 44,
  "symbols_in_volume": [
   "logging.log",
   "numpy.abs",
   "numpy.array",
   "numpy.dot",
   "numpy.float",
   "numpy.log",
   "numpy.square"
  ],
  "type": "function"
 },
 "espei.parameter_selection.selection.select_model": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isneginf"
  ],
  "type": "function"
 },
 "espei.parameter_selection.ternary_parameters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix": {
  "lineno": 12,
  "symbols_in_volume": [
   "espei.core_utils.get_samples",
   "espei.parameter_selection.utils.feature_transforms",
   "numpy.empty",
   "numpy.float",
   "pycalphad.variables.T",
   "sympy.Matrix"
  ],
  "type": "function"
 },
 "espei.parameter_selection.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.diff"
  ],
  "type": "module"
 },
 "espei.parameter_selection.utils.get_data_quantities": {
  "lineno": 77,
  "symbols_in_volume": [
   "espei.core_utils.get_samples",
   "espei.utils.build_sitefractions",
   "itertools.chain",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.float",
   "numpy.ones",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.S",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.parameter_selection.utils.shift_reference_state": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.object"
  ],
  "type": "function"
 },
 "espei.paramselect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.paramselect._build_feature_matrix": {
  "lineno": 54,
  "symbols_in_volume": [
   "espei.core_utils.get_samples",
   "espei.parameter_selection.utils.feature_transforms",
   "numpy.empty",
   "numpy.float",
   "pycalphad.variables.T",
   "sympy.Matrix"
  ],
  "type": "function"
 },
 "espei.paramselect._param_present_in_database": {
  "lineno": 43,
  "symbols_in_volume": [
   "espei.sublattice_tools.tuplify",
   "pycalphad.variables.Species",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.paramselect.fit_formation_energy": {
  "lineno": 80,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.core_utils.get_data",
   "espei.core_utils.get_weights",
   "espei.parameter_selection.model_building.build_candidate_models",
   "espei.parameter_selection.selection.select_model",
   "espei.parameter_selection.ternary_parameters.build_ternary_feature_matrix",
   "espei.parameter_selection.utils.get_data_quantities",
   "espei.sublattice_tools.endmembers_from_interaction",
   "espei.sublattice_tools.interaction_test",
   "logging.debug",
   "logging.log",
   "numpy.array",
   "numpy.dot",
   "numpy.object",
   "pycalphad.Model",
   "pycalphad.variables.T",
   "sympy.S.One",
   "sympy.log"
  ],
  "type": "function"
 },
 "espei.paramselect.fit_ternary_interactions": {
  "lineno": 207,
  "symbols_in_volume": [
   "espei.sublattice_tools.generate_interactions",
   "espei.sublattice_tools.generate_symmetric_group",
   "espei.sublattice_tools.tuplify",
   "espei.utils.sigfigs",
   "logging.log",
   "numpy.arange",
   "numpy.object",
   "numpy.zeros",
   "pycalphad.variables",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.paramselect.generate_parameters": {
  "lineno": 438,
  "symbols_in_volume": [
   "logging.info",
   "operator.itemgetter",
   "pycalphad.Database",
   "pycalphad.io.database.Species",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "espei.paramselect.get_next_symbol": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.paramselect.phase_fit": {
  "lineno": 280,
  "symbols_in_volume": [
   "espei.sublattice_tools.generate_endmembers",
   "espei.sublattice_tools.generate_interactions",
   "espei.sublattice_tools.generate_symmetric_group",
   "espei.sublattice_tools.tuplify",
   "espei.utils.sigfigs",
   "logging.info",
   "logging.log",
   "numpy.arange",
   "numpy.object",
   "numpy.zeros",
   "sympy.Add",
   "sympy.Piecewise",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.plot._compare_data_to_parameters": {
  "lineno": 448,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.core_utils.get_samples",
   "espei.sublattice_tools.endmembers_from_interaction",
   "espei.sublattice_tools.recursive_tuplify",
   "espei.utils.bib_marker_map",
   "espei.utils.build_sitefractions",
   "matplotlib.pyplot.figaspect",
   "matplotlib.pyplot.figure",
   "numpy.arange",
   "numpy.array",
   "numpy.float",
   "numpy.linspace",
   "numpy.nonzero",
   "numpy.object",
   "numpy.zeros_like",
   "pycalphad.Model",
   "pycalphad.calculate",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.plot._translate_endmember_to_array": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.zeros",
   "pycalphad.variables",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.plot.dataplot": {
  "lineno": 122,
  "symbols_in_volume": [
   "espei.core_utils.ravel_zpf_values",
   "espei.utils.bib_marker_map",
   "matplotlib.lines.Line2D",
   "matplotlib.pyplot.gca",
   "numpy.atleast_1d",
   "pycalphad.plot.utils.phase_legend",
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "pycalphad.variables.X",
   "tinydb.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "espei.plot.eqdataplot": {
  "lineno": 351,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.asarray",
   "pycalphad.plot.eqplot._map_coord_to_variable",
   "pycalphad.plot.eqplot.unpack_condition"
  ],
  "type": "function"
 },
 "espei.plot.multiplot": {
  "lineno": 398,
  "symbols_in_volume": [
   "pycalphad.equilibrium",
   "pycalphad.plot.eqplot.eqplot"
  ],
  "type": "function"
 },
 "espei.plot.plot_parameters": {
  "lineno": 34,
  "symbols_in_volume": [
   "espei.core_utils.get_data",
   "matplotlib.pyplot.figaspect",
   "matplotlib.pyplot.figure",
   "pycalphad.Model"
  ],
  "type": "function"
 },
 "espei.priors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.priors.DistributionParameter": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.priors.DistributionParameter.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter.__repr__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter._absolute": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter._identity": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter._relative": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter._shift_absolute": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.DistributionParameter._shift_relative": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "espei.priors.DistributionParameter.value": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.PriorSpec": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.priors.PriorSpec.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_normal": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.abs",
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_triangular": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.abs",
   "scipy.stats.triang"
  ],
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_uniform": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.abs",
   "scipy.stats.uniform"
  ],
  "type": "function"
 },
 "espei.priors.PriorSpec._prior_zero": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.PriorSpec.get_prior": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.build_prior_specs": {
  "lineno": 192,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "espei.priors.rv_zero": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.priors.rv_zero.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.priors.rv_zero.logpdf": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.refdata": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise",
   "sympy.Symbol",
   "sympy.exp",
   "sympy.log"
  ],
  "type": "module"
 },
 "espei.refdata.is_pure_element_expr": {
  "lineno": 779,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.rstate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "espei.shadow_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.shadow_functions.calculate_": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.ndarray",
   "pycalphad.Database",
   "pycalphad.Model",
   "pycalphad.core.calculate._compute_phase_values",
   "pycalphad.core.calculate._sample_phase_constitution",
   "pycalphad.core.light_dataset.LightDataset",
   "pycalphad.core.phase_rec.PhaseRecord",
   "pycalphad.core.utils.generate_dof",
   "pycalphad.core.utils.point_sample",
   "pycalphad.core.utils.unpack_kwarg",
   "pycalphad.variables",
   "pycalphad.variables.Species",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "espei.shadow_functions.equilibrium_": {
  "lineno": 70,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.ndarray",
   "pycalphad.core.eqsolver._solve_eq_at_conditions",
   "pycalphad.core.equilibrium._adjust_conditions",
   "pycalphad.core.light_dataset.LightDataset",
   "pycalphad.core.phase_rec.PhaseRecord",
   "pycalphad.core.starting_point.starting_point",
   "pycalphad.core.utils.get_state_variables",
   "pycalphad.variables.Species",
   "pycalphad.variables.StateVariable",
   "typing.Dict",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "espei.shadow_functions.no_op_equilibrium_": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pycalphad.core.equilibrium._adjust_conditions",
   "pycalphad.core.light_dataset.LightDataset",
   "pycalphad.core.phase_rec.PhaseRecord",
   "pycalphad.core.starting_point.starting_point",
   "pycalphad.core.utils.get_state_variables",
   "pycalphad.variables.StateVariable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "espei.sublattice_tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.sublattice_tools.canonical_sort_key": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.canonicalize": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.endmembers_from_interaction": {
  "lineno": 258,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.sublattice_tools.generate_endmembers": {
  "lineno": 269,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.sublattice_tools.generate_interactions": {
  "lineno": 183,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "espei.sublattice_tools.generate_symmetric_group": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "espei.sublattice_tools.generate_symmetric_group.permute": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.roll"
  ],
  "type": "function"
 },
 "espei.sublattice_tools.interaction_test": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.recursive_tuplify": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.recursive_tuplify._tuplify": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.sorted_interactions": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.sorted_interactions.int_sort_key": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.sublattice_tools.tuplify": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "tinydb.storages.MemoryStorage"
  ],
  "type": "module"
 },
 "espei.utils.ImmediateClient": {
  "lineno": 51,
  "symbols_in_volume": [
   "distributed.Client"
  ],
  "type": "class"
 },
 "espei.utils.ImmediateClient.map": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.PickleableTinyDB": {
  "lineno": 32,
  "symbols_in_volume": [
   "tinydb.TinyDB"
  ],
  "type": "class"
 },
 "espei.utils.PickleableTinyDB.__getstate__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.PickleableTinyDB.__setstate__": {
  "lineno": 46,
  "symbols_in_volume": [
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "espei.utils.add_bibtex_to_bib_database": {
  "lineno": 168,
  "symbols_in_volume": [
   "bibtexparser.bparser.BibTexParser",
   "bibtexparser.customization.convert_to_unicode",
   "bibtexparser.loads"
  ],
  "type": "function"
 },
 "espei.utils.bib_marker_map": {
  "lineno": 193,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.utils.build_sitefractions": {
  "lineno": 355,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.utils.database_symbols_to_fit": {
  "lineno": 115,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "espei.utils.flexible_open_string": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.formatted_constituent_array": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.formatted_parameter": {
  "lineno": 296,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sympy.Symbol",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.utils.get_dask_config_paths": {
  "lineno": 431,
  "symbols_in_volume": [
   "dask.config.paths",
   "os.listdir",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "espei.utils.optimal_parameters": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.argpartition",
   "numpy.nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "espei.utils.parameter_term": {
  "lineno": 234,
  "symbols_in_volume": [
   "sympy.Add",
   "sympy.Piecewise",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.utils.popget": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.sigfigs": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.around",
   "numpy.floor",
   "numpy.int",
   "numpy.log10"
  ],
  "type": "function"
 },
 "espei.utils.unpack_piecewise": {
  "lineno": 25,
  "symbols_in_volume": [
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "espei.validation": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "yaml.FullLoader",
   "yaml.load"
  ],
  "type": "module"
 },
 "espei.validation.ESPEIValidator": {
  "lineno": 11,
  "symbols_in_volume": [
   "cerberus.Validator"
  ],
  "type": "class"
 },
 "espei.validation.ESPEIValidator._validate_iseven": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 }
}