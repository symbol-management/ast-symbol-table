{
 "espei": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "warnings.filterwarnings",
   "yaml.load"
  ],
  "type": "module"
 },
 "espei.ESPEIValidator": {
  "lineno": 12,
  "symbols_in_volume": [
   "cerberus.Validator"
  ],
  "type": "class"
 },
 "espei.ESPEIValidator._validate_iseven": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "espei.core_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.core_utils.build_sitefractions": {
  "lineno": 166,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.core_utils.canonical_sort_key": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.canonicalize": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.endmembers_from_interaction": {
  "lineno": 156,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.core_utils.get_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.arange",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "numpy.object",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.core_utils.get_data.recursive_zip": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.get_samples": {
  "lineno": 50,
  "symbols_in_volume": [
   "functools.reduce",
   "itertools.chain",
   "itertools.product",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.object",
   "operator.mul"
  ],
  "type": "function"
 },
 "espei.core_utils.list_to_tuple": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.list_to_tuple._tuplify": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.core_utils.symmetry_filter": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.datasets.DatasetError": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "espei.datasets.check_dataset": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "six.string_types"
  ],
  "type": "function"
 },
 "espei.datasets.load_datasets": {
  "lineno": 141,
  "symbols_in_volume": [
   "espei.utils.PickleableTinyDB",
   "json.load",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "espei.datasets.recursive_glob": {
  "lineno": 167,
  "symbols_in_volume": [
   "fnmatch.filter",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "espei.espei_script": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "module"
 },
 "espei.espei_script.get_run_settings": {
  "lineno": 38,
  "symbols_in_volume": [
   "espei.schema.errors",
   "espei.schema.normalized",
   "espei.schema.validate"
  ],
  "type": "function"
 },
 "espei.espei_script.main": {
  "lineno": 199,
  "symbols_in_volume": [
   "espei.datasets.DatasetError",
   "espei.datasets.load_datasets",
   "espei.datasets.recursive_glob",
   "json.load",
   "os.path.splitext",
   "sys.argv",
   "yaml.load"
  ],
  "type": "function"
 },
 "espei.espei_script.run_espei": {
  "lineno": 71,
  "symbols_in_volume": [
   "distributed.LocalCluster",
   "emcee.interruptible_pool.InterruptiblePool",
   "emcee.utils.MPIPool",
   "espei.datasets.load_datasets",
   "espei.datasets.recursive_glob",
   "espei.generate_parameters",
   "espei.mcmc_fit",
   "espei.utils.ImmediateClient",
   "json.load",
   "logging.DEBUG",
   "logging.INFO",
   "logging.WARNING",
   "logging.basicConfig",
   "logging.debug",
   "logging.info",
   "logging.warning",
   "multiprocessing.cpu_count",
   "numpy.load",
   "os.path.exists",
   "pycalphad.Database",
   "sys.exit"
  ],
  "type": "function"
 },
 "espei.mcmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.mcmc.estimate_hyperplane": {
  "lineno": 17,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "dask.local.get_sync",
   "numpy.all",
   "numpy.any",
   "numpy.float",
   "numpy.full_like",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.squeeze",
   "pycalphad.equilibrium"
  ],
  "type": "function"
 },
 "espei.mcmc.generate_parameter_distribution": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "numpy.tile"
  ],
  "type": "function"
 },
 "espei.mcmc.lnprob": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.inf",
   "numpy.isnan",
   "numpy.linalg.LinAlgError",
   "numpy.sum"
  ],
  "type": "function"
 },
 "espei.mcmc.mcmc_fit": {
  "lineno": 227,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "dask.delayed",
   "emcee.EnsembleSampler",
   "espei.rstate.numpy_rstate",
   "espei.utils.database_symbols_to_fit",
   "espei.utils.optimal_parameters",
   "logging.debug",
   "logging.info",
   "numpy.abs",
   "numpy.array",
   "numpy.nonzero",
   "pycalphad.CompiledModel",
   "sympy.Piecewise",
   "sympy.Symbol",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "espei.mcmc.mcmc_fit.save_sampler_state": {
  "lineno": 309,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.save"
  ],
  "type": "function"
 },
 "espei.mcmc.multi_phase_fit": {
  "lineno": 121,
  "symbols_in_volume": [
   "collections.defaultdict",
   "dask.compute",
   "dask.delayed",
   "dask.local",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.nan",
   "operator.itemgetter",
   "pycalphad.variables",
   "pycalphad.variables.X",
   "tinydb.where"
  ],
  "type": "function"
 },
 "espei.mcmc.multi_phase_fit.safe_get": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.mcmc.tieline_error": {
  "lineno": 46,
  "symbols_in_volume": [
   "dask.local.get_sync",
   "logging.debug",
   "logging.warning",
   "numpy.all",
   "numpy.any",
   "numpy.array",
   "numpy.float",
   "numpy.isnan",
   "numpy.multiply",
   "numpy.nan",
   "numpy.nansum",
   "numpy.ones",
   "numpy.squeeze",
   "pycalphad.calculate",
   "pycalphad.equilibrium",
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "pycalphad.variables.X",
   "textwrap.dedent",
   "time.time"
  ],
  "type": "function"
 },
 "espei.paramselect": {
  "lineno": null,
  "symbols_in_volume": [
   "pycalphad.io.database.Species",
   "pycalphad.variables.T",
   "sympy.diff"
  ],
  "type": "module"
 },
 "espei.paramselect._build_feature_matrix": {
  "lineno": 91,
  "symbols_in_volume": [
   "espei.core_utils.get_samples",
   "numpy.empty",
   "numpy.float",
   "pycalphad.variables.T",
   "sympy.Matrix"
  ],
  "type": "function"
 },
 "espei.paramselect._fit_parameters": {
  "lineno": 53,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "logging.debug",
   "numpy.argmin",
   "numpy.dot",
   "numpy.float",
   "numpy.log",
   "numpy.square",
   "numpy.zeros",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "espei.paramselect._generate_symmetric_group": {
  "lineno": 236,
  "symbols_in_volume": [
   "espei.core_utils.canonical_sort_key",
   "espei.core_utils.list_to_tuple",
   "numpy.any",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "espei.paramselect._generate_symmetric_group.permute": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.roll"
  ],
  "type": "function"
 },
 "espei.paramselect._shift_reference_state": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.object"
  ],
  "type": "function"
 },
 "espei.paramselect.fit_formation_energy": {
  "lineno": 124,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.core_utils.build_sitefractions",
   "espei.core_utils.endmembers_from_interaction",
   "espei.core_utils.get_data",
   "espei.core_utils.get_samples",
   "itertools.chain",
   "itertools.product",
   "logging.debug",
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.dot",
   "numpy.float",
   "numpy.object",
   "numpy.ones",
   "pycalphad.Model",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.S",
   "sympy.S.One",
   "sympy.Symbol",
   "sympy.log"
  ],
  "type": "function"
 },
 "espei.paramselect.generate_parameters": {
  "lineno": 435,
  "symbols_in_volume": [
   "logging.info",
   "operator.itemgetter",
   "pycalphad.Database",
   "pycalphad.io.database.Species",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "espei.paramselect.phase_fit": {
  "lineno": 265,
  "symbols_in_volume": [
   "espei.core_utils.canonicalize",
   "espei.utils.sigfigs",
   "itertools.combinations",
   "itertools.product",
   "logging.debug",
   "logging.info",
   "numpy.arange",
   "numpy.object",
   "numpy.zeros",
   "sympy.Add",
   "sympy.Piecewise",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "espei.paramselect.phase_fit._to_tuple": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.paramselect.phase_fit.bin_int_sort_key": {
  "lineno": 383,
  "symbols_in_volume": [
   "espei.core_utils.canonical_sort_key"
  ],
  "type": "function"
 },
 "espei.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "espei.plot._compare_data_to_parameters": {
  "lineno": 389,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "espei.core_utils.build_sitefractions",
   "espei.core_utils.endmembers_from_interaction",
   "espei.core_utils.get_samples",
   "espei.core_utils.list_to_tuple",
   "espei.utils.bib_marker_map",
   "matplotlib.pyplot.figaspect",
   "matplotlib.pyplot.figure",
   "numpy.arange",
   "numpy.array",
   "numpy.float",
   "numpy.linspace",
   "numpy.nonzero",
   "numpy.object",
   "numpy.zeros_like",
   "pycalphad.Model",
   "pycalphad.calculate",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.plot._translate_endmember_to_array": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.zeros",
   "pycalphad.variables",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "espei.plot.dataplot": {
  "lineno": 121,
  "symbols_in_volume": [
   "cycler.cycler",
   "espei.utils.bib_marker_map",
   "matplotlib.lines.Line2D",
   "matplotlib.pyplot.gca",
   "numpy.all",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "numpy.int",
   "numpy.repeat",
   "numpy.zeros",
   "pycalphad.plot.utils.phase_legend",
   "pycalphad.variables.Composition",
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "tinydb.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "espei.plot.eqdataplot": {
  "lineno": 292,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.asarray",
   "pycalphad.plot.eqplot._map_coord_to_variable",
   "pycalphad.plot.eqplot.unpack_condition"
  ],
  "type": "function"
 },
 "espei.plot.multiplot": {
  "lineno": 339,
  "symbols_in_volume": [
   "pycalphad.equilibrium",
   "pycalphad.plot.eqplot.eqplot"
  ],
  "type": "function"
 },
 "espei.plot.plot_parameters": {
  "lineno": 34,
  "symbols_in_volume": [
   "espei.core_utils.get_data",
   "matplotlib.pyplot.figaspect",
   "matplotlib.pyplot.figure",
   "pycalphad.Model"
  ],
  "type": "function"
 },
 "espei.refdata": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise",
   "sympy.Symbol",
   "sympy.log"
  ],
  "type": "module"
 },
 "espei.rstate": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "espei.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "tinydb.storages.MemoryStorage"
  ],
  "type": "module"
 },
 "espei.utils.ImmediateClient": {
  "lineno": 36,
  "symbols_in_volume": [
   "distributed.Client"
  ],
  "type": "class"
 },
 "espei.utils.ImmediateClient.map": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.PickleableTinyDB": {
  "lineno": 17,
  "symbols_in_volume": [
   "tinydb.TinyDB"
  ],
  "type": "class"
 },
 "espei.utils.PickleableTinyDB.__getstate__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "espei.utils.PickleableTinyDB.__setstate__": {
  "lineno": 31,
  "symbols_in_volume": [
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "espei.utils.add_bibtex_to_bib_database": {
  "lineno": 151,
  "symbols_in_volume": [
   "bibtexparser.bparser.BibTexParser",
   "bibtexparser.customization.convert_to_unicode",
   "bibtexparser.loads"
  ],
  "type": "function"
 },
 "espei.utils.bib_marker_map": {
  "lineno": 176,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "espei.utils.database_symbols_to_fit": {
  "lineno": 99,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "espei.utils.flexible_open_string": {
  "lineno": 118,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "espei.utils.optimal_parameters": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.argpartition",
   "numpy.nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "espei.utils.sigfigs": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.around",
   "numpy.floor",
   "numpy.int",
   "numpy.log10"
  ],
  "type": "function"
 }
}