{
 "parameterized": {
  "data": {},
  "type": "module"
 },
 "parameterized.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "parameterized.parameterized": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "collections.OrderedDict",
    "collections.namedtuple",
    "dict",
    "list",
    "parameterized.parameterized.PY3",
    "parameterized.parameterized.sys",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "parameterized.parameterized.CompatArgSpec": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "parameterized.parameterized.InstanceType": {
  "data": {
   "shadows": "types.InstanceType"
  },
  "type": "import"
 },
 "parameterized.parameterized.MaybeOrderedDict": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "parameterized.parameterized.MethodType": {
  "data": {
   "shadows": "types.MethodType"
  },
  "type": "import"
 },
 "parameterized.parameterized.PY2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "parameterized.parameterized.PY3": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "parameterized.parameterized.QuietOrderedDict": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict.__repr__",
    "dict.__str__"
   ]
  },
  "type": "class"
 },
 "parameterized.parameterized.SkipTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "parameterized.parameterized.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "parameterized.parameterized._param": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "parameterized.parameterized._test_runner_aliases": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "parameterized.parameterized._test_runner_guess": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "parameterized.parameterized._test_runner_override": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "parameterized.parameterized._test_runners": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "parameterized.parameterized.bytes_type": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "parameterized.parameterized.default_class_name_func": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "cls.__name__",
    "parameterized.parameterized.get_class_name_suffix"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.default_doc_func": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "parameterized.parameterized.parameterized_argument_value_pairs",
    "parameterized.parameterized.short_repr",
    "parameterized.parameterized.to_text"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.default_name_func": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "parameterized.parameterized.string_types"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.delete_patches_if_need": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.detect_runner": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "parameterized.parameterized._test_runner_aliases",
    "parameterized.parameterized._test_runner_guess",
    "parameterized.parameterized._test_runner_override",
    "parameterized.parameterized._test_runners",
    "parameterized.parameterized.inspect",
    "reversed"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.get_class_name_suffix": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "isinstance",
    "next",
    "parameterized.parameterized.PY3",
    "parameterized.parameterized.parameterized",
    "parameterized.parameterized.string_types",
    "sorted"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.getargspec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "parameterized.parameterized.CompatArgSpec",
    "parameterized.parameterized.PY2",
    "parameterized.parameterized.inspect"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "parameterized.parameterized.lzip": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "parameterized.parameterized.make_method": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "type",
    "types.MethodType"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "parameterized.parameterized.param": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "parameterized.parameterized._param"
   ]
  },
  "type": "class"
 },
 "parameterized.parameterized.param.__new__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "parameterized.parameterized._param"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.param.__repr__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "parameterized.parameterized.param.explicit": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.param.from_decorator": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "isinstance",
    "parameterized.parameterized.param",
    "parameterized.parameterized.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "parameterized.parameterized.parameterized.__call__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "functools.wraps",
    "input",
    "parameterized.parameterized.skip_on_empty_helper"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.__call__.wrapper": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "TypeError",
    "delattr",
    "enumerate",
    "functools.wraps",
    "issubclass",
    "parameterized.parameterized.param",
    "setattr",
    "type",
    "types.InstanceType"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "input",
    "parameterized.parameterized.default_doc_func"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized._terrible_magic_get_defining_classes": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "eval",
    "len",
    "parameterized.parameterized.inspect"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.assert_not_in_testcase_subclass": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Exception",
    "any",
    "cls",
    "issubclass",
    "unittest.TestCase"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.check_input_values": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "list",
    "parameterized.parameterized.param"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.expand": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "DeprecationWarning",
    "classmethod",
    "parameterized.parameterized.default_doc_func",
    "parameterized.parameterized.default_name_func",
    "parameterized.parameterized.warnings"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.expand.parameterized_expand_wrapper": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "cls.input_as_callable",
    "cls.param_as_standalone_func",
    "doc_func",
    "enumerate",
    "functools.wraps",
    "input",
    "len",
    "name_func",
    "parameterized.parameterized.delete_patches_if_need",
    "parameterized.parameterized.inspect",
    "parameterized.parameterized.reapply_patches_if_need",
    "parameterized.parameterized.skip_on_empty_helper",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.input_as_callable": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "cls.check_input_values",
    "input"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.param_as_nose_tuple": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "parameterized.parameterized.PY2",
    "parameterized.parameterized.detect_runner",
    "parameterized.parameterized.make_method",
    "type"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.param_as_standalone_func": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "func"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.param_as_standalone_func.standalone_func": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized.to_safe_name": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "classmethod",
    "parameterized.parameterized.re",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized_argument_value_pairs": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "parameterized.parameterized.QuietOrderedDict",
    "parameterized.parameterized.getargspec",
    "parameterized.parameterized.lzip",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized_class": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "DeprecationWarning",
    "classname_func",
    "cls",
    "dict",
    "isinstance",
    "parameterized.parameterized.string_types",
    "parameterized.parameterized.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.parameterized_class.decorator": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "class_name_func",
    "delattr",
    "dict",
    "enumerate",
    "list",
    "parameterized.parameterized.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "parameterized.parameterized.reapply_patches_if_need": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "delattr",
    "dummy_wrapper",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.reapply_patches_if_need.dummy_wrapper": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "parameterized.parameterized.reapply_patches_if_need.dummy_wrapper.dummy_func": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "functools.wraps",
    "orgfunc"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.set_test_runner": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TypeError",
    "parameterized.parameterized._test_runner_override",
    "parameterized.parameterized._test_runners"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.short_repr": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "parameterized.parameterized.to_text",
    "repr"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.skip_on_empty_helper": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.string_types": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "parameterized.parameterized.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "parameterized.parameterized.text_type": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "parameterized.parameterized.to_text": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "isinstance",
    "parameterized.parameterized.text_type"
   ]
  },
  "type": "function"
 },
 "parameterized.parameterized.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "parameterized.parameterized.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "parameterized.test": {
  "data": {
   "symbols_in_volume": [
    "detect_runner",
    "param",
    "parameterized.test.NOSE2",
    "parameterized.test.PYTEST",
    "parameterized.test.UNITTEST",
    "parameterized.test.expect",
    "parameterized.test.runner",
    "range",
    "set"
   ]
  },
  "type": "module"
 },
 "parameterized.test.NOSE2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "parameterized.test.PYTEST": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "parameterized.test.SKIP_FLAGS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "parameterized.test.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "parameterized.test.TestNamedParameterizedClass": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "parameterized_class",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestNamedParameterizedClass.test_method": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestOldStyleClass": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "parameterized.test.expect"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestOldStyleClass.test_old_style_classes": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "param",
    "parameterized.expand",
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParamerizedOnTestCase": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParamerizedOnTestCase.test_on_TestCase": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "parameterized.expand",
    "parameterized.test.missing_tests",
    "parameterized.test.test_params"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParamerizedOnTestCase.test_on_TestCase2": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "parameterized.expand",
    "parameterized.test.custom_naming_func",
    "parameterized.test.inspect",
    "parameterized.test.missing_tests",
    "parameterized.test.test_params",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterized": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object",
    "parameterized.test.expect"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterized.test_instance_method": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "parameterized",
    "parameterized.test.missing_tests",
    "parameterized.test.test_params"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClass": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "parameterized_class",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedClass._assertions": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "hasattr",
    "nose.tools.assert_equal",
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClass.testCamelCaseMethodC": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClass.test_method_a": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClass.test_method_b": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClassDict": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "parameterized_class",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedClassDict.setUp": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "parameterized.test.TestParameterizedClassDict",
    "parameterized.test.missing_tests",
    "super"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClassDict.tearDown": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "parameterized.test.TestParameterizedClassDict",
    "parameterized.test.missing_tests",
    "super"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedClassDict.test_method": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedExpandDocstring._assert_docstring": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_equal",
    "parameterized.test.inspect"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_custom_doc_func": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_default_values_get_correct_value": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_empty_docstring": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_multiline_documentation": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_single_line_docstring": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_unicode_docstring": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandDocstring.test_with_leading_newline": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithMockPatchForClass": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "parameterized.test.mock",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedExpandWithMockPatchForClass.test_multiple_function_patch_decorator": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "param",
    "parameterized.expand",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithMockPatchForClass.test_one_function_patch_decorator": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "param",
    "parameterized.expand",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithNoExpand": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "object",
    "parameterized.test.expect",
    "parameterized.test.mock"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedExpandWithNoExpand.test_patch_class_no_expand": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "parameterized",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithNoMockPatchForClass": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "parameterized.test.expect",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedExpandWithNoMockPatchForClass.test_multiple_function_patch_decorator": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "param",
    "parameterized.expand",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithNoMockPatchForClass.test_one_function_patch_decorator": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "param",
    "parameterized.expand",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestParameterizedExpandWithNoMockPatchForClassNoExpand": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "object",
    "parameterized.test.expect"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestParameterizedExpandWithNoMockPatchForClassNoExpand.test_patch_no_expand": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "parameterized",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestSetupTeardown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object",
    "parameterized.test.expect"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestSetupTeardown.setUp": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "parameterized.test.TestSetupTeardown.tearDown": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestSetupTeardown.test_setup": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "parameterized",
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.TestUnicodeDocstring": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "parameterized.test.TestUnicodeDocstring.test_with_docstring": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.UNITTEST": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "parameterized.test.assert_contains": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "parameterized.test.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "parameterized.test.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "parameterized.test.cases_over_10": {
  "data": {
   "lineno": 441
  },
  "type": "constant"
 },
 "parameterized.test.custom_naming_func": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "parameterized.test.custom_naming_func.custom_naming_func": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "param.args",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.expect": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "any",
    "parameterized.test.SKIP_FLAGS",
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "parameterized.test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "parameterized.test.missing_tests": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "parameterized.test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "parameterized.test.runner": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "parameterized.test.tearDownModule": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "parameterized.test.missing_tests",
    "sorted"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_cases_over_10": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "input",
    "nose.tools.assert_equal",
    "parameterized",
    "parameterized.test.cases_over_10"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_helpful_error_on_empty_iterable_input": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "parameterized",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_helpful_error_on_empty_iterable_input_expand": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_helpful_error_on_empty_iterable_input_expand.ExpectErrorOnEmptyInput": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.test_helpful_error_on_empty_iterable_input_expand.ExpectErrorOnEmptyInput.test_expect_error": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_helpful_error_on_invalid_parameters": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "parameterized",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_helpful_error_on_non_iterable_input": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "parameterized",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_mock_patch_standalone_function": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "parameterized",
    "parameterized.test.missing_tests",
    "parameterized.test.mock"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_naked_function": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "parameterized",
    "parameterized.test.missing_tests",
    "parameterized.test.test_params"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_old_style_classes": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "AssertionError",
    "OldStyleClass",
    "SkipTest",
    "TypeError",
    "list",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_old_style_classes.OldStyleClass": {
  "data": {
   "lineno": 376
  },
  "type": "class"
 },
 "parameterized.test.test_old_style_classes.OldStyleClass.parameterized_method": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_parameterized_argument_value_pairs": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "eval",
    "nose.tools.assert_equal",
    "param",
    "parameterized",
    "parameterized_argument_value_pairs"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_params": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "parameterized.test.test_short_repr": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "input",
    "nose.tools.assert_equal",
    "parameterized",
    "short_repr"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_skip_test_on_empty_iterable": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parameterized"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_warns_when_using_parameterized_with_TestCase": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_warns_when_using_parameterized_with_TestCase.TestTestCaseWarnsOnBadUseOfParameterized": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parameterized.test.test_warns_when_using_parameterized_with_TestCase.TestTestCaseWarnsOnBadUseOfParameterized.test_in_subclass_of_TestCase": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_with_docstring": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "parameterized.test.test_wrapped_iterable_input": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "iter",
    "parameterized",
    "parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 }
}