{
 "ndarray_listener": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "ndarray_listener.ndarray_listener": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.__array_finalize__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.__new__": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.__notify": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.__setattr__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.__setitem__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.ndarray_listener.ndarray_listener.talk_to": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.test": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "ndarray_listener.test.test_ndarray_listener": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ndarray_listener.test.test_ndarray_listener.test_notification": {
  "lineno": 20,
  "symbols_in_volume": [
   "ndarray_listener.ndarray_listener",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "ndarray_listener.test.test_ndarray_listener.test_notification.Watcher": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ndarray_listener.test.test_ndarray_listener.test_notification.Watcher.__call__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.test.test_ndarray_listener.test_notification.Watcher.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ndarray_listener.test.test_ndarray_listener.test_operations": {
  "lineno": 9,
  "symbols_in_volume": [
   "ndarray_listener.ndarray_listener",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 }
}