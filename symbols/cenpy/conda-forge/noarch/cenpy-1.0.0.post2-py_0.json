{
 "cenpy": {
  "data": {
   "symbols_in_volume": [
    "_load_sitekey"
   ]
  },
  "type": "module"
 },
 "cenpy.SITEKEY": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "cenpy._APIConnection": {
  "data": {
   "shadows": "APIConnection"
  },
  "type": "import"
 },
 "cenpy.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "cenpy.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "cenpy.explorer": {
  "data": {
   "symbols_in_volume": [
    "cenpy.explorer.os",
    "cenpy.explorer.raw_APIs",
    "cenpy.explorer.six",
    "json.JSONDecodeError",
    "requests.HTTPError",
    "requests.get",
    "six.iteritems",
    "str"
   ]
  },
  "type": "module"
 },
 "cenpy.explorer.APIs": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "cenpy.explorer.JSONDecodeError": {
  "data": {
   "shadows": "json.JSONDecodeError"
  },
  "type": "import"
 },
 "cenpy.explorer._delist": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "cenpy.explorer._parse_results_table_from_response": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "cenpy.explorer.raw_APIs",
    "dict",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.explorer.available": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "cenpy.explorer.APIs",
    "cenpy.explorer._parse_results_table_from_response",
    "cenpy.explorer.raw_APIs"
   ]
  },
  "type": "function"
 },
 "cenpy.explorer.diter": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "cenpy.explorer.explain": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "cenpy.explorer.APIs"
   ]
  },
  "type": "function"
 },
 "cenpy.explorer.fips_table": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "KeyError",
    "cenpy.explorer.fp",
    "cenpy.explorer.unicode",
    "len",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "cenpy.explorer.fp": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "cenpy.explorer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cenpy.explorer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cenpy.explorer.r": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "cenpy.explorer.raw_APIs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "cenpy.explorer.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cenpy.explorer.unicode": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "cenpy.geoparser": {
  "data": {},
  "type": "module"
 },
 "cenpy.geoparser.MultiPolygon": {
  "data": {
   "shadows": "shapely.geometry.MultiPolygon"
  },
  "type": "import"
 },
 "cenpy.geoparser.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "cenpy.geoparser.TopologicalError": {
  "data": {
   "shadows": "shapely.geos.TopologicalError"
  },
  "type": "import"
 },
 "cenpy.geoparser._get_polygon_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "cenpy.geoparser._parse_clockwise_sequence",
    "len",
    "libpysal.cg.is_clockwise",
    "list",
    "map",
    "sum"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser._is_cw": {
  "data": {
   "shadows": "libpysal.cg.is_clockwise"
  },
  "type": "import"
 },
 "cenpy.geoparser._parse_clockwise_sequence": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "libpysal.cg.is_clockwise",
    "list",
    "map",
    "zip"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.cascaded_union": {
  "data": {
   "shadows": "shapely.ops.cascaded_union"
  },
  "type": "import"
 },
 "cenpy.geoparser.convert_geometries": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KeyError",
    "cenpy.geoparser.parse_polygon",
    "pandas.Series",
    "shapely.geometry.MultiLineString",
    "shapely.geometry.MultiPoint",
    "shapely.geometry.Point",
    "shapely.geometry.__dict__"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.esriGeometryPoint": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.esriGeometryPolyLine": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "cenpy.geoparser.esriGeometryPolygon": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "cenpy.geoparser.esriMultiPoint": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "cenpy.geoparser.explain_validity": {
  "data": {
   "shadows": "shapely.validation.explain_validity"
  },
  "type": "import"
 },
 "cenpy.geoparser.fix_rings": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argsort",
    "numpy.asarray",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Polygon",
    "shapely.ops.cascaded_union",
    "shapely.validation.explain_validity",
    "sum",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.fix_rings.tell_user": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "shapely.geos.TopologicalError"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.g": {
  "data": {
   "shadows": "shapely.geometry"
  },
  "type": "import"
 },
 "cenpy.geoparser.geom": {
  "data": {
   "shadows": "shapely.geometry"
  },
  "type": "import"
 },
 "cenpy.geoparser.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cenpy.geoparser.parse_polygon": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "cenpy.geoparser._get_polygon_type",
    "cenpy.geoparser.fix_rings",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "cenpy.geoparser.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cenpy.geoparser.tell_user": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "cenpy.geoparser.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "cenpy.remote": {
  "data": {
   "symbols_in_volume": [
    "six.PY3",
    "str"
   ]
  },
  "type": "module"
 },
 "cenpy.remote.APIConnection": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "cenpy.remote.APIConnection.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "ValueError",
    "_load_sitekey",
    "cenpy.remote.unicode",
    "list",
    "pandas.DataFrame",
    "requests.HTTPError",
    "requests.get",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection.__repr__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection._bigcolq": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "cenpy.remote.math",
    "len",
    "list",
    "numpy.array_split",
    "pandas.DataFrame",
    "pandas.concat",
    "print"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection.explain": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection.query": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "cenpy.remote.ParseException",
    "json.JSONDecodeError",
    "len",
    "map",
    "pandas.DataFrame",
    "requests.HTTPError",
    "requests.get",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection.set_mapservice": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.APIConnection.varslike": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "cenpy.remote.fnmatch",
    "cenpy.remote.re",
    "engine"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.JSONDecodeError": {
  "data": {
   "shadows": "json.JSONDecodeError"
  },
  "type": "import"
 },
 "cenpy.remote.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "cenpy.remote.ParseException": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "cenpy.remote.ParseException.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "cenpy.remote.exp": {
  "data": {
   "shadows": "explorer"
  },
  "type": "import"
 },
 "cenpy.remote.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "cenpy.remote.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "cenpy.remote.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "cenpy.remote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cenpy.remote.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cenpy.remote.r": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "cenpy.remote.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "cenpy.remote.tig": {
  "data": {
   "shadows": "tiger"
  },
  "type": "import"
 },
 "cenpy.remote.unicode": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "cenpy.tiger": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError"
   ]
  },
  "type": "module"
 },
 "cenpy.tiger.ESRILayer": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cenpy.tiger.ESRILayer.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "hasattr",
    "pandas.DataFrame",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger.ESRILayer.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "cenpy.tiger.ESRILayer.query": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "KeyError",
    "cenpy.tiger._basequery",
    "cenpy.tiger.copy",
    "dict",
    "enumerate",
    "geopandas.GeoDataFrame",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "requests.get",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "cenpy.tiger.TigerConnection": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "cenpy.tiger.TigerConnection.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "KeyError",
    "cenpy.tiger._baseurl",
    "cenpy.tiger._jget",
    "cenpy.tiger.available"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger.TigerConnection._get_layers": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "cenpy.tiger.ESRILayer",
    "cenpy.tiger._jget"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger.TigerConnection.query": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception",
    "_fuzzy_match",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger._basequery": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "cenpy.tiger._baseurl": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "cenpy.tiger._bcs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "cenpy.tiger._jget": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "requests.get"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger._pcs": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "cenpy.tiger.available": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "cenpy.tiger._baseurl",
    "cenpy.tiger._jget",
    "enumerate",
    "print"
   ]
  },
  "type": "function"
 },
 "cenpy.tiger.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "cenpy.tiger.diter": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "cenpy.tiger.gpsr": {
  "data": {
   "shadows": "geoparser"
  },
  "type": "import"
 },
 "cenpy.tiger.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cenpy.tiger.r": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "cenpy.tools": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "str"
   ]
  },
  "type": "module"
 },
 "cenpy.tools.HTTPError": {
  "data": {
   "shadows": "requests.HTTPError"
  },
  "type": "import"
 },
 "cenpy.tools._ft": {
  "data": {
   "shadows": "fips_table"
  },
  "type": "import"
 },
 "cenpy.tools._load_sitekey": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "FileNotFoundError",
    "cenpy.tools.os",
    "open"
   ]
  },
  "type": "function"
 },
 "cenpy.tools._state_fipscodes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "cenpy.tools.county_to_block": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "cenpy.tools.gencounty_to_block",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "waitfunc"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.gencounty_to_block": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "dict",
    "list",
    "str",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.genstate_to_block": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "list",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.genstate_to_blockgroup": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "list",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.genstate_to_tract": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "list",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.national_to_block": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "cenpy.tools._state_fipscodes",
    "cenpy.tools.state_to_block",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "print",
    "requests.HTTPError",
    "tqdm.tqdm",
    "waitfunc",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.national_to_blockgroup": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "cenpy.tools._state_fipscodes",
    "cenpy.tools.state_to_blockgroup",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "requests.HTTPError",
    "waitfunc",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.national_to_tract": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "cenpy.tools._state_fipscodes",
    "cenpy.tools.state_to_tract",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "requests.HTTPError",
    "waitfunc",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cenpy.tools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "cenpy.tools.set_sitekey": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "FileError",
    "cenpy.tools.os",
    "open"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.state_to_block": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "cenpy.tools.genstate_to_block",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "waitfunc"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.state_to_blockgroup": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "cenpy.tools.genstate_to_blockgroup",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "waitfunc"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.state_to_tract": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "cenpy.tools.genstate_to_tract",
    "cenpy.tools.time",
    "float",
    "int",
    "isinstance",
    "pandas.concat",
    "waitfunc"
   ]
  },
  "type": "function"
 },
 "cenpy.tools.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "cenpy.tools.tqdm": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "cenpy.tools.warn": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}